{"version":3,"sources":["../src/music21/sites.js","../src/music21/bar.js","../src/music21/chordTables.js","../src/music21/scale.js","../src/music21/musicxml/m21ToXml.js","../src/music21/stream.js","../src/music21/musicxml/xmlToM21.js","../src/music21/converter.js","../src/music21/exceptions21.js","../src/music21/debug.js","../src/music21/common.js","../src/music21/prebase.js","../src/music21/derivation.js","../src/music21/duration.js","../src/music21/base.js","../src/music21/articulations.js","../src/music21/audioSearch.js","../src/music21/audioRecording.js","../src/music21/beam.js","../src/music21/pitch.js","../src/music21/note.js","../src/music21/interval.js","../src/music21/chord.js","../src/music21/clef.js","../src/music21/key.js","../src/music21/meter.js","../src/music21/instrument.js","../src/music21/renderOptions.js","../src/music21/vfShow.js","../src/music21/stream/filters.js","../src/music21/stream/iterator.js","../src/music21/tie.js","../src/music21/dynamics.js","../src/music21/expressions.js","../src/music21/figuredBass.js","../src/music21/fromPython.js","../src/music21/harmony.js","../src/music21/miditools.js","../src/music21/keyboard.js","../src/music21/layout.js","../src/music21/musicxml.js","../src/music21/roman.js","../src/music21/tempo.js","../src/music21/tinyNotation.js","../src/music21/voiceLeading.js","../src/music21/webmidi.js","../src/loadModules.js"],"names":["getId","obj","GLOBAL_SITE_STATE_DICT","has","newId","_singletonCounter","call","set","get","styleToMusicXMLBarStyle","value","undefined","reverseBarStyleDict","standardizeBarStyle","toLowerCase","barStyleList","includes","barStyleDict","BarException","forteIndexToInversionsAvailable","card","index","Error","TNMAX","FORTE","_chordTableAddress","cardinality","forteClass","inversion","pcOriginal","_validateAddress","address","_address$slice","slice","_address$slice2","slicedToArray","length","inversionsAvailable","addressToTransposedNormalForm","_validateAddress2","_validateAddress3","i2","String","SCDICT","addressToPrimeForm","_validateAddress4","_validateAddress5","addressToIntervalVector","_validateAddress6","_validateAddress7","intervalVectorToAddress","vector","post","num","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","sc","common","arrayEquals","push","err","return","addressToZAddress","_validateAddress8","_validateAddress9","z","zReal","Array","isArray","zAddress","addressToCommonNames","addressNew","SCREF","name","addressToForteName","classification","arguments","_validateAddress10","_validateAddress11","iStr","seekChordTablesAddress","c","pcSet","orderedPitchClasses","candidates","rot","testSetOrig","rotRemainder","testSetOriginalPC","testSet","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","x","zeroTransposed","posMod","testSetInvert","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","reverse","testSetInvertOriginalPC","i","candidateTuple","match","matchedPCOriginal","indexCandidate","dataLine","dataLinePcs","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_step4$value","candidate","candidateInversion","candidateOriginalPC","SimpleDiatonicScale","tonic","scaleSteps","pitch","Pitch","Music21Exception","gi","interval","GenericInterval","pitches","lastPitch","di","DiatonicInterval","ii","Interval","newPitch","transposePitch","debug","console","log","ScaleSimpleMajor","ScaleSimpleMinor","minorType","replace","typeToMusicXMLType","MusicXMLExportException","normalizeColor","color","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","startsWith","toUpperCase","_exportMusicXMLAsText","s","GeneralObjectExporter","parse","hyphenToCamelCase","tag","firstLetter","seta","m21El","xmlEl","attributeName","transform","$matchEl","$","children","contents","eq","text","txt","MusicXMLScoreParser","scoreFromText","ExtendableError","message","classCallCheck","this","_this","possibleConstructorReturn","__proto__","Object","getPrototypeOf","constructor","captureStackTrace","stack","_ExtendableError","apply","inherits","StreamException","_Music21Exception","merge","mergeRecursive","destination","source","p","hasOwnProperty","e","range","start","stop","step","count","Math","ceil","map","mixin","OtherParent","thisClassOrObject","proto","classProto","key","keys","aggregation","baseClass","_len","mixins","_key","base","_baseClass","_ref","_len2","args","_key2","concat","forEach","copyProps","target","getOwnPropertyNames","getOwnPropertySymbols","prop","defineProperty","getOwnPropertyDescriptor","prototype","a","b","statisticalMode","modeMap","maxEl","maxCount","el","fromRoman","inputRoman","subtractionValues","nums","ints","places","indexOf","summation","toRoman","_typeof","result","floor","repeat","makeSVGright","attrs","document","createElementNS","k","setAttribute","ordinalAbbreviation","plural","valueHundreths","valueMod","rationalize","ql","epsilon","maxDenominator","abs","round","numerator","denominator","stripPx","str","pxIndex","parseInt","urlParam","regex","RegExp","results","exec","location","search","decodeURIComponent","a1","a2","SingletonCounter","createClass","setWindowVisibilityWatcher","callback","windowFocusChanged","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","window","event","callbackState","type","hidden","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","visibilityState","urls","css","webResources","midiPlayer","soundfontUrl","usrStr","all","numToIntOrFloat","intVal","prebase","ProtoM21Object","_storedClasses","isProtoM21Object","isMusic21Object","_cloneCallbacks","deep","memo","babelHelpers.extends","create","ret","WeakMap","babelHelpers.typeof","m21Obj","clonedVersion","clone","TypeError","testClass","classes","classList","thisConstructor","maxLinks","Derivation","client","method","origin","newThing","regeneratorRuntime","mark","chain","wrap","_context","prev","derivation","derivationChain","from","duration","typeFromNumDict","1","2","4","8","16","32","64","128","256","512","1024","0","0.5","0.25","0.125","0.0625","quarterTypeIndex","ordinalTypeFromNum","vexflowDurationArray","Duration","_prebase$ProtoM21Obje","_quarterLength","_dots","_durationNumber","_type","_tuplets","quarterLength","cloneCallbacksTupletFunction","tupletKey","newTuplets","newTuplet","typeNumber","powerOfTwo","pow","dotsNum","dotMultiplier","durationMultiplier","undottedQuarterLength","dottedMultiplier","unTupletedQl","tupletCorrectedQl","tuplet","tupletMultiplier","_findDots","tupletRatio","ratioRat","t","Tuplet","appendTuplet","skipUpdateQl","frozen","updateQlFromFeatures","numDots","updateFeaturesFromQl","typeIn","vd","dots","_prebase$ProtoM21Obje2","numberNotesActual","numberNotesNormal","durationActual","durationNormal","_this2","bracket","placement","tupletActualShow","tupletNormalShow","actual","normal","lengthActual","totalTupletLength","numActual","numNormal","ordStr","toString","SitesException","SiteRef","isDead","classString","globalSiteIndex","siteIndex","site","_NoneSiteRef","Sites","siteDict","Map","_siteIndex","_lastID","checkSite","_step$value","newFirst","_step2$value","siteRef","keyVal","sort","innerList","idKey","updateNotAdd","tempSiteRef","delete","yieldSites","keyRepository","priorityId","sortByCreationTime","priorityTarget","excludeNone","_keysByTime","splice","pop","t0","finish","attrName","className","options","params","callerFirst","getElementMethod","objs","classNameIsStr","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","objId","getContextByClass","size","Music21Object","keywords","classSortOrder","_activeSite","_naiveOffset","_duration","_derivation","_priority","id","sites","groups","isStream","keyName","newObj","self","newDerivation","other","stringReturns","elementOffset","setElementOffset","getOffsetBySite","contextSites","csSite","csOffset","payloadExtractor","useSite","flatten","positionStart","lastElement","thisElement","_elements","indexOffset","matchClass","isClassOrSubclass","activeSite","potentialElement","returnSortTuples","searchType","contextEl","recursionType","topLevel","siteObj","offsetInStream","newOffset","positionInStream","_recursionType","newParams","_step6$value","topLevelInner","inStreamPos","recurType","inStreamOffset","derivatedObject","_step5$value","derivedSite","derivedOffset","derivedRecurseType","offsetAdjustedCsTuple","offsetAppend","followDerivation","sortByCreationType","abrupt","t1","t2","t3","_activeSiteStoredOffset","number","m","getObjByClass","newDuration","articulations","Articulation","vexflowModifier","setPosition","dynamicScale","lengthScale","vfa","Vex","Flow","LengthArticulation","_Articulation","DynamicArticulation","_Articulation2","_this3","PitchArticulation","_Articulation3","_this4","TimbreArticulation","_Articulation4","_this5","Accent","_DynamicArticulation","_this6","StrongAccent","_Accent","_this7","Staccato","_LengthArticulation","_this8","Staccatissimo","_Staccato","_this9","Spiccato","_Staccato2","_this10","Marcato","_DynamicArticulation2","_this11","Tenuto","_LengthArticulation2","_this12","audioSearch","fftSize","AudioContextCaller","AudioContext","webkitAudioContext","_audioContext","animationFrameCallbackId","defineProperties","audioContext","MIDI","WebAudio","getContext","globalAudioContext","ac","getUserMedia","dictionary","error","alert","mediaStream","userMediaStarted","n","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","audio","mandatory","optional","sampleBuffer","currentAnalyser","audioStream","Float32Array","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","connect","animateLoop","minFrequency","maxFrequency","time","getFloatTimeDomainData","frequencyDetected","autoCorrelate","sampleRate","sampleCallback","requestAnimationFrame","pitchSmoothingSize","lastPitchClassesDetected","lastPitchesDetected","lastCentsDeviationsDetected","smoothPitchExtraction","frequency","shift","_audioSearch$midiNumD","midiNumDiffFromFrequency","_audioSearch$midiNumD2","midiNum","centsOff","mostCommonPitchClass","pitchesMatchingClass","centsMatchingClass","mostCommonPitch","totalSamplePoints","totalSample","j","weight","_audioSearch$smoothPi","_audioSearch$smoothPi2","buf","SIZE","MAX_SAMPLES","best_offset","best_correlation","rms","foundGoodCorrelation","correlations","val","sqrt","lastCorrelation","offset","correlation","offsetFrequency","midiNumFloat","Recorder","cfg","config","bufferLen","recording","currCallback","frequencyCanvasInfo","width","height","canvasContext","animationFrameID","waveformCanvasInfo","analyserNode","polyfillNavigator","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","audioStreamConnected","stream","inputPoint","createGain","connectSource","zeroGain","gain","context","setNode","workerBlob","Blob","recorderWorkerJs","workerURL","URL","createObjectURL","worker","Worker","onmessage","blob","data","revokeObjectURL","postMessage","command","node","onaudioprocess","buffer","inputBuffer","getChannelData","createScriptProcessor","createJavaScriptNode","cb","isMono","setupDownload","Date","now","exportWAV","filename","elementId","url","webkitURL","link","getElementById","href","download","AnalyserNode","uint8","Uint8Array","array","getByteTimeDomainData","imax","canvas","numBars","freqByteData","frequencyBinCount","getByteFrequencyData","clearRect","fillStyle","lineCap","multiplier","magnitude","fillRect","updateAnalysers","buffers","amp","min","max","datum","numFrames","audioBuffer","createBuffer","channel","thisChannelBuffer","createBufferSource","audioRecording","light-light","light-heavy","double","final","Barline","_base$Music21Object","beam","validBeamTypes","continue","partial","beamableDurationTypes","Beam","direction","independentAngle","Beams","beamsList","feathered","srcList","isRest","fill","beamLast","beamNext","allTypes","getTypes","hasStart","hasStop","bThis","bNext","bThisNum","getNumbers","thisNum","thisBeam","getByNumber","nextBeam","bPrev","prevBeam","level","setAll","numbers","beamObj","types","splitit","split","Accidental","accName","_name","_alter","_modifier","_unicodeModifier","displayType","displayStatus","alter","modifier","nameToMidi","C","D","E","F","G","A","B","nameToSteps","stepsToName","midiToName","pn","_octave","_accidental","spellingIsInferred","ps","nameWithOctave","inPlace","directionInt","octaveStored","octave","diatonicNoteNum","accidental","microtone","_getEnharmonicHelper","clefObj","tempPitch","convertPitchToTreble","accidentalType","o","nn","tempAccidental","storedOctave","newDNN","accidentalAlter","unicodeModifier","unicodeName","note","noteheadTypeNames","stemDirectionNames","Lyric","syllabic","applyRaw","identifier","lyricConnector","_number","setTextAndSyllabic","_identifier","style","strokeStyle","fontFamily","fontSize","fontWeight","rawText","GeneralNote","isChord","volume","activeVexflowNote","expressions","lyrics","tie","lyricNumber","lyricIdentifier","maxLyrics","newLyric","foundLyric","thisLyric","clef","vfn","addDotToAll","stemDirection","hasStem","staveDNNSpacing","stave","spacing_between_lines_px","midLine","lowestLine","absDNNfromCenter","absOverOctave","getStemLength","stemHeight","setStemLength","tempo","nextElement","inst","instrument","midiVolume","midiChannel","milliseconds","midNum","midi","stopTime","noteOn","noteOff","_notes","isNaN","NotRest","_GeneralNote","notehead","noteheadFill","noteheadColor","noteheadParenthesis","beams","Note","_NotRest","isNote","DNNfromCenter","renderOptions","setStemDirectionFromClef","vfd","vexflowDuration","vexflowKey","vexflowName","vfnStemDirection","StaveNote","STEM_DOWN","STEM_UP","stem_direction","vexflowAccidentalsAndDisplay","addAccidental","art","addArticulation","vexflow","exp","setStyle","Rest","_GeneralNote2","lineShift","keyLine","staffLines","ls","Direction","DESCENDING","OBLIQUE","ASCENDING","IntervalDirectionTerms","MusicOrdinals","directed","undirected","isSkip","isDiatonicStep","isStep","isUnison","tempSteps","tempOctaves","simpleUndirected","undirectedOctaves","semiSimpleUndirected","octaves","simpleDirected","semiSimpleDirected","perfectable","niceName","simpleNiceName","semiSimpleNiceName","staffDistance","mod7inversion","mod7","specifier","pitch2","oldDiatonicNum","distanceToMove","newDiatonicNumber","_interval$convertDiat","convertDiatonicNumberToStep","_interval$convertDiat2","newStep","newOctave","IntervalSpecifiersEnum","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","DBLAUG","DBLDIM","TRPAUG","TRPDIM","QUADAUG","QUADDIM","IntervalNiceSpecNames","IntervalPrefixSpecs","IntervalOrderedPerfSpecs","IntervalPerfSpecifiers","QUADDMIN","IntervalPerfOffset","IntervalOrderedImperfSpecs","IntervalSpecifiers","IntervalMajOffset","IntervalSemitonesGeneric","3","5","6","7","IntervalAdjustPerfect","P","AA","AAA","AAAA","d","dd","ddd","dddd","IntervalAdjustImperf","M","generic","diatonicDirectionNiceName","simpleName","semiSimpleName","directedName","directedNiceName","directedSimpleName","directedSimpleNiceName","directedSemiSimpleName","directedSemiSimpleNiceName","semiSimpleNameName","specificName","orderedSpecifierIndex","invertedOrderedSpecIndex","invertedOrderedSpecifier","octaveOffset","semitonesStart","specName","semitonesAdjust","semitones","ChromaticInterval","getChromatic","cents","_prebase$ProtoM21Obje3","mod12","intervalClass","isChromaticStep","useImplicitOctave","pps","IntervalStepNames","dn","stepNumber","_prebase$ProtoM21Obje4","noteStart","noteEnd","restArgs","arg0","gI","dI","diatonic","chromatic","n1","n2","p1","p2","gInt","notesToGeneric","cInt","notesToChromatic","intervalsToDiatonic","_noteStart","_noteEnd","reinit","diatonicType","_ref$reverse","maxAccidental","halfStepsToFix","intervalFromGenericAndChromatic","_getSpecifierFromGenericChromatic","dInt","staffDist","genDist","convertStaffDistanceToInterval","noteVals","normalSemis","theseSemis","semisRounded","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","monad","diad","trichord","tetrachord","pentachord","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50","hexachord","septachord","octachord","nonachord","decachord","undecachord","dodecachord","card_1","1,0","card_2","2,0","3,0","4,0","5,0","6,0","card_3","2,1","2,-1","3,1","3,-1","4,1","4,-1","5,1","5,-1","7,1","7,-1","8,1","8,-1","9,0","10,0","11,1","11,-1","12,0","card_4","7,0","8,0","12,1","12,-1","13,1","13,-1","14,1","14,-1","15,1","15,-1","16,1","16,-1","17,0","18,1","18,-1","19,1","19,-1","20,0","21,0","22,1","22,-1","23,0","24,0","25,0","26,0","27,1","27,-1","28,0","29,1","29,-1","card_5","6,1","6,-1","9,1","9,-1","10,1","10,-1","15,0","20,1","20,-1","21,1","21,-1","22,0","23,1","23,-1","24,1","24,-1","25,1","25,-1","26,1","26,-1","28,1","28,-1","30,1","30,-1","31,1","31,-1","32,1","32,-1","33,0","34,0","35,0","36,1","36,-1","37,0","38,1","38,-1","card_6","13,0","17,1","17,-1","29,0","32,0","33,1","33,-1","34,1","34,-1","38,0","39,1","39,-1","40,1","40,-1","41,1","41,-1","42,0","43,1","43,-1","44,1","44,-1","45,0","46,1","46,-1","47,1","47,-1","48,0","49,0","50,0","card_7","card_8","card_9","card_10","card_11","card_12","9","10","11","12","TNIMAX","TNREF","1,1,0","2,1,0","2,2,0","2,3,0","2,4,0","2,5,0","2,6,0","3,1,0","3,2,1","3,2,-1","3,3,1","3,3,-1","3,4,1","3,4,-1","3,5,1","3,5,-1","3,6,0","3,7,1","3,7,-1","3,8,1","3,8,-1","3,9,0","3,10,0","3,11,1","3,11,-1","3,12,0","4,1,0","4,2,1","4,2,-1","4,3,0","4,4,1","4,4,-1","4,5,1","4,5,-1","4,6,0","4,7,0","4,8,0","4,9,0","4,10,0","4,11,1","4,11,-1","4,12,1","4,12,-1","4,13,1","4,13,-1","4,14,1","4,14,-1","4,15,1","4,15,-1","4,16,1","4,16,-1","4,17,0","4,18,1","4,18,-1","4,19,1","4,19,-1","4,20,0","4,21,0","4,22,1","4,22,-1","4,23,0","4,24,0","4,25,0","4,26,0","4,27,1","4,27,-1","4,28,0","4,29,1","4,29,-1","5,1,0","5,2,1","5,2,-1","5,3,1","5,3,-1","5,4,1","5,4,-1","5,5,1","5,5,-1","5,6,1","5,6,-1","5,7,1","5,7,-1","5,8,0","5,9,1","5,9,-1","5,10,1","5,10,-1","5,11,1","5,11,-1","5,12,0","5,13,1","5,13,-1","5,14,1","5,14,-1","5,15,0","5,16,1","5,16,-1","5,17,0","5,18,1","5,18,-1","5,19,1","5,19,-1","5,20,1","5,20,-1","5,21,1","5,21,-1","5,22,0","5,23,1","5,23,-1","5,24,1","5,24,-1","5,25,1","5,25,-1","5,26,1","5,26,-1","5,27,1","5,27,-1","5,28,1","5,28,-1","5,29,1","5,29,-1","5,30,1","5,30,-1","5,31,1","5,31,-1","5,32,1","5,32,-1","5,33,0","5,34,0","5,35,0","5,36,1","5,36,-1","5,37,0","5,38,1","5,38,-1","6,1,0","6,2,1","6,2,-1","6,3,1","6,3,-1","6,4,0","6,5,1","6,5,-1","6,6,0","6,7,0","6,8,0","6,9,1","6,9,-1","6,10,1","6,10,-1","6,11,1","6,11,-1","6,12,1","6,12,-1","6,13,0","6,14,1","6,14,-1","6,15,1","6,15,-1","6,16,1","6,16,-1","6,17,1","6,17,-1","6,18,1","6,18,-1","6,19,1","6,19,-1","6,20,0","6,21,1","6,21,-1","6,22,1","6,22,-1","6,23,0","6,24,1","6,24,-1","6,25,1","6,25,-1","6,26,0","6,27,1","6,27,-1","6,28,0","6,29,0","6,30,1","6,30,-1","6,31,1","6,31,-1","6,32,0","6,33,1","6,33,-1","6,34,1","6,34,-1","6,35,0","6,36,1","6,36,-1","6,37,0","6,38,0","6,39,1","6,39,-1","6,40,1","6,40,-1","6,41,1","6,41,-1","6,42,0","6,43,1","6,43,-1","6,44,1","6,44,-1","6,45,0","6,46,1","6,46,-1","6,47,1","6,47,-1","6,48,0","6,49,0","6,50,0","7,1,0","7,2,1","7,2,-1","7,3,1","7,3,-1","7,4,1","7,4,-1","7,5,1","7,5,-1","7,6,1","7,6,-1","7,7,1","7,7,-1","7,8,0","7,9,1","7,9,-1","7,10,1","7,10,-1","7,11,1","7,11,-1","7,12,0","7,13,1","7,13,-1","7,14,1","7,14,-1","7,15,0","7,16,1","7,16,-1","7,17,0","7,18,1","7,18,-1","7,19,1","7,19,-1","7,20,1","7,20,-1","7,21,1","7,21,-1","7,22,0","7,23,1","7,23,-1","7,24,1","7,24,-1","7,25,1","7,25,-1","7,26,1","7,26,-1","7,27,1","7,27,-1","7,28,1","7,28,-1","7,29,1","7,29,-1","7,30,1","7,30,-1","7,31,1","7,31,-1","7,32,1","7,32,-1","7,33,0","7,34,0","7,35,0","7,36,1","7,36,-1","7,37,0","7,38,1","7,38,-1","8,1,0","8,2,1","8,2,-1","8,3,0","8,4,1","8,4,-1","8,5,1","8,5,-1","8,6,0","8,7,0","8,8,0","8,9,0","8,10,0","8,11,1","8,11,-1","8,12,1","8,12,-1","8,13,1","8,13,-1","8,14,1","8,14,-1","8,15,1","8,15,-1","8,16,1","8,16,-1","8,17,0","8,18,1","8,18,-1","8,19,1","8,19,-1","8,20,0","8,21,0","8,22,1","8,22,-1","8,23,0","8,24,0","8,25,0","8,26,0","8,27,1","8,27,-1","8,28,0","8,29,1","8,29,-1","9,1,0","9,2,1","9,2,-1","9,3,1","9,3,-1","9,4,1","9,4,-1","9,5,1","9,5,-1","9,6,0","9,7,1","9,7,-1","9,8,1","9,8,-1","9,9,0","9,10,0","9,11,1","9,11,-1","9,12,0","10,1,0","10,2,0","10,3,0","10,4,0","10,5,0","10,6,0","11,1,0","12,1,0","chord","Chord","_note$NotRest","notes","_overrides","_cache","_chordTablesAddress","_chordTablesAddressNeedsUpdating","add","sortPitches","zRelationAddress","chordTables","chordTablesAddress","_arr","_i","hasZRelation","addresses","thisAddress","maxDNNfromCenter","pA","runSort","noteObj","pitchObj","noteObj2","stepsFound","nonDuplicatingPitches","newroot","root","closedChord","removeDuplicatePitches","closedPitches","indexOfPitchesWithPerfectlyStackedThirds","testSteps","currentListOfThirds","tsIndex","getChordStep","hasFalse","newRoot","chordStep","testRoot","tempChordStep","lowest","thirdST","semitonesFromChordStep","fifthST","isSeventhOfType","intervalArray","third","fifth","seventh","thisPitch","thisInterval","isMajorTriad","isDominantSeventh","isMinorTriad","bass","chordStepsToInversions","testNote","pitchKeys","tn","thisPitches","testRootDNN","tempPitches","addNote","warn","pcGroup","pitchClass","cta","ctn","enharmonicTests","3-11A","3-11B","3-10","isDiminishedTriad","3-12","isAugmentedTriad","out","test","chordDefinitions","major","minor","diminished","augmented","major-seventh","dominant-seventh","minor-seventh","diminished-seventh","half-diminished-seventh","lowestLines","treble","soprano","mezzo-soprano","alto","tenor","percussion","nameToLine","nameToSign","Clef","octaveChange","sign","line","lowestLineTrebleOffset","lowestLineDifference","TrebleClef","_Clef","Treble8vbClef","_Clef2","Treble8vaClef","_Clef3","BassClef","_Clef4","AltoClef","_Clef5","TenorClef","_Clef6","SopranoClef","_Clef7","MezzoSopranoClef","_Clef8","PercussionClef","_Clef9","bestClef","st","stFlat","recurse","flat","totalNotes","totalPitch","averageHeight","clefFromString","clefString","octaveShift","xnStr","trim","thisType","lineNum","searchLower","clefKey","clefLower","potentialClass","arrayEqual","every","ix","Bass8vbClef","Scale","AbstractScale","_Scale","_net","tonicDegree","octaveDuplicating","deterministic","_alteredDegrees","_oneOctaveRealizationCache","pitchList","pitchListReal","pLast","intervalList","unused_stepOfPitch","unused_minPitch","unused_maxPitch","unused_direction","unused_reverse","pitchReference","unused_nodeName","nodeDegreeTarget","zeroIndexDegree","pitchTarget","unused_comparisonAttribute","realizedPitches","getRealization","realizedNames","realizedIndex","AbstractDiatonicScale","_AbstractScale","mode","dominantDegree","_buildNetwork","relativeMajorDegree","relativeMinorDegree","_intervalList","toConsumableArray","intVStr","AbstractHarmonicMinorScale","_AbstractScale2","AbstractAscendingMelodicMinorScale","_AbstractScale3","ConcreteScale","_Scale2","abstract","degree","unused_equateTermini","getPitchFromNodeDegree","getRelativeNodeDegree","DiatonicScale","_ConcreteScale","MajorScale","_DiatonicScale","MinorScale","_DiatonicScale2","HarmonicMinorScale","_ConcreteScale2","AscendingMelodicMinorScale","_ConcreteScale3","scale","modeSharpsAlter","dorian","phrygian","lydian","mixolydian","locrian","convertKeyStringToMusic21KeyString","textString","endsWith","KeySignature","sharps","_sharps","_alteredPitchesCache","flatMapping","sharpMapping","tempSharps","majorName","aps","alteredPitches","transInterval","transTimes","transStr","startPitch","pKeep","Key","_KeySignature","sharpsArray","sharpsIndex","modeShift","_scale","getScale","scaleType","getPitches","_scale2","pitchFromDegree","_scale3","getScaleDegreeFromPitch","tonicName","isConcrete","meter","TimeSignature","meterString","_numerator","_denominator","_beatGroups","_overwrittenBeatCount","_overwrittenBeatDuration","ratioString","tempBeatGroups","numBeats","beatValue","beatsToEighthNoteRatio","beatDuration","beatsFromStart","srcStream","measureStartOffset","naiveBeams","removeSandwichedUnbeamables","depth","beamNumber","dur","pos","end","startNext","isLast","isFirst","beamPrevious","_offsetToSpan","offsetToSpan","_offsetToSpan2","archetypeSpanStart","archetypeSpanEnd","archetypeSpanNextStart","beamType","getTypeByNumber","setByNumber","sanitizePartialBeams","mergeConnectingPartialBeams","beatGroups","vfBeatGroups","bg","Fraction","meterList","computeBeatGroups","newGroups","overwrite","barDuration","beatCount","Instrument","instrumentName","partId","partName","partAbbreviation","instrumentId","instrumentAbbreviation","midiProgram","_midiChannel","lowestNote","highestNote","transpostion","inGMPercMap","soundfontFn","find","usedChannels","startChannel","ch","maxMidi","autoAssignMidiChannel","info","fn","midiNumber","RenderOptions","defaultOptions","displayClef","displayTimeSignature","displayKeySignature","scaleFactor","y","top","left","overriddenWidth","naiveHeight","systemIndex","partIndex","measureIndex","systemMeasureIndex","systemPadding","naiveSystemPadding","maxSystemWidth","rightBarline","staffConnectors","staffPadding","events","click","dblclick","startNewSystem","startNewPage","showMeasureNumber","_clefSingleton","vfShow","RenderStack","voices","streams","textVoices","voiceToStreamMapping","tickablesByStave","knownStaves","allTickables","thisStaveIndex","currentStaveHolder","Renderer","div","where","rendererType","$div","$where","activeFormatter","_vfRenderer","_ctx","beamGroups","stacks","vfTies","systemBreakOffsets","vfTuplets","jquery","isScorelike","isPartlike","isFlat","prepareScorelike","preparePartlike","prepareArrivedFlat","formatMeasureStacks","drawTies","drawMeasureStacks","drawBeamGroups","drawTuplets","parts","subStream","addStaffConnectors","measureList","measures","prepareMeasure","prepareTies","hasVoices","prepareFlat","firstVoiceCopy","getElementsByClass","getElementsNotOfClass","insert","rendOp","entries","voiceStream","voiceToRender","activeVFStave","storedVexflowStave","optionalStave","optional_renderOp","makeNotation","renderStave","vf_voice","getVoice","hasLyrics","getLyricVoice","optional_rendOp","ctx","newStave","setClefEtc","setContext","draw","vft","pf","notesAndRests","thisNote","nextNote","onSameSystem","sbI","thisSystemBreak","vfTie","StaveTie","first_note","last_note","first_indices","last_indices","vfTie1","vfTie2","vexflowNotes","voice","vexflowVoice","setStave","addTickables","textVoice","vexflowLyrics","vf_voices","measuresOrVoices","formatter","formatVoiceGroup","applyFormatterInformationToNotes","autoBeam","Formatter","maxGlyphStart","getNoteStartX","setNoteStartX","staveTickables","joinVoices","formatToStave","_beamGroups","associatedStream","getSpecialContext","vexflowBeatGroups","applyAndGetBeams","estimateStaffLength","Stave","sClef","setStafflines","setMeasure","ottava","addClef","context_ks","ksVFName","addKeySignature","context_ts","addTimeSignature","bl","barlineMap","single","vxBL","setEndBarType","vexflowStave","setNumLines","line_config","visible","activeTuplet","activeTupletLength","activeTupletVexflowNotes","thisEl","vexflowNote","tuplets","tupletOptions","num_notes","notes_occupied","vfTuplet","setRatioed","_vfTuplets","getTextNote","font","lyricObj","TextNote","setLine","setJustification","Justification","LEFT","applyTickMultiplier","lyricsObjects","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","lyricsArray","addConnector","firstLyric","family","tempQl","connector","totalLength","num1024","vfv","Voice","num_beats","beat_value","resolution","RESOLUTION","setMode","Mode","SOFT","connectorType","brace","StaveConnector","BRACE","SINGLE","DOUBLE","BRACKET","firstPart","lastPart","firstPartMeasures","lastPartMeasures","numMeasures","mIndex","thisPartMeasure","lastPartMeasure","topVFStaff","bottomVFStaff","thisPartVoice","lastPartVoice","scTypeM21","scTypeVF","staffConnectorsMap","setType","recursive","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","removeFormatterInformation","noteOffsetLeft","start_x","glyph_start_x","getBottomY","nextTicks","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","nTicks","ticks","formatterNote","tickContexts","getAbsoluteX","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","backend","Backends","CANVAS","SVG","resize","attr","vfr","vfRenderer","_classMapping","generalObj","outObj","fromGeneralObj","parseWellformedObject","scoreExporter","ScoreExporter","asBytes","cM","makeMeasures","Score","fromScore","mCopy","Part","append","fromPart","Measure","fromMeasure","nCopy","_musicxmlVersion","XMLExporterBase","doc","implementation","createDocument","xmlRoot","noCopy","xmlHeader","XMLSerializer","serializeToString","_ref2","_ref2$forceEmpty","forceEmpty","subElement","innerHTML","_setTagTextFromAttribute","xmlAttributeName","_ref3","_setAttributeFromAttribute","element","m21Object","comment","commentLength","spacerLengthLow","spacerLengthHigh","commentText","divider","createComment","appendChild","createElement","mxObject","mxEl","mxName","mxAccidental","possible","charAt","random","_XMLExporterBase","score","xmIdentification","scoreMetadata","spannerBundle","meterStream","scoreLayouts","firstScoreLayout","highestTime","refStreamOrTimeRange","partExporterList","instrumentList","midiChannelList","emptyObject","scorePreliminaries","parsePartlikeScore","postPartProcess","setPartsAndRefStream","streamOfStreams","innerStream","ht","pp","PartExporter","parent","setScoreHeader","pex","addDividerComment","setPartList","mxPartList","mxScorePart","getXmlScorePart","_XMLExporterBase2","partObj","_ref4","Stream","instrumentStream","firstInstrumentObject","lastDivisions","xmlPartId","getRandomId","measureStream","measureExporter","MeasureExporter","mxMeasure","_classesToMeasureMethods","_wrapAttributeMethodClasses","_ignoreOnParseClasses","divisionsPerQuarter","_XMLExporterBase3","measureObj","_ref5","currentDivisions","transpositionInterval","mxTranspose","measureOffsetStart","offsetInMeasure","currentVoiceId","rbSpanners","objectSpannerBundle","setMxAttributes","setMxAttributesObjectForStartOfMeasure","mainElementsParse","parseFlatElements","backupAfterwards","allVoices","_ref6","_ref6$backupAfterward","divisions","voiceId","parseOneElement","amountToBackup","mxBackup","parsedObject","_step8$value","methName","_step9$value","meth","wrapObjectInAttributes","_ref7","_ref7$noteIndexInChor","noteIndexInChord","chordParent","addChordTag","chordOrN","mxNote","setColor","mxPitch","pitchToXml","isGrace","mxDuration","durationXml","mxTieList","tieToXmlTie","setEditorial","mxVoice","vId","_","accidentalToMx","mxTimeModification","tupletToTimeModification","mxStem","sdtext","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","mxLyric","lyricToXml","r","noteToXml","mxNoteList","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_step12$value","tup","musicxmlTieType","mxTie","objectToWrap","methodToMx","mxAttributes","mxObj","l","appendToRoot","_keySignature","keySignatureToXml","_timeSignature","timeSignatureToXml","_clef","clefToXml","ts","mxTime","keyOrKeySignature","mxKey","mxClef","measureNumberWithSuffix","FilterException","_StopIteration","StopIterationSingleton","StreamFilter","item","IsFilter","_StreamFilter","numToFind","IsNotFilter","_IsFilter","Number","MAX_SAFE_INTEGER","ClassFilter","_StreamFilter2","ClassNotFilter","_ClassFilter","OffsetFilter","_StreamFilter3","offsetStart","offsetEnd","_ref$includeEndBounda","includeEndBoundary","_ref$mustFinishInSpan","mustFinishInSpan","_ref$mustBeginInSpan","mustBeginInSpan","_ref$includeElementsT","includeElementsThatEndAtStart","zeroLengthSearch","isElementOffsetInRange","elementEnd","elementIsZeroLength","filters","StreamIteratorException","_StreamException","StreamIterator","_ref$filterList","filterList","_ref$restoreActiveSit","restoreActiveSites","_ref$activeInformatio","activeInformation","_ref$ignoreSorting","ignoreSorting","isSorted","autoSort","srcStreamElements","elements","streamLength","iterSection","cleanupOnStop","overrideDerivation","_matchingElements","updateActiveInformation","matches","reset","matchesFilters","cleanup","fe","matchingElements","ai","sectionIndex","f","cleanupOnStep","savedIndex","savedRestoreActiveSites","me","ss","found","newFilter","resetCaches","oldFilter","classFilterList","addFilter","Function","bind","OffsetIterator","_StreamIterator","nextToYield","nextOffsetToYield","yieldEls","eOffset","forwardIndex","nextE","nextOffset","_context2","RecursiveIterator","_StreamIterator2","_ref2$streamsOnly","streamsOnly","_ref2$includeSelf","includeSelf","returnSelf","iteratorStartOffsetInHierarchy","childRecursiveIterator","lastYielded","newStartOffset","_e","_context3","savedRecursiveIterator","iterStack","iteratorStack","iter","lastYield","newestIterator","lastStream","lastStartOffset","isMeasure","_offsetDict","_instrument","_autoBeam","activeVFRenderer","_tempo","_stopPlaying","_allowMultipleSimultaneousPlays","changedCallbackFunction","DOMChangerFunction","canvasOrSVGElement","currentTarget","_this2$findNoteForCli","findNoteForClick","_this2$findNoteForCli2","clickedDiatonicNoteNum","foundNote","noteChanged","thisArg","retainContainers","newSt","tempEls","offsetShift","elFlat","_getFlatOrSemiFlat","elFlatElement","elFlatElementOffset","coreElementsChanged","updateIsFlat","privAttr","contextObj","_firstElementContext","_specialContext","firstElements","getElementsByOffset","warnOnCall","first_el","special_context","clear","elCopy","_ref$updateIsFlat","_ref$clearIsSorted","clearIsSorted","keepIndex","_ref2$restoreActiveSi","_ref2$classFilter","classFilter","_ref2$skipSelf","skipSelf","ri","elOrElList","elOffset","priority","_ref3$ignoreSort","ignoreSort","_ref3$setActiveSite","setActiveSite","elementOrNone","amountToShift","shiftingOffsets","existingEl","existingElOffset","remove","targetOrList","_ref4$shiftOffsets","shiftOffsets","_ref4$recurse","targetList","indexInStream","replacement","allDerivated","targetOffset","newEl","replaceEl","addElement","searchContext","innerBarline","finalBarline","voiceCount","timeSignature","offsetMap","oMax","endTime","measureCount","lastTimeSignature","mStart","thisTimeSignature","oneMeasureLength","voiceIndex","ob","foundTS","mEnd","oNew","insertStream","_ref6$setActiveSite","elSites","streamOnly","workObj","addTies","addPartIdAsGroup","removeRedundantPitches","toSoundingPitch","templateStream","hasPartLikeStreams","template","fillWithRests","removeClasses","retainVoices","_ref8","_ref8$fillWithRests","_ref8$removeClasses","_ref8$retainVoices","cloneEmpty","restInfo","restQL","restObj","outEl","derivationMethod","returnObj","mergeAttributes","_i2","_ref9","_ref9$inPlace","makeAccidentals","mColl","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","noteStream","durList","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","durSum","reduce","total","barQL","paddingLeft","getBeams","thisBeams","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","lyric","each","group","thisOffsetMap","OffsetMap","_ref10","_ref10$includeEndBoun","_ref10$mustFinishInSp","_ref10$mustBeginInSpa","_ref10$includeElement","_ref10$classList","elStream","otherElements","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","extendableStepList","stepNames","ks","keySignature","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","stepName","stepAlter","accidentalByStep","lastOctaveStepList","tempOctaveStepDict","extend","lastOctavelessStepDict","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","lastStepDict","_makeAccidentalForOnePitch","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","chordNote","newAlter","preserveEvents","oldEvents","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","resetRenderOptions","canvasOrSVG","renderVexflow","DOMContains","body","contains","tagName","makeBeams","render","setRenderInteraction","removeChild","ignoreSystems","staffHeight","numSystems","numParts","maxLength","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","thisLength","startNote","startNoteIndex","currentNoteIndex","flatEls","lastNoteIndex","thisStream","playNext","playDuration","playMidi","setTimeout","elementType","createNewDOM","setSubstreamRenderOptions","renderElementType","$newCanvasOrDIV","addClass","computedWidth","computedHeight","estimateStreamHeight","createPlayableDOM","createDOM","$newSvg","appendElement","appendNewDOM","$appendElement","svgOrCanvasBlock","preserveSvgSize","replaceDOM","$oldSVGOrCanvas","hasClass","svgBlock","replaceWith","canvasOrDiv","$svg","playFunc","playStream","proxy","eventType","eventFunction","off","on","windowReflowStart","storedVFStave","recursiveGetStoredVexflowStave","svg","getUnscaledXYforDOM","xClick","yClick","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","getScaledXYforDOM","_getUnscaledXYforDOM","_getUnscaledXYforDOM2","xPx","yPx","pixelScaling","yPxScaled","thisClef","lineSpacing","linesAboveStaff","space_above_staff_ln","notesFromTop","notesAboveLowestLine","num_lines","xPxScaled","allowablePixels","allowBackup","backupMaximum","getStreamFromScaledXandSystemIndex","backup","minDistanceSoFar","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","leftDistance","rightDistance","minDistance","_getScaledXYforDOM","_getScaledXYforDOM2","diatonicNoteNumFromScaledY","noteElementFromScaledX","activeNote","redrawDOM","editableAccidentalDOM","$svgDiv","buttonDiv","getAccidentalToolbar","minAccidental","$siblingSvg","clickEvent","$useSvg","$searchParent","maxSearch","$buttonDiv","acc","$button","$bPlay","$bStop","stopPlayStream","jSvg","callingStream","jSvgNow","jSvgParent","newWidth","svgWidth","svgObj","resizeTO","clearTimeout","trigger","$window","doResize","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","newTempo","newInstrument","newClef","oldClef","newKeySignature","oldKS","newTimeSignature","oldTS","ab","baseMaxSystemWidth","newSW","newElements","highestOffsetSoFar","tempInsert","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","thisElOffset","_Stream","_Stream2","numberSuffix","_Stream3","systemHeight","subStreams","measureWidths","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","elRendOp","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","tempM","getMeasureWidths","systemCurrentWidths","systemBreakIndexes","lastSystemBreak","currentLeft","currentRight","currentSystemIndex","leftSubtract","newLeftSubtract","oldWidth","oldEstimate","offsetFromEstimate","newEstimate","currentSystemMultiplier","newLeft","newTop","currentMeasureIndex","currentMeasureLeft","lastKeySignature","lastClef","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","mRendOp","_getScaledXYforDOM3","_getScaledXYforDOM4","_systemIndexAndScaled","systemIndexAndScaledY","_systemIndexAndScaled2","scaledYRelativeToSystem","gotMeasure","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","right","bottom","_Stream4","partSpacing","currentPartNumber","currentPartTop","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","evenPartMeasureSpacing","currentScoreHeight","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","fixSystemInformation","maxWidth","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","pWidth","tempPart","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","maxMeasureWidths","measureWidthsArrayOfArrays","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","maxFound","_getScaledXYforDOM5","_getScaledXYforDOM6","_systemIndexAndScaled3","_systemIndexAndScaled4","scaledYFromSystemTop","scaledYinPart","rightPart","_ref11","_ref11$setLeft","setLeft","measureStacks","maxMeasureWidth","_iteratorNormalCompletion37","_didIteratorError37","_iteratorError37","_step37","_iterator37","thisMeasureWidth","measureNewWidth","_iteratorNormalCompletion38","_didIteratorError38","_iteratorError38","_step38","_iterator38","part","measure","VALID_TIE_TYPES","Tie","newType","DEFAULTS","ScoreParser","xmlText","xmlUrl","$xmlRoot","definesExplicitSystemBreaks","definesExplicitPageBreaks","mxScorePartDict","m21PartObjectsById","partGroupList","musicXmlVersion","xmlDoc","textStatus","scoreFromDOMTree","parseXML","xmlRootToScore","$mxScore","inputM21","parsePartList","$p","$mxScorePart","xmlPartToPart","$mxPart","parser","PartParser","partListElement","$partListElement","atSoundingPitch","staffReferenceList","lastMeasureWasShort","lastMeasureOffset","lastClefs","activeTuplets","maxStaves","lastMeasureNumber","lastNumberSuffix","multiMeasureRestsToCapture","activeMultimeasureRestSpanner","activeInstrument","firstMeasureParsed","$activeAttributes","appendToScoreAfterParse","lastMeasureParser","parseXmlScorePart","parseMeasures","$mxMeasure","xmlMeasureToMeasure","measureParser","MeasureParser","setLastMeasureInfo","adjustTimeAttributesFromMeasure","mHighestTime","mOffsetShift","$mxMeasureElements","transposition","staffReference","useVoices","voicesById","voiceIndices","Set","staves","attributesAreInternal","measureNumber","staffLayoutObjects","$mxNoteList","$mxLyricList","nLast","chordVoice","fullMeasureRest","restAndNoteCount","rest","parseIndex","offsetMeasureNote","attributeTagsToMethods","musicDataMethods","attributes","parseMeasureAttributes","$c","$mxObj","$mxNote","nextNoteIsChord","$mxObjNext","offsetIncrement","_$mxLyricList","xmlToRest","xmlToSimpleNote","updateLyricsFromList","insertInMeasureOrVoice","xmlToChord","freeSpanners","xmlToPitch","xmlNoteToGeneralNoteHelper","$mxPitch","$mxAlter","accAlter","parseFloat","$mxAccidental","accObj","xmlToAccidental","$mxRest","xmlToDuration","xmlToTie","qLen","mxType","durationType","allTies","$t0","lyricList","currentLyricNumber","xmlToLyric","$mxLyric","exc","$mxSyllabic","$mxElement","parseMeasureNumbers","mNumRaw","mNum","$mxAttributes","mxSub","$mxSub","$mxTime","xmlToTimeSignature","insertIntoMeasureOrVoice","$mxClef","xmlToClef","clefOctaveChange","$coc","$mxKey","keySig","xmlToKeySignature","musicxml","dynamics","shortNames","longNames","ppp","mp","mf","fp","sf","ff","fff","englishNames","dynamicStrToScalar","None","pppp","ffff","Dynamic","_value","_volumeScalar","longName","englishName","Expression","vfe","Fermata","_Expression","shorthandNotation","","13","6,5","4,3","4,2","Notation","notationColumn","figureStrings","origNumbers","origModStrings","modifierStrings","_parseNotationColumn","_translateToLonghand","modifiers","figures","_getModifiers","_getFigures","nc","figure","numberString","modifierString","oldNumbers","newNumbers","oldModifierStrings","newModifierStrings","oldNumbersString","temp","newModifierString","Modifier","Figure","specialModifiers","+","/","\\","bb","bbb","bbbb","++","+++","++++","_toAccidental","modStr","pitchNameToAlter","pitchToAlter","modifyPitch","newAccidental","figuredBass","jp","jsonpickle","unpickler","fromPython","Converter","knownUnparsables","handlers","music21.duration.Duration","post_restore","_qtrLength","music21.meter.TimeSignature","displaySequence","music21.stream.Part","currentPart","streamPostRestore","music21.stream.Score","music21.stream.Stream","music21.stream.Measure","music21.stream.Voice","_storedElementOffsetTuples","_py_class","streamPart","appendEl","insertAtStart","thisClass","kn","jss","decode","Harmony","_writeAsChord","_roman","chordStepModifications","_degreesList","_figure","parseFigure","_parseFigure","updatePitches","_updatePitches","findFigure","newFigure","keyOrScale","harmony","miditools","transposeOctave","Event","timing","data1","data2","data3","midiCommand","midiNote","velocity","m21n","maxDelay","heldChordTime","heldChordNotes","timeOfLastNote","_baseTempo","metronome","enumerable","clearOldChords","nowInMs","sendOutChord","makeChords","jEvent","music21Note","chordNoteList","appendObject","quantizeLastNote","callBacks","raw","general","sendToMIDIjs","arrayOfNotes","nowInMS","msSinceLastNote","normalQuarterNoteLength","numQuarterNotes","roundedQuarterLength","midiEvent","loadedSoundfonts","postLoadCallback","soundfont","isFirefox","InstallTrigger","isAudioTag","technology","instrumentObj","programChange","loadSoundfont","waitThenCall","ready","loadPlugin","onsuccess","MidiPlayer","player","Players","PlayInstance","speed","$playDiv","$controls","$playPause","playPng","$stop","stopPng","pausePlayStop","stopButton","$time","$timePlayed","$capsule","$timeRemaining","src","playing","pause","pausePng","resume","b64data","timeWarp","m21midiplayer","loadFile","fileLoaded","updatePlaying","timeFormatting","minutes","seconds","$d","timePlayed","timeRemaining","timeCursor","eventjs","cancel","currentTime","state","setAnimation","percent","songFinished","keyboard","callbacks","noteNameSvgObj","keyStyle","keyClass","startX","keyattrs","class","rx","ry","keyDOM","strokeColor","getAttribute","cx","stroke","stroke-width","cy","circleDom","labelOctaves","idStr","textfill","textattrs","font-size","textDom","textNode","createTextNode","parentNode","WhiteKey","_Key","BlackKey","_Key2","Keyboard","whiteKeyWidth","_defaultWhiteKeyWidth","_defaultBlackKeyWidth","keyObjects","markC","showNames","showOctaves","endPitch","_startDNN","_endDNN","hideable","scrollable","keyClicked","clickHandler","sharpOffsets","oldSVG","svgParent","svgDOM","createSVG","replaceChild","wrapScrollable","appendHideableKeyboard","keyRect","thisKeyObject","storedStyle","fillColor","tempP","currentIndex","keyboardDiatonicLength","totalWidth","heightString","xml:space","movingPitch","blackKeys","thisKeyboardObject","wki","wk","wkSVG","makeKey","bk","offsetFromWhiteKey","bkSVG","bki","markMiddleC","markNoteNames","midC","addCircle","removeNoteNames","keyObj","addNoteName","removeNoteName","$wrapper","display","$bDown","redrawSVG","$bUp","$kWrapper","keyboardSVG","$container","$bInside","padding-top","$b","vertical-align","background","triggerToggleShow","$explain","background-color","padding","$t","$parent","$k","jazzHighlight","intensityRGB","normalizedVelocity","intensity","layout","makeLayoutFromScore","containerWidth","partZero","layoutScore","LayoutScore","currentPage","Page","measureStart","measureEnd","currentSystem","System","currentSystemNumber","currentStaves","staffMaker","staffHolder","pNum","staff","Staff","staffNumber","systemNumber","_stream$Score","scoreLayout","_width","pageId","systemId","staffId","units","_stream$Score2","pageNumber","systemStart","systemEnd","pageLayout","_stream$Score3","systemLayout","_stream$Part","optimized","inheritedHeight","staffLayout","m21ToXml","xmlToM21","roman","figureShorthands","53","63","753","75","73","9753","975","953","97","95","93","653","6b53","643","642","bb7b5b3","bb7b53","b7b5b3","functionalityScores","I","V7","V","V65","I6","V6","V43","I64","IV","i6","viio7","V42","viio65","viio6","#viio65","#viio6","ii65","ii43","ii42","IV6","ii6","VI","#VI","vi","viio","#viio","iio","iio42","bII6","iio43","iio65","#vio","#vio6","III","VII","VII7","IV65","IV7","iii","iii6","vi6","expandShortHand","shorthand","shorthandGroups","shGroupOut","sh","correctSuffixForChordQuality","chordObj","inversionString","fifthType","qualityName","seventhType","romanToNumber","RomanNumeral","_harmony$Harmony","keyStr","_parsingComplete","primaryFigure","secondaryRomanNumeral","secondaryRomanNumeralKey","pivotChord","scaleCardinality","caseMatters","scaleDegree","frontAlterationString","frontAlterationTransposeInterval","frontAlterationAccidental","romanNumeralAlone","impliedQuality","impliedScale","scaleOffset","useImpliedScale","bracketedAlterations","omittedSteps","followsKeyChange","_functionalityScore","workingFigure","useScale","_correctForSecondaryR","_correctForSecondaryRomanNumeral","_correctForSecondaryR2","_parseOmittedSteps","_parseBracketedAlterations","_parseFrontAlterations","_parseRNAloneAmidstAu","_parseRNAloneAmidstAug6","_parseRNAloneAmidstAu2","_setImpliedQualityFromString","_tempRoot","_fixMinorVIandVII","expandedFigure","figuresNotationObj","numbersArr","_alterationRegex","alteration","innerAlteration","_innerAlteration","alterNotation","alterPitch","fati","newFati","_romanNumeralAloneRegex","_augmentedSixthRegex","rm","a6match","bassScaleDegree","bassScaleDegreeFromNotation","bassPitch","numberNotes","thisScaleDegree","pitchName","modifyPitchName","newNewPitch","newPitches","_matchAccidentalsToQuality","omittedPitches","thisCS","_correctBracketedPitches","notationObject","cDNN","tempChord","rootDNN","staffDistanceFromBassToRoot","bassSD","correctSemitones","_findSemitoneSizeForQuality","chordStepsToExamine","thisChordStep","thisCorrect","thisSemis","correctedSemis","faultyPitch","secondaryFigure","secondaryMode","quality","thisStep","matchAlteration","matchDegree","inversionName","fullChordName","suffix","degreeName","tonicDisplay","tonicPitch","diffRootToTonic","defaultTempoValues","larghissimo","largamente","grave","molto adagio","largo","lento","adagio","slow","langsam","larghetto","adagietto","andante","andantino","andante moderato","maestoso","moderato","moderate","allegretto","animato","allegro moderato","allegro","fast","schnell","allegrissimo","molto allegro","très vite","vivace","vivacissimo","presto","prestissimo","baseTempo","Metronome","tempoInt","numBeatsPerMeasure","minTempo","maxTempo","beat","chirpTimeout","silent","flash","tempoRanges","tempoIncreases","flashColor","$metronomeDiv","fadeOut","beatLength","fadeIn","_silentFlash","that","chirp","tr","tempoExtreme","tempoIncrease","trL","jWhere","metroThis","tempoHolder","padding-left","padding-right","newDiv","b1","b2","stopChirp","prepend","b3","increaseSpeed","prevAll","html","b4","decreaseSpeed","$flash","tinyNotation","regularExpressions","REST","OCTAVE2","OCTAVE3","OCTAVE5","OCTAVE4","EDSHARP","EDFLAT","EDNAT","SHARP","FLAT","NAT","TYPE","TIE","PRECTIE","ID_EL","LYRIC","DOT","TIMESIG","PARTBREAK","TRIP","QUAD","ENDBRAC","TinyNotation","textIn","tokens","optionalScore","currentTSBarDuration","lastDurationQL","storedDict","lastNoteTied","inTrip","inQuad","endTupletAfterNote","tnre","token","_token$split","_token$split2","MATCH","returnObject","innerPart","renderNotationDivs","classTypes","selector","allRender","thisTN","$thisTN","thisTNContents","textContent","newSVG","empty","intervalCache","MotionType","antiParallel","contrary","noMotion","oblique","parallel","similar","VoiceLeadingQuartet","v1n1","v1n2","v2n1","v2n2","analyticKey","unison","_v1n1","_v1n2","_v2n1","_v2n2","vIntervals","hIntervals","_findIntervals","which","obliqueMotion","parallelMotion","similarMotion","contraryMotion","antiParallelMotion","requiredInterval","parallelInterval","parallelUnison","parallelOctave","hiddenInterval","n1degree","n2degree","scale2","firstHarmony","secondHarmony","inwardContraryMotion","outwardContraryMotion","_setVoiceNote","keyValue","voiceLeading","webmidi","selectedOutputPort","selectedInputPort","access","$selectDiv","jazzDownloadUrl","storedPlugin","selectedJazzInterface","jazzMidiInArrived","webmidiEvent","timestamp","midiInArrived","midiMessageEvent","timeStamp","eventObject","createPlugin","override","classid","isJazz","visibility","createJazzSelector","$newSelect","Jazz","change","selectedInput","MidiInOpen","MidiInClose","selectedInterface","midiOptions","MidiInList","noneAppendOption","anySelected","allAppendOptions","$appendOption","oninputsuccess","oninputempty","selectionChanged","$select","storedStateChange","onstatechange","inputs","port","onmidimessage","close","createSelector","$midiSelectDiv","autoUpdate","existingMidiSelect","foundMidiSelects","requestMIDIAccess","then","populateSelect","$noneAppendOption","music21","bar","converter","exceptions21"],"mappings":"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GAAI,GACpEC,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEoiB,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEC,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEC,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEC,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEC,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEC,KAAS,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnEC,KAAQ,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACnE,IAAMa,SAAchwC,GAAWorB,GAAIC,GAAIC,GAAIoiB,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC3DC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAC7CC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAGjD/jB,MAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEoiB,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAS,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACvEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KACvEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KACvEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KACvEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACtEC,KAAQ,EAAG,EAAG,EAAG,EAAG,IAAK,EA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EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACzEC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,I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AAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC7EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC7EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC7EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC5EC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC5E,IAAMmB,SAAc/wC,GAAWorB,GAAIC,GAAIC,GAAIoiB,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC3DC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAC7CC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAC7CC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAG5CxkB,MAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFoiB,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACjFC,KAAQ,EAAG,EAAG,EAAG,EAAG,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AS,GACTC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,EACVC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,SAAU,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","file":"music21.min.js","sourcesContent":["/**\n * Objects for keeping track of relationships among Music21Objects. See {@link music21.sites} namespace\n *\n * Copyright 2017, Michael Scott Cuthbert and cuthbertLab\n * License: BSD\n */\n\nimport { common } from './common.js';\nimport { Music21Exception } from './exceptions21';\n\n/**\n * @namespace music21.sites\n * @memberof music21\n * @requires music21/common\n */\nexport class SitesException extends Music21Exception {}\n\n/**\n * SiteRef.site is held strongly in Javascript.  This is\n * actually NOT a problem because of the difference between\n * the way JS Garbage Collection works from Python (in all\n * browsers since IE6...). They follow reference chains and\n * find unreachable references and don't just check reference\n * counts.  Thus circular references still allow memory to be\n * garbage collected.  Tested in Chrome on 100000 streams, and\n * very small additional memory usage.\n * \n * https://stackoverflow.com/questions/7347203/circular-references-in-javascript-garbage-collector\n */\n\nexport class SiteRef {\n    constructor() {\n        this.isDead = false;\n        this.classString = undefined;\n        this.globalSiteIndex = false;\n        this.siteIndex = undefined;\n        this.site = undefined;\n    }\n}\n\nconst _NoneSiteRef = new SiteRef();\n_NoneSiteRef.globalSiteIndex = -2;\n_NoneSiteRef.siteIndex = -2;\n\nconst _singletonCounter = new common.SingletonCounter();\n\nconst GLOBAL_SITE_STATE_DICT = new WeakMap();\n\nexport function getId(obj) {\n    if (!GLOBAL_SITE_STATE_DICT.has(obj)) {\n        const newId = _singletonCounter.call();\n        GLOBAL_SITE_STATE_DICT.set(obj, newId);\n    }\n    return GLOBAL_SITE_STATE_DICT.get(obj);\n}\n\nexport class Sites {\n    constructor() {\n        this.siteDict = new Map();\n        this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);\n        this._siteIndex = 0;\n        this._lastID = -1;\n    }\n\n    get length() {\n        return this.siteDict.size;\n    }\n    includes(checkSite) {\n        for (const [unused_key, siteRef] of this.siteDict) {\n            if (siteRef.site === checkSite) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _keysByTime(newFirst = true) {\n        const post = [];\n        for (const [key, siteRef] of this.siteDict) {\n            const keyVal = [siteRef.siteIndex, key];\n            post.push(keyVal);\n        }\n        post.sort();\n        if (newFirst) {\n            post.reverse();\n        }\n        return post.map(innerList => innerList[1]);\n    }\n\n    add(obj, idKey, classString) {\n        if (idKey === undefined && obj !== undefined) {\n            idKey = getId(obj);\n        }\n        let updateNotAdd = false;\n        if (this.siteDict.has(idKey)) {\n            const tempSiteRef = this.siteDict.get(idKey);\n            if (!tempSiteRef.isDead && tempSiteRef.site !== undefined) {\n                updateNotAdd = true;\n            }\n        }\n        if (obj !== undefined && classString === undefined) {\n            classString = obj.classes[0];\n        }\n\n        let siteRef;\n        if (updateNotAdd) {\n            siteRef = this.siteDict.get(idKey);\n            siteRef.isDead = false;\n        } else {\n            siteRef = new SiteRef();\n        }\n\n        siteRef.site = obj; // stores a weakRef;\n        siteRef.classString = classString;\n        siteRef.siteIndex = this._siteIndex;\n        this._siteIndex += 1;\n        siteRef.globalSiteIndex = _singletonCounter.call();\n\n        if (!updateNotAdd) {\n            this.siteDict.set(idKey, siteRef);\n        }\n    }\n\n    remove(obj) {\n        const idKey = getId(obj);\n        if (idKey === undefined) {\n            return false;\n        }\n        return this.siteDict.delete(idKey);\n    }\n    \n    clear() {\n        this.siteDict = new Map();\n        this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);\n        this._lastID = -1;\n    }\n\n    * yieldSites(\n        sortByCreationTime = false,\n        priorityTarget,\n        excludeNone = false\n    ) {\n        let keyRepository;\n        if (sortByCreationTime === true) {\n            keyRepository = this._keysByTime(false);\n        } else if (sortByCreationTime === 'reverse') {\n            keyRepository = this._keysByTime(true);\n        } else {\n            keyRepository = Array.from(this.siteDict.keys());\n        }\n        if (priorityTarget !== undefined) {\n            const priorityId = getId(priorityTarget);\n            if (keyRepository.includes(priorityId)) {\n                keyRepository.splice(\n                    0,\n                    0,\n                    keyRepository.pop(keyRepository.indexOf(priorityId))\n                );\n            }\n        }\n        for (const key of keyRepository) {\n            const siteRef = this.siteDict.get(key);\n            if (siteRef === _NoneSiteRef) {\n                if (!excludeNone) {\n                    yield siteRef.site;\n                }\n            } else {\n                const obj = siteRef.site;\n                if (obj === undefined) {\n                    siteRef.isDead = true;\n                } else {\n                    yield obj;\n                }\n            }\n        }\n    }\n\n    get(sortByCreationTime=false, priorityTarget, excludeNone=false) {\n        const post = Array.from(\n            this.yieldSites(sortByCreationTime, priorityTarget, excludeNone)\n        );\n\n        // we do this resorting again, because the priority target might not match id and we\n        // want to be extra safe.  If you want fast, use .yieldSites\n        if (priorityTarget !== undefined) {\n            if (post.includes(priorityTarget)) {\n                post.splice(0, 0, post.pop(post.indexOf(priorityTarget)));\n            }\n        }\n        return post;\n    }\n    getAttrByName(attrName) {\n        for (const obj of this.yieldSites('reverse')) {\n            if (obj === undefined) {\n                continue;\n            }\n            if (attrName in obj) {\n                return obj[attrName];\n            }\n        }\n        return undefined;\n    }\n\n    getObjByClass(className, options) {\n        const params = {\n            callerFirst: this,\n            sortByCreationTime: false,\n            priorityTarget: undefined,\n            getElementMethod: 'getElementAtOrBefore',\n            memo: {},\n        };\n        common.merge(params, options);\n        const memo = params.memo;\n        let post;\n        const objs = Array.from(\n            this.yieldSites(\n                params.sortByCreationTime,\n                params.priorityTarget,\n                true // excludeNone\n            )\n        );\n        const classNameIsStr = typeof className === 'string';\n        for (const obj of objs) {\n            if (classNameIsStr) {\n                if (obj.classes.includes(className)) {\n                    post = obj;\n                    break;\n                }\n            } else if (obj instanceof className) {\n                post = obj;\n                break;\n            }\n        }\n        if (post !== undefined) {\n            return post;\n        }\n        for (const obj of objs) {\n            // TODO: check inside object... perhaps should not be done in m21p\n            const objId = getId(obj);\n            if (!(objId in memo)) {\n                memo[objId] = obj;\n            }\n            post = obj.getContextByClass(className, params);\n            if (post !== undefined) {\n                break;\n            }\n        }\n        return post;\n    }\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/bar -- Barline objects\n *\n * Copyright (c) 2013-19, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–19, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { Music21Exception } from './exceptions21.js';\n\nconst barStyleList = [\n    'regular', 'dotted', 'dashed', 'heavy', 'double', 'final',\n    'heavy-light', 'heavy-heavy', 'tick', 'short', 'none',\n];\nconst barStyleDict = {\n    'light-light': 'double',\n    'light-heavy': 'final', \n};\n\nconst reverseBarStyleDict = {\n    'double': 'light-light',\n    'final': 'light-heavy',\n};\n\nexport class BarException extends Music21Exception {}\n\nfunction styleToMusicXMLBarStyle(value) {\n    if (reverseBarStyleDict[value] !== undefined) {\n        return reverseBarStyleDict[value];\n    } else {\n        return value;\n    }\n}\n\nfunction standardizeBarStyle(value) {\n    if (value === undefined) {\n        return 'regular';\n    }\n    value = value.toLowerCase();\n\n    if (barStyleList.includes(value)) {\n        return value;\n    }\n    if (barStyleDict[value] !== undefined) {\n        return barStyleDict[value];\n    }\n    throw new BarException(`cannot process style: ${value}`);\n}\n\nexport class Barline extends base.Music21Object {\n    constructor(type, location) {\n        super();\n        this._type = undefined;\n        \n        this.type = type;\n        this.location = location; // left, right, middle, None\n    }\n    \n    get type() {\n        return this._type;\n    }\n    \n    set type(v) {\n        this._type = standardizeBarStyle(v);        \n    }\n    \n    musicXMLBarStyle() {\n        return styleToMusicXMLBarStyle(this.type);\n    }\n}\n\nexport default Barline;\n","import common from './common.js';\n\nconst posMod = common.posMod;\n\nlet t1;\nlet t2;\nlet t3;\nlet t4;\nlet t5;\nlet t6;\nlet t7;\nlet t8;\nlet t9;\nlet t10;\nlet t11; \nlet t12;\nlet t13;\nlet t14;\nlet t15;\nlet t16;\nlet t17;\nlet t18;\nlet t19;\nlet t20;\nlet t21; \nlet t22;\nlet t23;\nlet t24;\nlet t25;\nlet t26;\nlet t27;\nlet t28;\nlet t29;\nlet t30;\nlet t31; \nlet t32;\nlet t33;\nlet t34;\nlet t35;\nlet t36;\nlet t37;\nlet t38;\n\nt1   = [[0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 11, 11, 11, 11], 0]; // 1-1\nconst monad = [undefined, t1];\n\nt1   = [[0, 1], [1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-1\nt2   = [[0, 2], [0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-2\nt3   = [[0, 3], [0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-3\nt4   = [[0, 4], [0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-4\nt5   = [[0, 5], [0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-5\nt6   = [[0, 6], [0, 0, 0, 0, 0, 1], [2, 2, 2, 2, 10, 10, 10], 0]; // 2-6\nconst diad = [undefined, t1, t2, t3, t4, t5, t6];\n\nt1   = [[0, 1, 2], [2, 1, 0, 0, 0, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-1\nt2   = [[0, 1, 3], [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-2\nt3   = [[0, 1, 4], [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-3\nt4   = [[0, 1, 5], [1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 5, 6, 5, 6], 0]; // 3-4\nt5   = [[0, 1, 6], [1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-5\nt6   = [[0, 2, 4], [0, 2, 0, 1, 0, 0], [1, 1, 1, 1, 7, 7, 7, 7], 0]; // 3-6\nt7   = [[0, 2, 5], [0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-7\nt8   = [[0, 2, 6], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-8\nt9   = [[0, 2, 7], [0, 1, 0, 0, 2, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-9\nt10 = [[0, 3, 6], [0, 0, 2, 0, 0, 1], [1, 1, 1, 1, 8, 8, 8, 8], 0]; // 3-10\nt11 = [[0, 3, 7], [0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-11\nt12 = [[0, 4, 8], [0, 0, 0, 3, 0, 0], [3, 3, 3, 3, 9, 9, 9, 9], 0]; // 3-12\nconst trichord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];\n\nt1   = [[0, 1, 2, 3], [3, 2, 1, 0, 0, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-1\nt2   = [[0, 1, 2, 4], [2, 2, 1, 1, 0, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-2\nt3   = [[0, 1, 3, 4], [2, 1, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-3\nt4   = [[0, 1, 2, 5], [2, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-4\nt5   = [[0, 1, 2, 6], [2, 1, 0, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-5\nt6   = [[0, 1, 2, 7], [2, 1, 0, 0, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-6\nt7   = [[0, 1, 4, 5], [2, 0, 1, 2, 1, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-7\nt8   = [[0, 1, 5, 6], [2, 0, 0, 1, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-8\nt9   = [[0, 1, 6, 7], [2, 0, 0, 0, 2, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-9\nt10 = [[0, 2, 3, 5], [1, 2, 2, 0, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-10\nt11 = [[0, 1, 3, 5], [1, 2, 1, 1, 1, 0], [1, 0, 1, 0, 1, 3, 1, 3], 0]; // 4-11\nt12 = [[0, 2, 3, 6], [1, 1, 2, 1, 0, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-12\nt13 = [[0, 1, 3, 6], [1, 1, 2, 0, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-13\nt14 = [[0, 2, 3, 7], [1, 1, 1, 1, 2, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-14\nt15 = [[0, 1, 4, 6], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 29]; // 4-15z\nt16 = [[0, 1, 5, 7], [1, 1, 0, 1, 2, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-16\nt17 = [[0, 3, 4, 7], [1, 0, 2, 2, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-17\nt18 = [[0, 1, 4, 7], [1, 0, 2, 1, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-18\nt19 = [[0, 1, 4, 8], [1, 0, 1, 3, 1, 0], [1, 0, 1, 0, 3, 5, 3, 5], 0]; // 4-19\nt20 = [[0, 1, 5, 8], [1, 0, 1, 2, 2, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-20\nt21 = [[0, 2, 4, 6], [0, 3, 0, 2, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-21\nt22 = [[0, 2, 4, 7], [0, 2, 1, 1, 2, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-22\nt23 = [[0, 2, 5, 7], [0, 2, 1, 0, 3, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-23\nt24 = [[0, 2, 4, 8], [0, 2, 0, 3, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-24\nt25 = [[0, 2, 6, 8], [0, 2, 0, 2, 0, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-25\nt26 = [[0, 3, 5, 8], [0, 1, 2, 1, 2, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-26\nt27 = [[0, 2, 5, 8], [0, 1, 2, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-27\nt28 = [[0, 3, 6, 9], [0, 0, 4, 0, 0, 2], [4, 4, 4, 4, 8, 8, 8, 8], 0]; // 4-28\nt29 = [[0, 1, 3, 7], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 15]; // 4-29z\nconst tetrachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];\n\n\nt1   = [[0, 1, 2, 3, 4], [4, 3, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-1\nt2   = [[0, 1, 2, 3, 5], [3, 3, 2, 1, 1, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-2\nt3   = [[0, 1, 2, 4, 5], [3, 2, 2, 2, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-3\nt4   = [[0, 1, 2, 3, 6], [3, 2, 2, 1, 1, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-4\nt5   = [[0, 1, 2, 3, 7], [3, 2, 1, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-5\nt6   = [[0, 1, 2, 5, 6], [3, 1, 1, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-6\nt7   = [[0, 1, 2, 6, 7], [3, 1, 0, 1, 3, 2], [1, 0, 0, 1, 2, 3, 3, 2], 0]; // 5-7\nt8   = [[0, 2, 3, 4, 6], [2, 3, 2, 2, 0, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-8\nt9   = [[0, 1, 2, 4, 6], [2, 3, 1, 2, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-9\nt10 = [[0, 1, 3, 4, 6], [2, 2, 3, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-10\nt11 = [[0, 2, 3, 4, 7], [2, 2, 2, 2, 2, 0], [1, 0, 1, 0, 1, 1, 1, 1], 0]; // 5-11\nt12 = [[0, 1, 3, 5, 6], [2, 2, 2, 1, 2, 1], [1, 1, 1, 1, 0, 0, 0, 0], [36]]; // 5-12\nt13 = [[0, 1, 2, 4, 8], [2, 2, 1, 3, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-13\nt14 = [[0, 1, 2, 5, 7], [2, 2, 1, 1, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-14\nt15 = [[0, 1, 2, 6, 8], [2, 2, 0, 2, 2, 2], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-15\nt16 = [[0, 1, 3, 4, 7], [2, 1, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-16\nt17 = [[0, 1, 3, 4, 8], [2, 1, 2, 3, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], [37]]; // 5-17\nt18 = [[0, 1, 4, 5, 7], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], [38]]; // 5-18\nt19 = [[0, 1, 3, 6, 7], [2, 1, 2, 1, 2, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-19\nt20 = [[0, 1, 3, 7, 8], [2, 1, 1, 2, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-20\nt21 = [[0, 1, 4, 5, 8], [2, 0, 2, 4, 2, 0], [1, 0, 1, 0, 3, 3, 3, 3], 0]; // 5-21\nt22 = [[0, 1, 4, 7, 8], [2, 0, 2, 3, 2, 1], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-22\nt23 = [[0, 2, 3, 5, 7], [1, 3, 2, 1, 3, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-23\nt24 = [[0, 1, 3, 5, 7], [1, 3, 1, 2, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-24\nt25 = [[0, 2, 3, 5, 8], [1, 2, 3, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-25\nt26 = [[0, 2, 4, 5, 8], [1, 2, 2, 3, 1, 1], [1, 0, 1, 0, 0, 2, 0, 2], 0]; // 5-26\nt27 = [[0, 1, 3, 5, 8], [1, 2, 2, 2, 3, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-27\nt28 = [[0, 2, 3, 6, 8], [1, 2, 2, 2, 1, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-28\nt29 = [[0, 1, 3, 6, 8], [1, 2, 2, 1, 3, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-29\nt30 = [[0, 1, 4, 6, 8], [1, 2, 1, 3, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-30\nt31 = [[0, 1, 3, 6, 9], [1, 1, 4, 1, 1, 2], [1, 0, 0, 1, 0, 3, 3, 0], 0]; // 5-31\nt32 = [[0, 1, 4, 6, 9], [1, 1, 3, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-32\nt33 = [[0, 2, 4, 6, 8], [0, 4, 0, 4, 0, 2], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 5-33\nt34 = [[0, 2, 4, 6, 9], [0, 3, 2, 2, 2, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-34\nt35 = [[0, 2, 4, 7, 9], [0, 3, 2, 1, 4, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-35\nt36 = [[0, 1, 2, 4, 7], [2, 2, 2, 1, 2, 1], [1, 0, 0, 1, 0, 1, 1, 0], 12]; // 5-36\nt37 = [[0, 3, 4, 5, 8], [2, 1, 2, 2, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], 17]; // 5-37\nt38 = [[0, 1, 2, 5, 8], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 18]; // 5-38\nconst pentachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38];\n\n\nt1   = [[0, 1, 2, 3, 4, 5], [5, 4, 3, 2, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-1  A\nt2   = [[0, 1, 2, 3, 4, 6], [4, 4, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-2\nt3   = [[0, 1, 2, 3, 5, 6], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 36]; // 6-3\nt4   = [[0, 1, 2, 4, 5, 6], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 6-4\nt5   = [[0, 1, 2, 3, 6, 7], [4, 2, 2, 2, 3, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-5\nt6   = [[0, 1, 2, 5, 6, 7], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 38]; // 6-6\nt7   = [[0, 1, 2, 6, 7, 8], [4, 2, 0, 2, 4, 3], [2, 2, 2, 2, 2, 2, 2, 2], 0]; // 6-7 B\nt8   = [[0, 2, 3, 4, 5, 7], [3, 4, 3, 2, 3, 0], [1, 1, 1, 1, 1, 1, 1, 1], 0]; // 6-8 D\nt9   = [[0, 1, 2, 3, 5, 7], [3, 4, 2, 2, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-9\nt10 = [[0, 1, 3, 4, 5, 7], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 39]; // 6-10\nt11 = [[0, 1, 2, 4, 5, 7], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 40]; // 6-11\nt12 = [[0, 1, 2, 4, 6, 7], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 41]; // 6-12\nt13 = [[0, 1, 3, 4, 6, 7], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 42]; // 6-13\nt14 = [[0, 1, 3, 4, 5, 8], [3, 2, 3, 4, 3, 0], [1, 0, 1, 0, 1, 0, 1, 0], 0]; // 6-14\nt15 = [[0, 1, 2, 4, 5, 8], [3, 2, 3, 4, 2, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-15\nt16 = [[0, 1, 4, 5, 6, 8], [3, 2, 2, 4, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-16\nt17 = [[0, 1, 2, 4, 7, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 43]; // 6-17\nt18 = [[0, 1, 2, 5, 7, 8], [3, 2, 2, 2, 4, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-18\nt19 = [[0, 1, 3, 4, 7, 8], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 44]; // 6-19\nt20 = [[0, 1, 4, 5, 8, 9], [3, 0, 3, 6, 3, 0], [3, 3, 3, 3, 3, 3, 3, 3], 0]; // 6-20 E\nt21 = [[0, 2, 3, 4, 6, 8], [2, 4, 2, 4, 1, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-21\nt22 = [[0, 1, 2, 4, 6, 8], [2, 4, 1, 4, 2, 2], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-22\nt23 = [[0, 2, 3, 5, 6, 8], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 45]; // 6-23\nt24 = [[0, 1, 3, 4, 6, 8], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 46]; // 6-24\nt25 = [[0, 1, 3, 5, 6, 8], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 47]; // 6-25\nt26 = [[0, 1, 3, 5, 7, 8], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 48]; // 6-26\nt27 = [[0, 1, 3, 4, 6, 9], [2, 2, 5, 2, 2, 2], [1, 0, 0, 1, 0, 1, 1, 0], 0]; // 6-27\nt28 = [[0, 1, 3, 5, 6, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 49]; // 6-28\nt29 = [[0, 1, 3, 6, 8, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 50]; // 6- d29\nt30 = [[0, 1, 3, 6, 7, 9], [2, 2, 4, 2, 2, 3], [2, 0, 0, 2, 0, 2, 2, 0], 0]; // 6-30\nt31 = [[0, 1, 3, 5, 8, 9], [2, 2, 3, 4, 3, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-31\nt32 = [[0, 2, 4, 5, 7, 9], [1, 4, 3, 2, 5, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-32 C\nt33 = [[0, 2, 3, 5, 7, 9], [1, 4, 3, 2, 4, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-33\nt34 = [[0, 1, 3, 5, 7, 9], [1, 4, 2, 4, 2, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-34\nt35 = [[0, 2, 4, 6, 8, 10], [0, 6, 0, 6, 0, 3], [6, 6, 6, 6, 6, 6, 6, 6], 0]; // 6-35 F\nt36 = [[0, 1, 2, 3, 4, 7], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 3]; // 6-36\nt37 = [[0, 1, 2, 3, 4, 8], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 4]; // 6-37\nt38 = [[0, 1, 2, 3, 7, 8], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 6]; // 6-38\nconst t39 = [[0, 2, 3, 4, 5, 8], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 10]; // 6-39\nconst t40 = [[0, 1, 2, 3, 5, 8], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 11]; // 6-40\nconst t41 = [[0, 1, 2, 3, 6, 8], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 6-41\nconst t42 = [[0, 1, 2, 3, 6, 9], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 13]; // 6-42\nconst t43 = [[0, 1, 2, 5, 6, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 17]; // 6-43\nconst t44 = [[0, 1, 2, 5, 6, 9], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 19]; // 6-44\nconst t45 = [[0, 2, 3, 4, 6, 9], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 23]; // 6-45\nconst t46 = [[0, 1, 2, 4, 6, 9], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 24]; // 6-46\nconst t47 = [[0, 1, 2, 4, 7, 9], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 25]; // 6-47\nconst t48 = [[0, 1, 2, 5, 7, 9], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 26]; // 6-48\nconst t49 = [[0, 1, 3, 4, 7, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 28]; // 6-49\nconst t50 = [[0, 1, 4, 6, 7, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 29]; // 6-50\nconst hexachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38, t39,\n    t40, t41, t42, t43, t44, t45, t46, t47, t48, t49,\n    t50];\n\n\nt1   = [[0, 1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-1\nt2   = [[0, 1, 2, 3, 4, 5, 7], [5, 5, 4, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-2\nt3   = [[0, 1, 2, 3, 4, 5, 8], [5, 4, 4, 4, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-3\nt4   = [[0, 1, 2, 3, 4, 6, 7], [5, 4, 4, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-4\nt5   = [[0, 1, 2, 3, 5, 6, 7], [5, 4, 3, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-5\nt6   = [[0, 1, 2, 3, 4, 7, 8], [5, 3, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-6\nt7   = [[0, 1, 2, 3, 6, 7, 8], [5, 3, 2, 3, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-7\nt8   = [[0, 2, 3, 4, 5, 6, 8], [4, 5, 4, 4, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-8\nt9   = [[0, 1, 2, 3, 4, 6, 8], [4, 5, 3, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-9\nt10 = [[0, 1, 2, 3, 4, 6, 9], [4, 4, 5, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-10\nt11 = [[0, 1, 3, 4, 5, 6, 8], [4, 4, 4, 4, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-11\nt12 = [[0, 1, 2, 3, 4, 7, 9], [4, 4, 4, 3, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 36]; // 7-12 z\nt13 = [[0, 1, 2, 4, 5, 6, 8], [4, 4, 3, 5, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-13\nt14 = [[0, 1, 2, 3, 5, 7, 8], [4, 4, 3, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-14\nt15 = [[0, 1, 2, 4, 6, 7, 8], [4, 4, 2, 4, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-15\nt16 = [[0, 1, 2, 3, 5, 6, 9], [4, 3, 5, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-16\nt17 = [[0, 1, 2, 4, 5, 6, 9], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 7-17 z\nt18 = [[0, 1, 2, 3, 5, 8, 9], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 38]; // 7-18 z\nt19 = [[0, 1, 2, 3, 6, 7, 9], [4, 3, 4, 3, 4, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-19\nt20 = [[0, 1, 2, 4, 7, 8, 9], [4, 3, 3, 4, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-20\nt21 = [[0, 1, 2, 4, 5, 8, 9], [4, 2, 4, 6, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-21\nt22 = [[0, 1, 2, 5, 6, 8, 9], [4, 2, 4, 5, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-22\nt23 = [[0, 2, 3, 4, 5, 7, 9], [3, 5, 4, 3, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-23\nt24 = [[0, 1, 2, 3, 5, 7, 9], [3, 5, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-24\nt25 = [[0, 2, 3, 4, 6, 7, 9], [3, 4, 5, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-25\nt26 = [[0, 1, 3, 4, 5, 7, 9], [3, 4, 4, 5, 3, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-26\nt27 = [[0, 1, 2, 4, 5, 7, 9], [3, 4, 4, 4, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-27\nt28 = [[0, 1, 3, 5, 6, 7, 9], [3, 4, 4, 4, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-28\nt29 = [[0, 1, 2, 4, 6, 7, 9], [3, 4, 4, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-29\nt30 = [[0, 1, 2, 4, 6, 8, 9], [3, 4, 3, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-30\nt31 = [[0, 1, 3, 4, 6, 7, 9], [3, 3, 6, 3, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-31\nt32 = [[0, 1, 3, 4, 6, 8, 9], [3, 3, 5, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-32\nt33 = [[0, 1, 2, 4, 6, 8, 10], [2, 6, 2, 6, 2, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-33\nt34 = [[0, 1, 3, 4, 6, 8, 10], [2, 5, 4, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-34\nt35 = [[0, 1, 3, 5, 6, 8, 10], [2, 5, 4, 3, 6, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-35\nt36 = [[0, 1, 2, 3, 5, 6, 8], [4, 4, 4, 3, 4, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 7-36 z\nt37 = [[0, 1, 3, 4, 5, 7, 8], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 17]; // 7-37 z\nt38 = [[0, 1, 2, 4, 5, 7, 8], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 18]; // 7-38 z\nconst septachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38];\n\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7],  [7, 6, 5, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 8],  [6, 6, 5, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 9],  [6, 5, 6, 5, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-3\nt4   = [[0, 1, 2, 3, 4, 5, 7, 8],  [6, 5, 5, 5, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-4\nt5   = [[0, 1, 2, 3, 4, 6, 7, 8],  [6, 5, 4, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-5\nt6   = [[0, 1, 2, 3, 5, 6, 7, 8],  [6, 5, 4, 4, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-6\nt7   = [[0, 1, 2, 3, 4, 5, 8, 9],  [6, 4, 5, 6, 5, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-7\nt8   = [[0, 1, 2, 3, 4, 7, 8, 9],  [6, 4, 4, 5, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-8\nt9   = [[0, 1, 2, 3, 6, 7, 8, 9],  [6, 4, 4, 4, 6, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-9\nt10 = [[0, 2, 3, 4, 5, 6, 7, 9],   [5, 6, 6, 4, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-10\nt11 = [[0, 1, 2, 3, 4, 5, 7, 9],   [5, 6, 5, 5, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-11\nt12 = [[0, 1, 3, 4, 5, 6, 7, 9],   [5, 5, 6, 5, 4, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-12\nt13 = [[0, 1, 2, 3, 4, 6, 7, 9],   [5, 5, 6, 4, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-13\nt14 = [[0, 1, 2, 4, 5, 6, 7, 9],   [5, 5, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-14\nt15 = [[0, 1, 2, 3, 4, 6, 8, 9],   [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 29]; // 8-15  zz\nt16 = [[0, 1, 2, 3, 5, 7, 8, 9],   [5, 5, 4, 5, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-16\nt17 = [[0, 1, 3, 4, 5, 6, 8, 9],   [5, 4, 6, 6, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-17\nt18 = [[0, 1, 2, 3, 5, 6, 8, 9],   [5, 4, 6, 5, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-18\nt19 = [[0, 1, 2, 4, 5, 6, 8, 9],   [5, 4, 5, 7, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-19\nt20 = [[0, 1, 2, 4, 5, 7, 8, 9],   [5, 4, 5, 6, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-20\nt21 = [[0, 1, 2, 3, 4, 6, 8, 10], [4, 7, 4, 6, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-21\nt22 = [[0, 1, 2, 3, 5, 6, 8, 10], [4, 6, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-22\nt23 = [[0, 1, 2, 3, 5, 7, 8, 10], [4, 6, 5, 4, 7, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-23\nt24 = [[0, 1, 2, 4, 5, 6, 8, 10], [4, 6, 4, 7, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-24\nt25 = [[0, 1, 2, 4, 6, 7, 8, 10], [4, 6, 4, 6, 4, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-25\nt26 = [[0, 1, 2, 4, 5, 7, 9, 10], [4, 5, 6, 5, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-26\nt27 = [[0, 1, 2, 4, 5, 7, 8, 10], [4, 5, 6, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-27\nt28 = [[0, 1, 3, 4, 6, 7, 9, 10], [4, 4, 8, 4, 4, 4], [4, 4, 4, 4, 0, 0, 0, 0], 0]; // 8-28\nt29 = [[0, 1, 2, 3, 5, 6, 7, 9],   [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 15]; // 8-29\nconst octachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8],  [8, 7, 6, 6, 6, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 7, 9],  [7, 7, 7, 6, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 8, 9],  [7, 6, 7, 7, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-3\nt4   = [[0, 1, 2, 3, 4, 5, 7, 8, 9],  [7, 6, 6, 7, 7, 3], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 9-4\nt5   = [[0, 1, 2, 3, 4, 6, 7, 8, 9],  [7, 6, 6, 6, 7, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-5\nt6   = [[0, 1, 2, 3, 4, 5, 6, 8, 10], [6, 8, 6, 7, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-6\nt7   = [[0, 1, 2, 3, 4, 5, 7, 8, 10], [6, 7, 7, 6, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-7\nt8   = [[0, 1, 2, 3, 4, 6, 7, 8, 10], [6, 7, 6, 7, 6, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-8\nt9   = [[0, 1, 2, 3, 5, 6, 7, 8, 10], [6, 7, 6, 6, 8, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-9\nt10 = [[0, 1, 2, 3, 4, 6, 7, 9, 10], [6, 6, 8, 6, 6, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-10\nt11 = [[0, 1, 2, 3, 5, 6, 7, 9, 10], [6, 6, 7, 7, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-11\nt12 = [[0, 1, 2, 4, 5, 6, 8, 9, 10], [6, 6, 6, 9, 6, 3], [3, 3, 3, 3, 0, 0, 0, 0], 0]; // 9-12\nconst nonachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],    [9, 8, 8, 8, 8, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10],  [8, 9, 8, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10],  [8, 8, 9, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-3\nt4   = [[0, 1, 2, 3, 4, 5, 6, 8, 9, 10],  [8, 8, 8, 9, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-4\nt5   = [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10],  [8, 8, 8, 8, 9, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-5\nt6   = [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10],  [8, 8, 8, 8, 8, 5], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 10-6\nconst decachord = [undefined, t1, t2, t3, t4, t5, t6];\n\nt1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [10, 10, 10, 10, 10, 5], [1, 1, 1, 1, 0, 0, 0, 0], 0];// 11-1\nconst undecachord = [undefined, t1];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 12, 12, 12, 12, 6], [12, 12, 12, 12, 0, 0, 0, 0], 0]; // 12-1\nconst dodecachord = [undefined, t1];\n\n\n// -------------------------------------------------------------------------------\nexport const FORTE = [undefined, monad, diad, trichord, tetrachord, pentachord, hexachord, septachord, octachord,\n    nonachord, decachord, undecachord, dodecachord];\n\n\n// to access the data for a single form, use:\n// forte   [size[tetra]] = 4\n//         [number[forte]] = 3\n//         [data[0=pitches, 1=ICV, 2=invariance vector [morris], 3 = Z-relation]]\n//         [element in list]\n//-------------------------------------------------------------------------------\n\n// cardinality 1\nconst card_1 ={ '1,0': [FORTE[1][1][0], // 1\n    FORTE[1][1][2], // var\n    FORTE[1][1][1], //icv\n],\n};\n// cardinality 2\nconst card_2 ={ '1,0': [FORTE[2][1][0], // 2\n    FORTE[2][1][2], // var\n    FORTE[2][1][1], //icv\n],\n    '2,0': [FORTE[2][2][0], // 3\n        FORTE[2][2][2], // var\n        FORTE[2][2][1], //icv\n    ],\n    '3,0': [FORTE[2][3][0], // 4\n        FORTE[2][3][2], // var\n        FORTE[2][3][1], //icv\n    ],\n    '4,0': [FORTE[2][4][0], // 5\n        FORTE[2][4][2], // var\n        FORTE[2][4][1], //icv\n    ],\n    '5,0': [FORTE[2][5][0], // 6\n        FORTE[2][5][2], // var\n        FORTE[2][5][1], //icv\n    ],\n    '6,0': [FORTE[2][6][0], // 7\n        FORTE[2][6][2], // var\n        FORTE[2][6][1], //icv\n    ],\n};\n// cardinality 3\nconst card_3 ={ '1,0': [FORTE[3][1][0], // 8\n    FORTE[3][1][2], // var\n    FORTE[3][1][1], //icv\n],\n    '2,1': [FORTE[3][2][0], // 9\n        FORTE[3][2][2], // var\n        FORTE[3][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3], // 10\n        FORTE[3][2][2], // var\n        FORTE[3][2][1], //icv\n    ],\n    '3,1': [FORTE[3][3][0], // 11\n        FORTE[3][3][2], // var\n        FORTE[3][3][1], //icv\n    ],\n    '3,-1': [[0, 3, 4], // 12\n        FORTE[3][3][2], // var\n        FORTE[3][3][1], //icv\n    ],\n    '4,1': [FORTE[3][4][0], // 13\n        FORTE[3][4][2], // var\n        FORTE[3][4][1], //icv\n    ],\n    '4,-1': [[0, 4, 5], // 14\n        FORTE[3][4][2], // var\n        FORTE[3][4][1], //icv\n    ],\n    '5,1': [FORTE[3][5][0], // 15\n        FORTE[3][5][2], // var\n        FORTE[3][5][1], //icv\n    ],\n    '5,-1': [[0, 5, 6], // 16\n        FORTE[3][5][2], // var\n        FORTE[3][5][1], //icv\n    ],\n    '6,0': [FORTE[3][6][0], // 17\n        FORTE[3][6][2], // var\n        FORTE[3][6][1], //icv\n    ],\n    '7,1': [FORTE[3][7][0], // 18\n        FORTE[3][7][2], // var\n        FORTE[3][7][1], //icv\n    ],\n    '7,-1': [[0, 3, 5], // 19\n        FORTE[3][7][2], // var\n        FORTE[3][7][1], //icv\n    ],\n    '8,1': [FORTE[3][8][0], // 20\n        FORTE[3][8][2], // var\n        FORTE[3][8][1], //icv\n    ],\n    '8,-1': [[0, 4, 6], // 21\n        FORTE[3][8][2], // var\n        FORTE[3][8][1], //icv\n    ],\n    '9,0': [FORTE[3][9][0], // 22\n        FORTE[3][9][2], // var\n        FORTE[3][9][1], //icv\n    ],\n    '10,0': [FORTE[3][10][0], // 23\n        FORTE[3][10][2], // var\n        FORTE[3][10][1], //icv\n    ],\n    '11,1': [FORTE[3][11][0], // 24\n        FORTE[3][11][2], // var\n        FORTE[3][11][1], //icv\n    ],\n    '11,-1': [[0, 4, 7], // 25\n        FORTE[3][11][2], // var\n        FORTE[3][11][1], //icv\n    ],\n    '12,0': [FORTE[3][12][0], // 26\n        FORTE[3][12][2], // var\n        FORTE[3][12][1], //icv\n    ],\n};\n// cardinality 4\nconst card_4 ={ '1,0': [FORTE[4][1][0], // 27\n    FORTE[4][1][2], // var\n    FORTE[4][1][1], //icv\n],\n    '2,1': [FORTE[4][2][0], // 28\n        FORTE[4][2][2], // var\n        FORTE[4][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4], // 29\n        FORTE[4][2][2], // var\n        FORTE[4][2][1], //icv\n    ],\n    '3,0': [FORTE[4][3][0], // 30\n        FORTE[4][3][2], // var\n        FORTE[4][3][1], //icv\n    ],\n    '4,1': [FORTE[4][4][0], // 31\n        FORTE[4][4][2], // var\n        FORTE[4][4][1], //icv\n    ],\n    '4,-1': [[0, 3, 4, 5], // 32\n        FORTE[4][4][2], // var\n        FORTE[4][4][1], //icv\n    ],\n    '5,1': [FORTE[4][5][0], // 33\n        FORTE[4][5][2], // var\n        FORTE[4][5][1], //icv\n    ],\n    '5,-1': [[0, 4, 5, 6], // 34\n        FORTE[4][5][2], // var\n        FORTE[4][5][1], //icv\n    ],\n    '6,0': [FORTE[4][6][0], // 35\n        FORTE[4][6][2], // var\n        FORTE[4][6][1], //icv\n    ],\n    '7,0': [FORTE[4][7][0], // 36\n        FORTE[4][7][2], // var\n        FORTE[4][7][1], //icv\n    ],\n    '8,0': [FORTE[4][8][0], // 37\n        FORTE[4][8][2], // var\n        FORTE[4][8][1], //icv\n    ],\n    '9,0': [FORTE[4][9][0], // 38\n        FORTE[4][9][2], // var\n        FORTE[4][9][1], //icv\n    ],\n    '10,0': [FORTE[4][10][0], // 39\n        FORTE[4][10][2], // var\n        FORTE[4][10][1], //icv\n    ],\n    '11,1': [FORTE[4][11][0], // 40\n        FORTE[4][11][2], // var\n        FORTE[4][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 4, 5], // 41\n        FORTE[4][11][2], // var\n        FORTE[4][11][1], //icv\n    ],\n    '12,1': [FORTE[4][12][0], // 42\n        FORTE[4][12][2], // var\n        FORTE[4][12][1], //icv\n    ],\n    '12,-1': [[0, 3, 4, 6], // 43\n        FORTE[4][12][2], // var\n        FORTE[4][12][1], //icv\n    ],\n    '13,1': [FORTE[4][13][0], // 44\n        FORTE[4][13][2], // var\n        FORTE[4][13][1], //icv\n    ],\n    '13,-1': [[0, 3, 5, 6], // 45\n        FORTE[4][13][2], // var\n        FORTE[4][13][1], //icv\n    ],\n    '14,1': [FORTE[4][14][0], // 46\n        FORTE[4][14][2], // var\n        FORTE[4][14][1], //icv\n    ],\n    '14,-1': [[0, 4, 5, 7], // 47\n        FORTE[4][14][2], // var\n        FORTE[4][14][1], //icv\n    ],\n    '15,1': [FORTE[4][15][0], // 48\n        FORTE[4][15][2], // var\n        FORTE[4][15][1], //icv\n    ],\n    '15,-1': [[0, 2, 5, 6], // 49\n        FORTE[4][15][2], // var\n        FORTE[4][15][1], //icv\n    ],\n    '16,1': [FORTE[4][16][0], // 50\n        FORTE[4][16][2], // var\n        FORTE[4][16][1], //icv\n    ],\n    '16,-1': [[0, 2, 6, 7], // 51\n        FORTE[4][16][2], // var\n        FORTE[4][16][1], //icv\n    ],\n    '17,0': [FORTE[4][17][0], // 52\n        FORTE[4][17][2], // var\n        FORTE[4][17][1], //icv\n    ],\n    '18,1': [FORTE[4][18][0], // 53\n        FORTE[4][18][2], // var\n        FORTE[4][18][1], //icv\n    ],\n    '18,-1': [[0, 3, 6, 7], // 54\n        FORTE[4][18][2], // var\n        FORTE[4][18][1], //icv\n    ],\n    '19,1': [FORTE[4][19][0], // 55\n        FORTE[4][19][2], // var\n        FORTE[4][19][1], //icv\n    ],\n    '19,-1': [[0, 4, 7, 8], // 56\n        FORTE[4][19][2], // var\n        FORTE[4][19][1], //icv\n    ],\n    '20,0': [FORTE[4][20][0], // 57\n        FORTE[4][20][2], // var\n        FORTE[4][20][1], //icv\n    ],\n    '21,0': [FORTE[4][21][0], // 58\n        FORTE[4][21][2], // var\n        FORTE[4][21][1], //icv\n    ],\n    '22,1': [FORTE[4][22][0], // 59\n        FORTE[4][22][2], // var\n        FORTE[4][22][1], //icv\n    ],\n    '22,-1': [[0, 3, 5, 7], // 60\n        FORTE[4][22][2], // var\n        FORTE[4][22][1], //icv\n    ],\n    '23,0': [FORTE[4][23][0], // 61\n        FORTE[4][23][2], // var\n        FORTE[4][23][1], //icv\n    ],\n    '24,0': [FORTE[4][24][0], // 62\n        FORTE[4][24][2], // var\n        FORTE[4][24][1], //icv\n    ],\n    '25,0': [FORTE[4][25][0], // 63\n        FORTE[4][25][2], // var\n        FORTE[4][25][1], //icv\n    ],\n    '26,0': [FORTE[4][26][0], // 64\n        FORTE[4][26][2], // var\n        FORTE[4][26][1], //icv\n    ],\n    '27,1': [FORTE[4][27][0], // 65\n        FORTE[4][27][2], // var\n        FORTE[4][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 6, 8], // 66\n        FORTE[4][27][2], // var\n        FORTE[4][27][1], //icv\n    ],\n    '28,0': [FORTE[4][28][0], // 67\n        FORTE[4][28][2], // var\n        FORTE[4][28][1], //icv\n    ],\n    '29,1': [FORTE[4][29][0], // 68\n        FORTE[4][29][2], // var\n        FORTE[4][29][1], //icv\n    ],\n    '29,-1': [[0, 4, 6, 7], // 69\n        FORTE[4][29][2], // var\n        FORTE[4][29][1], //icv\n    ],\n};\n// cardinality 5\nconst card_5 ={ '1,0': [FORTE[5][1][0], // 70\n    FORTE[5][1][2], // var\n    FORTE[5][1][1], //icv\n],\n    '2,1': [FORTE[5][2][0], // 71\n        FORTE[5][2][2], // var\n        FORTE[5][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5], // 72\n        FORTE[5][2][2], // var\n        FORTE[5][2][1], //icv\n    ],\n    '3,1': [FORTE[5][3][0], // 73\n        FORTE[5][3][2], // var\n        FORTE[5][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5], // 74\n        FORTE[5][3][2], // var\n        FORTE[5][3][1], //icv\n    ],\n    '4,1': [FORTE[5][4][0], // 75\n        FORTE[5][4][2], // var\n        FORTE[5][4][1], //icv\n    ],\n    '4,-1': [[0, 3, 4, 5, 6], // 76\n        FORTE[5][4][2], // var\n        FORTE[5][4][1], //icv\n    ],\n    '5,1': [FORTE[5][5][0], // 77\n        FORTE[5][5][2], // var\n        FORTE[5][5][1], //icv\n    ],\n    '5,-1': [[0, 4, 5, 6, 7], // 78\n        FORTE[5][5][2], // var\n        FORTE[5][5][1], //icv\n    ],\n    '6,1': [FORTE[5][6][0], // 79\n        FORTE[5][6][2], // var\n        FORTE[5][6][1], //icv\n    ],\n    '6,-1': [[0, 1, 4, 5, 6], // 80\n        FORTE[5][6][2], // var\n        FORTE[5][6][1], //icv\n    ],\n    '7,1': [FORTE[5][7][0], // 81\n        FORTE[5][7][2], // var\n        FORTE[5][7][1], //icv\n    ],\n    '7,-1': [[0, 1, 5, 6, 7], // 82\n        FORTE[5][7][2], // var\n        FORTE[5][7][1], //icv\n    ],\n    '8,0': [FORTE[5][8][0], // 83\n        FORTE[5][8][2], // var\n        FORTE[5][8][1], //icv\n    ],\n    '9,1': [FORTE[5][9][0], // 84\n        FORTE[5][9][2], // var\n        FORTE[5][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6], // 85\n        FORTE[5][9][2], // var\n        FORTE[5][9][1], //icv\n    ],\n    '10,1': [FORTE[5][10][0], // 86\n        FORTE[5][10][2], // var\n        FORTE[5][10][1], //icv\n    ],\n    '10,-1': [[0, 2, 3, 5, 6], // 87\n        FORTE[5][10][2], // var\n        FORTE[5][10][1], //icv\n    ],\n    '11,1': [FORTE[5][11][0], // 88\n        FORTE[5][11][2], // var\n        FORTE[5][11][1], //icv\n    ],\n    '11,-1': [[0, 3, 4, 5, 7], // 89\n        FORTE[5][11][2], // var\n        FORTE[5][11][1], //icv\n    ],\n    '12,0': [FORTE[5][12][0], // 90\n        FORTE[5][12][2], // var\n        FORTE[5][12][1], //icv\n    ],\n    '13,1': [FORTE[5][13][0], // 91\n        FORTE[5][13][2], // var\n        FORTE[5][13][1], //icv\n    ],\n    '13,-1': [[0, 4, 6, 7, 8], // 92\n        FORTE[5][13][2], // var\n        FORTE[5][13][1], //icv\n    ],\n    '14,1': [FORTE[5][14][0], // 93\n        FORTE[5][14][2], // var\n        FORTE[5][14][1], //icv\n    ],\n    '14,-1': [[0, 2, 5, 6, 7], // 94\n        FORTE[5][14][2], // var\n        FORTE[5][14][1], //icv\n    ],\n    '15,0': [FORTE[5][15][0], // 95\n        FORTE[5][15][2], // var\n        FORTE[5][15][1], //icv\n    ],\n    '16,1': [FORTE[5][16][0], // 96\n        FORTE[5][16][2], // var\n        FORTE[5][16][1], //icv\n    ],\n    '16,-1': [[0, 3, 4, 6, 7], // 97\n        FORTE[5][16][2], // var\n        FORTE[5][16][1], //icv\n    ],\n    '17,0': [FORTE[5][17][0], // 98\n        FORTE[5][17][2], // var\n        FORTE[5][17][1], //icv\n    ],\n    '18,1': [FORTE[5][18][0], // 99\n        FORTE[5][18][2], // var\n        FORTE[5][18][1], //icv\n    ],\n    '18,-1': [[0, 2, 3, 6, 7], // 100\n        FORTE[5][18][2], // var\n        FORTE[5][18][1], //icv\n    ],\n    '19,1': [FORTE[5][19][0], // 101\n        FORTE[5][19][2], // var\n        FORTE[5][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 4, 6, 7], // 102\n        FORTE[5][19][2], // var\n        FORTE[5][19][1], //icv\n    ],\n    '20,1': [FORTE[5][20][0], // 103\n        FORTE[5][20][2], // var\n        FORTE[5][20][1], //icv\n    ],\n    '20,-1': [[0, 1, 5, 7, 8], // 104\n        FORTE[5][20][2], // var\n        FORTE[5][20][1], //icv\n    ],\n    '21,1': [FORTE[5][21][0], // 105\n        FORTE[5][21][2], // var\n        FORTE[5][21][1], //icv\n    ],\n    '21,-1': [[0, 3, 4, 7, 8], // 106\n        FORTE[5][21][2], // var\n        FORTE[5][21][1], //icv\n    ],\n    '22,0': [FORTE[5][22][0], // 107\n        FORTE[5][22][2], // var\n        FORTE[5][22][1], //icv\n    ],\n    '23,1': [FORTE[5][23][0], // 108\n        FORTE[5][23][2], // var\n        FORTE[5][23][1], //icv\n    ],\n    '23,-1': [[0, 2, 4, 5, 7], // 109\n        FORTE[5][23][2], // var\n        FORTE[5][23][1], //icv\n    ],\n    '24,1': [FORTE[5][24][0], // 110\n        FORTE[5][24][2], // var\n        FORTE[5][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 6, 7], // 111\n        FORTE[5][24][2], // var\n        FORTE[5][24][1], //icv\n    ],\n    '25,1': [FORTE[5][25][0], // 112\n        FORTE[5][25][2], // var\n        FORTE[5][25][1], //icv\n    ],\n    '25,-1': [[0, 3, 5, 6, 8], // 113\n        FORTE[5][25][2], // var\n        FORTE[5][25][1], //icv\n    ],\n    '26,1': [FORTE[5][26][0], // 114\n        FORTE[5][26][2], // var\n        FORTE[5][26][1], //icv\n    ],\n    '26,-1': [[0, 3, 4, 6, 8], // 115\n        FORTE[5][26][2], // var\n        FORTE[5][26][1], //icv\n    ],\n    '27,1': [FORTE[5][27][0], // 116\n        FORTE[5][27][2], // var\n        FORTE[5][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 5, 7, 8], // 117\n        FORTE[5][27][2], // var\n        FORTE[5][27][1], //icv\n    ],\n    '28,1': [FORTE[5][28][0], // 118\n        FORTE[5][28][2], // var\n        FORTE[5][28][1], //icv\n    ],\n    '28,-1': [[0, 2, 5, 6, 8], // 119\n        FORTE[5][28][2], // var\n        FORTE[5][28][1], //icv\n    ],\n    '29,1': [FORTE[5][29][0], // 120\n        FORTE[5][29][2], // var\n        FORTE[5][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 5, 7, 8], // 121\n        FORTE[5][29][2], // var\n        FORTE[5][29][1], //icv\n    ],\n    '30,1': [FORTE[5][30][0], // 122\n        FORTE[5][30][2], // var\n        FORTE[5][30][1], //icv\n    ],\n    '30,-1': [[0, 2, 4, 7, 8], // 123\n        FORTE[5][30][2], // var\n        FORTE[5][30][1], //icv\n    ],\n    '31,1': [FORTE[5][31][0], // 124\n        FORTE[5][31][2], // var\n        FORTE[5][31][1], //icv\n    ],\n    '31,-1': [[0, 3, 6, 8, 9], // 125\n        FORTE[5][31][2], // var\n        FORTE[5][31][1], //icv\n    ],\n    '32,1': [FORTE[5][32][0], // 126\n        FORTE[5][32][2], // var\n        FORTE[5][32][1], //icv\n    ],\n    '32,-1': [[0, 3, 5, 8, 9], // 127\n        FORTE[5][32][2], // var\n        FORTE[5][32][1], //icv\n    ],\n    '33,0': [FORTE[5][33][0], // 128\n        FORTE[5][33][2], // var\n        FORTE[5][33][1], //icv\n    ],\n    '34,0': [FORTE[5][34][0], // 129\n        FORTE[5][34][2], // var\n        FORTE[5][34][1], //icv\n    ],\n    '35,0': [FORTE[5][35][0], // 130\n        FORTE[5][35][2], // var\n        FORTE[5][35][1], //icv\n    ],\n    '36,1': [FORTE[5][36][0], // 131\n        FORTE[5][36][2], // var\n        FORTE[5][36][1], //icv\n    ],\n    '36,-1': [[0, 3, 5, 6, 7], // 132\n        FORTE[5][36][2], // var\n        FORTE[5][36][1], //icv\n    ],\n    '37,0': [FORTE[5][37][0], // 133\n        FORTE[5][37][2], // var\n        FORTE[5][37][1], //icv\n    ],\n    '38,1': [FORTE[5][38][0], // 134\n        FORTE[5][38][2], // var\n        FORTE[5][38][1], //icv\n    ],\n    '38,-1': [[0, 3, 6, 7, 8], // 135\n        FORTE[5][38][2], // var\n        FORTE[5][38][1], //icv\n    ],\n};\n// cardinality 6\nconst card_6 ={ '1,0': [FORTE[6][1][0], // 136\n    FORTE[6][1][2], // var\n    FORTE[6][1][1], //icv\n],\n    '2,1': [FORTE[6][2][0], // 137\n        FORTE[6][2][2], // var\n        FORTE[6][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6], // 138\n        FORTE[6][2][2], // var\n        FORTE[6][2][1], //icv\n    ],\n    '3,1': [FORTE[6][3][0], // 139\n        FORTE[6][3][2], // var\n        FORTE[6][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5, 6], // 140\n        FORTE[6][3][2], // var\n        FORTE[6][3][1], //icv\n    ],\n    '4,0': [FORTE[6][4][0], // 141\n        FORTE[6][4][2], // var\n        FORTE[6][4][1], //icv\n    ],\n    '5,1': [FORTE[6][5][0], // 142\n        FORTE[6][5][2], // var\n        FORTE[6][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 4, 5, 6, 7], // 143\n        FORTE[6][5][2], // var\n        FORTE[6][5][1], //icv\n    ],\n    '6,0': [FORTE[6][6][0], // 144\n        FORTE[6][6][2], // var\n        FORTE[6][6][1], //icv\n    ],\n    '7,0': [FORTE[6][7][0], // 145\n        FORTE[6][7][2], // var\n        FORTE[6][7][1], //icv\n    ],\n    '8,0': [FORTE[6][8][0], // 146\n        FORTE[6][8][2], // var\n        FORTE[6][8][1], //icv\n    ],\n    '9,1': [FORTE[6][9][0], // 147\n        FORTE[6][9][2], // var\n        FORTE[6][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6, 7], // 148\n        FORTE[6][9][2], // var\n        FORTE[6][9][1], //icv\n    ],\n    '10,1': [FORTE[6][10][0], // 149\n        FORTE[6][10][2], // var\n        FORTE[6][10][1], //icv\n    ],\n    '10,-1': [[0, 2, 3, 4, 6, 7], // 150\n        FORTE[6][10][2], // var\n        FORTE[6][10][1], //icv\n    ],\n    '11,1': [FORTE[6][11][0], // 151\n        FORTE[6][11][2], // var\n        FORTE[6][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 3, 5, 6, 7], // 152\n        FORTE[6][11][2], // var\n        FORTE[6][11][1], //icv\n    ],\n    '12,1': [FORTE[6][12][0], // 153\n        FORTE[6][12][2], // var\n        FORTE[6][12][1], //icv\n    ],\n    '12,-1': [[0, 1, 3, 5, 6, 7], // 154\n        FORTE[6][12][2], // var\n        FORTE[6][12][1], //icv\n    ],\n    '13,0': [FORTE[6][13][0], // 155\n        FORTE[6][13][2], // var\n        FORTE[6][13][1], //icv\n    ],\n    '14,1': [FORTE[6][14][0], // 156\n        FORTE[6][14][2], // var\n        FORTE[6][14][1], //icv\n    ],\n    '14,-1': [[0, 3, 4, 5, 7, 8], // 157\n        FORTE[6][14][2], // var\n        FORTE[6][14][1], //icv\n    ],\n    '15,1': [FORTE[6][15][0], // 158\n        FORTE[6][15][2], // var\n        FORTE[6][15][1], //icv\n    ],\n    '15,-1': [[0, 3, 4, 6, 7, 8], // 159\n        FORTE[6][15][2], // var\n        FORTE[6][15][1], //icv\n    ],\n    '16,1': [FORTE[6][16][0], // 160\n        FORTE[6][16][2], // var\n        FORTE[6][16][1], //icv\n    ],\n    '16,-1': [[0, 2, 3, 4, 7, 8], // 161\n        FORTE[6][16][2], // var\n        FORTE[6][16][1], //icv\n    ],\n    '17,1': [FORTE[6][17][0], // 162\n        FORTE[6][17][2], // var\n        FORTE[6][17][1], //icv\n    ],\n    '17,-1': [[0, 1, 4, 6, 7, 8], // 163\n        FORTE[6][17][2], // var\n        FORTE[6][17][1], //icv\n    ],\n    '18,1': [FORTE[6][18][0], // 164\n        FORTE[6][18][2], // var\n        FORTE[6][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 3, 6, 7, 8], // 165\n        FORTE[6][18][2], // var\n        FORTE[6][18][1], //icv\n    ],\n    '19,1': [FORTE[6][19][0], // 166\n        FORTE[6][19][2], // var\n        FORTE[6][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 4, 5, 7, 8], // 167\n        FORTE[6][19][2], // var\n        FORTE[6][19][1], //icv\n    ],\n    '20,0': [FORTE[6][20][0], // 168\n        FORTE[6][20][2], // var\n        FORTE[6][20][1], //icv\n    ],\n    '21,1': [FORTE[6][21][0], // 169\n        FORTE[6][21][2], // var\n        FORTE[6][21][1], //icv\n    ],\n    '21,-1': [[0, 2, 4, 5, 6, 8], // 170\n        FORTE[6][21][2], // var\n        FORTE[6][21][1], //icv\n    ],\n    '22,1': [FORTE[6][22][0], // 171\n        FORTE[6][22][2], // var\n        FORTE[6][22][1], //icv\n    ],\n    '22,-1': [[0, 2, 4, 6, 7, 8], // 172\n        FORTE[6][22][2], // var\n        FORTE[6][22][1], //icv\n    ],\n    '23,0': [FORTE[6][23][0], // 173\n        FORTE[6][23][2], // var\n        FORTE[6][23][1], //icv\n    ],\n    '24,1': [FORTE[6][24][0], // 174\n        FORTE[6][24][2], // var\n        FORTE[6][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 5, 7, 8], // 175\n        FORTE[6][24][2], // var\n        FORTE[6][24][1], //icv\n    ],\n    '25,1': [FORTE[6][25][0], // 176\n        FORTE[6][25][2], // var\n        FORTE[6][25][1], //icv\n    ],\n    '25,-1': [[0, 2, 3, 5, 7, 8], // 177\n        FORTE[6][25][2], // var\n        FORTE[6][25][1], //icv\n    ],\n    '26,0': [FORTE[6][26][0], // 178\n        FORTE[6][26][2], // var\n        FORTE[6][26][1], //icv\n    ],\n    '27,1': [FORTE[6][27][0], // 179\n        FORTE[6][27][2], // var\n        FORTE[6][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 5, 6, 8, 9], // 180\n        FORTE[6][27][2], // var\n        FORTE[6][27][1], //icv\n    ],\n    '28,0': [FORTE[6][28][0], // 181\n        FORTE[6][28][2], // var\n        FORTE[6][28][1], //icv\n    ],\n    '29,0': [FORTE[6][29][0], // 182\n        FORTE[6][29][2], // var\n        FORTE[6][29][1], //icv\n    ],\n    '30,1': [FORTE[6][30][0], // 183\n        FORTE[6][30][2], // var\n        FORTE[6][30][1], //icv\n    ],\n    '30,-1': [[0, 2, 3, 6, 8, 9], // 184\n        FORTE[6][30][2], // var\n        FORTE[6][30][1], //icv\n    ],\n    '31,1': [FORTE[6][31][0], // 185\n        FORTE[6][31][2], // var\n        FORTE[6][31][1], //icv\n    ],\n    '31,-1': [[0, 1, 4, 6, 8, 9], // 186\n        FORTE[6][31][2], // var\n        FORTE[6][31][1], //icv\n    ],\n    '32,0': [FORTE[6][32][0], // 187\n        FORTE[6][32][2], // var\n        FORTE[6][32][1], //icv\n    ],\n    '33,1': [FORTE[6][33][0], // 188\n        FORTE[6][33][2], // var\n        FORTE[6][33][1], //icv\n    ],\n    '33,-1': [[0, 2, 4, 6, 7, 9], // 189\n        FORTE[6][33][2], // var\n        FORTE[6][33][1], //icv\n    ],\n    '34,1': [FORTE[6][34][0], // 190\n        FORTE[6][34][2], // var\n        FORTE[6][34][1], //icv\n    ],\n    '34,-1': [[0, 2, 4, 6, 8, 9], // 191\n        FORTE[6][34][2], // var\n        FORTE[6][34][1], //icv\n    ],\n    '35,0': [FORTE[6][35][0], // 192\n        FORTE[6][35][2], // var\n        FORTE[6][35][1], //icv\n    ],\n    '36,1': [FORTE[6][36][0], // 193\n        FORTE[6][36][2], // var\n        FORTE[6][36][1], //icv\n    ],\n    '36,-1': [[0, 3, 4, 5, 6, 7], // 194\n        FORTE[6][36][2], // var\n        FORTE[6][36][1], //icv\n    ],\n    '37,0': [FORTE[6][37][0], // 195\n        FORTE[6][37][2], // var\n        FORTE[6][37][1], //icv\n    ],\n    '38,0': [FORTE[6][38][0], // 196\n        FORTE[6][38][2], // var\n        FORTE[6][38][1], //icv\n    ],\n    '39,1': [FORTE[6][39][0], // 197\n        FORTE[6][39][2], // var\n        FORTE[6][39][1], //icv\n    ],\n    '39,-1': [[0, 3, 4, 5, 6, 8], // 198\n        FORTE[6][39][2], // var\n        FORTE[6][39][1], //icv\n    ],\n    '40,1': [FORTE[6][40][0], // 199\n        FORTE[6][40][2], // var\n        FORTE[6][40][1], //icv\n    ],\n    '40,-1': [[0, 3, 5, 6, 7, 8], // 200\n        FORTE[6][40][2], // var\n        FORTE[6][40][1], //icv\n    ],\n    '41,1': [FORTE[6][41][0], // 201\n        FORTE[6][41][2], // var\n        FORTE[6][41][1], //icv\n    ],\n    '41,-1': [[0, 2, 5, 6, 7, 8], // 202\n        FORTE[6][41][2], // var\n        FORTE[6][41][1], //icv\n    ],\n    '42,0': [FORTE[6][42][0], // 203\n        FORTE[6][42][2], // var\n        FORTE[6][42][1], //icv\n    ],\n    '43,1': [FORTE[6][43][0], // 204\n        FORTE[6][43][2], // var\n        FORTE[6][43][1], //icv\n    ],\n    '43,-1': [[0, 2, 3, 6, 7, 8], // 205\n        FORTE[6][43][2], // var\n        FORTE[6][43][1], //icv\n    ],\n    '44,1': [FORTE[6][44][0], // 206\n        FORTE[6][44][2], // var\n        FORTE[6][44][1], //icv\n    ],\n    '44,-1': [[0, 3, 4, 7, 8, 9], // 207\n        FORTE[6][44][2], // var\n        FORTE[6][44][1], //icv\n    ],\n    '45,0': [FORTE[6][45][0], // 208\n        FORTE[6][45][2], // var\n        FORTE[6][45][1], //icv\n    ],\n    '46,1': [FORTE[6][46][0], // 209\n        FORTE[6][46][2], // var\n        FORTE[6][46][1], //icv\n    ],\n    '46,-1': [[0, 3, 5, 7, 8, 9], // 210\n        FORTE[6][46][2], // var\n        FORTE[6][46][1], //icv\n    ],\n    '47,1': [FORTE[6][47][0], // 211\n        FORTE[6][47][2], // var\n        FORTE[6][47][1], //icv\n    ],\n    '47,-1': [[0, 2, 5, 7, 8, 9], // 212\n        FORTE[6][47][2], // var\n        FORTE[6][47][1], //icv\n    ],\n    '48,0': [FORTE[6][48][0], // 213\n        FORTE[6][48][2], // var\n        FORTE[6][48][1], //icv\n    ],\n    '49,0': [FORTE[6][49][0], // 214\n        FORTE[6][49][2], // var\n        FORTE[6][49][1], //icv\n    ],\n    '50,0': [FORTE[6][50][0], // 215\n        FORTE[6][50][2], // var\n        FORTE[6][50][1], //icv\n    ],\n};\n// cardinality 7\nconst card_7 ={ '1,0': [FORTE[7][1][0], // 216\n    FORTE[7][1][2], // var\n    FORTE[7][1][1], //icv\n],\n    '2,1': [FORTE[7][2][0], // 217\n        FORTE[7][2][2], // var\n        FORTE[7][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7], // 218\n        FORTE[7][2][2], // var\n        FORTE[7][2][1], //icv\n    ],\n    '3,1': [FORTE[7][3][0], // 219\n        FORTE[7][3][2], // var\n        FORTE[7][3][1], //icv\n    ],\n    '3,-1': [[0, 3, 4, 5, 6, 7, 8], // 220\n        FORTE[7][3][2], // var\n        FORTE[7][3][1], //icv\n    ],\n    '4,1': [FORTE[7][4][0], // 221\n        FORTE[7][4][2], // var\n        FORTE[7][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 3, 4, 5, 6, 7], // 222\n        FORTE[7][4][2], // var\n        FORTE[7][4][1], //icv\n    ],\n    '5,1': [FORTE[7][5][0], // 223\n        FORTE[7][5][2], // var\n        FORTE[7][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 4, 5, 6, 7], // 224\n        FORTE[7][5][2], // var\n        FORTE[7][5][1], //icv\n    ],\n    '6,1': [FORTE[7][6][0], // 225\n        FORTE[7][6][2], // var\n        FORTE[7][6][1], //icv\n    ],\n    '6,-1': [[0, 1, 4, 5, 6, 7, 8], // 226\n        FORTE[7][6][2], // var\n        FORTE[7][6][1], //icv\n    ],\n    '7,1': [FORTE[7][7][0], // 227\n        FORTE[7][7][2], // var\n        FORTE[7][7][1], //icv\n    ],\n    '7,-1': [[0, 1, 2, 5, 6, 7, 8], // 228\n        FORTE[7][7][2], // var\n        FORTE[7][7][1], //icv\n    ],\n    '8,0': [FORTE[7][8][0], // 229\n        FORTE[7][8][2], // var\n        FORTE[7][8][1], //icv\n    ],\n    '9,1': [FORTE[7][9][0], // 230\n        FORTE[7][9][2], // var\n        FORTE[7][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6, 7, 8], // 231\n        FORTE[7][9][2], // var\n        FORTE[7][9][1], //icv\n    ],\n    '10,1': [FORTE[7][10][0], // 232\n        FORTE[7][10][2], // var\n        FORTE[7][10][1], //icv\n    ],\n    '10,-1': [[0, 3, 5, 6, 7, 8, 9], // 233\n        FORTE[7][10][2], // var\n        FORTE[7][10][1], //icv\n    ],\n    '11,1': [FORTE[7][11][0], // 234\n        FORTE[7][11][2], // var\n        FORTE[7][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 3, 4, 5, 7, 8], // 235\n        FORTE[7][11][2], // var\n        FORTE[7][11][1], //icv\n    ],\n    '12,0': [FORTE[7][12][0], // 236\n        FORTE[7][12][2], // var\n        FORTE[7][12][1], //icv\n    ],\n    '13,1': [FORTE[7][13][0], // 237\n        FORTE[7][13][2], // var\n        FORTE[7][13][1], //icv\n    ],\n    '13,-1': [[0, 2, 3, 4, 6, 7, 8], // 238\n        FORTE[7][13][2], // var\n        FORTE[7][13][1], //icv\n    ],\n    '14,1': [FORTE[7][14][0], // 239\n        FORTE[7][14][2], // var\n        FORTE[7][14][1], //icv\n    ],\n    '14,-1': [[0, 1, 3, 5, 6, 7, 8], // 240\n        FORTE[7][14][2], // var\n        FORTE[7][14][1], //icv\n    ],\n    '15,0': [FORTE[7][15][0], // 241\n        FORTE[7][15][2], // var\n        FORTE[7][15][1], //icv\n    ],\n    '16,1': [FORTE[7][16][0], // 242\n        FORTE[7][16][2], // var\n        FORTE[7][16][1], //icv\n    ],\n    '16,-1': [[0, 3, 4, 6, 7, 8, 9], // 243\n        FORTE[7][16][2], // var\n        FORTE[7][16][1], //icv\n    ],\n    '17,0': [FORTE[7][17][0], // 244\n        FORTE[7][17][2], // var\n        FORTE[7][17][1], //icv\n    ],\n    '18,1': [FORTE[7][18][0], // 245\n        FORTE[7][18][2], // var\n        FORTE[7][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 4, 6, 7, 8, 9], // 246\n        FORTE[7][18][2], // var\n        FORTE[7][18][1], //icv\n    ],\n    '19,1': [FORTE[7][19][0], // 247\n        FORTE[7][19][2], // var\n        FORTE[7][19][1], //icv\n    ],\n    '19,-1': [[0, 2, 3, 6, 7, 8, 9], // 248\n        FORTE[7][19][2], // var\n        FORTE[7][19][1], //icv\n    ],\n    '20,1': [FORTE[7][20][0], // 249\n        FORTE[7][20][2], // var\n        FORTE[7][20][1], //icv\n    ],\n    '20,-1': [[0, 1, 2, 5, 7, 8, 9], // 250\n        FORTE[7][20][2], // var\n        FORTE[7][20][1], //icv\n    ],\n    '21,1': [FORTE[7][21][0], // 251\n        FORTE[7][21][2], // var\n        FORTE[7][21][1], //icv\n    ],\n    '21,-1': [[0, 1, 4, 5, 7, 8, 9], // 252\n        FORTE[7][21][2], // var\n        FORTE[7][21][1], //icv\n    ],\n    '22,0': [FORTE[7][22][0], // 253\n        FORTE[7][22][2], // var\n        FORTE[7][22][1], //icv\n    ],\n    '23,1': [FORTE[7][23][0], // 254\n        FORTE[7][23][2], // var\n        FORTE[7][23][1], //icv\n    ],\n    '23,-1': [[0, 2, 4, 5, 6, 7, 9], // 255\n        FORTE[7][23][2], // var\n        FORTE[7][23][1], //icv\n    ],\n    '24,1': [FORTE[7][24][0], // 256\n        FORTE[7][24][2], // var\n        FORTE[7][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 6, 7, 8, 9], // 257\n        FORTE[7][24][2], // var\n        FORTE[7][24][1], //icv\n    ],\n    '25,1': [FORTE[7][25][0], // 258\n        FORTE[7][25][2], // var\n        FORTE[7][25][1], //icv\n    ],\n    '25,-1': [[0, 2, 3, 5, 6, 7, 9], // 259\n        FORTE[7][25][2], // var\n        FORTE[7][25][1], //icv\n    ],\n    '26,1': [FORTE[7][26][0], // 260\n        FORTE[7][26][2], // var\n        FORTE[7][26][1], //icv\n    ],\n    '26,-1': [[0, 2, 4, 5, 6, 8, 9], // 261\n        FORTE[7][26][2], // var\n        FORTE[7][26][1], //icv\n    ],\n    '27,1': [FORTE[7][27][0], // 262\n        FORTE[7][27][2], // var\n        FORTE[7][27][1], //icv\n    ],\n    '27,-1': [[0, 2, 4, 5, 7, 8, 9], // 263\n        FORTE[7][27][2], // var\n        FORTE[7][27][1], //icv\n    ],\n    '28,1': [FORTE[7][28][0], // 264\n        FORTE[7][28][2], // var\n        FORTE[7][28][1], //icv\n    ],\n    '28,-1': [[0, 2, 3, 4, 6, 8, 9], // 265\n        FORTE[7][28][2], // var\n        FORTE[7][28][1], //icv\n    ],\n    '29,1': [FORTE[7][29][0], // 266\n        FORTE[7][29][2], // var\n        FORTE[7][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 3, 5, 7, 8, 9], // 267\n        FORTE[7][29][2], // var\n        FORTE[7][29][1], //icv\n    ],\n    '30,1': [FORTE[7][30][0], // 268\n        FORTE[7][30][2], // var\n        FORTE[7][30][1], //icv\n    ],\n    '30,-1': [[0, 1, 3, 5, 7, 8, 9], // 269\n        FORTE[7][30][2], // var\n        FORTE[7][30][1], //icv\n    ],\n    '31,1': [FORTE[7][31][0], // 270\n        FORTE[7][31][2], // var\n        FORTE[7][31][1], //icv\n    ],\n    '31,-1': [[0, 2, 3, 5, 6, 8, 9], // 271\n        FORTE[7][31][2], // var\n        FORTE[7][31][1], //icv\n    ],\n    '32,1': [FORTE[7][32][0], // 272\n        FORTE[7][32][2], // var\n        FORTE[7][32][1], //icv\n    ],\n    '32,-1': [[0, 1, 3, 5, 6, 8, 9], // 273\n        FORTE[7][32][2], // var\n        FORTE[7][32][1], //icv\n    ],\n    '33,0': [FORTE[7][33][0], // 274\n        FORTE[7][33][2], // var\n        FORTE[7][33][1], //icv\n    ],\n    '34,0': [FORTE[7][34][0], // 275\n        FORTE[7][34][2], // var\n        FORTE[7][34][1], //icv\n    ],\n    '35,0': [FORTE[7][35][0], // 276\n        FORTE[7][35][2], // var\n        FORTE[7][35][1], //icv\n    ],\n    '36,1': [FORTE[7][36][0], // 277\n        FORTE[7][36][2], // var\n        FORTE[7][36][1], //icv\n    ],\n    '36,-1': [[0, 2, 3, 5, 6, 7, 8], // 278\n        FORTE[7][36][2], // var\n        FORTE[7][36][1], //icv\n    ],\n    '37,0': [FORTE[7][37][0], // 279\n        FORTE[7][37][2], // var\n        FORTE[7][37][1], //icv\n    ],\n    '38,1': [FORTE[7][38][0], // 280\n        FORTE[7][38][2], // var\n        FORTE[7][38][1], //icv\n    ],\n    '38,-1': [[0, 1, 3, 4, 6, 7, 8], // 281\n        FORTE[7][38][2], // var\n        FORTE[7][38][1], //icv\n    ],\n};\n// cardinality 8\nconst card_8 ={ '1,0': [FORTE[8][1][0], // 282\n    FORTE[8][1][2], // var\n    FORTE[8][1][1], //icv\n],\n    '2,1': [FORTE[8][2][0], // 283\n        FORTE[8][2][2], // var\n        FORTE[8][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8], // 284\n        FORTE[8][2][2], // var\n        FORTE[8][2][1], //icv\n    ],\n    '3,0': [FORTE[8][3][0], // 285\n        FORTE[8][3][2], // var\n        FORTE[8][3][1], //icv\n    ],\n    '4,1': [FORTE[8][4][0], // 286\n        FORTE[8][4][2], // var\n        FORTE[8][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 3, 4, 5, 6, 7, 8], // 287\n        FORTE[8][4][2], // var\n        FORTE[8][4][1], //icv\n    ],\n    '5,1': [FORTE[8][5][0], // 288\n        FORTE[8][5][2], // var\n        FORTE[8][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 4, 5, 6, 7, 8], // 289\n        FORTE[8][5][2], // var\n        FORTE[8][5][1], //icv\n    ],\n    '6,0': [FORTE[8][6][0], // 290\n        FORTE[8][6][2], // var\n        FORTE[8][6][1], //icv\n    ],\n    '7,0': [FORTE[8][7][0], // 291\n        FORTE[8][7][2], // var\n        FORTE[8][7][1], //icv\n    ],\n    '8,0': [FORTE[8][8][0], // 292\n        FORTE[8][8][2], // var\n        FORTE[8][8][1], //icv\n    ],\n    '9,0': [FORTE[8][9][0], // 293\n        FORTE[8][9][2], // var\n        FORTE[8][9][1], //icv\n    ],\n    '10,0': [FORTE[8][10][0], // 294\n        FORTE[8][10][2], // var\n        FORTE[8][10][1], //icv\n    ],\n    '11,1': [FORTE[8][11][0], // 295\n        FORTE[8][11][2], // var\n        FORTE[8][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 4, 5, 6, 7, 8, 9], // 296\n        FORTE[8][11][2], // var\n        FORTE[8][11][1], //icv\n    ],\n    '12,1': [FORTE[8][12][0], // 297\n        FORTE[8][12][2], // var\n        FORTE[8][12][1], //icv\n    ],\n    '12,-1': [[0, 2, 3, 4, 5, 6, 8, 9], // 298\n        FORTE[8][12][2], // var\n        FORTE[8][12][1], //icv\n    ],\n    '13,1': [FORTE[8][13][0], // 299\n        FORTE[8][13][2], // var\n        FORTE[8][13][1], //icv\n    ],\n    '13,-1': [[0, 2, 3, 5, 6, 7, 8, 9], // 300\n        FORTE[8][13][2], // var\n        FORTE[8][13][1], //icv\n    ],\n    '14,1': [FORTE[8][14][0], // 301\n        FORTE[8][14][2], // var\n        FORTE[8][14][1], //icv\n    ],\n    '14,-1': [[0, 2, 3, 4, 5, 7, 8, 9], // 302\n        FORTE[8][14][2], // var\n        FORTE[8][14][1], //icv\n    ],\n    '15,1': [FORTE[8][15][0], // 303\n        FORTE[8][15][2], // var\n        FORTE[8][15][1], //icv\n    ],\n    '15,-1': [[0, 1, 3, 5, 6, 7, 8, 9], // 304\n        FORTE[8][15][2], // var\n        FORTE[8][15][1], //icv\n    ],\n    '16,1': [FORTE[8][16][0], // 305\n        FORTE[8][16][2], // var\n        FORTE[8][16][1], //icv\n    ],\n    '16,-1': [[0, 1, 2, 4, 6, 7, 8, 9], // 306\n        FORTE[8][16][2], // var\n        FORTE[8][16][1], //icv\n    ],\n    '17,0': [FORTE[8][17][0], // 307\n        FORTE[8][17][2], // var\n        FORTE[8][17][1], //icv\n    ],\n    '18,1': [FORTE[8][18][0], // 308\n        FORTE[8][18][2], // var\n        FORTE[8][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 3, 4, 6, 7, 8, 9], // 309\n        FORTE[8][18][2], // var\n        FORTE[8][18][1], //icv\n    ],\n    '19,1': [FORTE[8][19][0], // 310\n        FORTE[8][19][2], // var\n        FORTE[8][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 3, 4, 5, 7, 8, 9], // 311\n        FORTE[8][19][2], // var\n        FORTE[8][19][1], //icv\n    ],\n    '20,0': [FORTE[8][20][0], // 312\n        FORTE[8][20][2], // var\n        FORTE[8][20][1], //icv\n    ],\n    '21,0': [FORTE[8][21][0], // 313\n        FORTE[8][21][2], // var\n        FORTE[8][21][1], //icv\n    ],\n    '22,1': [FORTE[8][22][0], // 314\n        FORTE[8][22][2], // var\n        FORTE[8][22][1], //icv\n    ],\n    '22,-1': [[0, 2, 4, 5, 7, 8, 9, 10], // 315\n        FORTE[8][22][2], // var\n        FORTE[8][22][1], //icv\n    ],\n    '23,0': [FORTE[8][23][0], // 316\n        FORTE[8][23][2], // var\n        FORTE[8][23][1], //icv\n    ],\n    '24,0': [FORTE[8][24][0], // 317\n        FORTE[8][24][2], // var\n        FORTE[8][24][1], //icv\n    ],\n    '25,0': [FORTE[8][25][0], // 318\n        FORTE[8][25][2], // var\n        FORTE[8][25][1], //icv\n    ],\n    '26,0': [FORTE[8][26][0], // 319\n        FORTE[8][26][2], // var\n        FORTE[8][26][1], //icv\n    ],\n    '27,1': [FORTE[8][27][0], // 320\n        FORTE[8][27][2], // var\n        FORTE[8][27][1], //icv\n    ],\n    '27,-1': [[0, 2, 3, 5, 6, 8, 9, 10], // 321\n        FORTE[8][27][2], // var\n        FORTE[8][27][1], //icv\n    ],\n    '28,0': [FORTE[8][28][0], // 322\n        FORTE[8][28][2], // var\n        FORTE[8][28][1], //icv\n    ],\n    '29,1': [FORTE[8][29][0], // 323\n        FORTE[8][29][2], // var\n        FORTE[8][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 3, 4, 6, 7, 8, 9], // 324\n        FORTE[8][29][2], // var\n        FORTE[8][29][1], //icv\n    ],\n};\n// cardinality 9\nconst card_9 ={ '1,0': [FORTE[9][1][0], // 325\n    FORTE[9][1][2], // var\n    FORTE[9][1][1], //icv\n],\n    '2,1': [FORTE[9][2][0], // 326\n        FORTE[9][2][2], // var\n        FORTE[9][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8, 9], // 327\n        FORTE[9][2][2], // var\n        FORTE[9][2][1], //icv\n    ],\n    '3,1': [FORTE[9][3][0], // 328\n        FORTE[9][3][2], // var\n        FORTE[9][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5, 6, 7, 8, 9], // 329\n        FORTE[9][3][2], // var\n        FORTE[9][3][1], //icv\n    ],\n    '4,1': [FORTE[9][4][0], // 330\n        FORTE[9][4][2], // var\n        FORTE[9][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 2, 4, 5, 6, 7, 8, 9], // 331\n        FORTE[9][4][2], // var\n        FORTE[9][4][1], //icv\n    ],\n    '5,1': [FORTE[9][5][0], // 332\n        FORTE[9][5][2], // var\n        FORTE[9][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 3, 5, 6, 7, 8, 9], // 333\n        FORTE[9][5][2], // var\n        FORTE[9][5][1], //icv\n    ],\n    '6,0': [FORTE[9][6][0], // 334\n        FORTE[9][6][2], // var\n        FORTE[9][6][1], //icv\n    ],\n    '7,1': [FORTE[9][7][0], // 335\n        FORTE[9][7][2], // var\n        FORTE[9][7][1], //icv\n    ],\n    '7,-1': [[0, 2, 3, 5, 6, 7, 8, 9, 10], // 336\n        FORTE[9][7][2], // var\n        FORTE[9][7][1], //icv\n    ],\n    '8,1': [FORTE[9][8][0], // 337\n        FORTE[9][8][2], // var\n        FORTE[9][8][1], //icv\n    ],\n    '8,-1': [[0, 2, 3, 4, 6, 7, 8, 9, 10], // 338\n        FORTE[9][8][2], // var\n        FORTE[9][8][1], //icv\n    ],\n    '9,0': [FORTE[9][9][0], // 339\n        FORTE[9][9][2], // var\n        FORTE[9][9][1], //icv\n    ],\n    '10,0': [FORTE[9][10][0], // 340\n        FORTE[9][10][2], // var\n        FORTE[9][10][1], //icv\n    ],\n    '11,1': [FORTE[9][11][0], // 341\n        FORTE[9][11][2], // var\n        FORTE[9][11][1], //icv\n    ],\n    '11,-1': [[0, 1, 3, 4, 5, 7, 8, 9, 10], // 342\n        FORTE[9][11][2], // var\n        FORTE[9][11][1], //icv\n    ],\n    '12,0': [FORTE[9][12][0], // 343\n        FORTE[9][12][2], // var\n        FORTE[9][12][1], //icv\n    ],\n};\n// cardinality 10\nconst card_10 ={ '1,0': [FORTE[10][1][0], // 344\n    FORTE[10][1][2], // var\n    FORTE[10][1][1], //icv\n],\n    '2,0': [FORTE[10][2][0], // 345\n        FORTE[10][2][2], // var\n        FORTE[10][2][1], //icv\n    ],\n    '3,0': [FORTE[10][3][0], // 346\n        FORTE[10][3][2], // var\n        FORTE[10][3][1], //icv\n    ],\n    '4,0': [FORTE[10][4][0], // 347\n        FORTE[10][4][2], // var\n        FORTE[10][4][1], //icv\n    ],\n    '5,0': [FORTE[10][5][0], // 348\n        FORTE[10][5][2], // var\n        FORTE[10][5][1], //icv\n    ],\n    '6,0': [FORTE[10][6][0], // 349\n        FORTE[10][6][2], // var\n        FORTE[10][6][1], //icv\n    ],\n};\n// cardinality 11\nconst card_11 ={ '1,0': [FORTE[11][1][0], // 350\n    FORTE[11][1][2], // var\n    FORTE[11][1][1], //icv\n],\n};\n// cardinality 12\nconst card_12 ={ '1,0': [FORTE[12][1][0], // 351\n    FORTE[12][1][2], // var\n    FORTE[12][1][1], //icv\n],\n};\n\n//-------------------------------------------------------------------------------\nexport const SCDICT = { 1: card_1,\n    2: card_2,\n    3: card_3,\n    4: card_4,\n    5: card_5,\n    6: card_6,\n    7: card_7,\n    8: card_8,\n    9: card_9,\n    10: card_10,\n    11: card_11,\n    12: card_12,\n};\n\n//-------------------------------------------------------------------------------\n// thes dicts provide index max fr cardinality key\nexport const TNMAX = { 0: 1, 1: 1, 2: 6, 3: 19, 4: 43, 5: 66, 6: 80,\n    7: 66, 8: 43, 9: 19, 10: 6, 11: 1, 12: 1 };\nexport const TNIMAX = { 0: 1, 1: 1, 2: 6, 3: 12, 4: 29, 5: 38, 6: 50,\n    7: 38, 8: 29, 9: 12, 10: 6, 11: 1, 12: 1 };\n\n// used to find TnI index numbers under Tn classification\nexport const TNREF = {  '1,1,0': 1,\n    '2,1,0': 1,\n    '2,2,0': 2,\n    '2,3,0': 3,\n    '2,4,0': 4,\n    '2,5,0': 5,\n    '2,6,0': 6,\n    '3,1,0': 1,\n    '3,2,1': 2,\n    '3,2,-1': 3,\n    '3,3,1': 4,\n    '3,3,-1': 5,\n    '3,4,1': 6,\n    '3,4,-1': 7,\n    '3,5,1': 8,\n    '3,5,-1': 9,\n    '3,6,0': 10,\n    '3,7,1': 11,\n    '3,7,-1': 12,\n    '3,8,1': 13,\n    '3,8,-1': 14,\n    '3,9,0': 15,\n    '3,10,0': 16,\n    '3,11,1': 17,\n    '3,11,-1': 18,\n    '3,12,0': 19,\n    '4,1,0': 1,\n    '4,2,1': 2,\n    '4,2,-1': 3,\n    '4,3,0': 4,\n    '4,4,1': 5,\n    '4,4,-1': 6,\n    '4,5,1': 7,\n    '4,5,-1': 8,\n    '4,6,0': 9,\n    '4,7,0': 10,\n    '4,8,0': 11,\n    '4,9,0': 12,\n    '4,10,0': 13,\n    '4,11,1': 14,\n    '4,11,-1': 15,\n    '4,12,1': 16,\n    '4,12,-1': 17,\n    '4,13,1': 18,\n    '4,13,-1': 19,\n    '4,14,1': 20,\n    '4,14,-1': 21,\n    '4,15,1': 22,\n    '4,15,-1': 23,\n    '4,16,1': 24,\n    '4,16,-1': 25,\n    '4,17,0': 26,\n    '4,18,1': 27,\n    '4,18,-1': 28,\n    '4,19,1': 29,\n    '4,19,-1': 30,\n    '4,20,0': 31,\n    '4,21,0': 32,\n    '4,22,1': 33,\n    '4,22,-1': 34,\n    '4,23,0': 35,\n    '4,24,0': 36,\n    '4,25,0': 37,\n    '4,26,0': 38,\n    '4,27,1': 39,\n    '4,27,-1': 40,\n    '4,28,0': 41,\n    '4,29,1': 42,\n    '4,29,-1': 43,\n    '5,1,0': 1,\n    '5,2,1': 2,\n    '5,2,-1': 3,\n    '5,3,1': 4,\n    '5,3,-1': 5,\n    '5,4,1': 6,\n    '5,4,-1': 7,\n    '5,5,1': 8,\n    '5,5,-1': 9,\n    '5,6,1': 10,\n    '5,6,-1': 11,\n    '5,7,1': 12,\n    '5,7,-1': 13,\n    '5,8,0': 14,\n    '5,9,1': 15,\n    '5,9,-1': 16,\n    '5,10,1': 17,\n    '5,10,-1': 18,\n    '5,11,1': 19,\n    '5,11,-1': 20,\n    '5,12,0': 21,\n    '5,13,1': 22,\n    '5,13,-1': 23,\n    '5,14,1': 24,\n    '5,14,-1': 25,\n    '5,15,0': 26,\n    '5,16,1': 27,\n    '5,16,-1': 28,\n    '5,17,0': 29,\n    '5,18,1': 30,\n    '5,18,-1': 31,\n    '5,19,1': 32,\n    '5,19,-1': 33,\n    '5,20,1': 34,\n    '5,20,-1': 35,\n    '5,21,1': 36,\n    '5,21,-1': 37,\n    '5,22,0': 38,\n    '5,23,1': 39,\n    '5,23,-1': 40,\n    '5,24,1': 41,\n    '5,24,-1': 42,\n    '5,25,1': 43,\n    '5,25,-1': 44,\n    '5,26,1': 45,\n    '5,26,-1': 46,\n    '5,27,1': 47,\n    '5,27,-1': 48,\n    '5,28,1': 49,\n    '5,28,-1': 50,\n    '5,29,1': 51,\n    '5,29,-1': 52,\n    '5,30,1': 53,\n    '5,30,-1': 54,\n    '5,31,1': 55,\n    '5,31,-1': 56,\n    '5,32,1': 57,\n    '5,32,-1': 58,\n    '5,33,0': 59,\n    '5,34,0': 60,\n    '5,35,0': 61,\n    '5,36,1': 62,\n    '5,36,-1': 63,\n    '5,37,0': 64,\n    '5,38,1': 65,\n    '5,38,-1': 66,\n    '6,1,0': 1,\n    '6,2,1': 2,\n    '6,2,-1': 3,\n    '6,3,1': 4,\n    '6,3,-1': 5,\n    '6,4,0': 6,\n    '6,5,1': 7,\n    '6,5,-1': 8,\n    '6,6,0': 9,\n    '6,7,0': 10,\n    '6,8,0': 11,\n    '6,9,1': 12,\n    '6,9,-1': 13,\n    '6,10,1': 14,\n    '6,10,-1': 15,\n    '6,11,1': 16,\n    '6,11,-1': 17,\n    '6,12,1': 18,\n    '6,12,-1': 19,\n    '6,13,0': 20,\n    '6,14,1': 21,\n    '6,14,-1': 22,\n    '6,15,1': 23,\n    '6,15,-1': 24,\n    '6,16,1': 25,\n    '6,16,-1': 26,\n    '6,17,1': 27,\n    '6,17,-1': 28,\n    '6,18,1': 29,\n    '6,18,-1': 30,\n    '6,19,1': 31,\n    '6,19,-1': 32,\n    '6,20,0': 33,\n    '6,21,1': 34,\n    '6,21,-1': 35,\n    '6,22,1': 36,\n    '6,22,-1': 37,\n    '6,23,0': 38,\n    '6,24,1': 39,\n    '6,24,-1': 40,\n    '6,25,1': 41,\n    '6,25,-1': 42,\n    '6,26,0': 43,\n    '6,27,1': 44,\n    '6,27,-1': 45,\n    '6,28,0': 46,\n    '6,29,0': 47,\n    '6,30,1': 48,\n    '6,30,-1': 49,\n    '6,31,1': 50,\n    '6,31,-1': 51,\n    '6,32,0': 52,\n    '6,33,1': 53,\n    '6,33,-1': 54,\n    '6,34,1': 55,\n    '6,34,-1': 56,\n    '6,35,0': 57,\n    '6,36,1': 58,\n    '6,36,-1': 59,\n    '6,37,0': 60,\n    '6,38,0': 61,\n    '6,39,1': 62,\n    '6,39,-1': 63,\n    '6,40,1': 64,\n    '6,40,-1': 65,\n    '6,41,1': 66,\n    '6,41,-1': 67,\n    '6,42,0': 68,\n    '6,43,1': 69,\n    '6,43,-1': 70,\n    '6,44,1': 71,\n    '6,44,-1': 72,\n    '6,45,0': 73,\n    '6,46,1': 74,\n    '6,46,-1': 75,\n    '6,47,1': 76,\n    '6,47,-1': 77,\n    '6,48,0': 78,\n    '6,49,0': 79,\n    '6,50,0': 80,\n    '7,1,0': 1,\n    '7,2,1': 2,\n    '7,2,-1': 3,\n    '7,3,1': 4,\n    '7,3,-1': 5,\n    '7,4,1': 6,\n    '7,4,-1': 7,\n    '7,5,1': 8,\n    '7,5,-1': 9,\n    '7,6,1': 10,\n    '7,6,-1': 11,\n    '7,7,1': 12,\n    '7,7,-1': 13,\n    '7,8,0': 14,\n    '7,9,1': 15,\n    '7,9,-1': 16,\n    '7,10,1': 17,\n    '7,10,-1': 18,\n    '7,11,1': 19,\n    '7,11,-1': 20,\n    '7,12,0': 21,\n    '7,13,1': 22,\n    '7,13,-1': 23,\n    '7,14,1': 24,\n    '7,14,-1': 25,\n    '7,15,0': 26,\n    '7,16,1': 27,\n    '7,16,-1': 28,\n    '7,17,0': 29,\n    '7,18,1': 30,\n    '7,18,-1': 31,\n    '7,19,1': 32,\n    '7,19,-1': 33,\n    '7,20,1': 34,\n    '7,20,-1': 35,\n    '7,21,1': 36,\n    '7,21,-1': 37,\n    '7,22,0': 38,\n    '7,23,1': 39,\n    '7,23,-1': 40,\n    '7,24,1': 41,\n    '7,24,-1': 42,\n    '7,25,1': 43,\n    '7,25,-1': 44,\n    '7,26,1': 45,\n    '7,26,-1': 46,\n    '7,27,1': 47,\n    '7,27,-1': 48,\n    '7,28,1': 49,\n    '7,28,-1': 50,\n    '7,29,1': 51,\n    '7,29,-1': 52,\n    '7,30,1': 53,\n    '7,30,-1': 54,\n    '7,31,1': 55,\n    '7,31,-1': 56,\n    '7,32,1': 57,\n    '7,32,-1': 58,\n    '7,33,0': 59,\n    '7,34,0': 60,\n    '7,35,0': 61,\n    '7,36,1': 62,\n    '7,36,-1': 63,\n    '7,37,0': 64,\n    '7,38,1': 65,\n    '7,38,-1': 66,\n    '8,1,0': 1,\n    '8,2,1': 2,\n    '8,2,-1': 3,\n    '8,3,0': 4,\n    '8,4,1': 5,\n    '8,4,-1': 6,\n    '8,5,1': 7,\n    '8,5,-1': 8,\n    '8,6,0': 9,\n    '8,7,0': 10,\n    '8,8,0': 11,\n    '8,9,0': 12,\n    '8,10,0': 13,\n    '8,11,1': 14,\n    '8,11,-1': 15,\n    '8,12,1': 16,\n    '8,12,-1': 17,\n    '8,13,1': 18,\n    '8,13,-1': 19,\n    '8,14,1': 20,\n    '8,14,-1': 21,\n    '8,15,1': 22,\n    '8,15,-1': 23,\n    '8,16,1': 24,\n    '8,16,-1': 25,\n    '8,17,0': 26,\n    '8,18,1': 27,\n    '8,18,-1': 28,\n    '8,19,1': 29,\n    '8,19,-1': 30,\n    '8,20,0': 31,\n    '8,21,0': 32,\n    '8,22,1': 33,\n    '8,22,-1': 34,\n    '8,23,0': 35,\n    '8,24,0': 36,\n    '8,25,0': 37,\n    '8,26,0': 38,\n    '8,27,1': 39,\n    '8,27,-1': 40,\n    '8,28,0': 41,\n    '8,29,1': 42,\n    '8,29,-1': 43,\n    '9,1,0': 1,\n    '9,2,1': 2,\n    '9,2,-1': 3,\n    '9,3,1': 4,\n    '9,3,-1': 5,\n    '9,4,1': 6,\n    '9,4,-1': 7,\n    '9,5,1': 8,\n    '9,5,-1': 9,\n    '9,6,0': 10,\n    '9,7,1': 11,\n    '9,7,-1': 12,\n    '9,8,1': 13,\n    '9,8,-1': 14,\n    '9,9,0': 15,\n    '9,10,0': 16,\n    '9,11,1': 17,\n    '9,11,-1': 18,\n    '9,12,0': 19,\n    '10,1,0': 1,\n    '10,2,0': 2,\n    '10,3,0': 3,\n    '10,4,0': 4,\n    '10,5,0': 5,\n    '10,6,0': 6,\n    '11,1,0': 1,\n    '12,1,0': 1,\n};\n\n\n// -----------------------------------------------------------------||||||||||||--\n// reference dict stores name and citation references\n\n// names found from many sources, including:\n// http://solo1.home.mindspring.com/pcsets.htm\n// Larry Solomon, 1997, 2000\n// Larry Solomon's 'The List of Chords, Their Properties and Use in Analysis,'\n// in Interface, Journal of New Music Research , 1982, v11/2.\n// http://www.sweb.cz/vladimir_ladma/english/music/structs/mus_rot.htm\n// Vladimir Ladma, Czech Republic\n\n// some changes: unison prefered to monad\n\n\nexport const SCREF = {\n    '1,1,0': { 'name': ['unison', 'monad', 'singleton'] },\n    '2,1,0': { 'name': ['interval class 1', 'minor second', 'm2', \n        'half step', 'semitone'] },\n    '2,2,0': { 'name': ['interval class 2', 'major second', 'M2', \n        'whole step', 'whole tone'] },\n    '2,3,0': { 'name': ['interval class 3', 'minor third', 'm3'] },\n    '2,4,0': { 'name': ['interval class 4', 'major third', 'M3'] },\n    '2,5,0': { 'name': ['interval class 5', 'perfect fourth', 'P4'] },\n    '2,6,0': { 'name': ['tritone', 'diminished fifth', 'augmented fourth'] },\n    '3,1,0': { 'name': ['chromatic trimirror'] },\n    '3,2,1': { 'name': ['phrygian trichord'] },\n    '3,2,-1': { 'name': ['minor trichord'] },\n    '3,3,1': { 'name': ['major-minor trichord'] },\n    '3,3,-1': { 'name': ['major-minor trichord'] },\n    '3,4,1': { 'name': ['incomplete major-seventh chord'] },\n    '3,4,-1': { 'name': ['incomplete major-seventh chord'] },\n    '3,5,1': { 'name': ['tritone-fourth'] },\n    '3,5,-1': { 'name': ['tritone-fourth'] },\n    '3,6,0': { 'name': ['whole-tone trichord'] },\n    '3,7,1': { 'name': ['incomplete minor-seventh chord'] },\n    '3,7,-1': { 'name': ['incomplete dominant-seventh chord'] },\n    '3,8,1': { 'name': ['incomplete dominant-seventh chord', 'Italian augmented sixth chord'] },\n    '3,8,-1': { 'name': ['incomplete half-diminished seventh chord'] },\n    '3,9,0': { 'name': ['quartal trichord'] },\n    '3,10,0': { 'name': ['diminished triad'] },\n    '3,11,1': { 'name': ['minor triad'] },\n    '3,11,-1': { 'name': ['major triad'] },\n    '3,12,0': { 'name': ['augmented triad', 'equal 3-part octave division'] },\n    '4,1,0': { 'name': ['chromatic tetramirror', 'BACH'] },\n    '4,2,1': { 'name': ['major-second tetracluster'] },\n    '4,2,-1': { 'name': ['major-second tetracluster'] },\n    '4,3,0': { 'name': ['alternating tetramirror'] },\n    '4,4,1': { 'name': ['minor third tetracluster'] },\n    '4,4,-1': { 'name': ['minor third tetracluster'] },\n    '4,5,1': { 'name': ['major third tetracluster'] },\n    '4,5,-1': { 'name': ['major third testacluster'] },\n    '4,6,0': { 'name': ['perfect fourth tetramirror'] },\n    '4,7,0': { 'name': ['Arabian tetramirror'] },\n    '4,8,0': { 'name': ['double-fourth tetramirror'] },\n    '4,9,0': { 'name': ['double tritone tetramirror'] },\n    '4,10,0': { 'name': ['minor tetramirror'] },\n    '4,11,1': { 'name': ['phrygian tetrachord'] },\n    '4,11,-1': { 'name': ['lydian tetrachord', 'major tetrachord'] },\n    '4,12,1': { 'name': ['harmonic minor tetrachord'] },\n    '4,12,-1': { 'name': ['major-third diminished terachord'] },\n    '4,13,1': { 'name': ['minor-second diminished tetrachord'] },\n    '4,13,-1': { 'name': ['perfect-fourth diminished tetrachord'] },\n    '4,14,1': { 'name': ['major-second minor tetrachord'] },\n    '4,14,-1': { 'name': ['perfect-fourth major tetrachord'] },\n    '4,15,1': { 'name': ['all-interval tetrachord'] },\n    '4,15,-1': { 'name': ['all-interval tetrachord'] },\n    '4,16,1': { 'name': ['minor-second quartal tetrachord'] },\n    '4,16,-1': { 'name': ['tritone quartal tetrachord'] },\n    '4,17,0': { 'name': ['major-minor tetramirror'] },\n    '4,18,1': { 'name': ['major-diminished tetrachord'] },\n    '4,18,-1': { 'name': ['minor-diminished tetrachord'] },\n    '4,19,1': { 'name': ['minor-augmented tetrachord'] },\n    '4,19,-1': { 'name': ['augmented major tetrachord'] },\n    '4,20,0': { 'name': ['major seventh chord'] },\n    '4,21,0': { 'name': ['whole-tone tetramirror'] },\n    '4,22,1': { 'name': ['major-second major tetrachord'] },\n    '4,22,-1': { 'name': ['perfect-fourth minor tetrachord'] },\n    '4,23,0': { 'name': ['quartal tetramirror'] },\n    '4,24,0': { 'name': ['augmented seventh chord'] },\n    '4,25,0': { 'name': [\"Messiaen's truncated mode 6\", 'French augmented sixth chord'] },\n    '4,26,0': { 'name': ['minor seventh chord'] },\n    '4,27,1': { 'name': ['half-diminished seventh chord'] },\n    '4,27,-1': { 'name': ['dominant seventh chord',\n        'major minor seventh chord', 'German augmented sixth chord', 'Swiss augmented sixth chord'] },\n    '4,28,0': { 'name': ['diminished seventh chord', 'equal 4-part octave division'] },\n    '4,29,1': { 'name': ['all-interval tetrachord'] },\n    '4,29,-1': { 'name': ['all-interval tetrachord'] },\n    '5,1,0': { 'name': ['chromatic pentamirror'] },\n    '5,2,1': { 'name': ['major-second pentacluster'] },\n    '5,2,-1': { 'name': ['major-second pentacluster'] },\n    '5,3,1': { 'name': ['minor-second major pentachord'] },\n    '5,3,-1': { 'name': ['Spanish pentacluster'] },\n    '5,4,1': { 'name': ['blues pentacluster'] },\n    '5,4,-1': { 'name': ['minor-third pentacluster'] },\n    '5,5,1': { 'name': ['major-third pentacluster'] },\n    '5,5,-1': { 'name': ['major-third pentacluster'] },\n    '5,6,1': { 'name': ['Asian pentacluster', 'quasi raga Megharanji'] },\n    '5,6,-1': { 'name': ['Asian pentacluster'] },\n    '5,7,1': { 'name': ['double pentacluster', 'quasi raga Nabhomani '] },\n    '5,7,-1': { 'name': ['double pentacluster'] },\n    '5,8,0': { 'name': ['tritone-symmetric pentamirror'] },\n    '5,9,1': { 'name': ['tritone-expanding pentachord'] },\n    '5,9,-1': { 'name': ['tritone-contracting pentachord'] },\n    '5,10,1': { 'name': ['alternating pentachord'] },\n    '5,10,-1': { 'name': ['alternating pentachord'] },\n    '5,11,1': { 'name': ['center-cluster pentachord'] },\n    '5,11,-1': { 'name': ['center-cluster pentachord'] },\n    '5,12,0': { 'name': ['locrian pentachord'] },\n    '5,13,1': { 'name': ['augmented pentacluster'] },\n    '5,13,-1': { 'name': ['augmented pentacluster'] },\n    '5,14,1': { 'name': ['double-seconds triple-fourth pentachord'] },\n    '5,14,-1': { 'name': ['double-seconds triple-fourth pentachord'] },\n    '5,15,0': { 'name': ['asssymetric pentamirror'] },\n    '5,16,1': { 'name': ['major-minor-diminished pentachord'] },\n    '5,16,-1': { 'name': ['major-minor diminished pentachord'] },\n    '5,17,0': { 'name': ['minor-major ninth chord'] },\n    '5,18,1': { 'name': ['Roma [Gypsy] pentachord'] },\n    '5,18,-1': { 'name': ['Roma [Gypsy] pentachord'] },\n    '5,19,1': { 'name': ['Javanese pentachord'] },\n    '5,19,-1': { 'name': ['Balinese pentachord'] },\n    '5,20,1': { 'name': ['Balinese Pelog pentatonic', \n        'quasi raga Bhupala', 'quasi raga Bibhas'] },\n    '5,20,-1': { 'name': ['Hirajoshi pentatonic', 'Iwato', 'Sakura', 'quasi raga Saveri'] },\n    '5,21,1': { 'name': ['major-augmented ninth chord', 'Syrian pentatonic',\n        'quasi raga Megharanji'] },\n    '5,21,-1': { 'name': ['Lebanese pentachord', 'augmented-minor chord'] },\n    '5,22,0': { 'name': ['Persian pentamirror', 'quasi raga Ramkali'] },\n    '5,23,1': { 'name': ['dorian pentachord', 'minor pentachord'] },\n    '5,23,-1': { 'name': ['major pentachord'] },\n    '5,24,1': { 'name': ['phrygian pentachord'] },\n    '5,24,-1': { 'name': ['lydian pentachord'] },\n    '5,25,1': { 'name': ['diminished-major ninth chord'] },\n    '5,25,-1': { 'name': ['minor-diminished ninth chord'] },\n    '5,26,1': { 'name': ['diminished-augmented ninth chord'] },\n    '5,26,-1': { 'name': ['augmented-diminished ninth chord'] },\n    '5,27,1': { 'name': ['major-ninth chord'] },\n    '5,27,-1': { 'name': ['minor-ninth chord'] },\n    '5,28,1': { 'name': ['augmented-sixth pentachord'] },\n    '5,28,-1': { 'name': ['Javanese pentatonic', 'augmented-sixth pentachord'] },\n    '5,29,1': { 'name': ['Kumoi pentachord'] },\n    '5,29,-1': { 'name': ['Kumoi pentachord'] },\n    '5,30,1': { 'name': ['enigmatic pentachord'] },\n    '5,30,-1': { 'name': ['enigmatic pentachord', 'altered pentatonic'] },\n    '5,31,1': { 'name': ['diminished minor-ninth chord'] },\n    '5,31,-1': { 'name': ['flat-ninth pentachord', 'quasi raga Ranjaniraga'] },\n    '5,32,1': { 'name': ['Neapolitan pentachord'] },\n    '5,32,-1': { 'name': ['Neapolitan pentachord'] },\n    '5,33,0': { 'name': ['whole-tone pentachord'] },\n    '5,34,0': { 'name': ['dominant-ninth', 'major-minor', 'Prometheus pentamirror',\n        'dominant pentatonic'] },\n    '5,35,0': { 'name': ['major pentatonic', 'black-key scale', 'blues pentatonic',\n        'slendro', 'quartal pentamirror'] },\n    '5,36,1': { 'name': ['major-seventh pentacluster'] },\n    '5,36,-1': { 'name': ['minor-seventh pentacluster'] },\n    '5,37,0': { 'name': ['center-cluster pentamirror'] },\n    '5,38,1': { 'name': ['diminished pentacluster'] },\n    '5,38,-1': { 'name': ['diminished pentacluster'] },\n    '6,1,0': { 'name': ['A all combinatorial [P6, I11, RI5, RI11]', 'chromatic hexamirror',\n        'first-order all-combinatorial'] },\n    '6,2,1': { 'name': ['combinatorial I [I11]'] },\n    '6,2,-1': { 'name': ['combinatorial I [I1]'] },\n    '6,3,1': {},\n    '6,3,-1': {},\n    '6,4,0': { 'name': ['combinatorial RI [RI6]'] },\n    '6,5,1': { 'name': ['combinatorial I [I11]'] },\n    '6,5,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,6,0': { 'name': ['double cluster hexamirror'] },\n    '6,7,0': { 'name': ['B all combinatorial [P3, P9, I5, R6, R12, R8]', \n        \"Messiaen's mode 5\",\n        'second-order all combinatorial'] },\n    '6,8,0': { 'name': ['D all combinatorial [P6, I1, RI7]'] },\n    '6,9,1': { 'name': ['combinatorial I [I11]'] },\n    '6,9,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,10,1': {},\n    '6,10,-1': {},\n    '6,11,1': {},\n    '6,11,-1': {},\n    '6,12,1': {},\n    '6,12,-1': {},\n    '6,13,0': { 'name': ['alternating hexamirror', 'combinatorial I [I7]'] },\n    '6,14,1': { 'name': ['combinatorial P [P6]'] },\n    '6,14,-1': { 'name': ['combinatorial P [P6]'] },\n    '6,15,1': { 'name': ['combinatorial I [I11]'] },\n    '6,15,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,16,1': { 'name': ['combinatorial I [I3]'] },\n    '6,16,-1': { 'name': ['combinatorial I [I1]', 'quasi raga Megha'] },\n    '6,17,1': { 'name': ['all tri-chord hexachord'] },\n    '6,17,-1': { 'name': ['all tri-chord hexachord [inverted form]'] },\n    '6,18,1': { 'name': ['combinatorial I [I11]'] },\n    '6,18,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,19,1': {},\n    '6,19,-1': {},\n    '6,20,0': { 'name': \n    ['E all combinatorial [P2, P6, P10, I3, I7, R4, R8, RI1, RI5, RI9]',\n        \"Messiaen's truncated mode 3\", 'Genus tertium',\n        'third-order all combinatorial'] },\n    '6,21,1': { 'name': ['combinatorial I [I1]'] },\n    '6,21,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,22,1': { 'name': ['combinatorial I [I11]'] },\n    '6,22,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,23,0': { 'name': ['combinatorial RI [RI8]', 'super-locrian hexa mirror'] },\n    '6,24,1': {},\n    '6,24,-1': { 'name': ['melodic-minor hexachord'] },\n    '6,25,1': { 'name': ['locrian hexachord'] },\n    '6,25,-1': { 'name': ['minor hexachord'] },\n    '6,26,0': { 'name': ['phrygian hexamirror', 'combinatorial RI [RI8]'] },\n    '6,27,1': { 'name': ['combinatorial I [I11]'] },\n    '6,27,-1': { 'name': ['combinatorial I [I1]', 'pyramid hexachord'] },\n    '6,28,0': { 'name': ['double-phrygian heachord', 'combinatorial RI [RI6]'] },\n    '6,29,0': { 'name': ['combinatorial RI [RI9]'] },\n    '6,30,1': { 'name': [\"Messiaen's truncated mode 2\", 'minor-bitonal hexachord',\n        'combinatorial R [R6]', 'combinatorial I [I1, I7]'] },\n    '6,30,-1': { 'name': [\"Stravinsky's Petrouchka-chord\", \"Messiaen's truncated mode 2\",\n        'major-bitonal hexachord', 'combinatorial R [R6]',\n        'combinatorial I [I1, I7]'] },\n    '6,31,1': { 'name': ['combinatorial I [I7]'] },\n    '6,31,-1': { 'name': ['combinatorial I [I11]'] },\n    '6,32,0': { 'name': ['C all combinatorial [P6, I3, RI9]', 'Guidon/Arezzo',\n        'Arezzo major diatonic', 'major hexamirror', 'quartal hexamirror',\n        'first-order all combinatorial'] },\n    '6,33,1': { 'name': ['dorian hexachord', 'combinatorial I [I6]'] },\n    '6,33,-1': { 'name': ['dominant-eleventh', 'lydian hexachord', 'combinatorial I [I1]'] },\n    '6,34,1': { 'name': [\"Scriabin's Mystic-chord\", 'Prometheus hexachord',\n        'combinatorial I [I11]'] },\n    '6,34,-1': { 'name': ['augmented-eleventh', 'harmonic hexachord', \n        'combinatorial I [I7]'] },\n    '6,35,0': { 'name': ['whole tone scale', '6 equal part division',\n        'F all-combinatorial [P1, P3, P5, P7, P9, P11, I1, I3, I5, I7, '\n                              + 'I9, I11, R2, R4, R6, R8, R10, RI2, RI4, RI6, RI8, RI10]',\n        \"Messiaen's mode 1\", 'sixth-order all combinatorial'] },\n    '6,36,1': {},\n    '6,36,-1': {},\n    '6,37,0': { 'name': ['combinatorial RI [RI4]'] },\n    '6,38,0': { 'name': ['combinatorial RI [RI3]'] },\n    '6,39,1': {},\n    '6,39,-1': {},\n    '6,40,1': {},\n    '6,40,-1': {},\n    '6,41,1': {},\n    '6,41,-1': {},\n    '6,42,0': { 'name': ['combinatorial RI [RI3]'] },\n    '6,43,1': { 'name': ['complement of all tri-chord hexachord'] },\n    '6,43,-1': { 'name': ['complement of all-tri-chord hexachord [inverted form]'] },\n    '6,44,1': { 'name': ['Schoenberg Anagram hexachord'] },\n    '6,44,-1': { 'name': ['quasi raga Bauli'] },\n    '6,45,0': { 'name': ['combinatorial RI [RI6]'] },\n    '6,46,1': {},\n    '6,46,-1': {},\n    '6,47,1': {},\n    '6,47,-1': { 'name': ['blues scale'] },\n    '6,48,0': { 'name': ['combinatorial RI [RI2]'] },\n    '6,49,0': { 'name': ['combinatorial RI [RI4]', 'Prometheus Neapolitan mode'] },\n    '6,50,0': { 'name': ['combinatorial RI [RI1]'] },\n    '7,1,0': { 'name': ['chromatic heptamirror'] },\n    '7,2,1': {},\n    '7,2,-1': {},\n    '7,3,1': {},\n    '7,3,-1': {},\n    '7,4,1': {},\n    '7,4,-1': {},\n    '7,5,1': {},\n    '7,5,-1': {},\n    '7,6,1': {},\n    '7,6,-1': {},\n    '7,7,1': {},\n    '7,7,-1': {},\n    '7,8,0': {},\n    '7,9,1': {},\n    '7,9,-1': {},\n    '7,10,1': {},\n    '7,10,-1': {},\n    '7,11,1': {},\n    '7,11,-1': {},\n    '7,12,0': {},\n    '7,13,1': {},\n    '7,13,-1': {},\n    '7,14,1': {},\n    '7,14,-1': {},\n    '7,15,0': {},\n    '7,16,1': { 'name': [\"Debussy's heptatonic\"] },\n    '7,16,-1': {},\n    '7,17,0': {},\n    '7,18,1': {},\n    '7,18,-1': {},\n    '7,19,1': {},\n    '7,19,-1': {},\n    '7,20,1': { 'name': ['chromatic phrygian inverse'] },\n    '7,20,-1': { 'name': ['Greek chromatic', 'chromatic mixolydian', 'chromatic dorian',\n        'quasi raga Pantuvarali', 'mela Kanakangi'] },\n    '7,21,1': {},\n    '7,21,-1': { 'name': ['Gypsy [Roma] hexatonic'] },\n    '7,22,0': { 'name': ['double harmonic scale', 'Persian', 'major Gypsy [Roma]',\n        'Hungarian minor', 'double harmonic scale', 'Asian',\n        'quasi raga Mayamdavagaula'] },\n    '7,23,1': {},\n    '7,23,-1': { 'name': ['tritone major heptachord'] },\n    '7,24,1': {},\n    '7,24,-1': { 'name': ['mystic heptaachord', 'Enigmatic heptatonic'] },\n    '7,25,1': {},\n    '7,25,-1': {},\n    '7,26,1': {},\n    '7,26,-1': {},\n    '7,27,1': {},\n    '7,27,-1': { 'name': ['modified blues'] },\n    '7,28,1': {},\n    '7,28,-1': {},\n    '7,29,1': {},\n    '7,29,-1': {},\n    '7,30,1': { 'name': ['Neapolitan-minor mode'] },\n    '7,30,-1': {},\n    '7,31,1': { 'name': ['alternating heptachord', 'Hungarian major mode'] },\n    '7,31,-1': { 'name': ['diminished scale', 'alternating heptachord'] },\n    '7,32,1': { 'name': ['harmonic minor scale', 'Spanish Gypsy', 'mela Kiravani'] },\n    '7,32,-1': { 'name': ['harmonic major scale', 'harmonic minor inverse', 'mela Cakravana',\n        'quasi raga Ahir Bhairav'] },\n    '7,33,0': { 'name': ['Neapolitan-major mode', 'leading-whole-tone mode'] },\n    '7,34,0': { 'name': ['melodic minor ascending scale', 'jazz minor',\n        'augmented thirteenth heptamirror', 'harmonic/super-locrian'] },\n    '7,35,0': { 'name': ['major scale', 'major diatonic heptachord', 'natural minor scale',\n        'dominant thirteenth', 'locrian', 'phrygian', 'major inverse'] },\n    '7,36,1': {},\n    '7,36,-1': {},\n    '7,37,0': {},\n    '7,38,1': {},\n    '7,38,-1': {},\n    '8,1,0': { 'name': ['chromatic octamirror'] },\n    '8,2,1': {},\n    '8,2,-1': {},\n    '8,3,0': {},\n    '8,4,1': {},\n    '8,4,-1': {},\n    '8,5,1': {},\n    '8,5,-1': {},\n    '8,6,0': {},\n    '8,7,0': {},\n    '8,8,0': {},\n    '8,9,0': { 'name': [\"Messiaen's mode 4\"] },\n    '8,10,0': {},\n    '8,11,1': {},\n    '8,11,-1': { 'name': ['blues octatonic'] },\n    '8,12,1': {},\n    '8,12,-1': {},\n    '8,13,1': { 'name': ['blues octatonic'] },\n    '8,13,-1': {},\n    '8,14,1': {},\n    '8,14,-1': {},\n    '8,15,1': {},\n    '8,15,-1': {},\n    '8,16,1': {},\n    '8,16,-1': { 'name': ['enigmatic octachord'] },\n    '8,17,0': {},\n    '8,18,1': {},\n    '8,18,-1': {},\n    '8,19,1': {},\n    '8,19,-1': {},\n    '8,20,0': {},\n    '8,21,0': {},\n    '8,22,1': {},\n    '8,22,-1': { 'name': ['Spanish octatonic scale'] },\n    '8,23,0': { 'name': ['Greek', 'blues', 'quartal octachord', 'diatonic octad'] },\n    '8,24,0': {},\n    '8,25,0': { 'name': [\"Messiaen's mode 6\"] },\n    '8,26,0': { 'name': ['blues', 'Spanish phrygian'] },\n    '8,27,1': {},\n    '8,27,-1': {},\n    '8,28,0': { 'name': ['octatonic scale', \"Messiaen's mode 2\", \n        'alternating octatonic scale',\n        'diminished scale'] },\n    '8,29,1': {},\n    '8,29,-1': {},\n    '9,1,0': { 'name': ['chromatic nonamirror'] },\n    '9,2,1': {},\n    '9,2,-1': {},\n    '9,3,1': {},\n    '9,3,-1': {},\n    '9,4,1': {},\n    '9,4,-1': {},\n    '9,5,1': {},\n    '9,5,-1': {},\n    '9,6,0': {},\n    '9,7,1': { 'name': ['nonatonic blues'] },\n    '9,7,-1': {},\n    '9,8,1': {},\n    '9,8,-1': {},\n    '9,9,0': {},\n    '9,10,0': {},\n    '9,11,1': {},\n    '9,11,-1': { 'name': ['diminishing nonachord'] },\n    '9,12,0': { 'name': [\"Messiaen's mode 3\", 'Tsjerepnin'] },\n    '10,1,0': { 'name': ['chromatic decamirror'] },\n    '10,2,0': {},\n    '10,3,0': {},\n    '10,4,0': {},\n    '10,5,0': { 'name': ['major-minor mixed'] },\n    '10,6,0': { 'name': [\"Messiaen's mode 7\"] },\n    '11,1,0': { 'name': ['chromatic undecamirror'] },\n    '12,1,0': { 'name': ['aggregate', 'dodecachord', 'twelve-tone chromatic',\n        'chromatic scale', 'dodecamirror'] },\n};\n\nexport function forteIndexToInversionsAvailable(card, index) {\n    if (card < 1 || card > 12) {\n        throw new Error(`cardinality ${card} is not valid`);\n    }\n    if (index < 1 || index > TNMAX[card]) {\n        throw new Error(`index ${index} is invalid`);\n    }\n    // get morris invaraince vector\n    const morris = FORTE[card][index][2];\n    if (morris[1] > 0) { // second value stored inversion status\n        return [0];\n    } else {\n        return [-1, 1];\n    }\n}\n\nfunction _chordTableAddress(cardinality, forteClass, inversion, pcOriginal) {\n    return {\n        cardinality,\n        forteClass,\n        inversion,\n        pcOriginal,\n    };\n}\n\nfunction _validateAddress(address) {\n    if (address !== undefined && address.cardinality !== undefined) {\n        // got an object...\n        address = [address.cardinality, address.forteClass, address.inversion, address.pcOriginal];\n    }\n    \n    const [card, index] = address.slice(0, 2);\n    let inversion;\n    if (address.length >= 3 && address[2] !== undefined) {\n        inversion = address[2];\n    }\n    if (card < 1 || card > 13) {\n        throw new Error(`cardinality ${card} not valid`);\n    }\n    // using TN mode for all comparions\n    if (index < 1 || index > TNMAX[card]) {\n        throw new Error(`index ${index} not valid`);\n    }\n    const inversionsAvailable = forteIndexToInversionsAvailable(card, index);\n    if (inversion !== undefined) {\n        if (!inversionsAvailable.includes(inversion)) {\n            throw new Error(`inversion ${inversion} not valid`);\n        }\n    }\n    if (inversion === undefined) { // get a default inversion\n        if (inversionsAvailable.includes(0)) {\n            inversion = 0;\n        } else {\n            inversion = 1;\n        }\n    }\n    return [card, index, inversion];\n}\n\nexport function addressToTransposedNormalForm(address) {\n    const [card, index, inversion] = _validateAddress(address);\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][0];\n}\n\nexport function addressToPrimeForm(address) {\n    const [card, index, inversion] = _validateAddress(address.slice(0, 2));\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][0];\n}\n\nexport function addressToIntervalVector(address) {\n    const [card, index, inversion] = _validateAddress(address);\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][2];\n}\n\nexport function intervalVectorToAddress(vector) {\n    const post = [];\n    for (let card = 1; card < 13; card++) {\n        let num = 0;\n        for (const sc of FORTE[card]) {\n            if (sc === undefined) {\n                num += 1;\n                continue; // first, used for spacing\n            }\n            // index 1 is vector\n            if (common.arrayEquals(sc[1], vector)) {\n                post.push(_chordTableAddress(card, num));\n            }\n            num += 1;\n        }\n    }\n    return post;\n}\n    \nexport function addressToZAddress(address) {\n    const [card, index, unused_inversion] = _validateAddress(address);\n    const z = FORTE[card][index][3];\n    if (z === 0) {\n        return undefined;\n    } else {\n        let zReal = z;\n        if (Array.isArray(z)) {\n            zReal = z[0];\n        }\n        const zAddress = _validateAddress([card, zReal, undefined]);\n        return _chordTableAddress(zAddress[0], zAddress[1], zAddress[2]);\n    }\n}\n\nexport function addressToCommonNames(address) {\n    const addressNew = _validateAddress(address);\n    const refDict = SCREF[String(addressNew)];\n    return refDict.name;\n}\n\nexport function addressToForteName(address, classification='tn') {\n    const [card, index, inversion] = _validateAddress(address);\n    let iStr;\n    if (classification.toLowerCase() === 'tn') {\n        if (inversion === -1) {\n            iStr = 'B';\n        } else if (inversion === 1) {\n            iStr = 'A';\n        } else if (inversion === 0) {\n            iStr = '';\n        }\n    } else { // tni, ignore inversion\n        iStr = '';\n    }\n    return `${card}-${index}${iStr}`;\n}\n\nexport function seekChordTablesAddress(c) {\n    const pcSet = c.orderedPitchClasses;\n    if (!(pcSet.length)) {\n        throw new Error(\n            'cannot access chord tables address for Chord with no pitches'\n        );\n    } \n    const card = pcSet.length;\n    if (card === 1) { // its a singleton: return\n        return _chordTableAddress(1, 1, 0, pcSet[0]);\n    } else if (card === 12) { // its the aggregate\n        return _chordTableAddress(12, 1, 0, 0);\n    }\n    // go through each rotation of pcSet\n    const candidates = [];\n    for (let rot = 0; rot < card; rot++) {\n        const testSetOrig = pcSet.slice(rot);\n        for (let rotRemainder = 0; rotRemainder < rot; rotRemainder++) {\n            testSetOrig.push(pcSet[rotRemainder]);   \n        }\n        // transpose to lead with zero\n        const testSetOriginalPC = testSetOrig[0];\n        const testSet = [];\n        for (const x of testSetOrig) {\n            const zeroTransposed = posMod(x - testSetOriginalPC, 12);\n            testSet.push(zeroTransposed);\n        }\n        // create inversion; first take difference from 12 mod 12\n        const testSetInvert = [];\n        for (const x of testSet) {\n            testSetInvert.push(posMod(12 - x, 12));\n        }\n        testSetInvert.reverse(); // reverse order (first steps now last)\n        // transpose all steps (were last) to zero, mod 12\n        const testSetInvertOriginalPC = testSetInvert[0];        \n        for (let i = 0; i < testSetInvert.length; i++) {\n            testSetInvert[i] = posMod(testSetInvert[i] + (12 - testSetInvertOriginalPC), 12);\n        }\n        const candidateTuple = [testSet, testSetInvert, testSetOriginalPC];\n        candidates.push(candidateTuple);\n    }    \n    // compare sets to those in table\n    let match = false;\n    let matchedPCOriginal;\n    let index;\n    let inversion;\n\n    for (let indexCandidate = 0; indexCandidate < FORTE[card].length; indexCandidate++) {\n        const dataLine = FORTE[card][indexCandidate];\n        if (dataLine === undefined) {\n            continue; // spacer lines\n        }\n        const dataLinePcs = dataLine[0];\n        const inversionsAvailable = forteIndexToInversionsAvailable(card, indexCandidate);\n        for (const [candidate, candidateInversion, candidateOriginalPC] of candidates) {\n            if (common.arrayEquals(dataLinePcs, candidate)) {\n                index = indexCandidate;\n                if (inversionsAvailable.includes(0)) {\n                    inversion = 0;\n                } else {\n                    inversion = 1;\n                }\n                matchedPCOriginal = candidateOriginalPC;\n                match = true;\n                break;\n            } else if (common.arrayEquals(dataLinePcs, candidateInversion)) {\n                index = indexCandidate;\n                if (inversionsAvailable.includes(0)) {\n                    inversion = 0;\n                } else {\n                    inversion = -1;\n                }\n                matchedPCOriginal = candidateOriginalPC;\n                match = true;\n                break;\n            }\n        }\n    }\n    if (!match) {\n        throw new Error(`cannot find a chord table address for ${pcSet}`);\n    }\n    return _chordTableAddress(card, index, inversion, matchedPCOriginal);\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/scale -- Scales\n *\n * Does not implement the full range of scales from music21p\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { interval } from './interval.js';\nimport { pitch } from './pitch.js';\n\nimport { Music21Exception } from './exceptions21.js';\n\n// const DIRECTION_BI = 'bi';\n// const DIRECTION_DESCENDING = 'descending';\n// const DIRECTION_ASCENDING = 'ascending';\n\n/**\n * Scale module. See {@link music21.scale} namespace\n *\n * @exports music21/scale\n */\n/**\n * Scale namespace.  Right now only supports very simple scales.\n *\n * @namespace music21.scale\n * @memberof music21\n * @requires music21/base\n * @requires music21/common\n * @requires music21/debug\n * @requires music21/interval\n * @requires music21/pitch\n */\nexport class Scale extends base.Music21Object {\n    constructor() {\n        super();\n        this.type = 'Scale';\n    }\n\n    get name() {\n        return this.type;\n    }\n\n    get isConcrete() {\n        return false;\n    }\n}\n\nexport class AbstractScale extends Scale {\n    constructor() {\n        super();\n        this._net = []; // simplified -- no IntervalNetwork, just list of intervals\n        this.tonicDegree = 1;\n        this.octaveDuplicating = true;\n        this.deterministic = true;\n        this._alteredDegrees = {};\n        this._oneOctaveRealizationCache = undefined;\n    }\n\n    equals(other) {\n        if (\n            common.arrayEquals(this.classes, other.classes)\n            && this.tonicDegree === other.tonicDegree\n            && common.arrayEquals(this._net, other._net)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    buildNetworkFromPitches(pitchList) {\n        const pitchListReal = [];\n        for (const p of pitchList) {\n            if (typeof p === 'string') {\n                pitchListReal.push(new pitch.Pitch(p));\n            } else if (p.classes.includes('Note')) {\n                pitchListReal.push(p.pitch);\n            } else {\n                pitchListReal.push(p);\n            }\n        }\n        pitchList = pitchListReal;\n\n        const pLast = pitchList[pitchList.length - 1];\n        if (pLast.name === pitchList[0]) {\n            const p = pitchList[0].clone();\n            if (pLast.ps > pitchList[0]) {\n                // ascending;\n                while (p.ps < pLast.ps) {\n                    p.octave += 1;\n                }\n            } else {\n                while (p.ps < pLast.ps) {\n                    p.octave += -1;\n                }\n            }\n            pitchList.push(p);\n        }\n\n        const intervalList = [];\n        for (let i = 0; i < pitchList.length - 1; i++) {\n            const thisInterval = new interval.Interval(\n                pitchList[i],\n                pitchList[i + 1]\n            );\n            intervalList.push(thisInterval);\n        }\n        this._net = intervalList;\n    }\n\n    getDegreeMaxUnique() {\n        return this._net.length;\n    }\n\n    getRealization(\n        pitchObj,\n        unused_stepOfPitch,\n        unused_minPitch,\n        unused_maxPitch,\n        unused_direction,\n        unused_reverse\n    ) {\n        // if (direction === undefined) {\n        //     direction = DIRECTION_ASCENDING;\n        // }\n        // if (stepOfPitch === undefined) {\n        //     stepOfPitch = 1;\n        // }\n        if (typeof pitchObj === 'string') {\n            pitchObj = new pitch.Pitch(pitchObj);\n        } else {\n            pitchObj = pitchObj.clone();\n        }\n        const post = [pitchObj];\n        for (const intV of this._net) {\n            pitchObj = intV.transposePitch(pitchObj);\n            post.push(pitchObj);\n        }\n        return post;\n    }\n\n    getPitchFromNodeDegree(pitchReference, unused_nodeName, nodeDegreeTarget) {\n        const zeroIndexDegree = nodeDegreeTarget - 1;\n        for (let i = 0; i < zeroIndexDegree; i++) {\n            const thisIntv = this._net[i % this._net.length];\n            pitchReference = thisIntv.transposePitch(pitchReference);\n        }\n        return pitchReference;\n    }\n\n    getRelativeNodeDegree(\n        pitchReference,\n        unused_nodeName,\n        pitchTarget,\n        unused_comparisonAttribute,\n        unused_direction\n    ) {\n        if (typeof pitchTarget === 'string') {\n            pitchTarget = new pitch.Pitch(pitchTarget);\n        }\n        let realizedPitches;\n        if (this._oneOctaveRealizationCache !== undefined) {\n            realizedPitches = this._oneOctaveRealizationCache;\n        } else {\n            realizedPitches = this.getRealization(pitchReference);\n            this._oneOctaveRealizationCache = realizedPitches;\n        }\n        const realizedNames = [];\n        for (const p of realizedPitches) {\n            realizedNames.push(p.name);\n        }\n        const realizedIndex = realizedNames.indexOf(pitchTarget.name);\n        if (realizedIndex === -1) {\n            return undefined;\n        } else {\n            return realizedIndex + 1;\n        }\n    }\n}\n\nexport class AbstractDiatonicScale extends AbstractScale {\n    constructor(mode) {\n        super();\n        this.type = 'Abstract diatonic';\n        this.tonicDegree = undefined;\n        this.dominantDegree = undefined;\n        this.octaveDuplicating = true;\n        this._buildNetwork(mode);\n    }\n    _buildNetwork(mode) {\n        const srcList = ['M2', 'M2', 'm2', 'M2', 'M2', 'M2', 'm2'];\n        let intervalList;\n        this.tonicDegree = 1;\n        this.dominantDegree = 5;\n        if (['major', 'ionian', undefined].includes(mode)) {\n            intervalList = srcList;\n            this.relativeMajorDegree = 1;\n            this.relativeMinorDegree = 6;\n        } else if (['minor', 'aeolian'].includes(mode)) {\n            intervalList = srcList.slice(5, 7);\n            intervalList.push(...srcList.slice(0, 5));\n            this.relativeMajorDegree = 3;\n            this.relativeMinorDegree = 1;\n        }\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\nexport class AbstractHarmonicMinorScale extends AbstractScale {\n    constructor() {\n        super();\n        this.type = 'Abstract harmonic minor';\n        this.octaveDuplicating = true;\n        this._buildNetwork();\n    }\n    _buildNetwork() {\n        const intervalList = ['M2', 'm2', 'M2', 'M2', 'm2', 'A2', 'm2'];\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\n// temporary, until bidirectional scales are created\n// no need for descending, since minor takes care of that.\nexport class AbstractAscendingMelodicMinorScale extends AbstractScale {\n    constructor() {\n        super();\n        this.type = 'Abstract ascending melodic minor';\n        this.octaveDuplicating = true;\n        this._buildNetwork();\n    }\n    _buildNetwork() {\n        const intervalList = ['M2', 'm2', 'M2', 'M2', 'M2', 'M2', 'm2'];\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\nexport class ConcreteScale extends Scale {\n    constructor(tonic) {\n        super();\n        if (typeof tonic === 'string') {\n            tonic = new pitch.Pitch(tonic);\n        }\n        this.tonic = tonic;\n        this.abstract = undefined;\n    }\n\n    // when adding functionality here, must also be added to key.Key.\n    get isConcrete() {\n        if (this.tonic !== undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getTonic() {\n        return this.tonic;\n    }\n\n    // transpose\n    // tune\n    // No .romanNumeral function because of circular imports...\n    // romanNumeral(degree) {\n    //     return new roman.RomanNumeral(degree, this);\n    // }\n\n    getPitches(unused_minPitch, unused_maxPitch, unused_direction) {\n        let pitchObj;\n        if (this.tonic === undefined) {\n            pitchObj = new pitch.Pitch('C4');\n        } else {\n            pitchObj = this.tonic;\n        }\n        return this.abstract.getRealization(pitchObj);\n    }\n\n    pitchFromDegree(\n        degree,\n        unused_minPitch,\n        unused_maxPitch,\n        unused_direction,\n        unused_equateTermini\n    ) {\n        return this.abstract.getPitchFromNodeDegree(\n            this.tonic,\n            this.abstract.tonicDegree,\n            degree\n        );\n    }\n\n    getScaleDegreeFromPitch(\n        pitchTarget,\n        unused_direction,\n        unused_comparisonAttribute\n    ) {\n        return this.abstract.getRelativeNodeDegree(\n            this.tonic,\n            this.abstract.tonicDegree,\n            pitchTarget\n        );\n    }\n}\n\nexport class DiatonicScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.abstract = new AbstractDiatonicScale();\n        this.type = 'diatonic';\n    }\n}\n\nexport class MajorScale extends DiatonicScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'major';\n        this.abstract._buildNetwork(this.type);\n    }\n}\n\nexport class MinorScale extends DiatonicScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'minor';\n        this.abstract._buildNetwork(this.type);\n    }\n}\n\nexport class HarmonicMinorScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'harmonic minor';\n        this.abstract = new AbstractHarmonicMinorScale();\n    }\n}\n\nexport class AscendingMelodicMinorScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'harmonic minor';\n        this.abstract = new AbstractAscendingMelodicMinorScale();\n    }\n}\n\n/**\n * Function, not class\n *\n * @function music21.scale.SimpleDiatonicScale\n * @param {music21.pitch.Pitch} tonic\n * @param {Array<string>} scaleSteps - an array of diatonic prefixes,\n *     generally 'M' (major) or 'm' (minor) describing the seconds.\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function SimpleDiatonicScale(tonic, scaleSteps) {\n    if (tonic === undefined) {\n        tonic = new pitch.Pitch('C4');\n    } else if (!(tonic instanceof pitch.Pitch)) {\n        throw new Music21Exception(\n            'Cannot make a scale not from '\n                + 'a music21.pitch.Pitch object: '\n                + tonic\n        );\n    }\n    if (scaleSteps === undefined) {\n        scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    }\n    const gi = new interval.GenericInterval(2);\n    const pitches = [tonic];\n    let lastPitch = tonic;\n    for (let i = 0; i < scaleSteps.length; i++) {\n        const di = new interval.DiatonicInterval(scaleSteps[i], gi);\n        const ii = new interval.Interval(di);\n        const newPitch = ii.transposePitch(lastPitch);\n        if (debug) {\n            console.log('ScaleSimpleMajor -- adding pitch: ' + newPitch.name);\n        }\n        pitches.push(newPitch);\n        lastPitch = newPitch;\n    }\n    return pitches;\n}\n\n/**\n * One octave of a major scale\n *\n * @function music21.scale.ScaleSimpleMajor\n * @param {music21.pitch.Pitch} tonic\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function ScaleSimpleMajor(tonic) {\n    const scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    return SimpleDiatonicScale(tonic, scaleSteps);\n}\n\n/**\n * One octave of a minor scale\n *\n * @function music21.scale.ScaleSimpleMinor\n * @param {music21.pitch.Pitch} tonic\n * @param {string} [minorType='natural'] - 'harmonic', 'harmonic-minor',\n *     'melodic', 'melodic-minor', 'melodic-minor-ascending',\n *     'melodic-ascending' or other (=natural/melodic-descending)\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function ScaleSimpleMinor(tonic, minorType) {\n    const scaleSteps = ['M', 'm', 'M', 'M', 'm', 'M', 'M'];\n    if (typeof minorType === 'string') {\n        // \"harmonic minor\" -> \"harmonic-minor\"\n        minorType = minorType.replace(/\\s/g, '-');\n    }\n    if (minorType === 'harmonic' || minorType === 'harmonic-minor') {\n        scaleSteps[5] = 'A';\n        scaleSteps[6] = 'm';\n    } else if (\n        minorType === 'melodic'\n        || minorType === 'melodic-ascending'\n        || minorType === 'melodic-minor'\n        || minorType === 'melodic-minor-ascending'\n    ) {\n        scaleSteps[4] = 'M';\n        scaleSteps[6] = 'm';\n    }\n    return SimpleDiatonicScale(tonic, scaleSteps);\n}\n\nexport const scale = {\n    Scale,\n    AbstractScale,\n    AbstractDiatonicScale,\n    AbstractHarmonicMinorScale,\n    AbstractAscendingMelodicMinorScale,\n    ConcreteScale,\n    DiatonicScale,\n    MajorScale,\n    MinorScale,\n    HarmonicMinorScale,\n    AscendingMelodicMinorScale,\n\n    ScaleSimpleMinor,\n    ScaleSimpleMajor,\n    SimpleDiatonicScale,\n};\n","import { clef } from '../clef.js';\nimport { common } from '../common.js';\nimport { Stream, Measure, Part, Score } from '../stream.js';\n\nimport { Music21Exception } from '../exceptions21.js';\n\nclass MusicXMLExportException extends Music21Exception {\n    \n}\n\nfunction typeToMusicXMLType(value) {\n    if (value === 'longa') {\n        return 'long';\n    } else if (value === '2048th') {\n        throw new MusicXMLExportException('Cannot convert \"2048th\" duration to MusicXML (too short).');\n    } else {\n        return value;\n    }\n}\n\nfunction normalizeColor(color) {\n    const colors = {\n        'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', \n        'aquamarine': '#7fffd4', 'azure': '#f0ffff',\n        'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000', \n        'blanchedalmond': '#ffebcd', 'blue': '#0000ff', 'blueviolet': '#8a2be2', \n        'brown': '#a52a2a', 'burlywood': '#deb887',\n        'cadetblue': '#5f9ea0', 'chartreuse': '#7fff00', 'chocolate': '#d2691e', \n        'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', \n        'crimson': '#dc143c', 'cyan': '#00ffff',\n        'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', \n        'darkgray': '#a9a9a9', 'darkgreen': '#006400', 'darkkhaki': '#bdb76b', \n        'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n        'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', \n        'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f', 'darkslateblue': '#483d8b', \n        'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n        'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', \n        'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n        'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', \n        'fuchsia': '#ff00ff',\n        'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', \n        'goldenrod': '#daa520', 'gray': '#808080', 'green': '#008000', \n        'greenyellow': '#adff2f',\n        'honeydew': '#f0fff0', 'hotpink': '#ff69b4',\n        'indianred ': '#cd5c5c', 'indigo': '#4b0082', 'ivory': '#fffff0', \n        'khaki': '#f0e68c',\n        'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', \n        'lemonchiffon': '#fffacd', 'lightblue': '#add8e6', 'lightcoral': '#f08080', \n        'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n        'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', \n        'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa', 'lightskyblue': '#87cefa', \n        'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n        'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', \n        'linen': '#faf0e6',\n        'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', \n        'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3', 'mediumpurple': '#9370d8', \n        'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n        'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', \n        'mediumvioletred': '#c71585', 'midnightblue': '#191970', 'mintcream': '#f5fffa', \n        'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5',\n        'navajowhite': '#ffdead', 'navy': '#000080',\n        'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', \n        'orange': '#ffa500', 'orangered': '#ff4500', 'orchid': '#da70d6',\n        'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', \n        'palevioletred': '#d87093', 'papayawhip': '#ffefd5', 'peachpuff': '#ffdab9', \n        'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', \n        'purple': '#800080',\n        'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', \n        'royalblue': '#4169e1',\n        'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', \n        'seagreen': '#2e8b57', 'seashell': '#fff5ee', 'sienna': '#a0522d', \n        'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', \n        'slategray': '#708090', 'snow': '#fffafa', 'springgreen': '#00ff7f', \n        'steelblue': '#4682b4',\n        'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', \n        'turquoise': '#40e0d0',\n        'violet': '#ee82ee',\n        'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5',\n        'yellow': '#ffff00', 'yellowgreen': '#9acd32',\n    };\n    if (color === undefined || color === '') {\n        return color;\n    } else if (!color.startsWith('#')) {\n        return colors[color].toUpperCase();\n    } else {\n        return color.toUpperCase();\n    }\n}\n\n\nconst _classMapping = [\n    'Score', 'Part', 'Measure', 'Voice', // 'Stream', \n    'GeneralNote', // 'Pitch', 'Duration', 'Dynamic', 'DiatonicScale', 'Scale',\n    // 'Music21Object',\n];\n\nexport class GeneralObjectExporter {\n    constructor(obj) {\n        this.generalObj = obj;\n    }\n    \n    parse(obj) {\n        if (obj === undefined) {\n            obj = this.generalObj;\n        }\n        const outObj = this.fromGeneralObj(obj);\n        return this.parseWellformedObject(outObj);\n    }\n    \n    parseWellformedObject(sc) {\n        const scoreExporter = new ScoreExporter(sc);\n        scoreExporter.parse();\n        return scoreExporter.asBytes();\n    }\n    \n    fromGeneralObj(obj) {\n        const classes = obj.classes;\n        let outObj;\n        for (const cM of _classMapping) {\n            if (classes.includes(cM)) {\n                const methName = 'from' + cM;\n                outObj = this[methName](obj);\n                break;\n            }\n        }        \n        if (outObj === undefined) {\n            throw new MusicXMLExportException(`Cannot translate the object ${obj} to a complete musicXML document; put it in a Stream first!`);\n        }\n        return outObj;\n    }\n    \n    fromScore(sc) {\n        const scOut = sc.makeNotation({ inPlace: false });\n        return scOut;\n    }\n    \n    fromPart(p) {\n        if (p.isFlat) {\n            p = p.makeMeasures();\n        }\n        const s = new Score();\n        s.insert(0, p);\n        // metadata...;\n        return this.fromScore(s);\n    }\n    \n    fromMeasure(m) {\n        const mCopy = m.makeNotation();\n        if (m.clef === undefined) {\n            mCopy.clef = clef.bestClef(mCopy, { recurse: true });\n        }\n        const p = new Part();\n        p.append(mCopy);\n        // TODO(msc): metadata;\n        return this.fromPart(p);\n    }\n    \n    fromVoice(v) {\n        const m = new Measure();\n        m.number = 1;\n        m.insert(0, v);\n        return this.fromMeasure(m);\n    }\n    \n    // TODO(msc): fromStream\n    // TODO(msc): fromDuration\n    // TODO(msc): fromDynamic\n    // TODO(msc): fromScale\n    // TODO(msc): fromDiatonicScale\n    // TODO(msc): fromMusic21Object\n    \n    fromGeneralNote(n) {\n        const nCopy = n.clone(true);\n        // makeTupletBrackets;\n        const out = new Measure();\n        out.number = 1;\n        out.append(nCopy);\n        \n        return this.fromMeasure(out);\n    }\n    \n    // TODO(msc): fromPitch\n}\n\nconst _musicxmlVersion = '3.0';\n\nexport class XMLExporterBase {\n    constructor() {\n        this.doc = document.implementation.createDocument('', '', null);\n        this.xmlRoot = undefined;\n    }\n    \n    asBytes({ noCopy=true }={}) {\n        let out = this.xmlHeader();\n        const oSerializer = new XMLSerializer();\n        out += oSerializer.serializeToString(this.xmlRoot);\n        return out;\n    }\n    \n    // no indentation :-(\n    \n    xmlHeader() {\n        return `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML ${_musicxmlVersion}  Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\">\n        `;\n    }\n    \n    /**\n     * Note: this is not a method in music21p, but it needs access to this.doc in music21j\n     */\n    _setTagTextFromAttribute(m21El, xmlEl, tag, attributeName, { transform, forceEmpty=false }={}) {\n        if (attributeName === undefined) {\n            attributeName = common.hyphenToCamelCase(tag);\n        }\n        \n        let value = m21El[attributeName];\n        if (transform !== undefined) {\n            value = transform(value);\n        }\n        if ((value === undefined || value === '') && !forceEmpty) {\n            return undefined;\n        }\n        const subElement = this.subElement(xmlEl, tag);\n        if (value !== undefined) {\n            subElement.innerHTML = value;\n        }\n        return subElement;\n    }\n    \n    seta(m21El, xmlEl, tag, options) {\n        return this._setTagTextFromAttribute(m21El, xmlEl, tag, options);\n    }\n    \n    _setAttributeFromAttribute(m21El, xmlEl, xmlAttributeName, { attributeName, transform }={}) {\n        if (attributeName === undefined) {\n            attributeName = common.hyphenToCamelCase(xmlAttributeName);\n        }\n        let value = m21El[attributeName];\n        if (value === undefined) {\n            return;\n        }\n        if (transform !== undefined) {\n            value = transform(value);\n        }\n        xmlEl.setAttribute(xmlAttributeName, value.toString());\n    }\n    \n    setb(m21El, xmlEl, xmlAttributeName, options) {\n        return this._setAttributeFromAttribute(m21El, xmlEl, xmlAttributeName, options);\n    }\n    // TODO(msc): _synchronizeIds;\n    _synchronizeIds(element, m21Object) {\n        return;\n    }\n    \n    addDividerComment(comment='') {\n        let commentLength = comment.length;\n        if (commentLength > 60) {\n            commentLength = 60;\n        }\n        const spacerLengthLow = Math.floor((60 - commentLength) / 2);\n        const spacerLengthHigh = Math.ceil((60 - commentLength) / 2);\n        const commentText = '='.repeat(spacerLengthLow) + ' ' + comment + ' ' + '='.repeat(spacerLengthHigh);\n        const divider = this.doc.createComment(commentText);\n        this.xmlRoot.appendChild(divider);\n    }\n    \n    // TODO(msc): dump\n    \n    /**\n     * Helper method since SubElement does not exist in javascript document.implementation\n     */\n    subElement(el, tag) {\n        const subElement = this.doc.createElement(tag);\n        el.appendChild(subElement);\n        return subElement;\n    }\n    \n    // TODO(msc): setStyleAttributes\n    // TODO(msc): setTextFormatting\n    // TODO(msc): setPrintStyleAlign\n    // TODO(msc): setPrintStyle\n    // TODO(msc): setPrintObject\n    setColor(mxObject, m21Object) {\n        if (m21Object.color !== undefined) {\n            mxObject.setAttribute('color', normalizeColor(m21Object.color));\n        } else if (m21Object.style !== undefined && m21Object.style.color !== undefined) {\n            mxObject.setAttribute('color', normalizeColor(m21Object.style.color));\n        }\n    }\n    \n    // TODO(msc): setFont\n    // TODO(msc): setPosition\n    // TODO(msc): setEditorial\n    setEditorial(mxEl, el) {\n        \n    }\n    \n    // TODO(msc): pageLayoutToXmlPrint\n    // TODO(msc): pageLayoutToXmlPageLayout\n    // TODO(msc): systemLayoutToXmlPrint\n    // TODO(msc): systemLayoutToXmlSystemLayout\n    // TODO(msc): staffLayoutToXmlStaffLayout\n    \n    accidentalToMx(a) {\n        // TODO(msc): v 3.0 and v3.1 accidentals; microtone;\n        let mxName;\n        if (a.name === 'double-flat') {\n            mxName = 'flat-flat';\n        } else {\n            mxName = a.name;\n            // check other accidentals here.\n        }\n        const mxAccidental = this.doc.createElement('accidental');\n        mxAccidental.innerHTML = mxName;\n        // TODO(msc): parentheses, bracket, setPrintStyle\n        return mxAccidental;\n    }    \n\n    getRandomId() {\n        // hack to get random ids.\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n        for (let i = 0; i < 6; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n}\n\nexport class ScoreExporter extends XMLExporterBase {\n    constructor(score) {\n        super();\n        if (score === undefined) {\n            this.stream = new Score();\n        } else {\n            this.stream = score;\n        }\n        this.xmlRoot = this.doc.createElement('score-partwise');\n        this.xmlRoot.setAttribute('version', _musicxmlVersion);\n        this.xmIdentification = undefined;\n        this.scoreMetadata = undefined;\n        this.spannerBundle = undefined;\n        this.meterStream = undefined;\n        this.scoreLayouts = undefined;\n        this.firstScoreLayout = undefined;\n        this.highestTime = 0.0;\n        this.refStreamOrTimeRange = [0.0, this.highestTime];\n        this.partExporterList = [];\n        this.instrumentList = [];\n        this.midiChannelList = [];\n        this.parts = [];\n    }\n    \n    parse() {\n        const s = this.stream;\n        if (s.length === 0) {\n            return this.emptyObject();\n        }\n        this.scorePreliminaries();\n        this.parsePartlikeScore(); // does not have parseFlatScore... \n        this.postPartProcess();\n        this.partExporterList = [];\n        return this.xmlRoot;\n    }\n    \n    emptyObject() {\n        // TODO(msc): do this.\n        return this.xmlRoot;\n    }\n    \n    scorePreliminaries() {\n        // this.setScoreLayouts();\n        // this.setMeterStream();\n        this.setPartsAndRefStream();\n        // this.textBoxes = ...;\n        this.highestTime = 0.0;\n        // spannerBundle\n    }\n    \n    setPartsAndRefStream() {\n        const s = this.stream;\n        const streamOfStreams = s.getElementsByClass('Stream');\n        for (const innerStream of streamOfStreams) {\n            // innerStream.transferOffsetToElements(); // only needed for appended Parts\n            const ht = innerStream.highestTime;\n            if (ht > this.highestTime) {\n                this.highestTime = ht;\n            }\n            this.refStreamOrTimeRange = [0.0, this.highestTime];\n        }\n        this.parts = streamOfStreams;\n    }\n    \n    // TODO(msc): setMeterStream\n    // TODO(msc): setScoreLayouts\n    \n    parsePartlikeScore() {\n        // makeRests\n        for (const innerStream of this.parts) {\n            const pp = new PartExporter(innerStream, { parent: this });\n            // spanner bundle.\n            pp.parse();\n            this.partExporterList.push(pp);\n        }\n    }\n    \n    // TODO(msc): parseFlatScore\n    \n    postPartProcess() {\n        this.setScoreHeader();\n        for (let i = 0; i < this.partExporterList.length; i++) {\n            const pex = this.partExporterList[i];\n            this.addDividerComment('Part ' + i.toString());\n            this.xmlRoot.appendChild(pex.xmlRoot);\n        }\n    }\n    \n    setScoreHeader() {\n        // const s = this.stream;\n        // scoreMeatadata\n        // titles\n        // identification\n        // setDefaults\n        // textBoxes\n        this.setPartList();\n    }\n    \n    // TODO(msc): textBoxToXmlCredit\n    // TODO(msc): setDefaults\n    // TODO(msc): addStyleToXmlDefaults\n    // TODO(msc): styleToXmlAppearance\n    \n    setPartList() {\n        // const spannerBundle = this.spannerBundle; // for now, always undefined;\n        const mxPartList = this.subElement(this.xmlRoot, 'part-list');\n        // staffGroups are non-existent\n        for (const pex of this.partExporterList) {\n            // const p = pex.stream;\n            const mxScorePart = pex.getXmlScorePart();\n            mxPartList.appendChild(mxScorePart);\n        }\n        return mxPartList;\n    }\n    // TODO(msc): staffGroupToXmlPartGroup;\n    // TODO(msc): setIdentification\n    // TODO(msc): metadataToMiscellaneous\n    // TODO(msc): setEncoding\n    // TODO(msc): getSupports\n    // TODO(msc): setTitles\n    // TODO(msc): contributorToXmlCreator    \n}\n\nexport class PartExporter extends XMLExporterBase {\n    constructor(partObj, { parent }={}) {\n        super();\n        this.stream = partObj;\n        this.parent = parent;\n        this.xmlRoot = this.doc.createElement('part');\n        if (parent === undefined) {\n            this.meterStream = new Stream();\n            this.refStreamOrTimeRange = [0.0, 0.0];\n            this.midiChannelList = [];\n        } else {\n            this.meterStream = parent.meterStream;\n            this.refStreamOrTimeRange = parent.refStreamOrTimeRange;\n            this.midiChannelList = parent.midiChannelList;\n        }\n        this.instrumentStream = undefined;\n        this.firstInstrumentObject = undefined;\n        \n        this.lastDivisions = undefined;\n        this.spannerBundle = partObj.spannerBundle;\n        this.xmlPartId = this.getRandomId(); // hacky\n    }\n    \n    parse() {\n        // this.instrumentSetup();\n        this.xmlRoot.setAttribute('id', this.xmlPartId);\n        const measureStream = this.stream.getElementsByClass('Stream');\n        // fixupNotation;\n        // setIdLocals on spannerBundle;\n        for (const m of measureStream) {\n            this.addDividerComment('Measure ' + m.number.toString());\n            const measureExporter = new MeasureExporter(m, { parent: this });\n            measureExporter.spannerBundle = this.spannerBundle;\n            const mxMeasure = measureExporter.parse();\n            this.xmlRoot.appendChild(mxMeasure);\n        }\n        return this.xmlRoot;\n    }\n        \n    // TODO(msc): instrumentSetup\n    // TODO(msc): fixupNotationFlat -- might be redundant\n    // TODO(msc): fixupNotationMeasured\n    \n    getXmlScorePart() {\n        // const part = this.stream;\n        const mxScorePart = this.doc.createElement('score-part');\n        mxScorePart.setAttribute('id', this.xmlPartId);\n        // partName\n        // partAbbreviation\n        // instrument\n        return mxScorePart;\n    }\n    // TODO(msc): instrumentToXmlScoreInstrument\n    // TODO(msc): instrumentToXmlMidiInstrument\n}\n\nconst _classesToMeasureMethods = [\n    ['Note', 'noteToXml'],\n    // NoChord\n    // ChordWithFretBoard\n    // ChordSymbol\n    ['Chord', 'chordToXml'],\n    ['Rest', 'restToXml'],\n    // Dynamic, Segno, Coda, MetronomeMark, MetricModulation,\n    // TextExpression, RepeatExpression, RehersalMark\n];\n\nconst _wrapAttributeMethodClasses = [\n    ['Clef', 'clefToXml'],\n    ['KeySignature', 'keySignatureToXml'],\n    ['TimeSignature', 'timeSignatureToXml'],\n];\n\nconst _ignoreOnParseClasses = ['LayoutBase', 'Barline'];\n\nconst divisionsPerQuarter = 32 * 3 * 3 * 5 * 7; // TODO(msc): create defaults.js\n\nexport class MeasureExporter extends XMLExporterBase {\n    constructor(measureObj, { parent }={}) {\n        super();\n        this.stream = measureObj;\n        this.parent = parent;\n        this.xmlRoot = this.doc.createElement('measure');\n        this.currentDivisions = divisionsPerQuarter;\n        this.transpositionInterval = undefined;\n        this.mxTranspose = undefined;\n        this.measureOffsetStart = 0.0;\n        this.offsetInMeasure = 0.0;\n        this.currentVoiceId = undefined;\n        \n        this.rbSpanners = [];\n        this.spannerBundle = parent.spannerBundle;\n        \n        this.objectSpannerBundle = this.spannerBundle;\n    }\n    \n    parse() {\n        // TODO(msc): setTranspose\n        // TODO(msc): setRbSpanners\n        this.setMxAttributes();\n        // TODO(msc): setMxPrint\n        this.setMxAttributesObjectForStartOfMeasure();\n        // TODO(msc): setLeftBarline\n        \n        // THE BIG ONE\n        this.mainElementsParse();\n        \n        // TODO(msc): setRightBarline\n        return this.xmlRoot;\n    }\n    \n    mainElementsParse() {\n        const m = this.stream;\n        if (!m.hasVoices()) {\n            this.parseFlatElements(m, { backupAfterwards: false });\n            return;\n        }\n        // TODO(msc): parse elements outside of Voices...needs getElementsNotOfClass\n        const allVoices = Array.from(m.voices);\n        for (const [i, v] of allVoices.entries()) {\n            let backupAfterwards = true;\n            if (i === allVoices.length - 1) {\n                backupAfterwards = false;\n            }\n            this.parseFlatElements(v, { backupAfterwards });\n        }        \n    }\n    \n    parseFlatElements(m, { backupAfterwards=false }={}) {\n        const root = this.xmlRoot;\n        const divisions = this.currentDivisions;\n        this.offsetInMeasure = 0.0;\n        let voiceId;\n        if (m.classes.includes('Voice')) {\n            voiceId = m.id;\n            if (voiceId === undefined) {\n                voiceId = this.getRandomId();\n            }\n        }\n        this.currentVoiceId = voiceId;\n        \n        for (const el of m) {\n            this.parseOneElement(el);\n        }\n        \n        if (backupAfterwards) {\n            const amountToBackup = Math.round(divisions * this.offsetInMeasure);\n            if (amountToBackup > 0) {\n                const mxBackup = this.doc.createElement('backup');\n                const mxDuration = this.subElement(mxBackup, 'duration');\n                mxDuration.innerHTML = amountToBackup.toString();\n                root.appendChild(mxBackup);\n            }\n        }\n        this.currentVoiceId = undefined;\n    }\n    \n    parseOneElement(obj) {\n        // const root = this.xmlRoot;\n        // spanners...\n        const classes = obj.classes;\n        if (classes.includes('GeneralNote')) {\n            this.offsetInMeasure += obj.duration.quarterLength;\n        }\n        // odd durations...\n        \n        let parsedObject = false;\n        \n        for (const [className, methName] of _classesToMeasureMethods) {\n            if (classes.includes(className)) {\n                this[methName](obj);\n                parsedObject = true;\n                break;\n            }\n        }\n        \n        for (const [className, methName] of _wrapAttributeMethodClasses) {\n            if (classes.includes(className)) {\n                const meth = o => this[methName](o);\n                this.wrapObjectInAttributes(obj, meth);\n                parsedObject = true;\n                break;\n            }\n        }\n        \n        // deal with skipped objects.\n        if (!parsedObject && !_ignoreOnParseClasses.includes(obj.classes[0])) {\n            console.warn('skipped object of class ' + obj.classes[0]);\n        }\n        \n        // postSpanners.\n    }\n    \n    // TODO(msc): prePostObjectSpanners\n    // TODO(msc): _spannerStartParameters\n    // TODO(msc): _spannerEndParameters\n    // TODO(msc): objectAttachedSpaners\n    \n    noteToXml(n, { noteIndexInChord=0, chordParent }={}) {\n        const addChordTag = (noteIndexInChord !== 0);\n        let chordOrN;\n        if (chordParent === undefined) {\n            chordOrN = n;\n        } else {\n            chordOrN = chordParent;\n        }\n        const mxNote = this.doc.createElement('note');\n        // setPrintStyle\n        // volumeInformation\n        this.setColor(mxNote, n);\n        // _synchronizeId;\n        const d = chordOrN.duration;\n        // grace;\n        // setColor chord\n        // setPrintObject\n        // hideObject\n        // articulation pizz:\n        if (addChordTag) {\n            this.subElement(mxNote, 'chord');\n        }\n        if (n.pitch !== undefined) {\n            const mxPitch = this.pitchToXml(n.pitch);\n            mxNote.appendChild(mxPitch);\n        } else {\n            this.subElement(mxNote, 'rest');\n        }\n        if (d.isGrace !== true) {\n            const mxDuration = this.durationXml(d);\n            mxNote.appendChild(mxDuration);\n        }\n        if (n.tie !== undefined) {\n            const mxTieList = this.tieToXmlTie(n.tie);\n            for (const t of mxTieList) {\n                mxNote.appendChild(t);\n            }\n        }\n        // instrument\n        this.setEditorial(mxNote, n);\n        if (this.currentVoiceId !== undefined) {\n            const mxVoice = this.subElement(mxNote, 'voice');\n            let vId;\n            if (typeof vId === 'number') {\n                vId = this.currentVoiceId + 1;\n            } else {\n                // not a number;\n                vId = this.currentVoiceId;\n            }\n            mxVoice.innerHTML = vId.toString();\n        }\n        \n        const mxType = this.subElement(mxNote, 'type');\n        mxType.innerHTML = typeToMusicXMLType(d.type);\n        // set styleAttributes\n        // set noteSize\n        for (let _ = 0; _ < d.dots; _++) {\n            this.subElement(mxNote, 'dot');\n        }\n        \n        // components.\n        if (n.pitch !== undefined \n                && n.pitch.accidental !== undefined \n                && n.pitch.accidental.displayStatus !== false) {\n            const mxAccidental = this.accidentalToMx(n.pitch.accidental);\n            mxNote.appendChild(mxAccidental);\n        }\n        if (d.tuplets.length > 0) {\n            // todo--nested tuplets;\n            const mxTimeModification = this.tupletToTimeModification(d.tuplets[0]);\n            mxNote.appendChild(mxTimeModification);\n        }\n        \n        let stemDirection;\n        if (!addChordTag \n                && ![undefined, 'unspecified'].includes(chordOrN.stemDirection)) {\n            stemDirection = chordOrN.stemDirection;\n        } else if (chordOrN !== n \n                && ![undefined, 'unspecified'].includes(n.stemDirection)) {\n            stemDirection = n.stemDirection;\n        }\n        if (stemDirection !== undefined) {\n            const mxStem = this.subElement(mxNote, 'stem');\n            let sdtext = stemDirection;\n            if (sdtext === 'noStem') {\n                sdtext = 'none';\n            }\n            mxStem.innerHTML = sdtext;\n            // TODO: stemStyle\n        }\n        \n        // dealWithNotehead\n        // beams\n        // staff\n        // notations\n        // tuplet display\n        // notations\n        if (!addChordTag) {\n            for (const lyricObj of chordOrN.lyrics) {\n                if (lyricObj.text === undefined) {\n                    continue;\n                }\n                const mxLyric = this.lyricToXml(lyricObj);\n                mxNote.appendChild(mxLyric);\n            }\n        }\n        \n        this.xmlRoot.appendChild(mxNote);\n        return mxNote;\n    }\n    \n    restToXml(r) {\n        return this.noteToXml(r);\n        // full measure\n        // display-step, display-octave, etc.\n    }\n    \n    chordToXml(c) {\n        const mxNoteList = [];\n        for (const [i, n] of Array.from(c).entries()) {\n            const mxNote = this.noteToXml(n, { noteIndexInChord: i, chordParent: c });\n            mxNoteList.push(mxNote);\n        }\n        return mxNoteList;\n    }\n    \n    durationXml(dur) {\n        const mxDuration = this.doc.createElement('duration');\n        mxDuration.innerHTML = Math.round(this.currentDivisions * dur.quarterLength).toString();\n        return mxDuration;\n    }\n    \n    pitchToXml(p) {\n        const mxPitch = this.doc.createElement('pitch');\n        this._setTagTextFromAttribute(p, mxPitch, 'step');\n        if (p.accidental !== undefined) {\n            const mxAlter = this.subElement(mxPitch, 'alter');\n            mxAlter.innerHTML = common.numToIntOrFloat(p.accidental.alter).toString();\n        }\n        this._setTagTextFromAttribute(p, mxPitch, 'octave', 'implicitOctave');\n        return mxPitch;\n    }\n    // TODO(msc): fretNoteToXml\n    // TODO(msc): fretBoardToXml\n    // TODO(msc): chordWithFretBoardToXml\n    \n    tupletToTimeModification(tup) {\n        const mxTimeModification = this.doc.createElement('time-modification');\n        this._setTagTextFromAttribute(tup, mxTimeModification, 'actual-notes', 'numberNotesActual');\n        this._setTagTextFromAttribute(tup, mxTimeModification, 'normal-notes', 'numberNotesNormal');\n        if (tup.durationNormal !== undefined) {\n            const mxNormalType = this.subElement(mxTimeModification, 'normal-type');\n            mxNormalType.innerHTML = typeToMusicXMLType(tup.durationNormal.type);\n            if (tup.durationNormal.dots > 0) {\n                for (let i = 0; i < tup.durationNormal.dots; i++) {\n                    this.subElement(mxTimeModification, 'normal-dot');\n                }\n            }\n        }\n        return mxTimeModification;\n    }\n    \n    // TODO(msc): dealWithNotehead\n    // TODO(msc): noteheadToXml\n    // TODO(msc): noteToNotations\n    \n    tieToXmlTie(t) {\n        const mxTieList = [];\n        let musicxmlTieType = t.type;\n        if (t.type === 'continue') {\n            musicxmlTieType = 'stop';\n        }\n        const mxTie = this.doc.createElement('tie');\n        mxTie.setAttribute('type', musicxmlTieType);\n        mxTieList.push(mxTie);\n        \n        if (t.type === 'continue') {\n            const mxTie = this.doc.createElement('tie');\n            mxTie.setAttribute('type', 'start');\n            mxTieList.push(mxTie);            \n        }\n        return mxTieList;\n    }\n    \n    // TODO(msc): tieToXmlTied -- needs notations\n    // TODO(msc): tupletToXmlTuplet\n    // TODO(msc): expressionToXml\n    // TODO(msc): articulationToXmlArticulation\n    // TODO(msc): setLineStyle\n    // TODO(msc): articulationToXmlTechnical\n    // TODO(msc): setHarmonic\n    // TODO(msc): noChordToXml\n    // TODO(msc): chordSymbolToXml\n    // TODO(msc): setOffsetOptional\n    // TODO(msc): placeInDirection\n    // TODO(msc): dynamicToXml\n    // TODO(msc): segnoToXml\n    // TODO(msc): codaToXml\n    // TODO(msc): tempoIndicationToXml\n    // TODO(msc): rehearsalMarkToXml\n    // TODO(msc): textExpressionToXml\n    \n    wrapObjectInAttributes(objectToWrap, methodToMx) {\n        if (this.offsetInMeasure === 0.0) {\n            return undefined;\n        }\n        \n        const mxAttributes = this.doc.createElement('attributes');\n        const mxObj = methodToMx(objectToWrap);\n        mxAttributes.appendChild(mxObj);\n        this.xmlRoot.appendChild(mxAttributes);\n        return mxAttributes;\n    }\n    \n    lyricToXml(l) {\n        const mxLyric = this.doc.createElement('lyric');\n        this._setTagTextFromAttribute(l, mxLyric, 'syllabic');\n        this._setTagTextFromAttribute(l, mxLyric, 'text', 'text', { forceEmpty: true });\n        if (l.identifier !== undefined) {\n            mxLyric.setAttribute('name', l.identifier.toString());\n        }\n\n        if (l.number !== undefined) {\n            mxLyric.setAttribute('number', l.number.toString());\n        } else if (l.identifier !== undefined) {\n            mxLyric.setAttribute('number', l.identifier.toString());\n        }\n        // setStyleAttributes\n        // setPrintObject\n        // setColor\n        // setPosition\n        return mxLyric;             \n    }\n    // TODO(msc): beamsToXml\n    // TODO(msc): beamToXml\n    // TODO(msc): setRightBarline\n    // TODO(msc): setLeftBarline\n    // TODO(msc): setBarline\n    // TODO(msc): barlineToXml\n    // TODO(msc): repeatToXml\n    \n    setMxAttributesObjectForStartOfMeasure() {\n        const m = this.stream;\n        const mxAttributes = this.doc.createElement('attributes');\n        let appendToRoot = false;\n        this.currentDivisions = divisionsPerQuarter;\n        if (this.parent === undefined || this.currentDivisions !== this.parent.lastDivisions) {\n            const mxDivisions = this.subElement(mxAttributes, 'divisions');\n            mxDivisions.innerHTML = this.currentDivisions.toString();\n            this.parent.lastDivisions = this.currentDivisions;\n            appendToRoot = true;\n        }\n        if (m.classes.includes('Measure')) {\n            if (m._keySignature !== undefined) {\n                mxAttributes.appendChild(this.keySignatureToXml(m._keySignature));\n                appendToRoot = true;\n            }\n            if (m._timeSignature !== undefined) {\n                mxAttributes.appendChild(this.timeSignatureToXml(m._timeSignature));\n                appendToRoot = true;\n            }\n            // todo SenzaMisura...\n            if (m._clef !== undefined) {\n                mxAttributes.appendChild(this.clefToXml(m._clef));\n                appendToRoot = true;\n            }\n        }\n        \n        // staffLayout\n        // transpositionInterval\n        // measureStyle\n        if (appendToRoot) {\n            this.xmlRoot.appendChild(mxAttributes);\n        }\n        return mxAttributes;\n    }\n    // TODO(msc): measureStyle\n    // TODO(msc): staffLayoutToXmlStaffDetails\n    \n    timeSignatureToXml(ts) {\n        const mxTime = this.doc.createElement('time');\n        // synchronizeIds\n        // senzaMisura\n        // summed denominators, compound etc.\n        const mxBeats = this.subElement(mxTime, 'beats');\n        mxBeats.innerHTML = ts.numerator.toString();\n        const mxBeatType = this.subElement(mxTime, 'beat-type');\n        mxBeatType.innerHTML = ts.denominator.toString();\n        // symbolizeDenominator\n        // separator\n        // style\n        return mxTime;\n    }\n    \n    keySignatureToXml(keyOrKeySignature) {\n        const mxKey = this.doc.createElement('key');\n        // synchronizeIds\n        // number\n        // printStyle, print-object\n        this.seta(keyOrKeySignature, mxKey, 'fifths', 'sharps');\n        if (keyOrKeySignature.mode !== undefined) {\n            this.seta(keyOrKeySignature, mxKey, 'mode');            \n        }\n        // non-traditional\n        // altered pitches\n        return mxKey;\n    }\n    \n    clefToXml(clefObj) {\n        const mxClef = this.doc.createElement('clef');\n        // printstyle\n        const sign = clefObj.sign || 'G';\n        const mxSign = this.subElement(mxClef, 'sign');\n        mxSign.innerHTML = sign;\n        this.seta(clefObj, mxClef, 'line');\n        if (clefObj.octaveChange !== undefined && clefObj.octaveChange !== 0) {\n            this.seta(clefObj, mxClef, 'clef-octave-change', 'octaveChange');\n        }\n        return mxClef;\n    }\n    \n    // intervalToXmlTranspose\n    // setMxPrint\n    // staffLayoutToXmlPrint\n    setMxAttributes() {\n        const m = this.stream;\n        this.xmlRoot.setAttribute('number', m.measureNumberWithSuffix());\n        // layoutWidth\n    }\n    \n    // setRbSpanners\n    // transpose\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/stream -- Streams -- objects that hold other Music21Objects\n *\n * Does not implement the full features of music21p Streams by a long shot...\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport * as MIDI from 'MIDI';\n\nimport { Music21Exception } from './exceptions21.js';\n\nimport { base } from './base.js';\nimport { beam } from './beam.js';\nimport { clef } from './clef.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { duration } from './duration.js';\nimport { instrument } from './instrument.js';\nimport { meter } from './meter.js';\nimport { note } from './note.js';\nimport { pitch } from './pitch.js';\nimport { renderOptions } from './renderOptions.js';\nimport { vfShow } from './vfShow.js';\n\nimport { GeneralObjectExporter } from './musicxml/m21ToXml.js';\n\nimport * as filters from './stream/filters.js';\nimport * as iterator from './stream/iterator.js';\n\nexport { filters };\nexport { iterator };\n\n/**\n * powerful stream module, See {@link music21.stream} namespace\n * @exports music21/stream\n */\n/**\n * Streams are powerful music21 objects that hold Music21Object collections,\n * such as {@link music21.note.Note} or {@link music21.chord.Chord} objects.\n *\n * Understanding the {@link music21.stream.Stream} object is of fundamental\n * importance for using music21.  Definitely read the music21(python) tutorial\n * on using Streams before proceeding\n *\n * @namespace music21.stream\n * @memberof music21\n * @requires music21/base\n * @requires music21/renderOptions\n * @requires music21/clef\n * @requires music21/vfShow\n * @requires music21/duration\n * @requires music21/common\n * @requires music21/meter\n * @requires music21/pitch\n * @requires jquery\n */\nexport const stream = {\n    filters,\n    iterator,\n};\n\nclass StreamException extends Music21Exception {}\n\nstream.StreamException = StreamException;\n\nfunction _exportMusicXMLAsText(s) {\n    const gox = new GeneralObjectExporter(s);\n    return gox.parse();\n}\n\n/**\n * A generic Stream class -- a holder for other music21 objects\n * Will be subclassed into {@link music21.stream.Score},\n * {@link music21.stream.Part},\n * {@link music21.stream.Measure},\n * {@link music21.stream.Voice}, but most functions will be found here.\n *\n * @class Stream\n * @memberof music21.stream\n * @extends music21.base.Music21Object\n *\n * @property {Array<music21.base.Music21Object>} elements - the elements in the stream. DO NOT MODIFY individual components (consider it like a Python tuple)\n * @property {Int} length - (readonly) the number of elements in the stream.\n * @property {music21.duration.Duration} duration - the total duration of the stream's elements\n * @property {number} highestTime -- the highest time point in the stream's elements\n * @property {music21.clef.Clef} clef - the clef for the Stream (if there is one; if there are multiple, then the first clef)\n * @property {music21.meter.TimeSignature} timeSignature - the first TimeSignature of the Stream\n * @property {music21.key.KeySignature} keySignature - the first KeySignature for the Stream\n * @property {music21.renderOptions.RenderOptions} renderOptions - an object specifying how to render the stream\n * @property {music21.stream.Stream} flat - (readonly) a flattened representation of the Stream\n * @property {music21.stream.Stream} notes - (readonly) the stream with only {@link music21.note.Note} and {@link music21.chord.Chord} objects included\n * @property {music21.stream.Stream} notesAndRests - (readonly) like notes but also with {@link music21.note.Rest} objects included\n * @property {music21.stream.Stream} parts - (readonly) a filter on the Stream to just get the parts (NON-recursive)\n * @property {music21.stream.Stream} measures - (readonly) a filter on the Stream to just get the measures (NON-recursive)\n * @property {number} tempo - tempo in beats per minute (will become more sophisticated later, but for now the whole stream has one tempo\n * @property {music21.instrument.Instrument|undefined} instrument - an instrument object associated with the stream (can be set with a string also, but will return an `Instrument` object)\n * @property {Boolean} autoBeam - whether the notes should be beamed automatically or not (will be moved to `renderOptions` soon)\n * @property {Int} [staffLines=5] - number of staff lines\n * @property {function|undefined} changedCallbackFunction - function to call when the Stream changes through a standard interface\n * @property {number} maxSystemWidth - confusing... should be in renderOptions\n */\nexport class Stream extends base.Music21Object {\n    constructor() {\n        super();\n        // class variables;\n        this.isStream = true;\n        this.isMeasure = false;\n        this.classSortOrder = -20;\n        this.recursionType = 'elementsFirst';\n\n        this._duration = undefined;\n\n        this._elements = [];\n        this._offsetDict = new WeakMap();\n\n        this.autoSort = true;\n        this.isSorted = true;\n        this.isFlat = true;\n\n        this._clef = undefined;\n        this.displayClef = undefined;\n\n        this._keySignature = undefined; // a music21.key.KeySignature object\n        this._timeSignature = undefined; // a music21.meter.TimeSignature object\n        this._instrument = undefined;\n\n        this._autoBeam = undefined;\n        this.activeVFStave = undefined;\n        this.activeVFRenderer = undefined;\n        this.renderOptions = new renderOptions.RenderOptions();\n        this._tempo = undefined;\n\n        this.staffLines = 5;\n\n        this._stopPlaying = false;\n        this._allowMultipleSimultaneousPlays = true; // not implemented yet.\n        this.changedCallbackFunction = undefined; // for editable svges\n        /**\n         * A function bound to the current stream that\n         * will changes the stream. Used in editableAccidentalDOM, among other places.\n         *\n         *      var can = s.appendNewDOM();\n         *      $(can).on('click', s.DOMChangerFunction);\n         *\n         * @memberof music21.stream.Stream\n         * @param {Event} e\n         * @returns {music21.base.Music21Object|undefined} - returns whatever changedCallbackFunction does.\n         */\n        this.DOMChangerFunction = e => {\n            const canvasOrSVGElement = e.currentTarget;\n            const [clickedDiatonicNoteNum, foundNote] = this.findNoteForClick(\n                canvasOrSVGElement,\n                e\n            );\n            if (foundNote === undefined) {\n                if (debug) {\n                    console.log('No note found');\n                }\n                return undefined;\n            }\n            return this.noteChanged(\n                clickedDiatonicNoteNum,\n                foundNote,\n                canvasOrSVGElement\n            );\n        };\n    }\n    * [Symbol.iterator]() {\n        if (this.autoSort && !this.isSorted) {\n            this.sort();\n        }\n\n        for (let i = 0; i < this.length; i++) {\n            yield this.get(i);\n        }\n    }\n\n    forEach(callback, thisArg) {\n        if (thisArg !== undefined) {\n            callback = callback.bind(thisArg);\n        }\n        let i = 0;\n        for (const el of this) {\n            callback(el, i, this);\n            i += 1;\n        }\n    }\n\n\n    get duration() {\n        if (this._duration !== undefined) {\n            return this._duration;\n        }\n        return new duration.Duration(this.highestTime);\n    }\n    set duration(newDuration) {\n        this._duration = newDuration;\n    }\n    get highestTime() {\n        let highestTime = 0.0;\n        for (const el of this) {\n            let endTime = el.offset;\n            if (el.duration !== undefined) {\n                endTime += el.duration.quarterLength;\n            }\n            if (endTime > highestTime) {\n                highestTime = endTime;\n            }\n        }\n        return highestTime;\n    }\n\n    get semiFlat() {\n        return this._getFlatOrSemiFlat(true);\n    }\n\n    get flat() {\n        return this._getFlatOrSemiFlat(false);\n    }\n\n    _getFlatOrSemiFlat(retainContainers) {\n        let tempEls;\n        const newSt = this.clone(false);\n        if (!this.isFlat) {\n            newSt.elements = [];\n            for (const el of this) {\n                if (el.isStream) {\n                    if (retainContainers) {\n                        tempEls.push(el);\n                    }\n                    const offsetShift = this.elementOffset(el);\n                    // console.log('offsetShift', offsetShift, el.classes[el.classes.length -1]);\n                    const elFlat = el._getFlatOrSemiFlat(retainContainers);\n                    for (const elFlatElement of elFlat) {\n                        // offset should NOT be null because already in Stream\n                        const elFlatElementOffset = elFlat.elementOffset(elFlatElement);\n                        newSt.insert(elFlatElementOffset + offsetShift, elFlatElement);\n                    }\n                } else {\n                    newSt.insert(this.elementOffset(el), el);\n                }\n            }\n        }\n        if (!retainContainers) {\n            newSt.isFlat = true;\n            this.coreElementsChanged({ updateIsFlat: false });\n        } else {\n            this.coreElementsChanged();\n        }\n        return newSt;\n    }\n\n    get notes() {\n        return this.getElementsByClass(['Note', 'Chord']);\n    }\n    get notesAndRests() {\n        return this.getElementsByClass('GeneralNote');\n    }\n    get tempo() {\n        if (this._tempo === undefined && this.activeSite !== undefined) {\n            return this.activeSite.tempo;\n        } else if (this._tempo === undefined) {\n            return 150;\n        } else {\n            return this._tempo;\n        }\n    }\n    set tempo(newTempo) {\n        this._tempo = newTempo;\n    }\n    get instrument() {\n        if (this._instrument === undefined && this.activeSite !== undefined) {\n            return this.activeSite.instrument;\n        } else {\n            return this._instrument;\n        }\n    }\n    set instrument(newInstrument) {\n        if (typeof newInstrument === 'string') {\n            newInstrument = new instrument.Instrument(newInstrument);\n        }\n        this._instrument = newInstrument;\n    }\n\n    _specialContext(attr) {\n        const privAttr = '_' + attr;\n        if (this[privAttr] !== undefined) {\n            return this[privAttr];\n        }\n        // should be:\n        // const contextClef = this.getContextByClass('Clef');\n//        const context = this.getContextByClass('Stream', { getElementMethod: 'getElementBefore' });\n//        let contextObj;\n//        if (context !== undefined && context !== this) {\n//            contextObj = context[privAttr];\n//        }\n        for (const site of this.sites.yieldSites()) {\n            if (site === undefined) {\n                continue;\n            }\n            const contextObj = site._firstElementContext('attr') || site._specialContext('attr');\n            if (contextObj !== undefined) {\n                return contextObj;\n            }\n        }\n        return undefined;\n    }\n\n    _firstElementContext(attr) {\n        const firstElements = this\n            .getElementsByOffset(0.0)\n            .getElementsByClass(attr.charAt(0).toUpperCase() + attr.slice(1));\n        if (firstElements.length) {\n            return firstElements.get(0);\n        } else {\n            return undefined;\n        }\n    }\n\n    get clef() {\n        return this.getSpecialContext('clef', true);\n    }\n    set clef(newClef) {\n        const oldClef = this._firstElementContext('clef');\n        if (oldClef !== undefined) {\n            this.replace(oldClef, newClef);\n        } else {\n            this.insert(0.0, newClef);\n        }\n        this._clef = newClef;\n    }\n\n    get keySignature() {\n        return this.getSpecialContext('keySignature', true);\n    }\n    set keySignature(newKeySignature) {\n        const oldKS = this._firstElementContext('keySignature');\n        if (oldKS !== undefined) {\n            this.replace(oldKS, newKeySignature);\n        } else {\n            this.insert(0.0, newKeySignature);\n        }\n        this._keySignature = newKeySignature;\n    }\n\n    get timeSignature() {\n        return this.getSpecialContext('timeSignature', true);\n    }\n    set timeSignature(newTimeSignature) {\n        if (typeof newTimeSignature === 'string') {\n            newTimeSignature = new meter.TimeSignature(newTimeSignature);\n        }\n        const oldTS = this._firstElementContext('timeSignature');\n        if (oldTS !== undefined) {\n            this.replace(oldTS, newTimeSignature);\n        } else {\n            this.insert(0.0, newTimeSignature);\n        }\n        this._timeSignature = newTimeSignature;\n    }\n\n    get autoBeam() {\n        return this._specialContext('autoBeam');\n    }\n    set autoBeam(ab) {\n        this._autoBeam = ab;\n    }\n\n    get maxSystemWidth() {\n        let baseMaxSystemWidth = 750;\n        if (\n            this.renderOptions.maxSystemWidth === undefined\n            && this.activeSite !== undefined\n        ) {\n            baseMaxSystemWidth = this.activeSite.maxSystemWidth;\n        } else if (this.renderOptions.maxSystemWidth !== undefined) {\n            baseMaxSystemWidth = this.renderOptions.maxSystemWidth;\n        }\n        return baseMaxSystemWidth / this.renderOptions.scaleFactor.x;\n    }\n    set maxSystemWidth(newSW) {\n        this.renderOptions.maxSystemWidth\n            = newSW * this.renderOptions.scaleFactor.x;\n    }\n\n    get parts() {\n        return this.getElementsByClass('Part');\n    }\n    get measures() {\n        return this.getElementsByClass('Measure');\n    }\n    get voices() {\n        return this.getElementsByClass('Voice');\n    }\n\n    get length() {\n        return this._elements.length;\n    }\n    get elements() {\n        return this._elements;\n    }\n    set elements(newElements) {\n        let highestOffsetSoFar = 0.0;\n        this.clear();\n        const tempInsert = [];\n        let i;\n        let thisEl;\n        if (newElements.isStream === true) {\n            // iterate to set active site;\n            for (const unused of newElements) {} // eslint-disable-line no-empty\n            newElements = newElements.elements;\n        }\n\n        for (i = 0; i < newElements.length; i++) {\n            thisEl = newElements[i];\n            const thisElOffset = thisEl.offset;\n            if (thisElOffset === undefined || thisElOffset === highestOffsetSoFar) {\n                // append\n                this._elements.push(thisEl);\n                this.setElementOffset(thisEl, highestOffsetSoFar);\n                if (thisEl.duration === undefined) {\n                    console.error('No duration for ', thisEl, ' in ', this);\n                }\n                highestOffsetSoFar += thisEl.duration.quarterLength;\n            } else {\n                // append -- slow\n                tempInsert.push(thisEl);\n            }\n        }\n        // console.warn('end', highestOffsetSoFar, tempInsert);\n        for (i = 0; i < tempInsert.length; i++) {\n            thisEl = tempInsert[i];\n            this.insert(thisEl.offset, thisEl);\n        }\n        this.coreElementsChanged(); // would be called already if newElements != [];\n    }\n\n    /**\n     * getSpecialContext is a transitional replacement for\n     * .clef, .keySignature, .timeSignature that looks\n     * for context to get the appropriate element as ._clef, etc.\n     * as a way of making the older music21j attributes still work while\n     * transitioning to a more music21p-like approach.\n     *\n     * May be removed\n     */\n    getSpecialContext(context, warnOnCall=false) {\n        const first_el = this._firstElementContext(context);\n        if (first_el !== undefined) {\n            return first_el;\n        }\n        const special_context = this._specialContext(context);\n        if (special_context === undefined) {\n            return undefined;\n        }\n        if (warnOnCall) {\n            console.warn(`Calling special context ${context}!`);\n        }\n        return special_context;\n    }\n\n    clear() {\n        this._elements = [];\n        this._offsetDict = new WeakMap();\n        this.isFlat = true;\n        this.isSorted = true;\n    }\n\n    /* override protoM21Object.clone() */\n    clone(deep=true) {\n        const ret = Object.create(this.constructor.prototype);\n        for (const key in this) {\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key === '_activeSite') {\n                ret[key] = this[key];\n            } else if (key === 'renderOptions') {\n                ret[key] = common.merge({}, this[key]);\n            } else if (\n                deep !== true\n                && (key === '_elements')\n            ) {\n                ret[key] = this[key].slice(); // shallow copy...\n            } else if (deep !== true && key === '_offsetDict') {\n                ret._offsetDict = new WeakMap();\n                for (const el of this.elements) {\n                    ret._offsetDict.set(el, this._offsetDict.get(el));\n                }\n            } else if (\n                deep\n                && (key === '_elements' || key === '_offsetDict')\n            ) {\n                if (key === '_elements') {\n                    // console.log('got elements for deepcopy');\n                    ret.clear();\n                    for (let j = 0; j < this._elements.length; j++) {\n                        const el = this._elements[j];\n                        // console.log('cloning el: ', el.name);\n                        const elCopy = el.clone(deep);\n                        ret._elements[j] = elCopy;\n                        ret._offsetDict.set(elCopy, this._offsetDict.get(el));\n                        elCopy.activeSite = ret;\n                    }\n                }\n            } else if (\n                key === 'activeVexflowNote'\n                || key === 'storedVexflowstave'\n            ) {\n                // do nothing -- do not copy vexflowNotes -- permanent recursion\n            } else if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else {\n                    // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof this[key] === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (\n                this[key] !== null\n                && this[key] !== undefined\n                && this[key].isMusic21Object === true\n            ) {\n                // console.log('cloning...', key);\n                ret[key] = this[key].clone(deep);\n            } else {\n                ret[key] = this[key];\n            }\n        }\n        ret.coreElementsChanged();\n        return ret;\n    }\n\n    coreElementsChanged({\n        updateIsFlat=true,\n        clearIsSorted=true,\n        memo=undefined, // unused\n        keepIndex=false, // unused\n    }={}) {\n        if (clearIsSorted) {\n            this.isSorted = false;\n        }\n        if (updateIsFlat) {\n            this.isFlat = true;\n            for (const e of this._elements) {\n                if (e.isStream) {\n                    this.isFlat = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    recurse({\n        streamsOnly=false,\n        restoreActiveSites=true,\n        classFilter=undefined,\n        skipSelf=true,\n    }={}) {\n        const includeSelf = !skipSelf;\n        const ri = new iterator.RecursiveIterator(this,\n            {\n                streamsOnly,\n                restoreActiveSites,\n                includeSelf,\n            }\n        );\n        if (classFilter !== undefined) {\n            ri.addFilter(new filters.ClassFilter(classFilter));\n        }\n        return ri;\n    }\n\n    /**\n     * Add an element to the end of the stream, setting its `.offset` accordingly\n     *\n     * @memberof music21.stream.Stream\n     * @param {music21.base.Music21Object|Array} el - element or list of elements to append\n     * @returns {this}\n     */\n    append(elOrElList) {\n        if (Array.isArray(elOrElList)) {\n            for (const el of elOrElList) {\n                this.append(el);\n            }\n            return this;\n        }\n\n        const el = elOrElList;\n        try {\n            if (\n                el.isClassOrSubclass !== undefined\n                && el.isClassOrSubclass('NotRest')\n            ) {\n                // set stem direction on output...;\n            }\n            const elOffset = this.highestTime;\n            this._elements.push(el);\n            this.setElementOffset(el, elOffset);\n            el.offset = elOffset;\n            el.sites.add(this);\n            el.activeSite = this; // would prefer weakref, but does not exist in JS.\n        } catch (err) {\n            console.error(\n                'Cannot append element ',\n                el,\n                ' to stream ',\n                this,\n                ' : ',\n                err\n            );\n        }\n        this.coreElementsChanged({ clearIsSorted: false });\n        return this;\n    }\n\n    sort() {\n        if (this.isSorted) {\n            return this;\n        }\n        this._elements.sort((a, b) => this._offsetDict.get(a) - this._offsetDict.get(b)\n            || a.priority - b.priority\n            || a.classSortOrder - b.classSortOrder\n        );\n        this.isSorted = true;\n        return this;\n    }\n\n    /**\n     * Add an element to the specified place in the stream, setting its `.offset` accordingly\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} offset - offset to place.\n     * @param {music21.base.Music21Object} el - element to append\n     * @returns {this}\n     */\n    insert(offset, el, { ignoreSort=false, setActiveSite=true }={}) {\n        if (el === undefined) {\n            throw new StreamException('Cannot insert without an element.');\n        }\n        try {\n            if (!ignoreSort) {\n                if (offset <= this.highestTime) {\n                    this.isSorted = false;\n                }\n            }\n            this._elements.push(el);\n            this.setElementOffset(el, offset);\n            el.sites.add(this);\n            if (setActiveSite) {\n                el.activeSite = this;\n            }\n            this.coreElementsChanged({ clearIsSorted: false });\n        } catch (err) {\n            console.error(\n                'Cannot insert element ',\n                el,\n                ' to stream ',\n                this,\n                ' : ',\n                err\n            );\n        }\n        return this;\n    }\n\n    /**\n     * Inserts a single element at offset, shifting elements at or after it begins\n     * later in the stream.\n     *\n     * In single argument form, assumes it is an element and takes the offset from the element.\n     *\n     * Unlike music21p, does not take a list of elements.  TODO(msc): add this.\n     */\n    insertAndShift(offset, elementOrNone) {\n        let element;\n        if (elementOrNone === undefined) {\n            element = offset;\n            offset = element.offset;\n        } else {\n            element = elementOrNone;\n        }\n        const amountToShift = element.duration.quarterLength;\n\n        let shiftingOffsets = false;\n        for (let i = 0; i < this.length; i++) {\n            const existingEl = this._elements[i];\n            const existingElOffset = this.elementOffset(existingEl);\n            if (!shiftingOffsets && existingElOffset >= offset) {\n                shiftingOffsets = true;\n            }\n            if (shiftingOffsets) {\n                this.setElementOffset(existingEl, existingElOffset + amountToShift);\n            }\n        }\n        this.insert(offset, element);\n    }\n\n    /**\n     * Return the first matched index\n     */\n    index(el) {\n        if (!this.isSorted && this.autoSort) {\n            this.sort();\n        }\n        const index = this._elements.indexOf(el);\n        if (index === -1) {\n            // endElements\n            throw new StreamException(\n                `cannot find object (${el}) in Stream`\n                );\n        }\n        return index;\n    }\n\n    /**\n     * Remove and return the last element in the stream,\n     * or return undefined if the stream is empty\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.base.Music21Object|undefined} last element in the stream\n     */\n    pop() {\n        if (!this.isSorted && this.autoSort) {\n            this.sort();\n        }\n        // remove last element;\n        if (this.length > 0) {\n            const el = this.get(-1);\n            this._elements.pop();\n            this._offsetDict.delete(el);\n            el.sites.remove(this);\n            this.coreElementsChanged({ clearIsSorted: false });\n            return el;\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Remove an object from this Stream.  shiftOffsets and recurse do nothing.\n     */\n    remove(targetOrList,\n            {\n                shiftOffsets=false,\n                recurse=false,\n            } = {}) {\n        if (shiftOffsets === true) {\n            throw new StreamException('sorry cannot shiftOffsets yet');\n        }\n        if (recurse === true) {\n            throw new StreamException('sorry cannot recurse yet');\n        }\n\n        let targetList;\n        if (!Array.isArray(targetOrList)) {\n            targetList = [targetOrList];\n        } else {\n            targetList = targetOrList;\n        }\n//        if (targetList.length > 1) {\n//            sort targetList\n//        }\n        // let shiftDur = 0.0; // for shiftOffsets\n        let i = -1;\n        for (const target of targetList) {\n            i += 1;\n            let indexInStream;\n            try {\n                indexInStream = this.index(target);\n            } catch (err) {\n                if (err instanceof StreamException) {\n                    if (recurse) {\n                        // do something\n                    }\n                    continue;\n                }\n                throw err;\n            }\n\n            // const matchOffset = this._offsetDict[indexInStream];\n            // let match;\n            // handle _endElements\n            // let matchedEndElement = false;\n            // let baseElementCount = this._elements.length;\n            this._elements.splice(indexInStream, 1);\n            this._offsetDict.delete(target);\n            target.activeSite = undefined;\n            target.sites.remove(this);\n            // remove from sites if needed.\n\n//            if (shiftOffsets) {\n//                const matchDuration = target.duration.quarterLength;\n//                const shiftedRegionStart = matchOffset + matchDuration;\n//                shiftDur += matchDuration;\n//                let shiftedRegionEnd;\n//                if ((i + 1) < targetList.length) {\n//                    const nextElIndex = this.index(targetList[i + 1]);\n//                    const nextElOffset = this._offsetDict[nextElIndex];\n//                    shiftedRegionEnd = nextElOffset;\n//                } else {\n//                    shiftedRegionEnd = this.duration.quarterLength;\n//                }\n//                if (shiftDur !== 0.0) {\n//                    for (const e of this.getElementsByOffset(\n//                       shiftedRegionStart,\n//                       shiftedRegionEnd,\n//                       {\n//                           includeEndBoundary: false,\n//                           mustFinishInSpan: false,\n//                           mustBeginInSpan: false,\n//                       }\n//                    )) {\n//                        const elementOffset = this.elementOffset(e);\n//                        this.setElementOffset(e, elementOffset - shiftDur);\n//                    }\n//                }\n//            }\n        }\n        this.coreElementsChanged({ clearIsSorted: false });\n    }\n\n    /**\n     *  Given a `target` object, replace it with\n     *  the supplied `replacement` object.\n     *\n     *  `recurse` and `allDerived` do not currently work.\n     *\n     *  Does nothing if target cannot be found.\n     */\n    replace(target, replacement, {\n        recurse=false,\n        allDerivated=true,\n    } = {}) {\n        let i;\n        try {\n            i = this.index(target);\n        } catch (err) {\n            if (err instanceof StreamException) {\n                return;\n            } else {\n                throw err;\n            }\n        }\n        const targetOffset = this.elementOffset(target);\n        this.remove(target);\n        this.insert(targetOffset, replacement);\n        this.coreElementsChanged({ clearIsSorted: false });\n    }\n\n    /**\n     * Get the `index`th element from the Stream.  Equivalent to the\n     * music21p format of s[index] using __getitem__.  Can use negative indexing to get from the end.\n     *\n     * Once Proxy objects are supported by all operating systems for\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} index - can be -1, -2, to index from the end, like python\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    get(index) {\n        // substitute for Python stream __getitem__; supports -1 indexing, etc.\n        if (!this.isSorted) {\n            this.sort();\n        }\n\n        let el;\n        if (index === undefined) {\n            return undefined;\n        } else if (Math.abs(index) > this._elements.length) {\n            return undefined;\n        } else if (index === this._elements.length) {\n            return undefined;\n        } else if (index < 0) {\n            el = this._elements[this._elements.length + index];\n            el.activeSite = this;\n            return el;\n        } else {\n            el = this._elements[index];\n            el.activeSite = this;\n            return el;\n        }\n    }\n\n    /**\n     *\n     */\n    set(index, newEl) {\n        const replaceEl = this.get(index);\n        if (replaceEl === undefined) {\n            throw new StreamException(`Cannot set element at index ${index}.`);\n        }\n        this.replace(replaceEl, newEl);\n        return this;\n    }\n\n\n    setElementOffset(el, value, addElement=false) {\n        if (!this._elements.includes(el)) {\n            if (addElement) {\n                this.insert(value, el);\n                return;\n            } else {\n                throw new StreamException(\n                        'Cannot set the offset for elemenet '\n                            + el.toString()\n                            + ', not in Stream'\n                );\n            }\n        }\n        this._offsetDict.set(el, value);\n        el.activeSite = this;\n    }\n\n    elementOffset(element, stringReturns=false) {\n        if (!this._offsetDict.has(element)) {\n            throw new StreamException(\n                'An entry for this object ' + element.toString() + ' is not stored in this Stream.'\n            );\n        } else {\n            return this._offsetDict.get(element);\n        }\n    }\n\n    /*  --- ############# END ELEMENT FUNCTIONS ########## --- */\n\n    /**\n     * Takes a stream and places all of its elements into\n     * measures (:class:`~music21.stream.Measure` objects)\n     * based on the :class:`~music21.meter.TimeSignature` objects\n     * placed within\n     * the stream. If no TimeSignatures are found in the\n     * stream, a default of 4/4 is used.\n\n     * If `options.inPlace` is true, the original Stream is modified and lost\n     * if `options.inPlace` is False, this returns a modified deep copy.\n\n     * @memberof music21.stream.Stream\n     * @param {object} options\n     * @returns {music21.stream.Stream}\n     */\n    makeMeasures(options) {\n        const params = {\n            meterStream: undefined,\n            refStreamOrTimeRange: undefined,\n            searchContext: false,\n            innerBarline: undefined,\n            finalBarline: 'final',\n            bestClef: false,\n            inPlace: false,\n        };\n        common.merge(params, options);\n        let voiceCount;\n        if (this.hasVoices()) {\n            voiceCount = this.getElementsByClass('Voice').length;\n        } else {\n            voiceCount = 0;\n        }\n        // meterStream\n        const meterStream = this.getElementsByClass('TimeSignature');\n        if (meterStream.length === 0) {\n            meterStream.append(this.timeSignature);\n        }\n        // getContextByClass('Clef')\n        const clefObj = this.getSpecialContext('clef') || this.getContextByClass('Clef');\n        const offsetMap = this.offsetMap();\n        let oMax = 0;\n        for (let i = 0; i < offsetMap.length; i++) {\n            if (offsetMap[i].endTime > oMax) {\n                oMax = offsetMap[i].endTime;\n            }\n        }\n        // console.log('oMax: ', oMax);\n        const post = new this.constructor();\n        // derivation\n        let o = 0.0;\n        let measureCount = 0;\n        let lastTimeSignature;\n        let m;\n        let mStart;\n        while (measureCount === 0 || o < oMax) {\n            m = new stream.Measure();\n            m.number = measureCount + 1;\n            // var thisTimeSignature = meterStream.getElementAtOrBefore(o);\n            const thisTimeSignature = this.timeSignature;\n            if (thisTimeSignature === undefined) {\n                break;\n            }\n            const oneMeasureLength\n                = thisTimeSignature.barDuration.quarterLength;\n            if (oneMeasureLength === 0) {\n                // if for some reason we are advancing not at all, then get out!\n                break;\n            }\n            if (measureCount === 0) {\n                // simplified...\n            }\n            m.clef = clefObj;\n            m.timeSignature = thisTimeSignature.clone();\n\n            for (let voiceIndex = 0; voiceIndex < voiceCount; voiceIndex++) {\n                const v = new stream.Voice();\n                v.id = voiceIndex;\n                m.insert(0, v);\n            }\n            post.insert(o, m);\n            o += oneMeasureLength;\n            measureCount += 1;\n        }\n        for (let i = 0; i < offsetMap.length; i++) {\n            const ob = offsetMap[i];\n            const e = ob.element;\n            const start = ob.offset;\n            const voiceIndex = ob.voiceIndex;\n\n            // if 'Spanner' in e.classes;\n            lastTimeSignature = undefined;\n            for (let j = 0; j < post.length; j++) {\n                m = post.get(j); // nothing but measures...\n                const foundTS = m.getSpecialContext('timeSignature');\n                if (foundTS !== undefined) {\n                    lastTimeSignature = foundTS;\n                }\n                mStart = m.getOffsetBySite(post);\n                const mEnd\n                    = mStart + lastTimeSignature.barDuration.quarterLength;\n                if (start >= mStart && start < mEnd) {\n                    break;\n                }\n            }\n            // if not match, raise Exception;\n            const oNew = start - mStart;\n            if (m.clef === e) {\n                continue;\n            }\n            if (oNew === 0 && e.isClassOrSubclass('TimeSignature')) {\n                continue;\n            }\n            let insertStream = m;\n            if (voiceIndex !== undefined) {\n                insertStream = m.getElementsByClass('Voice').get(voiceIndex);\n            }\n            insertStream.insert(oNew, e);\n        }\n        // set barlines, etc.\n        if (params.inPlace !== true) {\n            return post;\n        } else {\n            this.elements = [];\n            // endElements\n            // elementsChanged;\n            for (const e of post) {\n                this.insert(e.offset, e);\n            }\n            return this; // javascript style;\n        }\n    }\n\n    containerInHierarchy(el, { setActiveSite=true }={}) {\n        const elSites = el.sites;\n        for (const s of this.recurse({\n            skipSelf: false,\n            streamOnly: true,\n            restoreActiveSites: false,\n        })) {\n            if (elSites.includes(s)) {\n                if (setActiveSite) {\n                    el.activeSite = s;\n                }\n                return s;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * chordify does not yet work...\n     */\n    chordify({\n        addTies=true,\n        addPartIdAsGroup=true,\n        removeRedundantPitches=true,\n        toSoundingPitch=true,\n    }={}) {\n        const workObj = this;\n        let templateStream;\n        if (this.hasPartLikeStreams()) {\n            templateStream = workObj.getElementsByClass('Stream').get(0);\n        } else {\n            templateStream = workObj;\n        }\n        const template = templateStream.template({\n            fillWithRests: false,\n            removeClasses: ['GeneralNote'],\n            retainVoices: false,\n        });\n        return template;\n    }\n\n    template({\n        fillWithRests=true,\n        removeClasses=[],\n        retainVoices=true,\n    }={}) {\n        const out = this.cloneEmpty('template');\n        const restInfo = {\n            offset: undefined,\n            endTime: undefined,\n        };\n        const optionalAddRest = function optionalAddRest() {\n            if (!fillWithRests) {\n                return;\n            }\n            if (restInfo.offset === undefined) {\n                return;\n            }\n            const restQL = restInfo.endTime - restInfo.offset;\n            const restObj = new note.Rest();\n            restObj.duration.quarterLength = restQL;\n            out.insert(restInfo.offset, restObj);\n            restInfo.offset = undefined;\n            restInfo.endTime = undefined;\n        };\n        for (const el of stream) {\n            if (el.isStream\n                    && (retainVoices || el.classes.includes('Voice'))) {\n                optionalAddRest();\n                const outEl = el.template({\n                    fillWithRests,\n                    removeClasses,\n                    retainVoices,\n                });\n                out.insert(el.offset, outEl);\n            }\n        }\n    }\n\n    cloneEmpty(derivationMethod) {\n        const returnObj = this.constructor();\n        // TODO(msc): derivation\n        returnObj.mergeAttributes(this);\n        return returnObj;\n    }\n\n    mergeAttributes(other) {\n        super.mergeAttributes(other);\n        for (const attr of [\n            'autoSort',\n            'isSorted',\n            'definesExplicitSystemBreaks',\n            'definesEExplicitPageeBreaks',\n            '_atSoundingPitch',\n            '_mutable',\n        ]) {\n            if (Object.prototype.hasOwnProperty.call(other, attr)) {\n                this[attr] = other[attr];\n            }\n        }\n    }\n\n\n    /**\n     * makeNotation does not do anything yet, but it is a placeholder\n     * so it can start to be called.\n     */\n    makeNotation({ inPlace=true }={}) {\n        let out;\n        if (inPlace) {\n            out = this;\n        } else {\n            out = this.clone(true);\n        }\n        this.makeAccidentals();\n        return out;\n    }\n\n\n    /**\n     * Return a new Stream or modify this stream\n     * to have beams.\n     *\n     * NOT yet being called March 2018\n     */\n    makeBeams(options) {\n        const params = { inPlace: false };\n        common.merge(params, options);\n        let returnObj = this;\n        if (!params.inPlace) {\n            returnObj = this.clone(true);\n        }\n        let mColl;\n        if (this.classes.includes('Measure')) {\n            mColl = [returnObj];\n        } else {\n            mColl = [];\n            for (const m of returnObj.getElementsByClass('Measure')) {\n                mColl.push(m);\n            }\n        }\n        let lastTimeSignature;\n        for (const m of mColl) {\n            if (m.timeSignature !== undefined) {\n                lastTimeSignature = m.timeSignature;\n            }\n            if (lastTimeSignature === undefined) {\n                throw new StreamException('Need a Time Signature to process beams');\n            }\n            // todo voices!\n            if (m.length <= 1) {\n                continue; // nothing to beam.\n            }\n            const noteStream = m.notesAndRests;\n            const durList = [];\n            for (const n of noteStream) {\n                durList.push(n.duration);\n            }\n            const durSum = durList.map(a => a.quarterLength).reduce((total, val) => total + val);\n            const barQL = lastTimeSignature.barDuration.quarterLength;\n            if (durSum > barQL) {\n                continue;\n            }\n            let offset = 0.0;\n            if (m.paddingLeft !== 0.0 && m.paddingLeft !== undefined) {\n                offset = m.paddingLeft;\n            } else if (noteStream.highestTime < barQL) {\n                offset = barQL - noteStream.highestTime;\n            }\n            const beamsList = lastTimeSignature.getBeams(noteStream, { measureStartOffset: offset });\n            for (let i = 0; i < noteStream.length; i++) {\n                const n = noteStream.get(i);\n                const thisBeams = beamsList[i];\n                if (thisBeams !== undefined) {\n                    n.beams = thisBeams;\n                } else {\n                    n.beams = new beam.Beams();\n                }\n            }\n        }\n\n        // returnObj.streamStatus.beams = true;\n        return returnObj;\n    }\n\n    /**\n     * Returns a boolean value showing if this\n     * Stream contains any Parts or Part-like\n     * sub-Streams.\n     *\n     * Will deal with Part-like sub-streams later\n     * for now just checks for real Part objects.\n     *\n     * Part-like sub-streams are Streams that\n     * contain Measures or Notes. And where no\n     * sub-stream begins at an offset besides zero.\n     */\n    hasPartLikeStreams() {\n        for (const el of this) {\n            if (el.classes.includes('Part')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Returns true if any note in the stream has lyrics, otherwise false\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasLyrics() {\n        for (const el of this) {\n            if (el.lyric !== undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a list of OffsetMap objects\n     *\n     * @memberof music21.stream.Stream\n     * @returns [music21.stream.OffsetMap]\n     */\n    offsetMap() {\n        const offsetMap = [];\n        let groups = [];\n        if (this.hasVoices()) {\n            $.each(this.getElementsByClass('Voice'), (i, v) => {\n                groups.push([v.flat, i]);\n            });\n        } else {\n            groups = [[this, undefined]];\n        }\n        for (let i = 0; i < groups.length; i++) {\n            const group = groups[i][0];\n            const voiceIndex = groups[i][1];\n            for (let j = 0; j < group.length; j++) {\n                const e = group.get(j);\n                const dur = e.duration.quarterLength;\n                const offset = group.elementOffset(e);\n                const endTime = offset + dur;\n                const thisOffsetMap = new stream.OffsetMap(\n                    e,\n                    offset,\n                    endTime,\n                    voiceIndex\n                );\n                offsetMap.push(thisOffsetMap);\n            }\n        }\n        return offsetMap;\n    }\n\n    get iter() {\n        return new iterator.StreamIterator(this);\n    }\n\n    /**\n     * Find all elements with a certain class; if an Array is given, then any\n     * matching class will work.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Array<string>|string} classList - a list of classes to find\n     * @returns {music21.stream.Stream}\n     */\n    getElementsByClass(classList) {\n        return this.iter.getElementsByClass(classList);\n    }\n\n    getElementsNotOfClass(classList) {\n        return this.iter.getElementsNotOfClass(classList);\n    }\n\n//    getElementsByClass(classList) {\n//        const tempEls = [];\n//        for (const thisEl of this) {\n//            // console.warn(thisEl);\n//            if (thisEl.isClassOrSubclass === undefined) {\n//                console.error(\n//                    'what the hell is a ',\n//                    thisEl,\n//                    'doing in a Stream?'\n//                );\n//            } else if (thisEl.isClassOrSubclass(classList)) {\n//                tempEls.push(thisEl);\n//            }\n//        }\n//        const newSt = this.clone(false);\n//        newSt.elements = tempEls;\n//        return newSt;\n//    }\n\n    /**\n     * Returns a new stream [StreamIterator does not yet exist in music21j]\n     * containing all Music21Objects that are found at a certain offset or\n     * within a certain offset time range (given the offsetStart and\n     * (optional) offsetEnd values).\n     *\n     * See music21p documentation for the effect of various parameters.\n     */\n    getElementsByOffset(\n        offsetStart,\n        offsetEnd,\n        {\n            includeEndBoundary=true,\n            mustFinishInSpan=false,\n            mustBeginInSpan=true,\n            includeElementsThatEndAtStart=true,\n            classList=undefined,\n        }={}) {\n\n        let s;\n        if (classList !== undefined) {\n            s = this.iter.getElementsByClass(classList);\n        } else {\n            s = this.iter;\n        }\n        s.getElementsByOffset(offsetStart, offsetEnd, {\n            includeEndBoundary,\n            mustFinishInSpan,\n            mustBeginInSpan,\n            includeElementsThatEndAtStart,\n        });\n        return s;\n    }\n\n    /**\n     *  Given an element (from another Stream) returns the single element\n     *  in this Stream that is sounding while the given element starts.\n     *\n     *  If there are multiple elements sounding at the moment it is\n     *  attacked, the method returns the first element of the same class\n     *  as this element, if any. If no element\n     *  is of the same class, then the first element encountered is\n     *  returned. For more complex usages, use allPlayingWhileSounding.\n     *\n     *  Returns None if no elements fit the bill.\n     *\n     *  The optional elStream is the stream in which el is found.\n     *  If provided, el's offset\n     *  in that Stream is used.  Otherwise, the current offset in\n     *  el is used.  It is just\n     *  in case you are paranoid that el.offset might not be what\n     *  you want, because of some fancy manipulation of\n     *  el.activeSite\n     *\n     * @memberof music21.stream.Stream\n     * @param {music21.base.Music21Object} el - object with an offset and class to search for.\n     * @param {music21.stream.Stream|undefined} elStream - a place to get el's offset from.\n     * @returns {music21.stream.Stream}\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    playingWhenAttacked(el, elStream) {\n        let elOffset;\n        if (elStream !== undefined) {\n            elOffset = el.getOffsetBySite(elStream);\n        } else {\n            elOffset = el.offset;\n        }\n\n        const otherElements = this.getElementsByOffset(elOffset, elOffset, { mustBeginInSpan: false });\n        if (otherElements.length === 0) {\n            return undefined;\n        } else if (otherElements.length === 1) {\n            return otherElements.get(0);\n        } else {\n            for (const thisEl of otherElements) {\n                if (el.constructor === thisEl.constructor) {\n                    return thisEl;\n                }\n            }\n            return otherElements.get(0);\n        }\n    }\n\n\n    /**\n     * Sets Pitch.accidental.displayStatus for every element with a\n     * pitch or pitches in the stream. If a natural needs to be displayed\n     * and the Pitch does not have an accidental object yet, adds one.\n     *\n     * Called automatically before appendDOM routines are called.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    makeAccidentals() {\n        // cheap version of music21p method\n        const extendableStepList = {};\n        const stepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n        const ks = this.keySignature || this.getContextByClass('KeySignature');\n        for (const stepName of stepNames) {\n            let stepAlter = 0;\n            if (ks !== undefined) {\n                const tempAccidental = ks.accidentalByStep(\n                    stepName\n                );\n                if (tempAccidental !== undefined) {\n                    stepAlter = tempAccidental.alter;\n                    // console.log(stepAlter + \" \" + stepName);\n                }\n            }\n            extendableStepList[stepName] = stepAlter;\n        }\n        const lastOctaveStepList = [];\n        for (let i = 0; i < 10; i++) {\n            const tempOctaveStepDict = $.extend({}, extendableStepList);\n            lastOctaveStepList.push(tempOctaveStepDict);\n        }\n        const lastOctavelessStepDict = $.extend({}, extendableStepList); // probably unnecessary, but safe...\n\n        for (const el of this) {\n            if (el.pitch !== undefined) {\n                // note\n                const p = el.pitch;\n                const lastStepDict = lastOctaveStepList[p.octave];\n                this._makeAccidentalForOnePitch(\n                    p,\n                    lastStepDict,\n                    lastOctavelessStepDict\n                );\n            } else if (el._notes !== undefined) {\n                // chord\n                for (const chordNote of el._notes) {\n                    const p = chordNote.pitch;\n                    const lastStepDict = lastOctaveStepList[p.octave];\n                    this._makeAccidentalForOnePitch(\n                        p,\n                        lastStepDict,\n                        lastOctavelessStepDict\n                    );\n                }\n            }\n        }\n        return this;\n    }\n\n    //  returns pitch\n    _makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict) {\n        if (lastStepDict === undefined) {\n            // octave < 0 or > 10? -- error that appeared sometimes.\n            lastStepDict = {};\n        }\n        let newAlter;\n        if (p.accidental === undefined) {\n            newAlter = 0;\n        } else {\n            newAlter = p.accidental.alter;\n        }\n        // console.log(p.name + \" \" + lastStepDict[p.step].toString());\n        if (\n            lastStepDict[p.step] !== newAlter\n            || lastOctavelessStepDict[p.step] !== newAlter\n        ) {\n            if (p.accidental === undefined) {\n                p.accidental = new pitch.Accidental('natural');\n            }\n            p.accidental.displayStatus = true;\n            // console.log(\"setting displayStatus to true\");\n        } else if (\n            lastStepDict[p.step] === newAlter\n            && lastOctavelessStepDict[p.step] === newAlter\n        ) {\n            if (p.accidental !== undefined) {\n                p.accidental.displayStatus = false;\n            }\n            // console.log(\"setting displayStatus to false\");\n        }\n        lastStepDict[p.step] = newAlter;\n        lastOctavelessStepDict[p.step] = newAlter;\n        return p;\n    }\n\n    /**\n     * Sets the render options for any substreams (such as placing them\n     * in systems, etc.) DOES NOTHING for music21.stream.Stream, but is\n     * overridden in subclasses.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    setSubstreamRenderOptions() {\n        /* does nothing for standard streams ... */\n        return this;\n    }\n    /**\n     * Resets all the RenderOptions back to defaults. Can run recursively\n     * and can also preserve the `RenderOptions.events` object.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Boolean} [recursive=false]\n     * @param {Boolean} [preserveEvents=false]\n     * @returns {music21.stream.Stream} this\n     */\n    resetRenderOptions(recursive, preserveEvents) {\n        const oldEvents = this.renderOptions.events;\n        this.renderOptions = new renderOptions.RenderOptions();\n        if (preserveEvents) {\n            this.renderOptions.events = oldEvents;\n        }\n\n        if (recursive) {\n            for (const el of this) {\n                if (el.isClassOrSubclass('Stream')) {\n                    el.resetRenderOptions(recursive, preserveEvents);\n                }\n            }\n        }\n        return this;\n    }\n\n    //  * *********  VexFlow functionality\n\n    renderVexflowOnCanvas(canvasOrSVG) {\n        console.warn(\n            'renderVexflowOnCanvas is deprecated; call renderVexflow instead'\n        );\n        return this.renderVexflow(canvasOrSVG);\n    }\n\n    write(format='musicxml') {\n        return _exportMusicXMLAsText(this);\n    }\n\n\n    /**\n     * Uses {@link music21.vfShow.Renderer} to render Vexflow onto an\n     * existing canvas or SVG object.\n     *\n     * Runs `this.setRenderInteraction` on the canvas.\n     *\n     * Will be moved to vfShow eventually when converter objects are enabled...maybe.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject|JQueryDOMObject} canvasOrSVG - a canvas or the div surrounding an SVG object\n     * @returns {vfShow.Renderer}\n     */\n    renderVexflow(canvasOrSVG) {\n        if (canvasOrSVG.jquery) {\n            canvasOrSVG = canvasOrSVG[0];\n        }\n        const DOMContains = document.body.contains(canvasOrSVG);\n        if (!DOMContains) {\n            // temporarily add to DOM so Firefox can measure it...\n            document.body.appendChild(canvasOrSVG);\n        }\n\n        const tagName = canvasOrSVG.tagName.toLowerCase();\n\n        if (this.autoBeam === true) {\n            try {\n                this.makeBeams({ inPlace: true });\n            } catch (e) {\n                if (!e.toString().includes('Time Signature')) {\n                    throw e;\n                }\n            }\n        }\n        const vfr = new vfShow.Renderer(this, canvasOrSVG);\n        if (tagName === 'canvas') {\n            vfr.rendererType = 'canvas';\n        } else if (tagName === 'svg') {\n            vfr.rendererType = 'svg';\n        }\n        vfr.render();\n        this.setRenderInteraction(canvasOrSVG);\n        this.activeVFRenderer = vfr;\n        if (!DOMContains) {\n            // remove the adding to DOM so that Firefox could measure it...\n            document.body.removeChild(canvasOrSVG);\n        }\n\n        return vfr;\n    }\n\n    /**\n     * Estimate the stream height for the Stream.\n     *\n     * If there are systems they will be incorporated into the height unless `ignoreSystems` is `true`.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Boolean} [ignoreSystems=false]\n     * @returns {number} height in pixels\n     */\n    estimateStreamHeight(ignoreSystems) {\n        const staffHeight = this.renderOptions.naiveHeight;\n        let systemPadding = this.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = 0;\n        }\n        let numSystems;\n        if (this.isClassOrSubclass('Score')) {\n            const numParts = this.parts.length;\n            numSystems = this.numSystems();\n            if (numSystems === undefined || ignoreSystems) {\n                numSystems = 1;\n            }\n            const scoreHeight\n                = numSystems * staffHeight * numParts\n                + (numSystems - 1) * systemPadding;\n            // console.log('scoreHeight of ' + scoreHeight);\n            return scoreHeight;\n        } else if (this.isClassOrSubclass('Part')) {\n            numSystems = 1;\n            if (!ignoreSystems) {\n                numSystems = this.numSystems();\n            }\n            if (debug) {\n                console.log(\n                    'estimateStreamHeight for Part: numSystems ['\n                        + numSystems\n                        + '] * staffHeight ['\n                        + staffHeight\n                        + '] + (numSystems ['\n                        + numSystems\n                        + '] - 1) * systemPadding ['\n                        + systemPadding\n                        + '].'\n                );\n            }\n            return numSystems * staffHeight + (numSystems - 1) * systemPadding;\n        } else {\n            return staffHeight;\n        }\n    }\n\n    /**\n     * Estimates the length of the Stream in pixels.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {number} length in pixels\n     */\n    estimateStaffLength() {\n        let i;\n        let totalLength;\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (this.hasVoices()) {\n            let maxLength = 0;\n            for (const v of this) {\n                if (v.isClassOrSubclass('Stream')) {\n                    const thisLength\n                        = v.estimateStaffLength() + v.renderOptions.staffPadding;\n                    if (thisLength > maxLength) {\n                        maxLength = thisLength;\n                    }\n                }\n            }\n            return maxLength;\n        } else if (!this.isFlat) {\n            // part\n            totalLength = 0;\n            for (i = 0; i < this.length; i++) {\n                const m = this.get(i);\n                if (m.isClassOrSubclass('Stream')) {\n                    totalLength\n                        += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                    if (i !== 0 && m.renderOptions.startNewSystem === true) {\n                        break;\n                    }\n                }\n            }\n            return totalLength;\n        } else {\n            const rendOp = this.renderOptions;\n            totalLength = 30 * this.notesAndRests.length;\n            totalLength += rendOp.displayClef ? 30 : 0;\n            totalLength\n                += rendOp.displayKeySignature && this.getSpecialContext('keySignature')\n                    ? this.getSpecialContext('keySignature').width\n                    : 0;\n            totalLength += rendOp.displayTimeSignature ? 30 : 0;\n            // totalLength += rendOp.staffPadding;\n            return totalLength;\n        }\n    }\n\n    //  * ***** MIDI related routines...\n\n    /**\n     * Plays the Stream through the MIDI/sound playback (for now, only MIDI.js is supported)\n     *\n     * `options` can be an object containing:\n     * - instrument: {@link music21.instrument.Instrument} object (default, `this.instrument`)\n     * - tempo: number (default, `this.tempo`)\n     *\n     * @memberof music21.stream.Stream\n     * @param {object} [options] - object of playback options\n     * @returns {music21.stream.Stream} this\n     */\n    playStream(options) {\n        const params = {\n            instrument: this.instrument,\n            tempo: this.tempo,\n            done: undefined,\n            startNote: undefined,\n        };\n        common.merge(params, options);\n        const startNoteIndex = params.startNote;\n        let currentNoteIndex = 0;\n        if (startNoteIndex !== undefined) {\n            currentNoteIndex = startNoteIndex;\n        }\n        const flatEls = this.flat.elements;\n        const lastNoteIndex = flatEls.length - 1;\n        this._stopPlaying = false;\n        const thisStream = this;\n\n        const playNext = function playNext(elements, params) {\n            if (currentNoteIndex <= lastNoteIndex && !thisStream._stopPlaying) {\n                const el = elements[currentNoteIndex];\n                let nextNote;\n                let playDuration;\n                if (currentNoteIndex < lastNoteIndex) {\n                    nextNote = elements[currentNoteIndex + 1];\n                    playDuration = nextNote.offset - el.offset;\n                } else {\n                    playDuration = el.duration.quarterLength;\n                }\n                const milliseconds = playDuration * 1000 * 60 / params.tempo;\n                if (debug) {\n                    console.log(\n                        'playing: ',\n                        el,\n                        playDuration,\n                        milliseconds,\n                        params.tempo\n                    );\n                }\n\n                if (el.playMidi !== undefined) {\n                    el.playMidi(params.tempo, nextNote, params);\n                }\n                currentNoteIndex += 1;\n                setTimeout(() => {\n                    playNext(elements, params);\n                }, milliseconds);\n            } else if (params && params.done) {\n                params.done.call();\n            }\n        };\n        playNext(flatEls, params);\n        return this;\n    }\n\n    /**\n     * Stops a stream from playing if it currently is.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    stopPlayStream() {\n        // turns off all currently playing MIDI notes (on any stream) and stops playback.\n        this._stopPlaying = true;\n        for (let i = 0; i < 127; i++) {\n            MIDI.noteOff(0, i, 0);\n        }\n        return this;\n    }\n    /* ----------------------------------------------------------------------\n     *\n     *  SVG/Canvas DOM routines -- to be factored out eventually.\n     *\n     */\n\n    createNewCanvas(width, height, elementType='svg') {\n        console.warn('createNewCanvas is deprecated, use createNewDOM instead');\n        return this.createNewDOM(width, height, elementType);\n    }\n\n    /**\n     * Creates and returns a new `&lt;canvas&gt;` or `&lt;svg&gt;` object.\n     *\n     * Calls setSubstreamRenderOptions() first.\n     *\n     * Does not render on the DOM element.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} width - will use `this.estimateStaffLength()` + `this.renderOptions.staffPadding` if not given\n     * @param {number|string|undefined} height - if undefined will use `this.renderOptions.height`. If still undefined, will use `this.estimateStreamHeight()`\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {JQueryDOMObject} svg in jquery.\n     */\n    createNewDOM(width, height, elementType='svg') {\n        if (!this.isFlat) {\n            this.setSubstreamRenderOptions();\n        }\n\n        // we render SVG on a Div for Vexflow\n        let renderElementType = 'div';\n        if (elementType === 'canvas') {\n            renderElementType = 'canvas';\n        }\n\n        const $newCanvasOrDIV = $('<' + renderElementType + '/>');\n        $newCanvasOrDIV.addClass('streamHolding'); // .css('border', '1px red solid');\n        $newCanvasOrDIV.css('display', 'inline-block');\n\n        if (width !== undefined) {\n            if (typeof width === 'string') {\n                width = common.stripPx(width);\n            }\n            $newCanvasOrDIV.attr('width', width);\n        } else {\n            const computedWidth\n                = this.estimateStaffLength()\n                + this.renderOptions.staffPadding\n                + 0;\n            $newCanvasOrDIV.attr('width', computedWidth);\n        }\n        if (height !== undefined) {\n            $newCanvasOrDIV.attr('height', height);\n        } else {\n            let computedHeight;\n            if (this.renderOptions.height === undefined) {\n                computedHeight = this.estimateStreamHeight();\n                // console.log('computed Height estim: ' + computedHeight);\n            } else {\n                computedHeight = this.renderOptions.height;\n                // console.log('computed Height: ' + computedHeight);\n            }\n            $newCanvasOrDIV.attr(\n                'height',\n                computedHeight * this.renderOptions.scaleFactor.y\n            );\n        }\n        return $newCanvasOrDIV;\n    }\n\n    createPlayableCanvas(width, height, elementType = 'svg') {\n        console.warn(\n            'createPlayableCanvas is deprecated, use createPlayableDOM instead'\n        );\n        return this.createPlayableDOM(width, height, elementType);\n    }\n\n    /**\n     * Creates a rendered, playable svg where clicking plays it.\n     *\n     * Called from appendNewDOM() etc.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} width\n     * @param {number|string|undefined} height\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {JQueryDOMObject} canvas or svg\n     */\n    createPlayableDOM(width, height, elementType='svg') {\n        this.renderOptions.events.click = 'play';\n        return this.createDOM(width, height, elementType);\n    }\n\n    createCanvas(width, height, elementType='svg') {\n        console.warn('createCanvas is deprecated, use createDOM');\n        return this.createDOM(width, height, elementType);\n    }\n    /**\n     * Creates a new svg and renders vexflow on it\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} [width]\n     * @param {number|string|undefined} [height]\n     * @param {string} elementType - what type of element svg or canvas, default = svg\n     * @returns {JQueryDOMObject} canvas or SVG\n     */\n    createDOM(width, height, elementType='svg') {\n        const $newSvg = this.createNewDOM(width, height, elementType);\n        // temporarily append the SVG to the document to fix a Firefox bug\n        // where nothing can be measured unless is it in the document.\n        this.renderVexflow($newSvg);\n        return $newSvg;\n    }\n\n    appendNewCanvas(appendElement, width, height, elementType = 'svg') {\n        console.warn('appendNewCanvas is deprecated, use appendNewDOM instead');\n        return this.appendNewDOM(appendElement, width, height, elementType);\n    }\n\n    /**\n     * Creates a new canvas, renders vexflow on it, and appends it to the DOM.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [appendElement=document.body] - where to place the svg\n     * @param {number|string} [width]\n     * @param {number|string} [height]\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {DOMObject} svg (not the jQueryDOMObject -- this is a difference with other routines and should be fixed. TODO: FIX)\n     *\n     */\n    appendNewDOM(appendElement, width, height, elementType = 'svg') {\n        if (appendElement === undefined) {\n            appendElement = 'body';\n        }\n        let $appendElement = appendElement;\n        if (appendElement.jquery === undefined) {\n            $appendElement = $(appendElement);\n        }\n\n        //      if (width === undefined && this.renderOptions.maxSystemWidth === undefined) {\n        //      var $bodyElement = bodyElement;\n        //      if (bodyElement.jquery === undefined) {\n        //      $bodyElement = $(bodyElement);\n        //      }\n        //      width = $bodyElement.width();\n        //      };\n\n        const svgOrCanvasBlock = this.createDOM(width, height, elementType);\n        $appendElement.append(svgOrCanvasBlock);\n        return svgOrCanvasBlock[0];\n    }\n\n    replaceCanvas(where, preserveSvgSize, elementType = 'svg') {\n        console.warn('replaceCanvas is deprecated, use replaceDOM instead');\n        return this.replaceDOM(where, preserveSvgSize, elementType);\n    }\n\n    /**\n     * Replaces a particular Svg with a new rendering of one.\n     *\n     * Note that if 'where' is empty, will replace all svges on the page.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [where] - the canvas or SVG to replace or a container holding the canvas(es) to replace.\n     * @param {Boolean} [preserveSvgSize=false]\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {JQueryDOMObject} the svg\n     */\n    replaceDOM(where, preserveSvgSize, elementType = 'svg') {\n        // if called with no where, replaces all the svges on the page...\n        if (where === undefined) {\n            where = 'body';\n        }\n        let $where;\n        if (where.jquery === undefined) {\n            $where = $(where);\n        } else {\n            $where = where;\n            where = $where[0];\n        }\n        let $oldSVGOrCanvas;\n\n        if ($where.hasClass('streamHolding')) {\n            $oldSVGOrCanvas = $where;\n        } else {\n            $oldSVGOrCanvas = $where.find('.streamHolding');\n        }\n        // TODO: Max Width!\n        if ($oldSVGOrCanvas.length === 0) {\n            throw new Music21Exception('No svg defined for replaceDOM!');\n        } else if ($oldSVGOrCanvas.length > 1) {\n            // change last svg...\n            // replacing each with svgBlock doesn't work\n            // anyhow, it just resizes the svg but doesn't\n            // draw.\n            $oldSVGOrCanvas = $($oldSVGOrCanvas[$oldSVGOrCanvas.length - 1]);\n        }\n\n        let svgBlock;\n        if (preserveSvgSize) {\n            const width = $oldSVGOrCanvas.width() || parseInt($oldSVGOrCanvas.attr('width'));\n            const height = $oldSVGOrCanvas.attr('height'); // height manipulates\n            svgBlock = this.createDOM(width, height, elementType);\n        } else {\n            svgBlock = this.createDOM(undefined, undefined, elementType);\n        }\n\n        $oldSVGOrCanvas.replaceWith(svgBlock);\n        return svgBlock;\n    }\n\n\n    /**\n     * Set the type of interaction on the svg based on\n     *    - Stream.renderOptions.events.click\n     *    - Stream.renderOptions.events.dblclick\n     *    - Stream.renderOptions.events.resize\n     *\n     * Currently the only options available for each are:\n     *    - 'play' (string)\n     *    - 'reflow' (string; only on event.resize)\n     *    - customFunction (will receive event as a first variable; should set up a way to\n     *                    find the original stream; var s = this; var f = function () { s...}\n     *                   )\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvasOrDiv - canvas or the Div surrounding it.\n     * @returns {music21.stream.Stream} this\n     */\n    setRenderInteraction(canvasOrDiv) {\n        let $svg = canvasOrDiv;\n        if (canvasOrDiv === undefined) {\n            return this;\n        } else if (canvasOrDiv.jquery === undefined) {\n            $svg = $(canvasOrDiv);\n        }\n        const playFunc = () => {\n            this.playStream();\n        };\n\n        $.each(\n            this.renderOptions.events,\n            $.proxy(function setRenderInteractionProxy(\n                eventType,\n                eventFunction\n            ) {\n                $svg.off(eventType);\n                if (\n                    typeof eventFunction === 'string'\n                    && eventFunction === 'play'\n                ) {\n                    $svg.on(eventType, playFunc);\n                } else if (\n                    typeof eventFunction === 'string'\n                    && eventType === 'resize'\n                    && eventFunction === 'reflow'\n                ) {\n                    this.windowReflowStart($svg);\n                } else if (eventFunction !== undefined) {\n                    $svg.on(eventType, eventFunction);\n                }\n            },\n            this)\n        );\n        return this;\n    }\n\n    /**\n     *\n     * Recursively search downward for the closest storedVexflowStave...\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Vex.Flow.Stave|undefined}\n     */\n    recursiveGetStoredVexflowStave() {\n        const storedVFStave = this.storedVexflowStave;\n        if (storedVFStave === undefined) {\n            if (this.isFlat) {\n                return undefined;\n            } else {\n                const subStreams = this.getElementsByClass('Stream');\n                const first_subStream = subStreams.get(0);\n                return first_subStream.recursiveGetStoredVexflowStave();\n            }\n        }\n        return storedVFStave;\n    }\n\n    getUnscaledXYforCanvas(svg, e) {\n        console.warn(\n            'getUnscaledXYforCanvas is deprecated, use getUnscaledXYforDOM instead'\n        );\n        return this.getUnscaledXYforDOM(svg, e);\n    }\n\n    /**\n     * Given a mouse click, or other event with .pageX and .pageY,\n     * find the x and y for the svg.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg - a canvas or SVG object\n     * @param {Event} e\n     * @returns {Array<number>} two-elements, [x, y] in pixels.\n     */\n    getUnscaledXYforDOM(svg, e) {\n        let offset = null;\n        if (svg === undefined) {\n            offset = { left: 0, top: 0 };\n        } else {\n            offset = $(svg).offset();\n        }\n        /*\n         * mouse event handler code from: http://diveintohtml5.org/canvas.html\n         */\n        let xClick;\n        let yClick;\n        if (e.pageX !== undefined && e.pageY !== undefined) {\n            xClick = e.pageX;\n            yClick = e.pageY;\n        } else {\n            xClick\n                = e.clientX\n                + document.body.scrollLeft\n                + document.documentElement.scrollLeft;\n            yClick\n                = e.clientY\n                + document.body.scrollTop\n                + document.documentElement.scrollTop;\n        }\n        const xPx = xClick - offset.left;\n        const yPx = yClick - offset.top;\n        return [xPx, yPx];\n    }\n\n    getScaledXYforCanvas(svg, e) {\n        console.warn(\n            'getScaledXYforCanvas is deprecated, use getScaledXYforDOM instead'\n        );\n        return this.getScaledXYforDOM(svg, e);\n    }\n\n    /**\n     * return a list of [scaledX, scaledY] for\n     * a svg element.\n     *\n     * xScaled refers to 1/scaleFactor.x -- for instance, scaleFactor.x = 0.7 (default)\n     * x of 1 gives 1.42857...\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg -- a canvas or SVG object\n     * @param {Event} e\n     * @returns {Array<number>} [scaledX, scaledY]\n     */\n    getScaledXYforDOM(svg, e) {\n        const [xPx, yPx] = this.getUnscaledXYforDOM(svg, e);\n        const pixelScaling = this.renderOptions.scaleFactor;\n\n        const yPxScaled = yPx / pixelScaling.y;\n        const xPxScaled = xPx / pixelScaling.x;\n        return [xPxScaled, yPxScaled];\n    }\n    /**\n     *\n     * Given a Y position find the diatonicNoteNum that a note at that position would have.\n     *\n     * searches this.storedVexflowStave\n     *\n     * Y position must be offset from the start of the stave...\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} yPxScaled\n     * @returns {Int}\n     */\n    diatonicNoteNumFromScaledY(yPxScaled) {\n        const storedVFStave = this.recursiveGetStoredVexflowStave();\n        if (storedVFStave === undefined) {\n            throw new StreamException('Could not find vexflowStave for getting size');\n        }\n\n        // for (var i = -10; i < 10; i++) {\n        //    console.log(\"line: \" + i + \" y: \" + storedVFStave.getYForLine(i));\n        // }\n        const thisClef = this.clef || this.getContextByClass('Clef');\n        const lowestLine = (thisClef !== undefined) ? thisClef.lowestLine : 31;\n\n        const lineSpacing = storedVFStave.options.spacing_between_lines_px;\n        const linesAboveStaff = storedVFStave.options.space_above_staff_ln;\n\n        const notesFromTop = yPxScaled * 2 / lineSpacing;\n        const notesAboveLowestLine\n            = (storedVFStave.options.num_lines - 1 + linesAboveStaff) * 2\n            - notesFromTop;\n        const clickedDiatonicNoteNum = lowestLine + Math.round(notesAboveLowestLine);\n        return clickedDiatonicNoteNum;\n    }\n\n    /**\n     * Returns the stream that is at X location xPxScaled and system systemIndex.\n     *\n     * Override in subclasses, always returns this; here.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} [xPxScaled]\n     * @param {number} [allowablePixels=10]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream}\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        return this;\n    }\n\n    /**\n     *\n     * Return the note (or chord or rest) at pixel X (or within allowablePixels [default 10])\n     * of the note.\n     *\n     * systemIndex element is not used on bare Stream\n     *\n     * options can be a dictionary of: 'allowBackup' which gets the closest\n     * note within the window even if it's beyond allowablePixels (default: true)\n     * and 'backupMaximum' which specifies a maximum distance even for backup\n     * (default: 70);\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} xPxScaled\n     * @param {number} [allowablePixels=10]\n     * @param {number} [systemIndex]\n     * @param {object} [options]\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    noteElementFromScaledX(xPxScaled, allowablePixels, systemIndex, options) {\n        const params = {\n            allowBackup: true,\n            backupMaximum: 70,\n        };\n        common.merge(params, options);\n        let foundNote;\n        if (allowablePixels === undefined) {\n            allowablePixels = 10;\n        }\n        const subStream = this.getStreamFromScaledXandSystemIndex(\n            xPxScaled,\n            systemIndex\n        );\n        if (subStream === undefined) {\n            return undefined;\n        }\n        const backup = {\n            minDistanceSoFar: params.backupMaximum,\n            note: undefined,\n        }; // a backup in case we did not find within allowablePixels\n\n        for (const n of subStream.flat.notesAndRests) {\n            /* should also\n             * compensate for accidentals...\n             */\n            const leftDistance = Math.abs(n.x - xPxScaled);\n            const rightDistance = Math.abs(n.x + n.width - xPxScaled);\n            const minDistance = Math.min(leftDistance, rightDistance);\n\n            if (\n                leftDistance < allowablePixels\n                && rightDistance < allowablePixels\n            ) {\n                foundNote = n;\n                break; /* O(n); can be made O(log n) */\n            } else if (\n                leftDistance < params.backupMaximum\n                && rightDistance < params.backupMaximum\n                && minDistance < backup.minDistanceSoFar\n            ) {\n                backup.note = n;\n                backup.minDistanceSoFar = minDistance;\n            }\n        }\n        // console.log('note here is: ', foundNote);\n        if (params.allowBackup && foundNote === undefined) {\n            foundNote = backup.note;\n            // console.log('used backup: closest was: ', backup.minDistanceSoFar);\n        }\n        // console.log(foundNote);\n        return foundNote;\n    }\n\n    /**\n     * Given an event object, and an x and y location, returns a two-element array\n     * of the pitch.Pitch.diatonicNoteNum that was clicked (i.e., if C4 was clicked this\n     * will return 29; if D4 was clicked this will return 30) and the closest note in the\n     * stream that was clicked.\n     *\n     * Return a list of [diatonicNoteNum, closestXNote]\n     * for an event (e) called on the svg (svg)\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg\n     * @param {Event} e\n     * @param {number} x\n     * @param {number} y\n     * @returns {Array} [diatonicNoteNum, closestXNote]\n     */\n    findNoteForClick(svg, e, x, y) {\n        if (x === undefined || y === undefined) {\n            [x, y] = this.getScaledXYforDOM(svg, e);\n        }\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(y);\n        const foundNote = this.noteElementFromScaledX(x);\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Change the pitch of a note given that it has been clicked and then\n     * call changedCallbackFunction\n     *\n     * To be removed...\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} clickedDiatonicNoteNum\n     * @param {music21.base.Music21Object} foundNote\n     * @param {DOMObject} svg\n     * @returns {any} output of changedCallbackFunction\n     */\n    noteChanged(clickedDiatonicNoteNum, foundNote, svg) {\n        const n = foundNote;\n        const p = new pitch.Pitch('C');\n        p.diatonicNoteNum = clickedDiatonicNoteNum;\n        p.accidental = n.pitch.accidental;\n        n.pitch = p;\n        n.stemDirection = undefined;\n        this.activeNote = n;\n        const $newSvg = this.redrawDOM(svg);\n        const params = { foundNote: n, svg: $newSvg };\n        if (this.changedCallbackFunction !== undefined) {\n            return this.changedCallbackFunction(params);\n        } else {\n            return params;\n        }\n    }\n\n    redrawCanvas(svg) {\n        console.warn('redrawCanvas is deprecated, use redrawDOM instead');\n        return this.redrawDOM(svg);\n    }\n\n    /**\n     * Redraws an svgDiv, keeping the events of the previous svg.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg\n     * @returns {music21.stream.Stream} this\n     */\n    redrawDOM(svg) {\n        // this.resetRenderOptions(true, true); // recursive, preserveEvents\n        if (!this.isFlat) {\n            this.setSubstreamRenderOptions();\n        }\n        const $svg = $(svg); // works even if svg is already $jquery\n        const $newSvg = this.createNewDOM(svg.width, svg.height);\n        this.renderVexflow($newSvg);\n        $svg.replaceWith($newSvg);\n        return $newSvg;\n    }\n\n    editableAccidentalCanvas(width, height) {\n        console.warn(\n            'editableAccidentalCanvas is deprecated, use editableAccidentalDOM instead'\n        );\n        return this.editableAccidentalDOM(width, height);\n    }\n\n    /**\n     * Renders a stream on svg with the ability to edit it and\n     * a toolbar that allows the accidentals to be edited.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} [width]\n     * @param {number} [height]\n     * @returns {DOMObject} &lt;div&gt; tag around the svg.\n     */\n    editableAccidentalDOM(width, height) {\n        /*\n         * Create an editable svg with an accidental selection bar.\n         */\n        const d = $('<div/>')\n            .css('text-align', 'left')\n            .css('position', 'relative');\n\n        this.renderOptions.events.click = this.DOMChangerFunction;\n        const $svgDiv = this.createDOM(width, height);\n        const buttonDiv = this.getAccidentalToolbar(\n            undefined,\n            undefined,\n            $svgDiv\n        );\n        d.append(buttonDiv);\n        d.append($(\"<br clear='all'/>\"));\n        d.append($svgDiv);\n        return d;\n    }\n\n    /*\n     * SVG toolbars...\n     */\n\n    /**\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} minAccidental - alter of the min accidental (default -1)\n     * @param {Int} maxAccidental - alter of the max accidental (default 1)\n     * @param {jQueryObject} $siblingSvg - svg to use for redrawing;\n     * @returns {jQueryObject} the accidental toolbar.\n     */\n    getAccidentalToolbar(minAccidental, maxAccidental, $siblingSvg) {\n        if (minAccidental === undefined) {\n            minAccidental = -1;\n        }\n        if (maxAccidental === undefined) {\n            maxAccidental = 1;\n        }\n        minAccidental = Math.round(minAccidental);\n        maxAccidental = Math.round(maxAccidental);\n\n        const addAccidental = (newAlter, clickEvent) => {\n            /*\n             * To be called on a button...\n             */\n            let $useSvg = $siblingSvg;\n            if ($useSvg === undefined) {\n                let $searchParent = $(clickEvent.target).parent();\n                let maxSearch = 99;\n                while (\n                    maxSearch > 0\n                    && $searchParent !== undefined\n                    && ($useSvg === undefined || $useSvg[0] === undefined)\n                ) {\n                    maxSearch -= 1;\n                    $useSvg = $searchParent.find('.streamHolding');\n                    $searchParent = $searchParent.parent();\n                }\n                if ($useSvg[0] === undefined) {\n                    console.log('Could not find a svg...');\n                    return;\n                }\n            }\n            if (this.activeNote !== undefined) {\n                const n = this.activeNote;\n                n.pitch.accidental = new pitch.Accidental(newAlter);\n                /* console.log(n.pitch.name); */\n                const $newSvg = this.redrawDOM($useSvg[0]);\n                if (this.changedCallbackFunction !== undefined) {\n                    this.changedCallbackFunction({\n                        foundNote: n,\n                        svg: $newSvg,\n                    });\n                }\n            }\n        };\n\n        const $buttonDiv = $('<div/>').attr(\n            'class',\n            'accidentalToolbar scoreToolbar'\n        );\n        for (let i = minAccidental; i <= maxAccidental; i++) {\n            const acc = new pitch.Accidental(i);\n            const $button = $(\n                '<button>' + acc.unicodeModifier + '</button>'\n            ).click(e => addAccidental(i, e));\n            if (Math.abs(i) > 1) {\n                $button.css('font-family', 'Bravura Text');\n                $button.css('font-size', '20px');\n            }\n            $buttonDiv.append($button);\n        }\n        return $buttonDiv;\n    }\n    /**\n     *\n     * @memberof music21.stream.Stream\n     * @returns {jQueryObject} a Div containing two buttons -- play and stop\n     */\n    getPlayToolbar() {\n        const $buttonDiv = $('<div/>').attr(\n            'class',\n            'playToolbar scoreToolbar'\n        );\n        const $bPlay = $('<button>&#9658</button>');\n        $bPlay.click(() => {\n            this.playStream();\n        });\n        $buttonDiv.append($bPlay);\n        const $bStop = $('<button>&#9724</button>');\n        $bStop.click(() => {\n            this.stopPlayStream();\n        });\n        $buttonDiv.append($bStop);\n        return $buttonDiv;\n    }\n    //  reflow\n\n    /**\n     * Begins a series of bound events to the window that makes it\n     * so that on resizing the stream is redrawn and reflowed to the\n     * new size.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject} jSvg\n     * @returns {music21.stream.Stream} this\n     */\n    windowReflowStart(jSvg) {\n        // set up a bunch of windowReflow bindings that affect the svg.\n        const callingStream = this;\n        let jSvgNow = jSvg;\n        $(window).bind('resizeEnd', () => {\n            // do something, window hasn't changed size in 500ms\n            const jSvgParent = jSvgNow.parent();\n            const newWidth = jSvgParent.width();\n            const svgWidth = newWidth;\n            // console.log(svgWidth);\n            console.log('resizeEnd triggered', newWidth);\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.resetRenderOptions(true, true); // recursive, preserveEvents\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.maxSystemWidth = svgWidth - 40;\n            jSvgNow.remove();\n            const svgObj = callingStream.appendNewDOM(jSvgParent);\n            jSvgNow = $(svgObj);\n        });\n        $(window).resize(function resizeSvgTo() {\n            if (this.resizeTO) {\n                clearTimeout(this.resizeTO);\n            }\n            this.resizeTO = setTimeout(function resizeToTimeout() {\n                $(this).trigger('resizeEnd');\n            }, 200);\n        });\n        setTimeout(function triggerResizeOnCreateSvg() {\n            const $window = $(window);\n            const doResize = $window.data('triggerResizeOnCreateSvg');\n            if (doResize === undefined || doResize === true) {\n                $(this).trigger('resizeEnd');\n                $window.data('triggerResizeOnCreateSvg', false);\n            }\n        }, 1000);\n        return this;\n    }\n    /**\n     * Does this stream have a {@link music21.stream.Voice} inside it?\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasVoices() {\n        for (const el of this) {\n            if (el.isClassOrSubclass('Voice')) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nstream.Stream = Stream;\n\n/**\n *\n * @class Voice\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Voice extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsFirst';\n    }\n}\nstream.Voice = Voice;\n\n/**\n * @class Measure\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Measure extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsFirst';\n        this.isMeasure = true;\n        this.number = 0; // measure number\n        this.numberSuffix = '';\n    }\n\n    measureNumberWithSuffix() {\n        return this.number.toString() + this.numberSuffix;\n    }\n}\nstream.Measure = Measure;\n\n/**\n * Part -- specialized to handle Measures inside it\n *\n * @class Part\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Part extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'flatten';\n        this.systemHeight = this.renderOptions.naiveHeight;\n    }\n\n    /**\n     * How many systems does this Part have?\n     *\n     * Does not change any reflow information, so by default it's always 1.\n     *\n     * @memberof music21.stream.Part\n     * @returns {Number}\n     */\n    numSystems() {\n        let numSystems = 1;\n        const subStreams = this.getElementsByClass('Stream');\n        for (let i = 1; i < subStreams.length; i++) {\n            if (subStreams.get(i).renderOptions.startNewSystem) {\n                numSystems += 1;\n            }\n        }\n        return numSystems;\n    }\n\n    /**\n     * Find the width of every measure in the Part.\n     *\n     * @memberof music21.stream.Part\n     * @returns {Array<number>}\n     */\n    getMeasureWidths() {\n        /* call after setSubstreamRenderOptions */\n        const measureWidths = [];\n        for (const el of this) {\n            if (el.isClassOrSubclass('Measure')) {\n                const elRendOp = el.renderOptions;\n                measureWidths[elRendOp.measureIndex] = elRendOp.width;\n            }\n        }\n        /* console.log(measureWidths);\n         *\n         */\n        return measureWidths;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @memberof music21.stream.Part\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (!this.isFlat) {\n            // part with Measures underneath\n            let totalLength = 0;\n            let isFirst = true;\n            for (const m of this.getElementsByClass('Measure')) {\n                // this looks wrong, but actually seems to be right. moving it to\n                // after the break breaks things.\n                totalLength\n                    += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                if (!isFirst && m.renderOptions.startNewSystem === true) {\n                    break;\n                }\n                isFirst = false;\n            }\n            return totalLength;\n        }\n        // no measures found in part... treat as measure\n        const tempM = new stream.Measure();\n        tempM.elements = this;\n        return tempM.estimateStaffLength();\n    }\n    /**\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     *\n     * @memberof music21.stream.Part\n     * @param systemHeight\n     * @returns {Array}\n     */\n    fixSystemInformation(systemHeight) {\n        /*\n         * console.log('system height: ' + systemHeight);\n         */\n        if (systemHeight === undefined) {\n            systemHeight = this.systemHeight; /* part.show() called... */\n        } else if (debug) {\n            console.log('overridden systemHeight: ' + systemHeight);\n        }\n        const systemPadding\n            = this.renderOptions.systemPadding\n            || this.renderOptions.naiveSystemPadding;\n        const measureWidths = this.getMeasureWidths();\n        const maxSystemWidth = this.maxSystemWidth; /* of course fix! */\n        const systemCurrentWidths = [];\n        const systemBreakIndexes = [];\n        let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n        const startLeft = 20; /* TODO: make it obtained elsewhere */\n        let currentLeft = startLeft;\n        let i;\n        for (i = 0; i < measureWidths.length; i++) {\n            const currentRight = currentLeft + measureWidths[i];\n            /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n            if (currentRight > maxSystemWidth && lastSystemBreak !== i) {\n                systemBreakIndexes.push(i - 1);\n                systemCurrentWidths.push(currentLeft);\n\n                // console.log('setting new width at ' + currentLeft);\n                currentLeft = startLeft + measureWidths[i]; // 20 + this width;\n                lastSystemBreak = i;\n            } else {\n                currentLeft = currentRight;\n            }\n        }\n        // console.log(systemCurrentWidths);\n        // console.log(systemBreakIndexes);\n\n        let currentSystemIndex = 0;\n        let leftSubtract = 0;\n        let newLeftSubtract;\n        for (i = 0; i < this.length; i++) {\n            const m = this.get(i);\n            if (m.renderOptions === undefined) {\n                continue;\n            }\n            if (i === 0) {\n                m.renderOptions.startNewSystem = true;\n            }\n            currentLeft = m.renderOptions.left;\n\n            if (systemBreakIndexes.indexOf(i - 1) !== -1) {\n                /* first measure of new System */\n                const oldWidth = m.renderOptions.width;\n                const oldEstimate = m.estimateStaffLength() + m.renderOptions.staffPadding;\n                const offsetFromEstimate = oldWidth - oldEstimate;\n                // we look at the offset from the current estimate to see how much\n                // the staff length may have been adjusted to compensate for other\n                // parts with different lengths.\n\n                // but setting these options is bound to change something\n                m.renderOptions.displayClef = true;\n                m.renderOptions.displayKeySignature = true;\n                m.renderOptions.startNewSystem = true;\n\n                // so we get a new estimate.\n                const newEstimate = m.estimateStaffLength() + m.renderOptions.staffPadding;\n\n                // and adjust it for the change.\n                const newWidth = newEstimate + offsetFromEstimate;\n                m.renderOptions.width = newWidth;\n                leftSubtract = currentLeft - 20;\n                // after this one, we'll have a new left subtract...\n                newLeftSubtract = leftSubtract - (newWidth - oldWidth);\n\n                currentSystemIndex += 1;\n            } else if (i !== 0) {\n                m.renderOptions.startNewSystem = false;\n                m.renderOptions.displayClef = false; // check for changed clef first?\n                m.renderOptions.displayKeySignature = false; // check for changed KS first?\n            }\n            m.renderOptions.systemIndex = currentSystemIndex;\n            let currentSystemMultiplier;\n            if (currentSystemIndex >= systemCurrentWidths.length) {\n                /* last system... non-justified */\n                currentSystemMultiplier = 1;\n            } else {\n                const currentSystemWidth\n                    = systemCurrentWidths[currentSystemIndex];\n                currentSystemMultiplier = maxSystemWidth / currentSystemWidth;\n                // console.log('systemMultiplier: ' + currentSystemMultiplier + ' max: ' + maxSystemWidth + ' current: ' + currentSystemWidth);\n            }\n            /* might make a small gap? fix? */\n            const newLeft = currentLeft - leftSubtract;\n            if (newLeftSubtract !== undefined) {\n                leftSubtract = newLeftSubtract;\n                newLeftSubtract = undefined;\n            }\n            // console.log('M: ' + i + ' ; old left: ' + currentLeft + ' ; new Left: ' + newLeft);\n            m.renderOptions.left = Math.floor(\n                newLeft * currentSystemMultiplier\n            );\n            m.renderOptions.width = Math.floor(\n                m.renderOptions.width * currentSystemMultiplier\n            );\n            const newTop\n                = m.renderOptions.top\n                + currentSystemIndex * (systemHeight + systemPadding);\n            // console.log('M: ' + i + '; New top: ' + newTop + \" ; old Top: \" + m.renderOptions.top);\n            m.renderOptions.top = newTop;\n        }\n\n        return systemCurrentWidths;\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained measures\n     *\n     * @memberof music21.stream.Part\n     */\n    setSubstreamRenderOptions() {\n        let currentMeasureIndex = 0; /* 0 indexed for now */\n        let currentMeasureLeft = 20;\n        const rendOp = this.renderOptions;\n        let lastTimeSignature;\n        let lastKeySignature;\n        let lastClef;\n\n        for (const m of this.getElementsByClass('Measure')) {\n            const mRendOp = m.renderOptions;\n            mRendOp.measureIndex = currentMeasureIndex;\n            mRendOp.top = rendOp.top;\n            mRendOp.partIndex = rendOp.partIndex;\n            mRendOp.left = currentMeasureLeft;\n\n            if (currentMeasureIndex === 0) {\n                lastClef = m._clef;\n                lastTimeSignature = m._timeSignature;\n                lastKeySignature = m._keySignature;\n\n                mRendOp.displayClef = true;\n                mRendOp.displayKeySignature = true;\n                mRendOp.displayTimeSignature = true;\n            } else {\n                if (\n                    m._clef !== undefined\n                    && lastClef !== undefined\n                    && m._clef.name !== lastClef.name\n                ) {\n                    console.log(\n                        'changing clefs for ',\n                        mRendOp.measureIndex,\n                        ' from ',\n                        lastClef.name,\n                        ' to ',\n                        m._clef.name\n                    );\n                    lastClef = m._clef;\n                    mRendOp.displayClef = true;\n                } else {\n                    mRendOp.displayClef = false;\n                }\n\n                if (\n                    m._keySignature !== undefined\n                    && lastKeySignature !== undefined\n                    && m._keySignature.sharps !== lastKeySignature.sharps\n                ) {\n                    lastKeySignature = m._keySignature;\n                    mRendOp.displayKeySignature = true;\n                } else {\n                    mRendOp.displayKeySignature = false;\n                }\n\n                if (\n                    m._timeSignature !== undefined\n                    && lastTimeSignature !== undefined\n                    && m._timeSignature.ratioString\n                        !== lastTimeSignature.ratioString\n                ) {\n                    lastTimeSignature = m._timeSignature;\n                    mRendOp.displayTimeSignature = true;\n                } else {\n                    mRendOp.displayTimeSignature = false;\n                }\n            }\n            mRendOp.width\n                = m.estimateStaffLength() + mRendOp.staffPadding;\n            mRendOp.height = m.estimateStreamHeight();\n            currentMeasureLeft += mRendOp.width;\n            currentMeasureIndex += 1;\n        }\n        return this;\n    }\n\n    /**\n     * systemIndexAndScaledY - given a scaled Y, return the systemIndex\n     * and the scaledYRelativeToSystem\n     *\n     * @memberof music21.stream.Part\n     * @param  {number} y the scaled Y\n     * @return Array<int, number>   systemIndex, scaledYRelativeToSystem\n     */\n    systemIndexAndScaledY(y) {\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n        const systemIndex = Math.floor(y / (this.systemHeight + systemPadding));\n        const scaledYRelativeToSystem\n            = y - systemIndex * (this.systemHeight + systemPadding);\n        return [systemIndex, scaledYRelativeToSystem];\n    }\n\n    /**\n     * Overrides the default music21.stream.Stream#findNoteForClick\n     * by taking into account systems\n     *\n     * @memberof music21.stream.Part\n     * @param {DOMObject} svg\n     * @param {Event} e\n     * @returns {Array} [clickedDiatonicNoteNum, foundNote]\n     */\n    findNoteForClick(svg, e) {\n        const [x, y] = this.getScaledXYforDOM(svg, e);\n\n        // debug = true;\n        if (debug) {\n            console.log(\n                'this.estimateStreamHeight(): '\n                    + this.estimateStreamHeight()\n                    + ' / $(svg).height(): '\n                    + $(svg).height()\n            );\n        }\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n        const [systemIndex, scaledYRelativeToSystem] = this.systemIndexAndScaledY(y);\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(\n            scaledYRelativeToSystem\n        );\n\n        const foundNote = this.noteElementFromScaledX(\n            x,\n            undefined,\n            systemIndex\n        );\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Returns the measure that is at X location xPxScaled and system systemIndex.\n     *\n     * @memberof music21.stream.Part\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream}\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        let gotMeasure;\n        const measures = this.measures;\n        for (const m of measures) {\n            const rendOp = m.renderOptions;\n            const left = rendOp.left;\n            const right = left + rendOp.width;\n            const top = rendOp.top;\n            const bottom = top + rendOp.height;\n            if (debug) {\n                console.log(\n                    'Searching for X:'\n                        + Math.round(xPxScaled)\n                        + ' in Measure '\n                        + ' with boundaries L:'\n                        + left\n                        + ' R:'\n                        + right\n                        + ' T: '\n                        + top\n                        + ' B: '\n                        + bottom\n                );\n            }\n            if (xPxScaled >= left && xPxScaled <= right) {\n                if (systemIndex === undefined) {\n                    gotMeasure = m;\n                    break;\n                } else if (rendOp.systemIndex === systemIndex) {\n                    gotMeasure = m;\n                    break;\n                }\n            }\n        }\n        return gotMeasure;\n    }\n}\nstream.Part = Part;\n\n/**\n * Scores with multiple parts\n *\n * @class Score\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Score extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsOnly';\n        this.measureWidths = [];\n        this.partSpacing = this.renderOptions.naiveHeight;\n    }\n\n    get clef() { // TODO: remove -- this is unlike m21p\n        const c = super.clef;\n        if (c === undefined) {\n            return new clef.TrebleClef();\n        } else {\n            return c;\n        }\n    }\n    set clef(newClef) {\n        super.clef = newClef;\n    }\n\n    get systemPadding() {\n        const numParts = this.parts.length;\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            if (numParts === 1) {\n                systemPadding = this.renderOptions.naiveSystemPadding; // fix to 0\n            } else {\n                systemPadding = this.renderOptions.naiveSystemPadding;\n            }\n        }\n        return systemPadding;\n    }\n\n    /**\n     * Returns the measure that is at X location xPxScaled and system systemIndex.\n     *\n     * Always returns the measure of the top part...\n     *\n     * @memberof music21.stream.Score\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream} usually a Measure\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        const parts = this.parts;\n        return parts\n            .get(0)\n            .getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex);\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained parts\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    setSubstreamRenderOptions() {\n        let currentPartNumber = 0;\n        let currentPartTop = 0;\n        const partSpacing = this.partSpacing;\n        for (const p of this.parts) {\n            p.renderOptions.partIndex = currentPartNumber;\n            p.renderOptions.top = currentPartTop;\n            p.setSubstreamRenderOptions();\n            currentPartTop += partSpacing;\n            currentPartNumber += 1;\n        }\n        this.evenPartMeasureSpacing();\n        const ignoreNumSystems = true;\n        const currentScoreHeight = this.estimateStreamHeight(ignoreNumSystems);\n        for (const p of this.parts) {\n            p.fixSystemInformation(currentScoreHeight);\n        }\n        this.renderOptions.height = this.estimateStreamHeight();\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @memberof music21.stream.Score\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        // override\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        let maxWidth = -1;\n        for (const p of this.parts) {\n            const pWidth = p.estimateStaffLength();\n            if (pWidth > maxWidth) {\n                maxWidth = pWidth;\n            }\n        }\n        if (maxWidth > -1) {\n            return maxWidth;\n        }\n\n        // no parts found in score... use part...\n        console.log('no parts found in score');\n        const tempPart = new stream.Part();\n        tempPart.elements = this;\n        return tempPart.estimateStaffLength();\n    }\n\n    /* MIDI override */\n    /**\n     * Overrides the default music21.stream.Stream#playStream\n     *\n     * Works crappily -- just starts *n* midi players.\n     *\n     * Render scrollable score works better...\n     *\n     * @memberof music21.stream.Score\n     * @param {object} params -- passed to each part\n     * @returns {music21.stream.Score} this\n     */\n    playStream(params) {\n        // play multiple parts in parallel...\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.playStream(params);\n            }\n        }\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#stopPlayScore()\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    stopPlayStream() {\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.stopPlayStream();\n            }\n        }\n        return this;\n    }\n    /*\n     * Svg routines\n     */\n    /**\n     * call after setSubstreamRenderOptions\n     * gets the maximum measure width for each measure\n     * by getting the maximum for each measure of\n     * Part.getMeasureWidths();\n     *\n     * Does this work? I found a bug in this and fixed it that should have\n     * broken it!\n     *\n     * @memberof music21.stream.Score\n     * @returns Array<number>\n     */\n    getMaxMeasureWidths() {\n        const maxMeasureWidths = [];\n        const measureWidthsArrayOfArrays = [];\n        let i;\n        // TODO: Do not crash on not partlike...\n        for (const p of this.parts) {\n            measureWidthsArrayOfArrays.push(p.getMeasureWidths());\n        }\n        for (i = 0; i < measureWidthsArrayOfArrays[0].length; i++) {\n            let maxFound = 0;\n            for (let j = 0; j < this.length; j++) {\n                if (measureWidthsArrayOfArrays[j][i] > maxFound) {\n                    maxFound = measureWidthsArrayOfArrays[j][i];\n                }\n            }\n            maxMeasureWidths.push(maxFound);\n        }\n        // console.log(measureWidths);\n        return maxMeasureWidths;\n    }\n\n    /**\n     * systemIndexAndScaledY - given a scaled Y, return the systemIndex\n     * and the scaledYRelativeToSystem\n     *\n     * @memberof music21.stream.Score\n     * @param  {number} y the scaled Y\n     * @return Array<int, number>   systemIndex, scaledYRelativeToSystem\n     */\n    systemIndexAndScaledY(y) {\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n\n        const numParts = this.parts.length;\n        const systemHeight = numParts * this.partSpacing + this.systemPadding;\n        const systemIndex = Math.floor(y / systemHeight);\n        const scaledYRelativeToSystem = y - systemIndex * systemHeight;\n        return [systemIndex, scaledYRelativeToSystem];\n    }\n\n    /**\n     * Returns a list of [clickedDiatonicNoteNum, foundNote] for a\n     * click event, taking into account that the note will be in different\n     * Part objects (and different Systems) given the height and possibly different Systems.\n     *\n     * @memberof music21.stream.Score\n     * @param {DOMObject} svg\n     * @param {Event} e\n     * @returns {Array} [diatonicNoteNum, m21Element]\n     */\n    findNoteForClick(svg, e) {\n        const [x, y] = this.getScaledXYforDOM(svg, e);\n        const [systemIndex, scaledYFromSystemTop] = this.systemIndexAndScaledY(\n            y\n        );\n        const partIndex = Math.floor(scaledYFromSystemTop / this.partSpacing);\n        const scaledYinPart\n            = scaledYFromSystemTop - partIndex * this.partSpacing;\n        // console.log('systemIndex: ' + systemIndex + \" partIndex: \" + partIndex);\n        const rightPart = this.parts.get(partIndex);\n        if (rightPart === undefined) {\n            return [undefined, undefined]; // may be too low?\n        }\n\n        const clickedDiatonicNoteNum = rightPart.diatonicNoteNumFromScaledY(\n            scaledYinPart\n        );\n\n        const foundNote = rightPart.noteElementFromScaledX(\n            x,\n            undefined,\n            systemIndex\n        );\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * How many systems are there? Calls numSystems() on the first part.\n     *\n     * @memberof music21.stream.Score\n     * @returns {Int}\n     */\n    numSystems() {\n        return this.getElementsByClass('Part')\n            .get(0)\n            .numSystems();\n    }\n\n    /**\n     * Fixes the part measure spacing for all parts.\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    evenPartMeasureSpacing({ setLeft=true }={}) {\n        const measureStacks = [];\n        let currentPartNumber = 0;\n        const maxMeasureWidth = []; // the maximum measure width among all parts\n        let j;\n        for (const p of this.parts) {\n            const measureWidths = p.getMeasureWidths();\n            for (j = 0; j < measureWidths.length; j++) {\n                const thisMeasureWidth = measureWidths[j];\n                if (measureStacks[j] === undefined) {\n                    measureStacks[j] = [];\n                    maxMeasureWidth[j] = thisMeasureWidth;\n                } else if (thisMeasureWidth > maxMeasureWidth[j]) {\n                    maxMeasureWidth[j] = thisMeasureWidth;\n                }\n                measureStacks[j][currentPartNumber] = thisMeasureWidth;\n            }\n            currentPartNumber += 1;\n        }\n        let currentLeft = 20;\n        for (let i = 0; i < maxMeasureWidth.length; i++) {\n            const measureNewWidth = maxMeasureWidth[i];\n            for (const part of this.parts) {\n                const measure = part.getElementsByClass('Measure').get(i);\n                const rendOp = measure.renderOptions;\n                rendOp.width = measureNewWidth;\n                if (setLeft) {\n                    rendOp.left = currentLeft;\n                }\n            }\n            currentLeft += measureNewWidth;\n        }\n        return this;\n    }\n}\nstream.Score = Score;\n\n// small Class; a namedtuple in music21p\nexport class OffsetMap {\n    constructor(element, offset, endTime, voiceIndex) {\n        this.element = element;\n        this.offset = offset;\n        this.endTime = endTime;\n        this.voiceIndex = voiceIndex;\n    }\n}\nstream.OffsetMap = OffsetMap;\n","import * as $ from 'jquery';\n\nimport { chord } from '../chord.js';\nimport { clef } from '../clef.js';\nimport { duration } from '../duration.js';\nimport { key } from '../key.js';\nimport { meter } from '../meter.js';\nimport { note } from '../note.js';\nimport { pitch } from '../pitch.js';\nimport { stream } from '../stream.js';\nimport { tie } from '../tie.js';\n\nconst DEFAULTS = {\n    divisionsPerQuarter: 32 * 3 * 3 * 5 * 7,\n};\n\nfunction hyphenToCamelCase(tag) {\n    return tag.replace(/-([a-z])/g, firstLetter =>\n        firstLetter[1].toUpperCase()\n    );\n}\n\nfunction seta(m21El, xmlEl, tag, attributeName, transform) {\n    const $matchEl = $(xmlEl).children(tag);\n    if (!$matchEl) {\n        return;\n    }\n    let value = $matchEl\n        .contents()\n        .eq(0)\n        .text();\n    if (value === undefined || value === '') {\n        return;\n    }\n    if (transform !== undefined) {\n        value = transform(value);\n    }\n    if (attributeName === undefined) {\n        attributeName = hyphenToCamelCase(tag);\n    }\n    m21El[attributeName] = value;\n}\n\nexport class ScoreParser {\n    constructor() {\n        this.xmlText = undefined;\n        this.xmlUrl = undefined;\n        this.$xmlRoot = undefined;\n        this.stream = new stream.Score();\n\n        this.definesExplicitSystemBreaks = false;\n        this.definesExplicitPageBreaks = false;\n\n        this.mxScorePartDict = {};\n        this.m21PartObjectsById = {};\n        this.partGroupList = [];\n        this.parts = [];\n\n        this.musicXmlVersion = '1.0';\n    }\n\n    scoreFromUrl(url) {\n        this.xmlUrl = url;\n        return $.get(url, {}, (xmlDoc, textStatus) =>\n            this.scoreFromDOMTree(xmlDoc)\n        );\n    }\n\n    scoreFromText(xmlText) {\n        this.xmlText = xmlText;\n        const xmlDoc = $.parseXML(xmlText);\n        return this.scoreFromDOMTree(xmlDoc);\n    }\n\n    scoreFromDOMTree(xmlDoc) {\n        this.$xmlRoot = $($(xmlDoc).children('score-partwise'));\n        this.xmlRootToScore(this.$xmlRoot, this.stream);\n        return this.stream;\n    }\n\n    xmlRootToScore($mxScore, inputM21) {\n        let s = inputM21;\n        if (inputM21 === undefined) {\n            s = new stream.Score();\n        }\n        // version\n        // defaults\n        // credit\n        this.parsePartList($mxScore);\n        for (const p of $mxScore.children('part')) {\n            const $p = $(p);\n            const partId = $p.attr('id');\n            // if (partId === undefined) {\n            //     partId = //something\n            // }\n            const $mxScorePart = this.mxScorePartDict[partId];\n            const part = this.xmlPartToPart($p, $mxScorePart);\n            if (part !== undefined) {\n                // partStreams are undefined\n                s.insert(0.0, part);\n                this.m21PartObjectsById[partId] = part;\n                this.parts.push(part);\n            }\n        }\n        // partGroups;\n        // spanners;\n        // definesExplicitSystemreaks, etc.\n        // sort\n        return s;\n    }\n\n    xmlPartToPart($mxPart, $mxScorePart) {\n        const parser = new PartParser($mxPart, $mxScorePart, this);\n        parser.parse();\n        // handle partStreams\n        return parser.stream;\n    }\n\n    parsePartList($mxScore) {\n        const mxPartList = $mxScore.children('part-list');\n        if (!mxPartList) {\n            return;\n        }\n        // const openPartGroups = [];\n        for (const partListElement of mxPartList) {\n            const $partListElement = $(partListElement);\n            const partId = $partListElement.attr('id');\n            this.mxScorePartDict[partId] = $partListElement;\n        }\n        // deal with part-groups\n    }\n}\n\nexport class PartParser {\n    constructor($mxPart, $mxScorePart, parent) {\n        this.$mxPart = $mxPart;\n        this.$mxScorePart = $mxScorePart;\n        // ignore parent for now\n        if ($mxPart !== undefined) {\n            this.partId = $mxPart.attr('id');\n            // ignore empty partId for now\n        }\n        // spannerBundles\n        this.stream = new stream.Part();\n        this.atSoundingPitch = true;\n        this.staffReferenceList = [];\n\n        this.lastTimeSignature = undefined;\n        this.lastMeasureWasShort = false;\n        this.lastMeasureOffset = 0.0;\n        this.lastClefs = {\n            0: new clef.TrebleClef(),\n        };\n        this.activeTuplets = [];\n        this.activeTuplets.length = 7;\n        this.activeTuplets.fill(undefined);\n\n        this.maxStaves = 1;\n        this.lastMeasureNumber = 0;\n        this.lastNumberSuffix = undefined;\n\n        this.multiMeasureRestsToCapture = 0;\n        this.activeMultimeasureRestSpanner = undefined;\n\n        this.activeInstrument = undefined;\n        this.firstMeasureParsed = false;\n        this.$activeAttributes = undefined;\n        this.lastDivisions = DEFAULTS.divisionsPerQuarter;\n\n        this.appendToScoreAfterParse = true;\n        this.lastMeasureParser = undefined;\n    }\n\n    parse() {\n        this.parseXmlScorePart();\n        this.parseMeasures();\n        // atSoundingPitch;\n        // spannerBundles\n        // partStaves;\n        this.stream.clef = this.lastClefs[0];\n    }\n\n    parseXmlScorePart() {\n        const part = this.stream;\n        const $mxScorePart = this.$mxScorePart;\n\n        seta(part, $mxScorePart, 'part-name'); // todo -- clean string\n        // remainder of part names\n        // instruments\n    }\n\n    parseMeasures() {\n        for (const mxMeasure of this.$mxPart.children('measure')) {\n            const $mxMeasure = $(mxMeasure);\n            this.xmlMeasureToMeasure($mxMeasure);\n        }\n        if (this.lastMeasureParser !== undefined) {\n            this.lastMeasureParser.parent = undefined; // gc.\n        }\n    }\n\n    xmlMeasureToMeasure($mxMeasure) {\n        const measureParser = new MeasureParser($mxMeasure, this);\n        measureParser.parse();\n        if (this.lastMeasureParser !== undefined) {\n            this.lastMeasureParser.parent = undefined; // gc.\n        }\n        this.lastMeasureParser = measureParser;\n        // max staves\n        // transposition\n        this.firstMeasureParsed = true;\n        // staffReferenceList\n\n        const m = measureParser.stream;\n        this.setLastMeasureInfo(m);\n        // fullMeasureRests\n\n        // TODO: offsets!!!\n        // this.stream.insert(this.lastMeasureOffset, m);\n        this.stream.append(m);\n\n        this.adjustTimeAttributesFromMeasure(m);\n    }\n\n    setLastMeasureInfo(m) {\n        if (m.number !== this.lastMeasureNumber) {\n            this.lastMeasureNumber = m.number;\n            this.lastNumberSuffix = m.numberSuffix;\n        }\n\n        if (m.timeSignature !== undefined) {\n            this.lastTimeSignature = m.timeSignature;\n        } else if (this.lastTimeSignature === undefined) {\n            this.lastTimeSignature = new meter.TimeSignature('4/4');\n        }\n    }\n\n    adjustTimeAttributesFromMeasure(m) {\n        const mHighestTime = m.highestTime;\n        // ignore incomplete measures.\n        const mOffsetShift = mHighestTime;\n        this.lastMeasureOffset += mOffsetShift;\n    }\n}\n\nexport class MeasureParser {\n    constructor($mxMeasure, parent) {\n        this.$mxMeasure = $mxMeasure;\n        this.$mxMeasureElements = [];\n\n        this.divisions = undefined;\n        this.parent = parent;\n\n        this.transposition = undefined;\n        // spannerBundles\n        this.staffReference = {};\n        // activeTuplets\n        this.useVoices = false;\n        this.voicesById = {};\n        this.voiceIndices = new Set();\n        this.staves = 1;\n        this.$activeAttributes = undefined;\n        this.attributesAreInternal = true;\n        this.measureNumber = undefined;\n        this.numberSuffix = undefined;\n\n        if (parent !== undefined) {\n            this.divisions = parent.lastDivisions;\n        } else {\n            this.divisions = DEFAULTS.divisionsPerQuarter;\n        }\n\n        this.staffLayoutObjects = [];\n        this.stream = new stream.Measure();\n\n        this.$mxNoteList = [];\n        this.$mxLyricList = [];\n        this.nLast = undefined;\n        this.chordVoice = undefined;\n        this.fullMeasureRest = false;\n        this.restAndNoteCount = {\n            rest: 0,\n            note: 0,\n        };\n        this.lastClefs = {\n            0: undefined,\n        };\n        this.parseIndex = 0;\n        this.offsetMeasureNote = 0.0;\n\n        // class attributes in m21p\n        this.attributeTagsToMethods = {\n            time: 'handleTimeSignature',\n            clef: 'handleClef',\n            key: 'handleKeySignature',\n            // 'staff-details': 'handleStaffDetails',\n            // 'measure-style': 'handleMeasureStyle',\n        };\n        this.musicDataMethods = {\n            note: 'xmlToNote',\n            // 'backup': 'xmlBackup',\n            // 'forward': 'xmlForward',\n            // 'direction': 'xmlDirection',\n            attributes: 'parseAttributesTag',\n            // 'harmony': 'xmlHarmony',\n            // 'figured-bass': undefined,\n            // 'sound': undefined,\n            // 'barline': 'xmlBarline',\n            // 'grouping': undefined,\n            // 'link': undefined,\n            // 'bookmark': undefined,\n\n            // Note: <print> is handled separately...\n        };\n    }\n\n    parse() {\n        // mxPrint\n        this.parseMeasureAttributes();\n        // updateVoiceInformation;\n\n        const children = this.$mxMeasure.children();\n        this.$mxMeasureElements = [];\n        for (const c of children) {\n            const $c = $(c);\n            this.$mxMeasureElements.push($c);\n        }\n\n        let i = 0;\n        for (const $mxObj of this.$mxMeasureElements) {\n            const tag = $mxObj[0].tagName;\n            this.parseIndex = i;\n            const methName = this.musicDataMethods[tag];\n            if (methName !== undefined) {\n                this[methName]($mxObj);\n            }\n            i += 1;\n        }\n        // useVoices\n        // fullMeasureRest\n    }\n\n    insertInMeasureOrVoice($mxObj, el) {\n        // TODO: offsets!\n        // this.stream.insert(this.offsetMeasureNote, el);\n        this.stream.append(el);\n    }\n\n    xmlToNote($mxNote) {\n        let nextNoteIsChord = false;\n        const $mxObjNext = this.$mxMeasureElements[this.parseIndex + 1];\n        if ($mxObjNext !== undefined) {\n            if (\n                $mxObjNext[0].tagName === 'note'\n                && $mxObjNext.children('chord').length > 0\n            ) {\n                nextNoteIsChord = true;\n            }\n        }\n        let isChord = false;\n        let isRest = false;\n\n        let offsetIncrement = 0.0;\n        if ($mxNote.children('rest').length > 0) {\n            isRest = true;\n        }\n        if ($mxNote.children('chord').length > 0) {\n            isChord = true;\n        }\n        if (nextNoteIsChord) {\n            isChord = true;\n        }\n\n        let n;\n\n        if (isChord) {\n            this.$mxNoteList.push($mxNote);\n            this.$mxLyricList.push(...$mxNote.children('lyric'));\n        } else if (!isChord && !isRest) {\n            // normal note\n            this.restAndNoteCount.note += 1;\n            n = this.xmlToSimpleNote($mxNote);\n        } else {\n            this.restAndNoteCount.rest += 1;\n            n = this.xmlToRest($mxNote);\n        }\n\n        if (!isChord) {\n            this.updateLyricsFromList(n, $mxNote.children('lyric'));\n            // add to staffReference\n            this.insertInMeasureOrVoice($mxNote, n);\n            offsetIncrement = n.duration.quarterLength;\n            this.nLast = n;\n        }\n\n        if (this.$mxNoteList.length && !nextNoteIsChord) {\n            const c = this.xmlToChord(this.$mxNoteList);\n            this.updateLyricsFromList(c, this.$mxLyricList);\n            // addToStaffRest;\n\n            // voices;\n            this.insertInMeasureOrVoice($mxNote, c);\n\n            this.$mxNoteList = [];\n            this.$mxLyricList = [];\n            offsetIncrement = c.duration.quarterLength;\n            this.nLast = c;\n        }\n\n        this.offsetMeasureNote += offsetIncrement;\n    }\n\n    xmlToChord($mxNoteList) {\n        const notes = [];\n        for (const $mxNote of $mxNoteList) {\n            const freeSpanners = false;\n            notes.push(this.xmlToSimpleNote($mxNote, freeSpanners));\n        }\n        const c = new chord.Chord(notes);\n        // move beams from first note;\n        // move articulations;\n        // move expressions;\n        // move spanners;\n\n        return c;\n    }\n\n    xmlToSimpleNote($mxNote, freeSpanners) {\n        const n = new note.Note();\n        this.xmlToPitch($mxNote, n.pitch);\n        // beams;\n        // stems;\n        // noteheads\n        return this.xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners);\n    }\n\n    // xmlToBeam\n    // xmlToBeams\n    // xmlNotehead\n\n    xmlToPitch($mxNote, inputM21) {\n        let p = inputM21;\n        if (inputM21 === undefined) {\n            p = new pitch.Pitch();\n        }\n\n        let $mxPitch;\n        if ($mxNote[0].tagName === 'pitch') {\n            $mxPitch = $mxNote;\n        } else {\n            $mxPitch = $($mxNote.children('pitch')[0]);\n            if ($mxPitch.length === 0) {\n                // whoops!\n                return p;\n            }\n        }\n\n        seta(p, $mxPitch, 'step');\n        seta(p, $mxPitch, 'octave', undefined, parseInt);\n        const $mxAlter = $mxPitch.children('alter');\n        let accAlter;\n        if ($mxAlter.length) {\n            accAlter = parseFloat($mxAlter.text().trim());\n        }\n\n        const $mxAccidental = $mxNote.children('accidental');\n        // dropping support for musescore 0.9 errors...\n        if ($mxAccidental.length) {\n            const accObj = this.xmlToAccidental($mxAccidental);\n            p.accidental = accObj;\n            p.accidental.displayStatus = true;\n            // independent accidental from alter\n        } else if (accAlter !== undefined && !isNaN(accAlter)) {\n            p.accidental = new pitch.Accidental(accAlter);\n            p.accidental.displayStatus = false;\n        }\n        return p;\n    }\n\n    xmlToAccidental($mxAccidental) {\n        const acc = new pitch.Accidental();\n        // to-do m21/musicxml accidental name differences;\n        let name = $($mxAccidental[0])\n            .text()\n            .trim()\n            .toLowerCase();\n        if (name === 'flat-flat') {\n            name = 'double-flat';\n        }\n\n        acc.set(name);\n\n        // set print style\n        // parentheses\n        // bracket\n        // editorial\n        return acc;\n    }\n\n    xmlToRest($mxRest) {\n        const r = new note.Rest();\n        // full measure rest\n        // apply multimeasure rest\n        // display-step, octave, etc.\n        return this.xmlNoteToGeneralNoteHelper(r, $mxRest);\n    }\n\n    xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners) {\n        if (freeSpanners === undefined) {\n            freeSpanners = true;\n        }\n        // spanners\n        // setPrintStyle\n        // print-object\n        // dynamics\n        // pizzacato\n        // grace\n        this.xmlToDuration($mxNote, n.duration);\n        // type styles\n        // color\n        // position\n        if ($mxNote.children('tie').length > 0) {\n            n.tie = this.xmlToTie($mxNote);\n        }\n        // grace\n        // notations\n        // editorial\n        return n;\n    }\n\n    xmlToDuration($mxNote, inputM21) {\n        let d = inputM21;\n        if (inputM21 === undefined) {\n            d = new duration.Duration();\n        }\n        const divisions = this.divisions;\n        const mxDuration = $mxNote.children('duration')[0];\n        let qLen = 0.0;\n\n        if (mxDuration) {\n            const noteDivisions = parseFloat(\n                $(mxDuration)\n                    .text()\n                    .trim()\n            );\n            qLen = noteDivisions / divisions;\n        }\n\n        const mxType = $mxNote.children('type')[0];\n        if (mxType) {\n            // long vs longa todo\n            const durationType = $(mxType)\n                .text()\n                .trim();\n            const numDots = $mxNote.children('dot').length;\n            // tuplets!!!! big to-do!\n            d.type = durationType;\n            d.dots = numDots;\n        } else {\n            d.quarterLength = qLen;\n        }\n\n        return d;\n    }\n\n    // xmlGraceToGrace\n    // xmlNotations\n    // xmlTechnicalToArticulation\n    // setHarmonic\n    // handleFingering\n    // xmlToArticulation\n    // xmlOrnamentToExpression\n    // xmlDirectionTypeToSpanners\n    // xmlNotationsToSpanners\n    // xmlToTremolo\n    // xmlOneSpanner\n\n    xmlToTie($mxNote) {\n        const t = new tie.Tie();\n        const allTies = $mxNote.children('tie');\n        if (allTies.length > 1) {\n            t.type = 'continue';\n        } else {\n            const $t0 = $(allTies[0]);\n            t.type = $t0.attr('type');\n        }\n        // style\n        return t;\n    }\n\n    // xmlToTuplets\n    updateLyricsFromList(n, lyricList) {\n        let currentLyricNumber = 1;\n        for (const mxLyric of lyricList) {\n            const lyricObj = this.xmlToLyric($(mxLyric));\n            if (lyricObj === undefined) {\n                continue;\n            }\n            if (lyricObj.number === 0) {\n                lyricObj.number = currentLyricNumber;\n            }\n            n.lyrics.push(lyricObj);\n            currentLyricNumber += 1;\n        }\n    }\n\n    xmlToLyric($mxLyric, inputM21) {\n        let l = inputM21;\n        if (inputM21 === undefined) {\n            l = new note.Lyric();\n        }\n        try {\n            l.text = $mxLyric.children('text').text().trim();\n        } catch (exc) {\n            return undefined; // sometimes there are empty lyrics.\n        }\n        let number = $mxLyric.attr('number');\n        try {\n            number = parseInt(number);\n            l.number = number;\n        } catch (exc) {\n            l.number = 0;\n            if (number !== undefined) {\n                l.identifier = number;\n            }\n        }\n        const identifier = $mxLyric.get('name');\n        if (identifier !== undefined) {\n            l.identifier = identifier;\n        }\n\n        const $mxSyllabic = $mxLyric.children('syllabic');\n        if ($mxSyllabic.length) {\n            l.syllabic = $mxSyllabic.text().trim();\n        }\n        // setStyleAttributes\n        // setColor\n        // setPosition\n        if (inputM21 === undefined) {\n            return l;\n        }\n        return undefined;\n    }\n\n\n    insertIntoMeasureOrVoice($mxElement, el) {\n        this.stream.insert(this.offsetMeasureNote, el);\n    }\n\n    parseMeasureAttributes() {\n        this.parseMeasureNumbers();\n        // width;\n    }\n\n    parseMeasureNumbers() {\n        const mNumRaw = this.$mxMeasure.attr('number');\n        const mNum = parseInt(mNumRaw); // no suffixes...\n        this.stream.number = mNum;\n        if (this.parent) {\n            this.parent.lastMeasureNumber = mNum;\n        }\n        this.measureNumber = mNum;\n    }\n\n    parseAttributesTag($mxAttributes) {\n        this.attributesAreInternal = false;\n        this.$activeAttributes = $mxAttributes;\n        for (const mxSub of $mxAttributes.children()) {\n            const tag = mxSub.tagName;\n            const $mxSub = $(mxSub);\n            const methName = this.attributeTagsToMethods[tag];\n            if (methName !== undefined) {\n                this[methName]($mxSub);\n            } else if (tag === 'staves') {\n                this.staves = parseInt($mxSub.text());\n            } else if (tag === 'divisions') {\n                this.divisions = parseFloat($mxSub.text());\n            }\n            // transpose;\n        }\n        if (this.parent !== undefined) {\n            this.parent.lastDivisions = this.divisions;\n            this.parent.$activeAttributes = this.$activeAttributes;\n        }\n    }\n    // xmlTransposeToInterval\n\n    handleTimeSignature($mxTime) {\n        const ts = this.xmlToTimeSignature($mxTime);\n        this.insertIntoMeasureOrVoice($mxTime, ts);\n    }\n\n    xmlToTimeSignature($mxTime) {\n        // senza-misura\n        // simple time signature only;\n        const numerator = $($mxTime.children('beats')[0])\n            .text()\n            .trim();\n        const denominator = $($mxTime.children('beat-type')[0])\n            .text()\n            .trim();\n        return new meter.TimeSignature(numerator + '/' + denominator);\n        // symbol\n    }\n\n    handleClef($mxClef) {\n        const clefObj = this.xmlToClef($mxClef);\n        this.stream.clef = clefObj;\n        this.insertIntoMeasureOrVoice($mxClef, clefObj);\n        this.lastClefs[0] = clefObj;\n//        if (this.parent !== undefined) {\n//            this.parent.lastClefs[0] = clefObj.clone(true);\n//        }\n    }\n\n    xmlToClef($mxClef) {\n        const sign = $($mxClef.children('sign')[0])\n            .text()\n            .trim();\n        // TODO: percussion, etc.\n        const line = $($mxClef.children('line')[0])\n            .text()\n            .trim();\n\n        let clefOctaveChange = 0;\n        const $coc = $mxClef.children('clef-octave-change');\n        if ($coc.length > 0) {\n            clefOctaveChange = parseInt(\n                $($coc[0])\n                    .text()\n                    .trim()\n            );\n        }\n        return clef.clefFromString(sign + line, clefOctaveChange);\n    }\n\n    handleKeySignature($mxKey) {\n        const keySig = this.xmlToKeySignature($mxKey);\n        this.insertIntoMeasureOrVoice($mxKey, keySig);\n    }\n\n    xmlToKeySignature($mxKey) {\n        const ks = new key.KeySignature();\n        seta(ks, $mxKey, 'fifths', 'sharps', parseInt);\n        // mode!\n        // non-standard and key-octaves\n        ks._alteredPitchesCache = undefined; // TODO: remove private access...\n        return ks;\n    }\n}\n\nconst musicxml = {\n    ScoreParser,\n    PartParser,\n    MeasureParser,\n};\n\nexport default musicxml;\n","import { ScoreParser as MusicXMLScoreParser } from './musicxml/xmlToM21.js';\n\nexport function parse(txt) {\n    const sp = new MusicXMLScoreParser();\n    return sp.scoreFromText(txt);\n}\n","// not working properly...\n\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = new Error(message).stack;\n        }\n    }\n}\n\nexport class Music21Exception extends ExtendableError {}\n\nexport class StreamException extends Music21Exception {}\n","export const debug = false;\n","/**\n * common functions\n *\n * @exports music21/common\n */\n/**\n * functions that are useful everywhere...\n *\n * @namespace music21.common\n * @memberof music21\n */\nexport const common = {};\n\n/**\n * concept borrowed from Vex.Flow.Merge, though here the source can be undefined;\n * http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\n * recursive parts used in .clone()\n *\n * @function music21.common.merge\n * @param {object} destination - object to have attributes placed into\n * @param {object} source - object to take attributes from.\n * @memberof music21.common\n * @returns {object} destination\n */\ncommon.merge = function mergeRecursive(destination, source) {\n    if (source === undefined || source === null) {\n        return destination;\n    }\n    for (const p in source) {\n        if (!{}.hasOwnProperty.call(source, p)) {\n            continue;\n        }\n        try {\n            // Property in destination object set; update its value.\n            if (source[p] && source[p].constructor === Object) {\n                destination[p] = mergeRecursive(destination[p], source[p]);\n            } else {\n                destination[p] = source[p];\n            }\n        } catch (e) {\n            // Property in destination object not set; create it and set its value.\n            destination[p] = source[p];\n        }\n    }\n    return destination;\n};\n\ncommon.range = function common_range(start, stop, step) {\n    if (step === undefined) {\n        step = 1;\n    }\n    if (stop === undefined) {\n        stop = start;\n        start = 0;\n    }\n\n    const count = Math.ceil((stop - start) / step);\n    return Array.apply(0, Array(count)).map((e, i) => i * step + start);\n};\n\n/**\n * Mix in another class into this class -- a simple form of multiple inheritance.\n * See articulations.Marcato for an example.\n *\n */\ncommon.mixin = function common_mixin(OtherParent, thisClassOrObject) {\n    let proto = Object.getPrototypeOf(OtherParent);\n    const classProto = Object.getPrototypeOf(thisClassOrObject);\n\n    while (proto) {\n        for (const key in Object.keys(proto)) {\n            if (!{}.hasOwnProperty.call(proto, key)) {\n                continue;\n            }\n            if (!(key in classProto)) {\n                classProto[key] = proto[key];\n            }\n        }\n        proto = Object.getPrototypeOf(proto);\n    }\n};\n\n/**\n * Aggregation -- closer to true multiple inheritance -- prefers last class's functions.  See\n * https://stackoverflow.com/questions/29879267/es6-class-multiple-inheritance\n *\n *  not currently used...\n */\n\ncommon.aggregation = (baseClass, ...mixins) => {\n    class base extends baseClass {\n        constructor(...args) {\n            super(...args);\n            mixins.forEach(mixin => {\n                copyProps(this, new mixin());\n            });\n        }\n    }\n    let copyProps = (target, source) => {\n        // this function copies all properties and symbols, filtering out some special ones\n        Object.getOwnPropertyNames(source)\n            .concat(Object.getOwnPropertySymbols(source))\n            .forEach(prop => {\n                if (\n                    !prop.match(\n                        /^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n                    )\n                ) {\n                    Object.defineProperty(\n                        target,\n                        prop,\n                        Object.getOwnPropertyDescriptor(source, prop)\n                    );\n                }\n            });\n    };\n    mixins.forEach(mixin => {\n        // outside contructor() to allow aggregation(A,B,C).staticFunction() to be called etc.\n        copyProps(base.prototype, mixin.prototype);\n        copyProps(base, mixin);\n    });\n    return base;\n};\n\n/**\n * posMod - return a modulo value that is not negative\n *\n * @param  {Int} a value\n * @param  {Int} b modulo\n * @return {Int}   a mod b between 0 and b - 1\n */\n\ncommon.posMod = function posMod(a, b) {\n    if (a === undefined || b === undefined) {\n        throw new Error('Modulo needs two numbers');\n    }\n    return (a % b + b) % b;\n};\n\n/**\n *\n * Returns the statistical mode (most commonly appearing element)\n * in a.\n *\n * In case of tie, returns the first element to reach the maximum\n * number of occurrences.\n *\n * @function music21.common.statisticalMode\n * @param {Array} a - an array to analyze\n * @returns {object} element with the highest frequency in a\n */\ncommon.statisticalMode = function statisticalMode(a) {\n    if (a.length === 0) {\n        return null;\n    }\n    const modeMap = {};\n    let maxEl = a[0];\n    let maxCount = 1;\n    for (let i = 0; i < a.length; i++) {\n        const el = a[i];\n        if (modeMap[el] == null) {\n            modeMap[el] = 0;\n        }\n        modeMap[el] += 1;\n        if (modeMap[el] > maxCount) {\n            maxEl = el;\n            maxCount = modeMap[el];\n        }\n    }\n    return maxEl;\n};\n\n/**\n * fromRoman - Convert a Roman numeral (upper or lower) to an int.\n *\n * @param  {string} num roman numeral representation of a number\n * @return {Int}     integer value of roman numeral;\n */\n\ncommon.fromRoman = function fromRoman(num) {\n    const inputRoman = num.toUpperCase();\n    const subtractionValues = [1, 10, 100];\n    const nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I'];\n    const ints = [1000, 500, 100, 50, 10, 5, 1];\n    const places = [];\n    for (const c of inputRoman) {\n        if (!nums.includes(c)) {\n            throw new Error(\n                'Value is not a valid roman numeral: ' + inputRoman\n            );\n        }\n    }\n    for (let i = 0; i < inputRoman.length; i++) {\n        const c = inputRoman[i];\n        let value = ints[nums.indexOf(c)];\n        if (i < inputRoman.length - 1) {\n            const nextValue = ints[nums.indexOf(inputRoman[i + 1])];\n            if (nextValue > value && subtractionValues.includes(value)) {\n                value *= -1;\n            }\n        }\n        places.push(value);\n    }\n    let summation = 0;\n    for (const n of places) {\n        summation += n;\n    }\n    return summation;\n};\n\n/**\n * toRoman - Convert a number from 1 to 3999 to a roman numeral\n *\n * @param  {Int} num number to convert\n * @return {string}     as roman numeral\n */\n\ncommon.toRoman = function toRoman(num) {\n    if (typeof num !== 'number') {\n        throw new Error('expected integer, got ' + typeof num);\n    }\n    if (num < 0 || num > 4000) {\n        throw new Error('Argument must be between 1 and 3999');\n    }\n    const ints = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const nums = [\n        'M',\n        'CM',\n        'D',\n        'CD',\n        'C',\n        'XC',\n        'L',\n        'XL',\n        'X',\n        'IX',\n        'V',\n        'IV',\n        'I',\n    ];\n    let result = '';\n    for (let i = 0; i < ints.length; i++) {\n        const count = Math.floor(num / ints[i]);\n        result += nums[i].repeat(count);\n        num -= ints[i] * count;\n    }\n    return result;\n};\n\n/**\n * Creates a DOMObject of an SVG figure using the correct `document.createElementNS` call.\n *\n * @function music21.common.makeSVGright\n * @param {string} [tag='svg'] - a tag, such as 'rect', 'circle', 'text', or 'svg'\n * @param {object} [attrs] - attributes to pass to the tag.\n * @memberof music21.common\n * @returns {DOMObject}\n */\ncommon.makeSVGright = function makeSVGright(tag='svg', attrs) {\n    // see http://stackoverflow.com/questions/3642035/jquerys-append-not-working-with-svg-element\n    // normal JQuery does not work.\n    if (attrs === undefined) {\n        attrs = {};\n    }\n\n    const el = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (const k in attrs) {\n        if (!{}.hasOwnProperty.call(attrs, k)) {\n            continue;\n        }\n        el.setAttribute(k, attrs[k]);\n    }\n    return el;\n};\n\n/**\n * Take a number such as 32 and return a string such as \"nd\"\n * (for \"32nd\") etc.\n *\n * @function music21.common.ordinalAbbreviation\n * @param {Int} value\n * @param {Boolean} [plural=false] - make plural (note that \"21st\" plural is \"21st\")\n * @return {string}\n */\ncommon.ordinalAbbreviation = function ordinalAbbreviation(value, plural) {\n    let post = '';\n    const valueHundreths = value % 100;\n    if (\n        valueHundreths === 11\n        || valueHundreths === 12\n        || valueHundreths === 13\n    ) {\n        post = 'th';\n    } else {\n        const valueMod = value % 10;\n        if (valueMod === 1) {\n            post = 'st';\n        } else if (valueMod === 2) {\n            post = 'nd';\n        } else if (valueMod === 3) {\n            post = 'rd';\n        } else {\n            post = 'th';\n        }\n    }\n    if (post !== 'st' && plural) {\n        post += 's';\n    }\n    return post;\n};\n\n/**\n * Find a rational number approximation of this floating point.\n *\n * @function music21.common.rationalize\n * @param {number} ql - number to rationalize\n * @param {number} [epsilon=0.001] - how close to get\n * @param {Int} [maxDenominator=50] - maximum denominator\n * @returns {object|undefined} {'numerator: numerator, 'denominator': denominator}\n */\ncommon.rationalize = function rationalize(ql, epsilon, maxDenominator) {\n    epsilon = epsilon || 0.001;\n    maxDenominator = maxDenominator || 50;\n\n    for (let i = 2; i < maxDenominator; i++) {\n        if (Math.abs(ql * i - Math.round(ql * i)) < epsilon) {\n            const numerator = Math.round(ql * i);\n            const denominator = i;\n            return { numerator, denominator };\n        }\n    }\n    return undefined;\n};\n\n/**\n * Change something that could be a string or number and might\n * end with \"px\" to a number.\n *\n * \"400px\" -> 400\n *\n * @function music21.common.stripPx\n * @param {Int|string} str -- string that might have 'px' at the end or not\n * @returns {Int} a number to use\n */\ncommon.stripPx = function stripPx(str) {\n    if (typeof str === 'string') {\n        const pxIndex = str.indexOf('px');\n        str = str.slice(0, pxIndex);\n        return parseInt(str);\n    } else {\n        return str;\n    }\n};\n\n/**\n * Find name in the query string (?name=value) and return value.\n *\n * @function music21.common.urlParam\n * @param {string} name - url parameter to find\n * @returns {string} may be \"\" if empty.\n */\ncommon.urlParam = function urlParam(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(location.search);\n    return results == null\n        ? ''\n        : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\ncommon.arrayEquals = function arrayEquals(a1, a2) {\n    if (a1.length !== a2.length) {\n        return false;\n    }\n    for (let i = 0; i < a1.length; i++) {\n        if (a1[i] instanceof Array && a2[i] instanceof Array) {\n            if (!arrayEquals(a1[i], a2[i])) {\n                return false;\n            }\n        } else if (a1[i] !== a2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n\nconst _singletonCounter = {};\n_singletonCounter.value = 0;\n\nexport class SingletonCounter {\n    call() {\n        const post = _singletonCounter.value;\n        _singletonCounter.value += 1;\n        return post;\n    }\n}\ncommon.SingletonCounter = SingletonCounter;\n\n/**\n * runs a callback with either \"visible\" or \"hidden\" as the argument anytime the\n * window or document state changes.\n *\n * Depending on the browser, may be called multiple times with the same argument\n * for a single event.  For instance, Safari calls once on losing focus completely\n * but twice for a tab change.\n *\n * @function music21.common.setWindowVisibilityWatcher\n * @param {function} callback\n */\ncommon.setWindowVisibilityWatcher = function setWindowVisibilityWatcher(\n    callback\n) {\n    let hidden = 'hidden';\n\n    // Standards:\n    if (hidden in document) {\n        document.addEventListener('visibilitychange', windowFocusChanged);\n    } else if ('mozHidden' in document) {\n        hidden = 'mozHidden';\n        document.addEventListener('mozvisibilitychange', windowFocusChanged);\n    } else if ('webkitHidden' in document) {\n        hidden = 'webkitHidden';\n        document.addEventListener('webkitvisibilitychange', windowFocusChanged);\n    } else if ('msHidden' in document) {\n        hidden = 'msHidden';\n        document.addEventListener('msvisibilitychange', windowFocusChanged);\n    } else if ('onfocusin' in document) {\n        // IE 9 and lower:\n        document.onfocusin = document.onfocusout = windowFocusChanged;\n    }\n\n    // Also catch window... -- get two calls for a tab shift, but one for window losing focus\n    window.onpageshow = window.onpagehide = window.onfocus = window.onblur = windowFocusChanged;\n\n    function windowFocusChanged(evt) {\n        const v = 'visible';\n        const h = 'hidden';\n        const evtMap = {\n            focus: v,\n            focusin: v,\n            pageshow: v,\n            blur: h,\n            focusout: h,\n            pagehide: h,\n        };\n\n        evt = evt || window.event;\n        let callbackState = '';\n        if (evt.type in evtMap) {\n            callbackState = evtMap[evt.type];\n        } else {\n            callbackState = this[hidden] ? 'hidden' : 'visible';\n        }\n        callback(callbackState, evt);\n    }\n    // set the initial state\n    const initialState\n        = document.visibilityState === 'visible' ? 'focus' : 'blur';\n    const initialStateEvent = { type: initialState };\n    windowFocusChanged(initialStateEvent);\n};\n\ncommon.urls = {\n    css: '/css',\n    webResources: '/webResources',\n    midiPlayer: '/webResources/midiPlayer',\n    soundfontUrl: '/src/ext/soundfonts/FluidR3_GM/',\n};\n\ncommon.hyphenToCamelCase = function hyphenToCamelCase(usrStr) {\n    return usrStr.replace(/-([a-zA-Z])/, (all, match) => match.toUpperCase());\n};\n\ncommon.numToIntOrFloat = function numToIntOrFloat(value) {\n    const intVal = Math.round(value);\n    if (Math.abs(value - intVal) < 0.000001) {\n        return intVal;\n    } else {\n        return value;\n    }\n};\n\nexport default common;\n","/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit. See the {@link music21.prebase} namespace.\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n *\n * @exports music21/prebase\n */\n/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit\n *\n * @namespace music21.prebase\n * @memberof music21\n */\nexport const prebase = {};\n/**\n * Class for pseudo-m21 objects to inherit from. The most important attributes that nearly\n * everything in music21 should inherit from are given below.\n *\n * @class ProtoM21Object\n * @memberof music21.prebase\n * @property {Array<string>} classes - An Array of strings of classes that the object belongs to (default ['ProtoM21Object'])\n * @property {Boolean} isProtoM21Object - Does this object descend from {@link music21.prebase.ProtoM21Object}: obviously true.\n * @property {Boolean} isMusic21Object - Does this object descend from {@link music21.base.Music21Object}; default false.\n */\nexport class ProtoM21Object {\n    constructor() {\n        this._storedClasses = undefined;\n        this.isProtoM21Object = true;\n        this.isMusic21Object = false;\n        this._cloneCallbacks = {};\n    }\n\n    get classes() {\n        if (this._storedClasses !== undefined) {\n            return this._storedClasses;\n        }\n        const classList = [];\n        let thisConstructor = this.constructor;\n        let maxLinks = 20;\n        while (\n            thisConstructor !== null\n            && thisConstructor !== undefined\n            && maxLinks\n        ) {\n            maxLinks -= 1;\n            if (thisConstructor.name === '') {\n                break;\n            }\n            classList.push(thisConstructor.name);\n            thisConstructor = Object.getPrototypeOf(thisConstructor);\n        }\n        classList.push('object');\n        this._storedClasses = classList;\n        return classList;\n    }\n\n    /**\n     * Makes (as much as possible) a complete duplicate copy of the object called with .clone()\n     *\n     * Works similarly to Python's copy.deepcopy().\n     *\n     * Every ProtoM21Object has a `._cloneCallbacks` object which maps `{attribute: callbackFunction}`\n     * to handle custom clone cases.  See, for instance, {@link music21.base.Music21Object} which\n     * uses a custom callback to NOT clone the `.activeSite` attribute.\n     *\n     * @returns {object}\n     * @memberof music21.prebase.ProtoM21Object\n     * @example\n     * var n1 = new music21.note.Note(\"C#\");\n     * n1.duration.quarterLength = 4;\n     * var n2 = n1.clone();\n     * n2.duration.quarterLength == 4; // true\n     * n2 === n1; // false\n     */\n    clone(deep=true, memo) {\n        if (!deep) {\n            return Object.assign(\n                Object.create(Object.getPrototypeOf(this)),\n                this\n            );\n        }\n\n        const ret = new this.constructor();\n        if (memo === undefined) {\n            memo = new WeakMap();\n        }\n        \n        // todo: do Arrays work?\n        for (const key in this) {\n            // not that we ONLY copy the keys in Ret -- it's easier that way.\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else {\n                    // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof this[key] === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (\n                typeof this[key] === 'object'\n                && this[key] !== null\n                && this[key].isProtoM21Object\n            ) {\n                // console.log('cloning ', key);\n                const m21Obj = this[key];\n                let clonedVersion;\n                if (memo.has(m21Obj)) {\n                    clonedVersion = memo.get(m21Obj);\n                } else {\n                    clonedVersion = this[key].clone(deep, memo);\n                }\n                ret[key] = clonedVersion;\n            } else {\n                try {\n                    ret[key] = this[key];\n                    // music21.common.merge(ret[key], this[key]); // not really necessary?\n                } catch (e) {\n                    if (e instanceof TypeError) {\n                        console.log('typeError:', e, key);\n                        // do nothing\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Check to see if an object is of this class or subclass.\n     *\n     * @memberof music21.prebase.ProtoM21Object\n     * @param {(string|string[])} testClass - a class or Array of classes to test\n     * @returns {Boolean}\n     * @example\n     * var n = new music21.note.Note();\n     * n.isClassOrSubclass('Note'); // true\n     * n.isClassOrSubclass('Music21Object'); // true\n     * n.isClassOrSubclass(['Duration', 'NotRest']); // true // NotRest\n     */\n    isClassOrSubclass(testClass) {\n        if (testClass instanceof Array === false) {\n            testClass = [testClass];\n        }\n        for (let i = 0; i < testClass.length; i++) {\n            if (this.classes.includes(testClass[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nprebase.ProtoM21Object = ProtoM21Object;\n","export class Derivation {\n    constructor(client) {\n        this.client = client;\n        this.method = undefined;\n        this.origin = undefined;\n    }\n\n    clone() {\n        const newThing = new Derivation();\n        newThing.client = this.client;\n        newThing.origin = this.origin;\n    }\n\n    * chain() {\n        let origin = this.origin;\n        while (origin !== undefined) {\n            yield origin;\n            origin = origin.derivation.origin;\n        }\n    }\n\n    rootDerivation() {\n        const derivationChain = Array.from(this.chain());\n        if (derivationChain.length) {\n            return derivationChain[derivationChain.length - 1];\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport default Derivation;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/duration -- duration routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { prebase } from './prebase.js';\n/**\n * Duration module. See {@link music21.duration}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @exports music21/duration\n */\n/**\n * Module that holds **music21** classes and\n * tools for dealing with durations, especially\n * the {@link music21.duration.Duration} class.\n *\n * @namespace music21.duration\n * @memberof music21\n */\nexport const duration = {};\n\n/**\n * Object mapping int to name, as in `{1: 'whole'}` etc.\n *\n * @memberof music21.duration\n * @type {object}\n */\nduration.typeFromNumDict = {\n    1: 'whole',\n    2: 'half',\n    4: 'quarter',\n    8: 'eighth',\n    16: '16th',\n    32: '32nd',\n    64: '64th',\n    128: '128th',\n    256: '256th',\n    512: '512th',\n    1024: '1024th',\n    0: 'zero',\n    '0.5': 'breve',\n    '0.25': 'longa',\n    '0.125': 'maxima',\n    '0.0625': 'duplex-maxima',\n};\nduration.quarterTypeIndex = 6; // where is quarter in the following array.\nduration.ordinalTypeFromNum = [\n    'duplex-maxima',\n    'maxima',\n    'longa',\n    'breve',\n    'whole',\n    'half',\n    'quarter',\n    'eighth',\n    '16th',\n    '32nd',\n    '64th',\n    '128th',\n    '256th',\n    '512th',\n    '1024th',\n];\nduration.vexflowDurationArray = [\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    'w',\n    'h',\n    'q',\n    '8',\n    '16',\n    '32',\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n];\n\n/**\n * Duration object; found as the `.duration` attribute on {@link music21.base.Music21Object} instances\n * such as {@link music21.note.Note}\n *\n * @class Duration\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {(number|undefined)} ql - quarterLength (default 1.0)\n */\nexport class Duration extends prebase.ProtoM21Object {\n    constructor(ql) {\n        super();\n        this._quarterLength = 0.0;\n        this._dots = 0;\n        this._durationNumber = undefined;\n        this._type = 'zero';\n        this._tuplets = [];\n        if (typeof ql === 'string') {\n            this.type = ql;\n        } else if (ql !== undefined) {\n            this.quarterLength = ql;\n        }\n        this._cloneCallbacks._tuplets = this.cloneCallbacksTupletFunction;\n    }\n    /**\n     * Read or sets the number of dots on the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type Number\n     * @instance\n     * @default 0\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.dots === 0; // true\n     * d.dots = 1;\n     * d.quarterLength == 3; // true;\n     */\n    get dots() {\n        return this._dots;\n    }\n    set dots(numDots) {\n        this._dots = numDots;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Read or sets the quarterLength of the Duration\n     *\n     * Updates the type, dots, tuplets(?)\n     *\n     * @type Number\n     * @instance\n     * @default 1.0\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.quarterLength == 2.0; // true;\n     * d.quarterLength = 1.75;\n     * d.dots == 2; // true\n     * d.type == 'quarter'; // true\n     */\n    get quarterLength() {\n        return this._quarterLength;\n    }\n    set quarterLength(ql) {\n        if (ql === undefined) {\n            ql = 1.0;\n        }\n        this._quarterLength = ql;\n        this.updateFeaturesFromQl();\n    }\n    /**\n     * Read or sets the type of the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type String\n     * @instance\n     * @default 'quarter'\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.type == 'half; // true\n     * d.type = 'breve';\n     * d.quarterLength == 8.0; // true\n     * d.dots = 1;\n     * d.type = 'quarter'; // will not change dots\n     * d.quarterLength == 1.5; // true\n     */\n    get type() {\n        return this._type;\n    }\n    set type(typeIn) {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(typeIn);\n        if (typeNumber === -1) {\n            console.log('invalid type ' + typeIn);\n            throw new Music21Exception('invalid type ' + typeIn);\n        }\n        this._type = typeIn;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Reads the tuplet Array for the duration.\n     *\n     * The tuplet array should be considered Read Only.\n     * Use {@link music21.duration.Duration#appendTuplet} to\n     * add a tuplet (no way to remove yet)\n     *\n     * @type Array<music21.duration.Tuplet>\n     * @instance\n     * @default []\n     * @memberof music21.duration.Duration\n     */\n    get tuplets() {\n        return this._tuplets;\n    }\n    /**\n     * Read-only: the duration expressed for VexFlow\n     *\n     * @type String\n     * @instance\n     * @default 'd'\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.vexflowDuration == 'h'; // true;\n     * d.dots = 2;\n     * d.vexflowDuration == 'hdd'; // true;\n     */\n    get vexflowDuration() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this.type);\n        let vd = duration.vexflowDurationArray[typeNumber];\n        if (this.dots > 0) {\n            for (let i = 0; i < this.dots; i++) {\n                vd += 'd'; // vexflow does not handle double dots .. or does it???\n            }\n        }\n        return vd;\n    }\n    cloneCallbacksTupletFunction(tupletKey, ret, obj) {\n        // make sure that tuplets clone properly\n        const newTuplets = [];\n        for (let i = 0; i < obj[tupletKey].length; i++) {\n            const newTuplet = obj[tupletKey][i].clone();\n            // console.log('cloning tuplets', obj[tupletKey][i], newTuplet);\n            newTuplets.push(newTuplet);\n        }\n        ret[tupletKey] = newTuplets;\n    }\n    _findDots(ql) {\n        if (ql === 0) {\n            return 0;\n        } // zero length stream probably;\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type);\n        const powerOfTwo = Math.pow(2, duration.quarterTypeIndex - typeNumber);\n        // alert(undottedQL * 1.5 + \" \" + ql)\n        // console.log('find dots called on ql: ', ql, typeNumber, powerOfTwo);\n        for (let dotsNum = 0; dotsNum <= 4; dotsNum++) {\n            const dotMultiplier\n                = (Math.pow(2, dotsNum) - 1.0) / Math.pow(2, dotsNum);\n            const durationMultiplier = 1 + dotMultiplier;\n            if (Math.abs(powerOfTwo * durationMultiplier - ql) < 0.0001) {\n                return dotsNum;\n            }\n        }\n        if (debug) {\n            console.log('no dots available for ql; probably a tuplet', ql);\n        }\n        return 0;\n    }\n    updateQlFromFeatures() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type); // must be set property\n        const undottedQuarterLength = Math.pow(\n            2,\n            duration.quarterTypeIndex - typeNumber\n        );\n        const dottedMultiplier\n            = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);\n        const unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        let tupletCorrectedQl = unTupletedQl;\n        this._tuplets.forEach(tuplet => {\n            tupletCorrectedQl *= tuplet.tupletMultiplier();\n        });\n        this._quarterLength = tupletCorrectedQl;\n    }\n    updateFeaturesFromQl() {\n        const ql = this._quarterLength;\n        this._tuplets = [];\n        if (ql === 0) {\n            this._type = 'zero';\n            this._dots = 0;\n            return;\n        }\n        const powerOfTwo = Math.floor(Math.log(ql + 0.00001) / Math.log(2));\n        let typeNumber = duration.quarterTypeIndex - powerOfTwo;\n        this._type = duration.ordinalTypeFromNum[typeNumber];\n        // console.log(this._findDots);\n        this._dots = this._findDots(ql);\n\n        const undottedQuarterLength = Math.pow(\n            2,\n            duration.quarterTypeIndex - typeNumber\n        );\n        const dottedMultiplier\n            = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);\n        let unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        if (unTupletedQl !== ql && ql !== 0) {\n            typeNumber -= 1;\n            this._type = duration.ordinalTypeFromNum[typeNumber]; // increase type: eighth to quarter etc.\n            unTupletedQl *= 2;\n            const tupletRatio = ql / unTupletedQl;\n            const ratioRat = common.rationalize(tupletRatio);\n            if (ratioRat === undefined) {\n                // probably a Stream with a length that is inexpressable;\n            } else {\n                const t = new duration.Tuplet(\n                    ratioRat.denominator,\n                    ratioRat.numerator,\n                    new duration.Duration(unTupletedQl)\n                );\n                this.appendTuplet(t, true); // skipUpdateQl\n            }\n            // console.log(ratioRat, ql, unTupletedQl);\n        }\n        return;\n    }\n    /**\n     * Add a tuplet to music21j\n     *\n     * @memberof music21.duration.Duration\n     * @param {music21.duration.Tuplet} newTuplet - tuplet to add to `.tuplets`\n     * @param {boolean} [skipUpdateQl=false] - update the quarterLength afterwards?\n     */\n    appendTuplet(newTuplet, skipUpdateQl) {\n        newTuplet.frozen = true;\n        this._tuplets.push(newTuplet);\n        if (skipUpdateQl !== true) {\n            this.updateQlFromFeatures();\n        }\n    }\n}\n\nduration.Duration = Duration;\n\n/**\n * Represents a Tuplet; found in {@link music21.duration.Duration#tuplets}\n *\n * @class Tuplet\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {number} numberNotesActual - numerator of the tuplet, default 3\n * @param {number} numberNotesNormal - denominator of the tuplet, default 2\n * @param {(music21.duration.Duration|number)} durationActual - duration or quarterLength of duration type, default music21.duration.Duration(0.5)\n * @param {(music21.duration.Duration|number)} durationNormal - unused; see music21p for description\n */\nexport class Tuplet extends prebase.ProtoM21Object {\n    constructor(\n        numberNotesActual,\n        numberNotesNormal,\n        durationActual,\n        durationNormal\n    ) {\n        super();\n        this.numberNotesActual = numberNotesActual || 3;\n        this.numberNotesNormal = numberNotesNormal || 2;\n        this.durationActual = durationActual || new duration.Duration(0.5);\n        if (typeof this.durationActual === 'number') {\n            this.durationActual = new duration.Duration(this.durationActual);\n        }\n        this.durationNormal = durationNormal || this.durationActual;\n\n        this.frozen = false;\n        this.type = undefined;\n        /**\n         * Show a bracket above the tuplet\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {Boolean} bracket\n         * @default true\n         */\n        this.bracket = true;\n        /**\n         * Bracket placement. Options are `above` or `below`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} placement\n         * @default 'above'\n         */\n        this.placement = 'above';\n\n        /**\n         * What to show above the Tuplet. Options are `number`, `type`, or (string) `none`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} tupletActualShow\n         * @default 'number'\n         */\n        this.tupletActualShow = 'number';\n        this.tupletNormalShow = undefined; // undefined, 'ratio' for ratios, 'type' for ratioed notes (does not work)\n    }\n    /**\n     * A nice name for the tuplet.\n     *\n     * @type String\n     * @instance\n     * @readonly\n     * @memberof music21.duration.Tuplet\n     */\n    get fullName() {\n        // actual is what is presented to viewer\n        const numActual = this.numberNotesActual;\n        const numNormal = this.numberNotesNormal;\n\n        if (numActual === 3 && numNormal === 2) {\n            return 'Triplet';\n        } else if (numActual === 5 && (numNormal === 4 || numNormal === 2)) {\n            return 'Quintuplet';\n        } else if (numActual === 6 && numNormal === 4) {\n            return 'Sextuplet';\n        }\n        const ordStr = common.ordinalAbbreviation(numNormal, true); // plural\n        return (\n            'Tuplet of '\n            + numActual.toString()\n            + '/'\n            + numNormal.toString()\n            + ordStr\n        );\n    }\n    /**\n     * Set both durationActual and durationNormal for the tuplet.\n     *\n     * @memberof music21.duration.Tuplet\n     * @param {string} type - a duration type, such as `half`, `quarter`\n     * @returns {music21.duration.Duration} A converted {@link music21.duration.Duration} matching `type`\n     */\n    setDurationType(type) {\n        if (this.frozen === true) {\n            throw new Music21Exception(\n                'A frozen tuplet (or one attached to a duration) is immutable'\n            );\n        }\n        this.durationActual = new duration.Duration(type);\n        this.durationNormal = this.durationActual;\n        return this.durationActual;\n    }\n    /**\n     * Sets the tuplet ratio.\n     *\n     * @memberof music21.duration.Tuplet\n     * @param {Number} actual - number of notes in actual (e.g., 3)\n     * @param {Number} normal - number of notes in normal (e.g., 2)\n     * @returns {undefined}\n     */\n    setRatio(actual, normal) {\n        if (this.frozen === true) {\n            throw new Music21Exception(\n                'A frozen tuplet (or one attached to a duration) is immutable'\n            );\n        }\n        this.numberNotesActual = actual || 3;\n        this.numberNotesNormal = normal || 2;\n    }\n    /**\n     * Get the quarterLength corresponding to the total length that\n     * the completed tuplet (i.e., 3 notes in a triplet) would occupy.\n     *\n     * @memberof music21.duration.Tuplet\n     * @returns {Number} A quarter length.\n     */\n    totalTupletLength() {\n        return this.numberNotesNormal * this.durationNormal.quarterLength;\n    }\n    /**\n     * The amount by which each quarter length is multiplied to get\n     * the tuplet. For instance, in a normal triplet, this is 0.666\n     *\n     * @memberof music21.duration.Tuplet\n     * @returns {Number} A float of the multiplier\n     */\n    tupletMultiplier() {\n        const lengthActual = this.durationActual.quarterLength;\n        return (\n            this.totalTupletLength() / (this.numberNotesActual * lengthActual)\n        );\n    }\n}\nduration.Tuplet = Tuplet;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/base -- objects in base in music21p routines\n *\n * does not load the other modules, music21/moduleLoader.js does that.\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\nimport * as derivation from './derivation.js';\nimport { duration } from './duration.js';\nimport { prebase } from './prebase.js';\nimport * as sites from './sites.js';\n\n/**\n * module for Music21Objects, see {@link music21.base}\n *\n * @requires music21/common\n * @requires music21/duration\n * @requires music21/prebase\n * @requires music21/sites\n * @exports music21/base\n */\n/**\n * Module for Music21Objects.  Does not load other modules, see {@link music21.moduleLoader}\n * for this functionality.\n *\n * @namespace music21.base\n * @memberof music21\n */\nexport const base = {};\n\n/**\n * Base class for any object that can be placed in a {@link music21.stream.Stream}.\n *\n * @class Music21Object\n * @memberof music21.base\n * @extends music21.prebase.ProtoM21Object\n * @property {object} activeSite - hardlink to a {@link music21.stream.Stream} containing the element.\n * @property {number} classSortOrder - Default sort order for this class (default 20; override in other classes). Lower numbered objects will sort before other objects in the staff if priority and offset are the same.\n * @property {music21.duration.Duration} duration - the duration (object) for the element. (can be set with a quarterLength also)\n * @property {Array} groups - An Array of strings representing group (equivalent to css classes) to assign to the object. (default [])\n * @property {boolean} isMusic21Object - true\n * @property {boolean} isStream - false\n * @property {number} offset - offset from the beginning of the stream (in quarterLength)\n * @property {number} priority - The priority (lower = earlier or more left) for elements at the same offset. (default 0)\n */\nexport class Music21Object extends prebase.ProtoM21Object {\n    constructor(keywords) {\n        super();\n        this.classSortOrder = 20; // default;\n\n        this._activeSite = undefined;\n        this._naiveOffset = 0;\n\n        // this._derivation = undefined;\n        // this._style = undefined;\n        // this._editorial = undefined;\n\n        this._duration = new duration.Duration();\n        this._derivation = undefined; // avoid making extra objects...\n\n        this._priority = 0; // default;\n\n        this.id = sites.getId(this);\n        this.groups = [];\n        // groups\n        this.sites = new sites.Sites();\n\n        this.isMusic21Object = true;\n        this.isStream = false;\n\n        this.groups = []; // custom object in m21p\n\n        // beat, measureNumber, etc.\n        // lots to do...\n        this._cloneCallbacks._activeSite = function Music21Object_cloneCallbacks_activeSite(\n            keyName,\n            newObj,\n            self\n        ) {\n            newObj[keyName] = undefined;\n        };\n        this._cloneCallbacks._derivation = function Music21Music21Object_cloneCallbacks_derivation(\n            keyName,\n            newObj,\n            self\n        ) {\n            const newDerivation = new derivation.Derivation(newObj);\n            newDerivation.origin = self;\n            newDerivation.method = 'clone';\n            newObj[keyName] = newDerivation;\n        };\n\n        this._cloneCallbacks.sites = function Music21Object_cloneCallbacks_sites(\n            keyName,\n            newObj,\n            self\n        ) {\n            newObj[keyName] = new sites.Sites();\n        };\n    }\n    get activeSite() {\n        return this._activeSite;\n    }\n\n    set activeSite(site) {\n        if (site === undefined) {\n            this._activeSite = undefined;\n            this._activeSiteStoredOffset = undefined;\n        } else {\n            try {\n                site.elementOffset(this);\n            } catch (e) {\n                throw new sites.SitesException(\n                        'activeSite cannot be set for an object not in the stream');\n            }\n            this._activeSite = site;\n        }\n    }\n\n    get derivation() {\n        if (this._derivation === undefined) {\n            this._derivation = new derivation.Derivation(this);\n        }\n        return this._derivation;\n    }\n    set derivation(newDerivation) {\n        this._derivation = newDerivation;\n    }\n\n\n    get measureNumber() {\n        if (this.activeSite !== undefined && this.activeSite.classes.includes('Measure')) {\n            return this.activeSite.number;\n        } else {\n            const m = this.sites.getObjByClass('Measure');\n            if (m !== undefined) {\n                return m.number;\n            } else {\n                return undefined;\n            }\n        }\n    }\n\n    get offset() {\n        if (this.activeSite === undefined) {\n            return this._naiveOffset;\n        } else {\n            return this.activeSite.elementOffset(this);\n        }\n    }\n\n    set offset(newOffset) {\n        if (this.activeSite === undefined) {\n            this._naiveOffset = newOffset;\n        } else {\n            this.activeSite.setElementOffset(this, newOffset);\n        }\n    }\n\n    get priority() {\n        return this._priority;\n    }\n    set priority(p) {\n        this._priority = p;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(newDuration) {\n        if (typeof newDuration === 'object') {\n            this._duration = newDuration;\n            // common errors below...\n        } else if (typeof newDuration === 'number') {\n            this._duration.quarterLength = newDuration;\n        } else if (typeof newDuration === 'string') {\n            this._duration.type = newDuration;\n        }\n    }\n    get quarterLength() {\n        return this.duration.quarterLength;\n    }\n    set quarterLength(ql) {\n        this.duration.quarterLength = ql;\n    }\n\n    mergeAttributes(other) {\n        // id;\n        this.groups = other.groups.slice();\n    }\n\n    /**\n     * Return the offset of this element in a given site -- use .offset if you are sure that\n     * site === activeSite.\n     *\n     * Raises an Error if not in site.\n     *\n     * Does not change activeSite or .offset\n     *\n     * @memberof music21.base.Music21Object\n     * @param {music21.stream.Stream} site\n     * @returns Number|undefined\n     */\n    getOffsetBySite(site, stringReturns=false) {\n        if (site === undefined) {\n            return this._naiveOffset;\n        }\n        return site.elementOffset(this, stringReturns);\n    }\n\n    /**\n     * setOffsetBySite - sets the offset for a given Stream\n     *\n     * @memberof music21.base.Music21Object\n     * @param  {music21.stream.Stream} site  Stream object\n     * @param  {number} value offset\n     */\n\n    setOffsetBySite(site, value) {\n        if (site !== undefined) {\n            site.setElementOffset(this, value);\n        } else {\n            this._naiveOffset = value;\n        }\n    }\n\n\n    /**\n     * For an element which may not be in site, but might be in a Stream\n     * in site (or further in streams), find the cumulative offset of the\n     * clement in that site.\n     *\n     * See also music21.stream.iterator.RecursiveIterator.currentHierarchyOffset for\n     * a method that is about 10x faster when running through a recursed stream.\n     *\n     * @memberof music21.base.Music21Object\n     * @param {music21.stream.Stream} site\n     * @returns Number|undefined\n     */\n    getOffsetInHierarchy(site) {\n        try {\n            return this.getOffsetBySite(site);\n        } catch (e) {} // eslint-disable-line no-empty\n        for (const [csSite, csOffset, unused_csRecursionType] of this.contextSites()) {\n            if (csSite === site) {\n                return csOffset;\n            }\n        }\n        throw new Error(`Element ${this} is not in hierarchy of ${site}`);\n    }\n\n    // ---------- Contexts -------------\n\n    getContextByClass(className, options) {\n        const payloadExtractor = function payloadExtractor(\n            useSite,\n            flatten,\n            positionStart,\n            getElementMethod,\n            classList\n        ) {\n            // this should all be done as a tree...\n            // do not use .flat or .semiFlat so as not\n            // to create new sites.\n\n            // VERY HACKY...\n            let lastElement;\n            for (let i = 0; i < useSite.length; i++) {\n                const thisElement = useSite._elements[i];\n                const indexOffset = useSite.elementOffset(thisElement);\n                const matchClass = thisElement.isClassOrSubclass(classList);\n                if (flatten === false && !matchClass) {\n                    continue;\n                } else if (!thisElement.isStream && !matchClass) {\n                    continue;\n                }\n                // is a stream or an element of the appropriate class...\n                // first check normal elements\n                if (\n                    getElementMethod.includes('Before')\n                    && indexOffset >= positionStart\n                ) {\n                    if (\n                        getElementMethod.includes('At')\n                        && lastElement === undefined\n                    ) {\n                        lastElement = thisElement;\n                        try {\n                            lastElement.activeSite = useSite;\n                        } catch (e) {\n                            // do nothing... should not happen.\n                        }\n                    } else if (lastElement.isClassOrSubclass(classList)) {\n                        return lastElement;\n                    } else if (matchClass) {\n                        return thisElement;\n                    }\n                } else {\n                    lastElement = thisElement;\n                }\n                if (\n                    getElementMethod.includes('After')\n                    && indexOffset > positionStart\n                    && matchClass\n                ) {\n                    return thisElement;\n                }\n                // now cleck stream... already filtered out flatten == false;\n                if (thisElement.isStream) {\n                    const potentialElement = payloadExtractor(\n                        thisElement,\n                        flatten,\n                        positionStart + indexOffset,\n                        getElementMethod,\n                        classList\n                    );\n                    if (potentialElement !== undefined) {\n                        return potentialElement;\n                    }\n                }\n            }\n            if (lastElement !== undefined && lastElement.isClassOrSubclass(classList)) {\n                return lastElement;\n            } else {\n                return undefined;\n            }\n        };\n\n        const params = {\n            getElementMethod: 'getElementAtOrBefore',\n            sortByCreationTime: false,\n        };\n        common.merge(params, options);\n\n        const getElementMethod = params.getElementMethod;\n        const sortByCreationTime = params.sortByCreationTime;\n\n        if (className !== undefined && !(className instanceof Array)) {\n            className = [className];\n        }\n        if (\n            getElementMethod.includes('At')\n            && this.isClassOrSubclass(className)\n        ) {\n            return this;\n        }\n\n        for (const [site, positionStart, searchType] of this.contextSites({\n            returnSortTuples: true,\n            sortByCreationTime,\n        })) {\n            if (\n                getElementMethod.includes('At')\n                && site.isClassOrSubclass(className)\n            ) {\n                return site;\n            }\n\n            if (\n                searchType === 'elementsOnly'\n                || searchType === 'elementsFirst'\n            ) {\n                const contextEl = payloadExtractor(\n                    site,\n                    false,\n                    positionStart,\n                    getElementMethod,\n                    className\n                );\n                if (contextEl !== undefined) {\n                    try {\n                        contextEl.activeSite = site;\n                    } catch (e) {\n                        // do nothing.\n                    }\n                    return contextEl;\n                }\n            } else if (searchType !== 'elementsOnly') {\n                if (\n                    getElementMethod.includes('After')\n                    && (className === undefined\n                        || site.isClassOrSubclass(className))\n                ) {\n                    if (\n                        !getElementMethod.includes('NotSelf')\n                        && this !== site\n                    ) {\n                        return site;\n                    }\n                }\n                const contextEl = payloadExtractor(\n                    site,\n                    'semiFlat',\n                    positionStart,\n                    getElementMethod,\n                    className\n                );\n                if (contextEl !== undefined) {\n                    try {\n                        contextEl.activeSite = site;\n                    } catch (e) {\n                        // do nothing.\n                    }\n                    return contextEl;\n                }\n                if (\n                    getElementMethod.includes('Before')\n                    && (className === undefined\n                        || site.isClassOrSubclass(className))\n                ) {\n                    if (\n                        !getElementMethod.includes('NotSelf')\n                        || this !== site\n                    ) {\n                        return site;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    * contextSites(options) {\n        const params = {\n            callerFirst: undefined,\n            memo: [],\n            offsetAppend: 0.0,\n            sortByCreationTime: false,\n            priorityTarget: undefined,\n            returnSortTuples: false,\n            followDerivation: true,\n        };\n        common.merge(params, options);\n        const memo = params.memo;\n        if (params.callerFirst === undefined) {\n            params.callerFirst = this;\n            if (this.isStream && !(this in memo)) {\n                const recursionType = this.recursionType;\n                yield [this, 0.0, recursionType];\n            }\n            memo.push(this);\n        }\n\n        if (params.priorityTarget === undefined && !params.sortByCreationType) {\n            params.priorityTarget = this.activeSite;\n        }\n        const topLevel = this;\n        for (const siteObj of this.sites.yieldSites(\n            params.sortByCreationTime,\n            params.priorityTarget,\n            true // excludeNone\n        )) {\n            if (memo.includes(siteObj)) {\n                continue;\n            }\n            if (siteObj.classes.includes('SpannerStorage')) {\n                continue;\n            }\n\n            // let offset = this.getOffsetBySite(siteObj);\n            // followDerivation;\n            const offsetInStream = siteObj.elementOffset(this);\n            const newOffset = offsetInStream + params.offsetAppend;\n            const positionInStream = newOffset;\n            const recursionType = siteObj.recursionType;\n            yield [siteObj, positionInStream, recursionType];\n            memo.push(siteObj);\n\n            const newParams = {\n                callerFirst: params.callerFirst,\n                memo,\n                offsetAppend: positionInStream, // .offset\n                returnSortTuples: true, // always!\n                sortByCreationTime: params.sortByCreationTime,\n            };\n            for (const [\n                topLevelInner,\n                inStreamPos,\n                recurType\n            ] of siteObj.contextSites(newParams)) {\n                const inStreamOffset = inStreamPos; // .offset;\n                // const hypotheticalPosition = inStreamOffset; // more complex w/ sortTuples\n\n                if (!memo.includes(topLevelInner)) {\n                    // if returnSortTuples...\n                    // else\n                    yield [topLevelInner, inStreamOffset, recurType];\n                    memo.push(topLevelInner);\n                }\n            }\n        }\n        // if followDerivation...\n        if (params.followDerivation) {\n            for (const derivatedObject of topLevel.derivation.chain()) {\n                for (const [derivedSite, derivedOffset, derivedRecurseType] of derivatedObject.contextSites({\n                    callerFirst: undefined,\n                    memo,\n                    offsetAppend: 0.0,\n                    returnSortTuples: true,\n                    sortByCreationTime: params.sortByCreationTime,\n                })) {\n                    const offsetAdjustedCsTuple = [derivedSite, derivedOffset + params.offsetAppend, derivedRecurseType];\n                    yield offsetAdjustedCsTuple;\n                }\n            }\n        }\n    }\n}\n\nbase.Music21Object = Music21Object;\n","import * as Vex from 'vexflow';\n\nimport { common } from './common.js';\nimport { prebase } from './prebase.js';\n\n/**\n * articulations module. See {@link music21.articulations} namespace\n *\n */\n\n/**\n * @namespace music21.articulations\n * @memberof music21\n * @requires music21/prebase, Vexflow\n */\nexport const articulations = {};\n\n/**\n * Represents a single articulation, usually in the `.articulations` Array\n * on a {@link music21.note.Note} or something like that.\n *\n * @class Articulation\n * @memberof music21.articulations\n * @extends music21.prebase.ProtoM21Object\n * @property {string} name\n * @property {string} [placement='above']\n * @property {string} vexflowModifier - the string code to get this accidental in Vexflow\n * @property {number} [dynamicScale=1.0] - multiplier for the dynamic of a note that this is attached to\n * @property {number} [lengthScale=1.0] - multiplier for the length of a note that this is attached to.\n */\nexport class Articulation extends prebase.ProtoM21Object {\n    constructor() {\n        super();\n        this.name = undefined;\n        this.placement = 'above';\n        this.vexflowModifier = undefined;\n        this.setPosition = undefined;\n        this.dynamicScale = 1.0;\n        this.lengthScale = 1.0;\n    }\n\n    /**\n     * Generates a Vex.Flow.Articulation for this articulation.\n     *\n     * @memberof music21.articulations.Articulation\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfa = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfa.setPosition(this.setPosition);\n        }\n        return vfa;\n    }\n}\narticulations.Articulation = Articulation;\n/**\n * base class for articulations that change the length of a note...\n *\n * @class LengthArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class LengthArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'length-articulation';\n    }\n}\narticulations.LengthArticulation = LengthArticulation;\n\n/**\n * base class for articulations that change the dynamic of a note...\n *\n * @class DynamicArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class DynamicArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'dynamic-articulation';\n    }\n}\narticulations.DynamicArticulation = DynamicArticulation;\n\n/**\n * base class for articulations that change the pitch of a note...\n *\n * @class PitchArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class PitchArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'pitch-articulation';\n    }\n}\narticulations.PitchArticulation = PitchArticulation;\n\n/**\n * base class for articulations that change the timbre of a note...\n *\n * @class TimbreArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class TimbreArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'timbre-articulation';\n    }\n}\narticulations.TimbreArticulation = TimbreArticulation;\n\n/**\n * 50% louder than usual\n *\n * @class Accent\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n */\nexport class Accent extends DynamicArticulation {\n    constructor() {\n        super();\n        this.name = 'accent';\n        this.vexflowModifier = 'a>';\n        this.dynamicScale = 1.5;\n    }\n}\narticulations.Accent = Accent;\n\n/**\n * 100% louder than usual\n *\n * @class StrongAccent\n * @memberof music21.articulations\n * @extends music21.articulations.Accent\n */\nexport class StrongAccent extends Accent {\n    constructor() {\n        super();\n        this.name = 'strong accent';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 2.0;\n    }\n}\narticulations.StrongAccent = StrongAccent;\n\n/**\n * no playback for now.\n *\n * @class Staccato\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Staccato extends LengthArticulation {\n    constructor() {\n        super();\n        this.name = 'staccato';\n        this.vexflowModifier = 'a.';\n    }\n}\narticulations.Staccato = Staccato;\n\n/**\n * no playback for now.\n *\n * @class Staccatissimo\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Staccatissimo extends Staccato {\n    constructor() {\n        super();\n        this.name = 'staccatissimo';\n        this.vexflowModifier = 'av';\n    }\n}\narticulations.Staccatissimo = Staccatissimo;\n\n/**\n * no playback or display for now.\n *\n * @class Spiccato\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Spiccato extends Staccato {\n    constructor() {\n        super();\n        this.name = 'spiccato';\n        this.vexflowModifier = undefined;\n    }\n}\narticulations.Spiccato = Spiccato;\n\n/**\n * @class Marcato\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n * @extends music21.articulations.LengthArticulation\n */\nexport class Marcato extends DynamicArticulation {\n    constructor() {\n        super();\n        common.mixin(LengthArticulation, this);\n        this.name = 'marcato';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 1.7;\n    }\n}\narticulations.Marcato = Marcato;\n\n/**\n * @class Tenuto\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Tenuto extends LengthArticulation {\n    constructor() {\n        super();\n        this.name = 'tenuto';\n        this.vexflowModifier = 'a-';\n    }\n}\narticulations.Tenuto = Tenuto;\n","import MIDI from 'MIDI';\n\nimport { common } from './common.js';\n\n/**\n * audioSearch module. See {@link music21.audioSearch} namespace\n *\n * @exports music21/audioSearch\n */\n/**\n * @namespace music21.audioSearch\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n */\n\nexport const audioSearch = {};\n// functions based on the prototype created by Chris Wilson's MIT License version\n// and on Jordi Bartolome Guillen's audioSearch module for music21\n\naudioSearch.fftSize = 2048;\n\naudioSearch.AudioContextCaller\n    = window.AudioContext || window.webkitAudioContext;\naudioSearch._audioContext = null;\naudioSearch.animationFrameCallbackId = null;\n\nObject.defineProperties(audioSearch, {\n    audioContext: {\n        get: () => {\n            if (audioSearch._audioContext !== null) {\n                return audioSearch._audioContext;\n            } else {\n                // AudioContext should be a singleton, but MIDI reports loaded before it is!\n                if (\n                    MIDI !== undefined\n                    && MIDI.WebAudio !== undefined\n                    && MIDI.WebAudio.getContext() !== undefined\n                ) {\n                    window.globalAudioContext = MIDI.WebAudio.getContext();\n                } else if (typeof window.globalAudioContext === 'undefined') {\n                    window.globalAudioContext = new audioSearch.AudioContextCaller();\n                }\n                audioSearch._audioContext = window.globalAudioContext;\n                return audioSearch._audioContext;\n            }\n        },\n        set: ac => {\n            audioSearch._audioContext = ac;\n        },\n    },\n});\n\n/**\n *\n * @function music21.audioSearch.getUserMedia\n * @memberof music21.audioSearch\n * @param {object} dictionary - optional dictionary to fill\n * @param {function} callback - callback on success\n * @param {function} error - callback on error\n */\naudioSearch.getUserMedia = function getUserMedia(dictionary, callback, error) {\n    if (error === undefined) {\n        /* eslint no-alert: \"off\"*/\n        error = () => {\n            alert(\n                'navigator.getUserMedia either not defined (Safari, IE) or denied.'\n            );\n        };\n    }\n    if (callback === undefined) {\n        callback = mediaStream => {\n            audioSearch.userMediaStarted(mediaStream);\n        };\n    }\n    const n = navigator;\n    // need to polyfill navigator, or binding problems are hard...\n    n.getUserMedia\n        = n.getUserMedia\n        || n.webkitGetUserMedia\n        || n.mozGetUserMedia\n        || n.msGetUserMedia;\n\n    if (n.getUserMedia === undefined) {\n        error();\n    }\n    if (dictionary === undefined) {\n        dictionary = {\n            audio: {\n                mandatory: {},\n                optional: [],\n            },\n        };\n    }\n    n.getUserMedia(dictionary, callback, error);\n};\n\naudioSearch.sampleBuffer = null;\naudioSearch.currentAnalyser = null;\n\naudioSearch.userMediaStarted = function userMediaStarted(audioStream) {\n    /**\n     * This function which patches Safari requires some time to get started\n     * so we call it on object creation.\n     */\n    audioSearch.sampleBuffer = new Float32Array(audioSearch.fftSize / 2);\n    const mediaStreamSource = audioSearch.audioContext.createMediaStreamSource(\n        audioStream\n    );\n    const analyser = audioSearch.audioContext.createAnalyser();\n    analyser.fftSize = audioSearch.fftSize;\n    mediaStreamSource.connect(analyser);\n    audioSearch.currentAnalyser = analyser;\n    audioSearch.animateLoop();\n};\n\naudioSearch.minFrequency = 55;\naudioSearch.maxFrequency = 1050;\naudioSearch.animateLoop = function animateLoop(time) {\n    audioSearch.currentAnalyser.getFloatTimeDomainData(\n        audioSearch.sampleBuffer\n    );\n    // returns best frequency or -1\n    const frequencyDetected = audioSearch.autoCorrelate(\n        audioSearch.sampleBuffer,\n        audioSearch.audioContext.sampleRate,\n        audioSearch.minFrequency,\n        audioSearch.maxFrequency\n    );\n    const retValue = audioSearch.sampleCallback(frequencyDetected);\n    if (retValue !== -1) {\n        audioSearch.animationFrameCallbackId = window.requestAnimationFrame(\n            audioSearch.animateLoop\n        );\n    }\n};\n\naudioSearch.pitchSmoothingSize = 40;\naudioSearch.lastPitchClassesDetected = [];\naudioSearch.lastPitchesDetected = [];\naudioSearch.lastCentsDeviationsDetected = [];\n\naudioSearch.smoothPitchExtraction = function smoothPitchExtraction(frequency) {\n    if (frequency === -1) {\n        audioSearch.lastPitchClassesDetected.shift();\n        audioSearch.lastPitchesDetected.shift();\n        audioSearch.lastCentsDeviationsDetected.shift();\n    } else {\n        const [midiNum, centsOff] = audioSearch.midiNumDiffFromFrequency(\n            frequency\n        );\n        if (\n            audioSearch.lastPitchClassesDetected.length\n            > audioSearch.pitchSmoothingSize\n        ) {\n            audioSearch.lastPitchClassesDetected.shift();\n            audioSearch.lastPitchesDetected.shift();\n            audioSearch.lastCentsDeviationsDetected.shift();\n        }\n        audioSearch.lastPitchClassesDetected.push(midiNum % 12);\n        audioSearch.lastPitchesDetected.push(midiNum);\n        audioSearch.lastCentsDeviationsDetected.push(centsOff);\n    }\n    const mostCommonPitchClass = common.statisticalMode(\n        audioSearch.lastPitchClassesDetected\n    );\n    if (mostCommonPitchClass === null) {\n        return [-1, 0];\n    }\n    const pitchesMatchingClass = [];\n    const centsMatchingClass = [];\n    for (let i = 0; i < audioSearch.lastPitchClassesDetected.length; i++) {\n        if (audioSearch.lastPitchClassesDetected[i] === mostCommonPitchClass) {\n            pitchesMatchingClass.push(audioSearch.lastPitchesDetected[i]);\n            centsMatchingClass.push(audioSearch.lastCentsDeviationsDetected[i]);\n        }\n    }\n    const mostCommonPitch = common.statisticalMode(pitchesMatchingClass);\n\n    // find cents difference; weighing more recent samples more...\n    let totalSamplePoints = 0;\n    let totalSample = 0;\n    for (let j = 0; j < centsMatchingClass.length; j++) {\n        const weight = Math.pow(j, 2) + 1;\n        totalSample += weight * centsMatchingClass[j];\n        totalSamplePoints += weight;\n    }\n    const centsOff = Math.floor(totalSample / totalSamplePoints);\n    return [mostCommonPitch, centsOff];\n};\n\naudioSearch.sampleCallback = function sampleCallback(frequency) {\n    const [unused_midiNum, unused_centsOff] = audioSearch.smoothPitchExtraction(\n        frequency\n    );\n};\n\n// from Chris Wilson. Replace with Jordi's\naudioSearch.autoCorrelate = function autoCorrelate(\n    buf,\n    sampleRate,\n    minFrequency,\n    maxFrequency\n) {\n    const SIZE = buf.length;\n    const MAX_SAMPLES = Math.floor(SIZE / 2);\n    if (minFrequency === undefined) {\n        minFrequency = 0;\n    }\n    if (maxFrequency === undefined) {\n        maxFrequency = sampleRate;\n    }\n\n    let best_offset = -1;\n    let best_correlation = 0;\n    let rms = 0;\n    let foundGoodCorrelation = false;\n    const correlations = new Array(MAX_SAMPLES);\n\n    for (let i = 0; i < SIZE; i++) {\n        const val = buf[i];\n        rms += val * val;\n    }\n    rms = Math.sqrt(rms / SIZE);\n    if (rms < 0.01) {\n        return -1;\n    } // not enough signal\n\n    let lastCorrelation = 1;\n    for (let offset = 0; offset < MAX_SAMPLES; offset++) {\n        let correlation = 0;\n        const offsetFrequency = sampleRate / offset;\n        if (offsetFrequency < minFrequency) {\n            break;\n        }\n        if (offsetFrequency > maxFrequency) {\n            continue;\n        }\n\n        for (let i = 0; i < MAX_SAMPLES; i++) {\n            correlation += Math.abs(buf[i] - buf[i + offset]);\n        }\n        correlation = 1 - correlation / MAX_SAMPLES;\n        correlations[offset] = correlation; // store it, for the tweaking we need to do below.\n        if (correlation > 0.9 && correlation > lastCorrelation) {\n            foundGoodCorrelation = true;\n            if (correlation > best_correlation) {\n                best_correlation = correlation;\n                best_offset = offset;\n            }\n        } else if (foundGoodCorrelation) {\n            // short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.\n            // Now we need to tweak the offset - by interpolating between the values to the left and right of the\n            // best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -\n            // we need to do a curve fit on correlations[] around best_offset in order to better determine precise\n            // (anti-aliased) offset.\n\n            // we know best_offset >=1,\n            // since foundGoodCorrelation cannot go to true until the second pass (offset=1), and\n            // we can't drop into this clause until the following pass (else if).\n            const shift\n                = (correlations[best_offset + 1]\n                    - correlations[best_offset - 1])\n                / correlations[best_offset];\n            return sampleRate / (best_offset + 8 * shift);\n        }\n        lastCorrelation = correlation;\n    }\n    if (best_correlation > 0.01) {\n        // console.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\")\n        return sampleRate / best_offset;\n    }\n    return -1;\n    //  var best_frequency = sampleRate/best_offset;\n};\n\n/**\n *\n * @function midiNumDiffFromFrequency\n * @param {Number} frequency\n * @returns {Array<Int>} [miniNumber, centsOff]\n */\naudioSearch.midiNumDiffFromFrequency = function midiNumDiffFromFrequency(\n    frequency\n) {\n    const midiNumFloat = 12 * (Math.log(frequency / 440) / Math.log(2)) + 69;\n    const midiNum = Math.round(midiNumFloat);\n    const centsOff = Math.round(100 * (midiNumFloat - midiNum));\n    return [midiNum, centsOff];\n};\n","import { audioSearch } from './audioSearch.js';\n\n/**\n * Adopted from Matt Diamond's recorder.js code MIT License\n */\nexport class Recorder {\n    constructor(cfg) {\n        const config = cfg || {};\n        this.bufferLen = config.bufferLen || 4096;\n        this.config = config;\n        this.recording = false;\n        this.currCallback = undefined;\n        this.audioContext = audioSearch.audioContext;\n        this.frequencyCanvasInfo = {\n            id: 'frequencyAnalyser',\n            width: undefined,\n            height: undefined,\n            canvasContext: undefined,\n            animationFrameID: undefined,\n        };\n        this.waveformCanvasInfo = {\n            id: 'waveformCanvas',\n            width: undefined,\n            height: undefined,\n            canvasContext: undefined,\n        };\n        this.analyserNode = undefined;\n    }\n\n    /**\n     * Start here -- polyfills navigator, runs getUserMedia and then sends to audioStreamConnected\n     */\n    initAudio() {\n        this.polyfillNavigator();\n        navigator.getUserMedia(\n            {\n                audio: {\n                    mandatory: {\n                        googEchoCancellation: 'false',\n                        googAutoGainControl: 'false',\n                        googNoiseSuppression: 'false',\n                        googHighpassFilter: 'false',\n                        // 'echoCancellation': false,\n                        // 'autoGainControl': false,\n                        // 'noiseSuppression': false,\n                        // 'highpassFilter': false,\n                    },\n                    optional: [],\n                },\n            },\n            s => this.audioStreamConnected(s),\n            error => {\n                console.log('Error getting audio -- try on google Chrome?');\n                console.log(error);\n            }\n        );\n    }\n\n    /**\n     * After the user has given permission to record, this method is called.\n     * It creates a gain point, and then connects the input source to the gain.\n     * It connects an analyserNode (fftSize 2048) to the gain.\n     *\n     * It creates a second gain of 0.0 connected to the destination, so that\n     * we're not hearing what we're playing in in an infinite loop (SUCKS to turn this off...)\n     *\n     * And it calls this.connectSource on the inputPoint so that\n     * we can do something with all these wonderful inputs.\n     */\n    audioStreamConnected(stream) {\n        const inputPoint = this.audioContext.createGain();\n\n        // Create an AudioNode from the stream.\n        const audioInput = this.audioContext.createMediaStreamSource(stream);\n        audioInput.connect(inputPoint);\n\n        const analyserNode = this.audioContext.createAnalyser();\n        analyserNode.fftSize = 2048;\n        this.analyserNode = analyserNode;\n        inputPoint.connect(analyserNode);\n\n        this.connectSource(inputPoint);\n\n        const zeroGain = this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n        inputPoint.connect(zeroGain);\n        zeroGain.connect(this.audioContext.destination);\n    }\n\n    /**\n     * Creates a worker to receive and process all the messages asychronously.\n     */\n    connectSource(source) {\n        this.context = source.context;\n        this.setNode();\n\n        // create a Worker with inline code...\n        const workerBlob = new Blob(['(', recorderWorkerJs, ')()'], {\n            type: 'application/javascript',\n        });\n        const workerURL = URL.createObjectURL(workerBlob);\n        this.worker = new Worker(workerURL);\n        /**\n         * When worker sends a message, we just send it to the currentCallback...\n         */\n        this.worker.onmessage = e => {\n            const blob = e.data;\n            this.currCallback(blob);\n        };\n        URL.revokeObjectURL(workerURL);\n\n        this.worker.postMessage({\n            command: 'init',\n            config: {\n                sampleRate: this.context.sampleRate,\n            },\n        });\n\n        /**\n         * Whenever the ScriptProcessorNode receives enough audio to process\n         * (i.e., this.bufferLen stereo samples; default 4096), then it calls onaudioprocess\n         * which is set up to send the event's .getChannelData to the WebWorker via a\n         * postMessage.\n         *\n         * The 'record' command sends no message back.\n         */\n        this.node.onaudioprocess = e => {\n            if (!this.recording) {\n                return;\n            }\n            this.worker.postMessage({\n                command: 'record',\n                buffer: [\n                    e.inputBuffer.getChannelData(0),\n                    e.inputBuffer.getChannelData(1),\n                ],\n            });\n        };\n\n        source.connect(this.node);\n\n        /**\n         * polyfill for Chrome error.\n         *\n         * if the ScriptProcessorNode (this.node) is not connected to an output\n         * the \"onaudioprocess\" event is not triggered in Chrome.\n         */\n        this.node.connect(this.context.destination);\n    }\n\n    /**\n     * Creates a ScriptProcessorNode (preferably) to allow for direct audio processing.\n     *\n     * Sets it to this.node and returns it.\n     */\n    setNode() {\n        const numInputChannels = 2;\n        const numOutputChannels = 2;\n        if (!this.context.createScriptProcessor) {\n            this.node = this.context.createJavaScriptNode(\n                this.bufferLen,\n                numInputChannels,\n                numOutputChannels\n            );\n        } else {\n            this.node = this.context.createScriptProcessor(\n                this.bufferLen,\n                numInputChannels,\n                numOutputChannels\n            );\n        }\n        return this.node;\n    }\n\n    /**\n     * Configure from another source...\n     */\n    configure(cfg) {\n        for (const prop in cfg) {\n            if (Object.hasOwnProperty.call(cfg, prop)) {\n                this.config[prop] = cfg[prop];\n            }\n        }\n    }\n\n    record() {\n        this.recording = true;\n    }\n    stop() {\n        this.recording = false;\n    }\n    clear() {\n        this.worker.postMessage({ command: 'clear' });\n    }\n\n    /**\n     * Directly get the buffers from the worker and then call cb.\n     */\n    getBuffers(cb) {\n        this.currCallback = cb || this.config.callback;\n        this.worker.postMessage({ command: 'getBuffers' });\n    }\n\n    /**\n     * call exportWAV or exportMonoWAV on the worker, then call cb or (if undefined) setupDownload.\n     */\n    exportWAV(cb, type, isMono) {\n        let command = 'exportWAV';\n        if (isMono === true) {\n            // default false\n            command = 'exportMonoWAV';\n        }\n        this.currCallback = cb || this.config.callback;\n        type = type || this.config.type || 'audio/wav';\n        if (!this.currCallback) {\n            this.currCallback = blob => {\n                this.setupDownload(\n                    blob,\n                    'myRecording' + Date.now().toString() + '.wav'\n                );\n            };\n        }\n        this.worker.postMessage({\n            command,\n            type,\n        });\n    }\n\n    exportMonoWAV(cb, type) {\n        this.exportWAV(cb, type, true);\n    }\n\n    setupDownload(blob, filename, elementId) {\n        elementId = elementId || 'save';\n        const url = (window.URL || window.webkitURL).createObjectURL(blob);\n        const link = document.getElementById(elementId);\n        link.href = url;\n        link.download = filename || 'output.wav';\n    }\n\n    /**\n     * Polyfills for getUserMedia (requestAnimationFrame polyfills not needed.)\n     * As of 2016 September, only Edge support unprefixed.\n     */\n    polyfillNavigator() {\n        if (!navigator.getUserMedia) {\n            navigator.getUserMedia\n                = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        }\n        if (window.AnalyserNode && !window.AnalyserNode.prototype.getFloatTimeDomainData) {\n            const uint8 = new Uint8Array(2048);\n            window.AnalyserNode.prototype.getFloatTimeDomainData = function getFloatTimeDomainData(array) {\n                this.getByteTimeDomainData(uint8);\n                const imax = array.length;\n                for (let i = 0; i < imax; i++) {\n                    array[i] = (uint8[i] - 128) * 0.0078125;\n                }\n            };\n        }\n    }\n\n    updateAnalysers(time) {\n        if (!this.frequencyCanvasInfo.canvasContext) {\n            const canvas = document.getElementById(this.frequencyCanvasInfo.id);\n            if (!canvas) {\n                return;\n            }\n            this.frequencyCanvasInfo.width = canvas.width;\n            this.frequencyCanvasInfo.height = canvas.height;\n            this.frequencyCanvasInfo.canvasContext = canvas.getContext('2d');\n        }\n\n        // analyser draw code here\n        const SPACING = 3;\n        const BAR_WIDTH = 1;\n        const numBars = Math.round(this.frequencyCanvasInfo.width / SPACING);\n        const freqByteData = new Uint8Array(\n            this.analyserNode.frequencyBinCount\n        );\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        const canvasContext = this.frequencyCanvasInfo.canvasContext;\n        canvasContext.clearRect(\n            0,\n            0,\n            this.frequencyCanvasInfo.width,\n            this.frequencyCanvasInfo.height\n        );\n        canvasContext.fillStyle = '#F6D565';\n        canvasContext.lineCap = 'round';\n        const multiplier = this.analyserNode.frequencyBinCount / numBars;\n\n        // Draw rectangle for each frequency bin.\n        for (let i = 0; i < numBars; ++i) {\n            let magnitude = 0;\n            const offset = Math.floor(i * multiplier);\n            for (let j = 0; j < multiplier; j++) {\n                magnitude += freqByteData[offset + j];\n            }\n            magnitude\n                = magnitude\n                * (this.frequencyCanvasInfo.height / 256)\n                / multiplier;\n            canvasContext.fillStyle\n                = 'hsl( ' + Math.round(i * 360 / numBars) + ', 100%, 50%)';\n            canvasContext.fillRect(\n                i * SPACING,\n                this.frequencyCanvasInfo.height,\n                BAR_WIDTH,\n                -1 * magnitude\n            );\n        }\n\n        this.frequencyCanvasInfo.animationFrameID = window.requestAnimationFrame(\n            t => this.updateAnalysers(t)\n        );\n    }\n\n    drawWaveformCanvas(buffers) {\n        const data = buffers[0]; // one track of stereo recording.\n        if (!this.waveformCanvasInfo.context) {\n            const canvas = document.getElementById(this.waveformCanvasInfo.id);\n            if (!canvas) {\n                return;\n            }\n            this.waveformCanvasInfo.width = canvas.width;\n            this.waveformCanvasInfo.height = canvas.height;\n            this.waveformCanvasInfo.context = canvas.getContext('2d');\n        }\n        const context = this.waveformCanvasInfo.context;\n        const step = Math.ceil(data.length / this.waveformCanvasInfo.width);\n        const amp = this.waveformCanvasInfo.height / 2;\n        context.fillStyle = 'silver';\n        context.clearRect(\n            0,\n            0,\n            this.waveformCanvasInfo.width,\n            this.waveformCanvasInfo.height\n        );\n        for (let i = 0; i < this.waveformCanvasInfo.width; i++) {\n            let min = 1.0;\n            let max = -1.0;\n            for (let j = 0; j < step; j++) {\n                const datum = data[i * step + j];\n                if (datum < min) {\n                    min = datum;\n                }\n                if (datum > max) {\n                    max = datum;\n                }\n            }\n            context.fillRect(\n                i,\n                (1 + min) * amp,\n                1,\n                Math.max(1, (max - min) * amp)\n            );\n        }\n    }\n\n    /**\n     * set this as a callback from getBuffers.  Returns the source so that a stop() command\n     * is possible.\n     */\n    playBuffers(buffers) {\n        const channels = 2;\n        const numFrames = buffers[0].length;\n        const audioBuffer = this.context.createBuffer(\n            channels,\n            numFrames,\n            this.context.sampleRate\n        );\n        for (let channel = 0; channel < channels; channel++) {\n            const thisChannelBuffer = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < numFrames; i++) {\n                thisChannelBuffer[i] = buffers[channel][i];\n            }\n        }\n        const source = this.context.createBufferSource();\n        source.buffer = audioBuffer;\n        source.connect(this.context.destination);\n        source.start();\n        return source;\n    }\n}\n\n/**\n * This code does NOT go through babel, so no arrow functions, let, const, etc.\n */\nconst recorderWorkerJs = `function recorderWorkerJs() {\n    /**\n     *\n     *   Rewritten from Matt Diamond's recorderWorker -- MIT License\n     */\n    RecorderWorker = function RecorderWorker(parentContext) {\n            this.parent = parentContext;\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n            this.sampleRate = undefined;\n    };\n    RecorderWorker.prototype.onmessage = function onmessage(e) {\n            switch (e.data.command) {\n            case 'init':\n                this.init(e.data.config);\n                break;\n            case 'record':\n                this.record(e.data.buffer);\n                break;\n            case 'exportWAV':\n                this.exportWAV(e.data.type);\n                break;\n            case 'exportMonoWAV':\n                this.exportMonoWAV(e.data.type);\n                break;\n            case 'getBuffers':\n                this.getBuffers();\n                break;\n            case 'clear':\n                this.clear();\n                break;\n            default:\n                break;\n            }\n   };\n   RecorderWorker.prototype.postMessage = function postMessage(msg) {\n            this.parent.postMessage(msg);\n   };\n\n   RecorderWorker.prototype.init = function init(config) {\n            this.sampleRate = config.sampleRate;\n   };\n\n   RecorderWorker.prototype.record = function record(inputBuffer) {\n            var inputBufferL = inputBuffer[0];\n            var inputBufferR = inputBuffer[1];\n            this.recBuffersL.push(inputBufferL);\n            this.recBuffersR.push(inputBufferR);\n            this.recLength += inputBufferL.length;\n   };\n\n   RecorderWorker.prototype.exportWAV = function exportWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var bufferR = this.mergeBuffers(this.recBuffersR);\n            var interleaved = this.interleave(bufferL, bufferR);\n            var dataview = this.encodeWAV(interleaved);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.exportMonoWAV = function exportMonoWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var dataview = this.encodeWAV(bufferL);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.mergeBuffers = function mergeBuffers(recBuffers) {\n            var result = new Float32Array(this.recLength);\n            var offset = 0;\n            for (var i = 0; i < recBuffers.length; i++) {\n                result.set(recBuffers[i], offset);\n                offset += recBuffers[i].length;\n            }\n            return result;\n    };\n\n    RecorderWorker.prototype.getBuffers = function getBuffers() {\n            var buffers = [];\n            buffers.push(this.mergeBuffers(this.recBuffersL));\n            buffers.push(this.mergeBuffers(this.recBuffersR));\n            this.postMessage(buffers);\n        };\n\n    RecorderWorker.prototype.clear = function clear() {\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n        }\n\n    RecorderWorker.prototype.interleave = function interleave(inputL, inputR) {\n            var combinedLength = inputL.length + inputR.length;\n            var result = new Float32Array(combinedLength);\n\n            var index = 0;\n            var inputIndex = 0;\n\n            while (index < combinedLength) {\n                result[index++] = inputL[inputIndex];\n                result[index++] = inputR[inputIndex];\n                inputIndex++;\n            }\n            return result;\n        }\n    RecorderWorker.prototype.encodeWAV = function encodeWAV(samples, mono) {\n            var buffer = new ArrayBuffer(44 + (samples.length * 2));\n            var view = new DataView(buffer);\n\n            /* RIFF identifier */\n            writeString(view, 0, 'RIFF');\n\n            /* file length */\n            view.setUint32(4, 32 + samples.length * 2, true);\n\n            /* RIFF type */\n            writeString(view, 8, 'WAVE');\n\n            /* format chunk identifier */\n            writeString(view, 12, 'fmt ');\n\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n\n            /* sample format (raw) */\n            view.setUint16(20, 1, true);\n\n            /* channel count */\n            view.setUint16(22, mono ? 1 : 2, true);\n\n            /* sample rate */\n            view.setUint32(24, this.sampleRate, true);\n\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.sampleRate * 4, true);\n\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, 4, true);\n\n            /* bits per sample */\n            view.setUint16(34, 16, true);\n\n            /* data chunk identifier */\n            writeString(view, 36, 'data');\n\n            /* data chunk length */\n            view.setUint32(40, samples.length * 2, true);\n\n            floatTo16BitPCM(view, 44, samples);\n\n            return view;\n        }\n\n    function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n            var s = Math.max(-1, Math.min(1, input[i]));\n            output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n\n    function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    var recordWorker = new RecorderWorker(this);\n    this.onmessage = (function mainOnMessage(e) { recordWorker.onmessage(e) }).bind(this);\n}`;\n\nexport const audioRecording = { Recorder };\nexport default audioRecording;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/beam -- Beams and Beam class\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { prebase } from './prebase.js';\nimport { duration } from './duration.js';\n\n/**\n * Module holding beam materials. See {@link music21.beam} namespace.\n *\n * @exports music21/beam\n */\n/**\n * {@link music21.beam.Beam} and {music21.beam.Beams} objects\n *\n * @namespace music21.beam\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/duration\n */\nexport const beam = {};\n\nbeam.validBeamTypes = {\n    start: true,\n    stop: true,\n    continue: true,\n    partial: true,\n};\n\nbeam.beamableDurationTypes = [\n    duration.typeFromNumDict[8],\n    duration.typeFromNumDict[16], duration.typeFromNumDict[32],\n    duration.typeFromNumDict[64], duration.typeFromNumDict[128],\n    duration.typeFromNumDict[256],    \n];\n\n\n/**\n * Object representing a single beam (e.g., a 16th note that is beamed needs two)\n *\n * @class Beam\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - \"start\", \"stop\", \"continue\", \"partial\"\n * @param {string} direction - only needed for partial beams: \"left\" or \"right\"\n * @property {Int|undefined} number - which beam line does this refer to; 8th = 1, 16th = 2, etc.\n * @property {number|undefined} independentAngle - the angle of this beam if it is different than others (feathered beams)\n */\nexport class Beam extends prebase.ProtoM21Object {\n    constructor(type, direction) {\n        super();\n        this.type = type;\n        this.direction = direction;\n        this.independentAngle = undefined;\n        this.number = undefined;\n    }\n}\nbeam.Beam = Beam;\n/**\n * Object representing a collection of Beams\n *\n * @class Beams\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @property {Array<music21.beam.Beam>} beamsList - a list of Beam objects\n * @property {Boolean} [feathered=false] - is this a feathered beam.\n * @property {Int} length - length of beamsList\n */\nexport class Beams extends prebase.ProtoM21Object {\n    static naiveBeams(srcList) {\n        const beamsList = [];\n        for (const el of srcList) {\n            if (!beam.beamableDurationTypes.includes(el.duration.type)) {\n                beamsList.push(undefined);\n            } else if (el.isRest) {\n                beamsList.push(undefined);\n            } else {\n                const b = new beam.Beams();\n                b.fill(el.duration.type);\n                beamsList.push(b);\n            }\n        }\n        return beamsList;\n    }\n    \n    static removeSandwichedUnbeamables(beamsList) {\n        let beamLast;\n        let beamNext;\n        for (let i = 0; i < beamsList.length; i++) {\n            if (i !== beamsList.length - 1) {\n                beamNext = beamsList[i + 1];\n            } else {\n                beamNext = undefined;\n            }\n            if (beamLast === undefined && beamNext === undefined) {\n                beamsList[i] = undefined;\n            }\n            beamLast = beamsList[i];\n        }\n        return beamsList;\n    }\n    \n    static sanitizePartialBeams(beamsList) {\n        for (let i = 0; i < beamsList.length; i++) {\n            if (beamsList[i] === undefined) {\n                continue;\n            }\n            const allTypes = beamsList[i].getTypes();\n            if (!allTypes.includes('start') \n                    && !allTypes.includes('stop')\n                    && !allTypes.includes('continue')) {\n                // nothing but partials;\n                beamsList[i] = undefined;\n                continue;\n            }\n            let hasStart = false;\n            let hasStop = false;\n            for (const b of beamsList[i].beamsList) {\n                if (b.type === 'start') {\n                    hasStart = true;\n                    continue;\n                }\n                if (b.type === 'stop') {\n                    hasStop = true;\n                    continue;\n                }\n                if (hasStart && b.type === 'partial' && b.direction === 'left') {\n                    b.direction = 'right';\n                } else if (hasStop && b.type === 'partial' && b.direction === 'right') {\n                    b.direction = 'left';\n                }\n            }\n        }\n        return beamsList;\n    }\n    \n    static mergeConnectingPartialBeams(beamsList) {\n        for (let i = 0; i < beamsList.length - 1; i++) {\n            const bThis = beamsList[i];\n            const bNext = beamsList[i + 1];\n            if (!bThis || !bNext) {\n                continue;\n            }\n            const bThisNum = bThis.getNumbers();\n            if (!bThisNum || bThisNum.length === 0) {\n                continue;\n            }\n            for (const thisNum of bThisNum) {\n                const thisBeam = bThis.getByNumber(thisNum);\n                if (thisBeam.type !== 'partial' || thisBeam.direction !== 'right') {\n                    continue;\n                }\n                if (!(bNext.getNumbers().includes(thisNum))) {\n                    continue;\n                }\n                const nextBeam = bNext.getByNumber(thisNum);\n                if (nextBeam.type === 'partial' || nextBeam.direction === 'right') {\n                    continue;\n                }\n                if (nextBeam.type === 'continue' || nextBeam.type === 'stop') {\n                    // should not happen.\n                    continue;\n                }\n                thisBeam.type = 'start';\n                thisBeam.direction = undefined;\n                if (nextBeam.type === 'partial') {\n                    nextBeam.type = 'stop';\n                } else if (nextBeam.type === 'start') {\n                    nextBeam.type = 'continue';\n                }\n                nextBeam.direction = undefined;\n            }\n        }\n        // now fix partial-lefts that follow stops:\n        for (let i = 1; i < beamsList.length; i++) {\n            const bThis = beamsList[i];\n            const bPrev = beamsList[i - 1];\n            if (!bThis || !bPrev) {\n                continue;\n            }\n            const bThisNum = bThis.getNumbers();\n            if (!bThisNum || bThisNum.length === 0) {\n                continue;\n            }\n            for (const thisNum of bThisNum) {\n                const thisBeam = bThis.getByNumber(thisNum);\n                if (thisBeam.type !== 'partial' || thisBeam.direction !== 'left') {\n                    continue;\n                }\n                if (!(bPrev.getNumbers().includes(thisNum))) {\n                    continue;\n                }\n                const prevBeam = bPrev.getByNumber(thisNum);\n                if (prevBeam.type !== 'stop') {\n                    continue;\n                }\n                thisBeam.type = 'stop';\n                thisBeam.direction = undefined;\n                prevBeam.type = 'continue';\n            }\n        }\n        return beamsList;\n    }\n    \n\n    constructor() {\n        super();\n        this.beamsList = [];\n        this.feathered = false;\n    }\n    get length() {\n        return this.beamsList.length;\n    }\n    /**\n     * Append a new {@link music21.beam.Beam} object to this Beams, automatically creating the Beam\n     *   object and incrementing the number count.\n     *\n     * @memberof music21.beam.Beams\n     * @param {string} type - the type (passed to {@link music21.beam.Beam})\n     * @param {string} [direction=undefined] - the direction if type is \"partial\"\n     * @returns {music21.beam.Beam} newly appended object\n     */\n    append(type, direction) {\n        const obj = new beam.Beam(type, direction);\n        obj.number = this.beamsList.length + 1;\n        this.beamsList.push(obj);\n        return obj;\n    }\n    /**\n     * A quick way of setting the beams list for a particular duration, for\n            instance, fill(\"16th\") will clear the current list of beams in the\n            Beams object and add two beams.  fill(2) will do the same (though note\n            that that is an int, not a string).\n\n     * It does not do anything to the direction that the beams are going in,\n            or by default.  Either set type here or call setAll() on the Beams\n            object afterwards.\n\n     * Both \"eighth\" and \"8th\" work.  Adding more than six beams (i.e. things\n            like 512th notes) raises an error.\n\n     * @memberof music21.beam.Beams\n     * @param {string|Int} level - either a string like \"eighth\" or a number like 1 (=\"eighth\")\n     * @param {string} type - type to fill all beams to.\n     * @returns {this}\n     */\n    fill(level, type) {\n        this.beamsList = [];\n        let count = 1;\n        if (\n            level === 1\n            || level === '8th'\n            || level === duration.typeFromNumDict[8]\n        ) {\n            count = 1;\n        } else if (level === 2 || level === duration.typeFromNumDict[16]) {\n            count = 2;\n        } else if (level === 3 || level === duration.typeFromNumDict[32]) {\n            count = 3;\n        } else if (level === 4 || level === duration.typeFromNumDict[64]) {\n            count = 4;\n        } else if (level === 5 || level === duration.typeFromNumDict[128]) {\n            count = 5;\n        } else if (level === 6 || level === duration.typeFromNumDict[256]) {\n            count = 6;\n        } else {\n            throw new Music21Exception('cannot fill beams for level ' + level);\n        }\n        for (let i = 1; i <= count; i++) {\n            const obj = new beam.Beam();\n            obj.number = i;\n            this.beamsList.push(obj);\n        }\n        if (type !== undefined) {\n            this.setAll(type);\n        }\n        return this;\n    }\n    /**\n     * Get the beam with the given number or throw an exception.\n     *\n     * @memberof music21.beam.Beams\n     * @param {Int} number - the beam number to retrieve (usually one less than the position in `.beamsList`)\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getByNumber(number) {\n        if (!this.getNumbers().includes(number)) {\n            throw new Music21Exception('beam number error: ' + number);\n        }\n        for (const thisBeam of this.beamsList) {\n            if (thisBeam.number === number) {\n                return thisBeam;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get an Array of all the numbers for the beams\n     *\n     * @memberof music21.beam.Beams\n     * @returns {Array<Int>} all the numbers\n     */\n    getNumbers() {\n        const numbers = [];\n        for (const thisBeam of this.beamsList) {\n            numbers.push(thisBeam.number);\n        }\n        return numbers;\n    }\n    /**\n     * Returns the type + \"-\" + direction (if direction is defined)\n     * for the beam with the given number.\n     *\n     * @param {Int} number\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getTypeByNumber(number) {\n        const beamObj = this.getByNumber(number);\n        if (beamObj.direction === undefined) {\n            return beamObj.type;\n        } else {\n            const x = beamObj.type + '-' + beamObj.direction;\n            return x;\n        }\n    }\n    /**\n     * Get an Array of all the types for the beams\n     *\n     * @memberof music21.beam.Beams\n     * @returns {Array<string>} all the types\n     */\n    getTypes() {\n        const types = [];\n        for (let i = 0; i < this.length; i++) {\n            types.push(this.beamsList[i].type);\n        }\n        return types;\n    }\n    /**\n     * Set all the {@link music21.beam.Beam} objects to a given type/direction\n     *\n     * @memberof music21.beam.Beams\n     * @param {string} type - beam type\n     * @param {string} [direction] - beam direction\n     * @returns {this}\n     */\n    setAll(type, direction) {\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            const b = this.beamsList[i];\n            b.type = type;\n            b.direction = direction;\n        }\n        return this;\n    }\n    /**\n     * Set the {@link music21.beam.Beam} object specified by `number` to a given type/direction\n     *\n     * @memberof music21.beam.Beams\n     * @param {Int} number\n     * @param {string} type\n     * @param {string} [direction]\n     * @returns {this}\n     */\n    setByNumber(number, type, direction) {\n        if (direction === undefined) {\n            const splitit = type.split('-');\n            type = splitit[0];\n            direction = splitit[1]; // can be undefined...\n        }\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            if (this.beamsList[i].number === number) {\n                this.beamsList[i].type = type;\n                this.beamsList[i].direction = direction;\n            }\n        }\n        return this;\n    }\n}\nbeam.Beams = Beams;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/pitch -- pitch routines\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { prebase } from './prebase.js';\nimport { common } from './common.js';\n\n/**\n * pitch module.  See {@link music21.pitch} namespace\n *\n * @exports music21/pitch\n */\n/**\n * Pitch related objects and methods\n *\n * @namespace music21.pitch\n * @memberof music21\n * @requires music21/prebase\n */\nexport const pitch = {};\n/**\n * @class Accidental\n * @memberof music21.pitch\n * @param {string|number} accName - an accidental name\n * @extends music21.prebase.ProtoM21Object\n */\nexport class Accidental extends prebase.ProtoM21Object {\n    constructor(accName) {\n        super();\n        this._name = '';\n        this._alter = 0.0;\n        this._modifier = '';\n        this._unicodeModifier = '';\n        this.displayType = 'normal'; // \"normal\", \"always\" supported currently\n        this.displayStatus = undefined; // true, false, undefined\n        this.set(accName);\n    }\n    /**\n     * Sets a parameter of the accidental and updates name, alter, and modifier to suit.\n     *\n     * @memberof music21.pitch.Accidental\n     * @param {number|string} accName - the name, number, or modifier to set\n     * @returns {undefined}\n     */\n    set(accName) {\n        if (accName !== undefined && accName.toLowerCase !== undefined) {\n            accName = accName.toLowerCase();\n        }\n\n        if (\n            accName === 'natural'\n            || accName === 'n'\n            || accName === 0\n            || accName === undefined\n        ) {\n            this._name = 'natural';\n            this._alter = 0.0;\n            this._modifier = '';\n            this._unicodeModifier = '♮';\n        } else if (accName === 'sharp' || accName === '#' || accName === 1) {\n            this._name = 'sharp';\n            this._alter = 1.0;\n            this._modifier = '#';\n            this._unicodeModifier = '♯';\n        } else if (\n            accName === 'flat'\n            || accName === '-'\n            || accName === 'b'\n            || accName === -1\n        ) {\n            this._name = 'flat';\n            this._alter = -1.0;\n            this._modifier = '-';\n            this._unicodeModifier = '♭';\n        } else if (\n            accName === 'double-flat'\n            || accName === '--'\n            || accName === -2\n        ) {\n            this._name = 'double-flat';\n            this._alter = -2.0;\n            this._modifier = '--';\n            this._unicodeModifier = '&#x1d12b;';\n        } else if (\n            accName === 'double-sharp'\n            || accName === '##'\n            || accName === 2\n        ) {\n            this._name = 'double-sharp';\n            this._alter = 2.0;\n            this._modifier = '##';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (\n            accName === 'triple-flat'\n            || accName === '---'\n            || accName === -3\n        ) {\n            this._name = 'triple-flat';\n            this._alter = -3.0;\n            this._modifier = '---';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (\n            accName === 'triple-sharp'\n            || accName === '###'\n            || accName === 3\n        ) {\n            this._name = 'triple-sharp';\n            this._alter = 3.0;\n            this._modifier = '###';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (\n            accName === 'quadruple-flat'\n            || accName === '----'\n            || accName === -4\n        ) {\n            this._name = 'quadruple-flat';\n            this._alter = -4.0;\n            this._modifier = '----';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (\n            accName === 'quadruple-sharp'\n            || accName === '####'\n            || accName === 4\n        ) {\n            this._name = 'quadruple-sharp';\n            this._alter = 4.0;\n            this._modifier = '####';\n            this._unicodeModifier = '&#x1d12a;';\n        } else {\n            throw new Music21Exception('Accidental is not supported: ' + accName);\n        }\n\n    }\n    /**\n     * Return or set the name of the accidental ('flat', 'sharp', 'natural', etc.);\n     *\n     * When set, updates alter and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} name\n     */\n    get name() {\n        return this._name;\n    }\n    set name(n) {\n        this.set(n);\n    }\n    /**\n     * Return or set the alteration amount (-1.0 = flat; 1.0 = sharp; etc.)\n     *\n     * When set, updates name and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {number} alter\n     */\n    get alter() {\n        return this._alter;\n    }\n    set alter(alter) {\n        this.set(alter);\n    }\n    /**\n     * Return or set the modifier ('-', '#', '')\n     *\n     * When set, updates alter and name.\n\n     * @memberof music21.pitch.Accidental#\n     * @var {string} modifier\n     */\n    get modifier() {\n        return this._modifier;\n    }\n    set modifier(modifier) {\n        this.set(modifier);\n    }\n    /**\n     * Returns the modifier for vexflow ('b', '#', 'n')\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} vexflowModifier\n     * @readonly\n     */\n    get vexflowModifier() {\n        // todo -- rewrite with mapping.\n        const m = this.modifier;\n        if (m === '') {\n            return 'n';\n        } else if (m === '#') {\n            return '#';\n        } else if (m === '-') {\n            return 'b';\n        } else if (m === '##') {\n            return '##';\n        } else if (m === '--') {\n            return 'bb';\n        } else if (m === '###') {\n            return '###';\n        } else if (m === '---') {\n            return 'bbb';\n        } else {\n            throw new Music21Exception('Vexflow does not support: ' + m);\n        }\n    }\n    /**\n     * Returns the modifier in unicode or\n     * for double and triple accidentals, as a hex escape\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} unicodeModifier\n     * @readonly\n     */\n    get unicodeModifier() {\n        return this._unicodeModifier;\n    }\n}\npitch.Accidental = Accidental;\n\npitch.nameToMidi = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\npitch.nameToSteps = { C: 0, D: 1, E: 2, F: 3, G: 4, A: 5, B: 6 };\npitch.stepsToName = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\npitch.midiToName = [\n    'C',\n    'C#',\n    'D',\n    'E-',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'A-',\n    'A',\n    'B-',\n    'B',\n];\n\n/**\n * Pitch objects are found in {@link music21.note.Note} objects, and many other places.\n *\n * They do not have a {@link music21.duration.Duration} associated with them, so they\n * cannot be placed inside {@link music21.stream.Stream} objects.\n *\n * Valid pitch name formats are\n * - \"C\", \"D', etc. (\"B\" = American B; \"H\" is not allowed)\n * - \"C#\", \"C-\" (C-flat; do not use \"b\" for flat), \"C##\", \"C###\", \"C--\" etc.\n * - Octave may be specified after the name + accidental: \"C#4\" etc.\n * - Octave can be arbitrarily high (\"C10\") but only as low as \"C0\" because \"C-1\" would be interpreted as C-flat octave 1; shift octave later for very low notes.\n * - If octave is not specified, the system will usually use octave 4, but might adjust according to context. If you do not like this behavior, give an octave always.\n * - Microtones are not supported in music21j (they are in music21p)\n *\n * @class Pitch\n * @memberof music21.pitch\n * @param {string} pn - name of the pitch, with or without octave, see above.\n * @extends music21.prebase.ProtoM21Object\n * @property {music21.pitch.Accidental|undefined} accidental - link to an accidental\n * @property {number} diatonicNoteNum - diatonic number of the pitch, where 29 = C4, C#4, C-4, etc.; 30 = D-4, D4, D#4, etc. updates other properties.\n * @property {number} midi - midi number of the pitch (C4 = 60); readonly. See {@link music21.pitch.Pitch#ps} for setable version.\n * @property {string} name - letter name of pitch + accidental modifier; e.g., B-flat = 'B-'; changes automatically w/ step and accidental\n * @property {string} nameWithOctave - letter name of pitch + accidental modifier + octave; changes automatically w/ step, accidental, and octave\n * @property {number} octave - number for the octave, where middle C = C4, and octaves change between B and C; default 4\n * @property {number} ps - pitch space number, like midi number but floating point and w/ no restriction on range. C4 = 60.0\n * @property {string} step - letter name for the pitch (C-G, A, B), without accidental; default 'C'\n */\nexport class Pitch extends prebase.ProtoM21Object {\n    constructor(pn='C') {\n        super();\n        this._step = 'C';\n        this._octave = 4;\n        this._accidental = undefined;\n        this.spellingIsInferred = false;\n        \n        /* pn can be a nameWithOctave */\n        if (typeof pn === 'number') {\n            if (pn < 12) {\n                pn += 60; // pitchClass\n            }\n            this.ps = pn;\n        } else if (pn.match(/\\d+/)) {\n            this.nameWithOctave = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n\n    // N.B. cannot use transpose here, because of circular import.\n\n    get step() {\n        return this._step;\n    }\n    set step(s) {\n        if (s === '') {\n            throw new TypeError('All notes must have a step');\n        }\n        if (typeof s !== 'string') {\n            throw new TypeError('Steps must be strings');\n        }\n        s = s.toUpperCase();\n        if (!pitch.stepsToName.includes(s)) {\n            throw new TypeError(`${s} is not a valid step name.`);\n        }\n        this._step = s;\n        this.spellingIsInferred = false;\n    }\n    get octave() {\n        return this._octave;\n    }\n    set octave(o) {\n        this._octave = o;\n    }\n    get implicitOctave() {\n        const o = this._octave;\n        if (o === undefined) {\n            return 4; // TODO(msc): get from defaults.\n        } else {\n            return o;\n        }        \n    }\n    \n    get accidental() {\n        return this._accidental;\n    }\n    set accidental(a) {\n        if (typeof a !== 'object' && a !== undefined) {\n            a = new pitch.Accidental(a);\n        }\n        this._accidental = a;\n        this.spellingIsInferred = false;\n    }\n    get name() {\n        if (this.accidental === undefined) {\n            return this.step;\n        } else {\n            return this.step + this.accidental.modifier;\n        }\n    }\n    set name(nn) {\n        this.step = nn.slice(0, 1);\n        const tempAccidental = nn.slice(1);\n        if (tempAccidental) {\n            // not the empty string\n            this.accidental = tempAccidental; // converts automatically\n        } else {\n            this.accidental = undefined;\n        }\n    }\n    get nameWithOctave() {\n        return this.name + this.octave.toString();\n    }\n    set nameWithOctave(pn) {\n        const storedOctave = pn.match(/\\d+/);\n        if (storedOctave !== undefined) {\n            pn = pn.replace(/\\d+/, '');\n            this.octave = parseInt(storedOctave);\n            this.name = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n    get pitchClass() {\n        const pc = common.posMod(Math.round(this.ps), 12);\n        return pc;\n    }\n    \n    get diatonicNoteNum() {\n        return this.octave * 7 + pitch.nameToSteps[this.step] + 1;\n    }\n    set diatonicNoteNum(newDNN) {\n        newDNN -= 1; // makes math easier\n        this.octave = Math.floor(newDNN / 7);\n        this.step = pitch.stepsToName[newDNN % 7];\n    }\n    get frequency() {\n        return 440 * Math.pow(2, (this.ps - 69) / 12);\n    }\n    get midi() {\n        return Math.floor(this.ps);\n    }\n    get ps() {\n        let accidentalAlter = 0;\n        if (this.accidental !== undefined) {\n            accidentalAlter = parseInt(this.accidental.alter);\n        }\n        return (\n            (this.octave + 1) * 12\n            + pitch.nameToMidi[this.step]\n            + accidentalAlter\n        );\n    }\n    set ps(ps) {\n        this.name = pitch.midiToName[common.posMod(ps, 12)];\n        this.octave = Math.floor(ps / 12) - 1;\n        this.spellingIsInferred = true;\n    }\n\n    get unicodeName() {\n        if (this.accidental !== undefined) {\n            return this.step + this.accidental.unicodeModifier();\n        } else {\n            return this.step;\n        }\n    }\n    \n    get unicodeNameWithOctave() {\n        if (this.octave === undefined) {\n            return this.unicodeName;\n        } else {\n            return this.unicodeName + this.octave.toString();\n        }\n    }\n    \n    /**\n     * @param {boolean} inPlace\n     * @param {Int} directionInt -- -1 = down, 1 = up\n     */\n    _getEnharmonicHelper(inPlace=false, directionInt) {\n        // differs from Python version because\n        // cannot import interval here.\n        let octaveStored = true;\n        if (this.octave === undefined) {\n            octaveStored = false;\n        }\n        const p = this.clone();\n        p.diatonicNoteNum += directionInt;\n        if (p.accidental === undefined) {\n            p.accidental = new Accidental(0);\n        }\n        while (p.ps % 12 !== this.ps % 12) { // octaveless\n            p.accidental.alter += -1 * directionInt;\n        }\n\n        if (!inPlace) {\n            return p;\n        }\n        this.step = p.step;\n        this.accidental = p.accidental;\n        if (p.microtone === undefined) {\n            this.microtone = p.microtone;\n        }\n        if (!octaveStored) {\n            this.octave = undefined;\n        } else {\n            this.octave = p.octave;\n        }\n        return p;\n    }\n\n    getHigherEnharmonic(inPlace=false) {\n        return this._getEnharmonicHelper(inPlace, 1);\n    }\n\n    getLowerEnharmonic(inPlace=false) {\n        return this._getEnharmonicHelper(inPlace, -1);\n    }\n    /* TODO: isEnharmonic, getEnharmonic, getAllCommonEnharmonics */\n\n    /**\n     * Returns the vexflow name for the pitch in the given clef.\n     *\n     * @memberof music21.pitch.Pitch#\n     * @param {clef.Clef} clefObj - the active {@link music21.clef.Clef} object\n     * @returns {String} - representation in vexflow\n     */\n    vexflowName(clefObj) {\n        // returns a vexflow Key name for this pitch.\n        let tempPitch = this;\n        if (clefObj !== undefined) {\n            try {\n                tempPitch = clefObj.convertPitchToTreble(this);\n            } catch (e) {\n                console.log(e, clefObj);\n            }\n        }\n        let accidentalType = 'n';\n        if (this.accidental !== undefined) {\n            accidentalType = this.accidental.vexflowModifier;\n        }\n        const outName\n            = tempPitch.step + accidentalType + '/' + tempPitch.octave;\n        return outName;\n    }\n}\npitch.Pitch = Pitch;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/note -- Note, Rest, NotRest, GeneralNote\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as Vex from 'vexflow';\n\nimport { prebase } from './prebase.js';\nimport { base } from './base.js';\nimport { debug } from './debug.js';\nimport { pitch } from './pitch.js';\nimport { beam } from './beam.js';\nimport { common } from './common.js';\n\n/**\n * Module for note classes. See the namespace {@link music21.note}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/beam\n * @exports music21/note\n */\n/**\n * Namespace for notes (single pitch) or rests, and some things like Lyrics that go on notes.\n *\n * @namespace music21.note\n * @memberof music21\n * @property {Array} noteheadTypeNames - an Array of allowable notehead names.\n * @property {Array} stemDirectionNames - an Array of allowable stemDirection names.\n */\nexport const note = {};\n\nnote.noteheadTypeNames = [\n    'arrow down',\n    'arrow up',\n    'back slashed',\n    'circle dot',\n    'circle-x',\n    'circled',\n    'cluster',\n    'cross',\n    'diamond',\n    'do',\n    'fa',\n    'inverted triangle',\n    'la',\n    'left triangle',\n    'mi',\n    'none',\n    'normal',\n    'other',\n    're',\n    'rectangle',\n    'slash',\n    'slashed',\n    'so',\n    'square',\n    'ti',\n    'triangle',\n    'x',\n];\n\nnote.stemDirectionNames = [\n    'double',\n    'down',\n    'noStem',\n    'none',\n    'unspecified',\n    'up',\n];\n\n/**\n * Class for a single Lyric attached to a {@link music21.note.GeneralNote}\n *\n * @class Lyric\n * @memberOf music21.note\n * @extends music21.prebase.ProtoM21Object\n * @param {string} text - the text of the lyric\n * @param {number} number=1 - the lyric number\n * @param {string} syllabic=undefined - placement of the syllable ('begin', 'middle', 'end', 'single'); undefined = interpret from text\n * @param {boolean} applyRaw=false - true = display the text exactly as it is or, false = use \"-\" etc. to determine syllabic\n * @param {string} identifier=undefined - identifier for the lyric.\n * @property {string} lyricConnector='-' - what to place between two lyrics that are syllabic.\n * @property {string} text - the text of the lyric syllable.\n * @property {string} syllabic - see above\n * @property {boolean} applyRaw - see above\n * @property {string} identifier - see above; gets .number if undefined\n * @property {number} number - see above\n * @property {string} rawText - text + any connectors\n */\nexport class Lyric extends prebase.ProtoM21Object {\n    constructor(text, number = 1, syllabic, applyRaw, identifier) {\n        super();\n        this.lyricConnector = '-'; // override to place something else between two notes...\n        this.text = text;\n        this._number = number;\n        this.syllabic = syllabic;\n        this.applyRaw = applyRaw || false;\n        this.setTextAndSyllabic(this.text, this.applyRaw);\n        this._identifier = identifier;\n        this.style = {\n            fillStyle: 'black',\n            strokeStyle: 'black',\n            fontFamily: 'Serif',\n            fontSize: 12,\n            fontWeight: '',\n        };\n    }\n    get identifier() {\n        return this._identifier || this._number;\n    }\n    set identifier(i) {\n        this._identifier = i;\n    }\n    // a property just to match m21p\n    get number() {\n        return this._number;\n    }\n    set number(n) {\n        this._number = n;\n    }\n\n    /**\n     * get rawText - gets the raw text.\n     *\n     * @return {string}  raw text\n     */\n    get rawText() {\n        if (this.syllabic === 'begin') {\n            return this.text + this.lyricConnector;\n        } else if (this.syllabic === 'middle') {\n            return this.lyricConnector + this.text + this.lyricConnector;\n        } else if (this.syllabic === 'end') {\n            return this.lyricConnector + this.text;\n        } else {\n            return this.text;\n        }\n    }\n    set rawText(t) {\n        this.setTextAndSyllabic(t, true);\n    }\n\n    /**\n     * setTextAndSyllabic - Given a setting for rawText and applyRaw,\n     *     sets the syllabic type for a lyric based on the rawText\n     *\n     * @param  {string} rawText text\n     * @param  {boolean} applyRaw = false if hyphens should not be applied\n     * @return {undefined}\n     */\n    setTextAndSyllabic(rawText, applyRaw = false) {\n        if (rawText === undefined) {\n            this.text = undefined;\n            return this;\n        }\n\n        if (\n            !applyRaw\n            && rawText.indexOf(this.lyricConnector) === 0\n            && rawText.slice(-1) === this.lyricConnector\n        ) {\n            this.text = rawText.slice(1, -1);\n            this.syllabic = 'middle';\n        } else if (!applyRaw && rawText.indexOf(this.lyricConnector) === 0) {\n            this.text = rawText.slice(1);\n            this.syllabic = 'end';\n        } else if (!applyRaw && rawText.slice(-1) === this.lyricConnector) {\n            this.text = rawText.slice(0, -1);\n            this.syllabic = 'begin';\n        } else {\n            this.text = rawText;\n            if (this.syllabic === undefined) {\n                this.syllabic = 'single';\n            }\n        }\n        return this;\n    }\n}\nnote.Lyric = Lyric;\n\n/* Notes and rests etc... */\n\n/**\n * Superclass for all Note values\n *\n * @class GeneralNote\n * @memberof music21.note\n * @extends music21.base.Music21Object\n * @param {(number|undefined)} [ql=1.0] - quarterLength of the note\n * @property {boolean} [isChord=false] - is this a chord\n * @property {number} quarterLength - shortcut to `.duration.quarterLength`\n * @property {object} activeVexflowNote - most recent Vex.Flow.StaveNote object to be made from this note (could change); default, undefined\n * @property {Array<music21.expressions.Expression>} expressions - array of attached expressions\n * @property {Array<music21.articulations.Articulation>} articulations - array of attached articulations\n * @property {string} lyric - the text of the first {@link music21.note.Lyric} object; can also set one.\n * @property {Array<music21.note.Lyric>} lyrics - array of attached lyrics\n * @property {number} [volume=60] - how loud is this note, 0-127, before articulations\n * @property {number} midiVolume - how loud is this note, taking into account articulations\n * @property {music21.note.Tie|undefined} [tie=undefined] - a tie object\n */\nexport class GeneralNote extends base.Music21Object {\n    constructor(ql) {\n        super();\n        this.isChord = false;\n        if (ql !== undefined) {\n            this.duration.quarterLength = ql;\n        } else {\n            this.duration.quarterLength = 1.0;\n        }\n        this.volume = 60;\n        this.activeVexflowNote = undefined;\n        this.expressions = [];\n        this.articulations = [];\n        this.lyrics = [];\n        this.tie = undefined;\n        /* TODO: editorial objects, color, addLyric, insertLyric, hasLyrics */\n        /* Later: augmentOrDiminish, getGrace, */\n    }\n    get lyric() {\n        if (this.lyrics.length > 0) {\n            return this.lyrics[0].text;\n        } else {\n            return undefined;\n        }\n    }\n    set lyric(value) {\n        this.lyrics = [];\n        if (value !== undefined && value !== false) {\n            this.lyrics.push(new note.Lyric(value));\n        }\n    }\n    get midiVolume() {\n        let volume = this.volume;\n        if (volume === undefined) {\n            volume = 60;\n        }\n        if (this.articulations !== undefined) {\n            this.articulations.forEach(a => {\n                volume *= a.dynamicScale;\n                if (volume > 127) {\n                    volume = 127;\n                } else if (isNaN(volume)) {\n                    volume = 60;\n                }\n            });\n        }\n        volume = Math.floor(volume);\n        return volume;\n    }\n    /**\n     * Add a {@link music21.note.Lyric} object to the Note\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {string} text - text to be added\n     * @param {number} [lyricNumber] - integer specifying lyric (defaults to the current `.lyrics.length` + 1)\n     * @param {boolean} [applyRaw=false] - if `true`, do not parse the text for cluses about syllable placement.\n     * @param {string} [lyricIdentifier] - an optional identifier\n     */\n    addLyric(text, lyricNumber, applyRaw = false, lyricIdentifier) {\n        if (lyricNumber === undefined) {\n            const maxLyrics = this.lyrics.length + 1;\n            const newLyric = new note.Lyric(\n                text,\n                maxLyrics,\n                undefined,\n                applyRaw,\n                lyricIdentifier\n            );\n            this.lyrics.push(newLyric);\n        } else {\n            let foundLyric = false;\n            for (let i = 0; i < this.lyrics.length; i++) {\n                const thisLyric = this.lyrics[i];\n                if (thisLyric.number === lyricNumber) {\n                    thisLyric.text = text;\n                    foundLyric = true;\n                    break;\n                }\n            }\n            if (foundLyric === false) {\n                const newLyric = new note.Lyric(\n                    text,\n                    lyricNumber,\n                    undefined,\n                    applyRaw,\n                    lyricIdentifier\n                );\n                this.lyrics.push(newLyric);\n            }\n        }\n    }\n    /**\n     * Change stem direction according to clef. Does nothing for GeneralNote; overridden in subclasses.\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {undefined}\n     */\n    setStemDirectionFromClef(clef) {\n        return undefined;\n    }\n    /**\n     * Sets the vexflow accidentals (if any), the dots, and the stem direction\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {Vex.Flow.StaveNote} vfn - a Vex.Flow note\n     * @param {object\n     */\n    vexflowAccidentalsAndDisplay(vfn, options) {\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (debug) {\n            console.log(this.stemDirection);\n        }\n        if (this.stemDirection === 'noStem') {\n            vfn.hasStem = () => false; // need to override...\n            // vfn.render_options.stem_height = 0;\n        } else {\n            // correct VexFlow stem length for notes far from the center line;\n            let staveDNNSpacing = 5;\n            if (options.stave) {\n                staveDNNSpacing = Math.floor(\n                    options.stave.options.spacing_between_lines_px / 2\n                );\n            }\n            if (options.clef !== undefined && this.pitch !== undefined) {\n                const midLine = options.clef.lowestLine + 4;\n                // console.log(midLine);\n                const absDNNfromCenter = Math.abs(\n                    this.pitch.diatonicNoteNum - midLine\n                );\n                const absOverOctave = absDNNfromCenter - 7;\n                // console.log(absOverOctave);\n                if (absOverOctave > 0 && vfn.getStemLength !== undefined) {\n                    const stemHeight\n                        = absOverOctave * staveDNNSpacing + vfn.getStemLength();\n                    vfn.setStemLength(stemHeight);\n                }\n            }\n        }\n    }\n    /**\n     * Play the current element as a MIDI note.\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {number} [tempo=120] - tempo in bpm\n     * @param {(base.Music21Object)} [nextElement] - for determining the length to play in case of tied notes, etc.\n     * @param {object} [options] - other options (currently just `{instrument: {@link music21.instrument.Instrument} }`)\n     * @returns {Number} - delay time in milliseconds until the next element (may be ignored)\n     */\n    playMidi(tempo = 120, nextElement, options) {\n        // returns the number of milliseconds to the next element in\n        // case that can't be determined otherwise.\n        if (options === undefined) {\n            let inst;\n            if (this.activeSite !== undefined) {\n                inst = this.activeSite.instrument;\n            }\n            options = { instrument: inst };\n        }\n\n        const volume = this.midiVolume;\n        let channel = 0;\n        if (options !== undefined && options.instrument !== undefined) {\n            channel = options.instrument.midiChannel;\n        }\n        let milliseconds = 60 * 1000 / tempo;\n        const ql = this.duration.quarterLength;\n        milliseconds = 60 * ql * 1000 / tempo;\n        let midNum;\n        if (this.isClassOrSubclass('Note')) {\n            // Note, not rest\n            midNum = this.pitch.midi;\n            let stopTime = milliseconds / 1000;\n            if (\n                nextElement !== undefined\n                && nextElement.isClassOrSubclass('Note')\n            ) {\n                if (nextElement.pitch.midi !== this.pitch.midi) {\n                    stopTime += 60 * 0.25 / tempo; // legato -- play 16th note longer\n                } else if (\n                    this.tie !== undefined\n                    && (this.tie.type === 'start' || this.tie.type === 'continue')\n                ) {\n                    stopTime += 60 * nextElement.duration.quarterLength / tempo;\n                    // this does not take into account 3 or more notes tied.\n                    // TODO: look ahead at next nexts, etc.\n                }\n            } else if (nextElement === undefined) {\n                // let last note ring an extra beat...\n                stopTime += 60 * 1 / tempo;\n            }\n            // console.log(stopTime);\n            // console.log(this.tie);\n            if (this.tie === undefined || this.tie.type === 'start') {\n                // console.log(volume);\n                MIDI.noteOn(channel, midNum, volume, 0);\n                MIDI.noteOff(channel, midNum, stopTime);\n            } // else { console.log ('not going to play ', this.nameWithOctave); }\n        } else if (this.isClassOrSubclass('Chord')) {\n            // TODO: Tied Chords.\n            for (let j = 0; j < this._notes.length; j++) {\n                midNum = this._notes[j].pitch.midi;\n                MIDI.noteOn(channel, midNum, volume, 0);\n                MIDI.noteOff(channel, midNum, milliseconds / 1000);\n            }\n        } // it's a note.Rest -- do nothing -- milliseconds takes care of it...\n        return milliseconds;\n    }\n}\nnote.GeneralNote = GeneralNote;\n\n/**\n * Specifies that a GeneralNote is not a rest (Unpitched, Note, Chord).\n *\n * @class NotRest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in quarter notes\n * @property {music21.beam.Beams} beams - a link to a beam object\n * @property {string} [notehead='normal'] - notehead type\n * @property {string} [noteheadFill='default'] - notehead fill (to be moved to style...)\n * @property {string|undefined} [noteheadColor=undefined] - notehead color\n * @property {boolean} [noteheadParenthesis=false] - put a parenthesis around the notehead?\n * @property {string|undefined} [stemDirection=undefined] - One of ['up','down','noStem', undefined] -- 'double' not supported\n */\nexport class NotRest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.notehead = 'normal';\n        this.noteheadFill = 'default';\n        this.noteheadColor = 'black';\n        this.noteheadParenthesis = false;\n        this.volume = undefined; // not a real object yet.\n        this.beams = new beam.Beams();\n        /* TODO: this.duration.linkage -- need durationUnits */\n        this.stemDirection = undefined;\n        /* TODO: check stemDirection, notehead, noteheadFill, noteheadParentheses */\n    }\n}\nnote.NotRest = NotRest;\n\n/* ------- Note ----------- */\n/**\n * A very, very important class! music21.note.Note objects combine a {@link music21.pitch.Pitch}\n * object to describe pitch (highness/lowness) with a {@link music21.duration.Duration} object\n * that defines length, with additional features for drawing the Note, playing it back, etc.\n *\n * Together with {@link music21.stream.Stream} one of the two most important\n * classes in `music21`.\n *\n * See {@link music21.note.NotRest}, {@link music21.note.GeneralNote}, {@link music21.base.Music21Object}\n * and {@link music21.prebase.ProtoM21Object} (or in general, the **extends** list below) for other\n * things you can do with a `Note` object.\n *\n * Missing from music21p: `microtone, pitchClass, pitchClassString, transpose(), fullName`.\n *\n * @class Note\n * @memberof music21.note\n * @extends music21.note.NotRest\n * @param {(string|music21.pitch.Pitch|undefined)} [nn='C4'] - pitch name (\"C\", \"D#\", \"E-\") w/ or w/o octave (\"C#4\"), or a pitch.Pitch object\n * @param {(number|undefined)} [ql=1.0] - length in quarter notes\n * @property {Boolean} [isNote=true] - is it a Note? Yes!\n * @property {Boolean} [isRest=false] - is it a Rest? No!\n * @property {music21.pitch.Pitch} pitch - the {@link music21.pitch.Pitch} associated with the Note.\n * @property {string} name - shortcut to `.pitch.name`\n * @property {string} nameWithOctave - shortcut to `.pitch.nameWithOctave`\n * @property {string} step - shortcut to `.pitch.step`\n * @property {number} octave - shortcut to `.pitch.octave`\n */\nexport class Note extends NotRest {\n    constructor(nn, ql) {\n        super(ql);\n        this.isNote = true; // for speed\n        this.isRest = false; // for speed\n        if (\n            nn !== undefined\n            && nn.isClassOrSubclass !== undefined\n            && nn.isClassOrSubclass('Pitch') === true\n        ) {\n            this.pitch = nn;\n        } else {\n            this.pitch = new pitch.Pitch(nn);\n        }\n    }\n    get name() {\n        return this.pitch.name;\n    }\n    set name(nn) {\n        this.pitch.name = nn;\n    }\n    get nameWithOctave() {\n        return this.pitch.nameWithOctave;\n    }\n    set nameWithOctave(nn) {\n        this.pitch.nameWithOctave = nn;\n    }\n    get step() {\n        return this.pitch.step;\n    }\n    set step(nn) {\n        this.pitch.step = nn;\n    }\n    // no Frequency\n    get octave() {\n        return this.pitch.octave;\n    }\n    set octave(nn) {\n        this.pitch.octave = nn;\n    }\n    /* TODO: transpose, fullName, microtone, pitchclass, pitchClassString */\n    /**\n     * Change stem direction according to clef.\n     *\n     * @memberof music21.note.Note\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {music21.note.Note} Original object, for chaining methods\n     */\n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            const DNNfromCenter = this.pitch.diatonicNoteNum - midLine;\n            // console.log(DNNfromCenter, this.pitch.nameWithOctave);\n            if (DNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this note.\n     *\n     * @memberof music21.note.Note\n     * @param {object} [options={}] - `{clef: {@link music21.clef.Clef} }`\n     * clef to set the stem direction of.\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const params = {};\n        common.merge(params, options);\n        const clef = params.clef;\n\n        // fixup stem direction -- must happen before Vex.Flow.Note is created...\n        if (\n            this.activeSite !== undefined\n            && this.activeSite.renderOptions.stemDirection !== undefined\n            && note.stemDirectionNames.includes(\n                this.activeSite.renderOptions.stemDirection\n            )\n        ) {\n            this.stemDirection = this.activeSite.renderOptions.stemDirection;\n        } else if (\n            this.stemDirection === undefined\n            && options.clef !== undefined\n        ) {\n            this.setStemDirectionFromClef(options.clef);\n        }\n\n        if (this.duration === undefined) {\n            // console.log(this);\n            return undefined;\n        }\n        const vfd = this.duration.vexflowDuration;\n        if (vfd === undefined) {\n            return undefined;\n        }\n        const vexflowKey = this.pitch.vexflowName(clef);\n\n        const vfnStemDirection\n            = this.stemDirection === 'down'\n                ? Vex.Flow.StaveNote.STEM_DOWN\n                : Vex.Flow.StaveNote.STEM_UP;\n\n        //        const vfnStemDirection = -1;\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [vexflowKey],\n            duration: vfd,\n            stem_direction: vfnStemDirection,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, params); // clean up stuff...\n        if (this.pitch.accidental !== undefined) {\n            if (\n                this.pitch.accidental.vexflowModifier !== 'n'\n                && this.pitch.accidental.displayStatus !== false\n            ) {\n                vfn.addAccidental(\n                    0,\n                    new Vex.Flow.Accidental(\n                        this.pitch.accidental.vexflowModifier\n                    )\n                );\n            } else if (\n                this.pitch.accidental.displayType === 'always'\n                || this.pitch.accidental.displayStatus === true\n            ) {\n                vfn.addAccidental(\n                    0,\n                    new Vex.Flow.Accidental(\n                        this.pitch.accidental.vexflowModifier\n                    )\n                );\n            }\n        }\n\n        if (this.articulations[0] !== undefined) {\n            for (let i = 0; i < this.articulations.length; i++) {\n                const art = this.articulations[i];\n                // 0 refers to the first pitch (for chords etc.)...\n                vfn.addArticulation(0, art.vexflow());\n            }\n        }\n        if (this.expressions[0] !== undefined) {\n            for (let j = 0; j < this.expressions.length; j++) {\n                const exp = this.expressions[j];\n                // 0 refers to the first pitch (for chords etc.)...\n                vfn.addArticulation(0, exp.vexflow());\n            }\n        }\n        if (this.noteheadColor !== undefined) {\n            vfn.setStyle({ fillStyle: this.noteheadColor, strokeStyle: this.noteheadColor });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Note = Note;\n\n/* ------ TODO: Unpitched ------ */\n\n/* ------ Rest ------ */\n\n/**\n * Represents a musical rest.\n *\n * @class Rest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in number of quarterNotes\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=true]\n * @property {string} [name='rest']\n * @property {number} [lineShift=undefined] - number of lines to shift up or down from default\n * @property {string|undefined} [color='black'] - color of the rest\n */\nexport class Rest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.isNote = false; // for speed\n        this.isRest = true; // for speed\n        this.name = 'rest'; // for note compatibility\n        this.lineShift = undefined;\n        this.color = 'black';\n    }\n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this rest.\n     * Corrects for bug in VexFlow that renders a whole rest too low.\n     *\n     * @memberof music21.note.Rest\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        let keyLine = 'b/4';\n        if (this.duration.type === 'whole') {\n            if (\n                this.activeSite !== undefined\n                && this.activeSite.renderOptions.staffLines !== 1\n            ) {\n                keyLine = 'd/5';\n            }\n        }\n        if (this.lineShift !== undefined) {\n            const p = new pitch.Pitch('B4');\n            let ls = this.lineShift;\n            if (this.duration.type === 'whole') {\n                ls += 2;\n            }\n            p.diatonicNoteNum += ls;\n            keyLine = p.vexflowName(undefined);\n        }\n\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [keyLine],\n            duration: this.duration.vexflowDuration + 'r',\n        });\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (this.color !== undefined) {\n            vfn.setStyle({ fillStyle: this.color, strokeStyle: this.color });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Rest = Rest;\n\n/* ------ SpacerRest ------ */\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/interval -- Interval routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { note } from './note.js';\nimport { prebase } from './prebase.js';\nimport { pitch } from './pitch.js';\n\n/**\n * interval module. See {@link music21.interval} for namespace\n *\n * @exports music21/interval\n */\n/**\n * Interval related objects\n *\n * @namespace music21.interval\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/pitch\n */\nexport const interval = {};\n\n/**\n * Interval Directions as an Object/map\n *\n * @memberof music21.interval\n * @example\n * if (music21.interval.Direction.OBLIQUE >\n *     music21.interval.Direction.ASCENDING ) {\n *    console.log(music21.interval.Direction.DESCENDING);\n * }\n *\n */\ninterval.Direction = {\n    DESCENDING: -1,\n    OBLIQUE: 0,\n    ASCENDING: 1,\n};\n\n/**\n * N.B. a dict in music21p -- the indexes here let Direction call them + 1\n *\n * @memberof music21.interval\n * @example\n * console.log(music21.interval.IntervalDirectionTerms[music21l.interval.Direction.OBLIQUE + 1])\n * // \"Oblique\"\n */\ninterval.IntervalDirectionTerms = ['Descending', 'Oblique', 'Ascending'];\n\n/**\n * ordinals for music terms...\n *\n * @memberof music21.interval\n * @example\n * for (var i = 1; // N.B. 0 = undefined\n *      i < music21.interval.MusicOrdinals.length;\n *      i++) {\n *     console.log(i, music21.interval.MusicOrdinals[i]);\n * }\n * // 1, Unison\n * // 2, Second\n * // 3, Third\n * // ...\n * // 8, Octave\n * // ...\n * // 15, Double Octave\n */\ninterval.MusicOrdinals = [\n    undefined,\n    'Unison',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n    'Sixth',\n    'Seventh',\n    'Octave',\n    'Ninth',\n    'Tenth',\n    'Eleventh',\n    'Twelfth',\n    'Thirteenth',\n    'Fourteenth',\n    'Double Octave',\n];\n\n/**\n * Represents an interval such as unison, second, etc.\n *\n * Properties are demonstrated below.\n *\n * @class GenericInterval\n * @memberof music21.interval\n * @param {Int} [gi=1] - generic interval (1 or higher, or -2 or lower)\n * @example\n * var gi = new music21.interval.GenericInterval(-14)\n * gi.value\n * // -14\n * gi.directed\n * // -14\n * gi.undirected\n * // 14\n * gi.direction == music21.interval.Direction.DESCENDING\n * // true\n * gi.isSkip\n * // true\n * gi.isStep\n * // false\n * gi.isDiatonicStep\n * // false  // augmented unisons are not diatonicSteps but can't tell yet..\n * gi.isUnison\n * // false\n * gi.simpledDirected\n * // -7\n * gi.simpleUndirected\n * // 7\n * gi.undirectedOctaves\n * // 1\n * gi.semiSimpleUndirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.semiSimpleDirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.perfectable\n * // false\n * gi.niceName\n * // \"Fourteenth\"\n * gi.directedNiceName\n * // \"Descending Fourteenth\"\n * gi.simpleNiceName\n * // \"Seventh\"\n * gi.staffDistance\n * // -13\n * gi.mod7inversion\n * // 2  // sevenths invert to seconds\n *\n */\nexport class GenericInterval extends prebase.ProtoM21Object {\n    constructor(gi) {\n        super();\n        if (gi === undefined) {\n            gi = 1;\n        }\n        this.value = gi; // todo: convertGeneric() from python\n        this.directed = this.value;\n        this.undirected = Math.abs(this.value);\n\n        if (this.directed === 1) {\n            this.direction = interval.Direction.OBLIQUE;\n        } else if (this.directed < 0) {\n            this.direction = interval.Direction.DESCENDING;\n        } else if (this.directed > 1) {\n            this.direction = interval.Direction.ASCENDING;\n        }\n        // else (raise exception)\n\n        if (this.undirected > 2) {\n            this.isSkip = true;\n        } else {\n            this.isSkip = false;\n        }\n\n        if (this.undirected === 2) {\n            this.isDiatonicStep = true;\n        } else {\n            this.isDiatonicStep = false;\n        }\n\n        this.isStep = this.isDiatonicStep;\n\n        if (this.undirected === 1) {\n            this.isUnison = true;\n        } else {\n            this.isUnison = false;\n        }\n\n        let tempSteps = common.posMod(this.undirected, 7);\n        let tempOctaves = parseInt(this.undirected / 7);\n        if (tempSteps === 0) {\n            tempOctaves -= 1;\n            tempSteps = 7;\n        }\n        this.simpleUndirected = tempSteps;\n        this.undirectedOctaves = tempOctaves;\n        if (tempSteps === 1 && tempOctaves >= 1) {\n            this.semiSimpleUndirected = 8;\n        } else {\n            this.semiSimpleUndirected = this.simpleUndirected;\n        }\n\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.octaves = -1 * tempOctaves;\n            if (tempSteps !== 1) {\n                this.simpleDirected = -1 * tempSteps;\n            } else {\n                this.simpleDirected = 1; // no descending unisons...\n            }\n            this.semiSimpleDirected = -1 * this.semiSimpleUndirected;\n        } else {\n            this.octaves = tempOctaves;\n            this.simpleDirected = tempSteps;\n            this.semiSimpleDirected = this.semiSimpleUndirected;\n        }\n        if (\n            this.simpleUndirected === 1\n            || this.simpleUndirected === 4\n            || this.simpleUndirected === 5\n        ) {\n            this.perfectable = true;\n        } else {\n            this.perfectable = false;\n        }\n\n        if (this.undirected < interval.MusicOrdinals.length) {\n            this.niceName = interval.MusicOrdinals[this.undirected];\n        } else {\n            this.niceName = this.undirected.toString();\n        }\n\n        this.simpleNiceName = interval.MusicOrdinals[this.simpleUndirected];\n        this.semiSimpleNiceName\n            = interval.MusicOrdinals[this.semiSimpleUndirected];\n\n        if (Math.abs(this.directed) === 1) {\n            this.staffDistance = 0;\n        } else if (this.directed > 1) {\n            this.staffDistance = this.directed - 1;\n        } else if (this.directed < -1) {\n            this.staffDistance = this.directed + 1;\n        }\n        // else: raise IntervalException(\"Non-integer, -1, or 0 not permitted as a diatonic interval\")\n\n        // 2 -> 7; 3 -> 6; 8 -> 1 etc.\n        this.mod7inversion = 9 - this.semiSimpleUndirected;\n\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.mod7 = this.mod7inversion; // see chord.semitonesFromChordStep for usage...\n        } else {\n            this.mod7 = this.simpleDirected;\n        }\n    }\n\n    /**\n     * Returns a new GenericInterval which is the mod7inversion; 3rds (and 10ths etc.) to 6ths, etc.\n     *\n     * @memberof music21.interval.GenericInterval\n     * @returns {music21.interval.GenericInterval}\n     */\n    complement() {\n        return new interval.GenericInterval(this.mod7inversion);\n    }\n\n    /**\n     * Returns a new GenericInterval which has the opposite direction (descending becomes ascending, etc.)\n     *\n     * @memberof music21.interval.GenericInterval\n     * @returns {music21.interval.GenericInterval}\n     */\n    reverse() {\n        if (this.undirected === 1) {\n            return new interval.GenericInterval(1);\n        } else {\n            return new interval.GenericInterval(\n                this.undirected * (-1 * this.direction)\n            );\n        }\n    }\n    /**\n     * Given a specifier, return a new DiatonicInterval with this generic.\n     *\n     * @memberof music21.interval.GenericInterval\n     * @param {string|Int} specifier - a specifier such as \"P\",\"m\",\"M\",\"A\",\"dd\" etc.\n     * @returns {music21.interval.DiatonicInterval}\n     */\n    getDiatonic(specifier) {\n        return new interval.DiatonicInterval(specifier, this);\n    }\n\n    /**\n     * Transpose a pitch by this generic interval, maintaining accidentals\n     *\n     * @memberof music21.interval.GenericInterval\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        const pitch2 = new pitch.Pitch();\n        pitch2.step = p.step;\n        pitch2.octave = p.octave;\n\n        const oldDiatonicNum = p.diatonicNoteNum;\n\n        const distanceToMove = this.staffDistance;\n\n        // if not reverse...\n        const newDiatonicNumber = oldDiatonicNum + distanceToMove;\n        const [newStep, newOctave] = interval.convertDiatonicNumberToStep(\n            newDiatonicNumber\n        );\n        pitch2.step = newStep;\n        pitch2.octave = newOctave;\n        if (p.accidental !== undefined) {\n            pitch2.accidental = new pitch.Accidental(p.accidental.name);\n        }\n        return pitch2;\n    }\n}\ninterval.GenericInterval = GenericInterval;\n\ninterval.IntervalSpecifiersEnum = {\n    PERFECT: 1,\n    MAJOR: 2,\n    MINOR: 3,\n    AUGMENTED: 4,\n    DIMINISHED: 5,\n    DBLAUG: 6,\n    DBLDIM: 7,\n    TRPAUG: 8,\n    TRPDIM: 9,\n    QUADAUG: 10,\n    QUADDIM: 11,\n};\n\ninterval.IntervalNiceSpecNames = [\n    'ERROR',\n    'Perfect',\n    'Major',\n    'Minor',\n    'Augmented',\n    'Diminished',\n    'Doubly-Augmented',\n    'Doubly-Diminished',\n    'Triply-Augmented',\n    'Triply-Diminished',\n    'Quadruply-Augmented',\n    'Quadruply-Diminished',\n];\ninterval.IntervalPrefixSpecs = [\n    undefined,\n    'P',\n    'M',\n    'm',\n    'A',\n    'd',\n    'AA',\n    'dd',\n    'AAA',\n    'ddd',\n    'AAAA',\n    'dddd',\n];\n\ninterval.IntervalOrderedPerfSpecs = [\n    'dddd',\n    'ddd',\n    'dd',\n    'd',\n    'P',\n    'A',\n    'AA',\n    'AAA',\n    'AAAA',\n];\n\ninterval.IntervalPerfSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.PERFECT,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalPerfOffset = 4;\n\ninterval.IntervalOrderedImperfSpecs = [\n    'dddd',\n    'ddd',\n    'dd',\n    'd',\n    'm',\n    'M',\n    'A',\n    'AA',\n    'AAA',\n    'AAAA',\n];\n\ninterval.IntervalSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.MINOR,\n    interval.IntervalSpecifiersEnum.MAJOR,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalMajOffset = 5;\n\ninterval.IntervalSemitonesGeneric = {\n    1: 0,\n    2: 2,\n    3: 4,\n    4: 5,\n    5: 7,\n    6: 9,\n    7: 11,\n};\ninterval.IntervalAdjustPerfect = {\n    P: 0,\n    A: 1,\n    AA: 2,\n    AAA: 3,\n    AAAA: 4,\n    d: -1,\n    dd: -2,\n    ddd: -3,\n    dddd: -4,\n}; // offset from Perfect\n\ninterval.IntervalAdjustImperf = {\n    M: 0,\n    m: -1,\n    A: 1,\n    AA: 2,\n    AAA: 3,\n    AAAA: 4,\n    d: -2,\n    dd: -3,\n    ddd: -4,\n    dddd: -5,\n}; // offset from major\n\n/**\n * Represents a Diatonic interval.  See example for usage.\n *\n * @class DiatonicInterval\n * @memberof music21.interval\n * @param {string|Int|undefined} [specifier='P'] - a specifier such as \"P\", \"d\", \"m\", \"M\" etc.\n * @param {music21.interval.GenericInterval|Int} [generic=1] - a `GenericInterval` object or a number to be converted to one\n * @example\n * var di = new music21.interval.DiatonicInterval(\"M\", 10);\n * di.generic.isClassOrSubclass('GenericInterval');\n * // true\n * di.specifierAbbreviation;\n * // 'M'\n * di.name;\n * // 'M10'\n * di.direction == music21.interval.Direction.ASCENDING;\n * // true\n * di.niceName\n * // \"Major Tenth\"\n *\n * // See music21p for more possibilities.\n */\nexport class DiatonicInterval extends prebase.ProtoM21Object {\n    constructor(specifier, generic) {\n        super();\n\n        if (specifier === undefined) {\n            specifier = 'P';\n        }\n        if (generic === undefined) {\n            generic = new interval.GenericInterval(1);\n        } else if (typeof generic === 'number') {\n            generic = new interval.GenericInterval(generic);\n        }\n\n        this.name = '';\n        if (typeof specifier === 'number') {\n            this.specifier = specifier;\n        } else {\n            this.specifier = interval.IntervalPrefixSpecs.indexOf(specifier); // todo: convertSpecifier();\n        }\n        this.generic = generic;\n\n        if (\n            generic.undirected !== 1\n            || specifier === interval.IntervalSpecifiersEnum.PERFECT\n        ) {\n            this.direction = generic.direction;\n        } else if (\n            interval.IntervalPerfSpecifiers.indexOf(specifier)\n            <= interval.IntervalPerfSpecifiers.indexOf(\n                interval.IntervalSpecifiersEnum.DIMINISHED\n            )\n        ) {\n            // diminished unisons -- very controversial\n            this.direction = interval.Direction.DESCENDING;\n        } else {\n            this.direction = interval.Direction.ASCENDING;\n        }\n        const diatonicDirectionNiceName\n            = interval.IntervalDirectionTerms[this.direction + 1];\n        this.name\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.undirected.toString();\n        this.niceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.niceName;\n        this.simpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.simpleUndirected.toString();\n        this.simpleNiceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.simpleNiceName;\n        this.semiSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.semiSimpleUndirected.toString();\n        this.semiSimpleNiceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.semiSimpleNiceName;\n        this.directedName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.directed.toString();\n        this.directedNiceName = diatonicDirectionNiceName + ' ' + this.niceName;\n        this.directedSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.simpleDirected.toString();\n        this.directedSimpleNiceName\n            = diatonicDirectionNiceName + ' ' + this.simpleNiceName;\n        this.directedSemiSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.semiSimpleDirected.toString();\n        this.directedSemiSimpleNiceName\n            = diatonicDirectionNiceName + ' ' + this.semiSimpleNameName;\n        this.specificName = interval.IntervalNiceSpecNames[this.specifier];\n        this.perfectable = generic.perfectable;\n        this.isDiatonicStep = generic.isDiatonicStep;\n        this.isStep = generic.isStep;\n        this.isSkip = generic.isSkip;\n\n        // generate inversions\n        if (this.perfectable) {\n            this.orderedSpecifierIndex = interval.IntervalOrderedPerfSpecs.indexOf(\n                interval.IntervalPrefixSpecs[this.specifier]\n            );\n            this.invertedOrderedSpecIndex\n                = interval.IntervalOrderedPerfSpecs.length\n                - 1\n                - this.orderedSpecifierIndex;\n            this.invertedOrderedSpecifier\n                = interval.IntervalOrderedPerfSpecs[\n                    this.invertedOrderedSpecIndex\n                ];\n        } else {\n            this.orderedSpecifierIndex = interval.IntervalOrderedImperfSpecs.indexOf(\n                interval.IntervalPrefixSpecs[this.specifier]\n            );\n            this.invertedOrderedSpecIndex\n                = interval.IntervalOrderedImperfSpecs.length\n                - 1\n                - this.orderedSpecifierIndex;\n            this.invertedOrderedSpecifier\n                = interval.IntervalOrderedImperfSpecs[\n                    this.invertedOrderedSpecIndex\n                ];\n        }\n\n        this.mod7inversion\n            = this.invertedOrderedSpecifier + generic.mod7inversion.toString();\n        /* ( if (this.direction == interval.Direction.DESCENDING) {\n\t\t\tthis.mod7 = this.mod7inversion;\n\t\t} else {\n\t\t\tthis.mod7 = this.simpleName;\n\t\t} */\n\n        // TODO: reverse()\n        // TODO: property cents\n    }\n\n    /**\n     * Returns a ChromaticInterval object of the same size.\n     *\n     * @memberof music21.interval.DiatonicInterval\n     * @returns {music21.interval.ChromaticInterval}\n     */\n    getChromatic() {\n        const octaveOffset = Math.floor(\n            Math.abs(this.generic.staffDistance) / 7\n        );\n        const semitonesStart\n            = interval.IntervalSemitonesGeneric[this.generic.simpleUndirected];\n        const specName = interval.IntervalPrefixSpecs[this.specifier];\n\n        let semitonesAdjust = 0;\n        if (this.generic.perfectable) {\n            semitonesAdjust = interval.IntervalAdjustPerfect[specName];\n        } else {\n            semitonesAdjust = interval.IntervalAdjustImperf[specName];\n        }\n\n        let semitones = octaveOffset * 12 + semitonesStart + semitonesAdjust;\n\n        // direction should be same as original\n\n        if (this.generic.direction === interval.Direction.DESCENDING) {\n            semitones *= -1;\n        }\n        if (debug) {\n            console.log(\n                'DiatonicInterval.getChromatic -- octaveOffset: ' + octaveOffset\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitonesStart: '\n                    + semitonesStart\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- specName: ' + specName\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitonesAdjust: '\n                    + semitonesAdjust\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitones: ' + semitones\n            );\n        }\n        return new interval.ChromaticInterval(semitones);\n    }\n\n    transposePitch(p) {\n        const fullIntervalObject = new Interval(this, this.getChromatic());\n        return fullIntervalObject.transposePitch(p);\n    }\n\n    get specifierAbbreviation() {\n        return interval.IntervalPrefixSpecs[this.specifier];\n    }\n\n    get cents() {\n        return this.getChromatic().cents;\n    }\n}\ninterval.DiatonicInterval = DiatonicInterval;\n\n/**\n * @class ChromaticInterval\n * @memberof music21.interval\n * @param {number} value - number of semitones (positive or negative)\n * @property {number} cents\n * @property {number} value\n * @property {number} undirected - absolute value of value\n * @property {number} mod12 - reduction to one octave\n * @property {number} intervalClass - reduction to within a tritone (11 = 1, etc.)\n *\n */\nexport class ChromaticInterval extends prebase.ProtoM21Object {\n    constructor(value) {\n        super();\n\n        this.semitones = value;\n        this.cents = Math.round(value * 100.0, 5);\n        this.directed = value;\n        this.undirected = Math.abs(value);\n\n        if (this.directed === 0) {\n            this.direction = interval.Direction.OBLIQUE;\n        } else if (this.directed === this.undirected) {\n            this.direction = interval.Direction.ASCENDING;\n        } else {\n            this.direction = interval.Direction.DESCENDING;\n        }\n\n        this.mod12 = common.posMod(this.semitones, 12);\n        this.simpleUndirected = common.posMod(this.undirected, 12);\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.simpleDirected = -1 * this.simpleUndirected;\n        } else {\n            this.simpleDirected = this.simpleUndirected;\n        }\n\n        this.intervalClass = this.mod12;\n        if (this.mod12 > 6) {\n            this.intervalClass = 12 - this.mod12;\n        }\n\n        if (this.undirected === 1) {\n            this.isChromaticStep = true;\n        } else {\n            this.isChromaticStep = false;\n        }\n    }\n    reverse() {\n        return new interval.ChromaticInterval(\n            this.undirected * (-1 * this.direction)\n        );\n    }\n\n    //  TODO: this.getDiatonic()\n\n    /**\n     * Transposes pitches but does not maintain accidentals, etc.\n     *\n     * @memberof music21.interval.ChromaticInterval\n     * @property {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        let useImplicitOctave = false;\n        if (p.octave === undefined) {\n            // not yet implemented in m21j\n            useImplicitOctave = true;\n        }\n        const pps = p.ps;\n        const newPitch = new pitch.Pitch();\n        newPitch.ps = pps + this.semitones;\n        if (useImplicitOctave) {\n            newPitch.octave = undefined;\n        }\n        return newPitch;\n    }\n}\ninterval.ChromaticInterval = ChromaticInterval;\n\ninterval.IntervalStepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\n/**\n * @function music21.interval.convertDiatonicNumberToStep\n * @memberof music21.interval\n * @param {Int} dn - diatonic number, where 29 = C4, C#4 etc.\n * @returns {Array} two element array of {string} stepName and {Int} octave\n */\ninterval.convertDiatonicNumberToStep = function convertDiatonicNumberToStep(\n    dn\n) {\n    let stepNumber;\n    let octave;\n    if (dn === 0) {\n        return ['B', -1];\n    } else if (dn > 0) {\n        octave = Math.floor((dn - 1) / 7);\n        stepNumber = dn - 1 - octave * 7;\n    } else {\n        // low notes... test, because js(floor) != py(int);\n        octave = Math.floor(dn / 7);\n        stepNumber = dn - 1 - (octave + 1) * 7;\n    }\n    const stepName = interval.IntervalStepNames[stepNumber];\n    return [stepName, octave];\n};\n\n/**\n * This is the main, powerful Interval class.\n *\n * Instantiate with either a string (\"M3\") or two {@link music21.pitch.Pitch} or two {@link music21.note.Note}\n *\n * See music21p instructions for usage.\n *\n * @class Interval\n * @memberof music21.interval\n * @example\n * var n1 = new music21.note.Note(\"C4\");\n * var n2 = new music21.note.Note(\"F#5\");\n * var iv = new music21.interval.Interval(n1, n2);\n * iv.isConsonant();\n * // false\n * iv.semitones;\n * // 18\n * iv.niceName\n * // \"Augmented Eleventh\"\n */\nexport class Interval extends prebase.ProtoM21Object {\n    constructor(...restArgs) {\n        super();\n        // todo: allow full range of ways of specifying as in m21p\n        let noteStart;\n        let noteEnd;\n        if (restArgs.length === 1) {\n            const arg0 = restArgs[0];\n            if (typeof arg0 === 'string') {\n                // simple...\n                const specifier = arg0.replace(/\\d+/, '').replace(/-/, '');\n                let generic = parseInt(arg0.replace(/\\D+/, ''));\n                if (arg0.includes('-')) {\n                    generic *= -1;\n                }\n                const gI = new interval.GenericInterval(generic);\n                const dI = new interval.DiatonicInterval(specifier, gI);\n                this.diatonic = dI;\n                this.chromatic = this.diatonic.getChromatic();\n            } else if (arg0.specifier !== undefined) {\n                // assume diatonic...\n                this.diatonic = arg0;\n                this.chromatic = this.diatonic.getChromatic();\n            } else {\n                console.error('cant parse string arguments to Interval yet');\n            }\n        } else if (restArgs.length === 2) {\n            if (\n                restArgs[0].pitch === undefined\n                && restArgs[0].diatonicNoteNum === undefined\n            ) {\n                this.diatonic = restArgs[0];\n                this.chromatic = restArgs[1];\n            } else {\n                let n1 = restArgs[0];\n                let n2 = restArgs[1];\n                if (n1.classes !== undefined && n1.classes.includes('Pitch')) {\n                    const p1 = n1;\n                    n1 = new note.Note();\n                    n1.pitch = p1;\n                }\n                if (n2.classes !== undefined && n2.classes.includes('Pitch')) {\n                    const p2 = n2;\n                    n2 = new note.Note();\n                    n2.pitch = p2;\n                }\n                const gInt = interval.notesToGeneric(n1, n2);\n                const cInt = interval.notesToChromatic(n1, n2);\n\n                this.diatonic = interval.intervalsToDiatonic(gInt, cInt);\n                this.chromatic = cInt;\n                \n                noteStart = n1;\n                noteEnd = n2;\n            }\n        }\n        this._noteStart = noteStart;\n        this._noteEnd = noteEnd;\n        this.reinit();\n    }\n    get complement() {\n        return new interval.Interval(this.diatonic.mod7inversion);\n    }\n    reinit() {\n        this.direction = this.chromatic.direction;\n        this.specifier = this.diatonic.specifier;\n        this.diatonicType = this.diatonic.specifier;\n        // this.specificName = this.diatonic.specificName;\n        this.generic = this.diatonic.generic;\n\n        this.name = this.diatonic.name;\n        this.niceName = this.diatonic.niceName;\n        this.simpleName = this.diatonic.simpleName;\n        this.simpleNiceName = this.diatonic.simpleNiceName;\n        this.semiSimpleName = this.diatonic.semiSimpleName;\n        this.semiSimpleNiceName = this.diatonic.semiSimpleNiceName;\n\n        this.directedName = this.diatonic.directedName;\n        this.directedNiceName = this.diatonic.directedNiceName;\n        this.directedSimpleName = this.diatonic.directedSimpleName;\n        this.directedSimpleNiceName = this.diatonic.directedSimpleNiceName;\n\n        // other names...\n        this.isDiatonicStep = this.diatonic.isDiatonicStep;\n\n        this.isChromaticStep = this.chromatic.isChromaticStep;\n        this.semitones = this.chromatic.semitones;\n        this.intervalClass = this.chromatic.intervalClass;\n        this.cents = this.chromatic.cents;\n        this.isStep = this.isChromaticStep || this.isDiatonicStep;\n        this.isSkip = this.diatonic.isSkip;\n    }\n\n    get noteStart() {\n        return this._noteStart;\n    }\n    \n    set noteStart(n) {\n        this._noteStart = n;\n        const p1 = n.pitch;\n        const p2 = this.transposePitch(p1);\n        this._noteEnd = n.clone();\n        this._noteEnd.pitch = p2;\n    }\n\n    get noteEnd() {\n        return this._noteEnd;\n    }\n    \n    set noteEnd(n) {\n        this._noteEnd = n;\n        const p1 = n.pitch;\n        const p2 = this.transposePitch(p1, true);\n        this._noteStart = n.clone();\n        this._noteStart.pitch = p2;\n    }\n\n    \n    /**\n     * @memberof music21.interval.Interval\n     * @returns {Boolean}\n     */\n    isConsonant() {\n        const sn = this.simpleName;\n        const consonantNames = ['P5', 'm3', 'M3', 'm6', 'M6', 'P1'];\n        if (consonantNames.indexOf(sn) !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //  todo general: microtones\n    /**\n     * TODO: maxAccidental\n     * \n     * @memberof music21.interval.Interval\n     * @param {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p, { reverse=false, maxAccidental=4 }={}) {\n        /*\n        var useImplicitOctave = false;\n        if (p.octave === undefined) {\n            useImplicitOctave = true;\n        }\n         */\n        const pitch2 = this.diatonic.generic.transposePitch(p);\n        pitch2.accidental = undefined;\n        // step and octave are right now, but not necessarily accidental\n        let halfStepsToFix;\n        if (!reverse) {\n            halfStepsToFix = this.chromatic.semitones - parseInt(pitch2.ps - p.ps);\n        } else {\n            halfStepsToFix = (-1 * this.chromatic.semitones) - parseInt(pitch2.ps - p.ps);\n        }\n        if (halfStepsToFix !== 0) {\n            pitch2.accidental = new pitch.Accidental(halfStepsToFix);\n        }\n        if (debug) {\n            console.log('Interval.transposePitch -- new step ' + pitch2.step);\n            console.log(\n                'Interval.transposePitch -- new octave ' + pitch2.octave\n            );\n            console.log(\n                'Interval.transposePitch -- fixing halfsteps for '\n                    + halfStepsToFix\n            );\n        }\n        return pitch2;\n    }\n}\ninterval.Interval = Interval;\n\ninterval.intervalFromGenericAndChromatic = function intervalFromGenericAndChromatic(\n    gInt,\n    cInt\n) {\n    if (typeof gInt === 'number') {\n        gInt = new GenericInterval(gInt);\n    }\n    if (typeof cInt === 'number') {\n        cInt = new ChromaticInterval(cInt);\n    }\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    const dInt = new DiatonicInterval(specifier, gInt);\n    return new Interval(dInt, cInt);\n};\n/**\n * Convert two notes or pitches to a GenericInterval;\n */\ninterval.notesToGeneric = function notesToGeneric(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    const staffDist = p2.diatonicNoteNum - p1.diatonicNoteNum;\n    const genDist = interval.convertStaffDistanceToInterval(staffDist);\n    return new interval.GenericInterval(genDist);\n};\n\ninterval.convertStaffDistanceToInterval = function convertStaffDistanceToInterval(\n    staffDist\n) {\n    if (staffDist === 0) {\n        return 1;\n    } else if (staffDist > 0) {\n        return staffDist + 1;\n    } else {\n        return staffDist - 1;\n    }\n};\n\ninterval.notesToChromatic = function notesToChromatic(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    return new interval.ChromaticInterval(p2.ps - p1.ps);\n};\n\ninterval.intervalsToDiatonic = function intervalsToDiatonic(gInt, cInt) {\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    // todo -- convert specifier...\n    return new interval.DiatonicInterval(specifier, gInt);\n};\n\ninterval._getSpecifierFromGenericChromatic = function _getSpecifierFromGenericChromatic(\n    gInt,\n    cInt\n) {\n    const noteVals = [undefined, 0, 2, 4, 5, 7, 9, 11];\n    const normalSemis\n        = noteVals[gInt.simpleUndirected] + 12 * gInt.undirectedOctaves;\n    let theseSemis = 0;\n    if (\n        gInt.direction !== cInt.direction\n        && gInt.direction !== interval.Direction.OBLIQUE\n        && cInt.direction !== interval.Direction.OBLIQUE\n    ) {\n        // intervals like d2 and dd2 etc. (the last test doesn't matter, since -1*0 === 0, but in theory it should be there)\n        theseSemis = -1 * cInt.undirected;\n    } else if (gInt.undirected === 1) {\n        theseSemis = cInt.directed; // matters for unison\n    } else {\n        // all normal intervals\n        theseSemis = cInt.undirected;\n    }\n    const semisRounded = Math.round(theseSemis);\n    let specifier = '';\n    if (gInt.perfectable) {\n        specifier\n            = interval.IntervalPerfSpecifiers[\n                interval.IntervalPerfOffset + semisRounded - normalSemis\n            ];\n    } else {\n        specifier\n            = interval.IntervalSpecifiers[\n                interval.IntervalMajOffset + semisRounded - normalSemis\n            ];\n    }\n    return specifier;\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/chord -- Chord\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\n\nimport { Music21Exception } from './exceptions21.js';\nimport { interval } from './interval.js';\nimport { note } from './note.js';\nimport * as chordTables from './chordTables.js';\n\n/**\n * chord Module. See {@link music21.chord} namespace for more details\n *\n * @exports music21/chord\n */\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @namespace music21.chord\n * @memberof music21\n * @requires music21/note\n */\nexport const chord = {};\n\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @class Chord\n * @memberof music21.chord\n * @param {Array<string|music21.note.Note|music21.pitch.Pitch>} [notes] - an Array of strings\n * (see {@link music21.pitch.Pitch} for valid formats), note.Note, or pitch.Pitch objects.\n * @extends music21.note.NotRest\n * @property {number} length - the number of pitches in the Chord (readonly)\n * @property {Array<music21.pitch.Pitch>} pitches - an Array of Pitch objects in the chord. (Consider the Array read only and pass in a new Array to change)\n * @property {Boolean} [isChord=true]\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=false]\n */\nexport class Chord extends note.NotRest {\n    constructor(notes) {\n        super();\n        if (typeof notes === 'undefined') {\n            notes = [];\n        } else if (typeof notes === 'string') {\n            notes = notes.split(/\\s+/);\n        }\n        this.isChord = true; // for speed\n        this.isNote = false; // for speed\n        this.isRest = false; // for speed\n\n        this._overrides = {};\n        this._cache = {};\n\n        this._notes = [];\n        this._chordTablesAddress = undefined;\n        this._chordTablesAddressNeedsUpdating = true; // only update when needed\n\n        notes.forEach(this.add, this, false);\n        if (notes.length > 0\n            && notes[0].duration !== undefined\n            && notes[0].duration.quarterLength !== this.duration.quarterLength\n        ) {\n            this.duration = notes[0].duration;\n        }\n        this.sortPitches();\n    }\n\n    get length() {\n        return this._notes.length;\n    }\n    get pitches() {\n        const tempPitches = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            tempPitches.push(this._notes[i].pitch);\n        }\n        return tempPitches;\n    }\n    set pitches(tempPitches) {\n        this._notes = [];\n        for (let i = 0; i < tempPitches.length; i++) {\n            let addNote;\n            if (typeof tempPitches[i] === 'string') {\n                addNote = new note.Note(tempPitches[i]);\n            } else if (tempPitches[i].isClassOrSubclass('Pitch')) {\n                addNote = new note.Note();\n                addNote.pitch = tempPitches[i];\n            } else if (tempPitches[i].isClassOrSubclass('Note')) {\n                addNote = tempPitches[i];\n            } else {\n                console.warn('bad pitch', tempPitches[i]);\n                throw new Music21Exception(\n                    'Cannot add pitch from ' + tempPitches[i]\n                );\n            }\n            this._notes.push(addNote);\n        }\n        this._cache = {};\n        this._overrides = {};\n    }\n    get orderedPitchClasses() {\n        const pcGroup = [];\n        for (const p of this.pitches) {\n            if (pcGroup.includes(p.pitchClass)) {\n                continue;\n            }\n            pcGroup.push(p.pitchClass);\n        }\n        pcGroup.sort((a, b) => a - b);\n        return pcGroup;\n    }\n\n    get chordTablesAddress() {\n        if (this._chordTablesAddressNeedsUpdating) {\n            this._chordTablesAddress = chordTables.seekChordTablesAddress(this);\n        }\n        this._chordTablesAddressNeedsUpdating = false;\n        return this._chordTablesAddress;\n    }\n\n    get commonName() {\n        // TODO: many more exemptions from music21p\n        const cta = this.chordTablesAddress;\n        const ctn = chordTables.addressToCommonNames(cta);\n        const forteClass = this.forteClass;\n        const enharmonicTests = {\n            '3-11A': () => this.isMinorTriad(),\n            '3-11B': () => this.isMajorTriad(),\n            '3-10': () => this.isDiminishedTriad(),\n            '3-12': () => this.isAugmentedTriad(),\n        };\n        if (enharmonicTests[forteClass] !== undefined) {\n            let out = ctn[0];\n            const test = enharmonicTests[forteClass];\n            if (!test()) {\n                out = 'enharmonic equivalent to ' + out;\n            }\n            return out;\n        }\n\n        if (ctn === undefined) {\n            return '';\n        } else {\n            return ctn[0];\n        }\n    }\n\n    get forteClass() {\n        return chordTables.addressToForteName(this.chordTablesAddress, 'tn');\n    }\n\n    get forteClassNumber() {\n        return this.chordTablesAddress.forteClass;\n    }\n\n    get forteClassTnI() {\n        return chordTables.addressToForteName(this.chordTablesAddress, 'tni');\n    }\n\n    get(i) {\n        if (typeof i === 'number') {\n            return this._notes[i];\n        } else {\n            return undefined; // TODO(msc): add other get methods.\n        }\n    }\n\n    * [Symbol.iterator]() {\n        for (let i = 0; i < this.length; i++) {\n            yield this.get(i);\n        }\n    }\n\n\n    areZRelations(other) {\n        const zRelationAddress = chordTables.addressToZAddress(this.chordTablesAddress);\n        if (zRelationAddress === undefined) {\n            return false;\n        }\n        for (const key of ['cardinality', 'forteClass', 'inversion']) {\n            if (other.chordTablesAddress[key] !== zRelationAddress[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    getZRelation() {\n        if (!this.hasZRelation) {\n            return undefined;\n        }\n        const chordTablesAddress = this.chordTablesAddress;\n        const v = chordTables.addressToIntervalVector(chordTablesAddress);\n        const addresses = chordTables.intervalVectorToAddress(v);\n        let other;\n        for (const thisAddress of addresses) {\n            if (thisAddress.forteClass !== chordTablesAddress.forteClass) {\n                other = thisAddress;\n            }\n        }\n        // other should always be defined;\n        const prime = chordTables.addressToTransposedNormalForm(other);\n        return new Chord(prime);\n    }\n\n    get hasZRelation() {\n        const post = chordTables.addressToZAddress(this.chordTablesAddress);\n        if (post !== undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    get intervalVector() {\n        return chordTables.addressToIntervalVector(this.chordTablesAddress);\n    }\n\n//    get intervalVectorString() {\n//\n//    }\n//\n//    static formatVectorString() {\n//        // needs pitch._convertPitchClassToStr\n//    }\n\n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            // console.log(midLine, 'midLine');\n            let maxDNNfromCenter = 0;\n            const pA = this.pitches;\n            for (let i = 0; i < this.pitches.length; i++) {\n                const p = pA[i];\n                const DNNfromCenter = p.diatonicNoteNum - midLine;\n                // >= not > so that the highest pitch wins the tie and thus stem down.\n                if (Math.abs(DNNfromCenter) >= Math.abs(maxDNNfromCenter)) {\n                    maxDNNfromCenter = DNNfromCenter;\n                }\n            }\n            if (maxDNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Adds a note to the chord, sorting the note array\n     *\n     * @memberof music21.chord.Chord\n     * @param {string|music21.note.Note|music21.pitch.Pitch} notes - the Note or Pitch to be added or a string defining a pitch.\n     * @param {boolean} runSort - Sort after running (default true)\n     * @returns {music21.chord.Chord} the original chord.\n     */\n    add(notes, runSort = true) {\n        if (!(notes instanceof Array)) {\n            notes = [notes];\n        }\n        for (let noteObj of notes) {\n            // takes in either a note or a pitch\n            if (typeof noteObj === 'string') {\n                noteObj = new note.Note(noteObj);\n            } else if (noteObj.isClassOrSubclass('Pitch')) {\n                const pitchObj = noteObj;\n                const noteObj2 = new note.Note();\n                noteObj2.pitch = pitchObj;\n                noteObj = noteObj2;\n            }\n            this._notes.push(noteObj);\n        }\n        // inefficient because sorts after each add, but safe and #(p) is small\n        if (runSort === true) {\n            this.sortPitches();\n        }\n        this._cache = {};\n        return this;\n    }\n\n    sortPitches() {\n        this._notes.sort((a, b) => a.pitch.ps - b.pitch.ps);\n    }\n\n    // TODO: add remove\n\n    /**\n     * Removes any pitches that appear more than once (in any octave), removing the higher ones, and returns a new Chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.chord.Chord} A new Chord object with duplicate pitches removed.\n     */\n    removeDuplicatePitches() {\n        const stepsFound = [];\n        const nonDuplicatingPitches = [];\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (stepsFound.indexOf(p.step) === -1) {\n                stepsFound.push(p.step);\n                nonDuplicatingPitches.push(p);\n            }\n        }\n        const closedChord = new chord.Chord(nonDuplicatingPitches);\n        return closedChord;\n    }\n    /**\n     * Finds the Root of the chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.pitch.Pitch} the root of the chord.\n     */\n    root(newroot) {\n        if (newroot !== undefined) {\n            this._overrides.root = newroot;\n            this._cache.root = newroot;\n            this._cache.inversion = undefined;\n        }\n\n        if (this._overrides.root !== undefined) {\n            return this._cache.root;\n        }\n\n        if (this._cache.root !== undefined) {\n            return this._cache.root;\n        }\n\n        const closedChord = this.removeDuplicatePitches();\n        /* var chordBass = closedChord.bass(); */\n        const closedPitches = closedChord.pitches;\n        if (closedPitches.length === 0) {\n            throw new Music21Exception('No notes in Chord!');\n        } else if (closedPitches.length === 1) {\n            return this.pitches[0];\n        }\n        const indexOfPitchesWithPerfectlyStackedThirds = [];\n        const testSteps = [3, 5, 7, 2, 4, 6];\n        for (let i = 0; i < closedPitches.length; i++) {\n            const p = closedPitches[i];\n            const currentListOfThirds = [];\n            for (let tsIndex = 0; tsIndex < testSteps.length; tsIndex++) {\n                const chordStepPitch = closedChord.getChordStep(\n                    testSteps[tsIndex],\n                    p\n                );\n                if (chordStepPitch !== undefined) {\n                    // console.log(p.name + \" \" + testSteps[tsIndex].toString() + \" \" + chordStepPitch.name);\n                    currentListOfThirds.push(true);\n                } else {\n                    currentListOfThirds.push(false);\n                }\n            }\n            // console.log(currentListOfThirds);\n            let hasFalse = false;\n            for (let j = 0; j < closedPitches.length - 1; j++) {\n                if (currentListOfThirds[j] === false) {\n                    hasFalse = true;\n                }\n            }\n            if (hasFalse === false) {\n                indexOfPitchesWithPerfectlyStackedThirds.push(i);\n                return closedChord.pitches[i]; // should do more, but fine...\n                // should test rootedness function, etc. 13ths. etc.\n            }\n        }\n        const newRoot = closedChord.pitches[0]; // fallback, just return the bass...\n        this._cache.root = newRoot;\n        return newRoot;\n    }\n    /**\n     * Returns the number of semitones above the root that a given chordstep is.\n     *\n     * For instance, in a G dominant 7th chord (G, B, D, F), would\n     * return 4 for chordStep=3, since the third of the chord (B) is four semitones above G.\n     *\n     * @memberof music21.chord.Chord\n     * @param {number} chordStep - the step to find, e.g., 1, 2, 3, etc.\n     * @param {music21.pitch.Pitch} [testRoot] - the pitch to temporarily consider the root.\n     * @returns {number|undefined} Number of semitones above the root for this chord step or undefined if no pitch matches that chord step.\n     */\n    semitonesFromChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        const tempChordStep = this.getChordStep(chordStep, testRoot);\n        if (tempChordStep === undefined) {\n            return undefined;\n        } else {\n            let semitones = (tempChordStep.ps - testRoot.ps) % 12;\n            if (semitones < 0) {\n                semitones += 12;\n            }\n            return semitones;\n        }\n    }\n    /**\n     * Gets the lowest note (based on .ps not name) in the chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.pitch.Pitch} bass pitch\n     */\n    bass() {\n        let lowest;\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (lowest === undefined) {\n                lowest = p;\n            } else if (p.ps < lowest.ps) {\n                lowest = p;\n            }\n        }\n        return lowest;\n    }\n    /**\n     * Counts the number of non-duplicate pitch MIDI Numbers in the chord.\n     *\n     * Call after \"closedPosition()\" to get Forte style cardinality disregarding octave.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {number}\n     */\n    cardinality() {\n        const uniqueChord = this.removeDuplicatePitches();\n        return uniqueChord.pitches.length;\n    }\n\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isMajorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isMinorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isDiminishedTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 6) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isAugmentedTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 8) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    isDominantSeventh() {\n        return this.isSeventhOfType([0, 4, 7, 10]);\n    }\n\n    isDiminishedSeventh() {\n        return this.isSeventhOfType([0, 3, 6, 9]);\n    }\n\n    isSeventhOfType(intervalArray) {\n        if (intervalArray === undefined) {\n            throw new Music21Exception('intervalArray is required');\n        }\n        const third = this.third;\n        const fifth = this.fifth;\n        const seventh = this.seventh;\n\n        if (\n            third === undefined\n            || fifth === undefined\n            || seventh === undefined\n        ) {\n            return false;\n        }\n\n        const root = this.root();\n\n        for (const thisPitch of this.pitches) {\n            const thisInterval = new interval.Interval(root, thisPitch);\n            if (!intervalArray.includes(thisInterval.chromatic.mod12)) {\n                return false;\n            }\n//            // check if it doesn't have any other pitches, such as C E F- G Bb != Dominant Seventh\n//            if (!ignoreSpelling && !chordalNames.includes(thisPitch.name)) {\n//                return false;\n//            }\n        }\n        return true;\n\n\n    }\n\n\n    /**\n     * canBeDominantV - Returns true if the chord is a Major Triad or a Dominant Seventh\n     *\n     * @return {Boolean}\n     */\n    canBeDominantV() {\n        if (this.isMajorTriad() || this.isDominantSeventh()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns true if the chord is a major or minor triad\n     *\n     * @memberof music21.chord.Chord\n     * @returns {Boolean}\n     */\n    canBeTonic() {\n        if (this.isMajorTriad() || this.isMinorTriad()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the inversion of the chord as a number (root-position = 0)\n     *\n     * Unlike music21 version, cannot set the inversion, yet.\n     *\n     * TODO: add.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {number}\n     */\n    inversion() {\n        const bass = this.bass();\n        const root = this.root();\n        const chordStepsToInversions = [1, 6, 4, 2, 7, 5, 3];\n        for (let i = 0; i < chordStepsToInversions.length; i++) {\n            const testNote = this.getChordStep(chordStepsToInversions[i], bass);\n            if (testNote !== undefined && testNote.name === root.name) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * @memberof music21.chord.Chord\n     * @param {object} options - a dictionary of options `{clef: {@music21.clef.Clef} }` is especially important\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const clef = options.clef;\n\n        const pitchKeys = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            pitchKeys.push(this._notes[i].pitch.vexflowName(clef));\n        }\n        const vfn = new Vex.Flow.StaveNote({\n            keys: pitchKeys,\n            duration: this.duration.vexflowDuration,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, options); // clean up stuff...\n        for (let i = 0; i < this._notes.length; i++) {\n            const tn = this._notes[i];\n            if (tn.pitch.accidental !== undefined) {\n                if (\n                    tn.pitch.accidental.vexflowModifier !== 'n'\n                    && tn.pitch.accidental.displayStatus !== false\n                ) {\n                    vfn.addAccidental(\n                        i,\n                        new Vex.Flow.Accidental(\n                            tn.pitch.accidental.vexflowModifier\n                        )\n                    );\n                } else if (\n                    tn.pitch.accidental.displayType === 'always'\n                    || tn.pitch.accidental.displayStatus === true\n                ) {\n                    vfn.addAccidental(\n                        i,\n                        new Vex.Flow.Accidental(\n                            tn.pitch.accidental.vexflowModifier\n                        )\n                    );\n                }\n            }\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n    /**\n     * Returns the Pitch object that is a Generic interval (2, 3, 4, etc., but not 9, 10, etc.) above\n     * the `.root()`\n     *\n     * In case there is more that one note with that designation (e.g., `[A-C-C#-E].getChordStep(3)`)\n     * the first one in `.pitches` is returned.\n     *\n     * @memberof music21.chord.Chord\n     * @param {Int} chordStep a positive integer representing the chord step\n     * @param {music21.pitch.Pitch} [testRoot] - the Pitch to use as a temporary root\n     * @returns {music21.pitch.Pitch|undefined}\n     */\n    getChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        if (chordStep >= 8) {\n            chordStep %= 7;\n        }\n        const thisPitches = this.pitches;\n        const testRootDNN = testRoot.diatonicNoteNum;\n        for (let i = 0; i < thisPitches.length; i++) {\n            const thisPitch = thisPitches[i];\n            let thisInterval\n                = (thisPitch.diatonicNoteNum - testRootDNN + 1) % 7; // fast cludge\n            if (thisInterval <= 0) {\n                thisInterval += 7;\n            }\n            if (thisInterval === chordStep) {\n                return thisPitch;\n            }\n        }\n        return undefined;\n    }\n\n    get third() {\n        return this.getChordStep(3);\n    }\n    get fifth() {\n        return this.getChordStep(5);\n    }\n    get seventh() {\n        return this.getChordStep(7);\n    }\n}\nchord.Chord = Chord;\n\nchord.chordDefinitions = {\n    major: ['M3', 'm3'],\n    minor: ['m3', 'M3'],\n    diminished: ['m3', 'm3'],\n    augmented: ['M3', 'M3'],\n    'major-seventh': ['M3', 'm3', 'M3'],\n    'dominant-seventh': ['M3', 'm3', 'm3'],\n    'minor-seventh': ['m3', 'M3', 'm3'],\n    'diminished-seventh': ['m3', 'm3', 'm3'],\n    'half-diminished-seventh': ['m3', 'm3', 'M3'],\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/clef -- Clef objects\n *\n * Copyright (c) 2013-19, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–19, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { pitch } from './pitch.js';\n\n/**\n * Clef module, see {@link music21.clef} for namespace\n *\n * @exports music21/clef\n */\n/**\n * Clef related objects and properties\n *\n * @namespace music21.clef\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n */\nexport const clef = {};\n/*  music21.Clef\n\tmust be defined before Stream since Stream subclasses call new music21.Clef...\n */\n// TODO: Fix to newest Vexflow format...\nclef.lowestLines = {\n    treble: 31,\n    soprano: 29,\n    'mezzo-soprano': 27,\n    alto: 25,\n    tenor: 23,\n    bass: 19,\n    percussion: 31,\n};\n\nclef.nameToLine = {\n    treble: 2,\n    soprano: 1,\n    'mezzo-soprano': 2,\n    alto: 3,\n    tenor: 4,\n    bass: 4,\n    percussion: 3,\n};\n\nclef.nameToSign = {\n    treble: 'G',\n    soprano: 'C',\n    'mezzo-soprano': 'C',\n    alto: 'C',\n    tenor: 'C',\n    bass: 'F',\n    percussion: 'percussion',\n};\n\n/**\n * Clefname can be one of\n * \"treble\", \"bass\", \"soprano\", \"mezzo-soprano\", \"alto\", \"tenor\", \"percussion\"\n *\n * @class Clef\n * @memberof music21.clef\n * @extends music21.base.Music21Object\n * @param {string} name - clef name\n * @param {Int} [octaveChange=0] - ottava\n * @property {string|undefined} name\n * @property {Int} lowestLine - diatonicNoteNum (C4 = 29) for the lowest line (in a five-line staff)\n * @property {Int} lowestLineTrebleOffset - difference between the first line of this staff and the first line in treble clef\n * @property {Int} octaveChange\n */\nexport class Clef extends base.Music21Object {\n    constructor(name, octaveChange) {\n        super();\n        this.classSortOrder = 0;\n\n        this.sign = undefined;\n        this.line = 1;\n        if (name !== undefined) {\n            name = name.toLowerCase();\n            this.name = name;\n            this.lowestLine = clef.lowestLines[name];\n            this.sign = clef.nameToSign[name];\n            this.line = clef.nameToLine[name] || 1;\n            this.lowestLineTrebleOffset\n                = clef.lowestLines.treble - this.lowestLine;\n        } else {\n            this.name = undefined;\n            this.lowestLine = clef.lowestLines.treble;\n            this.lowestLineTrebleOffset = 0;\n        }\n        if (octaveChange === undefined) {\n            this.octaveChange = 0;\n        } else {\n            this.octaveChange = octaveChange;\n            this.lowestLine += 7 * octaveChange;\n            this.lowestLineTrebleOffset -= 7 * octaveChange;\n        }\n    }\n    /**\n     * returns a new pitch object if the clef name is not Treble\n     * designed so it would look the same as it would in treble clef.\n     * for instance, bass-clef 2nd-space C# becomes treble clef 2nd-space A#\n     * used for Vex.Flow which requires all pitches to be input as if they\n     * are in treble clef.\n     *\n     * @memberof music21.clef.Clef\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch} new pitch\n     */\n    convertPitchToTreble(p) {\n        if (this.lowestLine === undefined) {\n            console.log('no first line defined for clef', this.name, this);\n            return p; // error\n        }\n        const lowestLineDifference = this.lowestLineTrebleOffset;\n        const tempPitch = new pitch.Pitch(p.step);\n        tempPitch.octave = p.octave;\n        tempPitch.diatonicNoteNum += lowestLineDifference;\n        tempPitch.accidental = p.accidental;\n        return tempPitch;\n    }\n}\n\nclef.Clef = Clef;\n\n/**\n * A TrebleClef (same as new music21.clef.Clef('treble')\n *\n * @class TrebleClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TrebleClef extends Clef {\n    constructor() {\n        super('treble');\n        this.sign = 'G';\n        this.line = 2;\n    }\n}\nclef.TrebleClef = TrebleClef;\n/**\n * A TrebleClef down an octave (same as new music21.clef.Clef('treble', -1)\n *\n * Unlike music21p, currently not a subclass of TrebleClef.\n *\n * @class Treble8vbClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vbClef extends Clef {\n    constructor() {\n        super('treble', -1);\n    }\n}\nclef.Treble8vbClef = Treble8vbClef;\n\n/**\n * A TrebleClef up an octave (same as new music21.clef.Clef('treble', 1)\n *\n * @class Treble8vaClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vaClef extends Clef {\n    constructor() {\n        super('treble', 1);\n    }\n}\nclef.Treble8vaClef = Treble8vaClef;\n\n/**\n * A BassClef (same as new music21.clef.Clef('bass')\n *\n * @class BassClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class BassClef extends Clef {\n    constructor() {\n        super('bass');\n        this.sign = 'F';\n        this.line = 4;\n    }\n}\nclef.BassClef = BassClef;\n\n\n/**\n * An AltoClef (same as new music21.clef.Clef('alto')\n *\n * @class AltoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class AltoClef extends Clef {\n    constructor() {\n        super('alto');\n        this.sign = 'C';\n        this.line = 3;\n    }\n}\nclef.AltoClef = AltoClef;\n\n/**\n * A Tenor Clef (same as new music21.clef.Clef('tenor')\n *\n * @class TenorClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TenorClef extends Clef {\n    constructor() {\n        super('tenor');\n        this.sign = 'C';\n        this.line = 4;\n    }\n}\nclef.TenorClef = TenorClef;\n/**\n * A Soprano Clef (same as new music21.clef.Clef('soprano')\n *\n * @class SopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class SopranoClef extends Clef {\n    constructor() {\n        super('soprano');\n        this.sign = 'C';\n        this.line = 1;\n    }\n}\nclef.SopranoClef = SopranoClef;\n\n/**\n * A Mezzo-Soprano Clef (same as new music21.clef.Clef('mezzo-soprano')\n *\n * @class MezzoSopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class MezzoSopranoClef extends Clef {\n    constructor() {\n        super('mezzo-soprano');\n        this.sign = 'C';\n        this.line = 2;\n    }\n}\nclef.MezzoSopranoClef = MezzoSopranoClef;\n\n/**\n * A Percussion Clef (same as new music21.clef.Clef('percussion')\n *\n * First line is treated as if it's treble clef. Not available as \"bestClef\"\n *\n * @class PercussionClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class PercussionClef extends Clef {\n    constructor() {\n        super('percussion');\n        this.sign = 'percussion';\n        this.line = 3;\n    }\n}\nclef.PercussionClef = PercussionClef;\n\n/**\n * Looks at the pitches in a Stream and returns the best clef\n * of Treble and Bass\n *\n * @function music21.clef.bestClef\n * @memberof music21.clef\n * @param {music21.stream.Stream} st\n * @returns {music21.clef.Clef}\n */\nclef.bestClef = function bestClef(st, { recurse=true }={}) {\n    // console.log('calling flat on stream: ', st.elements.length, st.classes[st.classes.length - 1]);\n    const stFlat = st.flat;\n    let totalNotes = 0;\n    let totalPitch = 0.0;\n    for (let i = 0; i < stFlat.length; i++) {\n        const el = stFlat.get(i);\n        if (el.pitch !== undefined) {\n            totalNotes += 1;\n            totalPitch += el.pitch.diatonicNoteNum;\n        } else if (el.pitches !== undefined) {\n            for (let j = 0; j < el.pitches.length; j++) {\n                totalNotes += 1;\n                totalPitch += el.pitches[j].diatonicNoteNum;\n            }\n        }\n    }\n    let averageHeight;\n    if (totalNotes === 0) {\n        averageHeight = 29;\n    } else {\n        averageHeight = totalPitch / totalNotes;\n    }\n    // console.log('bestClef: average height', averageHeight);\n    if (averageHeight > 28) {\n        // 29 = c4\n        return new clef.TrebleClef();\n    } else {\n        return new clef.BassClef();\n    }\n};\n\nclef.clefFromString = function clefFromString(clefString, octaveShift) {\n    if (octaveShift === undefined) {\n        octaveShift = 0;\n    }\n    const xnStr = clefString.trim();\n    let thisType;\n    let lineNum;\n    if (xnStr.toLowerCase() === 'percussion') {\n        return new clef.PercussionClef(clefString, octaveShift);\n    } // todo: tab, none, jianpu\n\n    if (xnStr.length === 2) {\n        thisType = xnStr[0].toUpperCase();\n        lineNum = parseInt(xnStr[1]);\n    } else if (xnStr.length === 1) {\n        thisType = xnStr[0].toUpperCase();\n        if (thisType === 'G') {\n            lineNum = 2;\n        } else if (thisType === 'F') {\n            lineNum = 4;\n        } else if (thisType === 'C') {\n            lineNum = 3;\n        } else {\n            lineNum = 0;\n        }\n    } else if (xnStr.length > 2) {\n        // try to get any clef in the module\n        const searchLower = xnStr.toLowerCase();\n        for (const clefKey of Object.keys(clef)) { // TODO(msc): fix when we get rid of clef = {}\n            if (!clefKey.includes('Clef')) {\n                continue;\n            }\n            const clefLower = clefKey.toLowerCase();\n            const potentialClass = clef[clefKey];\n            if (typeof potentialClass !== 'function') {\n                continue;\n            }\n            if (clefLower !== searchLower && clefLower !== searchLower + 'clef') {\n                continue;\n            }\n            return new potentialClass();\n        }\n    }\n\n    const arrayEqual = (a, b) =>\n        a.length === b.length && a.every((el, ix) => el === b[ix]);\n\n    const params = [thisType, lineNum, octaveShift];\n    if (arrayEqual(params, ['G', 2, 0])) {\n        return new clef.TrebleClef();\n    } else if (arrayEqual(params, ['G', 2, -1])) {\n        return new clef.Treble8vbClef();\n    } else if (arrayEqual(params, ['G', 2, 1])) {\n        return new clef.Treble8vaClef();\n    } else if (arrayEqual(params, ['F', 4, 0])) {\n        return new clef.BassClef();\n    } else if (arrayEqual(params, ['F', 4, -1])) {\n        return new clef.Bass8vbClef();\n    } else if (arrayEqual(params, ['C', 3, 0])) {\n        return new clef.AltoClef();\n    } else if (arrayEqual(params, ['C', 4, 0])) {\n        return new clef.TenorClef();\n    } else {\n        return new clef.Clef(xnStr, octaveShift);\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/key -- KeySignature and Key objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { base } from './base.js';\n// import { common } from './common.js';\nimport { debug } from './debug.js';\nimport { interval } from './interval.js';\nimport { pitch } from './pitch.js';\nimport { scale } from './scale.js';\n\n/* key and keysignature module. See {@link music21.key} namespace for details\n *\n * @exports music21/key\n */\n/**\n * Key and KeySignature related objects and methods\n *\n * @namespace music21.key\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/interval\n * @requires music21/scale\n */\nexport const key = {};\n\nkey.modeSharpsAlter = {\n    major: 0,\n    minor: -3,\n    dorian: -2,\n    phrygian: -4,\n    lydian: 1,\n    mixolydian: -1,\n    locrian: -5,\n};\n\nkey.convertKeyStringToMusic21KeyString = function convertKeyStringToMusic21KeyString(\n    textString\n) {\n    if (textString === 'bb') {\n        textString = 'b-';\n    } else if (textString === 'Bb') {\n        textString = 'B-';\n    } else if (textString.endsWith('b') && !textString.startsWith('b')) {\n        textString = textString.replace(/b$/, '-');\n    }\n    return textString;\n};\n\n/**\n * @class KeySignature\n * @memberof music21.key\n * @description Represents a key signature\n * @param {Int} [sharps=0] -- the number of sharps (negative for flats)\n * @property {Int} [sharps=0] -- number of sharps (negative for flats)\n * @extends music21.base.Music21Object\n * @example\n * var ks = new music21.key.KeySignature(-3); //E-flat major or c minor\n * var s = new music21.stream.Stream();\n * s.keySignature = ks;\n * var n = new music21.note.Note('A-'); // A-flat\n * s.append(n);\n * s.appendNewDOM();\n */\nexport class KeySignature extends base.Music21Object {\n    constructor(sharps) {\n        super();\n        this.classSortOrder = 2;\n\n        this._sharps = sharps || 0; // if undefined\n        this._alteredPitchesCache = undefined;\n\n        // 12 flats/sharps enough for now...\n        this.flatMapping = [\n            'C',\n            'F',\n            'B-',\n            'E-',\n            'A-',\n            'D-',\n            'G-',\n            'C-',\n            'F-',\n            'B--',\n            'E--',\n            'A--',\n            'D--',\n        ];\n        this.sharpMapping = [\n            'C',\n            'G',\n            'D',\n            'A',\n            'E',\n            'B',\n            'F#',\n            'C#',\n            'G#',\n            'D#',\n            'A#',\n            'E#',\n            'B#',\n        ];\n    }\n    get sharps() {\n        return this._sharps;\n    }\n    set sharps(s) {\n        this._alteredPitchesCache = [];\n        this._sharps = s;\n    }\n    /**\n     * Gives the width in pixels necessary to represent the key signature.\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {number} width\n     * @readonly\n     */\n    get width() {\n        if (this.sharps === 0) {\n            return 0;\n        } else {\n            // add 6 to add extra space after the KS...\n            return 12 * Math.abs(this.sharps) + 6;\n        }\n    }\n    /**\n     * An Array of Altered Pitches in KeySignature order (i.e., for flats, Bb, Eb, etc.)\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {Array<music21.pitch.Pitch>} alteredPitches\n     * @readonly\n     * @example\n     * var ks = new music21.key.KeySignature(3)\n     * var ap = ks.alteredPitches\n     * var apName = [];\n     * for (var i = 0; i < ap.length; i++) {\n     *     apName.push(ap[i].name);\n     * }\n     * apName\n     * // [\"F#\", \"C#\", \"G#\"]\n     */\n    get alteredPitches() {\n        if (this._alteredPitchesCache !== undefined) {\n            return this._alteredPitchesCache;\n        }\n        let transStr = 'P5';\n        let startPitch = 'B';\n        if (this.sharps < 0) {\n            transStr = 'P4';\n            startPitch = 'F';\n        }\n        const transInterval = new interval.Interval(transStr);\n        const post = [];\n        let pKeep = new pitch.Pitch(startPitch);\n        for (let i = 0; i < Math.abs(this.sharps); i++) {\n            pKeep = transInterval.transposePitch(pKeep);\n            pKeep.octave = 4;\n            post.push(pKeep);\n        }\n        this._alteredPitchesCache = post;\n        return post;\n    }\n    /**\n     * Return the name of the major key with this many sharps\n     *\n     * @memberof music21.key.KeySignature\n     * @returns {(string|undefined)} name of key\n     * @example\n     * var ks = new music21.key.KeySignature(-3)\n     * ks.majorName()\n     * // \"E-\"\n     */\n    majorName() {\n        if (this.sharps >= 0) {\n            return this.sharpMapping[this.sharps];\n        } else {\n            return this.flatMapping[Math.abs(this.sharps)];\n        }\n    }\n    /**\n     * Return the name of the minor key with this many sharps\n     * @memberof music21.key.KeySignature\n     * @returns {(string|undefined)}\n     */\n    minorName() {\n        const tempSharps = this.sharps + 3;\n        if (tempSharps >= 0) {\n            return this.sharpMapping[tempSharps];\n        } else {\n            return this.flatMapping[Math.abs(tempSharps)];\n        }\n    }\n    /**\n     * returns the vexflow name (just the `majorName()` with \"b\" for \"-\") for\n     * the key signature.  Does not create the object.\n     *\n     * Deprecated.\n     *\n     * @memberof music21.key.KeySignature\n     * @returns {string}\n     */\n    vexflow() {\n        console.log('calling deprecated function KeySignature.vexflow');\n        const tempName = this.majorName();\n        return tempName.replace(/-/g, 'b');\n    }\n    /**\n     * Returns the accidental associated with a step in this key, or undefined if none.\n     *\n     * @memberof music21.key.KeySignature\n     * @param {string} step - a valid step name such as \"C\",\"D\", etc., but not \"C#\" etc.\n     * @returns {(music21.pitch.Accidental|undefined)}\n     */\n    accidentalByStep(step) {\n        const aps = this.alteredPitches;\n        for (let i = 0; i < aps.length; i++) {\n            if (aps[i].step === step) {\n                if (aps[i].accidental === undefined) {\n                    return undefined;\n                }\n                // make a new accidental;\n                return new pitch.Accidental(aps[i].accidental.alter);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Takes a pitch in C major and transposes it so that it has\n     * the same step position in the current key signature.\n     *\n     * @memberof music21.key.KeySignature\n     * @returns {music21.pitch.Pitch}\n     * @example\n     * var ks = new music21.key.KeySignature(-3)\n     * var p1 = new music21.pitch.Pitch('B')\n     * var p2 = ks.transposePitchFromC(p1)\n     * p2.name\n     * // \"D\"\n     * var p3 = new music21.pitch.Pitch('G-')\n     * var p4 = ks.transposePitchFromC(p3)\n     * p4.name\n     * // \"B--\"\n     */\n    transposePitchFromC(p) {\n        let transInterval;\n        let transTimes;\n        if (this.sharps === 0) {\n            return new pitch.Pitch(p.nameWithOctave);\n        } else if (this.sharps < 0) {\n            transTimes = Math.abs(this.sharps);\n            transInterval = new interval.Interval('P4');\n        } else {\n            transTimes = this.sharps;\n            transInterval = new interval.Interval('P5');\n        }\n        let newPitch = p;\n        for (let i = 0; i < transTimes; i++) {\n            newPitch = transInterval.transposePitch(newPitch);\n            if (i % 2 === 1) {\n                newPitch.octave -= 1;\n            }\n        }\n        return newPitch;\n    }\n}\nkey.KeySignature = KeySignature;\n\n/**\n * Create a Key object. Like a KeySignature but with ideas about Tonic, Dominant, etc.\n *\n * TODO: allow keyName to be a {@link music21.pitch.Pitch}\n * TODO: Scale mixin.\n *\n * @class Key\n * @memberof music21.key\n * @extends music21.key.KeySignature\n * @param {string} keyName -- a pitch name representing the key (w/ \"-\" for flat)\n * @param {string} [mode] -- if not given then the CASE of the keyName will be used (\"C\" => \"major\", \"c\" => \"minor\")\n */\nexport class Key extends KeySignature {\n    constructor(keyName, mode) {\n        if (keyName === undefined) {\n            keyName = 'C';\n        }\n        if (mode === undefined) {\n            const lowerCase = keyName.toLowerCase();\n            if (keyName === lowerCase) {\n                mode = 'minor';\n            } else {\n                mode = 'major';\n            }\n        }\n\n        const sharpsArray = 'A-- E-- B-- F- C- G- D- A- E- B- F C G D A E B F# C# G# D# A# E# B#'.split(\n            ' '\n        );\n        const sharpsIndex = sharpsArray.indexOf(keyName.toUpperCase());\n        if (sharpsIndex === -1) {\n            throw new Music21Exception('Cannot find the key for ' + keyName);\n        }\n        const modeShift = key.modeSharpsAlter[mode] || 0;\n        const sharps = sharpsIndex + modeShift - 11;\n        if (debug) {\n            console.log('Found sharps ' + sharps + ' for key: ' + keyName);\n        }\n        super(sharps);\n\n        this.tonic = new pitch.Pitch(keyName);\n        this.mode = mode;\n        this._scale = this.getScale();\n    }\n\n    get tonicPitchNameWithCase() {\n        let tonicName = this.tonic.name;\n        if (this.mode === 'major') {\n            tonicName = tonicName.toUpperCase();\n        } else if (this.mode === 'minor') {\n            tonicName = tonicName.toLowerCase();\n        }\n        return tonicName;\n    }\n    /**\n     * returns a {@link music21.scale.MajorScale} or {@link music21.scale.MinorScale}\n     * object from the pitch object.\n     *\n     * @memberof music21.key.Key\n     * @param {string|undefined} [scaleType=this.mode] - the type of scale, or the mode.\n     * @returns {object} A music21.scale.Scale subclass.\n     */\n    getScale(scaleType) {\n        if (scaleType === undefined) {\n            scaleType = this.mode;\n        }\n        const pitchObj = this.tonic;\n        if (scaleType === 'major') {\n            return new scale.MajorScale(pitchObj);\n        } else if (scaleType === 'minor') {\n            return new scale.MinorScale(pitchObj);\n        } else if (['harmonic minor', 'harmonic-minor'].includes(scaleType)) {\n            return new scale.HarmonicMinorScale(pitchObj);\n        } else if (['melodic minor', 'melodic-minor'].includes(scaleType)) {\n            return new scale.AscendingMelodicMinorScale(pitchObj);\n        } else {\n            return new scale.ConcreteScale(pitchObj);\n        }\n    }\n\n    // when scale.js adds functionality, it must be added here.\n    get isConcrete() {\n        return this._scale.isConcrete;\n    }\n    getPitches(...args) {\n        return this._scale.getPitches(...args);\n    }\n    pitchFromDegree(...args) {\n        return this._scale.pitchFromDegree(...args);\n    }\n    getScaleDegreeFromPitch(...args) {\n        return this._scale.getScaleDegreeFromPitch(...args);\n    }\n}\nkey.Key = Key;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/meter -- TimeSignature objects\n *\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\n\nimport { base } from './base.js';\nimport { beam } from './beam.js';\nimport { common } from './common.js';\nimport { duration } from './duration.js';\n\n/**\n * meter module. See {@link music21.meter} namespace for details.\n *\n * @exports music21/meter\n */\n\n/**\n * Meter and TimeSignature Classes (esp. {@link music21.meter.TimeSignature} ) and methods.\n *\n * @namespace music21.meter\n * @memberof music21\n * @requires music21/base\n * @requires music21/duration\n */\nexport const meter = {};\n\n/**\n * A MUCH simpler version of the music21p TimeSignature object.\n *\n * @class TimeSignature\n * @memberof music21.meter\n * @param {string} meterString - a string (\"4/4\", \"3/8\" etc.) to initialize the TimeSignature.\n * @property {Int} [numerator=4]\n * @property {Int} [denominator=4]\n * @property {Array<Array<Int>>} beatGroups - groupings of beats; inner arrays are numerator, denominator\n * @property {string} ratioString - a string like \"4/4\"\n * @property {music21.duration.Duration} barDuration - a Duration object representing the expressed total length of the TimeSignature.\n */\nexport class TimeSignature extends base.Music21Object {\n    constructor(meterString) {\n        super();\n        this.classSortOrder = 4;\n        \n        this._numerator = 4;\n        this._denominator = 4;\n        this._beatGroups = [];\n        this._overwrittenBeatCount = undefined;\n        this._overwrittenBeatDuration = undefined;\n        if (typeof meterString === 'string') {\n            this.ratioString = meterString;\n        }\n    }\n    get numerator() {\n        return this._numerator;\n    }\n    set numerator(s) {\n        this._numerator = s;\n    }\n    get denominator() {\n        return this._denominator;\n    }\n    set denominator(s) {\n        this._denominator = s;\n    }\n    get ratioString() {\n        return this.numerator.toString() + '/' + this.denominator.toString();\n    }\n    set ratioString(meterString) {\n        const meterList = meterString.split('/');\n        this.numerator = parseInt(meterList[0]);\n        this.denominator = parseInt(meterList[1]);\n        this._beatGroups = [];\n    }\n    get barDuration() {\n        const ql = 4.0 * this._numerator / this._denominator;\n        return new duration.Duration(ql);\n    }\n    get beatGroups() {\n        if (this._beatGroups.length === 0) {\n            this._beatGroups = this.computeBeatGroups();\n        }\n        return this._beatGroups;\n    }\n    set beatGroups(newGroups) {\n        this._beatGroups = newGroups;\n    }\n\n    /**\n     *  Get the beatCount from the numerator, assuming fast 6/8, etc.\n     *  unless .beatCount has been set manually.\n     */\n    get beatCount() {\n        if (this._overwrittenBeatCount !== undefined) {\n            return this._overwrittenBeatCount;\n        }\n        if (this.numerator > 3 && this.numerator % 3 === 0) {\n            return this.numerator / 3;\n        } else {\n            return this.numerator;\n        }\n    }\n    /**\n     *  Manually set the beatCount to an int.\n     */\n    set beatCount(overwrite) {\n        this._overwrittenBeatCount = overwrite;\n        return overwrite;\n    }\n\n    /**\n     * Gets a single duration.Duration object representing\n     * the length of a beat in this time signature (using beatCount)\n     * or, if set manually, it can return a list of Durations For\n     * asymmetrical meters.\n     */\n    get beatDuration() {\n        const dur = this.barDuration;\n        dur.quarterLength /= this.beatCount;\n        return dur;\n    }\n    /**\n     * Set beatDuration to a duration.Duration object or\n     * if the client can handle it, a list of Duration objects...\n     */\n    set beatDuration(overwrite) {\n        this._overwrittenBeatDuration = overwrite;\n    }\n\n    /**\n     * Compute the Beat Group according to this time signature.\n     *\n     * @memberof music21.meter.TimeSignature\n     * @returns {Array<Array<Int>>} a list of numerator and denominators, find a list of beat groups.\n     */\n    computeBeatGroups() {\n        const tempBeatGroups = [];\n        let numBeats = this.numerator;\n        let beatValue = this.denominator;\n        if (beatValue < 8 && numBeats >= 5) {\n            const beatsToEighthNoteRatio = 8 / beatValue; // hopefully Int -- right Brian Ferneyhough?\n            beatValue = 8;\n            numBeats *= beatsToEighthNoteRatio;\n        }\n\n        if (beatValue >= 8) {\n            while (numBeats >= 5) {\n                tempBeatGroups.push([3, beatValue]);\n                numBeats -= 3;\n            }\n            if (numBeats === 4) {\n                tempBeatGroups.push([2, beatValue]);\n                tempBeatGroups.push([2, beatValue]);\n            } else if (numBeats > 0) {\n                tempBeatGroups.push([numBeats, beatValue]);\n            }\n        } else if (beatValue === 2) {\n            tempBeatGroups.push([1, 2]);\n        } else if (beatValue <= 1) {\n            tempBeatGroups.push([1, 1]);\n        } else {\n            // 4/4, 2/4, 3/4, standard stuff\n            tempBeatGroups.push([2, 8]);\n        }\n        return tempBeatGroups;\n    }\n\n    /**\n     * Return a span of [start, end] for the current beat/beam grouping\n     */\n    offsetToSpan(offset) {\n        const beatDuration = this.beatDuration.quarterLength;\n        const beatsFromStart = Math.floor(offset / beatDuration);\n        const start = beatsFromStart * beatDuration;\n        const end = start + beatDuration;\n        return [start, end];\n    }\n\n    /**\n     * @param {Iterable} srcStream - a stream of elements.\n     * @param {object} options - an object with measureStartOffset\n     */\n    getBeams(srcStream, options) {\n        const params = { measureStartOffset: 0.0 };\n        common.merge(params, options);\n        const measureStartOffset = params.measureStartOffset;\n        let beamsList = beam.Beams.naiveBeams(srcStream);\n        beamsList = beam.Beams.removeSandwichedUnbeamables(beamsList);\n        const fixBeamsOneElementDepth = (i, el, depth) => {\n            const beams = beamsList[i];\n            if (!beams || beams === undefined) {\n                return;\n            }\n            const beamNumber = depth + 1;\n            if (!(beams.getNumbers().includes(beamNumber))) {\n                return;\n            }\n            const dur = el.duration;\n            const pos = el.offset + measureStartOffset;\n\n            const start = pos; // opFrac\n            const end = pos + dur.quarterLength; // opFrac;\n            const startNext = end;\n            const isLast = (i === srcStream.length - 1);\n            const isFirst = (i === 0);\n            let beamNext;\n            let beamPrevious;\n            if (!isFirst) {\n                beamPrevious = beamsList[i - 1];\n            }\n            if (!isLast) {\n                beamNext = beamsList[i + 1];\n            }\n            const [archetypeSpanStart, archetypeSpanEnd] = this.offsetToSpan(start);\n            let archetypeSpanNextStart = 0.0;\n            if (beamNext !== undefined) {\n                archetypeSpanNextStart = this.offsetToSpan(startNext)[0];\n            }\n            if (start === archetypeSpanStart && end === archetypeSpanEnd) {\n                beamsList[i] = undefined;\n                return;\n            }\n\n            let beamType;\n            if (isFirst) {\n                beamType = 'start';\n                if (beamNext === undefined || !(beamNext.getNumbers().includes(beamNumber))) {\n                    beamType = 'partial-right';\n                }\n            } else if (isLast) {\n                beamType = 'start';\n                if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {\n                    beamType = 'partial-left';\n                }\n            } else if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {\n                if (beamNumber === 1 && beamNext === undefined) {\n                    beamsList[i] = undefined;\n                    return;\n                } else if (beamNext === undefined && beamNumber > 1) {\n                    beamType = 'partial-left';\n                } else if (startNext >= archetypeSpanEnd) {\n                    beamType = 'partial-left';\n                } else if (beamNext === undefined || !(beamNext.getNumbers().includes(beamNumber))) {\n                    beamType = 'partial-right';\n                } else {\n                    beamType = 'start';\n                }\n            } else if (beamPrevious !== undefined\n                        && beamPrevious.getNumbers().includes(beamNumber)\n                        && ['stop', 'partial-left'].includes(beamPrevious.getTypeByNumber(beamNumber))\n                       ) {\n                if (beamNext !== undefined) {\n                    beamType = 'start';\n                } else {\n                    beamType = 'partial-left';\n                }\n            } else if (beamNext === undefined || !beamNext.getNumbers().includes(beamNumber)) {\n                beamType = 'stop';\n            } else if (startNext < archetypeSpanEnd) {\n                beamType = 'continue';\n            } else if (startNext >= archetypeSpanNextStart) {\n                beamType = 'stop';\n            } else {\n                console.warn('Cannot match beamType');\n                return;\n            }\n            beams.setByNumber(beamNumber, beamType);\n        };\n\n        for (let depth = 0; depth < beam.beamableDurationTypes.length; depth++) {\n            let i = 0;\n            for (const el of srcStream) {\n                fixBeamsOneElementDepth(i, el, depth);\n                i += 1;\n            }\n        }\n\n        beamsList = beam.Beams.sanitizePartialBeams(beamsList);\n        beamsList = beam.Beams.mergeConnectingPartialBeams(beamsList);\n        return beamsList;\n    }\n\n    /**\n     * Compute the Beat Group according to this time signature for VexFlow. For beaming.\n     *\n     * @memberof music21.meter.TimeSignature\n     * @param {Vex} Vex - a reference to the Vex object\n     * @returns {Array<Vex.Flow.Fraction>} a list of numerator and denominator groups, for VexFlow\n     */\n    vexflowBeatGroups() {\n        const tempBeatGroups = this.beatGroups;\n        // console.log(tempBeatGroups);\n        const vfBeatGroups = [];\n        for (let i = 0; i < tempBeatGroups.length; i++) {\n            const bg = tempBeatGroups[i];\n            vfBeatGroups.push(new Vex.Flow.Fraction(bg[0], bg[1]));\n        }\n        return vfBeatGroups;\n\n        //  if (numBeats % 3 == 0 && beatValue < 4) {\n        //  // 6/8, 3/8, 9/8, etc.\n        //  numBeats = numBeats / 3;\n        //  beatValue = beatValue / 3;\n        //  }\n    }\n}\n\nmeter.TimeSignature = TimeSignature;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/instrument -- instrument objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\n\n/**\n * Instrument module, see {@link music21.instrument}\n *\n * @exports music21/instrument\n */\n\n/**\n * Looking for the {@link music21.instrument.Instrument} object? :-)\n *\n * @namespace music21.instrument\n * @memberof music21\n * @requires music21/base\n */\nexport const instrument = {};\n\n/**\n * Represents an instrument.  instrumentNames are found in the ext/soundfonts directory\n *\n * See {@link music21.miditools} and esp. `loadSoundfont` for a way of loading soundfonts into\n * instruments.\n *\n * @class Instrument\n * @memberof music21.instrument\n * @param {string} instrumentName\n * @property {string|undefined} partId\n * @property {string|undefined} partName\n * @property {string|undefined} partAbbreviation\n * @property {string|undefined} instrumentId\n * @property {string|undefined} instrumentName\n * @property {string|undefined} instrumentAbbreviation\n * @property {Int|undefined} midiProgram\n * @property {Int|undefined} midiChannel\n * @property {Int|undefined} lowestNote\n * @property {Int|undefined} highestNote\n * @property {music21.interval.Interval|undefined} transposition\n * @property {Boolean} inGMPercMap=false\n * @property {string|undefined} soundfontFn\n * @property {string|undefined} oggSoundfont - url of oggSoundfont for this instrument\n * @property {string|undefined} mp3Soundfont - url of mp3Soundfont for this instrument\n */\nclass Instrument extends base.Music21Object {\n    constructor(instrumentName) {\n        super();\n        this.classSortOrder = -25;\n\n        this.partId = undefined;\n        this.partName = undefined;\n        this.partAbbreviation = undefined;\n\n        this.instrumentId = undefined;\n        this.instrumentName = instrumentName;\n        this.instrumentAbbreviation = undefined;\n        this.midiProgram = undefined;\n        this._midiChannel = undefined;\n\n        this.lowestNote = undefined;\n        this.highestNote = undefined;\n\n        this.transpostion = undefined;\n\n        this.inGMPercMap = false;\n        this.soundfontFn = undefined;\n\n        if (instrumentName !== undefined) {\n            instrument.find(instrumentName, this);\n        }\n    }\n    /**\n     * Assign an instrument to an unused midi channel.\n     *\n     * Will use the global list of used channels (`music21.instrument.Instrument.usedChannels`)\n     * if not given.  Assigns up to `music21.instrument.maxMidi` channels (16)\n     * Skips 10 unless this.inGMPercMap is true\n     *\n     * @memberof music21.instrument.Instrument\n     * @param {Array<Int>} [usedChannels]\n     * @returns {Number}\n     */\n    autoAssignMidiChannel(usedChannels) {\n        if (usedChannels === undefined) {\n            usedChannels = instrument.usedChannels;\n        }\n        let startChannel = 0;\n        if (this.inGMPercMap) {\n            startChannel = 10;\n        }\n        for (let ch = startChannel; ch < instrument.maxMidi; ch++) {\n            if (ch % 16 === 10 && this.inGMPercMap !== true) {\n                continue; // skip 10 / percussion.\n            }\n            if (\n                usedChannels[ch] === undefined\n                || usedChannels[ch] === this.midiProgram\n            ) {\n                usedChannels[ch] = this.midiProgram;\n                this.midiChannel = ch;\n                return ch;\n            }\n        }\n        // TODO: no channels! throw exception!\n        return undefined;\n    }\n    get oggSounfont() {\n        return this.soundfontFn + '-ogg.js';\n    }\n    get mp3Soundfont() {\n        return this.soundfontFn + '-mp3.js';\n    }\n    get midiChannel() {\n        if (this._midiChannel === undefined) {\n            this.autoAssignMidiChannel();\n        }\n        return this._midiChannel;\n    }\n    set midiChannel(ch) {\n        this._midiChannel = ch;\n    }\n}\ninstrument.Instrument = Instrument;\n\ninstrument.usedChannels = []; // differs from m21p -- stored midiProgram numbers\ninstrument.maxMidi = 16;\n\ninstrument.info = [\n    { fn: 'acoustic_grand_piano', name: 'Acoustic Grand Piano', midiNumber: 0 },\n    {\n        fn: 'bright_acoustic_piano',\n        name: 'Bright Acoustic Piano',\n        midiNumber: 1,\n    },\n    { fn: 'electric_grand_piano', name: 'Electric Grand Piano', midiNumber: 2 },\n    { fn: 'honkytonk_piano', name: 'Honky-tonk Piano', midiNumber: 3 },\n    { fn: 'electric_piano_1', name: 'Electric Piano 1', midiNumber: 4 },\n    { fn: 'electric_piano_2', name: 'Electric Piano 2', midiNumber: 5 },\n    { fn: 'harpsichord', name: 'Harpsichord', midiNumber: 6 },\n    { fn: 'clavinet', name: 'Clavinet', midiNumber: 7 },\n    { fn: 'celesta', name: 'Celesta', midiNumber: 8 },\n    { fn: 'glockenspiel', name: 'Glockenspiel', midiNumber: 9 },\n    { fn: 'music_box', name: 'Music Box', midiNumber: 10 },\n    { fn: 'vibraphone', name: 'Vibraphone', midiNumber: 11 },\n    { fn: 'marimba', name: 'Marimba', midiNumber: 12 },\n    { fn: 'xylophone', name: 'Xylophone', midiNumber: 13 },\n    { fn: 'tubular_bells', name: 'Tubular Bells', midiNumber: 14 },\n    { fn: 'dulcimer', name: 'Dulcimer', midiNumber: 15 },\n    { fn: 'drawbar_organ', name: 'Drawbar Organ', midiNumber: 16 },\n    { fn: 'percussive_organ', name: 'Percussive Organ', midiNumber: 17 },\n    { fn: 'rock_organ', name: 'Rock Organ', midiNumber: 18 },\n    { fn: 'church_organ', name: 'Church Organ', midiNumber: 19 },\n    { fn: 'reed_organ', name: 'Reed Organ', midiNumber: 20 },\n    { fn: 'accordion', name: 'Accordion', midiNumber: 21 },\n    { fn: 'harmonica', name: 'Harmonica', midiNumber: 22 },\n    { fn: 'tango_accordion', name: 'Tango Accordion', midiNumber: 23 },\n    {\n        fn: 'acoustic_guitar_nylon',\n        name: 'Acoustic Guitar (nylon)',\n        midiNumber: 24,\n    },\n    {\n        fn: 'acoustic_guitar_steel',\n        name: 'Acoustic Guitar (steel)',\n        midiNumber: 25,\n    },\n    {\n        fn: 'electric_guitar_jazz',\n        name: 'Electric Guitar (jazz)',\n        midiNumber: 26,\n    },\n    {\n        fn: 'electric_guitar_clean',\n        name: 'Electric Guitar (clean)',\n        midiNumber: 27,\n    },\n    {\n        fn: 'electric_guitar_muted',\n        name: 'Electric Guitar (muted)',\n        midiNumber: 28,\n    },\n    { fn: 'overdriven_guitar', name: 'Overdriven Guitar', midiNumber: 29 },\n    { fn: 'distortion_guitar', name: 'Distortion Guitar', midiNumber: 30 },\n    { fn: 'guitar_harmonics', name: 'Guitar Harmonics', midiNumber: 31 },\n    { fn: 'acoustic_bass', name: 'Acoustic Bass', midiNumber: 32 },\n    {\n        fn: 'electric_bass_finger',\n        name: 'Electric Bass (finger)',\n        midiNumber: 33,\n    },\n    { fn: 'electric_bass_pick', name: 'Electric Bass (pick)', midiNumber: 34 },\n    { fn: 'fretless_bass', name: 'Fretless Bass', midiNumber: 35 },\n    { fn: 'slap_bass_1', name: 'Slap Bass 1', midiNumber: 36 },\n    { fn: 'slap_bass_2', name: 'Slap Bass 2', midiNumber: 37 },\n    { fn: 'synth_bass_1', name: 'Synth Bass 1', midiNumber: 38 },\n    { fn: 'synth_bass_2', name: 'Synth Bass 2', midiNumber: 39 },\n    { fn: 'violin', name: 'Violin', midiNumber: 40 },\n    { fn: 'viola', name: 'Viola', midiNumber: 41 },\n    { fn: 'cello', name: 'Cello', midiNumber: 42 },\n    { fn: 'contrabass', name: 'Contrabass', midiNumber: 43 },\n    { fn: 'tremolo_strings', name: 'Tremolo Strings', midiNumber: 44 },\n    { fn: 'pizzicato_strings', name: 'Pizzicato Strings', midiNumber: 45 },\n    { fn: 'orchestral_harp', name: 'Orchestral Harp', midiNumber: 46 },\n    { fn: 'timpani', name: 'Timpani', midiNumber: 47 },\n    { fn: 'string_ensemble_1', name: 'String Ensemble 1', midiNumber: 48 },\n    { fn: 'string_ensemble_2', name: 'String Ensemble 2', midiNumber: 49 },\n    { fn: 'synth_strings_1', name: 'Synth Strings 1', midiNumber: 50 },\n    { fn: 'synth_strings_2', name: 'Synth Strings 2', midiNumber: 51 },\n    { fn: 'choir_aahs', name: 'Choir Aahs', midiNumber: 52 },\n    { fn: 'voice_oohs', name: 'Voice Oohs', midiNumber: 53 },\n    { fn: 'synth_choir', name: 'Synth Choir', midiNumber: 54 },\n    { fn: 'orchestra_hit', name: 'Orchestra Hit', midiNumber: 55 },\n    { fn: 'trumpet', name: 'Trumpet', midiNumber: 56 },\n    { fn: 'trombone', name: 'Trombone', midiNumber: 57 },\n    { fn: 'tuba', name: 'Tuba', midiNumber: 58 },\n    { fn: 'muted_trumpet', name: 'Muted Trumpet', midiNumber: 59 },\n    { fn: 'french_horn', name: 'French Horn', midiNumber: 60 },\n    { fn: 'brass_section', name: 'Brass Section', midiNumber: 61 },\n    { fn: 'synth_brass_1', name: 'Synth Brass 1', midiNumber: 62 },\n    { fn: 'synth_brass_2', name: 'Synth Brass 2', midiNumber: 63 },\n    { fn: 'soprano_sax', name: 'Soprano Sax', midiNumber: 64 },\n    { fn: 'alto_sax', name: 'Alto Sax', midiNumber: 65 },\n    { fn: 'tenor_sax', name: 'Tenor Sax', midiNumber: 66 },\n    { fn: 'baritone_sax', name: 'Baritone Sax', midiNumber: 67 },\n    { fn: 'oboe', name: 'Oboe', midiNumber: 68 },\n    { fn: 'english_horn', name: 'English Horn', midiNumber: 69 },\n    { fn: 'bassoon', name: 'Bassoon', midiNumber: 70 },\n    { fn: 'clarinet', name: 'Clarinet', midiNumber: 71 },\n    { fn: 'piccolo', name: 'Piccolo', midiNumber: 72 },\n    { fn: 'flute', name: 'Flute', midiNumber: 73 },\n    { fn: 'recorder', name: 'Recorder', midiNumber: 74 },\n    { fn: 'pan_flute', name: 'Pan Flute', midiNumber: 75 },\n    { fn: 'blown_bottle', name: 'Blown bottle', midiNumber: 76 },\n    { fn: 'shakuhachi', name: 'Shakuhachi', midiNumber: 77 },\n    { fn: 'whistle', name: 'Whistle', midiNumber: 78 },\n    { fn: 'ocarina', name: 'Ocarina', midiNumber: 79 },\n    { fn: 'lead_1_square', name: 'Lead 1 (square)', midiNumber: 80 },\n    { fn: 'lead_2_sawtooth', name: 'Lead 2 (sawtooth)', midiNumber: 81 },\n    { fn: 'lead_3_calliope', name: 'Lead 3 (calliope)', midiNumber: 82 },\n    { fn: 'lead_4_chiff', name: 'Lead 4 chiff', midiNumber: 83 },\n    { fn: 'lead_5_charang', name: 'Lead 5 (charang)', midiNumber: 84 },\n    { fn: 'lead_6_voice', name: 'Lead 6 (voice)', midiNumber: 85 },\n    { fn: 'lead_7_fifths', name: 'Lead 7 (fifths)', midiNumber: 86 },\n    { fn: 'lead_8_bass__lead', name: 'Lead 8 (bass + lead)', midiNumber: 87 },\n    { fn: 'pad_1_new_age', name: 'Pad 1 (new age)', midiNumber: 88 },\n    { fn: 'pad_2_warm', name: 'Pad 2 (warm)', midiNumber: 89 },\n    { fn: 'pad_3_polysynth', name: 'Pad 3 (polysynth)', midiNumber: 90 },\n    { fn: 'pad_4_choir', name: 'Pad 4 (choir)', midiNumber: 91 },\n    { fn: 'pad_5_bowed', name: 'Pad 5 (bowed)', midiNumber: 92 },\n    { fn: 'pad_6_metallic', name: 'Pad 6 (metallic)', midiNumber: 93 },\n    { fn: 'pad_7_halo', name: 'Pad 7 (halo)', midiNumber: 94 },\n    { fn: 'pad_8_sweep', name: 'Pad 8 (sweep)', midiNumber: 95 },\n    { fn: 'fx_1_rain', name: 'FX 1 (rain)', midiNumber: 96 },\n    { fn: 'fx_2_soundtrack', name: 'FX 2 (soundtrack)', midiNumber: 97 },\n    { fn: 'fx_3_crystal', name: 'FX 3 (crystal)', midiNumber: 98 },\n    { fn: 'fx_4_atmosphere', name: 'FX 4 (atmosphere)', midiNumber: 99 },\n    { fn: 'fx_5_brightness', name: 'FX 5 (brightness)', midiNumber: 100 },\n    { fn: 'fx_6_goblins', name: 'FX 6 (goblins)', midiNumber: 101 },\n    { fn: 'fx_7_echoes', name: 'FX 7 (echoes)', midiNumber: 102 },\n    { fn: 'fx_8_scifi', name: 'FX 8 (sci-fi)', midiNumber: 103 },\n    { fn: 'sitar', name: 'Sitar', midiNumber: 104 },\n    { fn: 'banjo', name: 'Banjo', midiNumber: 105 },\n    { fn: 'shamisen', name: 'Shamisen', midiNumber: 106 },\n    { fn: 'koto', name: 'Koto', midiNumber: 107 },\n    { fn: 'kalimba', name: 'Kalimba', midiNumber: 108 },\n    { fn: 'bagpipe', name: 'Bagpipe', midiNumber: 109 },\n    { fn: 'fiddle', name: 'Fiddle', midiNumber: 110 },\n    { fn: 'shanai', name: 'Shanai', midiNumber: 111 },\n    { fn: 'tinkle_bell', name: 'Tinkle Bell', midiNumber: 112 },\n    { fn: 'agogo', name: 'Agogo', midiNumber: 113 },\n    { fn: 'steel_drums', name: 'Steel Drums', midiNumber: 114 },\n    { fn: 'woodblock', name: 'Woodblock', midiNumber: 115 },\n    { fn: 'taiko_drum', name: 'Taiko Drum', midiNumber: 116 },\n    { fn: 'melodic_tom', name: 'Melodic Tom', midiNumber: 117 },\n    { fn: 'synth_drum', name: 'Synth Drum', midiNumber: 118 },\n    { fn: 'reverse_cymbal', name: 'Reverse Cymbal', midiNumber: 119 },\n    { fn: 'guitar_fret_noise', name: 'Guitar Fret Noise', midiNumber: 120 },\n    { fn: 'breath_noise', name: 'Breath Noise', midiNumber: 121 },\n    { fn: 'seashore', name: 'Seashore', midiNumber: 122 },\n    { fn: 'bird_tweet', name: 'Bird Tweet', midiNumber: 123 },\n    { fn: 'telephone_ring', name: 'Telephone Ring', midiNumber: 124 },\n    { fn: 'helicopter', name: 'Helicopter', midiNumber: 125 },\n    { fn: 'applause', name: 'Applause', midiNumber: 126 },\n    { fn: 'gunshot', name: 'Gunshot', midiNumber: 127 },\n];\n\n/**\n * Find information for a given instrument (by filename or name)\n * and load it into an instrument object.\n *\n * @function music21.instrument.find\n * @memberof music21.instrument\n * @param {string} fn - name or filename of instrument\n * @param {music21.instrument.Instrument} [inst] - instrument object to load into\n * @returns {music21.instrument.Instrument|undefined}\n */\ninstrument.find = function instrument_find(fn, inst) {\n    if (inst === undefined) {\n        inst = new instrument.Instrument();\n    }\n    for (let i = 0; i < instrument.info.length; i++) {\n        const info = instrument.info[i];\n        if (info.fn === fn || info.name === fn) {\n            inst.soundfontFn = info.fn;\n            inst.instrumentName = info.name;\n            inst.midiProgram = info.midiNumber;\n            return inst;\n        }\n    }\n    return undefined;\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/renderOptions -- an object that defines the render options for a Stream\n *\n * note: no parallel in music21p\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\n/**\n * renderOptions module, see {@link music21.renderOptions}\n *\n * @exports music21/renderOptions\n */\n/**\n * Options for rendering a stream\n *\n * @namespace music21.renderOptions\n * @memberof music21\n */\nexport const renderOptions = {};\n\n/**\n * An object that contains information on rendering the current stream\n *\n * Found on every Stream as `.renderOptions`\n *\n * @class RenderOptions\n * @memberof music21.renderOptions\n */\nexport class RenderOptions {\n    constructor() {\n        const defaultOptions = {\n            displayClef: true,\n            displayTimeSignature: true,\n            displayKeySignature: true,\n\n            scaleFactor: { x: 0.7, y: 0.7 },\n\n            top: 0,\n            left: undefined,\n            width: undefined,\n            overriddenWidth: undefined,\n            height: undefined,\n            naiveHeight: 120,\n\n            systemIndex: 0,\n            partIndex: 0,\n            measureIndex: 0,\n\n            systemMeasureIndex: 0,\n            systemPadding: undefined,\n            naiveSystemPadding: 40,\n\n            stemDirection: undefined,\n\n            maxSystemWidth: undefined,\n            rightBarline: undefined,\n            staffLines: 5,\n            staffConnectors: ['single', 'brace'],\n            staffPadding: 60, // width...\n            events: {\n                click: 'play',\n                dblclick: undefined,\n                // resize\n            },\n            startNewSystem: false,\n            startNewPage: false,\n            showMeasureNumber: undefined,\n        };\n        common.merge(this, defaultOptions);\n    }\n}\nrenderOptions.RenderOptions = RenderOptions;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/vfShow -- Vexflow integration\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport * as $ from 'jquery';\nimport * as Vex from 'vexflow';\n\nimport { clef } from './clef.js';\nimport { debug } from './debug.js';\nimport { duration } from './duration.js';\n\nconst _clefSingleton = new clef.TrebleClef();\n\n/**\n * for rendering vexflow. Will eventually go to music21/converter/vexflow\n *\n * See {@link music21.vfShow} namespace for details\n *\n * @exports music21/vfShow\n */\n/**\n * Vexflow display related objects and methods.\n *\n * @namespace music21.vfShow\n * @memberof music21\n * @requires music21/common\n * @requires vexflow\n */\nexport const vfShow = {};\n\n/**\n * Represents a stack of objects that need to be rendered together.\n *\n * An intermediary state for showing created by {@link music21.vfShow.Renderer}.\n *\n * @class RenderStack\n * @memberof music21.vfShow\n * @property {Array<Vex.Flow.Voice>} voices - Vex.Flow.Voice objects\n * @property {Array<music21.stream.Stream>} streams - {@link music21.stream.Stream} objects\n * associated with the voices\n * @property {Array} textVoices - Vex.Flow.Voice objects for the text.\n */\nexport class RenderStack {\n    constructor() {\n        this.voices = [];\n        this.streams = [];\n        this.textVoices = [];\n        this.voiceToStreamMapping = new Map();\n    }\n    /**\n     * @memberof music21.vfShow.RenderStack\n     * @returns {Array} this.voices and this.textVoices as one array\n     */\n    allTickables() {\n        const t = [];\n        t.push(...this.voices);\n        t.push(...this.textVoices);\n        return t;\n    }\n    /**\n     * @memberof music21.vfShow.RenderStack\n     * @returns {Array<Array>} each array represents one staff....\n     * where this.voices and this.textVoices are all in that staff...\n     */\n    tickablesByStave() {\n        const tickablesByStave = []; // a list of lists of tickables being placed on the same Stave.\n        const knownStaves = []; // a list of Vex.Flow.Stave objects...\n\n        for (const t of this.allTickables()) {\n            const thisStaveIndex = knownStaves.indexOf(t.stave);\n            let currentStaveHolder;\n            if (thisStaveIndex === -1) {\n                knownStaves.push(t.stave);\n                currentStaveHolder = [];\n                tickablesByStave.push(currentStaveHolder);\n            } else {\n                currentStaveHolder = tickablesByStave[thisStaveIndex];\n            }\n            currentStaveHolder.push(t);\n        }\n        return tickablesByStave;\n    }\n}\nvfShow.RenderStack = RenderStack;\n\n/**\n * Renderer is a function that takes a stream, an\n * optional existing canvas or SVG element and a DOM\n * element where the canvas or SVG element should be placed\n * and renders the stream as Vexflow on the\n * canvas or svg element, placing it then in the where\n * DOM.\n *\n * \"s\" can be any type of Stream.\n *\n * \"div\" and \"where\" can be either a DOM\n * element or a jQuery object.\n *\n * @class Renderer\n * @memberof music21.vfShow\n * @param {music21.stream.Stream} s - main stream to render\n * @param {div} [div] - existing canvas or div-surroundingSVG element\n * @param {DOMObject|jQueryDOMObject} [where=document.body] - where to render the stream\n * @property {Vex.Flow.Renderer} vfRenderer - a Vex.Flow.Renderer to use\n * (will create if not existing)\n * @property {string} rendererType - canvas or svg\n * @property {Vex.Flow.Context} ctx - a Vex.Flow.Context (Canvas or SVG) to use.\n * @property {div} div - div-with-svg-or-canvas element\n * @property {jQueryDOMObject} $div - jQuery div or canvas element\n * @property {jQueryDOMObject} $where - jQuery element to render onto\n * @property {Vex.Flow.Formatter} activeFormatter - formatter\n * @property {Array<Vex.Flow.Beam>} beamGroups - beamGroups\n * @property {Array<Vex.Flow.StaveTie>} vfTies - ties as instances of Vex.Flow.StaveTie\n * @property {Array<number>} systemBreakOffsets - where to break the systems\n * @property {Array<Vex.Flow.Tuplet>} vfTuplets - tuplets represented in Vexflow\n * @property {Array<music21.vfShow.RenderStack>} stacks - array of RenderStack objects\n */\nexport class Renderer {\n    constructor(s, div, where) {\n        this.stream = s;\n        // this.streamType = s.classes[-1];\n        this.rendererType = 'svg';\n\n        this.div = undefined;\n        this.$div = undefined;\n        this.$where = undefined;\n        this.activeFormatter = undefined;\n        this._vfRenderer = undefined;\n        this._ctx = undefined;\n        this.beamGroups = [];\n        this.stacks = []; // an Array of RenderStacks: {voices: [Array of Vex.Flow.Voice objects],\n        //                                           streams: [Array of Streams, usually Measures]}\n        this.vfTies = [];\n        this.systemBreakOffsets = [];\n        this.vfTuplets = [];\n        // this.measureFormatters = [];\n        if (where !== undefined) {\n            if (where.jquery !== undefined) {\n                this.$where = where;\n            } else {\n                this.$where = $(where);\n            }\n        }\n        if (div !== undefined) {\n            if (div.jquery !== undefined) {\n                this.$div = div;\n                this.div = div[0];\n            } else {\n                this.div = div;\n                this.$div = $(div);\n            }\n        }\n    }\n\n    get vfRenderer() {\n        let backend;\n        if (this.rendererType === 'canvas') {\n            backend = Vex.Flow.Renderer.Backends.CANVAS;\n        } else {\n            backend = Vex.Flow.Renderer.Backends.SVG;\n        }\n\n        if (this._vfRenderer !== undefined) {\n            return this._vfRenderer;\n        } else {\n            this._vfRenderer = new Vex.Flow.Renderer(this.div, backend);\n            if (this.rendererType === 'svg') {\n                this._vfRenderer.resize(\n                    this.$div.attr('width'),\n                    this.$div.attr('height')\n                );\n            }\n            return this._vfRenderer;\n        }\n    }\n    set vfRenderer(vfr) {\n        this._vfRenderer = vfr;\n    }\n    get ctx() {\n        if (this._ctx !== undefined) {\n            return this._ctx;\n        } else {\n            this._ctx = this.vfRenderer.getContext();\n            if (\n                this.stream\n                && this.stream.renderOptions\n                && this.stream.renderOptions.scaleFactor.x\n                && this.stream.renderOptions.scaleFactor.y\n            ) {\n                this._ctx.scale(\n                    this.stream.renderOptions.scaleFactor.x,\n                    this.stream.renderOptions.scaleFactor.y\n                );\n            }\n            return this._ctx;\n        }\n    }\n    set ctx(ctx) {\n        this._ctx = ctx;\n    }\n    /**\n     *\n     * main function to render a Stream.\n     *\n     * if s is undefined, uses the stored Stream from\n     * the constructor object.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream]\n     */\n    render(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        let isScorelike = false;\n        let isPartlike = false;\n        const isFlat = s.isFlat;\n\n        if (s.isClassOrSubclass('Score')) {\n            isScorelike = true;\n        } else if (!isFlat && !s.get(0).isFlat) {\n            isScorelike = true;\n        } else if (!isFlat) {\n            isPartlike = true;\n        }\n        // requires organization Score -> Part -> Measure -> elements...\n        if (isScorelike) {\n            this.prepareScorelike(s);\n        } else if (isPartlike) {\n            this.preparePartlike(s);\n        } else {\n            this.prepareArrivedFlat(s);\n        }\n        this.formatMeasureStacks();\n        this.drawTies();\n        this.drawMeasureStacks();\n        this.drawBeamGroups();\n        this.drawTuplets();\n    }\n    /**\n     * Prepares a scorelike stream (i.e., one with parts or\n     * Streams that should be rendered vertically like parts)\n     * for rendering and adds Staff Connectors\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Score} s - prepare a stream of parts (i.e., Score)\n     */\n    prepareScorelike(s) {\n        // console.log('prepareScorelike called');\n        //\n        const parts = s.parts;\n        for (const subStream of parts) {\n            this.preparePartlike(subStream);\n        }\n        this.addStaffConnectors(s);\n    }\n    /**\n     *\n     * Prepares a Partlike stream (that is one with Measures\n     * or substreams that should be considered like Measures)\n     * for rendering.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Part} p\n     */\n    preparePartlike(p) {\n        // console.log('preparePartlike called');\n        this.systemBreakOffsets = [];\n        const measureList = p.measures;\n        for (let i = 0; i < measureList.length; i++) {\n            const subStream = measureList.get(i);\n            if (subStream.renderOptions.startNewSystem) {\n                this.systemBreakOffsets.push(subStream.offset);\n            }\n            if (i === p.length - 1) {\n                subStream.renderOptions.rightBarline = 'end';\n            }\n            if (this.stacks[i] === undefined) {\n                this.stacks[i] = new vfShow.RenderStack();\n            }\n            this.prepareMeasure(subStream, this.stacks[i]);\n        }\n        this.prepareTies(p);\n    }\n    /**\n     *\n     * Prepares a score that arrived flat... sets up\n     * stacks and vfTies after calling prepareFlat\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} m - a flat stream (maybe a measure or voice)\n     */\n    prepareArrivedFlat(m) {\n        const stack = new vfShow.RenderStack();\n        this.prepareMeasure(m, stack);\n        this.stacks[0] = stack;\n        this.prepareTies(m);\n    }\n    /**\n     *\n     * Prepares a measure (w/ or w/o voices) or generic Stream -- makes accidentals,\n     * associates a Vex.Flow.Stave with the stream and\n     * returns a vexflow Voice object\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Measure} m - a measure object (w or w/o voices)\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     */\n    prepareMeasure(m, stack) {\n        if (m.hasVoices === undefined || m.hasVoices() === false) {\n            this.prepareFlat(m, stack);\n        } else {\n            // get elements outside of voices;\n            const firstVoiceCopy = m.getElementsByClass('Voice').get(0).clone(false);\n            for (const el of m.getElementsNotOfClass('Voice')) {\n                firstVoiceCopy.insert(el.offset, el);\n            }\n            const rendOp = m.renderOptions; // get render options from Measure;\n            let stave;\n            for (const [i, voiceStream] of Array.from(m.getElementsByClass('Voice')).entries()) {\n                let voiceToRender = voiceStream;\n                if (i === 0) {\n                    voiceToRender = firstVoiceCopy;\n                }\n                stave = this.prepareFlat(voiceToRender, stack, stave, rendOp);\n                if (i === 0) {\n                    voiceStream.activeVFStave = voiceToRender.activeVFStave;\n                    voiceStream.storedVexflowStave = voiceToRender.activeVFStave;\n                }\n            }\n        }\n        return stack;\n    }\n    /**\n     * Main internal routine to prepare a flat stream\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - a flat stream object\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     * @param {Vex.Flow.Stave} [optionalStave] - an optional existing stave.\n     * @param {object} [optional_renderOp] - render options.\n     * Passed to {@link music21.vfShow.Renderer#renderStave}\n     * @returns {Vex.Flow.Stave} staff to return too\n     * (also changes the `stack` parameter and runs `makeNotation` on s)\n     */\n    prepareFlat(s, stack, optionalStave, optional_renderOp) {\n        s.makeNotation();\n        let stave;\n        if (optionalStave !== undefined) {\n            stave = optionalStave;\n        } else {\n            stave = this.renderStave(s, optional_renderOp);\n        }\n        s.activeVFStave = stave;\n        const vf_voice = this.getVoice(s, stave);\n        stack.voices.push(vf_voice);\n        stack.streams.push(s);\n        stack.voiceToStreamMapping.set(vf_voice, s);\n\n        if (s.hasLyrics()) {\n            stack.textVoices.push(this.getLyricVoice(s, stave));\n        }\n\n        return stave;\n    }\n    /**\n     * Render the Vex.Flow.Stave from a flat stream and draws it.\n     *\n     * Just draws the stave, not the notes, etc.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [m=this.stream] - a flat stream\n     * @param {object} [optional_rendOp] - render options, passed\n     * to {@link music21.vfShow.Renderer#newStave} and {@link music21.vfShow.Renderer#setClefEtc}\n     * @returns {Vex.Flow.Stave} stave\n     */\n    renderStave(m, optional_rendOp) {\n        if (m === undefined) {\n            m = this.stream;\n        }\n        const ctx = this.ctx;\n        // stave will be passed in from Measure when we have Voices\n        const stave = this.newStave(m, optional_rendOp);\n\n        this.setClefEtc(m, stave, optional_rendOp);\n        stave.setContext(ctx);\n        stave.draw();\n        return stave;\n    }\n    /**\n     * Draws the Voices (music and text) from `this.stacks`\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawMeasureStacks() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.stacks.length; i++) {\n            const voices = this.stacks[i].allTickables();\n            for (let j = 0; j < voices.length; j++) {\n                const v = voices[j];\n                v.draw(ctx);\n            }\n        }\n    }\n    /**\n     * draws the tuplets.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawTuplets() {\n        const ctx = this.ctx;\n        this.vfTuplets.forEach(vft => {\n            vft.setContext(ctx).draw();\n        });\n    }\n    /**\n     * draws the vfTies\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawTies() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.vfTies.length; i++) {\n            this.vfTies[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Finds all tied notes and creates the proper Vex.Flow.StaveTie objects in\n     * `this.vfTies`.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Part} p - a Part or similar object\n     */\n    prepareTies(p) {\n        const pf = p.flat.notesAndRests;\n        // console.log('newSystemsAt', this.systemBreakOffsets);\n        for (let i = 0; i < pf.length - 1; i++) {\n            const thisNote = pf.get(i);\n            if (thisNote.tie === undefined || thisNote.tie.type === 'stop') {\n                continue;\n            }\n            const nextNote = pf.get(i + 1);\n            let onSameSystem = true;\n            // this.systemBreakOffsets.length will be 0 for a flat score\n            for (let sbI = 0; sbI < this.systemBreakOffsets.length; sbI++) {\n                const thisSystemBreak = this.systemBreakOffsets[sbI];\n                if (\n                    thisNote.offset < thisSystemBreak\n                    && nextNote.offset >= thisSystemBreak\n                ) {\n                    onSameSystem = false;\n                    break;\n                }\n            }\n            if (onSameSystem) {\n                const vfTie = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                    last_indices: [0],\n                });\n                this.vfTies.push(vfTie);\n            } else {\n                // console.log('got me a tie across systemBreaks!');\n                const vfTie1 = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.vfTies.push(vfTie1);\n                const vfTie2 = new Vex.Flow.StaveTie({\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.vfTies.push(vfTie2);\n            }\n        }\n    }\n    /**\n     * Returns a Vex.Flow.Voice object with all the tickables (i.e., Notes, Voices, etc.)\n     *\n     * Does not draw it...\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream] -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave - not optional (would never fly in Python...)\n     * @returns {Vex.Flow.Voice}\n     */\n    getVoice(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        // gets a group of notes as a voice, but completely unformatted and not drawn.\n        const notes = this.vexflowNotes(s, stave);\n        const voice = this.vexflowVoice(s);\n        voice.setStave(stave);\n\n        voice.addTickables(notes);\n        return voice;\n    }\n    /**\n     * Returns a Vex.Flow.Voice with the lyrics set to render in the proper place.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Vex.Flow.Voice}\n     */\n    getLyricVoice(s, stave) {\n        const textVoice = this.vexflowVoice(s);\n        const lyrics = this.vexflowLyrics(s, stave);\n        textVoice.setStave(stave);\n        textVoice.addTickables(lyrics);\n        return textVoice;\n    }\n    /**\n     * Aligns all of `this.stacks` (after they've been prepared) so they align properly.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    formatMeasureStacks() {\n        // adds formats the voices, then adds the formatter information to every note in a voice...\n        for (let i = 0; i < this.stacks.length; i++) {\n            const stack = this.stacks[i];\n            const vf_voices = stack.voices;\n            const measuresOrVoices = stack.streams;\n            const formatter = this.formatVoiceGroup(stack);\n            for (let j = 0; j < measuresOrVoices.length; j++) {\n                const m = measuresOrVoices[j];\n                const v = vf_voices[j];\n                this.applyFormatterInformationToNotes(v.stave, m, formatter);\n            }\n        }\n    }\n    /**\n     * Formats a single voice group from a stack.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.vfShow.RenderStack} stack\n     * @param {Boolean} [autoBeam=measures[0].autoBeam]\n     * @returns {Vex.Flow.Formatter}\n     */\n    formatVoiceGroup(stack, autoBeam) {\n        // formats a group of voices to use the same formatter; returns the formatter\n        // if autoBeam is true then it will apply beams for each voice and put them in\n        // this.beamGroups;\n        const allTickables = stack.allTickables();\n        const vf_voices = stack.voices;\n        const measuresOrVoices = stack.streams;\n        if (autoBeam === undefined) {\n            autoBeam = measuresOrVoices[0].autoBeam;\n        }\n\n        const formatter = new Vex.Flow.Formatter();\n        // var minLength = formatter.preCalculateMinTotalWidth([voices]);\n        // console.log(minLength);\n        if (vf_voices.length === 0) {\n            return formatter;\n        }\n        let maxGlyphStart = 0; // find the stave with the farthest start point -- diff key sig, etc.\n        for (let i = 0; i < allTickables.length; i++) {\n            // console.log(voices[i], voices[i].stave, i);\n            if (allTickables[i].stave.getNoteStartX() > maxGlyphStart) {\n                maxGlyphStart = allTickables[i].stave.getNoteStartX();\n            }\n        }\n        for (let i = 0; i < allTickables.length; i++) {\n            allTickables[i].stave.setNoteStartX(maxGlyphStart); // corrected!\n        }\n        // TODO: should do the same for end_x -- for key sig changes, etc...\n\n        const stave = vf_voices[0].stave; // all staves should be same length, so does not matter;\n        const tickablesByStave = stack.tickablesByStave();\n        for (const staveTickables of tickablesByStave) {\n            formatter.joinVoices(staveTickables);\n        }\n        formatter.formatToStave(allTickables, stave);\n\n//        const vf_auto_stem = false;\n//        for (const voice of voices) {\n//            let activeBeamGroupNotes = [];\n//            for (let j = 0; j < voice.notes.length; j++) {\n//                const n = voice.notes[j];\n//                if (n.beams === undefined || !n.beams.getNumbers().includes(1)) {\n//                    continue;\n//                }\n//                const eighthNoteBeam = n.beams.getByNumber(1);\n//                if (eighthNoteBeam.type === 'start') {\n//                    activeBeamGroupNotes = [n];\n//                } else {\n//                    activeBeamGroupNotes.push(n);\n//                }\n//                if (eighthNoteBeam.type === 'stop') {\n//                    const vfBeam = new Vex.Flow.Beam(activeBeamGroupNotes, vf_auto_stem);\n//                    this.beamGroups.push(vfBeam);\n//                    activeBeamGroupNotes = []; // housekeeping, not really necessary...\n//                }\n//            }\n//        }\n\n        if (autoBeam) {\n            for (let i = 0; i < vf_voices.length; i++) {\n                // find beam groups -- n.b. this wipes out stemDirection. worth it usually...\n                const vf_voice = vf_voices[i];\n                const associatedStream = stack.voiceToStreamMapping.get(vf_voice);\n                let beatGroups;\n                if (\n                    associatedStream !== undefined\n                    && associatedStream.getSpecialContext('timeSignature') !== undefined\n                ) {\n                    beatGroups = associatedStream.getSpecialContext('timeSignature').vexflowBeatGroups(\n                        Vex\n                    );\n                    // TODO: getContextByClass...\n                    // console.log(beatGroups);\n                } else {\n                    beatGroups = [new Vex.Flow.Fraction(2, 8)]; // default beam groups\n                }\n                const beamGroups = Vex.Flow.Beam.applyAndGetBeams(\n                    vf_voice,\n                    undefined,\n                    beatGroups\n                );\n                this.beamGroups.push(...beamGroups);\n            }\n        }\n        return formatter;\n    }\n    /**\n     * Draws the beam groups.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawBeamGroups() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.beamGroups.length; i++) {\n            this.beamGroups[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Return a new Vex.Flow.Stave object, which represents\n     * a single MEASURE of notation in m21j\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Stave}\n     */\n    newStave(s, rendOp) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n        // measure level...\n        let width = rendOp.width;\n        if (width === undefined) {\n            width = s.estimateStaffLength() + rendOp.staffPadding;\n        }\n        let top = rendOp.top; // * rendOp.scaleFactor.y;\n        if (top === undefined) {\n            top = 0;\n        }\n        let left = rendOp.left;\n        if (left === undefined) {\n            left = 10;\n        }\n        // console.log('streamLength: ' + streamLength);\n        if (debug) {\n            console.log(\n                'creating new stave: left:'\n                    + left\n                    + ' top: '\n                    + top\n                    + ' width: '\n                    + width\n            );\n        }\n        const stave = new Vex.Flow.Stave(left, top, width);\n        return stave;\n    }\n    /**\n     * Sets the number of stafflines, puts the clef on the Stave,\n     * adds keySignature, timeSignature, and rightBarline\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @param {Vex.Flow.Stave} stave\n     * @param {object} [rendOp=s.renderOptions] - a {@link music21.renderOptions.RenderOptions}\n     * object that might have\n     * `{showMeasureNumber: boolean, rightBarLine: string<{'single', 'double', 'end'}>}`\n     */\n    setClefEtc(s, stave, rendOp) {\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n\n\n        let sClef = s.getSpecialContext('clef')\n            || s.getContextByClass('Clef');\n\n        // this should not be necessary now that derivation is\n        // checked, but does not hurt.\n        if (sClef === undefined && s.length) {\n            // the clef context might be from something else in the stream...\n            const firstEl = s.get(0);\n            sClef = firstEl.getContextByClass('Clef');\n        }\n        // last resort\n        sClef = sClef || _clefSingleton;\n\n        this.setStafflines(s, stave);\n        if (rendOp.showMeasureNumber) {\n            stave.setMeasure(rendOp.measureIndex + 1);\n        }\n        if (rendOp.displayClef) {\n            let ottava;\n            const size = 'default';\n            if (sClef.octaveChange === 1) {\n                ottava = '8va';\n            } else if (sClef.octaveChange === -1) {\n                ottava = '8vb';\n            }\n            stave.addClef(sClef.name, size, ottava);\n        }\n        const context_ks = s.getSpecialContext('keySignature') || s.getContextByClass('KeySignature');\n        if (context_ks !== undefined && rendOp.displayKeySignature) {\n            const ksVFName = context_ks.majorName().replace(/-/g, 'b');\n            stave.addKeySignature(ksVFName);\n        }\n\n        const context_ts = s.getSpecialContext('timeSignature') || s.getContextByClass('TimeSignature');\n        if (context_ts !== undefined && rendOp.displayTimeSignature) {\n            stave.addTimeSignature(\n                context_ts.numerator.toString()\n                    + '/'\n                    + context_ts.denominator.toString()\n            );\n        }\n        if (rendOp.rightBarline !== undefined) {\n            const bl = rendOp.rightBarline;\n            const barlineMap = {\n                single: 'SINGLE',\n                double: 'DOUBLE',\n                end: 'END',\n            };\n            const vxBL = barlineMap[bl];\n            if (vxBL !== undefined) {\n                stave.setEndBarType(Vex.Flow.Barline.type[vxBL]);\n            }\n        }\n    }\n    /**\n     * Sets the number of stafflines properly for the Stave object.\n     *\n     * This method does not just set Vex.Flow.Stave#setNumLines() except\n     * if the number of lines is 0 or >=4, because the default in VexFlow is\n     * to show the bottom(top?), not middle, lines and that looks bad.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - stream to get the `.staffLines`\n     * from `s.renderOptions` from -- should allow for overriding.\n     * @param {Vex.Flow.Stave} vexflowStave - stave to set the staff lines for.\n     */\n    setStafflines(s, vexflowStave) {\n        const rendOp = s.renderOptions;\n        if (rendOp.staffLines !== 5) {\n            if (rendOp.staffLines === 0) {\n                vexflowStave.setNumLines(0);\n            } else if (rendOp.staffLines === 1) {\n                // Vex.Flow.Stave.setNumLines hides all but the top line.\n                // this is better\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: false },\n                    { visible: true }, // show middle\n                    { visible: false },\n                    { visible: false },\n                ];\n            } else if (rendOp.staffLines === 2) {\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: false },\n                    { visible: true }, // show middle\n                    { visible: true },\n                    { visible: false },\n                ];\n            } else if (rendOp.staffLines === 3) {\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: true },\n                    { visible: true }, // show middle\n                    { visible: true },\n                    { visible: false },\n                ];\n            } else {\n                vexflowStave.setNumLines(rendOp.staffLines);\n            }\n        }\n    }\n    /**\n     * Gets the Vex.Flow.StaveNote objects from a Stream.\n     *\n     * Also changes `this.vfTuplets`.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream] - flat stream to find notes in\n     * @param {Vex.Flow.Stave} stave - Vex.Flow.Stave to render notes on to.\n     * @returns {Array<Vex.Flow.StaveNote>} notes to return\n     */\n    vexflowNotes(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat stream, returns a list of voices...\n        const notes = [];\n        const vfTuplets = [];\n        let activeTuplet;\n        let activeTupletLength = 0.0;\n        let activeTupletVexflowNotes = [];\n        let sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef');\n        if (sClef === undefined && s.length) {\n            // TODO: follow Derivation...\n            const firstEl = s.get(0);\n            sClef = firstEl.getContextByClass('Clef');\n        }\n        if (sClef === undefined) {\n            sClef = _clefSingleton;\n        }\n\n        const options = { clef: sClef, stave };\n        for (const thisEl of s) {\n            if (\n                thisEl.isClassOrSubclass('GeneralNote')\n                && thisEl.duration !== undefined\n            ) {\n                // sets thisEl.activeVexflowNote -- may be overwritten but not so fast...\n                const vfn = thisEl.vexflowNote(options);\n                if (vfn === undefined) {\n                    console.error('Cannot create a vexflowNote from: ', thisEl);\n                    continue;\n                }\n                if (stave !== undefined) {\n                    vfn.setStave(stave);\n                }\n                notes.push(vfn);\n\n                // account for tuplets...\n                if (thisEl.duration.tuplets.length > 0) {\n                    // only support one tuplet per note -- like vexflow\n                    if (activeTuplet === undefined) {\n                        activeTuplet = thisEl.duration.tuplets[0];\n                    }\n                    activeTupletVexflowNotes.push(vfn);\n                    activeTupletLength += thisEl.duration.quarterLength;\n                    // console.log(activeTupletLength, activeTuplet.totalTupletLength());\n                    //\n                    // Add tuplet when complete.\n                    if (\n                        activeTupletLength\n                            >= activeTuplet.totalTupletLength()\n                        || Math.abs(\n                            activeTupletLength\n                                - activeTuplet.totalTupletLength()\n                        ) < 0.001\n                    ) {\n                        // console.log(activeTupletVexflowNotes);\n                        const tupletOptions = {\n                            num_notes: activeTuplet.numberNotesActual,\n                            notes_occupied: activeTuplet.numberNotesNormal,\n                        };\n                        // console.log('tupletOptions', tupletOptions);\n                        const vfTuplet = new Vex.Flow.Tuplet(\n                            activeTupletVexflowNotes,\n                            tupletOptions\n                        );\n                        if (activeTuplet.tupletNormalShow === 'ratio') {\n                            vfTuplet.setRatioed(true);\n                        }\n\n                        vfTuplets.push(vfTuplet);\n                        activeTupletLength = 0.0;\n                        activeTuplet = undefined;\n                        activeTupletVexflowNotes = [];\n                    }\n                }\n            }\n        }\n        if (activeTuplet !== undefined) {\n            console.warn('incomplete tuplet found in stream: ', s);\n        }\n        if (vfTuplets.length > 0) {\n            this.vfTuplets.push(...vfTuplets);\n        }\n        return notes;\n    }\n\n    /**\n     * Gets an Array of `Vex.Flow.TextNote` objects from any lyrics found in s\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - flat stream to search.\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Array<Vex.Flow.TextNote>}\n     */\n    vexflowLyrics(s, stave) {\n        const getTextNote = (text, font, d, lyricObj) => {\n            // console.log(text, font, d);\n            const t1 = new Vex.Flow.TextNote({\n                text,\n                font,\n                duration: d.vexflowDuration,\n            })\n                .setLine(11)\n                .setStave(stave)\n                .setJustification(Vex.Flow.TextNote.Justification.LEFT);\n            if (lyricObj) {\n                t1.setStyle(lyricObj.style);\n            }\n            if (d.tuplets.length > 0) {\n                t1.applyTickMultiplier(d.tuplets[0].numberNotesNormal, d.tuplets[0].numberNotesActual);\n            }\n            return t1;\n        };\n\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat, gapless, no-overlap stream, returns a list of TextNote objects...\n        const lyricsObjects = [];\n        for (const el of s) {\n            const lyricsArray = el.lyrics;\n            if (lyricsArray === undefined) {\n                continue;\n            }\n            let text;\n            let d = el.duration;\n            let addConnector = false;\n            let firstLyric;\n            const font = {\n                family: 'Serif',\n                size: 12,\n                weight: '',\n            };\n\n            if (lyricsArray.length === 0) {\n                text = '';\n            } else {\n                firstLyric = lyricsArray[0];\n                text = firstLyric.text;\n                if (text === undefined) {\n                    text = '';\n                }\n                if (\n                    firstLyric.syllabic === 'middle'\n                    || firstLyric.syllabic === 'begin'\n                ) {\n                    addConnector = ' ' + firstLyric.lyricConnector;\n                    const tempQl = el.duration.quarterLength / 2.0;\n                    d = new duration.Duration(tempQl);\n                }\n                if (firstLyric.style.fontFamily) {\n                    font.family = firstLyric.style.fontFamily;\n                }\n                if (firstLyric.style.fontSize) {\n                    font.size = firstLyric.style.fontSize;\n                }\n                if (firstLyric.style.fontWeight) {\n                    font.weight = firstLyric.style.fontWeight;\n                }\n            }\n            const t1 = getTextNote(text, font, d, firstLyric);\n            lyricsObjects.push(t1);\n            if (addConnector !== false) {\n                const connector = getTextNote(addConnector, font, d);\n                lyricsObjects.push(connector);\n            }\n        }\n        return lyricsObjects;\n    }\n    /**\n     * Creates a Vex.Flow.Voice of the appropriate length given a Stream.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Voice}\n     */\n    vexflowVoice(s) {\n        const totalLength = s.duration.quarterLength;\n\n        let num1024 = Math.round(totalLength / (1 / 256));\n        let beatValue = 1024;\n\n        if (num1024 % 512 === 0) {\n            beatValue = 2;\n            num1024 /= 512;\n        } else if (num1024 % 256 === 0) {\n            beatValue = 4;\n            num1024 /= 256;\n        } else if (num1024 % 128 === 0) {\n            beatValue = 8;\n            num1024 /= 128;\n        } else if (num1024 % 64 === 0) {\n            beatValue = 16;\n            num1024 /= 64;\n        } else if (num1024 % 32 === 0) {\n            beatValue = 32;\n            num1024 /= 32;\n        } else if (num1024 % 16 === 0) {\n            beatValue = 64;\n            num1024 /= 16;\n        } else if (num1024 % 8 === 0) {\n            beatValue = 128;\n            num1024 /= 8;\n        } else if (num1024 % 4 === 0) {\n            beatValue = 256;\n            num1024 /= 4;\n        } else if (num1024 % 2 === 0) {\n            beatValue = 512;\n            num1024 /= 2;\n        }\n        // console.log('creating voice');\n        if (debug) {\n            console.log(\n                'New voice, num_beats: '\n                    + num1024.toString()\n                    + ' beat_value: '\n                    + beatValue.toString()\n            );\n        }\n        const vfv = new Vex.Flow.Voice({\n            num_beats: num1024,\n            beat_value: beatValue,\n            resolution: Vex.Flow.RESOLUTION,\n        });\n\n        // from vexflow/src/voice.js\n        //\n        // Modes allow the addition of ticks in three different ways:\n        //\n        // STRICT: This is the default. Ticks must fill the voice.\n        // SOFT:   Ticks can be added without restrictions.\n        // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n        //         tick length.\n        vfv.setMode(Vex.Flow.Voice.Mode.SOFT);\n        return vfv;\n    }\n    staffConnectorsMap(connectorType) {\n        const connectorMap = {\n            brace: Vex.Flow.StaveConnector.type.BRACE,\n            single: Vex.Flow.StaveConnector.type.SINGLE,\n            double: Vex.Flow.StaveConnector.type.DOUBLE,\n            bracket: Vex.Flow.StaveConnector.type.BRACKET,\n        };\n        return connectorMap[connectorType];\n    }\n\n    /**\n     * If a stream has parts (NOT CHECKED HERE) create and\n     * draw an appropriate Vex.Flow.StaveConnector\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Score} s\n     */\n    addStaffConnectors(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const parts = s.parts;\n        const numParts = parts.length;\n        if (numParts < 2) {\n            return;\n        }\n\n        const firstPart = parts.get(0);\n        const lastPart = parts.get(-1);\n\n        const firstPartMeasures = firstPart.measures;\n        const lastPartMeasures = lastPart.measures;\n        const numMeasures = firstPartMeasures.length;\n\n        for (let mIndex = 0; mIndex < numMeasures; mIndex++) {\n            const thisPartMeasure = firstPartMeasures.get(mIndex);\n            const lastPartMeasure = lastPartMeasures.get(mIndex); // only needed once per system but\n            // good for symmetry.\n            if (thisPartMeasure.renderOptions.startNewSystem) {\n                let topVFStaff = thisPartMeasure.activeVFStave;\n                let bottomVFStaff = lastPartMeasure.activeVFStave;\n                if (topVFStaff === undefined) {\n                    if (!thisPartMeasure.isFlat) {\n                        const thisPartVoice = thisPartMeasure\n                            .getElementsByClass('Stream')\n                            .get(0);\n                        topVFStaff = thisPartVoice.activeVFStave;\n                        if (topVFStaff === undefined) {\n                            console.warn(\n                                'No active VexFlow Staves defined for at least one measure'\n                            );\n                            continue;\n                        }\n                    }\n                }\n                if (bottomVFStaff === undefined) {\n                    if (!lastPartMeasure.isFlat) {\n                        const lastPartVoice = lastPartMeasure\n                            .getElementsByClass('Stream')\n                            .get(0);\n                        bottomVFStaff = lastPartVoice.activeVFStave;\n                        if (bottomVFStaff === undefined) {\n                            console.warn(\n                                'No active VexFlow Staves defined for at least one measure'\n                            );\n                            continue;\n                        }\n                    }\n                }\n                for (\n                    let i = 0;\n                    i < s.renderOptions.staffConnectors.length;\n                    i++\n                ) {\n                    const sc = new Vex.Flow.StaveConnector(\n                        topVFStaff,\n                        bottomVFStaff\n                    );\n                    const scTypeM21 = s.renderOptions.staffConnectors[i];\n                    const scTypeVF = this.staffConnectorsMap(scTypeM21);\n                    sc.setType(scTypeVF);\n                    sc.setContext(this.ctx);\n                    sc.draw();\n                }\n            }\n        }\n    }\n\n    /**\n     * The process of putting a Stream onto a div affects each of the\n     * elements in the Stream by adding pieces of information to\n     * each {@link music21.base.Music21Object} -- see `applyFormatterInformationToNotes`\n     *\n     * You might want to remove this information; this routine does that.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - can have parts, measures, etc.\n     * @param {boolean} [recursive=false]\n     */\n    removeFormatterInformation(s, recursive) {\n        s.storedVexflowStave = undefined;\n        for (const el of s) {\n            el.x = undefined;\n            el.y = undefined;\n            el.width = undefined;\n            el.systemIndex = undefined;\n            el.activeVexflowNote = undefined;\n            if (recursive && el.isClassOrSubclass('Stream')) {\n                this.removeFormatterInformation(el, recursive);\n            }\n        }\n    }\n\n    /**\n     * Adds the following pieces of information to each Note\n     *\n     * - el.x -- x location in pixels\n     * - el.y -- y location in pixels\n     * - el.width - width of element in pixels.\n     * - el.systemIndex -- which system is it on\n     * - el.activeVexflowNote - which Vex.Flow.StaveNote is it connected with.\n     *\n     * mad props to our friend Vladimir Viro for figuring this out! Visit http://peachnote.com/\n     *\n     * Also sets s.storedVexflowStave to stave.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {Vex.Flow.Stave} stave\n     * @param {music21.stream.Stream} [s=this.stream]\n     * @param {Vex.Flow.Formatter} formatter\n     */\n    applyFormatterInformationToNotes(stave, s, formatter) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef') || _clefSingleton;\n        let noteOffsetLeft = 0;\n        // var staveHeight = 80;\n        if (stave !== undefined) {\n            noteOffsetLeft = stave.start_x + stave.glyph_start_x;\n            if (debug) {\n                console.log(\n                    'noteOffsetLeft: '\n                        + noteOffsetLeft\n                        + ' ; stave.start_x: '\n                        + stave.start_x\n                );\n                console.log('Bottom y: ' + stave.getBottomY());\n            }\n            // staveHeight = stave.height;\n        }\n\n        let nextTicks = 0;\n        for (const el of s) {\n            if (el.isClassOrSubclass('GeneralNote')) {\n                const vfn = el.activeVexflowNote;\n                if (vfn === undefined) {\n                    continue;\n                }\n                const nTicks = parseInt(vfn.ticks);\n                const formatterNote\n                    = formatter.tickContexts.map[String(nextTicks)];\n                nextTicks += nTicks;\n                el.x = vfn.getAbsoluteX();\n                // these are a bit hacky...\n                el.systemIndex = s.renderOptions.systemIndex;\n\n                // console.log(el.x + \" \" + formatterNote.x + \" \" + noteOffsetLeft);\n                if (formatterNote === undefined) {\n                    continue;\n                }\n\n                el.width = formatterNote.width;\n                if (el.pitch !== undefined) {\n                    // note only...\n                    el.y\n                        = stave.getBottomY()\n                        - (sClef.lowestLine - el.pitch.diatonicNoteNum)\n                            * stave.options.spacing_between_lines_px;\n                    // console.log('Note DNN: ' + el.pitch.diatonicNoteNum + \" ; y: \" + el.y);\n                }\n            }\n        }\n        if (debug) {\n            for (const n of s) {\n                if (n.pitch !== undefined) {\n                    console.log(\n                        n.pitch.diatonicNoteNum\n                            + ' '\n                            + n.x\n                            + ' '\n                            + (n.x + n.width)\n                    );\n                }\n            }\n        }\n        s.storedVexflowStave = stave;\n    }\n}\nvfShow.Renderer = Renderer;\n","// import common from '../common.js';\nimport { Music21Exception } from '../exceptions21.js';\n\nexport class FilterException extends Music21Exception {\n\n}\n\nclass _StopIteration {}\n\nexport const StopIterationSingleton = new _StopIteration();\n\nexport class StreamFilter {\n    static get derivationStr() {\n        return 'streamFilter';\n    }\n\n    reset() {}\n\n    call(item, iterator) {\n        return true;\n    }\n}\n\nexport class IsFilter extends StreamFilter {\n    static get derivationStr() {\n        return 'is';\n    }\n\n    constructor(target=[]) {\n        super();\n        if (!Array.isArray(target)) {\n            target = [target];\n        }\n        this.target = target;\n        this.numToFind = target.length;\n    }\n\n    reset() {\n        this.numToFind = this.target.length;\n    }\n\n    call(item, iterator) {\n        if (this.numToFind === 0) {\n            return StopIterationSingleton;\n        }\n        if (this.target.includes(item)) {\n            this.numToFind -= 1;\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport class IsNotFilter extends IsFilter {\n    static get derivationStr() {\n        return 'IsNot';\n    }\n\n    constructor(target) {\n        super(target);\n        this.numToFind = Number.MAX_SAFE_INTEGER;\n    }\n\n    reset() {}\n\n    call(item, iterator) {\n        const ret = super.call(item, iterator);\n        if (ret === StopIterationSingleton) {\n            return ret;\n        } else {\n            return !ret;\n        }\n    }\n}\n\n// TODO(msc): IdFilter\n\nexport class ClassFilter extends StreamFilter {\n    static get derivationStr() {\n        return 'getElementsByClass';\n    }\n\n    constructor(classList=[]) {\n        super();\n        if (!Array.isArray(classList)) {\n            classList = [classList];\n        }\n        this.classList = classList;\n    }\n    // TODO: __eq__\n\n    call(item, iterator) {\n        return item.isClassOrSubclass(this.classList);\n    }\n}\n\nexport class ClassNotFilter extends ClassFilter {\n    static get derivationStr() {\n        return 'getElementsNotOfClass';\n    }\n\n    call(item, iterator) {\n        return !(super.call(item, iterator));\n    }\n}\n\n// TODO: GroupFilter\n\nexport class OffsetFilter extends StreamFilter {\n    static get derivationStr() {\n        return 'getElementsByOffset';\n    }\n    \n    constructor(\n        offsetStart,\n        offsetEnd,\n        {\n            includeEndBoundary=true,\n            mustFinishInSpan=false,\n            mustBeginInSpan=true,\n            includeElementsThatEndAtStart=true,\n        }={}) {\n        super();\n        this.offsetStart = offsetStart;\n        this.offsetEnd = offsetEnd;\n        this.includeEndBoundary = includeEndBoundary;\n        this.mustFinishInSpan = mustFinishInSpan;\n        this.mustBeginInSpan = mustBeginInSpan;\n        this.includeElementsThatEndAtStart = includeElementsThatEndAtStart;\n\n        \n        this.zeroLengthSearch = false;\n        if (offsetEnd === undefined) {\n            offsetEnd = offsetStart;\n            this.zeroLengthSearch = true;\n        } else if (offsetEnd <= offsetStart) {\n            this.zeroLengthSearch = true;\n        }\n\n    \n    }\n    \n    call(item, iterator) {\n        return this.isElementOffsetInRange(item, item.offset);\n    }\n    \n    isElementOffsetInRange(e, offset) {\n        if (offset > this.offsetEnd) {\n            // anything that begins after the span is definitely out.\n            return false;\n        }\n        const dur = e.duration;\n        const elementEnd = offset + dur.quarterLength;\n        if (elementEnd < this.offsetStart) {\n            // anything that finishes before the span ends is definitely out\n            return false;\n        }\n\n        // some part of the element is at least touching some part of span.\n\n        let elementIsZeroLength = false;\n        if (dur.quarterLength === 0) {\n            elementIsZeroLength = true;\n        }\n        if (this.zeroLengthSearch && elementIsZeroLength) {\n            return true;\n        }\n\n        if (this.mustFinishInSpan) {\n            if (elementEnd > this.offsetEnd) {\n                return false;\n            }\n            if (!this.includeEndBoundary && offset === this.offsetEnd) {\n                return false;\n            }\n        }\n\n        if (this.mustBeginInSpan) {\n            if (offset < this.offsetStart) {\n                return false;\n            }\n            if (!this.includeEndBoundary && offset === this.offsetEnd) {\n                return false;\n            }\n        } else if (!elementIsZeroLength && elementEnd === this.offsetEnd && this.zeroLengthSearch) {\n            return false;\n        }\n\n        if (!this.includeEndBoundary && offset === this.offsetEnd) {\n            return false;\n        }\n        if (!this.includeElementsThatEndAtStart && elementEnd === this.offsetStart) {\n            return false;\n        }\n        return true;\n    }    \n}\n\n// TODO: OffsetFilter (high priority)\n// TODO: OffsetHierarchyFilter\n","// import common from '../common.js';\nimport { StreamException } from '../exceptions21.js';\nimport * as filters from './filters.js';\n\nconst StopIterationSingleton = filters.StopIterationSingleton;\n\nexport class StreamIteratorException extends StreamException {\n\n}\n\nexport class StreamIterator {\n    constructor(srcStream, {\n        filterList=[],\n        restoreActiveSites=true,\n        activeInformation=undefined,\n        ignoreSorting=false,\n    }={}) {\n        if (!ignoreSorting && !srcStream.isSorted && srcStream.autoSort) {\n            srcStream.sort();\n        }\n        this.srcStream = srcStream;\n        this.index = 0;\n\n        this.srcStreamElements = srcStream.elements;\n        this.streamLength = this.srcStreamElements.length;\n\n        this.iterSection = '_elements';\n\n        this.cleanupOnStop = false;\n        this.restoreActiveSites = restoreActiveSites;\n        this.overrideDerivation = undefined;\n        if (!Array.isArray(filterList)) {\n            filterList = [filterList];\n        }\n        this.filters = filterList;\n        this._len = undefined;\n        this._matchingElements = undefined;\n\n        if (activeInformation === undefined) {\n            this.activeInformation = {};\n            this.updateActiveInformation();\n        } else {\n            this.activeInformation = activeInformation;\n        }\n    }\n\n    * [Symbol.iterator]() {\n        this.reset();\n        while (this.index < this.streamLength) {\n            this.index += 1;\n            let e;\n            try {\n                e = this.srcStreamElements[this.index - 1];\n            } catch (exc) {\n                continue;\n            }\n            const matches = this.matchesFilters(e);\n            if (matches === false) {\n                continue;\n            }\n            if (matches === StopIterationSingleton) {\n                break;\n            }\n            if (this.restoreActiveSites) {\n                e.activeSite = this.srcStream;\n            }\n            this.updateActiveInformation();\n            yield e;\n        }\n        this.cleanup();\n    }\n\n    get(k) {\n        const fe = this.matchingElements();\n        if (k < 0) {\n            k = fe.length + k;\n        }\n        return fe[k];\n    }\n\n    get length() {\n        if (this._len !== undefined) {\n            return this._len;\n        }\n        this._len = this.matchingElements().length;\n        this.reset();\n        return this._len;\n    }\n\n    updateActiveInformation() {\n        const ai = this.activeInformation;\n        ai.stream = this.srcStream;\n        ai.index = this.index - 1;\n        ai.iterSection = this.iterSection;\n        ai.sectionIndex = this.sectionIndex;\n    }\n\n    reset() {\n        this.index = 0;\n        this.iterSection = '_elements';\n        this.updateActiveInformation();\n        for (const f in this.filters) {\n            if (f.reset !== undefined) {\n                f.reset();\n            }\n        }\n    }\n\n    resetCaches() {\n        this._len = undefined;\n        this._matchingElements = undefined;\n    }\n\n    cleanup() {\n        if (this.cleanupOnStep) {\n            this.reset();\n            this.srcStream = undefined;\n            this.srcStreamElements = [];\n        }\n    }\n\n    matchingElements() {\n        if (this._matchingElements !== undefined) {\n            return this._matchingElements;\n        }\n\n        const savedIndex = this.index;\n        const savedRestoreActiveSites = this.restoreActiveSites;\n        this.restoreActiveSites = true;\n\n        const me = []; // matching elements\n        for (const e of this) {\n            me.push(e);\n        }\n        this.reset();\n        this.index = savedIndex;\n        this.restoreActiveSites = savedRestoreActiveSites;\n        this._matchingElements = me;\n        return me;\n    }\n\n    matchesFilters(e) {\n        for (const f of this.filters) {\n            const ret = f.call(e, this);\n            if (ret === false) {\n                return false; // must === false;\n            }\n            if (ret === StopIterationSingleton) {\n                return ret;\n            }\n        }\n        return true;\n    }\n\n    stream() {\n        const ss = this.srcStream;\n        // let clearIsSorted = false;\n\n        const found = ss.clone(false);\n        found.elements = [];\n        // derivation;\n        const fe = this.matchingElements();\n        for (const e of fe) {\n            const o = ss.elementOffset(e, { stringReturns: true });\n            // try: getOffsetInHierarchy...\n            // string returns;\n            found.insert(o, e);\n        }\n        // if (fe.length) {\n        //     found.coreElementsChanged()\n        // }\n        return found;\n    }\n\n    get activeElementList() {\n        return this.activeInformation.stream[this.activeInformation.iterSection];\n    }\n\n    addFilter(newFilter) {\n        for (const f of this.filters) {\n            if (newFilter === f) {\n                return this; // will not work... because == overrides.\n            }\n        }\n        this.filters.push(newFilter);\n        this.resetCaches();\n        return this;\n    }\n\n    removeFilter(oldFilter) {\n        const index = this.filters.indexOf(oldFilter);\n        if (index !== -1) {\n            this.filters.splice(index, 1);\n        }\n        this.resetCaches();\n        return this;\n    }\n\n    // getElementById(elementId) {\n    //\n    // }\n\n    getElementsByClass(classFilterList) {\n        return this.addFilter(new filters.ClassFilter(classFilterList));\n    }\n\n    getElementsNotOfClass(classFilterList) {\n        return this.addFilter(new filters.ClassNotFilter(classFilterList));\n    }\n\n    // getElementsByGroup;\n    // getElementsByOffset;\n    getElementsByOffset(...args) {\n        return this.addFilter(new filters.OffsetFilter(...args));\n    }\n    \n\n    get notes() {\n        return this.addFilter(new filters.ClassFilter('NotRest'));\n    }\n\n    get notesAndRests() {\n        return this.addFilter(new filters.ClassFilter('GeneralNote'));\n    }\n\n    get parts() {\n        return this.addFilter(new filters.ClassFilter('Part'));\n    }\n\n    get spanners() {\n        return this.addFilter(new filters.ClassFilter('Spanner'));\n    }\n\n    get voices() {\n        return this.addFilter(new filters.ClassFilter('Voice'));\n    }\n}\n\nexport class OffsetIterator extends StreamIterator {\n    constructor(srcStream, options={}) {\n        super(srcStream, options);\n        this.nextToYield = [];\n        this.nextOffsetToYield = undefined;\n    }\n\n    * [Symbol.iterator]() {\n        this.reset();\n        this.sort();\n\n        while (this.index < this.streamLength) {            \n            this.index += 1;\n            let e;\n            try {\n                e = this.srcStreamElements[this.index - 1];\n            } catch (exc) {\n                continue;\n            }\n            const matches = this.matchesFilters(e);\n            if (matches === false) {\n                continue;\n            }\n            if (matches === StopIterationSingleton) {\n                break;\n            }\n            const yieldEls = [e];\n            const eOffset = this.elementOffset(e);\n            \n            for (let forwardIndex = this.index; forwardIndex < this.streamLength; forwardIndex++) {\n                let nextE;\n                try {\n                    nextE = this.srcStreamElements[this.index - 1];\n                } catch (exc) {\n                    continue;\n                }\n                const nextOffset = this.elementOffset(nextE);\n                if (nextOffset !== eOffset) {\n                    this.nextToYield = [nextE];\n                    this.nextOffsetToYield = nextOffset;\n                    break;\n                }\n                if (!this.matchesFilters(nextE)) {\n                    continue;\n                }\n                \n                yieldEls.push(e);\n                this.index = forwardIndex;\n            }\n            \n            if (this.restoreActiveSites) {\n                for (const el of yieldEls) {\n                    el.activeSite = this.srcStream;                    \n                }\n            }\n            this.updateActiveInformation();\n            yield yieldEls;\n        }\n        this.cleanup();\n    }\n    \n    reset() {\n        super.reset();\n        this.nextToYield = [];\n        this.nextOffsetToYield = undefined;        \n    }\n}\n\n\nexport class RecursiveIterator extends StreamIterator {\n    constructor(srcStream, {\n        filterList,\n        restoreActiveSites,\n        activeInformation,\n        streamsOnly=false,\n        includeSelf=false,\n        ignoreSorting,\n    }={}) {\n        super(srcStream, {\n            filterList,\n            restoreActiveSites,\n            activeInformation,\n            ignoreSorting,\n        });\n        this.returnSelf = includeSelf;\n        this.includeSelf = includeSelf;\n        this.ignoreSorting = ignoreSorting;\n        this.iteratorStartOffsetInHierarchy = 0.0;\n        if (streamsOnly) {\n            this.filters.push(new filters.ClassFilter('Stream'));\n        }\n        this.childRecursiveIterator = undefined;\n    }\n\n    reset() {\n        this.returnSelf = this.includeSelf;\n        this.childRecursiveIterator = undefined;\n        this.activeInformation.lastYielded = undefined;\n        super.reset();\n    }\n\n    * [Symbol.iterator]() {\n        this.reset(); // in __iter__.\n\n        if (this.returnSelf && this.matchesFilters(this.srcStream)) {\n            this.activeInformation.stream = undefined;\n            this.activeInformation.index = -1;\n            this.activeInformation.lastYielded = this.srcStream;\n            this.returnSelf = false;\n            yield this.srcStream;\n        } else if (this.returnSelf) {\n            // did not match filters...\n            this.returnSelf = false;\n        }\n\n        while (this.index < this.streamLength) {\n            this.index += 1;\n            const e = this.srcStreamElements[this.index - 1];\n            if (e === undefined) {\n                // maybe can happen if elements changed.\n                continue;\n            }\n            if (this.matchesFilters(e)) {\n                if (this.restoreActiveSites) {\n                    e.activeSite = this.srcStream;\n                }\n                this.updateActiveInformation();\n                this.activeInformation.lastYielded = e;\n                yield e;\n            }\n\n            if (e.isStream) {\n                this.childRecursiveIterator = new RecursiveIterator(\n                    e,\n                    {\n                        restoreActiveSites: this.restoreActiveSites,\n                        filterList: this.filters, // shared list\n                        activeInformation: this.activeInformation, // shared\n                        includeSelf: false,\n                        ignoreSorting: this.ignoreSorting,\n                        // parentIterator: this,\n                        //\n                    }\n                );\n                const newStartOffset = (\n                    this.iteratorStartOffsetInHierarchy\n                    + this.srcStream.elementOffset(e)\n                );\n                this.childRecursiveIterator.iteratorStartOffsetInHierarchy = newStartOffset;\n                for (const e of this.childRecursiveIterator) {\n                    yield e;\n                }\n                this.childRecursiveIterator = undefined;\n            }\n        }\n        this.activeInformation.lastYielded = undefined;\n        this.cleanup();\n    }\n\n    matchingElements() {\n        // none of this may be necessary in JavaScript,\n        // but perhaps if called during iteration.\n        const savedRecursiveIterator = this.childRecursiveIterator;\n        const fe = super.matchingElements();\n        this.childRecursiveIterator = savedRecursiveIterator;\n        return fe;\n    }\n\n    /**\n     *   Returns a stack of RecursiveIterators at this point in the iteration.\n     *   Last is most recent.\n     */\n    iteratorStack() {\n        const iterStack = [this];\n        let x  = this;\n        while (x.childRecursiveIterator !== undefined) {\n            x = x.childRecursiveIterator;\n            iterStack.push(x);\n        }\n        return iterStack;\n    }\n\n    /**\n     *   Returns a stack of Streams at this point.  Last is most recent.\n     */\n    streamStack() {\n        return this.iteratorStack().map(iter => iter.srcStream);\n    }\n\n    /**\n     *  Called on the current iterator, returns the current offset\n     *  in the hierarchy. or undefined if we are not currently iterating.\n     */\n    currentHierarchyOffset() {\n        const lastYield = this.activeInformation.lastYielded;\n        if (lastYield === undefined) {\n            return undefined;\n        }\n\n        const iteratorStack = this.iteratorStack();\n        const newestIterator = iteratorStack[iteratorStack.length - 1];\n        const lastStream = newestIterator.srcStream;\n        const lastStartOffset = newestIterator.iteratorStartOffsetInHierarchy;\n        if (lastYield === lastStream) {\n            return lastStartOffset;\n        } else {\n            return lastStartOffset + lastStream.elementOffset(lastYield);\n        }\n    }\n    // TODO(msc): getElementsByOffsetInHierarchy\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tie -- ties!\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport { prebase } from './prebase.js';\nimport { Music21Exception } from './exceptions21.js';\n\n/**\n * Simple tie module {@link music21.tie} namespace\n *\n * @exports music21/tie\n */\n\n/**\n * Tie namespace, just has the {@link music21.tie.Tie} object\n *\n * @namespace music21.tie\n * @memberof music21\n * @requires music21/prebase\n */\nexport const tie = {};\nconst VALID_TIE_TYPES = ['start', 'stop', 'continue', 'let-ring', undefined];\n\n/**\n * Tie class. Found in {@link music21.note.GeneralNote} `.tie`.\n *\n * Does not support advanced music21p values `.to` and `.from`\n *\n * @class Tie\n * @memberof music21.tie\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - 'start', 'stop', 'continue', or 'let-ring'\n * @property {string} type - the tie type\n * @property {string} style - only supports 'normal' for now.\n * @property {string|undefined} placement - undefined = unknown or above/below. (NB curently does nothing)\n */\nexport class Tie extends prebase.ProtoM21Object {\n    constructor(type) {\n        super();\n        this._type = undefined;\n        this.style = 'normal';\n        this.type = type;\n        this.placement = undefined;\n    }\n    get type() {\n        return this._type;\n    }\n    set type(newType) {\n        if (!VALID_TIE_TYPES.includes(newType)) {\n            throw new Music21Exception(\n                'Tie type must be one of \"start\", \"stop\", \"continue\", \"let-ring\"'\n            );\n        }\n        this._type = newType;\n    }\n}\ntie.Tie = Tie;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/dynamics -- Dynamics\n *\n * note that Vex.Flow does not support Dynamics yet and we do not support MIDI dynamics,\n *  so currently of limited value...\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\n\n/**\n * dynamics Module. See {@link music21.dynamics} for namespace\n *\n * @exports music21/dynamics\n */\n/**\n * Dynamics related objects.\n *\n * N.B. Firefox completely ignores dyanmics on playback!\n *\n * Currently do not export to Vexflow.  :-(\n *\n * @namespace music21.dynamics\n * @memberof music21\n * @requires music21/base\n */\nexport const dynamics = {};\ndynamics.shortNames = [\n    'pppppp',\n    'ppppp',\n    'pppp',\n    'ppp',\n    'pp',\n    'p',\n    'mp',\n    'mf',\n    'f',\n    'fp',\n    'sf',\n    'ff',\n    'fff',\n    'ffff',\n    'fffff',\n    'ffffff',\n];\ndynamics.longNames = {\n    ppp: ['pianississimo'],\n    pp: ['pianissimo'],\n    p: ['piano'],\n    mp: ['mezzopiano'],\n    mf: ['mezzoforte'],\n    f: ['forte'],\n    fp: ['fortepiano'],\n    sf: ['sforzando'],\n    ff: ['fortissimo'],\n    fff: ['fortississimo'],\n};\ndynamics.englishNames = {\n    ppp: ['extremely soft'],\n    pp: ['very soft'],\n    p: ['soft'],\n    mp: ['moderately soft'],\n    mf: ['moderately loud'],\n    f: ['loud'],\n    ff: ['very loud'],\n    fff: ['extremely loud'],\n};\ndynamics.dynamicStrToScalar = {\n    None: [0.5], // default value\n    n: [0.0],\n    pppp: [0.1],\n    ppp: [0.15],\n    pp: [0.25],\n    p: [0.35],\n    mp: [0.45],\n    mf: [0.55],\n    f: [0.7],\n    fp: [0.75],\n    sf: [0.85],\n    ff: [0.85],\n    fff: [0.9],\n    ffff: [0.95],\n};\n\n/**\n * A representation of a dynamic.\n *\n * @class Dynamic\n * @memberof music21.dynamics\n * @extends music21.base.Music21Object\n * @param {number|string} value - either a number between 0 and 1 or a dynamic mark such as \"ff\" or \"mp\"\n * @property {string|undefined} value - a name such as \"pp\" etc.\n * @property {string|undefined} longName - a longer name such as \"pianissimo\"\n * @property {string|undefined} englishName - a name such as \"very soft\"\n * @property {number} volumeScalar - a number between 0 and 1.\n */\nexport class Dynamic extends base.Music21Object {\n    constructor(value) {\n        super();\n        this._value = undefined;\n        this._volumeScalar = undefined;\n        this.longName = undefined;\n        this.englishName = undefined;\n        this.value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (typeof value !== 'string') {\n            // assume number\n            this._volumeScalar = value;\n            if (value <= 0) {\n                this._value = 'n';\n            } else if (value < 0.11) {\n                this._value = 'pppp';\n            } else if (value < 0.16) {\n                this._value = 'ppp';\n            } else if (value < 0.26) {\n                this._value = 'pp';\n            } else if (value < 0.36) {\n                this._value = 'p';\n            } else if (value < 0.5) {\n                this._value = 'mp';\n            } else if (value < 0.65) {\n                this._value = 'mf';\n            } else if (value < 0.8) {\n                this._value = 'f';\n            } else if (value < 0.9) {\n                this._value = 'ff';\n            } else {\n                this._value = 'fff';\n            }\n        } else {\n            this._value = value;\n            this._volumeScalar = undefined;\n        }\n        if (this._value in dynamics.longNames) {\n            this.longName = dynamics.longNames[this._value][0];\n        } else {\n            this.longName = undefined;\n        }\n        if (this._value in dynamics.englishNames) {\n            this.englishName = dynamics.englishNames[this._value][0];\n        } else {\n            this.englishName = undefined;\n        }\n    }\n    get volumeScalar() {\n        if (this._volumeScalar !== undefined) {\n            return this._volumeScalar;\n        } else if (this._value in dynamics.dynamicStrToScalar) {\n            return dynamics.dynamicStrToScalar[this._value][0];\n        } else {\n            return undefined;\n        }\n    }\n    set volumeScalar(value) {\n        if (typeof value === 'number' && value <= 1 && value >= 0) {\n            this._volumeScalar = value;\n        }\n    }\n}\ndynamics.Dynamic = Dynamic;\n","import * as Vex from 'vexflow';\n\nimport { base } from './base.js';\n/**\n * Expressions module.  See {@link music21.expressions}\n *\n * @exports music21/expressions\n */\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @namespace music21.expressions\n * @memberof music21\n * @requires music21/expressions\n */\nexport const expressions = {};\n\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @class Expression\n * @memberof music21.expressions\n * @extends music21.base.Music21Object\n * @property {string} name\n * @property {string} vexflowModifier\n * @property {Int} setPosition\n */\nexport class Expression extends base.Music21Object {\n    constructor() {\n        super();\n        this.name = 'expression';\n        this.vexflowModifier = '';\n        this.setPosition = undefined;\n    }\n    /**\n     * Renders this Expression as a Vex.Flow.Articulation\n     *\n     * (this is not right for all cases)\n     *\n     * @memberof music21.expressions.Expression\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfe = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfe.setPosition(this.setPosition);\n        }\n        return vfe;\n    }\n}\nexpressions.Expression = Expression;\n\n/**\n * A fermata...\n *\n * @class Fermata\n * @memberof music21.expressions\n * @extends music21.expressions.Expression\n */\nexport class Fermata extends Expression {\n    constructor() {\n        super();\n        this.name = 'fermata';\n        this.vexflowModifier = 'a@a';\n        this.setPosition = 3;\n    }\n}\nexpressions.Fermata = Fermata;\n","import { pitch } from './pitch.js';\n\nconst shorthandNotation = {\n    '': [5, 3],\n    '5': [5, 3],\n    '6': [6, 3],\n    '7': [7, 5, 3],\n    '9': [9, 7, 5, 3],\n    '11': [11, 9, 7, 5, 3],\n    '13': [13, 11, 9, 7, 5, 3],\n    '6,5': [6, 5, 3],\n    '4,3': [6, 4, 3],\n    '4,2': [6, 4, 2],\n    '2': [6, 4, 2],\n};\n/**\n * In music21p is in figuredBass.notation -- eventually to be moved there.\n */\n\nclass Notation {\n    constructor(notationColumn) {\n        if (notationColumn === undefined) {\n            notationColumn = '';\n        }\n        this.notationColumn = notationColumn;\n        this.figureStrings = undefined;\n        this.origNumbers = undefined;\n        this.origModStrings = undefined;\n        this.numbers = undefined;\n        this.modifierStrings = undefined;\n        this._parseNotationColumn();\n        this._translateToLonghand();\n\n        this.modifiers = undefined;\n        this.figures = undefined;\n        this._getModifiers();\n        this._getFigures();\n    }\n\n    /**\n     * _parseNotationColumn - Given a notation column below a pitch, defines both this.numbers\n     *    and this.modifierStrings, which provide the intervals above the\n     *    bass and (if necessary) how to modify the corresponding pitches\n     *    accordingly.\n     *\n     * @return {undefined}\n     */\n\n    _parseNotationColumn() {\n        const nc = this.notationColumn;\n        const figures = nc.split(/,/);\n        const numbers = [];\n        const modifierStrings = [];\n        const figureStrings = [];\n\n        for (let figure of figures) {\n            figure = figure.trim();\n            figureStrings.push(figure);\n            let numberString = '';\n            let modifierString = '';\n            for (const c of figure) {\n                if (c.match(/\\d/)) {\n                    numberString += c;\n                } else {\n                    modifierString += c;\n                }\n            }\n            let number;\n            if (numberString !== '') {\n                number = parseInt(numberString);\n            }\n            numbers.push(number);\n            if (modifierString === '') {\n                modifierString = undefined;\n            }\n            modifierStrings.push(modifierString);\n        }\n        this.origNumbers = numbers;\n        this.numbers = numbers;\n        this.modifierStrings = modifierStrings;\n        this.figureStrings = figureStrings;\n    }\n\n    _translateToLonghand() {\n        let oldNumbers = this.numbers;\n        let newNumbers = oldNumbers;\n        const oldModifierStrings = this.modifierStrings;\n        let newModifierStrings = oldModifierStrings;\n        const oldNumbersString = oldNumbers.toString();\n\n        if (shorthandNotation[oldNumbersString] !== undefined) {\n            newNumbers = shorthandNotation[oldNumbersString];\n            newModifierStrings = [];\n            const temp = [];\n            for (const number of oldNumbers) {\n                if (number === undefined) {\n                    temp.push(3);\n                } else {\n                    temp.push(number);\n                }\n            }\n            oldNumbers = temp;\n\n            for (const number of newNumbers) {\n                let newModifierString;\n                if (oldNumbers.includes(number)) {\n                    const modifierStringIndex = oldNumbers.indexOf(number);\n                    newModifierString = oldModifierStrings[modifierStringIndex];\n                }\n                newModifierStrings.push(newModifierString);\n            }\n        } else {\n            const temp = [];\n            for (const number of oldNumbers) {\n                if (number === undefined) {\n                    temp.push(3);\n                } else {\n                    temp.push(number);\n                }\n            }\n            newNumbers = temp;\n        }\n        this.numbers = newNumbers;\n        this.modifierStrings = newModifierStrings;\n    }\n\n    _getModifiers() {\n        const modifiers = [];\n        for (let i = 0; i < this.numbers.length; i++) {\n            const modifierString = this.modifierStrings[i];\n            const modifier = new Modifier(modifierString);\n            modifiers.push(modifier);\n        }\n        this.modifiers = modifiers;\n    }\n\n    _getFigures() {\n        const figures = [];\n        for (let i = 0; i < this.numbers.length; i++) {\n            const number = this.numbers[i];\n            const modifierString = this.modifierStrings[i];\n            const figure = new Figure(number, modifierString);\n            figures.push(figure);\n        }\n        this.figures = figures;\n    }\n}\n\nclass Figure {\n    constructor(number, modifierString) {\n        this.number = number;\n        this.modifierString = modifierString;\n        this.modifier = new Modifier(modifierString);\n    }\n}\n\nconst specialModifiers = {\n    '+': '#',\n    '/': '-',\n    '\\\\': '#',\n    b: '-',\n    bb: '--',\n    bbb: '---',\n    bbbb: '-----',\n    '++': '##',\n    '+++': '###',\n    '++++': '####',\n};\n\nclass Modifier {\n    constructor(modifierString) {\n        this.modifierString = modifierString;\n        this.accidental = this._toAccidental();\n    }\n\n    _toAccidental() {\n        let modStr = this.modifierString;\n        if (modStr === undefined || modStr === '') {\n            return undefined;\n        }\n        const a = new pitch.Accidental();\n        if (specialModifiers[modStr] !== undefined) {\n            modStr = specialModifiers[modStr];\n        }\n        a.set(modStr);\n        return a;\n    }\n\n    modifyPitchName(pitchNameToAlter) {\n        const pitchToAlter = new pitch.Pitch(pitchNameToAlter);\n        this.modifyPitch(pitchToAlter, true);\n        return pitchToAlter.name;\n    }\n\n    modifyPitch(pitchToAlter, inPlace) {\n        if (inPlace !== true) {\n            pitchToAlter = pitchToAlter.clone();\n        }\n\n        if (this.accidental === undefined) {\n            return pitchToAlter;\n        }\n\n        if (\n            this.accidental.alter === 0.0\n            || pitchToAlter.accidental === undefined\n        ) {\n            pitchToAlter.accidental = this.accidental.clone();\n        } else {\n            const newAccidental = new pitch.Accidental();\n            const newAlter\n                = pitchToAlter.accidental.alter + this.accidental.alter;\n            newAccidental.set(newAlter);\n            pitchToAlter.accidental = newAccidental;\n        }\n        return pitchToAlter;\n    }\n}\n\nexport const figuredBass = {\n    Notation,\n    Figure,\n    Modifier,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/fromPython -- Conversion from music21p jsonpickle streams\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n * usage:\n *\n * in python:\n *\n * s = corpus.parse('bwv66.6')\n * stringRepresentingM21JsonPickle = s.freezeStream('jsonpickle')\n *\n * in js:\n *\n * pyConv = new music21.fromPython.Converter();\n * s = pyConv.run(stringRepresentingM21JsonPickle);\n *\n *\n */\nimport * as jsonpickle from 'jsonpickle';\n\nconst jp = jsonpickle;\n/**\n * fromPython module -- see {@link music21.fromPython}\n */\nconst unpickler = jp.unpickler;\n\n/**\n * Converter for taking a Python-encoded jsonpickle music21p stream\n * and loading it into music21j\n *\n * Very very alpha.  See music21(p).vexflow modules to see how it works.\n *\n * Requires Cuthbert's jsonpickle.js port (included in music21j)\n *\n * @namespace music21.fromPython\n * @extends music21\n * @requires jsonpickle\n */\nexport const fromPython = {};\n\n/**\n *\n * @class Converter\n * @memberof music21.fromPython\n * @property {boolean} debug\n * @property {Array<string>} knownUnparsables - list of classes that cannot be parsed\n * @property {object} handlers - object mapping string names of classes to a set of function calls to perform when restoring or post-restoring. (too complicated to explain; read the code)\n */\nexport class Converter {\n    constructor() {\n        this.debug = true;\n        this.knownUnparsables = [\n            'music21.spanner.Line',\n            'music21.instrument.Instrument',\n            'music21.layout.StaffGroup',\n            'music21.layout.StaffLayout',\n            'music21.layout.SystemLayout',\n            'music21.layout.PageLayout',\n            'music21.expressions.TextExpression',\n            'music21.bar.Barline', // Soon...\n            'music21.tempo.MetronomeMark', // should be possible\n            'music21.metadata.Metadata', // Soon...\n        ];\n        this.handlers = {\n            'music21.duration.Duration': {\n                post_restore: d => {\n                    d.quarterLength = d._qtrLength;\n                    return d;\n                },\n            },\n            'music21.meter.TimeSignature': {\n                post_restore: ts => {\n                    ts._numerator = ts.displaySequence._numerator;\n                    ts._denominator = ts.displaySequence._denominator;\n                    return ts;\n                },\n            },\n            'music21.stream.Part': {\n                post_restore: p => {\n                    this.currentPart = p;\n                    this.lastClef = undefined;\n                    this.lastKeySignature = undefined;\n                    this.lastTimeSignature = undefined;\n                    this.streamPostRestore(p);\n                    return p;\n                },\n            },\n            // TODO: all inherit somehow, through _classes or better, prototype...\n            'music21.stream.Score': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Stream': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Measure': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Voice': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n        };\n        this.currentPart = undefined;\n        this.lastClef = undefined;\n        this.lastKeySignature = undefined;\n        this.lastTimeSignature = undefined;\n    }\n\n    /**\n     * Fixes up some references that cannot be unpacked from jsonpickle.\n     *\n     * @method music21.fromPython.Converter#streamPostRestore\n     * @memberof music21.fromPython.Converter\n     * @param {music21.stream.Stream} s - stream after unpacking from jsonpickle\n     * @returns {music21.stream.Stream}\n     */\n    streamPostRestore(s) {\n        const st = s._storedElementOffsetTuples;\n\n        s._clef = this.lastClef;\n        s._keySignature = this.lastKeySignature;\n        s._timeSignature = this.lastTimeSignature;\n        for (let i = 0; i < st.length; i++) {\n            const el = st[i][0];\n            el.offset = st[i][1];\n            let classList = el.classes;\n            if (classList === undefined) {\n                console.warn('M21object without classes: ', el);\n                console.warn('Javascript classes are: ', el._py_class);\n                classList = [];\n            }\n            let streamPart = this.currentPart;\n            if (streamPart === undefined) {\n                streamPart = s; // possibly a Stream constructed from .measures()\n            }\n\n            let appendEl = true;\n            let insertAtStart = false;\n\n            for (let j = 0; j < classList.length; j++) {\n                const thisClass = classList[j];\n                for (let kn = 0; kn < this.knownUnparsables.length; kn++) {\n                    const unparsable = this.knownUnparsables[kn];\n                    if (unparsable.indexOf(thisClass) !== -1) {\n                        appendEl = false;\n                    }\n                }\n                if (thisClass === 'TimeSignature') {\n                    // console.log(\"Got timeSignature\", streamPart, newM21pObj, storedElement);\n                    s._timeSignature = el;\n                    this.lastTimeSignature = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.timeSignature === undefined\n                    ) {\n                        streamPart.timeSignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Clef') {\n                    s._clef = el;\n                    this.lastClef = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.clef === undefined\n                    ) {\n                        streamPart.clef = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'KeySignature') {\n                    s._keySignature = el;\n                    this.lastKeySignature = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.keySignature === undefined\n                    ) {\n                        streamPart.keySignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Part') {\n                    appendEl = false;\n                    insertAtStart = true;\n                }\n            }\n\n            if (appendEl) {\n                s.append(el); // all but clef, ts, ks\n            } else if (insertAtStart) {\n                s.insert(0, el); // Part\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Run the main decoder\n     *\n     * @method music21.fromPython.Converter#run\n     * @memberof music21.fromPython.Converter\n     * @param {string} jss - stream encoded as JSON\n     * @returns {music21.stream.Stream}\n     */\n    run(jss) {\n        const outStruct = unpickler.decode(jss, this.handlers);\n        return outStruct.stream;\n    }\n}\nfromPython.Converter = Converter;\n","import { chord } from './chord.js';\nimport { key } from './key.js';\n\nclass Harmony extends chord.Chord {\n    constructor(figure, keywords) {\n        if (keywords === undefined) {\n            keywords = {};\n        }\n\n        super();\n        this._writeAsChord = false;\n        this._roman = undefined;\n        this.chordStepModifications = [];\n        this._degreesList = [];\n        this._key = undefined;\n        // this._updateBasedOnXMLInput(keywords);\n        this._figure = figure;\n        if (keywords.parseFigure !== false && this._figure !== undefined) {\n            this._parseFigure();\n        }\n        if (\n            this._overrides.bass === undefined\n            && this._overrides.root !== undefined\n        ) {\n            this.bass(this._overrides.root);\n        }\n        if (\n            (keywords.updatePitches && this._figure !== undefined)\n            || this._overrides.root !== undefined\n            || this._overrides.bass !== undefined\n        ) {\n            this._updatePitches();\n        }\n        // this._updateBasedOnXMLInput(keywords);\n        if (\n            keywords.parseFigure !== false\n            && this._figure !== undefined\n            && this._figure.indexOf('sus') !== -1\n            && this._figure.indexOf('sus2') === -1\n        ) {\n            this.root(this.bass());\n        }\n    }\n    _parseFigure() {}\n\n    _updatePitches() {}\n\n    get figure() {\n        if (this._figure === undefined) {\n            return this.findFigure();\n        } else {\n            return this._figure;\n        }\n    }\n    set figure(newFigure) {\n        this._figure = newFigure;\n        if (this._figure !== undefined) {\n            this._parseFigure();\n            this._updatePitches();\n        }\n    }\n\n    get key() {\n        return this._key;\n    }\n    set key(keyOrScale) {\n        if (typeof keyOrScale === 'string') {\n            this._key = new key.Key(keyOrScale);\n        } else {\n            this._key = keyOrScale;\n            this._roman = undefined;\n        }\n    }\n\n    findFigure() {\n        return;\n    }\n}\n\nexport const harmony = {\n    Harmony,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/miditools -- A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * Copyright (c) 2014-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n * @author Michael Scott Cuthbert\n */\nimport * as $ from 'jquery';\nimport * as eventjs from 'eventjs'; // drag handler...\nimport * as MIDI from 'MIDI';\n\nimport { chord } from './chord.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { instrument } from './instrument.js';\nimport { note } from './note.js';\n\n/**\n * A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * @exports music21/miditools\n */\n/**\n * Module that holds **music21** tools for connecting with MIDI.js and somewhat with the\n * events from the Jazz plugin or the WebMIDI protocol.\n *\n * @namespace music21.miditools\n * @memberof music21\n */\nexport const miditools = {};\n\n/**\n * Number of octaves to transpose all incoming midi signals\n *\n * @type {number}\n * @default 0\n */\nmiditools.transposeOctave = 0;\n/**\n * @class Event\n * @memberof music21.miditools\n * @param {number} t - timing information\n * @param {number} a - midi data 1 (N.B. a >> 4 = midiCommand )\n * @param {number} b - midi data 2\n * @param {number} c - midi data 3\n */\nexport class Event {\n    constructor(t, a, b, c) {\n        this.timing = t;\n        this.data1 = a;\n        this.data2 = b;\n        this.data3 = c;\n        this.midiCommand = a >> 4;\n\n        this.noteOff = this.midiCommand === 8;\n        this.noteOn = this.midiCommand === 9;\n\n        this.midiNote = undefined;\n        if (this.noteOn || this.noteOff) {\n            this.midiNote = this.data2 + 12 * miditools.transposeOctave;\n            this.velocity = this.data3;\n        }\n    }\n    /**\n     * Calls MIDI.noteOn or MIDI.noteOff for the note\n     * represented by the Event (if appropriate)\n     *\n     * @memberof music21.miditools.Event\n     * @returns {undefined}\n     */\n    sendToMIDIjs() {\n        if (MIDI !== undefined && MIDI.noteOn !== undefined) {\n            // noteOn check because does not exist if no audio context\n            // or soundfont has been loaded, such as if a play event\n            // is triggered before soundfont has been loaded.\n            if (this.noteOn) {\n                MIDI.noteOn(0, this.midiNote, this.velocity, 0);\n            } else if (this.noteOff) {\n                MIDI.noteOff(0, this.midiNote, 0);\n            }\n        } else {\n            console.warn('could not playback note because no MIDIout defined');\n        }\n    }\n    /**\n     * Makes a {@link music21.note.Note} object from the event's midiNote number.\n     *\n     * @memberof music21.miditools.Event\n     * @returns {music21.note.Note} - the {@link music21.note.Note} object represented by Event.midiNote\n     */\n    music21Note() {\n        const m21n = new note.Note();\n        m21n.pitch.ps = this.midiNote;\n        return m21n;\n    }\n}\nmiditools.Event = Event;\n\n/**\n * How long to wait in milliseconds before deciding that a note belongs to another chord. Default 100ms\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.maxDelay = 100; // in ms\n/**\n * At what time (in ms since Epoch) the chord started.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.heldChordTime = 0;\n/**\n * An Array (or undefined) of currently held chords that have not been sent out yet.\n *\n * @memberof music21.miditools\n * @type {Array|undefined}\n */\nmiditools.heldChordNotes = undefined;\n\n/**\n * When, in MS since Jan 1, 1970, was the last {@link music21.note.Note} played.\n * Defaults to the time that the module was loaded.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.timeOfLastNote = Date.now(); // in ms\n\nmiditools._baseTempo = 60;\n/**\n * Assign (or query) a Metronome object to run all timing information.\n *\n * @memberof music21.miditools\n * @type {music21.tempo.Metronome}\n */\nmiditools.metronome = undefined;\n\nObject.defineProperties(miditools, {\n    tempo: {\n        enumerable: true,\n        get() {\n            if (this.metronome === undefined) {\n                return this._baseTempo;\n            } else {\n                return this.metronome.tempo;\n            }\n        },\n        set(t) {\n            if (this.metronome === undefined) {\n                this._baseTempo = t;\n            } else {\n                this.metronome.tempo = t;\n            }\n        },\n    },\n});\n\n/* --------- chords ------------- */\n/**\n *  Clears chords that are older than miditools.heldChordTime\n *\n *  Runs a setTimeout on itself.\n *  Calls miditools.sendOutChord\n *\n *  @memberof music21.miditools\n */\nmiditools.clearOldChords = function clearOldChords() {\n    // clear out notes that may be a chord...\n    const nowInMs = Date.now(); // in ms\n    if (miditools.heldChordTime + miditools.maxDelay < nowInMs) {\n        miditools.heldChordTime = nowInMs;\n        if (miditools.heldChordNotes !== undefined) {\n            // console.log('to send out chords');\n            miditools.sendOutChord(miditools.heldChordNotes);\n            miditools.heldChordNotes = undefined;\n        }\n    }\n    setTimeout(miditools.clearOldChords, miditools.maxDelay);\n};\n/**\n *  Take a series of jEvent noteOn objects and convert them to a single Chord object\n *  so long as they are all sounded within miditools.maxDelay milliseconds of each other.\n *  this method stores notes in miditools.heldChordNotes (Array).\n *\n *  @param {music21.miditools.Event} jEvent\n *  @memberof music21.miditools\n *  @returns undefined\n */\nmiditools.makeChords = function makeChords(jEvent) {\n    // jEvent is a miditools.Event object\n    if (jEvent.noteOn) {\n        const m21n = jEvent.music21Note();\n        if (miditools.heldChordNotes === undefined) {\n            miditools.heldChordNotes = [m21n];\n        } else {\n            for (let i = 0; i < miditools.heldChordNotes.length; i++) {\n                const foundNote = miditools.heldChordNotes[i];\n                if (foundNote.pitch.ps === m21n.pitch.ps) {\n                    return; // no duplicates\n                }\n            }\n            miditools.heldChordNotes.push(m21n);\n        }\n    }\n};\n\n/**\n * The last Note or Chord to be sent out from miditools.  This is an important semi-global\n * attribute, since the last element may need to be quantized by quantizeLastNote() to\n * determine its length, since the note may need to be placed into a staff before its total\n * length can be determined.\n *\n * @memberof music21.miditools\n * @type {music21.chord.Chord|music21.note.Note|undefined}\n */\nmiditools.lastElement = undefined;\n\n/**\n * Take the list of Notes and makes a chord out of it, if appropriate and call\n * {@link music21.miditools.callBacks.sendOutChord} callback with the Chord or Note as a parameter.\n *\n * @memberof music21.miditools\n * @param {Array<music21.note.Note>} chordNoteList - an Array of {@link music21.note.Note} objects\n * @returns {(music21.note.Note|music21.chord.Chord|undefined)} A {@link music21.chord.Chord} object,\n * most likely, but maybe a {@link music21.note.Note} object)\n */\nmiditools.sendOutChord = function sendOutChord(chordNoteList) {\n    let appendObject;\n    if (chordNoteList.length > 1) {\n        // console.log(chordNoteList[0].name, chordNoteList[1].name);\n        appendObject = new chord.Chord(chordNoteList);\n    } else if (chordNoteList.length === 1) {\n        appendObject = chordNoteList[0]; // note object\n    } else {\n        return undefined;\n    }\n    appendObject.stemDirection = 'noStem';\n    miditools.quantizeLastNote();\n    miditools.lastElement = appendObject;\n    if (miditools.callBacks.sendOutChord !== undefined) {\n        miditools.callBacks.sendOutChord(appendObject);\n    }\n    return appendObject;\n};\n\n/* ----------- callbacks --------- */\n// TODO: all callbacks (incl. raw, sendOutChord) should be able to be a function or an array of functions\n\n/**\n* callBacks is an object with three keys:\n*\n* - raw: function (t, a, b,c) to call when any midievent arrives. Default: `function (t, a, b, c) { return new miditools.Event(t, a, b, c); }`\n* - general: function ( miditools.Event() ) to call when an Event object has been created. Default: `[miditools.sendToMIDIjs, miditools.quantizeLastNote]`\n* - sendOutChord: function (array_of_note.Note_objects) to call when a sufficient time has passed to build a chord from input. Default: empty function.\n*\n* At present, only \"general\" can take an Array of event listening functions, but I hope to change that for sendOutChord also.\n*\n* \"general\" is usually the callback list to play around with.\n*\n* @memberof music21.miditools\n*/\nmiditools.callBacks = {\n    raw: (t, a, b, c) => new miditools.Event(t, a, b, c),\n    general: [miditools.sendToMIDIjs, miditools.quantizeLastNote],\n    sendOutChord: arrayOfNotes => {},\n};\n\n/**\n * Quantizes the lastElement (passed in) or music21.miditools.lastElement.\n *\n * @memberof music21.miditools\n * @param {music21.note.GeneralNote} lastElement - A {@link music21.note.Note} to be quantized\n * @returns {music21.note.GeneralNote} The same {@link music21.note.Note} object passed in with\n * duration quantized\n */\nmiditools.quantizeLastNote = function quantizeLastNote(lastElement) {\n    if (lastElement === undefined) {\n        lastElement = this.lastElement;\n        if (lastElement === undefined) {\n            return undefined;\n        }\n    }\n    lastElement.stemDirection = undefined;\n    const nowInMS = Date.now();\n    const msSinceLastNote = nowInMS - this.timeOfLastNote;\n    this.timeOfLastNote = nowInMS;\n    const normalQuarterNoteLength = 1000 * 60 / this.tempo;\n    const numQuarterNotes = msSinceLastNote / normalQuarterNoteLength;\n    let roundedQuarterLength = Math.round(4 * numQuarterNotes) / 4;\n    if (roundedQuarterLength >= 4) {\n        roundedQuarterLength = 4;\n    } else if (roundedQuarterLength >= 3) {\n        roundedQuarterLength = 3;\n    } else if (roundedQuarterLength > 2) {\n        roundedQuarterLength = 2;\n    } else if (roundedQuarterLength === 1.25) {\n        roundedQuarterLength = 1;\n    } else if (roundedQuarterLength === 0.75) {\n        roundedQuarterLength = 0.5;\n    } else if (roundedQuarterLength === 0) {\n        roundedQuarterLength = 0.125;\n    }\n    lastElement.duration.quarterLength = roundedQuarterLength;\n    return lastElement;\n};\n\n/* ----------- callbacks --------- */\n/**\n * Callback to midiEvent.sendToMIDIjs.\n *\n * @memberof music21.miditools\n * @param {music21.miditools.Event} midiEvent - event to send out.\n * @returns undefined\n */\nmiditools.sendToMIDIjs = midiEvent => {\n    midiEvent.sendToMIDIjs();\n};\n\n/* ------------ MIDI.js ----------- */\n\n/**\n * a mapping of soundfont text names to true, false, or \"loading\".\n *\n * @memberof music21.miditools\n * @type {object}\n */\nmiditools.loadedSoundfonts = {};\n\n/**\n * Called after a soundfont has been loaded. The callback is better to be specified elsewhere\n * rather than overriding this important method.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n */\nmiditools.postLoadCallback = function postLoadCallback(soundfont, callback) {\n    // this should be bound to MIDI\n    if (debug) {\n        console.log('soundfont loaded about to execute callback.');\n        console.log(\n            'first playing two notes very softly -- seems to flush the buffer.'\n        );\n    }\n    $('.loadingSoundfont').remove();\n\n    const isFirefox = typeof InstallTrigger !== 'undefined'; // Firefox 1.0+\n    const isAudioTag = MIDI.technology === 'HTML Audio Tag';\n    const instrumentObj = instrument.find(soundfont);\n    if (instrumentObj !== undefined) {\n        MIDI.programChange(\n            instrumentObj.midiChannel,\n            instrumentObj.midiProgram\n        );\n        if (debug) {\n            console.log(\n                soundfont + ' (' + instrumentObj.midiProgram + ') loaded on ',\n                instrumentObj.midiChannel\n            );\n        }\n        if (isFirefox === false && isAudioTag === false) {\n            // Firefox ignores sound volume! so don't play! \n            // as does IE and others using HTML audio tag.\n            const channel = instrumentObj.midiChannel;\n            MIDI.noteOn(channel, 36, 1, 0);    // if no notes have been played before then\n            MIDI.noteOff(channel, 36, 1, 0.1); // the second note to be played is always\n            MIDI.noteOn(channel, 48, 1, 0.2);  // very clipped (on Safari at least)\n            MIDI.noteOff(channel, 48, 1, 0.3); // this helps a lot.\n            MIDI.noteOn(channel, 60, 1, 0.3);  // chrome needs three notes?\n            MIDI.noteOff(channel, 60, 1, 0.4);\n        }\n    }\n    if (callback !== undefined) {\n        callback(instrumentObj);\n    }\n    miditools.loadedSoundfonts[soundfont] = true;\n};\n\n/**\n * method to load soundfonts while waiting for other processes that need them\n * to load first.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n * @example\n * s = new music21.stream.Stream();\n * music21.miditools.loadSoundfont(\n *     'clarinet',\n *     function(i) {\n *         console.log('instrument object', i, 'loaded');\n *         s.instrument = i;\n * });\n */\nmiditools.loadSoundfont = function loadSoundfont(soundfont, callback) {\n    if (miditools.loadedSoundfonts[soundfont] === true) {\n        // this soundfont has already been loaded once, so just call the callback.\n        if (callback !== undefined) {\n            const instrumentObj = instrument.find(soundfont);\n            callback(instrumentObj);\n        }\n    } else if (miditools.loadedSoundfonts[soundfont] === 'loading') {\n        // we are still waiting for this instrument to load, so\n        // wait for it before calling callback.\n        const waitThenCall = () => {\n            if (miditools.loadedSoundfonts[soundfont] === true) {\n                if (debug) {\n                    console.log(\n                        'other process has finished loading; calling callback'\n                    );\n                }\n                if (callback !== undefined) {\n                    const instrumentObj = instrument.find(soundfont);\n                    callback(instrumentObj);\n                }\n            } else {\n                if (debug) {\n                    console.log('waiting for other process load');\n                }\n                setTimeout(waitThenCall, 100);\n            }\n        };\n        waitThenCall();\n    } else {\n        // soundfont we have not seen before:\n        // set its status to loading and then load it.\n        miditools.loadedSoundfonts[soundfont] = 'loading';\n        if (debug) {\n            console.log('waiting for document ready');\n        }\n        $(document).ready(() => {\n            if (debug) {\n                console.log('document ready, waiting to load soundfont');\n            }\n            $(document.body).append(\n                $(\n                    \"<div class='loadingSoundfont'><b>Loading MIDI Instrument</b>: \"\n                        + 'audio will begin when this message disappears.</div>'\n                )\n            );\n            MIDI.loadPlugin({\n                soundfontUrl: common.urls.soundfontUrl,\n                instrument: soundfont,\n                onsuccess: miditools.postLoadCallback.bind(\n                    MIDI,\n                    soundfont,\n                    callback\n                ),\n            });\n        });\n    }\n};\n\n/**\n * MidiPlayer -- an embedded midi player including the ability to create a\n * playback device.\n *\n * @class MidiPlayer\n * @memberOf music21.miditools\n * @property {number} speed - playback speed scaling (1=default).\n * @property {JQueryDOMObject|undefined} $playDiv - div holding the player,\n */\nexport class MidiPlayer {\n    constructor() {\n        this.player = new MIDI.Players.PlayInstance();\n        this.speed = 1.0;\n        this.$playDiv = undefined;\n    }\n    /**\n     * @param where\n     * @returns DOMElement\n     */\n    addPlayer(where) {\n        let $where = where;\n        if (where === undefined) {\n            where = document.body;\n        }\n        if (where.jquery === undefined) {\n            $where = $(where);\n        }\n        const $playDiv = $('<div class=\"midiPlayer\">');\n        const $controls = $('<div class=\"positionControls\">');\n        const $playPause = $(\n            '<input type=\"image\" src=\"'\n                + this.playPng()\n                + '\" align=\"absmiddle\" value=\"play\" class=\"playPause\">'\n        );\n        const $stop = $(\n            '<input type=\"image\" src=\"'\n                + this.stopPng()\n                + '\" align=\"absmiddle\" value=\"stop\" class=\"stopButton\">'\n        );\n\n        $playPause.on('click', this.pausePlayStop.bind(this));\n        $stop.on('click', this.stopButton.bind(this));\n        $controls.append($playPause);\n        $controls.append($stop);\n        $playDiv.append($controls);\n\n        const $time = $('<div class=\"timeControls\">');\n        const $timePlayed = $('<span class=\"timePlayed\">0:00</span>');\n        const $capsule = $(\n            '<span class=\"capsule\"><span class=\"cursor\"></span></span>'\n        );\n        const $timeRemaining = $('<span class=\"timeRemaining\">-0:00</span>');\n        $time.append($timePlayed);\n        $time.append($capsule);\n        $time.append($timeRemaining);\n        $playDiv.append($time);\n\n        $where.append($playDiv);\n        this.$playDiv = $playDiv;\n        return $playDiv;\n    }\n\n    stopButton() {\n        this.pausePlayStop('yes');\n    }\n\n    playPng() {\n        return common.urls.midiPlayer + '/play.png';\n    }\n    pausePng() {\n        return common.urls.midiPlayer + '/pause.png';\n    }\n    stopPng() {\n        return common.urls.midiPlayer + '/stop.png';\n    }\n\n    pausePlayStop(stop) {\n        let d;\n        if (this.$playDiv === undefined) {\n            d = { src: 'doesnt matter' };\n        } else {\n            d = this.$playDiv.find('.playPause')[0];\n        }\n        if (stop === 'yes') {\n            this.player.stop();\n            d.src = this.playPng();\n        } else if (this.player.playing || stop === 'pause') {\n            d.src = this.playPng();\n            this.player.pause(true);\n        } else {\n            d.src = this.pausePng();\n            this.player.resume();\n        }\n    }\n\n    base64Load(b64data) {\n        const player = this.player;\n        player.timeWarp = this.speed;\n\n        const m21midiplayer = this;\n        miditools.loadSoundfont('acoustic_grand_piano', () => {\n            player.loadFile(\n                b64data,\n                () => {\n                    // success\n                    m21midiplayer.fileLoaded();\n                },\n                undefined, // loading\n                e => {\n                    // failure\n                    console.log(e);\n                }\n            );\n        });\n    }\n\n    songFinished() {\n        this.pausePlayStop('yes');\n    }\n\n    fileLoaded() {\n        this.updatePlaying();\n    }\n\n    startAndUpdate() {\n        this.player.start();\n        this.updatePlaying();\n    }\n\n    updatePlaying() {\n        const self = this;\n        const player = this.player;\n        if (this.$playDiv === undefined) {\n            return;\n        }\n        const $d = this.$playDiv;\n        // update the timestamp\n        const timePlayed = $d.find('.timePlayed')[0];\n        const timeRemaining = $d.find('.timeRemaining')[0];\n        const timeCursor = $d.find('.cursor')[0];\n        const $capsule = $d.find('.capsule');\n        //\n        eventjs.add($capsule[0], 'drag', (event, self) => {\n            eventjs.cancel(event);\n            const player = this.player;\n            player.currentTime = self.x / 420 * player.endTime;\n            if (player.currentTime < 0) {\n                player.currentTime = 0;\n            }\n            if (player.currentTime > player.endTime) {\n                player.currentTime = player.endTime;\n            }\n            if (self.state === 'down') {\n                this.pausePlayStop('pause');\n            } else if (self.state === 'up') {\n                this.pausePlayStop('play');\n            }\n        });\n        //\n        function timeFormatting(n) {\n            const minutes = (n / 60) >> 0;\n            let seconds = String((n - minutes * 60) >> 0);\n            if (seconds.length === 1) {\n                seconds = '0' + seconds;\n            }\n            return minutes + ':' + seconds;\n        }\n\n        player.setAnimation(data => {\n            const percent = data.now / data.end;\n            const now = data.now >> 0; // where we are now\n            const end = data.end >> 0; // end of song\n            if (now === end) {\n                // go to next song\n                self.songFinished();\n            }\n            // display the information to the user\n            timeCursor.style.width = percent * 100 + '%';\n            timePlayed.innerHTML = timeFormatting(now);\n            timeRemaining.innerHTML = '-' + timeFormatting(end - now);\n        });\n    }\n}\nmiditools.MidiPlayer = MidiPlayer;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/keyboard -- PianoKeyboard rendering and display objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\n// Minimum usage:\n\n// var kd = document.getElementById('keyboardDiv');\n// k = new music21.keyboard.Keyboard();\n// k.appendKeyboard(kd, 6, 57); // 88 key keyboard\n\n// configurable:\n// k.scaleFactor = 1.2;  // default 1\n// k.whiteKeyWidth = 40; // default 23\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { common } from './common.js';\nimport { miditools } from './miditools.js';\nimport { pitch } from './pitch.js';\n\n/**\n * Keyboard module, see {@link music21.keyboard} namespace\n *\n * @exports music21/keyboard\n */\n/**\n * keyboard namespace -- tools for creating an onscreen keyboard and interacting with it.\n *\n * @namespace music21.keyboard\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n * @requires music21/miditools\n * @requires jquery\n * @requires MIDI\n */\nexport const keyboard = {};\n/**\n * Represents a single Key\n *\n * @class Key\n * @memberof music21.keyboard\n * @property {Array<function>} callbacks - called when key is clicked/selected\n * @property {number} [scaleFactor=1]\n * @property {music21.keyboard.Keyboard|undefined} parent\n * @property {Int} id - midinumber associated with the key.\n * @property {music21.pitch.Pitch|undefined} pitchObj\n * @property {DOMObject|undefined} svgObj - SVG representing the drawing of the key\n * @property {DOMObject|undefined} noteNameSvgObj - SVG representing the note name drawn on the key\n * @property {string} keyStyle='' - css style information for the key\n * @property {string} keyClass='' - css class information for the key (\"keyboardkey\" + this is the class)\n * @property {number} width - width of key\n * @property {number} height - height of key\n */\nexport class Key {\n    constructor() {\n        this.classes = ['Key']; // name conflict with key.Key\n        this.callbacks = [];\n        this.scaleFactor = 1;\n        this.parent = undefined;\n        this.id = 0;\n        this.width = 23;\n        this.height = 120;\n        this.pitchObj = undefined;\n        this.svgObj = undefined;\n        this.noteNameSvgObj = undefined;\n        this.keyStyle = '';\n        this.keyClass = '';\n    }\n    /**\n     * Gets an SVG object for the key\n     *\n     * @method music21.keyboard.Key#makeKey\n     * @memberof music21.keyboard.Key\n     * @param {number} startX - X position in pixels from left of keyboard to draw key at\n     * @returns {DOMObject} a SVG rectangle for the key\n     */\n    makeKey(startX) {\n        const keyattrs = {\n            style: this.keyStyle,\n            x: startX,\n            y: 0,\n            class: 'keyboardkey ' + this.keyClass,\n            id: this.id,\n            width: this.width * this.scaleFactor,\n            height: this.height * this.scaleFactor,\n            rx: 3,\n            ry: 3,\n        };\n        const keyDOM = common.makeSVGright('rect', keyattrs);\n        for (const x in this.callbacks) {\n            if ({}.hasOwnProperty.call(this.callbacks, x)) {\n                keyDOM.addEventListener(x, this.callbacks[x], false);\n            }\n        }\n        this.svgObj = keyDOM;\n        return keyDOM;\n    }\n    /**\n     * Adds a circle (red) on the key (to mark middle C etc.)\n     *\n     * @method music21.keyboard.Key#addCircle\n     * @param {string} [strokeColor='red']\n     * @returns {DOMObject}\n     */\n    addCircle(strokeColor) {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return undefined;\n        }\n        if (strokeColor === undefined) {\n            strokeColor = 'red';\n        }\n        const x = parseInt(this.svgObj.getAttribute('x'));\n        const cx = x + this.parent.scaleFactor * this.width / 2;\n        // console.log('cx', cx);\n        const keyattrs = {\n            stroke: strokeColor,\n            'stroke-width': 3,\n            fill: 'none',\n            cx,\n            cy: (this.height - 10) * this.parent.scaleFactor,\n            class: 'keyboardkeyannotation',\n            r: this.width * this.parent.scaleFactor / 4,\n        };\n\n        const circleDom = common.makeSVGright('circle', keyattrs);\n        this.parent.svgObj.appendChild(circleDom);\n        // console.log(circleDom);\n        return circleDom;\n    }\n    /**\n     * Adds the note name on the key\n     *\n     * @method music21.keyboard.Key#addNoteName\n     * @param {Boolean} [labelOctaves=false] - use octave numbers too?\n     * @returns {DOMObject}\n     */\n    addNoteName(labelOctaves) {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return this;\n        }\n        if (this.id === 0 && this.pitchObj === undefined) {\n            return this;\n        } else if (this.pitchObj === undefined) {\n            this.pitchObj = new pitch.Pitch();\n            this.pitchObj.ps = this.id;\n        }\n        if (\n            this.pitchObj.accidental !== undefined\n            && this.pitchObj.accidental.alter !== 0\n        ) {\n            return this;\n        }\n        let x = parseInt(this.svgObj.getAttribute('x'));\n        let idStr = this.pitchObj.name;\n        let fontSize = 14;\n        if (labelOctaves === true) {\n            idStr = this.pitchObj.nameWithOctave;\n            fontSize = 12;\n            x -= 2;\n        }\n        fontSize = Math.floor(fontSize * parent.scaleFactor);\n\n        let textfill = 'white';\n        if (this.keyClass === 'whitekey') {\n            textfill = 'black';\n        }\n        const textattrs = {\n            fill: textfill,\n            x: x + this.parent.scaleFactor * (this.width / 2 - 5),\n            y: this.parent.scaleFactor * (this.height - 20),\n            class: 'keyboardkeyname',\n            'font-size': fontSize,\n        };\n\n        const textDom = common.makeSVGright('text', textattrs);\n        const textNode = document.createTextNode(idStr);\n        textDom.appendChild(textNode);\n        this.noteNameSvgObj = textDom; // store for removing...\n        this.parent.svgObj.appendChild(textDom);\n        return this;\n    }\n    /**\n     * Removes the note name from the key (if exists)\n     *\n     * @method music21.keyboard.Key#removeNoteName\n     * @returns {undefined}\n     */\n    removeNoteName() {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return;\n        }\n        if (this.noteNameSvgObj === undefined) {\n            return;\n        }\n        if (this.noteNameSvgObj.parentNode === this.parent.svgObj) {\n            this.parent.svgObj.removeChild(this.noteNameSvgObj);\n        }\n        this.noteNameSvgObj = undefined;\n    }\n}\nkeyboard.Key = Key;\n\n/**\n * Defaults for a WhiteKey (width, height, keyStyle, keyClass)\n *\n * @class WhiteKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class WhiteKey extends Key {\n    constructor() {\n        super();\n        this.width = 23;\n        this.height = 120;\n        this.keyStyle = 'fill:#fffff6;stroke:black';\n        this.keyClass = 'whitekey';\n    }\n}\nkeyboard.WhiteKey = WhiteKey;\n/**\n * Defaults for a BlackKey (width, height, keyStyle, keyClass)\n *\n * @class BlackKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class BlackKey extends Key {\n    constructor() {\n        super();\n        this.width = 13;\n        this.height = 80;\n        this.keyStyle = 'fill:black;stroke:black';\n        this.keyClass = 'blackkey';\n    }\n}\n\nkeyboard.BlackKey = BlackKey;\n\n/**\n * A Class representing a whole Keyboard full of keys.\n *\n * @class Keyboard\n * @memberof music21.keyboard\n * @property {number} whiteKeyWidth - default 23\n * @property {number} scaleFactor - default 1\n * @property {object} keyObjects - a mapping of id to {@link music21.keyboard.Key} objects\n * @property {DOMObject} svgObj - the SVG object of the keyboard\n * @property {Boolean} markC - default true\n * @property {Boolean} showNames - default false\n * @property {Boolean} showOctaves - default false\n * @property {string} startPitch - default \"C3\"\n * @property {string} endPitch - default \"C5\"\n * @property {Boolean} hideable - default false -- add a way to hide and show keyboard\n * @property {Boolean} scrollable - default false -- add scroll bars to change octave\n */\nexport class Keyboard {\n    constructor() {\n        this.whiteKeyWidth = 23;\n        this._defaultWhiteKeyWidth = 23;\n        this._defaultBlackKeyWidth = 13;\n        this.scaleFactor = 1;\n        this.height = 120; // does nothing right now...\n        this.keyObjects = {};\n        this.svgObj = undefined;\n\n        this.markC = true;\n        this.showNames = false;\n        this.showOctaves = false;\n\n        this.startPitch = 'C3';\n        this.endPitch = 'C5';\n        this._startDNN = undefined;\n        this._endDNN = undefined;\n\n        this.hideable = false;\n        this.scrollable = false;\n        /**\n         * An object of callbacks on events.\n         *\n         * default:\n         *\n         * - click: this.clickHandler\n         *\n         * @name callbacks\n         * @type {object}\n         * @memberof music21.keyboard.Keyboard#\n         */\n        this.callbacks = {\n            click: (keyClicked) => this.clickHandler(keyClicked),\n        };\n        //   more accurate offsets from http://www.mathpages.com/home/kmath043.htm\n        this.sharpOffsets = {\n            0: 14.3333,\n            1: 18.6666,\n            3: 13.25,\n            4: 16.25,\n            5: 19.75,\n        };\n    }\n    /**\n     * Redraws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#redrawSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    redrawSVG() {\n        if (this.svgObj === undefined) {\n            return undefined;\n        }\n        const oldSVG = this.svgObj;\n        const svgParent = oldSVG.parentNode;\n        this.keyObjects = {};\n        const svgDOM = this.createSVG();\n        svgParent.replaceChild(svgDOM, oldSVG);\n        return svgDOM;\n    }\n    /**\n     * Appends a keyboard to the `where` parameter\n     *\n     * @method music21.keyboard.Keyboard#appendKeyboard\n     * @param {JQueryDOMObject|DOMObject} [where]\n     * @returns {music21.keyboard.Keyboard} this\n     */\n    appendKeyboard(where) {\n        if (where === undefined) {\n            where = document.body;\n        } else if (where.jquery !== undefined) {\n            where = where[0];\n        }\n\n        let svgDOM = this.createSVG();\n\n        if (this.scrollable) {\n            svgDOM = this.wrapScrollable(svgDOM)[0];\n        }\n\n        if (this.hideable) {\n            // make it so the keyboard can be shown or hidden...\n            this.appendHideableKeyboard(where, svgDOM);\n        } else {\n            where.appendChild(svgDOM); // svg must use appendChild, not append.\n        }\n        return this;\n    }\n    /**\n     * Handle a click on a given SVG object\n     *\n     * @method music21.keyboard.Keyboard#clickHandler\n     * @param {DOMObject} keyRect - the dom object with the keyboard.\n     */\n    clickHandler(keyRect) {\n        // to-do : integrate with jazzHighlight...\n        const id = keyRect.id;\n        const thisKeyObject = this.keyObjects[id];\n        if (thisKeyObject === undefined) {\n            return; // not on keyboard;\n        }\n        const storedStyle = thisKeyObject.keyStyle;\n        let fillColor = '#c0c000';\n        if (thisKeyObject.keyClass === 'whitekey') {\n            fillColor = 'yellow';\n        }\n        keyRect.setAttribute('style', 'fill:' + fillColor + ';stroke:black');\n        miditools.loadSoundfont('acoustic_grand_piano', i => {\n            MIDI.noteOn(i.midiChannel, id, 100, 0);\n            MIDI.noteOff(i.midiChannel, id, 500);\n        });\n        setTimeout(() => {\n            keyRect.setAttribute('style', storedStyle);\n        }, 500);\n    }\n\n    /**\n     * Draws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#createSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    createSVG() {\n        // DNN = pitch.diatonicNoteNum;\n        // this._endDNN = final key note. I.e., the last note to be included, not the first note not included.\n        // 6, 57 gives a standard 88-key keyboard;\n        if (this._startDNN === undefined) {\n            if (typeof this.startPitch === 'string') {\n                const tempP = new pitch.Pitch(this.startPitch);\n                this._startDNN = tempP.diatonicNoteNum;\n            } else {\n                this._startDNN = this.startPitch;\n            }\n        }\n\n        if (this._endDNN === undefined) {\n            if (typeof this.endPitch === 'string') {\n                const tempP = new pitch.Pitch(this.endPitch);\n                this._endDNN = tempP.diatonicNoteNum;\n            } else {\n                this._endDNN = this.endPitch;\n            }\n        }\n\n        let currentIndex = (this._startDNN - 1) % 7; // C = 0\n        const keyboardDiatonicLength = 1 + this._endDNN - this._startDNN;\n        const totalWidth\n            = this.whiteKeyWidth * this.scaleFactor * keyboardDiatonicLength;\n        const height = 120 * this.scaleFactor;\n        const heightString = height.toString() + 'px';\n\n        const svgDOM = common.makeSVGright('svg', {\n            'xml:space': 'preserve',\n            height: heightString,\n            width: totalWidth.toString() + 'px',\n            class: 'keyboardSVG',\n        });\n        const movingPitch = new pitch.Pitch('C4');\n        const blackKeys = [];\n        const thisKeyboardObject = this;\n\n        for (let wki = 0; wki < keyboardDiatonicLength; wki++) {\n            movingPitch.diatonicNoteNum = this._startDNN + wki;\n            const wk = new keyboard.WhiteKey();\n            wk.id = movingPitch.midi;\n            wk.parent = this;\n            this.keyObjects[movingPitch.midi] = wk;\n            wk.scaleFactor = this.scaleFactor;\n            wk.width = this.whiteKeyWidth;\n            wk.callbacks.click = function whitekeyCallbacksClick() {\n                thisKeyboardObject.callbacks.click(this);\n            };\n\n            const wkSVG = wk.makeKey(\n                this.whiteKeyWidth * this.scaleFactor * wki\n            );\n            svgDOM.appendChild(wkSVG);\n\n            if (\n                (currentIndex === 0\n                    || currentIndex === 1\n                    || currentIndex === 3\n                    || currentIndex === 4\n                    || currentIndex === 5)\n                && wki !== keyboardDiatonicLength - 1\n            ) {\n                // create but do not append blackkey to the right of whitekey\n                const bk = new keyboard.BlackKey();\n                bk.id = movingPitch.midi + 1;\n                this.keyObjects[movingPitch.midi + 1] = bk;\n                bk.parent = this;\n\n                bk.scaleFactor = this.scaleFactor;\n                bk.width\n                    = this._defaultBlackKeyWidth\n                    * this.whiteKeyWidth\n                    / this._defaultWhiteKeyWidth;\n                bk.callbacks.click = function blackKeyClicksCallback() {\n                    thisKeyboardObject.callbacks.click(this);\n                };\n\n                let offsetFromWhiteKey = this.sharpOffsets[currentIndex];\n                offsetFromWhiteKey\n                    *= this.whiteKeyWidth\n                    / this._defaultWhiteKeyWidth\n                    * this.scaleFactor;\n                const bkSVG = bk.makeKey(\n                    this.whiteKeyWidth * this.scaleFactor * wki\n                        + offsetFromWhiteKey\n                );\n                blackKeys.push(bkSVG);\n            }\n            currentIndex += 1;\n            currentIndex %= 7;\n        }\n        // append blackkeys later since they overlap white keys;\n        for (let bki = 0; bki < blackKeys.length; bki++) {\n            svgDOM.appendChild(blackKeys[bki]);\n        }\n\n        this.svgObj = svgDOM;\n        if (this.markC) {\n            this.markMiddleC();\n        }\n        if (this.showNames) {\n            this.markNoteNames(this.showOctaves);\n        }\n\n        return svgDOM;\n    }\n\n    /**\n     * Puts a circle on middle c.\n     *\n     * @method music21.keyboard.Keyboard#markMiddleC\n     * @param {string} [strokeColor='red']\n     */\n    markMiddleC(strokeColor) {\n        const midC = this.keyObjects[60];\n        if (midC !== undefined) {\n            midC.addCircle('red');\n        }\n    }\n    /**\n     * Puts note names on every white key.\n     *\n     * @method music21.keyboard.Keyboard#markNoteNames\n     * @param {Boolean} [labelOctaves=false]\n     */\n    markNoteNames(labelOctaves) {\n        this.removeNoteNames(); // in case...\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.addNoteName(labelOctaves);\n            }\n        }\n    }\n\n    /**\n     * Remove note names on the keys, if they exist\n     *\n     * @method music21.keyboard.Keyboard#removeNoteNames\n     */\n    removeNoteNames() {\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.removeNoteName();\n            }\n        }\n    }\n\n    /**\n     * Wraps the SVG object inside a scrollable set of buttons\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * scrollable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#wrapScrollable\n     * @param {DOMObject} svgDOM\n     * @returns {JQueryDOMObject}\n     */\n    wrapScrollable(svgDOM) {\n        const $wrapper = $(\n            \"<div class='keyboardScrollableWrapper'></div>\"\n        ).css({\n            display: 'inline-block',\n        });\n        const $bDown = $(\"<button class='keyboardOctaveDown'>&lt;&lt;</button>\")\n            .css({\n                'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n            })\n            .bind('click', () => {\n                miditools.transposeOctave -= 1;\n                this._startDNN -= 7;\n                this._endDNN -= 7;\n                this.redrawSVG();\n            });\n        const $bUp = $(\"<button class='keyboardOctaveUp'>&gt;&gt;</button>\")\n            .css({\n                'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n            })\n            .bind('click', () => {\n                miditools.transposeOctave += 1;\n                this._startDNN += 7;\n                this._endDNN += 7;\n                this.redrawSVG();\n            });\n        const $kWrapper = $(\n            \"<div style='display:inline-block; vertical-align: middle' class='keyboardScrollableInnerDiv'></div>\"\n        );\n        $kWrapper[0].appendChild(svgDOM);\n        $wrapper.append($bDown);\n        $wrapper.append($kWrapper);\n        $wrapper.append($bUp);\n        return $wrapper;\n    }\n    /**\n     * Puts a hideable keyboard inside a Div with the proper controls.\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * hideable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#appendHideableKeyboard\n     * @param {DOMObject} where\n     * @param {DOMObject} keyboardSVG\n     */\n    appendHideableKeyboard(where, keyboardSVG) {\n        const $container = $(\"<div class='keyboardHideableContainer'/>\");\n        const $bInside = $(\"<div class='keyboardToggleInside'>↥</div>\").css({\n            display: 'inline-block',\n            'padding-top': '40px',\n            'font-size': '40px',\n        });\n        const $b = $(\"<div class='keyboardToggleOutside'/>\").css({\n            display: 'inline-block',\n            'vertical-align': 'top',\n            background: 'white',\n        });\n        $b.append($bInside);\n        $b.data(\n            'defaultDisplay',\n            $container.find('.keyboardSVG').css('display')\n        );\n        $b.data('state', 'down');\n        $b.click(keyboard.triggerToggleShow);\n        const $explain = $(\n            \"<div class='keyboardExplain'>Show keyboard</div>\"\n        ).css({\n            display: 'none',\n            'background-color': 'white',\n            padding: '10px 10px 10px 10px',\n            'font-size': '12pt',\n        });\n        $b.append($explain);\n        $container.append($b);\n        $container[0].appendChild(keyboardSVG); // svg must use appendChild, not append.\n        $(where).append($container);\n        return $container;\n    }\n}\n\n/**\n * triggerToggleShow -- event for keyboard is shown or hidden.\n *\n * @function music21.keyboard.triggerToggleShow\n * @param {Event} e\n */\nkeyboard.triggerToggleShow = function triggerToggleShow(e) {\n    // \"this\" refers to the object clicked\n    // e -- event is not used.\n    const $t = $(this);\n    const state = $t.data('state');\n    const $parent = $t.parent();\n    let $k = $parent.find('.keyboardScrollableWrapper');\n    if ($k.length === 0) {\n        // not scrollable\n        $k = $parent.find('.keyboardSVG');\n    }\n    const $bInside = $t.find('.keyboardToggleInside');\n    const $explain = $parent.find('.keyboardExplain');\n    if (state === 'up') {\n        $bInside.text('↥');\n        $bInside.css('padding-top', '40px');\n        $explain.css('display', 'none');\n        let dd = $t.data('defaultDisplay');\n        if (dd === undefined) {\n            dd = 'inline';\n        }\n        $k.css('display', dd);\n        $t.data('state', 'down');\n    } else {\n        $k.css('display', 'none');\n        $explain.css('display', 'inline-block');\n        $bInside.text('↧');\n        $bInside.css('padding-top', '10px');\n        $t.data('state', 'up');\n    }\n};\n\n/**\n * highlight the keyboard stored in \"this\" appropriately\n *\n * @function music21.keyboard.jazzHighlight\n * @param {Event} e\n * @example\n * var midiCallbacksPlay = [music21.miditools.makeChords,\n *                          music21.miditools.sendToMIDIjs,\n *                          music21.keyboard.jazzHighlight.bind(k)];\n */\nkeyboard.jazzHighlight = function jazzHighlight(e) {\n    // e is a miditools.event object -- call with this = keyboard.Keyboard object via bind...\n    if (e === undefined) {\n        return;\n    }\n    if (e.noteOn) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            let intensityRGB = '';\n            let normalizedVelocity = (e.velocity + 25) / 127;\n            if (normalizedVelocity > 1) {\n                normalizedVelocity = 1.0;\n            }\n\n            if (keyObj.keyClass === 'whitekey') {\n                const intensity = normalizedVelocity.toString();\n                intensityRGB = 'rgba(255, 255, 0, ' + intensity + ')';\n            } else {\n                const intensity = Math.floor(\n                    normalizedVelocity * 255\n                ).toString();\n                intensityRGB = 'rgb(' + intensity + ',' + intensity + ',0)';\n                // console.log(intensityRGB);\n            }\n            svgObj.setAttribute(\n                'style',\n                'fill:' + intensityRGB + ';stroke:black'\n            );\n        }\n    } else if (e.noteOff) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            svgObj.setAttribute('style', keyObj.keyStyle);\n        }\n    }\n}; // call this with a bind(keyboard.Keyboard object)...\n\nkeyboard.Keyboard = Keyboard;\n","// future -- rewrite of Score and Part to Page, System, SystemPart\n// not currently used\n// import * as $ from 'jquery';\n//\n// import { base } from './base.js';\n// import { renderOptions } from './renderOptions.js';\nimport { stream } from './stream.js';\n// import { common } from './common.js';\n/**\n * \n * THIS IS CURRENTLY UNUSUED\n * Does not work yet, so not documented\n *\n */\nexport const layout = {};\nlayout.makeLayoutFromScore = function makeLayoutFromScore(\n    score,\n    containerWidth\n) {\n    /*\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     */\n    // var systemHeight = score.systemHeight; /* part.show() called... */\n    // var systemPadding = score.systemPadding;\n    const parts = score.parts;\n    // console.log(parts);\n    const numParts = parts.length;\n    const partZero = parts.get(0);\n    const numMeasures = partZero.getElementsByClass('Measure').length;\n\n    const measureWidths = partZero.getMeasureWidths();\n    const maxSystemWidth\n        = containerWidth || score.maxSystemWidth; /* of course fix! */\n\n    const layoutScore = new layout.LayoutScore();\n    const currentPage = new layout.Page(); // to-do multiple pages...\n    currentPage.measureStart = 1;\n    currentPage.measureEnd = numMeasures;\n\n    layoutScore.insert(0, currentPage);\n\n    let currentSystem = new layout.System();\n    let currentSystemNumber = 1;\n    currentSystem.measureStart = 1;\n    let currentStaves = [];\n\n    const staffMaker = (staffHolder, numParts, measureStart) => {\n        for (let pNum = 0; pNum < numParts; pNum++) {\n            const staff = new layout.Staff();\n            staff.measureStart = measureStart;\n            staff.staffNumber = pNum + 1;\n            staffHolder.push(staff);\n        }\n    };\n    staffMaker(currentStaves, numParts, 1);\n\n    const systemCurrentWidths = [];\n    const systemBreakIndexes = [];\n    let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n    const startLeft = 20; /* TODO: make it obtained elsewhere */\n    let currentLeft = startLeft;\n    // let currentSystemTop = 0;\n    // var partTopOffsets = [];\n    // const ignoreSystemsInCalculatingScoreHeight = true;\n    // const systemHeight = score.estimateStreamHeight(ignoreSystemsInCalculatingScoreHeight);\n\n    for (let i = 0; i < measureWidths.length; i++) {\n        const currentRight = currentLeft + measureWidths[i];\n        /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n        if (currentRight > maxSystemWidth && lastSystemBreak !== i) {\n            // new system...\n            for (let j = 0; j < currentStaves.length; j++) {\n                currentStaves.measureEnd = i;\n                currentSystem.insert(0, currentStaves[j]);\n            }\n            currentStaves = [];\n            staffMaker(currentStaves, numParts, i + 1);\n            // currentSystemTop += systemHeight;\n            currentSystem.measureEnd = i;\n            currentPage.insert(0, currentSystem);\n            currentSystemNumber += 1;\n            currentSystem = new layout.System();\n            currentSystem.measureStart = i + 1;\n            currentSystem.systemNumber = currentSystemNumber;\n\n            systemBreakIndexes.push(i - 1);\n            systemCurrentWidths.push(currentLeft);\n            console.log(\n                'setting new width at ' + currentLeft + ' measure ' + i\n            );\n            currentLeft = startLeft + measureWidths[i];\n            lastSystemBreak = i;\n        } else {\n            currentLeft = currentRight;\n        }\n        for (let pNum = 0; pNum < currentStaves.length; pNum++) {\n            currentStaves[pNum].append(parts[pNum].get(i));\n        }\n    }\n    for (let j = 0; j < currentStaves.length; j++) {\n        currentStaves.measureEnd = measureWidths.length - 1;\n        currentSystem.insert(0, currentStaves[j]);\n    }\n    currentPage.insert(0, currentSystem);\n    return layoutScore;\n};\n\nexport class LayoutScore extends stream.Score {\n    constructor() {\n        super();\n        this.scoreLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = 0;\n        this.left = 0;\n    }\n    get pages() {\n        return this.getElementsByClass('Page');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n    /**\n     * return a tuple of (top, bottom) for a staff, specified by a given pageId,\n     * systemId, and staffId in PIXELS.\n\n     * @param pageId\n     * @param systemId\n     * @param staffId\n     * @param units -- \"pixels\" or \"tenths\" (not supported)\n     */\n\n    getPositionForStaff(pageId, systemId, staffId, units) {\n        units = units || 'pixels';\n    }\n}\nlayout.LayoutScore = LayoutScore;\n\n/**\n * All music must currently be on page 1.\n */\nexport class Page extends stream.Score {\n    constructor() {\n        super();\n        this.pageNumber = 1;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this.systemStart = undefined;\n        this.systemEnd = undefined;\n        this.pageLayout = undefined;\n    }\n    get systems() {\n        return this.getElementsByClass('System');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.Page = Page;\n\nexport class System extends stream.Score {\n    constructor() {\n        super();\n        this.systemNumber = 1;\n        this.systemLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = undefined;\n        this.left = undefined;\n    }\n    get staves() {\n        return this.getElementsByClass('Staff');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.System = System;\n\nexport class Staff extends stream.Part {\n    constructor() {\n        super();\n        this.staffNumber = 1;\n        this.optimized = 0;\n        this.top = undefined;\n        this.left = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.inheritedHeight = undefined;\n        this.staffLayout = undefined;\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nlayout.Staff = Staff;\n","import * as m21ToXml from './musicxml/m21ToXml.js';\nimport * as xmlToM21 from './musicxml/xmlToM21.js';\n\nexport { m21ToXml, xmlToM21 };\n\nexport const musicxml = {\n    m21ToXml,\n    xmlToM21,\n};\n\nexport default musicxml;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/roman -- roman.RomanNumberal -- Chord subclass\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { chord } from './chord.js';\nimport { common } from './common.js';\n// import { debug } from './debug.js';\nimport { figuredBass } from './figuredBass.js';\nimport { harmony } from './harmony.js';\nimport { interval } from './interval.js';\nimport { key } from './key.js';\nimport { pitch } from './pitch.js';\nimport { scale } from './scale.js';\n/**\n * Roman numeral module. See {@link music21.roman} namespace\n *\n * @exports music21/roman\n */\n/**\n * music21.roman -- namespace for dealing with RomanNumeral analysis.\n *\n * @namespace music21.roman\n * @memberof music21\n * @requires music21/chord\n * @requires music21/common\n * @requires music21/figuredBass\n * @requires music21/harmony\n * @requires music21/key\n * @requires music21/pitch\n * @requires music21/interval\n */\nexport const roman = {};\n\nroman.figureShorthands = {\n    '53': '',\n    '3': '',\n    '63': '6',\n    '753': '7',\n    '75': '7', // controversial perhaps\n    '73': '7', // controversial perhaps\n    '9753': '9',\n    '975': '9', // controversial perhaps\n    '953': '9', // controversial perhaps\n    '97': '9', // controversial perhaps\n    '95': '9', // controversial perhaps\n    '93': '9', // controversial perhaps\n    '653': '65',\n    '6b53': '6b5',\n    '643': '43',\n    '642': '42',\n    bb7b5b3: 'o7',\n    bb7b53: 'o7',\n    // '6b5bb3': 'o65',\n    b7b5b3: '/o7',\n};\n\nroman.functionalityScores = {\n    I: 100,\n    i: 90,\n    V7: 80,\n    V: 70,\n    V65: 68,\n    I6: 65,\n    V6: 63,\n    V43: 61,\n    I64: 60,\n    IV: 59,\n    i6: 58,\n    viio7: 57,\n    V42: 55,\n    viio65: 53,\n    viio6: 52,\n    '#viio65': 51,\n    ii: 50,\n    '#viio6': 49,\n    ii65: 48,\n    ii43: 47,\n    ii42: 46,\n    IV6: 45,\n    ii6: 43,\n    VI: 42,\n    '#VI': 41,\n    vi: 40,\n    viio: 39,\n    '#viio': 39,\n    iio: 37, // common in Minor\n    iio42: 36,\n    bII6: 35, // Neapolitan\n    iio43: 32,\n    iio65: 31,\n    '#vio': 28,\n    '#vio6': 28,\n    III: 22,\n    v: 20,\n    VII: 19,\n    VII7: 18,\n    IV65: 17,\n    IV7: 16,\n    iii: 15,\n    iii6: 12,\n    vi6: 10,\n};\n\n/**\n * expandShortHand - expand a string of numbers into an array\n *\n * N.B. this is NOT where abbreviations get expanded\n *\n * @memberof music21.roman\n * @param  {string} shorthand string of a figure w/o roman to parse\n * @return {Array<string>}           array of shorthands\n */\n\nroman.expandShortHand = function expandShortHand(shorthand) {\n    shorthand = shorthand.replace('/', '');\n    if (shorthand.match(/[b-]$/)) {\n        shorthand += '3';\n    }\n    shorthand = shorthand.replace('11', 'x');\n    shorthand = shorthand.replace('13', 'y');\n    shorthand = shorthand.replace('15', 'z');\n    const rx = new RegExp('#*-*b*o*[1-9xyz]', 'g');\n    let shorthandGroups = [];\n    let match = rx.exec(shorthand);\n    while (match !== null) {\n        shorthandGroups.push(match[0]);\n        match = rx.exec(shorthand);\n    }\n    if (shorthandGroups.length === 1 && shorthandGroups[0].endsWith('3')) {\n        shorthandGroups = ['5', shorthandGroups[0]];\n    }\n    const shGroupOut = [];\n    for (let sh of shorthandGroups) {\n        sh = sh.replace('x', '11');\n        sh = sh.replace('y', '13');\n        sh = sh.replace('z', '15');\n        shGroupOut.push(sh);\n    }\n    return shGroupOut;\n};\n\n/**\n * correctSuffixForChordQuality - Correct a given inversionString suffix given a\n *     chord of various qualities.\n *\n * @memberof music21.roman\n * @param  {music21.chord.Chord} chordObj\n * @param  {string} inversionString a string like '6' to fix.\n * @return {string}           corrected inversionString\n  */\n\nroman.correctSuffixForChordQuality = function correctSuffixForChordQuality(\n    chordObj,\n    inversionString\n) {\n    const fifthType = chordObj.semitonesFromChordStep(5);\n    let qualityName = '';\n    if (fifthType === 6) {\n        qualityName = 'o';\n    } else if (fifthType === 8) {\n        qualityName = '+';\n    }\n\n    if (\n        inversionString !== undefined\n        && (inversionString.startsWith('o') || inversionString.startsWith('/o'))\n    ) {\n        if (qualityName === 'o') {\n            // don't call viio7, viioo7.\n            qualityName = '';\n        }\n    }\n\n    const seventhType = chordObj.semitonesFromChordStep(7);\n    if (seventhType !== undefined && fifthType === 6) {\n        // there is a seventh and this is a diminished 5\n        if (seventhType === 10 && qualityName === 'o') {\n            qualityName = '/o';\n        } else if (seventhType !== 9) {\n            // do something for very odd chords built on diminished triad.\n        }\n    }\n    return qualityName + inversionString;\n};\n\n/**\n * maps an index number to a roman numeral in lowercase\n *\n * @memberof music21.roman\n * @example\n * music21.roman.romanToNumber[4]\n * // 'iv'\n */\nroman.romanToNumber = [undefined, 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n\n/**\n * Represents a RomanNumeral.  By default, capital Roman Numerals are\n * major chords; lowercase are minor.\n *\n * @class RomanNumeral\n * @memberof music21.roman\n * @extends music21.chord.Chord\n * @param {string} figure - the roman numeral as a string, e.g., 'IV', 'viio', 'V7'\n * @param {string|music21.key.Key} [keyStr='C']\n * @property {Array<music21.pitch.Pitch>} scale - (readonly) returns the scale associated with the roman numeral\n * @property {music21.key.Key} key - the key associated with the RomanNumeral (not allowed to be undefined yet)\n * @property {string} figure - the figure as passed in\n * @property {string} degreeName - the name associated with the scale degree, such as \"mediant\" etc., scale 7 will be \"leading tone\" or \"subtonic\" appropriately\n * @property {Int} scaleDegree\n * @property {string} impliedQuality - \"major\", \"minor\", \"diminished\", \"augmented\"\n * @property {Array<music21.pitch.Pitch>} pitches - RomanNumerals are Chord objects, so .pitches will work for them also.\n */\nexport class RomanNumeral extends harmony.Harmony {\n    constructor(figure = '', keyStr, keywords) {\n        const params = { updatePitches: false, parseFigure: false };\n        common.merge(params, keywords);\n        super(figure, params);\n        this._parsingComplete = false;\n\n        // not yet used...\n        this.primaryFigure = undefined;\n        this.secondaryRomanNumeral = undefined;\n        this.secondaryRomanNumeralKey = undefined;\n\n        this.pivotChord = undefined;\n        this.scaleCardinality = 7;\n        this._figure = undefined;\n\n        this.caseMatters = true;\n        if (typeof figure === 'number') {\n            this.caseMatters = false;\n        }\n\n        this.scaleDegree = undefined;\n        this.frontAlterationString = undefined;\n        this.frontAlterationTransposeInterval = undefined;\n        this.frontAlterationAccidental = undefined;\n        this.romanNumeralAlone = undefined;\n\n        this.impliedQuality = undefined;\n        this.impliedScale = undefined;\n        this.scaleOffset = undefined;\n        this.useImpliedScale = false;\n        this.bracketedAlterations = [];\n        this.omittedSteps = [];\n        this.followsKeyChange = false;\n        this._functionalityScore = undefined;\n\n        this._scale = undefined; // the key\n\n        this.figure = figure;\n        this.key = keyStr;\n\n        // to remove...\n        this.numbers = '';\n\n        if (figure !== '') {\n            this._parseFigure();\n            this._parsingComplete = true;\n            this._updatePitches();\n        }\n    }\n\n    _parseFigure() {\n        let workingFigure = this.figure;\n\n        let useScale = this.impliedScale;\n        if (!this.useImpliedScale) {\n            useScale = this.key;\n        }\n        [workingFigure, useScale] = this._correctForSecondaryRomanNumeral(\n            useScale\n        );\n        \n        if (workingFigure === 'Cad64') {\n            if (useScale.mode === 'minor') {\n                workingFigure = 'i64';\n            } else {\n                workingFigure = 'I64';\n            }\n        }\n\n        this.primaryFigure = workingFigure;\n\n        workingFigure = this._parseOmittedSteps(workingFigure);\n        workingFigure = this._parseBracketedAlterations(workingFigure);\n        workingFigure = workingFigure.replace(/^N6/, 'bII6');\n        workingFigure = workingFigure.replace(/^N/, 'bII6');\n        workingFigure = this._parseFrontAlterations(workingFigure);\n        [workingFigure, useScale] = this._parseRNAloneAmidstAug6(\n            workingFigure,\n            useScale\n        );\n        workingFigure = this._setImpliedQualityFromString(workingFigure);\n\n        this._tempRoot = useScale.pitchFromDegree(this.scaleDegree);\n        this._fixMinorVIandVII(useScale);\n        const expandedFigure = roman.expandShortHand(workingFigure);\n        this.figuresNotationObj = new figuredBass.Notation(\n            expandedFigure.toString()\n        );\n\n        const numbersArr = workingFigure.match(/\\d+/);\n        if (numbersArr != null) {\n            workingFigure = workingFigure.replace(/\\d+/, '');\n            this.numbers = parseInt(numbersArr[0]);\n        }\n    }\n\n    _parseFrontAlterations(workingFigure) {\n        let frontAlterationString = '';\n        let frontAlterationTransposeInterval;\n        let frontAlterationAccidental;\n        const _alterationRegex = new RegExp('^(b+|-+|#+)');\n        const match = _alterationRegex.exec(workingFigure);\n        if (match != null) {\n            const group = match[1];\n            let alteration = group.length;\n            if (group[0] === 'b' || group[0] === '-') {\n                alteration *= -1;\n            }\n            frontAlterationTransposeInterval = interval.intervalFromGenericAndChromatic(\n                1,\n                alteration\n            );\n            frontAlterationAccidental = new pitch.Accidental(alteration);\n            frontAlterationString = group;\n            workingFigure = workingFigure.replace(_alterationRegex, '');\n        }\n        this.frontAlterationString = frontAlterationString;\n        this.frontAlterationTransposeInterval = frontAlterationTransposeInterval;\n        this.frontAlterationAccidental = frontAlterationAccidental;\n        return workingFigure;\n    }\n\n    _correctBracketedPitches() {\n        for (const innerAlteration of this.bracketedAlterations) {\n            const [alterNotation, chordStep] = innerAlteration;\n            const alterPitch = this.getChordStep(chordStep);\n            if (alterPitch === undefined) {\n                continue;\n            }\n            const newAccidental = new pitch.Accidental(alterNotation);\n            if (alterPitch.accidental === undefined) {\n                alterPitch.accidental = newAccidental;\n            } else {\n                alterPitch.accidental.set(\n                    alterPitch.accidental.alter + newAccidental.alter\n                );\n            }\n        }\n    }\n\n    _setImpliedQualityFromString(workingFigure) {\n        let impliedQuality = '';\n        if (workingFigure.startsWith('o')) {\n            impliedQuality = 'diminished';\n            workingFigure = workingFigure.replace(/^o/, '');\n        } else if (workingFigure.startsWith('/o')) {\n            impliedQuality = 'half-diminished';\n            workingFigure = workingFigure.replace(/^\\/o/, '');\n        } else if (workingFigure.startsWith('+')) {\n            impliedQuality = 'augmented';\n            workingFigure = workingFigure.replace(/^\\+/, '');\n        } else if (workingFigure.endsWith('d7')) {\n            impliedQuality = 'dominant-seventh';\n            workingFigure = workingFigure.replace(/d7$/, '7');\n        } else if (\n            this.caseMatters\n            && this.romanNumeralAlone.toUpperCase() === this.romanNumeralAlone\n        ) {\n            impliedQuality = 'major';\n        } else if (\n            this.caseMatters\n            && this.romanNumeralAlone.toLowerCase() === this.romanNumeralAlone\n        ) {\n            impliedQuality = 'minor';\n        }\n        this.impliedQuality = impliedQuality;\n        return workingFigure;\n    }\n\n    _fixMinorVIandVII(useScale) {\n        if (useScale.mode !== 'minor') {\n            return;\n        }\n        if (!this.caseMatters) {\n            return;\n        }\n        if (this.scaleDegree !== 6 && this.scaleDegree !== 7) {\n            return;\n        }\n        if (\n            !['minor', 'diminished', 'half-diminished'].includes(\n                this.impliedQuality\n            )\n        ) {\n            return;\n        }\n\n        const fati = this.frontAlterationTransposeInterval;\n        if (fati !== undefined) {\n            const newFati = interval.add([fati, new interval.Interval('A1')]);\n            this.frontAlterationTransposeInterval = newFati;\n            this.frontAlterationAccidental.alter\n                = this.frontAlterationAccidental.alter + 1;\n        } else {\n            this.frontAlterationTransposeInterval = new interval.Interval('A1');\n            this.frontAlterationAccidental = new pitch.Accidental(1);\n        }\n\n        this._tempRoot = this.frontAlterationTransposeInterval.transposePitch(\n            this._tempRoot\n        );\n\n        return;\n    }\n\n    _parseRNAloneAmidstAug6(workingFigure, useScale) {\n        let romanNumeralAlone = '';\n        const _romanNumeralAloneRegex = new RegExp(\n            '(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2}|N)'\n        );\n        const _augmentedSixthRegex = new RegExp('(It|Ger|Fr|Sw)');\n        const rm = _romanNumeralAloneRegex.exec(workingFigure);\n        const a6match = _augmentedSixthRegex.exec(workingFigure);\n        if (rm === null && a6match === null) {\n            throw new Music21Exception(\n                `No roman numeral found in ${workingFigure}`\n            );\n        }\n        if (a6match !== null) {\n            if (useScale.mode === 'major') {\n                useScale = new key.Key(useScale.tonic.name, 'minor');\n                this.impliedScale = useScale;\n                this.useImpliedScale = true;\n            }\n            romanNumeralAlone = a6match[1];\n            if (['It', 'Ger'].includes(romanNumeralAlone)) {\n                this.scaleDegree = 4;\n            } else {\n                this.scaleDegree = 2;\n            }\n            workingFigure = workingFigure.replace(_augmentedSixthRegex, '');\n            this.romanNumeralAlone = romanNumeralAlone;\n            if (romanNumeralAlone !== 'Fr') {\n                this.bracketedAlterations.push(['#', 1]);\n            }\n            if (romanNumeralAlone === 'Fr' || romanNumeralAlone === 'Sw') {\n                this.bracketedAlterations.push(['#', 3]);\n            }\n        } else {\n            romanNumeralAlone = rm[1];\n            this.scaleDegree = common.fromRoman(romanNumeralAlone);\n            workingFigure = workingFigure.replace(_romanNumeralAloneRegex, '');\n            this.romanNumeralAlone = romanNumeralAlone;\n        }\n        return [workingFigure, useScale];\n    }\n\n    /**\n     * get romanNumeral - return either romanNumeralAlone (II) or with frontAlterationAccidental (#II)\n     *\n     * @return {string}  new romanNumeral;\n     */\n\n    get romanNumeral() {\n        if (this.frontAlterationAccidental === undefined) {\n            return this.romanNumeralAlone;\n        } else {\n            return (\n                this.frontAlterationAccidental.modifier + this.romanNumeralAlone\n            );\n        }\n    }\n\n    get scale() {\n        if (this._scale !== undefined) {\n            return this._scale;\n        } else {\n            this._scale = this.key.getScale();\n            return this._scale;\n        }\n    }\n    get key() {\n        return this._scale;\n    }\n    set key(keyOrScale) {\n        if (typeof keyOrScale === 'string') {\n            this._scale = new key.Key(keyOrScale);\n        } else if (typeof keyOrScale === 'undefined') {\n            this._scale = new key.Key('C');\n        } else {\n            this._scale = keyOrScale;\n        }\n        if (keyOrScale === undefined) {\n            this.useImpliedScale = true;\n            this.impliedScale = new scale.MajorScale('C');\n        } else {\n            this.useImpliedScale = false;\n            this.impliedScale = false;\n        }\n        if (this._parsingComplete) {\n            this._updatePitches();\n        }\n    }\n\n    get figure() {\n        return this._figure;\n    }\n    set figure(newFigure) {\n        this._figure = newFigure;\n        if (this._parsingComplete) {\n            this._parseFigure();\n            this._updatePitches();\n        }\n    }\n\n    get figureAndKey() {\n        let tonicName = this.key.tonic.name;\n        let mode = '';\n        if (this.key.mode !== undefined) {\n            mode = ' ' + this.key.mode;\n        }\n\n        if (mode === ' minor') {\n            tonicName = tonicName.toLowerCase();\n        } else if (mode === ' major') {\n            tonicName = tonicName.toUpperCase();\n        }\n        return this.figure + ' in ' + tonicName + mode;\n    }\n\n    get degreeName() {\n        if (this.scaleDegree < 7) {\n            return [\n                undefined,\n                'Tonic',\n                'Supertonic',\n                'Mediant',\n                'Subdominant',\n                'Dominant',\n                'Submediant',\n            ][this.scaleDegree];\n        } else {\n            const tonicPitch = this.key.tonic;\n            let diffRootToTonic = (tonicPitch.ps - this.root().ps) % 12;\n            if (diffRootToTonic < 0) {\n                diffRootToTonic += 12;\n            }\n            if (diffRootToTonic === 1) {\n                return 'Leading-tone';\n            } else {\n                return 'Subtonic';\n            }\n        }\n    }\n\n    /**\n     * Update the .pitches array.  Called at instantiation, but not automatically afterwards.\n     *\n     * @memberof music21.roman.RomanNumeral\n     */\n    _updatePitches() {\n        let useScale;\n        if (this.secondaryRomanNumeralKey !== undefined) {\n            useScale = this.secondaryRomanNumeralKey;\n        } else if (!this.useImpliedScale) {\n            useScale = this.key;\n        } else {\n            useScale = this.impliedScale;\n        }\n\n        this.scaleCardinality = 7; // simple speedup;\n        const bassScaleDegree = this.bassScaleDegreeFromNotation(\n            this.figuresNotationObj\n        );\n        const bassPitch = useScale.pitchFromDegree(\n            bassScaleDegree,\n            'ascending'\n        );\n        const pitches = [bassPitch];\n        let lastPitch = bassPitch;\n        const numberNotes = this.figuresNotationObj.numbers.length;\n\n        for (let j = 0; j < numberNotes; j++) {\n            const i = numberNotes - j - 1;\n            const thisScaleDegree\n                = bassScaleDegree + this.figuresNotationObj.numbers[i] - 1;\n            const newPitch = useScale.pitchFromDegree(\n                thisScaleDegree,\n                'ascending'\n            );\n            const pitchName = this.figuresNotationObj.modifiers[\n                i\n            ].modifyPitchName(newPitch.name);\n            const newNewPitch = new pitch.Pitch(pitchName);\n            newNewPitch.octave = newPitch.octave;\n            if (newNewPitch.ps < lastPitch.ps) {\n                newNewPitch.octave += 1;\n            }\n            pitches.push(newNewPitch);\n            lastPitch = newNewPitch;\n        }\n        if (this.frontAlterationTransposeInterval !== undefined) {\n            const newPitches = [];\n            for (const thisPitch of pitches) {\n                const newPitch = this.frontAlterationTransposeInterval.transposePitch(\n                    thisPitch\n                );\n                newPitches.push(newPitch);\n            }\n            this.pitches = newPitches;\n        } else {\n            this.pitches = pitches;\n        }\n\n        this._matchAccidentalsToQuality(this.impliedQuality);\n\n        this.scaleOffset = this.frontAlterationTransposeInterval;\n\n        if (this.omittedSteps.length) {\n            const omittedPitches = [];\n            for (const thisCS of this.omittedSteps) {\n                const p = this.getChordStep(thisCS);\n                if (p !== undefined) {\n                    omittedPitches.push(p.name);\n                }\n            }\n            const newPitches = [];\n            for (const thisPitch of pitches) {\n                if (!omittedPitches.includes(thisPitch.name)) {\n                    newPitches.push(thisPitch);\n                }\n            }\n            this.pitches = newPitches;\n            // do something...\n        }\n        this._correctBracketedPitches();\n    }\n\n    bassScaleDegreeFromNotation(notationObject) {\n        const c = new pitch.Pitch('C3');\n        const cDNN = c.diatonicNoteNum; // always 22\n        const pitches = [c];\n        for (const i of notationObject.numbers) {\n            const distanceToMove = i - 1;\n            const newDiatonicNumber = cDNN + distanceToMove;\n            const [newStep, newOctave] = interval.convertDiatonicNumberToStep(\n                newDiatonicNumber\n            );\n            const newPitch = new pitch.Pitch('C3');\n            newPitch.step = newStep;\n            newPitch.octave = newOctave;\n            pitches.push(newPitch);\n        }\n        const tempChord = new chord.Chord(pitches);\n        const rootDNN = tempChord.root().diatonicNoteNum;\n        const staffDistanceFromBassToRoot = rootDNN - cDNN;\n        let bassSD = common.posMod(\n            this.scaleDegree - staffDistanceFromBassToRoot,\n            7\n        );\n        if (bassSD === 0) {\n            bassSD = 7;\n        }\n        return bassSD;\n    }\n\n    _matchAccidentalsToQuality(impliedQuality) {\n        const correctSemitones = this._findSemitoneSizeForQuality(\n            impliedQuality\n        );\n        const chordStepsToExamine = [3, 5, 7];\n        for (let i = 0; i < chordStepsToExamine.length; i++) {\n            const thisChordStep = chordStepsToExamine[i];\n            const thisCorrect = correctSemitones[i];\n            const thisSemis = this.semitonesFromChordStep(thisChordStep);\n            if (thisCorrect === undefined) {\n                continue;\n            }\n            if (thisSemis === undefined) {\n                continue;\n            }\n            if (thisSemis === thisCorrect) {\n                continue;\n            }\n\n            let correctedSemis = thisCorrect - thisSemis;\n            if (correctedSemis >= 6) {\n                correctedSemis = -1 * (12 - correctedSemis);\n            } else if (correctedSemis <= -6) {\n                correctedSemis += 12;\n            }\n\n            const faultyPitch = this.getChordStep(thisChordStep);\n            // TODO: check for faultyPitch is undefined\n\n            if (faultyPitch.accidental === undefined) {\n                faultyPitch.accidental = new pitch.Accidental(correctedSemis);\n            } else {\n                const acc = faultyPitch.accidental;\n                correctedSemis += acc.alter;\n                if (correctedSemis >= 6) {\n                    correctedSemis = -1 * (12 - correctedSemis);\n                } else if (correctedSemis <= -6) {\n                    correctedSemis += 12;\n                }\n                acc.set(correctedSemis);\n            }\n        }\n    }\n\n    _correctForSecondaryRomanNumeral(useScale, figure) {\n        if (figure === undefined) {\n            figure = this._figure;\n        }\n        let workingFigure = figure;\n        const rx = new RegExp('(.*?)/([#a-np-zA-NP-Z].*)');\n        const match = rx.exec(figure);\n        if (match !== null) {\n            const primaryFigure = match[1];\n            const secondaryFigure = match[2];\n            const secondaryRomanNumeral = new RomanNumeral(\n                secondaryFigure,\n                useScale,\n                this.caseMatters\n            );\n            this.secondaryRomanNumeral = secondaryRomanNumeral;\n            let secondaryMode;\n            if (secondaryRomanNumeral.quality === 'minor') {\n                secondaryMode = 'minor';\n            } else if (secondaryRomanNumeral.quality === 'major') {\n                secondaryMode = 'minor';\n            } else if (secondaryRomanNumeral.semitonesFromChordStep(3) === 3) {\n                secondaryMode = 'minor';\n            } else {\n                secondaryMode = 'major';\n            }\n            this.secondaryRomanNumeralKey = new key.Key(\n                secondaryRomanNumeral.root().name,\n                secondaryMode\n            );\n            useScale = this.secondaryRomanNumeralKey;\n            workingFigure = primaryFigure;\n        }\n        return [workingFigure, useScale];\n    }\n\n    _parseOmittedSteps(workingFigure) {\n        const omittedSteps = [];\n        const rx = new RegExp(/\\[no(\\d+)\\]s*/);\n        let match = rx.exec(workingFigure);\n        while (match !== null) {\n            let thisStep = match[1];\n            thisStep = parseInt(thisStep);\n            thisStep = thisStep % 7 || 7;\n            omittedSteps.push(thisStep);\n            workingFigure = workingFigure.replace(rx, '');\n            match = rx.exec(workingFigure);\n        }\n        this.omittedSteps = omittedSteps;\n        return workingFigure;\n    }\n\n    _parseBracketedAlterations(workingFigure) {\n        const bracketedAlterations = this.bracketedAlterations;\n        const rx = new RegExp(/\\[(b+|-+|#+)(\\d+)\\]/);\n        let match = rx.exec(workingFigure);\n        while (match !== null) {\n            const matchAlteration = match[1];\n            const matchDegree = parseInt(match[2]);\n            bracketedAlterations.push([matchAlteration, matchDegree]);\n            workingFigure = workingFigure.replace(rx, '');\n            match = rx.exec(workingFigure);\n        }\n        return workingFigure;\n    }\n\n    _findSemitoneSizeForQuality(impliedQuality) {\n        let correctSemitones;\n        if (impliedQuality === 'major') {\n            correctSemitones = [4, 7];\n        } else if (impliedQuality === 'minor') {\n            correctSemitones = [3, 7];\n        } else if (impliedQuality === 'diminished') {\n            correctSemitones = [3, 6, 9];\n        } else if (impliedQuality === 'half-diminished') {\n            correctSemitones = [3, 6, 10];\n        } else if (impliedQuality === 'augmented') {\n            correctSemitones = [4, 8];\n        } else if (impliedQuality === 'dominant-seventh') {\n            correctSemitones = [4, 7, 10];\n        } else {\n            correctSemitones = [];\n        }\n\n        return correctSemitones;\n    }\n\n    /**\n     * Gives a string display.  Note that since inversion is not yet supported\n     * it needs to be given separately.\n     *\n     * Inverting 7th chords does not work.\n     *\n     * @memberof music21.roman.RomanNumeral\n     * @param {string} displayType - ['roman', 'bassName', 'nameOnly', other]\n     * @param {Int} [inversion=0]\n     * @returns {String}\n     */\n    asString(displayType, inversion) {\n        const keyObj = this.key;\n        const tonicName = keyObj.tonic.name;\n        const mode = keyObj.mode;\n\n        // specifying inversion is for backwards compatibility only.\n        if (inversion === undefined) {\n            inversion = 0;\n        }\n        let inversionName = '';\n        if (inversion === 1) {\n            if (displayType === 'roman') {\n                inversionName = '6';\n            } else {\n                inversionName = ' (first inversion)';\n            }\n        } else if (inversion === 2) {\n            if (displayType === 'roman') {\n                inversionName = '64';\n            } else {\n                inversionName = ' (second inversion)';\n            }\n        }\n        let fullChordName;\n        let connector = ' in ';\n        let suffix = '';\n        if (displayType === 'roman') {\n            fullChordName = this.figure;\n            fullChordName = fullChordName.replace('/o', 'ø');\n        } else if (displayType === 'nameOnly') {\n            // use only with only choice being tonicName\n            fullChordName = '';\n            connector = '';\n            suffix = ' triad';\n        } else if (displayType === 'bassName') {\n            fullChordName = this.bass().name.replace(/-/, 'b');\n        } else {\n            // \"default\" submediant, etc...\n            fullChordName = this.degreeName;\n            if (this.numbers !== undefined) {\n                fullChordName += ' ' + this.numbers.toString();\n            }\n        }\n        let tonicDisplay = tonicName.replace(/-/, 'b');\n        if (mode === 'minor') {\n            tonicDisplay = tonicDisplay.toLowerCase();\n        }\n        const chordStr = fullChordName\n            + inversionName\n            + connector\n            + tonicDisplay\n            + ' '\n            + mode\n            + suffix;\n        return chordStr;\n    }\n}\nroman.RomanNumeral = RomanNumeral;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/tempo -- tempo and (not in music21p) metronome objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { prebase } from './prebase.js';\n\n/* a Music21Object in m21p; the overhead is too high here to follow ... */\n/**\n * tempo module, see {@link music21.tempo}\n *\n * @exports music21/tempo\n */\n/**\n * tempo namespace\n *\n * @namespace music21.tempo\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/base\n * @requires MIDI\n * @property {number} [baseTempo=60] - basic tempo\n */\nexport const tempo = {};\n\n/**\n * Object mapping names to tempo values\n *\n * @name music21.tempo.defaultTempoValues\n * @memberof music21.tempo\n * @example\n * music21.tempo.defaultTempoValues.grave\n * // 40\n */\ntempo.defaultTempoValues = {\n    larghissimo: 16,\n    largamente: 32,\n    grave: 40,\n    'molto adagio': 40,\n    largo: 46,\n    lento: 52,\n    adagio: 56,\n    slow: 56,\n    langsam: 56,\n    larghetto: 60,\n    adagietto: 66,\n    andante: 72,\n    andantino: 80,\n    'andante moderato': 83,\n    maestoso: 88,\n    moderato: 92,\n    moderate: 92,\n    allegretto: 108,\n    animato: 120,\n    'allegro moderato': 128,\n    allegro: 132,\n    fast: 132,\n    schnell: 132,\n    allegrissimo: 140,\n    'molto allegro': 144,\n    'très vite': 144,\n    vivace: 160,\n    vivacissimo: 168,\n    presto: 184,\n    prestissimo: 208,\n};\n\ntempo.baseTempo = 60;\n\n/* --------- metronome ---------- */\n/**\n *\n * @class Metronome\n * @memberof music21.tempo\n * @extends music21.prebase.ProtoM21Object\n * @param {number} [tempo=music21.tempo.baseTempo] - the tempo of the metronome to start\n * @property {number} tempo\n * @property {Int} [numBeatsPerMeasure=4]\n * @property {number} [minTempo=10]\n * @property {number} [maxTempo=600]\n * @property {bool} [flash=false] - flash the tempo\n * @property {bool} [silent=false] - play silently\n * @property {Int} beat - current beat number\n * @property {Int} chirpTimeout - an index of a timeout object for chirping\n */\nexport class Metronome extends prebase.ProtoM21Object {\n    constructor(tempoInt) {\n        super();\n        this._tempo = 60; // overridden by music21.tempo.baseTempo;\n        if (tempoInt === undefined) {\n            this.tempo = tempo.baseTempo;\n        } else {\n            this.tempo = tempoInt;\n        }\n        this.numBeatsPerMeasure = 4;\n        this.minTempo = 10;\n        this.maxTempo = 600;\n        this.beat = this.numBeatsPerMeasure;\n        this.chirpTimeout = undefined;\n        this.silent = false;\n        this.flash = false;\n        this.tempoRanges = [0, 40, 60, 72, 120, 144, 240, 999];\n        this.tempoIncreases = [0, 1, 2, 3, 4, 6, 8, 15, 100];\n    }\n    get tempo() {\n        return this._tempo;\n    }\n    set tempo(t) {\n        this._tempo = t;\n        if (this._tempo > this.maxTempo) {\n            this._tempo = this.maxTempo;\n        } else if (this._tempo < this.minTempo) {\n            this._tempo = this.minTempo;\n        }\n    }\n    get beatLength() {\n        return 60.0 / this.tempo;\n    }\n    _silentFlash(flashColor) {\n        this.$metronomeDiv\n            .find('.metroFlash')\n            .css('background-color', flashColor)\n            .fadeOut(this.beatLength * 1000 * 1 / 4, function silentFadeOut() {\n                $(this)\n                    .css('background-color', '#ffffff')\n                    .fadeIn(1);\n            });\n    }\n\n    /**\n     * Play a note (a higher one on the downbeat) and start the metronome chirping.\n     *\n     * @memberof music21.tempo.Metronome\n     */\n    chirp() {\n        this.beat += 1;\n        if (this.beat > this.numBeatsPerMeasure) {\n            this.beat = 1;\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 96, 100, 0);\n                MIDI.noteOff(0, 96, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#0000f0');\n            }\n        } else {\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 84, 70, 0);\n                MIDI.noteOff(0, 84, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#ff0000');\n            }\n        }\n        const that = this;\n        this.chirpTimeout = setTimeout(() => {\n            that.chirp();\n        }, 1000 * 60 / this.tempo);\n    }\n\n    /**\n     * Stop the metronome from chirping.\n     *\n     * @memberof music21.tempo.Metronome\n     */\n    stopChirp() {\n        if (this.chirpTimeout !== undefined) {\n            clearTimeout(this.chirpTimeout);\n            this.chirpTimeout = undefined;\n        }\n    }\n\n    /**\n     * Increase the metronome tempo one \"click\".\n     *\n     * Value changes depending on the current tempo.  Uses standard metronome guidelines.\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {Int} n - number of clicks to the right\n     * @returns {number} new tempo\n     */\n    increaseSpeed(n) {\n        // increase by one metronome 'click' for every n\n        if (n === undefined) {\n            n = 1;\n        }\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            for (let tr = 0; tr < this.tempoRanges.length; tr++) {\n                const tempoExtreme = this.tempoRanges[tr];\n                const tempoIncrease = this.tempoIncreases[tr];\n                if (t < tempoExtreme) {\n                    t += tempoIncrease;\n                    t = tempoIncrease * Math.round(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n        return this.tempo;\n    }\n\n    /**\n     * Decrease the metronome tempo one \"click\"\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {Int} n - number of clicks to the left\n     * @returns {number} new tempo\n     */\n    decreaseSpeed(n) {\n        if (n === undefined) {\n            n = 1;\n        }\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            const trL = this.tempoRanges.length;\n            for (let tr = 1; tr <= trL; tr++) {\n                const tempoExtreme = this.tempoRanges[trL - tr];\n                const tempoIncrease = this.tempoIncreases[trL - tr + 1];\n                if (t > tempoExtreme) {\n                    t -= tempoIncrease;\n                    t = tempoIncrease * Math.floor(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n    }\n\n    /**\n     * add a Metronome interface onto the DOM at where\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {JQueryDOMObject|DOMObject} [where='body']\n     * @returns {JQueryDOMObject} - a div holding the metronome.\n     */\n    addDiv(where) {\n        let jWhere;\n        if (where !== undefined && where.jquery !== undefined) {\n            jWhere = where;\n        } else if (where !== undefined) {\n            jWhere = $(where);\n        } else {\n            jWhere = $('body');\n        }\n        const metroThis = this;\n        const tempoHolder = $(\n            '<span class=\"tempoHolder\">' + this.tempo.toString() + '</span>'\n        );\n        tempoHolder.css({\n            'font-size': '24px',\n            'padding-left': '10px',\n            'padding-right': '10px',\n        });\n        const newDiv = $('<div class=\"metronomeRendered\"></div>');\n        newDiv.append(tempoHolder);\n\n        const b1 = $('<button>start</button>');\n        b1.on('click', () => {\n            metroThis.chirp();\n        });\n        const b2 = $('<button>stop</button>');\n        b2.on('click', () => {\n            metroThis.stopChirp();\n        });\n        newDiv.prepend(b2);\n        newDiv.prepend(b1);\n        const b3 = $('<button>up</button>');\n        b3.on('click', function increaseSpeedButton() {\n            metroThis.increaseSpeed();\n            $(this)\n                .prevAll('.tempoHolder')\n                .html(metroThis.tempo.toString());\n        });\n        const b4 = $('<button>down</button>');\n        b4.on('click', function decreaseSpeedButton() {\n            metroThis.decreaseSpeed();\n            $(this)\n                .prevAll('.tempoHolder')\n                .html(metroThis.tempo.toString());\n        });\n        newDiv.append(b3);\n        newDiv.append(b4);\n        const $flash = $(\n            '<span class=\"metroFlash\">'\n                + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>'\n        );\n        $flash.css('margin-left', '40px');\n        $flash.css('height', '40px');\n\n        newDiv.append($flash);\n\n        jWhere.append(newDiv);\n\n        this.$metronomeDiv = newDiv;\n        return newDiv;\n    }\n}\ntempo.Metronome = Metronome;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tinyNotation -- TinyNotation implementation\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\n\nimport { clef } from './clef.js';\nimport { duration } from './duration.js';\nimport { pitch } from './pitch.js';\nimport { note } from './note.js';\nimport { meter } from './meter.js';\nimport { stream } from './stream.js';\nimport { tie } from './tie.js';\n\n/**\n * TinyNotation module, see {@link music21.tinyNotation} namespace\n *\n * @exports music21/tinyNotation\n */\n/**\n * @namespace music21.tinyNotation\n * @memberof music21\n * @requires music21/base\n * @requires music21/clef\n * @requires music21/duration\n * @requires music21/pitch\n * @requires music21/note\n * @requires music21/meter\n * @requires music21/stream\n * @requires music21/tie\n */\nexport const tinyNotation = {};\n\n/**\n * Regular expressions object\n *\n * @memberof music21.tinyNotation\n */\ntinyNotation.regularExpressions = {\n    REST: /r/,\n    OCTAVE2: /([A-G])[A-G]+/,\n    OCTAVE3: /([A-G])/,\n    OCTAVE5: /([a-g])('+)/,\n    OCTAVE4: /([a-g])/,\n    EDSHARP: /\\((#+)\\)/,\n    EDFLAT: /\\((-+)\\)/,\n    EDNAT: /\\(n\\)/,\n    SHARP: /^[A-Ga-g]+'*(#+)/, // simple notation finds\n    FLAT: /^[A-Ga-g]+'*(-+)/, //   double accidentals too\n    NAT: /^[A-Ga-g]+'*n/, // explicit naturals\n    TYPE: /(\\d+)/,\n    TIE: /.~/, // not preceding ties\n    PRECTIE: /~/, // front ties\n    ID_EL: /=([A-Za-z0-9]*)/,\n    LYRIC: /_(.*)/,\n    DOT: /\\.+/,\n    TIMESIG: /(\\d+)\\/(\\d+)/,\n\n    PARTBREAK: /partBreak/, // nonstandard...fix later...\n\n    TRIP: /trip\\{/,\n    QUAD: /quad\\{/,\n    ENDBRAC: /\\}$/,\n};\n/**\n * Function, not class.\n *\n * Converts a TinyNotation String into a music21 Stream\n *\n * See music21p for examples of what can go into tinynotation. It's an\n * adaptation of Lilypond format, by design Extremely simple!\n *\n * @memberof music21.tinyNotation\n * @param {string} textIn - a valid tinyNotation string\n * @returns {music21.stream.Part|music21.stream.Measure} - a Stream or Part object (if multiple measures)\n * @example\n * var t = \"3/4 c4 B8 c d4 e2.\";\n * var p = music21.tinyNotation.TinyNotation(t);\n * p.duration.quarterLength;\n * // 6.0\n */\ntinyNotation.TinyNotation = function TinyNotation(textIn) {\n    textIn = textIn.trim();\n    const tokens = textIn.split(' ');\n\n    let optionalScore;\n\n    let p = new stream.Part();\n    let m = new stream.Measure();\n    m.number = 1;\n    let currentTSBarDuration = 4.0;\n    let lastDurationQL = 1.0;\n    const storedDict = {\n        lastNoteTied: false,\n        inTrip: false,\n        inQuad: false,\n        endTupletAfterNote: false,\n    };\n    const tnre = tinyNotation.regularExpressions; // faster typing\n    let measureNumber = 1;\n    for (let i = 0; i < tokens.length; i++) {\n        // check at first so that a full measure but not over full\n        // gets returned as a stream.Measure object.\n        if ((m.duration.quarterLength >= currentTSBarDuration)\n            || (Math.abs(m.duration.quarterLength - currentTSBarDuration) < 0.0001)) {\n            p.append(m);\n            measureNumber += 1;\n            m = new stream.Measure();\n            m.number = measureNumber;\n        }\n\n        let token = tokens[i];\n        let noteObj;\n        let lyric;\n        if (tnre.PARTBREAK.exec(token)) {\n            if (m.length > 0) {\n                p.append(m);\n                m = new stream.Measure();\n            }\n            if (optionalScore === undefined) {\n                optionalScore = new stream.Score();\n            }\n            optionalScore.insert(0, p);\n            p = new stream.Part();\n\n            storedDict.lastNoteTied = false;\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n\n            continue;\n        }\n\n        if (tnre.TRIP.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inTrip = true;\n        }\n        if (tnre.QUAD.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inQuad = true;\n        }\n        if (tnre.ENDBRAC.exec(token)) {\n            token = token.slice(0, -1); // cut...\n            storedDict.endTupletAfterNote = true;\n        }\n\n        // Modifiers\n        if (tnre.LYRIC.exec(token)) {\n            [token, lyric] = token.split('_');\n        }\n\n        if (tnre.TIMESIG.exec(token)) {\n            const MATCH = tnre.TIMESIG.exec(token);\n            const ts = new meter.TimeSignature();\n            ts.numerator = parseInt(MATCH[1]);\n            ts.denominator = parseInt(MATCH[2]);\n            m.timeSignature = ts;\n            currentTSBarDuration = ts.barDuration.quarterLength;\n            // console.log(currentTSBarDuration);\n            continue;\n        } else if (tnre.REST.exec(token)) {\n            noteObj = new note.Rest(lastDurationQL);\n        } else if (tnre.OCTAVE2.exec(token)) {\n            const MATCH = tnre.OCTAVE2.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 4 - MATCH[0].length;\n        } else if (tnre.OCTAVE3.exec(token)) {\n            const MATCH = tnre.OCTAVE3.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 3;\n        } else if (tnre.OCTAVE5.exec(token)) {\n            // must match octave 5 before 4\n            const MATCH = tnre.OCTAVE5.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 3 + MATCH[0].length;\n        } else if (tnre.OCTAVE4.exec(token)) {\n            const MATCH = tnre.OCTAVE4.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 4;\n        }\n\n        if (noteObj === undefined) {\n            continue;\n        }\n\n        if (lyric !== undefined) {\n            noteObj.lyric = lyric;\n        }\n\n        if (tnre.TIE.exec(token)) {\n            noteObj.tie = new tie.Tie('start');\n            if (storedDict.lastNoteTied) {\n                noteObj.tie.type = 'continue';\n            }\n            storedDict.lastNoteTied = true;\n        } else if (storedDict.lastNoteTied) {\n            noteObj.tie = new tie.Tie('stop');\n            storedDict.lastNoteTied = false;\n        }\n        if (tnre.SHARP.exec(token)) {\n            const MATCH = tnre.SHARP.exec(token); // sharp\n            noteObj.pitch.accidental = new pitch.Accidental(MATCH[1].length);\n        } else if (tnre.FLAT.exec(token)) {\n            const MATCH = tnre.FLAT.exec(token); // sharp\n            noteObj.pitch.accidental = new pitch.Accidental(-1 * MATCH[1].length);\n        } else if (tnre.NAT.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('natural');\n            noteObj.pitch.accidental.displayType = 'always';\n        }\n        let MATCH = tnre.TYPE.exec(token);\n        if (MATCH) {\n            const durationType = parseInt(MATCH[0]);\n            noteObj.duration.quarterLength = 4.0 / durationType;\n        }\n        MATCH = tnre.DOT.exec(token);\n        if (MATCH) {\n            const numDots = MATCH[0].length;\n            const multiplier = 1 + (1 - Math.pow(0.5, numDots));\n            noteObj.duration.quarterLength *= multiplier;\n        }\n        lastDurationQL = noteObj.duration.quarterLength;\n        // do before appending tuplets\n\n        if (storedDict.inTrip) {\n            // console.log(noteObj.duration.quarterLength);\n            noteObj.duration.appendTuplet(\n                new duration.Tuplet(3, 2, noteObj.duration.quarterLength)\n            );\n        }\n        if (storedDict.inQuad) {\n            noteObj.duration.appendTuplet(\n                new duration.Tuplet(4, 3, noteObj.duration.quarterLength)\n            );\n        }\n        if (storedDict.endTupletAfterNote) {\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n        }\n        m.append(noteObj);\n    }\n\n    if (m.length > 0) {\n        p.append(m);\n    }\n\n    let returnObject;\n\n    if (optionalScore !== undefined) {\n        if (p.length > 0) {\n            optionalScore.append(p);\n        }\n        for (let i = 0; i < optionalScore.length; i++) {\n            const innerPart = optionalScore.get(i);\n            innerPart.clef = clef.bestClef(innerPart);\n            innerPart.getElementsByClass('Measure').get(0).clef = innerPart.clef;\n        }\n        returnObject = optionalScore;\n    } else {\n        p.clef = clef.bestClef(p);\n        p.getElementsByClass('Measure').get(0).clef = p.clef;\n        returnObject = p;\n    }\n    return returnObject;\n};\n\n// render notation divs in HTML\n/**\n * Render all the TinyNotation classes in the DOM as notation\n *\n * Called automatically when music21 is loaded.\n *\n * @memberof music21.tinyNotation\n * @param {string} classTypes - a JQuery selector to find elements to replace.\n */\ntinyNotation.renderNotationDivs = function renderNotationDivs(\n    classTypes,\n    selector\n) {\n    if (classTypes === undefined) {\n        classTypes = '.music21.tinyNotation';\n    }\n    let allRender = [];\n    if (selector === undefined) {\n        allRender = $(classTypes);\n    } else {\n        if (selector.jquery === undefined) {\n            selector = $(selector);\n        }\n        allRender = selector.find(classTypes);\n    }\n    for (let i = 0; i < allRender.length; i++) {\n        const thisTN = allRender[i];\n        const $thisTN = $(thisTN);\n        let thisTNContents;\n        if ($thisTN.attr('tinynotationcontents') !== undefined) {\n            thisTNContents = $thisTN.attr('tinynotationcontents');\n        } else if (thisTN.textContent !== undefined) {\n            thisTNContents = thisTN.textContent;\n            thisTNContents = thisTNContents.replace(/s+/g, ' '); // no line-breaks, etc.\n        }\n\n        if (\n            String.prototype.trim !== undefined\n            && thisTNContents !== undefined\n        ) {\n            thisTNContents = thisTNContents.trim(); // remove leading, trailing whitespace\n        }\n        if (thisTNContents) {\n            const st = tinyNotation.TinyNotation(thisTNContents);\n            if ($thisTN.hasClass('noPlayback')) {\n                st.renderOptions.events.click = undefined;\n            }\n            const newSVG = st.createDOM();\n\n            $thisTN.attr('tinynotationcontents', thisTNContents);\n            $thisTN.empty();\n            $thisTN.data('stream', st);\n            $thisTN.append(newSVG);\n            // console.log(thisTNContents);\n        }\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/voiceLeading -- voiceLeading objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport { interval } from './interval.js';\nimport { key } from './key.js';\nimport { note } from './note.js';\n\nimport { Music21Object } from './base.js';\n\nconst intervalCache = [];\n\nconst MotionType = {\n    antiParallel: 'Anti-Parallel',\n    contrary: 'Contrary',\n    noMotion: 'No Motion',\n    oblique: 'Oblique',\n    parallel: 'Parallel',\n    similar: 'Similar',\n};\n\nclass VoiceLeadingQuartet extends Music21Object {\n    constructor(v1n1, v1n2, v2n1, v2n2, analyticKey) {\n        super();\n        if (!intervalCache.length) {\n            intervalCache.push(new interval.Interval('P1'));\n            intervalCache.push(new interval.Interval('P5'));\n            intervalCache.push(new interval.Interval('P8'));\n        }\n        this.unison = intervalCache[0];\n        this.fifth = intervalCache[1];\n        this.octave = intervalCache[2];\n\n        this._v1n1 = undefined;\n        this._v1n2 = undefined;\n        this._v2n1 = undefined;\n        this._v2n2 = undefined;\n\n        this.v1n1 = v1n1;\n        this.v1n2 = v1n2;\n        this.v2n1 = v2n1;\n        this.v2n2 = v2n2;\n\n        this.vIntervals = [];\n        this.hIntervals = [];\n\n        this._key = undefined;\n        if (analyticKey !== undefined) {\n            this.key = analyticKey;\n        }\n        if (\n            v1n1 !== undefined\n            && v1n2 !== undefined\n            && v2n1 !== undefined\n            && v2n2 !== undefined\n        ) {\n            this._findIntervals();\n        }\n    }\n\n    _setVoiceNote(value, which) {\n        if (value === undefined) {\n            this[which] = value;\n        } else if (typeof value === 'string') {\n            this[which] = new note.Note(value);\n        } else if (value.classes.includes('Note')) {\n            this[which] = value;\n        } else {\n            const n = new note.Note(value.nameWithOctave);\n            n.duration.quarterLength = 0.0;\n            this[which] = n;\n        }\n    }\n\n    get v1n1() {\n        return this._v1n1;\n    }\n    set v1n1(value) {\n        this._setVoiceNote(value, '_v1n1');\n    }\n    get v1n2() {\n        return this._v1n2;\n    }\n    set v1n2(value) {\n        this._setVoiceNote(value, '_v1n2');\n    }\n    get v2n1() {\n        return this._v2n1;\n    }\n    set v2n1(value) {\n        this._setVoiceNote(value, '_v2n1');\n    }\n    get v2n2() {\n        return this._v2n2;\n    }\n    set v2n2(value) {\n        this._setVoiceNote(value, '_v2n2');\n    }\n\n    get key() {\n        return this._key;\n    }\n    set key(keyValue) {\n        if (typeof keyValue === 'string') {\n            keyValue = new key.Key(\n                key.convertKeyStringToMusic21KeyString(keyValue)\n            );\n        }\n        this._key = keyValue;\n    }\n\n    _findIntervals() {\n        this.vIntervals.push(new interval.Interval(this.v1n1, this.v2n1));\n        this.vIntervals.push(new interval.Interval(this.v1n2, this.v2n2));\n        this.hIntervals.push(new interval.Interval(this.v1n1, this.v1n2));\n        this.hIntervals.push(new interval.Interval(this.v2n1, this.v2n2));\n    }\n\n    motionType() {\n        if (this.obliqueMotion()) {\n            return MotionType.oblique;\n        } else if (this.parallelMotion()) {\n            return MotionType.parallel;\n        } else if (this.similarMotion()) {\n            return MotionType.similar;\n        } else if (this.contraryMotion()) {\n            return MotionType.contrary;\n        } else if (this.antiParallelMotion()) {\n            return MotionType.antiParallel;\n        } else if (this.noMotion()) {\n            return MotionType.noMotion;\n        }\n        return undefined;\n    }\n\n    noMotion() {\n        for (const iV of this.hIntervals) {\n            if (iV.name !== 'P1') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    obliqueMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n\n        for (const iH of this.hIntervals) {\n            if (iH.name === 'P1') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    similarMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n\n        if (this.hIntervals[0].direction === this.hIntervals[1].direction) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelMotion(requiredInterval) {\n        if (!this.similarMotion()) {\n            return false;\n        }\n        if (\n            this.vIntervals[0].directedSimpleName\n            !== this.vIntervals[1].directedSimpleName\n        ) {\n            return false;\n        }\n        if (requiredInterval === undefined) {\n            return true;\n        }\n        if (typeof requiredInterval === 'string') {\n            requiredInterval = new interval.Interval(requiredInterval);\n        }\n        if (this.vIntervals[0].simpleName === requiredInterval.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    contraryMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n        if (this.obliqueMotion()) {\n            return false;\n        }\n        if (this.hIntervals[0].direction === this.hIntervals[1].direction) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    outwardContraryMotion() {\n        return (\n            this.contraryMotion()\n            && this.hIntervals[0].direction === interval.Direction.ASCENDING\n        );\n    }\n\n    inwardContraryMotion() {\n        return (\n            this.contraryMotion()\n            && this.hIntervals[0].direction === interval.Direction.DESCENDING\n        );\n    }\n\n    antiParallelMotion(simpleName) {\n        if (!this.contraryMotion()) {\n            return false;\n        }\n        if (this.vIntervals[0].simpleName !== this.vIntervals[1].simpleName) {\n            return false;\n        }\n        if (simpleName === undefined) {\n            return true;\n        }\n        if (typeof simpleName === 'string') {\n            if (this.vIntervals[0].simpleName === simpleName) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (this.vIntervals[0].simpleName === simpleName.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelInterval(thisInterval) {\n        if (!(this.parallelMotion() || this.antiParallelMotion())) {\n            return false;\n        }\n        if (typeof thisInterval === 'string') {\n            thisInterval = new interval.Interval(thisInterval);\n        }\n\n        if (this.vIntervals[0].semiSimpleName === thisInterval.semiSimpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelFifth() {\n        return this.parallelInterval(this.fifth);\n    }\n\n    parallelOctave() {\n        return this.parallelInterval(this.octave);\n    }\n\n    parallelUnison() {\n        return this.parallelInterval(this.unison);\n    }\n\n    parallelUnisonOrOctave() {\n        return this.parallelUnison() || this.parallelOctave();\n    }\n\n    hiddenInterval(thisInterval) {\n        if (this.parallelMotion()) {\n            return false;\n        }\n        if (!this.similarMotion()) {\n            return false;\n        }\n\n        if (typeof thisInterval === 'string') {\n            thisInterval = new interval.Interval(thisInterval);\n        }\n        if (this.vIntervals[1].simpleName === thisInterval.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    hiddenFifth() {\n        return this.hiddenInterval(this.fifth);\n    }\n\n    hiddenOctave() {\n        return this.hiddenInterval(this.octave);\n    }\n\n    // True if either note in voice 1 is lower than the corresponding voice 2 note\n    voiceCrossing() {\n        return (\n            this.v1n1.pitch.ps < this.v2n1.pitch.ps\n            || this.v1n2.pitch.ps < this.v2n2.pitch.ps\n        );\n    }\n\n    voiceOverlap() {\n        return (\n            this.v1n2.pitch.ps < this.v2n1.pitch.ps\n            || this.v2n2.pitch.ps > this.v1n1.pitch.ps\n        );\n    }\n\n    /**\n     * isProperResolution - Checks whether the voice-leading quartet resolves correctly according to standard\n     *         counterpoint rules. If the first harmony is dissonant (d5, A4, or m7) it checks\n     *         that these are correctly resolved. If the first harmony is consonant, True is returned.\n     *\n     *         The key parameter should be specified to check for motion in the bass from specific\n     *         note degrees. If it is not set, then no checking for scale degrees takes place.\n     *\n     *         Diminished Fifth: in by contrary motion to a third, with 7 resolving up to 1 in the bass\n     *         Augmented Fourth: out by contrary motion to a sixth, with chordal seventh resolving\n     *         down to a third in the bass.\n     *         Minor Seventh: Resolves to a third with a leap form 5 to 1 in the bass\n     *\n     * @return {boolean}  true if proper or rules do not apply; false if improper\n     */\n\n    isProperResolution() {\n        if (this.noMotion()) {\n            return true;\n        }\n        let scale;\n        let n1degree;\n        let n2degree;\n        if (this.key !== undefined) {\n            scale = this.key.getScale();\n            n1degree = scale.getScaleDegreeFromPitch(this.v2n1);\n            n2degree = scale.getScaleDegreeFromPitch(this.v2n2);\n        }\n\n        // catches case of #7 in minor\n        if (\n            this.key !== undefined\n            && this.key.mode === 'minor'\n            && (n1degree === undefined || n2degree === undefined)\n        ) {\n            const scale2 = this.key.getScale('melodic-minor'); // gets ascending form\n            if (n1degree === undefined) {\n                n1degree = scale2.getScaleDegreeFromPitch(this.v2n1);\n            }\n            if (n2degree === undefined) {\n                n2degree = scale2.getScaleDegreeFromPitch(this.v2n2);\n            }\n        }\n\n        const firstHarmony = this.vIntervals[0].simpleName;\n        const secondHarmony = this.vIntervals[1].generic.simpleUndirected;\n\n        if (firstHarmony === 'P4') {\n            if (this.v1n1.pitch.ps >= this.v1n2.pitch.ps) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (firstHarmony === 'd5') {\n            if (scale !== undefined && n1degree !== 7) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 1) {\n                return false;\n            }\n            return this.inwardContraryMotion() && secondHarmony === 3;\n        } else if (firstHarmony === 'A4') {\n            if (scale !== undefined && n1degree !== 4) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 3) {\n                return false;\n            }\n            return this.outwardContraryMotion() && secondHarmony === 6;\n        } else if (firstHarmony === 'm7') {\n            if (scale !== undefined && n1degree !== 5) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 1) {\n                return false;\n            }\n            return secondHarmony === 3;\n        } else {\n            return true;\n        }\n    }\n}\n\nexport const voiceLeading = {\n    VoiceLeadingQuartet,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/webmidi -- webmidi or wrapper around the Jazz Plugin\n *\n * For non webmidi --  Uses the cross-platform, cross-browser plugin from\n * http://jazz-soft.net/doc/Jazz-Plugin/Plugin.html\n * P.S. by the standards of divinity of most major religions, Sema Kachalo is a god.\n *\n * Copyright (c) 2014-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport { debug } from './debug.js';\nimport { common } from './common.js';\nimport { miditools } from './miditools.js';\n\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * See {@link music21.webmidi}\n *\n * @exports music21/webmidi\n */\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * @namespace music21.webmidi\n * @memberof music21\n * @requires music21/miditools\n * @requires jquery\n * @property {JazzObject|undefined} storedPlugin - reference to the Jazz object from the plugin; cached from `createPlugin`.\n * @property {string} selectedJazzInterface - the currently connected interface (note that we can only use one right now)\n */\nexport const webmidi = {};\n\nwebmidi.selectedOutputPort = undefined;\nwebmidi.selectedInputPort = undefined;\n\nwebmidi.access = undefined;\nwebmidi.$selectDiv = undefined;\n\nwebmidi.jazzDownloadUrl = 'http://jazz-soft.net/download/Jazz-Plugin/';\nwebmidi.storedPlugin = undefined;\nwebmidi.selectedJazzInterface = undefined; // not the same as \"\" etc. uses last selected interface by default.\n\n/**\n * Called by Jazz MIDI plugin when an event arrives.\n *\n * Shim to convert the data into WebMIDI API format and then call the WebMIDI API midiInArrived\n *\n * See the MIDI spec for information on parameters\n *\n * @memberof music21.webmidi\n * @param {byte} t - timing information\n * @param {byte} a - data 1\n * @param {byte} b - data 2\n * @param {byte} c - data 3\n */\nwebmidi.jazzMidiInArrived = function jazzMidiInArrived(t, a, b, c) {\n    const webmidiEvent = {\n        timestamp: t,\n        data: [a, b, c],\n    };\n    return webmidi.midiInArrived(webmidiEvent);\n};\n\n/**\n * Called directly when a MIDI event arrives from the WebMIDI API, or via a Shim (jazzMidiInArrived)\n * when MIDI information comes from JazzMIDI\n *\n * Calls the 'raw' and 'general callbacks when a raw midi event (four bytes)\n * arrives.\n *\n * See the MIDI spec for information on the contents of the three parameters.\n *\n * midiMessageEvent should be an object with two keys: timeStamp (int) and data (array of three int values)\n *\n * @memberof music21.webmidi\n * @param {MidiMessageEvent} midiMessageEvent - midi Information\n */\nwebmidi.midiInArrived = function midiInArrived(midiMessageEvent) {\n    const t = midiMessageEvent.timeStamp;\n    const a = midiMessageEvent.data[0];\n    const b = midiMessageEvent.data[1];\n    const c = midiMessageEvent.data[2];\n    const eventObject = miditools.callBacks.raw(t, a, b, c);\n    if (miditools.callBacks.general instanceof Array) {\n        return miditools.callBacks.general.forEach((el, index, array) => {\n            el(eventObject);\n        });\n    } else if (miditools.callBacks.general !== undefined) {\n        return miditools.callBacks.general(eventObject);\n    } else {\n        return undefined;\n    }\n};\n\n/**\n * Create a hidden tiny, &lt;object&gt; tag in the DOM with the\n * proper classid (`CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90`) to\n * load the Jazz plugin.\n *\n * It will return the plugin if it can or undefined if it cannot. Caches it in webmidi.storedPlugin.\n *\n * @function music21.webmidi.createPlugin\n * @param {DOMObject} [appendElement=document.body] - where to place this hidden object (does not really matter)\n * @param {Boolean} [override=false] - if this method has been called successfully before return the storedPlugin unless override is true.\n * @returns {Jazz|undefined} Jazz MIDI plugin object\n */\nwebmidi.createPlugin = function createPlugin(appendElement, override) {\n    if (webmidi.storedPlugin && override !== true) {\n        return webmidi.storedPlugin;\n    }\n    if (typeof appendElement === 'undefined') {\n        appendElement = $('body')[0];\n    }\n    const obj = document.createElement('object');\n    obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\n    if (!obj.isJazz) {\n        obj.type = 'audio/x-jazz';\n    }\n    obj.style.visibility = 'hidden';\n    obj.style.width = '0px';\n    obj.style.height = '0px';\n    appendElement.appendChild(obj);\n\n    if (obj.isJazz) {\n        webmidi.storedPlugin = obj;\n        return obj;\n    } else {\n        appendElement.removeChild(obj);\n        console.error(\n            'Cannot use jazz plugin; install at ' + webmidi.jazzDownloadUrl\n        );\n        return undefined;\n    }\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * @function music21.webmidi.createJazzSelector\n * @param {JQueryDOMObject|DOMObject} [midiSelectDiv=document.body] - object to append the select to\n * @param {object} [options] - see createSelector for details\n * @returns {DOMObject|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createJazzSelector = function createJazzSelector($newSelect, options) {\n    const params = {};\n    common.merge(params, options);\n\n    const Jazz = webmidi.createPlugin();\n    if (Jazz === undefined) {\n        return undefined;\n    }\n\n    $newSelect.change(() => {\n        const selectedInput = $('#midiInSelect option:selected').text();\n        if (selectedInput !== 'None selected') {\n            webmidi.selectedJazzInterface = Jazz.MidiInOpen(\n                selectedInput,\n                webmidi.jazzMidiInArrived\n            );\n        } else {\n            Jazz.MidiInClose();\n        }\n        if (debug) {\n            console.log(\n                'current input changed to: ' + webmidi.selectedInterface\n            );\n        }\n    });\n    const midiOptions = Jazz.MidiInList();\n    const noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    $newSelect.append(noneAppendOption);\n\n    let anySelected = false;\n    const allAppendOptions = [];\n    for (let i = 0; i < midiOptions.length; i++) {\n        const $appendOption = $(\n            \"<option value='\"\n                + midiOptions[i]\n                + \"'>\"\n                + midiOptions[i]\n                + '</option>'\n        );\n        if (midiOptions[i] === webmidi.selectedJazzInterface) {\n            $appendOption.attr('selected', true);\n            anySelected = true;\n        }\n        allAppendOptions.push($appendOption);\n        // console.log(appendOption);\n        $newSelect.append($appendOption);\n    }\n    if (anySelected === false && midiOptions.length > 0) {\n        $newSelect.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n        webmidi.selectedJazzInterface = Jazz.MidiInOpen(\n            midiOptions[0],\n            webmidi.jazzMidiInArrived\n        );\n        anySelected = true;\n    } else {\n        noneAppendOption.attr('selected', true);\n    }\n    if (params.onsuccess !== undefined) {\n        params.onsuccess();\n    }\n    if (anySelected === true && params.oninputsuccess !== undefined) {\n        params.oninputsuccess();\n    } else if (anySelected === false && params.oninputempty !== undefined) {\n        params.oninputempty();\n    }\n    return $newSelect;\n};\n\n/**\n * Function to be called if the webmidi-api selection changes. (not jazz)\n *\n */\nwebmidi.selectionChanged = function selectionChanged() {\n    const selectedInput = webmidi.$select.val();\n    if (selectedInput === webmidi.selectedInputPort) {\n        return false;\n    }\n    const storedStateChange = webmidi.access.onstatechange; // port.close() fires onstatechange, so turn off for a moment.\n    webmidi.access.onstatechange = () => {};\n    if (debug) {\n        console.log('current input changed to: ' + selectedInput);\n    }\n    webmidi.selectedInputPort = selectedInput;\n\n    webmidi.access.inputs.forEach(port => {\n        if (port.name === selectedInput) {\n            port.onmidimessage = webmidi.midiInArrived;\n        } else {\n            port.close();\n        }\n    });\n    webmidi.access.onstatechange = storedStateChange;\n    return false;\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * The options object has several parameters:\n *\n * {bool} autoupdate -- should this auto update?\n * {function} onsuccess -- function to call on all successful port queries\n * {function} oninputsuccess -- function to call if successful and at least one input device is found\n * {function} oninputempty -- function to call if successful but no input devices are found.\n * {bool} existingMidiSelect -- is there already a select tag for MIDI?\n *\n * @function music21.webmidi.createSelector\n * @param {JQueryDOMObject|DOMObject} [$midiSelectDiv=$('body')] - object to append the select to\n * @param {object} [options] - see above.\n * @returns {DOMObject|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createSelector = function createSelector($midiSelectDiv, options) {\n    const params = {\n        autoUpdate: true,\n        existingMidiSelect: false,\n    };\n    common.merge(params, options);\n\n    if (typeof $midiSelectDiv === 'undefined') {\n        $midiSelectDiv = $('body');\n    }\n    if ($midiSelectDiv.jquery === undefined) {\n        $midiSelectDiv = $($midiSelectDiv);\n    }\n    let $newSelect;\n    const foundMidiSelects = $midiSelectDiv.find('select#midiInSelect');\n    if (foundMidiSelects.length > 0) {\n        $newSelect = foundMidiSelects[0];\n        params.existingMidiSelect = true;\n    } else {\n        $newSelect = $('<select>').attr('id', 'midiInSelect');\n        $midiSelectDiv.append($newSelect);\n    }\n    webmidi.$select = $newSelect;\n\n    if (navigator.requestMIDIAccess === undefined) {\n        webmidi.createJazzSelector($newSelect, params);\n    } else {\n        if (params.existingMidiSelect !== true) {\n            $newSelect.change(webmidi.selectionChanged);\n        }\n        navigator.requestMIDIAccess().then(\n            access => {\n                webmidi.access = access;\n                webmidi.populateSelect();\n                if (params.autoUpdate) {\n                    access.onstatechange = webmidi.populateSelect;\n                }\n                webmidi.$select.change();\n                if (params.onsuccess !== undefined) {\n                    params.onsuccess();\n                }\n                if (\n                    webmidi.selectedInputPort !== 'None'\n                    && params.oninputsuccess !== undefined\n                ) {\n                    params.oninputsuccess();\n                } else if (\n                    webmidi.selectedInputPort === 'None'\n                    && params.oninputempty !== undefined\n                ) {\n                    params.oninputempty();\n                }\n            },\n            e => {\n                $midiSelectDiv.html(e.message);\n            }\n        );\n    }\n    miditools.clearOldChords(); // starts the chord checking process.\n    return $newSelect;\n};\n\nwebmidi.populateSelect = function populateSelect() {\n    const inputs = webmidi.access.inputs;\n    webmidi.$select.empty();\n\n    const $noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    webmidi.$select.append($noneAppendOption);\n\n    const allAppendOptions = [];\n    const midiOptions = [];\n    let i = 0;\n    inputs.forEach(port => {\n        const $appendOption = $(\n            \"<option value='\" + port.name + \"'>\" + port.name + '</option>'\n        );\n        allAppendOptions.push($appendOption);\n        midiOptions.push(port.name);\n        // console.log(appendOption);\n        webmidi.$select.append($appendOption);\n        i += 1;\n    });\n\n    if (allAppendOptions.length > 0) {\n        webmidi.$select.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n    } else {\n        $noneAppendOption.attr('selected', true);\n    }\n    webmidi.$select.change();\n};\n\n// this allows for the deprecated webmidi.callBacks to still work for now.\nwebmidi.callBacks = miditools.callBacks;\n\n/**\n * Example smallest usage of the webmidi toolkit.  see testHTML/midiInRequire.html\n\n<html>\n<head>\n    <title>MIDI In/Jazz Test for Music21j</title>\n    <!-- for MSIE 10 on Windows 8 -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n    <script data-main=\"../src/music21.js\" src=\"../ext/require/require.js\"></script>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n\n    <script>\n    var s = \"\";\n    function displayStream(me) {\n        me.sendToMIDIjs();\n        if (me.noteOn) {\n            var m21n = me.music21Note();\n            if (s.length > 7) {\n                s.elements = s.elements.slice(1)\n            }\n            s.append(m21n);\n            var $svgDiv = $(\"#svgDiv\");\n            $svgDiv.empty();\n            var svgDiv = s.appendNewDOM($svgDiv);\n        }\n    }\n\n    require(['music21'], function () {\n        s = new music21.stream.Stream();\n        music21.webmidi.createSelector($(\"#putMidiSelectHere\"));\n        music21.miditools.callBacks.general = displayStream;\n    });\n\n\n    </script>\n</head>\n<body>\n<div>\nMIDI Input: <div id=\"putMidiSelectHere\" />\n</div>\n<div id=\"svgDiv\">\n</div>\n</body>\n</html>\n **/\n","// order below doesn't matter, but good to give a sense\n// of what will be needed by almost everyone, and then\n// alphabetical.\nimport * as exceptions21 from './music21/exceptions21.js';\nimport { debug } from './music21/debug.js';\nimport { common } from './music21/common.js';\nimport { prebase } from './music21/prebase.js';\nimport { base } from './music21/base.js';\n\nimport { articulations } from './music21/articulations.js';\nimport { audioRecording } from './music21/audioRecording.js';\nimport { audioSearch } from './music21/audioSearch.js';\nimport * as bar from './music21/bar.js';\nimport { beam } from './music21/beam.js';\nimport { chord } from './music21/chord.js';\nimport * as chordTables from './music21/chordTables.js';\nimport { clef } from './music21/clef.js';\nimport * as converter from './music21/converter.js';\nimport * as derivation from './music21/derivation.js';\nimport { duration } from './music21/duration.js';\nimport { dynamics } from './music21/dynamics.js';\nimport { expressions } from './music21/expressions.js';\nimport { figuredBass } from './music21/figuredBass.js';\nimport { fromPython } from './music21/fromPython.js';\nimport { harmony } from './music21/harmony.js';\nimport { instrument } from './music21/instrument.js';\nimport { interval } from './music21/interval.js';\nimport { key } from './music21/key.js';\nimport { keyboard } from './music21/keyboard.js';\nimport { layout } from './music21/layout.js';\nimport { meter } from './music21/meter.js';\nimport { miditools } from './music21/miditools.js';\nimport { musicxml } from './music21/musicxml.js';\nimport { note } from './music21/note.js';\nimport { pitch } from './music21/pitch.js';\nimport { renderOptions } from './music21/renderOptions.js';\nimport { roman } from './music21/roman.js';\nimport { scale } from './music21/scale.js';\nimport * as sites from './music21/sites.js';\nimport { stream } from './music21/stream.js';\nimport { tempo } from './music21/tempo.js';\nimport { tie } from './music21/tie.js';\nimport { tinyNotation } from './music21/tinyNotation.js';\nimport { voiceLeading } from './music21/voiceLeading.js';\nimport { vfShow } from './music21/vfShow.js';\nimport { webmidi } from './music21/webmidi.js';\n\nconst music21 = {\n    common,\n    debug,\n    prebase,\n    base,\n\n    articulations,\n    audioRecording,\n    audioSearch,\n    bar,\n    beam,\n    chord,\n    chordTables,\n    clef,\n    converter,\n    derivation,\n    dynamics,\n    duration,\n    exceptions21,\n    expressions,\n    figuredBass,\n    fromPython,\n    harmony,\n    instrument,\n    interval,\n    key,\n    keyboard,\n    layout,\n    meter,\n    miditools,\n    musicxml,\n    note,\n    pitch,\n    renderOptions,\n    roman,\n    scale,\n    sites,\n    stream,\n    tempo,\n    tie,\n    tinyNotation,\n    voiceLeading,\n    vfShow,\n    webmidi,\n};\n\nmusic21.Music21Object = base.Music21Object;\n\nexport default music21;\n"]}