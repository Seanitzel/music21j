{"version":3,"file":null,"sources":["../src/music21/exceptions21.js","../src/music21/debug.js","../src/music21/common.js","../src/music21/prebase.js","../src/music21/duration.js","../src/music21/sites.js","../src/music21/base.js","../src/music21/articulations.js","../src/music21/audioSearch.js","../src/music21/audioRecording.js","../src/music21/beam.js","../src/music21/pitch.js","../src/music21/interval.js","../src/music21/note.js","../src/music21/chordTables.js","../src/music21/chord.js","../src/music21/clef.js","../src/music21/dynamics.js","../src/music21/expressions.js","../src/music21/figuredBass.js","../src/music21/fromPython.js","../src/music21/scale.js","../src/music21/key.js","../src/music21/harmony.js","../src/music21/instrument.js","../src/music21/miditools.js","../src/music21/keyboard.js","../src/music21/meter.js","../src/music21/renderOptions.js","../src/music21/vfShow.js","../src/music21/stream.js","../src/music21/layout.js","../src/music21/tie.js","../src/music21/musicxml.js","../src/music21/roman.js","../src/music21/tempo.js","../src/music21/tinyNotation.js","../src/music21/voiceLeading.js","../src/music21/webmidi.js","../src/loadModules.js","../tests/moduleTests/articulations.js","../tests/moduleTests/base.js","../tests/moduleTests/beam.js","../tests/moduleTests/chord.js","../tests/moduleTests/clef.js","../tests/moduleTests/common.js","../tests/moduleTests/duration.js","../tests/moduleTests/dynamics.js","../tests/moduleTests/figuredBass.js","../tests/moduleTests/interval.js","../tests/moduleTests/key.js","../tests/moduleTests/meter.js","../tests/moduleTests/note.js","../tests/moduleTests/pitch.js","../tests/moduleTests/prebase.js","../tests/moduleTests/roman.js","../tests/moduleTests/scale.js","../tests/moduleTests/sites.js","../tests/moduleTests/stream.js","../tests/moduleTests/tie.js","../tests/moduleTests/voiceLeading.js","../tests/loadAll.js"],"sourcesContent":["// not working properly...\n\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = new Error(message).stack;\n        }\n    }\n}\n\nexport class Music21Exception extends ExtendableError {}\n\nexport class StreamException extends Music21Exception {}\n","export const debug = false;\n","/**\n * common functions\n *\n * @exports music21/common\n */\n/**\n * functions that are useful everywhere...\n *\n * @namespace music21.common\n * @memberof music21\n */\nexport const common = {};\n\n/**\n * concept borrowed from Vex.Flow.Merge, though here the source can be undefined;\n * http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\n * recursive parts used in .clone()\n *\n * @function music21.common.merge\n * @param {object} destination - object to have attributes placed into\n * @param {object} source - object to take attributes from.\n * @memberof music21.common\n * @returns {object} destination\n */\ncommon.merge = function mergeRecursive(destination, source) {\n    if (source === undefined || source === null) {\n        return destination;\n    }\n    for (const p in source) {\n        if (!{}.hasOwnProperty.call(source, p)) {\n            continue;\n        }\n        try {\n            // Property in destination object set; update its value.\n            if (source[p].constructor === Object) {\n                destination[p] = mergeRecursive(destination[p], source[p]);\n            } else {\n                destination[p] = source[p];\n            }\n        } catch (e) {\n            // Property in destination object not set; create it and set its value.\n            destination[p] = source[p];\n        }\n    }\n    return destination;\n};\n\ncommon.range = function common_range(start, stop, step) {\n    if (step === undefined) {\n        step = 1;\n    }\n    if (stop === undefined) {\n        stop = start;\n        start = 0;\n    }\n\n    const count = Math.ceil((stop - start) / step);\n    return Array.apply(0, Array(count)).map((e, i) => i * step + start);\n};\n\n/**\n * Mix in another class into this class -- a simple form of multiple inheritance.\n * See articulations.Marcato for an example.\n *\n */\ncommon.mixin = function common_mixin(OtherParent, thisClassOrObject) {\n    let proto = Object.getPrototypeOf(OtherParent);\n    const classProto = Object.getPrototypeOf(thisClassOrObject);\n\n    while (proto) {\n        for (const key in Object.keys(proto)) {\n            if (!{}.hasOwnProperty.call(proto, key)) {\n                continue;\n            }\n            if (!(key in classProto)) {\n                classProto[key] = proto[key];\n            }\n        }\n        proto = Object.getPrototypeOf(proto);\n    }\n};\n\n/**\n * Aggregation -- closer to true multiple inheritance -- prefers last class's functions.  See\n * https://stackoverflow.com/questions/29879267/es6-class-multiple-inheritance\n *\n *  not currently used...\n */\n\ncommon.aggregation = (baseClass, ...mixins) => {\n    class base extends baseClass {\n        constructor(...args) {\n            super(...args);\n            mixins.forEach(mixin => {\n                copyProps(this, new mixin());\n            });\n        }\n    }\n    let copyProps = (target, source) => {\n        // this function copies all properties and symbols, filtering out some special ones\n        Object.getOwnPropertyNames(source)\n            .concat(Object.getOwnPropertySymbols(source))\n            .forEach(prop => {\n                if (\n                    !prop.match(\n                        /^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n                    )\n                ) {\n                    Object.defineProperty(\n                        target,\n                        prop,\n                        Object.getOwnPropertyDescriptor(source, prop)\n                    );\n                }\n            });\n    };\n    mixins.forEach(mixin => {\n        // outside contructor() to allow aggregation(A,B,C).staticFunction() to be called etc.\n        copyProps(base.prototype, mixin.prototype);\n        copyProps(base, mixin);\n    });\n    return base;\n};\n\n/**\n * posMod - return a modulo value that is not negative\n *\n * @param  {Int} a value\n * @param  {Int} b modulo\n * @return {Int}   a mod b between 0 and b - 1\n */\n\ncommon.posMod = function posMod(a, b) {\n    if (a === undefined || b === undefined) {\n        throw new Error('Modulo needs two numbers');\n    }\n    return (a % b + b) % b;\n};\n\n/**\n *\n * Returns the statistical mode (most commonly appearing element)\n * in a.\n *\n * In case of tie, returns the first element to reach the maximum\n * number of occurrences.\n *\n * @function music21.common.statisticalMode\n * @param {Array} a - an array to analyze\n * @returns {object} element with the highest frequency in a\n */\ncommon.statisticalMode = function statisticalMode(a) {\n    if (a.length === 0) {\n        return null;\n    }\n    const modeMap = {};\n    let maxEl = a[0];\n    let maxCount = 1;\n    for (let i = 0; i < a.length; i++) {\n        const el = a[i];\n        if (modeMap[el] == null) {\n            modeMap[el] = 0;\n        }\n        modeMap[el] += 1;\n        if (modeMap[el] > maxCount) {\n            maxEl = el;\n            maxCount = modeMap[el];\n        }\n    }\n    return maxEl;\n};\n\n/**\n * fromRoman - Convert a Roman numeral (upper or lower) to an int.\n *\n * @param  {string} num roman numeral representation of a number\n * @return {Int}     integer value of roman numeral;\n */\n\ncommon.fromRoman = function fromRoman(num) {\n    const inputRoman = num.toUpperCase();\n    const subtractionValues = [1, 10, 100];\n    const nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I'];\n    const ints = [1000, 500, 100, 50, 10, 5, 1];\n    const places = [];\n    for (const c of inputRoman) {\n        if (!nums.includes(c)) {\n            throw new Error(\n                'Value is not a valid roman numeral: ' + inputRoman\n            );\n        }\n    }\n    for (let i = 0; i < inputRoman.length; i++) {\n        const c = inputRoman[i];\n        let value = ints[nums.indexOf(c)];\n        if (i < inputRoman.length - 1) {\n            const nextValue = ints[nums.indexOf(inputRoman[i + 1])];\n            if (nextValue > value && subtractionValues.includes(value)) {\n                value *= -1;\n            }\n        }\n        places.push(value);\n    }\n    let summation = 0;\n    for (const n of places) {\n        summation += n;\n    }\n    return summation;\n};\n\n/**\n * toRoman - Convert a number from 1 to 3999 to a roman numeral\n *\n * @param  {Int} num number to convert\n * @return {string}     as roman numeral\n */\n\ncommon.toRoman = function toRoman(num) {\n    if (typeof num !== 'number') {\n        throw new Error('expected integer, got ' + typeof num);\n    }\n    if (num < 0 || num > 4000) {\n        throw new Error('Argument must be between 1 and 3999');\n    }\n    const ints = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const nums = [\n        'M',\n        'CM',\n        'D',\n        'CD',\n        'C',\n        'XC',\n        'L',\n        'XL',\n        'X',\n        'IX',\n        'V',\n        'IV',\n        'I',\n    ];\n    let result = '';\n    for (let i = 0; i < ints.length; i++) {\n        const count = Math.floor(num / ints[i]);\n        result += nums[i].repeat(count);\n        num -= ints[i] * count;\n    }\n    return result;\n};\n\n/**\n * Creates a DOMObject of an SVG figure using the correct `document.createElementNS` call.\n *\n * @function music21.common.makeSVGright\n * @param {string} [tag='svg'] - a tag, such as 'rect', 'circle', 'text', or 'svg'\n * @param {object} [attrs] - attributes to pass to the tag.\n * @memberof music21.common\n * @returns {DOMObject}\n */\ncommon.makeSVGright = function makeSVGright(tag='svg', attrs) {\n    // see http://stackoverflow.com/questions/3642035/jquerys-append-not-working-with-svg-element\n    // normal JQuery does not work.\n    if (attrs === undefined) {\n        attrs = {};\n    }\n\n    const el = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (const k in attrs) {\n        if (!{}.hasOwnProperty.call(attrs, k)) {\n            continue;\n        }\n        el.setAttribute(k, attrs[k]);\n    }\n    return el;\n};\n\n/**\n * Take a number such as 32 and return a string such as \"nd\"\n * (for \"32nd\") etc.\n *\n * @function music21.common.ordinalAbbreviation\n * @param {Int} value\n * @param {Boolean} [plural=false] - make plural (note that \"21st\" plural is \"21st\")\n * @return {string}\n */\ncommon.ordinalAbbreviation = function ordinalAbbreviation(value, plural) {\n    let post = '';\n    const valueHundreths = value % 100;\n    if (\n        valueHundreths === 11\n        || valueHundreths === 12\n        || valueHundreths === 13\n    ) {\n        post = 'th';\n    } else {\n        const valueMod = value % 10;\n        if (valueMod === 1) {\n            post = 'st';\n        } else if (valueMod === 2) {\n            post = 'nd';\n        } else if (valueMod === 3) {\n            post = 'rd';\n        } else {\n            post = 'th';\n        }\n    }\n    if (post !== 'st' && plural) {\n        post += 's';\n    }\n    return post;\n};\n\n/**\n * Find a rational number approximation of this floating point.\n *\n * @function music21.common.rationalize\n * @param {number} ql - number to rationalize\n * @param {number} [epsilon=0.001] - how close to get\n * @param {Int} [maxDenominator=50] - maximum denominator\n * @returns {object|undefined} {'numerator: numerator, 'denominator': denominator}\n */\ncommon.rationalize = function rationalize(ql, epsilon, maxDenominator) {\n    epsilon = epsilon || 0.001;\n    maxDenominator = maxDenominator || 50;\n\n    for (let i = 2; i < maxDenominator; i++) {\n        if (Math.abs(ql * i - Math.round(ql * i)) < epsilon) {\n            const numerator = Math.round(ql * i);\n            const denominator = i;\n            return { numerator, denominator };\n        }\n    }\n    return undefined;\n};\n\n/**\n * Change something that could be a string or number and might\n * end with \"px\" to a number.\n *\n * \"400px\" -> 400\n *\n * @function music21.common.stripPx\n * @param {Int|string} str -- string that might have 'px' at the end or not\n * @returns {Int} a number to use\n */\ncommon.stripPx = function stripPx(str) {\n    if (typeof str === 'string') {\n        const pxIndex = str.indexOf('px');\n        str = str.slice(0, pxIndex);\n        return parseInt(str);\n    } else {\n        return str;\n    }\n};\n\n/**\n * Find name in the query string (?name=value) and return value.\n *\n * @function music21.common.urlParam\n * @param {string} name - url parameter to find\n * @returns {string} may be \"\" if empty.\n */\ncommon.urlParam = function urlParam(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(location.search);\n    return results == null\n        ? ''\n        : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\ncommon.arrayEquals = function arrayEquals(a1, a2) {\n    if (a1.length !== a2.length) {\n        return false;\n    }\n    for (let i = 0; i < a1.length; i++) {\n        if (a1[i] instanceof Array && a2[i] instanceof Array) {\n            if (!arrayEquals(a1[i], a2[i])) {\n                return false;\n            }\n        } else if (a1[i] !== a2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n\nconst _singletonCounter = {};\n_singletonCounter.value = 0;\n\nexport class SingletonCounter {\n    call() {\n        const post = _singletonCounter.value;\n        _singletonCounter.value += 1;\n        return post;\n    }\n}\ncommon.SingletonCounter = SingletonCounter;\n\n/**\n * runs a callback with either \"visible\" or \"hidden\" as the argument anytime the\n * window or document state changes.\n *\n * Depending on the browser, may be called multiple times with the same argument\n * for a single event.  For instance, Safari calls once on losing focus completely\n * but twice for a tab change.\n *\n * @function music21.common.setWindowVisibilityWatcher\n * @param {function} callback\n */\ncommon.setWindowVisibilityWatcher = function setWindowVisibilityWatcher(\n    callback\n) {\n    let hidden = 'hidden';\n\n    // Standards:\n    if (hidden in document) {\n        document.addEventListener('visibilitychange', windowFocusChanged);\n    } else if ('mozHidden' in document) {\n        hidden = 'mozHidden';\n        document.addEventListener('mozvisibilitychange', windowFocusChanged);\n    } else if ('webkitHidden' in document) {\n        hidden = 'webkitHidden';\n        document.addEventListener('webkitvisibilitychange', windowFocusChanged);\n    } else if ('msHidden' in document) {\n        hidden = 'msHidden';\n        document.addEventListener('msvisibilitychange', windowFocusChanged);\n    } else if ('onfocusin' in document) {\n        // IE 9 and lower:\n        document.onfocusin = document.onfocusout = windowFocusChanged;\n    }\n\n    // Also catch window... -- get two calls for a tab shift, but one for window losing focus\n    window.onpageshow = window.onpagehide = window.onfocus = window.onblur = windowFocusChanged;\n\n    function windowFocusChanged(evt) {\n        const v = 'visible';\n        const h = 'hidden';\n        const evtMap = {\n            focus: v,\n            focusin: v,\n            pageshow: v,\n            blur: h,\n            focusout: h,\n            pagehide: h,\n        };\n\n        evt = evt || window.event;\n        let callbackState = '';\n        if (evt.type in evtMap) {\n            callbackState = evtMap[evt.type];\n        } else {\n            callbackState = this[hidden] ? 'hidden' : 'visible';\n        }\n        callback(callbackState, evt);\n    }\n    // set the initial state\n    const initialState\n        = document.visibilityState === 'visible' ? 'focus' : 'blur';\n    const initialStateEvent = { type: initialState };\n    windowFocusChanged(initialStateEvent);\n};\n\ncommon.urls = {\n    css: '/css',\n    webResources: '/webResources',\n    midiPlayer: '/webResources/midiPlayer',\n    soundfontUrl: '/src/ext/soundfonts/FluidR3_GM/',\n};\n\nexport default common;\n","/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit. See the {@link music21.prebase} namespace.\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n *\n * @exports music21/prebase\n */\n/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit\n *\n * @namespace music21.prebase\n * @memberof music21\n */\nexport const prebase = {};\n/**\n * Class for pseudo-m21 objects to inherit from. The most important attributes that nearly\n * everything in music21 should inherit from are given below.\n *\n * @class ProtoM21Object\n * @memberof music21.prebase\n * @property {Array<string>} classes - An Array of strings of classes that the object belongs to (default ['ProtoM21Object'])\n * @property {Boolean} isProtoM21Object - Does this object descend from {@link music21.prebase.ProtoM21Object}: obviously true.\n * @property {Boolean} isMusic21Object - Does this object descend from {@link music21.base.Music21Object}; default false.\n */\nexport class ProtoM21Object {\n    constructor() {\n        this._storedClasses = undefined;\n        this.isProtoM21Object = true;\n        this.isMusic21Object = false;\n        this._cloneCallbacks = {};\n    }\n\n    get classes() {\n        if (this._storedClasses !== undefined) {\n            return this._storedClasses;\n        }\n        const classList = [];\n        let thisConstructor = this.constructor;\n        let maxLinks = 20;\n        while (\n            thisConstructor !== null\n            && thisConstructor !== undefined\n            && maxLinks\n        ) {\n            maxLinks -= 1;\n            if (thisConstructor.name === '') {\n                break;\n            }\n            classList.push(thisConstructor.name);\n            thisConstructor = Object.getPrototypeOf(thisConstructor);\n        }\n        classList.push('object');\n        this._storedClasses = classList;\n        return classList;\n    }\n\n    /**\n     * Makes (as much as possible) a complete duplicate copy of the object called with .clone()\n     *\n     * Works similarly to Python's copy.deepcopy().\n     *\n     * Every ProtoM21Object has a `._cloneCallbacks` object which maps `{attribute: callbackFunction}`\n     * to handle custom clone cases.  See, for instance, {@link music21.base.Music21Object} which\n     * uses a custom callback to NOT clone the `.activeSite` attribute.\n     *\n     * @returns {object}\n     * @memberof music21.prebase.ProtoM21Object\n     * @example\n     * var n1 = new music21.note.Note(\"C#\");\n     * n1.duration.quarterLength = 4;\n     * var n2 = n1.clone();\n     * n2.duration.quarterLength == 4; // true\n     * n2 === n1; // false\n     */\n    clone(deep = true) {\n        if (!deep) {\n            return Object.assign(\n                Object.create(Object.getPrototypeOf(this)),\n                this\n            );\n        }\n\n        const ret = new this.constructor();\n\n        // todo: do Arrays work?\n        for (const key in this) {\n            // not that we ONLY copy the keys in Ret -- it's easier that way.\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else {\n                    // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof this[key] === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (\n                typeof this[key] === 'object'\n                && this[key] !== null\n                && this[key].isProtoM21Object\n            ) {\n                // console.log('cloning ', key);\n                ret[key] = this[key].clone();\n            } else {\n                try {\n                    ret[key] = this[key];\n                    // music21.common.merge(ret[key], this[key]); // not really necessary?\n                } catch (e) {\n                    if (e instanceof TypeError) {\n                        console.log('typeError:', e, key);\n                        // do nothing\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Check to see if an object is of this class or subclass.\n     *\n     * @memberof music21.prebase.ProtoM21Object\n     * @param {(string|string[])} testClass - a class or Array of classes to test\n     * @returns {Boolean}\n     * @example\n     * var n = new music21.note.Note();\n     * n.isClassOrSubclass('Note'); // true\n     * n.isClassOrSubclass('Music21Object'); // true\n     * n.isClassOrSubclass(['Duration', 'NotRest']); // true // NotRest\n     */\n    isClassOrSubclass(testClass) {\n        if (testClass instanceof Array === false) {\n            testClass = [testClass];\n        }\n        for (let i = 0; i < testClass.length; i++) {\n            if (this.classes.includes(testClass[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nprebase.ProtoM21Object = ProtoM21Object;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/duration -- duration routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { prebase } from './prebase.js';\n/**\n * Duration module. See {@link music21.duration}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @exports music21/duration\n */\n/**\n * Module that holds **music21** classes and\n * tools for dealing with durations, especially\n * the {@link music21.duration.Duration} class.\n *\n * @namespace music21.duration\n * @memberof music21\n */\nexport const duration = {};\n\n/**\n * Object mapping int to name, as in `{1: 'whole'}` etc.\n *\n * @memberof music21.duration\n * @type {object}\n */\nduration.typeFromNumDict = {\n    1: 'whole',\n    2: 'half',\n    4: 'quarter',\n    8: 'eighth',\n    16: '16th',\n    32: '32nd',\n    64: '64th',\n    128: '128th',\n    256: '256th',\n    512: '512th',\n    1024: '1024th',\n    0: 'zero',\n    '0.5': 'breve',\n    '0.25': 'longa',\n    '0.125': 'maxima',\n    '0.0625': 'duplex-maxima',\n};\nduration.quarterTypeIndex = 6; // where is quarter in the following array.\nduration.ordinalTypeFromNum = [\n    'duplex-maxima',\n    'maxima',\n    'longa',\n    'breve',\n    'whole',\n    'half',\n    'quarter',\n    'eighth',\n    '16th',\n    '32nd',\n    '64th',\n    '128th',\n    '256th',\n    '512th',\n    '1024th',\n];\nduration.vexflowDurationArray = [\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    'w',\n    'h',\n    'q',\n    '8',\n    '16',\n    '32',\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n];\n\n/**\n * Duration object; found as the `.duration` attribute on {@link music21.base.Music21Object} instances\n * such as {@link music21.note.Note}\n *\n * @class Duration\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {(number|undefined)} ql - quarterLength (default 1.0)\n */\nexport class Duration extends prebase.ProtoM21Object {\n    constructor(ql) {\n        super();\n        this._quarterLength = 0.0;\n        this._dots = 0;\n        this._durationNumber = undefined;\n        this._type = 'zero';\n        this._tuplets = [];\n        if (typeof ql === 'string') {\n            this.type = ql;\n        } else if (ql !== undefined) {\n            this.quarterLength = ql;\n        }\n        this._cloneCallbacks._tuplets = this.cloneCallbacksTupletFunction;\n    }\n    /**\n     * Read or sets the number of dots on the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type Number\n     * @instance\n     * @default 0\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.dots === 0; // true\n     * d.dots = 1;\n     * d.quarterLength == 3; // true;\n     */\n    get dots() {\n        return this._dots;\n    }\n    set dots(numDots) {\n        this._dots = numDots;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Read or sets the quarterLength of the Duration\n     *\n     * Updates the type, dots, tuplets(?)\n     *\n     * @type Number\n     * @instance\n     * @default 1.0\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.quarterLength == 2.0; // true;\n     * d.quarterLength = 1.75;\n     * d.dots == 2; // true\n     * d.type == 'quarter'; // true\n     */\n    get quarterLength() {\n        return this._quarterLength;\n    }\n    set quarterLength(ql) {\n        if (ql === undefined) {\n            ql = 1.0;\n        }\n        this._quarterLength = ql;\n        this.updateFeaturesFromQl();\n    }\n    /**\n     * Read or sets the type of the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type String\n     * @instance\n     * @default 'quarter'\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.type == 'half; // true\n     * d.type = 'breve';\n     * d.quarterLength == 8.0; // true\n     * d.dots = 1;\n     * d.type = 'quarter'; // will not change dots\n     * d.quarterLength == 1.5; // true\n     */\n    get type() {\n        return this._type;\n    }\n    set type(typeIn) {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(typeIn);\n        if (typeNumber === -1) {\n            console.log('invalid type ' + typeIn);\n            throw new Music21Exception('invalid type ' + typeIn);\n        }\n        this._type = typeIn;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Reads the tuplet Array for the duration.\n     *\n     * The tuplet array should be considered Read Only.\n     * Use {@link music21.duration.Duration#appendTuplet} to\n     * add a tuplet (no way to remove yet)\n     *\n     * @type Array<music21.duration.Tuplet>\n     * @instance\n     * @default []\n     * @memberof music21.duration.Duration\n     */\n    get tuplets() {\n        return this._tuplets;\n    }\n    /**\n     * Read-only: the duration expressed for VexFlow\n     *\n     * @type String\n     * @instance\n     * @default 'd'\n     * @memberof music21.duration.Duration\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.vexflowDuration == 'h'; // true;\n     * d.dots = 2;\n     * d.vexflowDuration == 'hdd'; // true;\n     */\n    get vexflowDuration() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this.type);\n        let vd = duration.vexflowDurationArray[typeNumber];\n        if (this.dots > 0) {\n            for (let i = 0; i < this.dots; i++) {\n                vd += 'd'; // vexflow does not handle double dots .. or does it???\n            }\n        }\n        return vd;\n    }\n    cloneCallbacksTupletFunction(tupletKey, ret, obj) {\n        // make sure that tuplets clone properly\n        const newTuplets = [];\n        for (let i = 0; i < obj[tupletKey].length; i++) {\n            const newTuplet = obj[tupletKey][i].clone();\n            // console.log('cloning tuplets', obj[tupletKey][i], newTuplet);\n            newTuplets.push(newTuplet);\n        }\n        ret[tupletKey] = newTuplets;\n    }\n    _findDots(ql) {\n        if (ql === 0) {\n            return 0;\n        } // zero length stream probably;\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type);\n        const powerOfTwo = Math.pow(2, duration.quarterTypeIndex - typeNumber);\n        // alert(undottedQL * 1.5 + \" \" + ql)\n        // console.log('find dots called on ql: ', ql, typeNumber, powerOfTwo);\n        for (let dotsNum = 0; dotsNum <= 4; dotsNum++) {\n            const dotMultiplier\n                = (Math.pow(2, dotsNum) - 1.0) / Math.pow(2, dotsNum);\n            const durationMultiplier = 1 + dotMultiplier;\n            if (Math.abs(powerOfTwo * durationMultiplier - ql) < 0.0001) {\n                return dotsNum;\n            }\n        }\n        if (debug) {\n            console.log('no dots available for ql; probably a tuplet', ql);\n        }\n        return 0;\n    }\n    updateQlFromFeatures() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type); // must be set property\n        const undottedQuarterLength = Math.pow(\n            2,\n            duration.quarterTypeIndex - typeNumber\n        );\n        const dottedMultiplier\n            = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);\n        const unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        let tupletCorrectedQl = unTupletedQl;\n        this._tuplets.forEach(tuplet => {\n            tupletCorrectedQl *= tuplet.tupletMultiplier();\n        });\n        this._quarterLength = tupletCorrectedQl;\n    }\n    updateFeaturesFromQl() {\n        const ql = this._quarterLength;\n        this._tuplets = [];\n        if (ql === 0) {\n            this._type = 'zero';\n            this._dots = 0;\n            return;\n        }\n        const powerOfTwo = Math.floor(Math.log(ql + 0.00001) / Math.log(2));\n        let typeNumber = duration.quarterTypeIndex - powerOfTwo;\n        this._type = duration.ordinalTypeFromNum[typeNumber];\n        // console.log(this._findDots);\n        this._dots = this._findDots(ql);\n\n        const undottedQuarterLength = Math.pow(\n            2,\n            duration.quarterTypeIndex - typeNumber\n        );\n        const dottedMultiplier\n            = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);\n        let unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        if (unTupletedQl !== ql && ql !== 0) {\n            typeNumber -= 1;\n            this._type = duration.ordinalTypeFromNum[typeNumber]; // increase type: eighth to quarter etc.\n            unTupletedQl *= 2;\n            const tupletRatio = ql / unTupletedQl;\n            const ratioRat = common.rationalize(tupletRatio);\n            if (ratioRat === undefined) {\n                // probably a Stream with a length that is inexpressable;\n            } else {\n                const t = new duration.Tuplet(\n                    ratioRat.denominator,\n                    ratioRat.numerator,\n                    new duration.Duration(unTupletedQl)\n                );\n                this.appendTuplet(t, true); // skipUpdateQl\n            }\n            // console.log(ratioRat, ql, unTupletedQl);\n        }\n        return;\n    }\n    /**\n     * Add a tuplet to music21j\n     *\n     * @memberof music21.duration.Duration\n     * @param {music21.duration.Tuplet} newTuplet - tuplet to add to `.tuplets`\n     * @param {boolean} [skipUpdateQl=false] - update the quarterLength afterwards?\n     */\n    appendTuplet(newTuplet, skipUpdateQl) {\n        newTuplet.frozen = true;\n        this._tuplets.push(newTuplet);\n        if (skipUpdateQl !== true) {\n            this.updateQlFromFeatures();\n        }\n    }\n}\n\nduration.Duration = Duration;\n\n/**\n * Represents a Tuplet; found in {@link music21.duration.Duration#tuplets}\n *\n * @class Tuplet\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {number} numberNotesActual - numerator of the tuplet, default 3\n * @param {number} numberNotesNormal - denominator of the tuplet, default 2\n * @param {(music21.duration.Duration|number)} durationActual - duration or quarterLength of duration type, default music21.duration.Duration(0.5)\n * @param {(music21.duration.Duration|number)} durationNormal - unused; see music21p for description\n */\nexport class Tuplet extends prebase.ProtoM21Object {\n    constructor(\n        numberNotesActual,\n        numberNotesNormal,\n        durationActual,\n        durationNormal\n    ) {\n        super();\n        this.numberNotesActual = numberNotesActual || 3;\n        this.numberNotesNormal = numberNotesNormal || 2;\n        this.durationActual = durationActual || new duration.Duration(0.5);\n        if (typeof this.durationActual === 'number') {\n            this.durationActual = new duration.Duration(this.durationActual);\n        }\n        this.durationNormal = durationNormal || this.durationActual;\n\n        this.frozen = false;\n        this.type = undefined;\n        /**\n         * Show a bracket above the tuplet\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {Boolean} bracket\n         * @default true\n         */\n        this.bracket = true;\n        /**\n         * Bracket placement. Options are `above` or `below`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} placement\n         * @default 'above'\n         */\n        this.placement = 'above';\n\n        /**\n         * What to show above the Tuplet. Options are `number`, `type`, or (string) `none`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} tupletActualShow\n         * @default 'number'\n         */\n        this.tupletActualShow = 'number';\n        this.tupletNormalShow = undefined; // undefined, 'ratio' for ratios, 'type' for ratioed notes (does not work)\n    }\n    /**\n     * A nice name for the tuplet.\n     *\n     * @type String\n     * @instance\n     * @readonly\n     * @memberof music21.duration.Tuplet\n     */\n    get fullName() {\n        // actual is what is presented to viewer\n        const numActual = this.numberNotesActual;\n        const numNormal = this.numberNotesNormal;\n\n        if (numActual === 3 && numNormal === 2) {\n            return 'Triplet';\n        } else if (numActual === 5 && (numNormal === 4 || numNormal === 2)) {\n            return 'Quintuplet';\n        } else if (numActual === 6 && numNormal === 4) {\n            return 'Sextuplet';\n        }\n        const ordStr = common.ordinalAbbreviation(numNormal, true); // plural\n        return (\n            'Tuplet of '\n            + numActual.toString()\n            + '/'\n            + numNormal.toString()\n            + ordStr\n        );\n    }\n    /**\n     * Set both durationActual and durationNormal for the tuplet.\n     *\n     * @memberof music21.duration.Tuplet\n     * @param {string} type - a duration type, such as `half`, `quarter`\n     * @returns {music21.duration.Duration} A converted {@link music21.duration.Duration} matching `type`\n     */\n    setDurationType(type) {\n        if (this.frozen === true) {\n            throw new Music21Exception(\n                'A frozen tuplet (or one attached to a duration) is immutable'\n            );\n        }\n        this.durationActual = new duration.Duration(type);\n        this.durationNormal = this.durationActual;\n        return this.durationActual;\n    }\n    /**\n     * Sets the tuplet ratio.\n     *\n     * @memberof music21.duration.Tuplet\n     * @param {Number} actual - number of notes in actual (e.g., 3)\n     * @param {Number} normal - number of notes in normal (e.g., 2)\n     * @returns {undefined}\n     */\n    setRatio(actual, normal) {\n        if (this.frozen === true) {\n            throw new Music21Exception(\n                'A frozen tuplet (or one attached to a duration) is immutable'\n            );\n        }\n        this.numberNotesActual = actual || 3;\n        this.numberNotesNormal = normal || 2;\n    }\n    /**\n     * Get the quarterLength corresponding to the total length that\n     * the completed tuplet (i.e., 3 notes in a triplet) would occupy.\n     *\n     * @memberof music21.duration.Tuplet\n     * @returns {Number} A quarter length.\n     */\n    totalTupletLength() {\n        return this.numberNotesNormal * this.durationNormal.quarterLength;\n    }\n    /**\n     * The amount by which each quarter length is multiplied to get\n     * the tuplet. For instance, in a normal triplet, this is 0.666\n     *\n     * @memberof music21.duration.Tuplet\n     * @returns {Number} A float of the multiplier\n     */\n    tupletMultiplier() {\n        const lengthActual = this.durationActual.quarterLength;\n        return (\n            this.totalTupletLength() / (this.numberNotesActual * lengthActual)\n        );\n    }\n}\nduration.Tuplet = Tuplet;\n","/**\n * Objects for keeping track of relationships among Music21Objects. See {@link music21.sites} namespace\n *\n * Copyright 2017, Michael Scott Cuthbert and cuthbertLab\n * License: BSD\n */\n\nimport { common } from './common.js';\nimport { Music21Exception } from './exceptions21';\n\n/**\n * @namespace music21.sites\n * @memberof music21\n * @requires music21/common\n */\nexport const sites = {};\n\nexport class SitesException extends Music21Exception {}\nsites.SitesException = SitesException;\n\nexport class SiteRef {\n    constructor() {\n        this.isDead = false;\n        this.classString = undefined;\n        this.globalSiteIndex = false;\n        this.siteIndex = undefined;\n        this.siteWeakref = new WeakMap();\n        this.siteWeakref.ref = undefined;\n    }\n    get site() {\n        return this.siteWeakref.ref;\n    }\n\n    set site(newSite) {\n        this.siteWeakref.ref = newSite;\n    }\n}\nsites.SiteRef = SiteRef;\n\nconst _NoneSiteRef = new SiteRef();\n_NoneSiteRef.globalSiteIndex = -2;\n_NoneSiteRef.siteIndex = -2;\n\nconst _singletonCounter = new common.SingletonCounter();\n\nconst GLOBAL_SITE_STATE_DICT = new WeakMap();\n\nsites.getId = function getId(obj) {\n    if (!GLOBAL_SITE_STATE_DICT.has(obj)) {\n        const newId = _singletonCounter.call();\n        GLOBAL_SITE_STATE_DICT.set(obj, newId);\n    }\n    return GLOBAL_SITE_STATE_DICT.get(obj);\n};\n\nexport class Sites {\n    constructor() {\n        this.siteDict = new Map();\n        this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);\n        this._siteIndex = 0;\n        this._lastID = -1;\n    }\n\n    get length() {\n        return this.siteDict.size;\n    }\n    includes(checkSite) {\n        for (const [unused_key, siteRef] of this.siteDict) {\n            if (siteRef.site === checkSite) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _keysByTime(newFirst = true) {\n        const post = [];\n        for (const [key, siteRef] of this.siteDict) {\n            const keyVal = [siteRef.siteIndex, key];\n            post.push(keyVal);\n        }\n        post.sort();\n        if (newFirst) {\n            post.reverse();\n        }\n        return post.map(innerList => innerList[1]);\n    }\n\n    add(obj, idKey, classString) {\n        if (idKey === undefined && obj !== undefined) {\n            idKey = sites.getId(obj);\n        }\n        let updateNotAdd = false;\n        if (this.siteDict.has(idKey)) {\n            const tempSiteRef = this.siteDict.get(idKey);\n            if (!tempSiteRef.isDead && tempSiteRef.site !== undefined) {\n                updateNotAdd = true;\n            }\n        }\n        if (obj !== undefined && classString === undefined) {\n            classString = obj.classes[0];\n        }\n\n        let siteRef;\n        if (updateNotAdd) {\n            siteRef = this.siteDict.get(idKey);\n            siteRef.isDead = false;\n        } else {\n            siteRef = new SiteRef();\n        }\n\n        siteRef.site = obj; // stores a weakRef;\n        siteRef.classString = classString;\n        siteRef.siteIndex = this._siteIndex;\n        this._siteIndex += 1;\n        siteRef.globalSiteIndex = _singletonCounter.call();\n\n        if (!updateNotAdd) {\n            this.siteDict.set(idKey, siteRef);\n        }\n    }\n\n    remove(obj) {\n        const idKey = sites.getId(obj);\n        if (idKey === undefined) {\n            return false;\n        }\n        return this.siteDict.delete(idKey);\n    }\n    \n    clear() {\n        this.siteDict = new Map();\n        this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);\n        this._lastID = -1;\n    }\n\n    * yieldSites(\n        sortByCreationTime = false,\n        priorityTarget,\n        excludeNone = false\n    ) {\n        let keyRepository;\n        if (sortByCreationTime === true) {\n            keyRepository = this._keysByTime(false);\n        } else if (sortByCreationTime === 'reverse') {\n            keyRepository = this._keysByTime(true);\n        } else {\n            keyRepository = Array.from(this.siteDict.keys());\n        }\n        if (priorityTarget !== undefined) {\n            const priorityId = sites.getId(priorityTarget);\n            if (keyRepository.includes(priorityId)) {\n                keyRepository.splice(\n                    0,\n                    0,\n                    keyRepository.pop(keyRepository.indexOf(priorityId))\n                );\n            }\n        }\n        for (const key of keyRepository) {\n            const siteRef = this.siteDict.get(key);\n            if (siteRef === _NoneSiteRef) {\n                if (!excludeNone) {\n                    yield siteRef.site;\n                }\n            } else {\n                const obj = siteRef.site;\n                if (obj === undefined) {\n                    siteRef.isDead = true;\n                } else {\n                    yield obj;\n                }\n            }\n        }\n    }\n\n    get(sortByCreationTime = false, priorityTarget, excludeNone = false) {\n        const post = Array.from(\n            this.yieldSites(sortByCreationTime, priorityTarget, excludeNone)\n        );\n\n        // we do this resorting again, because the priority target might not match id and we\n        // want to be extra safe.  If you want fast, use .yieldSites\n        if (priorityTarget !== undefined) {\n            if (post.includes(priorityTarget)) {\n                post.splice(0, 0, post.pop(post.indexOf(priorityTarget)));\n            }\n        }\n        return post;\n    }\n    getAttrByName(attrName) {\n        for (const obj of this.yieldSites('reverse')) {\n            if (obj === undefined) {\n                continue;\n            }\n            if (attrName in obj) {\n                return obj[attrName];\n            }\n        }\n        return undefined;\n    }\n\n    getObjByClass(className, options) {\n        const params = {\n            callerFirst: this,\n            sortByCreationTime: false,\n            priorityTarget: undefined,\n            getElementMethod: 'getElementAtOrBefore',\n            memo: {},\n        };\n        common.merge(params, options);\n        const memo = params.memo;\n        let post;\n        const objs = Array.from(\n            this.yieldSites(\n                params.sortByCreationTime,\n                params.priorityTarget,\n                true // excludeNone\n            )\n        );\n        const classNameIsStr = typeof className === 'string';\n        for (const obj of objs) {\n            if (classNameIsStr) {\n                if (obj.classes.includes(className)) {\n                    post = obj;\n                    break;\n                }\n            } else if (obj instanceof className) {\n                post = obj;\n                break;\n            }\n        }\n        if (post !== undefined) {\n            return post;\n        }\n        for (const obj of objs) {\n            // TODO: check inside object... perhaps should not be done in m21p\n            const objId = sites.getId(obj);\n            if (!(objId in memo)) {\n                memo[objId] = obj;\n            }\n            post = obj.getContextByClass(className, params);\n            if (post !== undefined) {\n                break;\n            }\n        }\n        return post;\n    }\n}\nsites.Sites = Sites;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/base -- objects in base in music21p routines\n *\n * does not load the other modules, music21/moduleLoader.js does that.\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\nimport { duration } from './duration.js';\nimport { prebase } from './prebase.js';\nimport { sites } from './sites.js';\n\n/**\n * module for Music21Objects, see {@link music21.base}\n *\n * @requires music21/common\n * @requires music21/duration\n * @requires music21/prebase\n * @requires music21/sites\n * @exports music21/base\n */\n/**\n * Module for Music21Objects.  Does not load other modules, see {@link music21.moduleLoader}\n * for this functionality.\n *\n * @namespace music21.base\n * @memberof music21\n */\nexport const base = {};\n\n/**\n * Base class for any object that can be placed in a {@link music21.stream.Stream}.\n *\n * @class Music21Object\n * @memberof music21.base\n * @extends music21.prebase.ProtoM21Object\n * @property {object} activeSite - hardlink to a {@link music21.stream.Stream} containing the element.\n * @property {number} classSortOrder - Default sort order for this class (default 20; override in other classes). Lower numbered objects will sort before other objects in the staff if priority and offset are the same.\n * @property {music21.duration.Duration} duration - the duration (object) for the element. (can be set with a quarterLength also)\n * @property {Array} groups - An Array of strings representing group (equivalent to css classes) to assign to the object. (default [])\n * @property {boolean} isMusic21Object - true\n * @property {boolean} isStream - false\n * @property {number} offset - offset from the beginning of the stream (in quarterLength)\n * @property {number} priority - The priority (lower = earlier or more left) for elements at the same offset. (default 0)\n */\nexport class Music21Object extends prebase.ProtoM21Object {\n    constructor(keywords) {\n        super();\n        this.classSortOrder = 20; // default;\n\n        this.activeSite = undefined;\n        this.offset = 0; // for now\n        this._naiveOffset = 0;\n        // this._activeSite = undefined;\n        this._activeSiteStoredOffset = undefined;\n\n        // this._derivation = undefined;\n        // this._style = undefined;\n        // this._editorial = undefined;\n\n        this._duration = new duration.Duration();\n\n        this._priority = 0; // default;\n\n        // this.id = sites.getId(this);\n        this.groups = [];\n        // groups\n        this.sites = new sites.Sites();\n\n        this.isMusic21Object = true;\n        this.isStream = false;\n\n        this.groups = []; // custom object in m21p\n        // this.sites, this.activeSites, this.offset -- not yet...\n        // beat, measureNumber, etc.\n        // lots to do...\n        this._cloneCallbacks.activeSite = function Music21Object_cloneCallbacks_activeSite(\n            keyName,\n            newObj,\n            self\n        ) {\n            newObj[keyName] = undefined;\n        };\n        this._cloneCallbacks.sites = function Music21Object_cloneCallbacks_sites(\n            keyName,\n            newObj,\n            self\n        ) {\n            newObj[keyName] = new sites.Sites();\n        };\n    }\n    get priority() {\n        return this._priority;\n    }\n    set priority(p) {\n        this._priority = p;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(newDuration) {\n        if (typeof newDuration === 'object') {\n            this._duration = newDuration;\n            // common errors below...\n        } else if (typeof newDuration === 'number') {\n            this._duration.quarterLength = newDuration;\n        } else if (typeof newDuration === 'string') {\n            this._duration.type = newDuration;\n        }\n    }\n    get quarterLength() {\n        return this.duration.quarterLength;\n    }\n    set quarterLength(ql) {\n        this.duration.quarterLength = ql;\n    }\n    /**\n     * Return the offset of this element in a given site -- use .offset if you are sure that\n     * site === activeSite.\n     *\n     * Does not change activeSite or .offset\n     *\n     * @memberof music21.base.Music21Object\n     * @param {music21.stream.Stream} site\n     * @returns Number|undefined\n     */\n    getOffsetBySite(site, stringReturns = false) {\n        if (site === undefined) {\n            return this._naiveOffset;\n        }\n        return site.elementOffset(this, stringReturns);\n    }\n\n    /**\n     * setOffsetBySite - sets the offset for a given Stream\n     *\n     * @memberof music21.base.Music21Object\n     * @param  {music21.stream.Stream} site  Stream object\n     * @param  {number} value offset\n     */\n\n    setOffsetBySite(site, value) {\n        if (site !== undefined) {\n            site.setElementOffset(this, value);\n        } else {\n            this._naiveOffset = value;\n        }\n    }\n\n    // ---------- Contexts -------------\n\n    getContextByClass(className, options) {\n        const payloadExtractor = function payloadExtractor(\n            useSite,\n            flatten,\n            positionStart,\n            getElementMethod,\n            classList\n        ) {\n            // this should all be done as a tree...\n            // do not use .flat or .semiFlat so as not\n            // to create new sites.\n\n            // VERY HACKY...\n            let lastElement;\n            for (let i = 0; i < useSite.length; i++) {\n                const indexOffset = useSite._elementOffsets[i];\n                const thisElement = useSite._elements[i];\n                const matchClass = thisElement.isClassOrSubclass(classList);\n                if (flatten === false && !matchClass) {\n                    continue;\n                } else if (!thisElement.isStream && !matchClass) {\n                    continue;\n                }\n                // is a stream or an element of the appropriate class...\n                // first check normal elements\n                if (\n                    getElementMethod.includes('Before')\n                    && indexOffset >= positionStart\n                ) {\n                    if (\n                        getElementMethod.includes('At')\n                        && lastElement === undefined\n                    ) {\n                        lastElement = thisElement;\n                    } else if (matchClass) {\n                        return lastElement;\n                    }\n                } else {\n                    lastElement = thisElement;\n                }\n                if (\n                    getElementMethod.includes('After')\n                    && indexOffset > positionStart\n                    && matchClass\n                ) {\n                    return thisElement;\n                }\n                // now cleck stream... already filtered out flatten == false;\n                if (thisElement.isStream) {\n                    const potentialElement = payloadExtractor(\n                        thisElement,\n                        flatten,\n                        positionStart + indexOffset,\n                        getElementMethod,\n                        classList\n                    );\n                    if (potentialElement !== undefined) {\n                        return potentialElement;\n                    }\n                }\n            }\n            return undefined;\n        };\n\n        const params = {\n            getElementMethod: 'getElementAtOrBefore',\n            sortByCreationTime: false,\n        };\n        common.merge(params, options);\n\n        const getElementMethod = params.getElementMethod;\n        const sortByCreationTime = params.sortByCreationTime;\n\n        if (className !== undefined && !(className instanceof Array)) {\n            className = [className];\n        }\n        if (\n            getElementMethod.includes('At')\n            && this.isClassOrSubclass(className)\n        ) {\n            return this;\n        }\n\n        for (const [site, positionStart, searchType] of this.contextSites({\n            returnSortTuples: true,\n            sortByCreationTime,\n        })) {\n            if (\n                getElementMethod.includes('At')\n                && site.isClassOrSubclass(className)\n            ) {\n                return site;\n            }\n\n            if (\n                searchType === 'elementsOnly'\n                || searchType === 'elementsFirst'\n            ) {\n                const contextEl = payloadExtractor(\n                    site,\n                    false,\n                    positionStart,\n                    getElementMethod,\n                    className\n                );\n                if (contextEl !== undefined) {\n                    contextEl.activeSite = site;\n                    return contextEl;\n                }\n            } else if (searchType !== 'elementsOnly') {\n                if (\n                    getElementMethod.includes('After')\n                    && (className === undefined\n                        || site.isClassOrSubclass(className))\n                ) {\n                    if (\n                        !getElementMethod.includes('NotSelf')\n                        && this !== site\n                    ) {\n                        return site;\n                    }\n                }\n                const contextEl = payloadExtractor(\n                    site,\n                    'semiFlat',\n                    positionStart,\n                    getElementMethod,\n                    className\n                );\n                if (contextEl !== undefined) {\n                    contextEl.activeSite = site;\n                    return contextEl;\n                }\n                if (\n                    getElementMethod.includes('Before')\n                    && (className === undefined\n                        || site.isClassOrSubclass(className))\n                ) {\n                    if (\n                        !getElementMethod.includes('NotSelf')\n                        || this !== site\n                    ) {\n                        return site;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    * contextSites(options) {\n        const params = {\n            callerFirst: undefined,\n            memo: [],\n            offsetAppend: 0.0,\n            sortByCreationTime: false,\n            priorityTarget: undefined,\n            returnSortTuples: false,\n            followDerivation: true,\n        };\n        common.merge(params, options);\n        const memo = params.memo;\n        if (params.callerFirst === undefined) {\n            params.callerFirst = this;\n            if (this.isStream && !(this in memo)) {\n                const recursionType = this.recursionType;\n                yield [this, 0.0, recursionType];\n            }\n            memo.push(this);\n        }\n\n        if (params.priorityTarget === undefined && !params.sortByCreationType) {\n            params.priorityTarget = this.activeSite;\n        }\n        // const topLevel = this;\n        for (const siteObj of this.sites.yieldSites(\n            params.sortByCreationTime,\n            params.priorityTarget,\n            true // excludeNone\n        )) {\n            if (memo.includes(siteObj)) {\n                continue;\n            }\n            if (siteObj.classes.includes('SpannerStorage')) {\n                continue;\n            }\n\n            // let offset = this.getOffsetBySite(siteObj);\n            // followDerivation;\n            const offsetInStream = siteObj.elementOffset(this);\n            const newOffset = offsetInStream + params.offsetAppend;\n            const positionInStream = newOffset;\n            const recursionType = siteObj.recursionType;\n            yield [siteObj, positionInStream, recursionType];\n            memo.push(siteObj);\n\n            const newParams = {\n                callerFirst: params.callerFirst,\n                memo,\n                offsetAppend: positionInStream, // .offset\n                returnSortTuples: true, // always!\n                sortByCreationTime: params.sortByCreationTime,\n            };\n            for (const [\n                topLevel,\n                inStreamPos,\n                recurType\n            ] of siteObj.contextSites(newParams)) {\n                const inStreamOffset = inStreamPos; // .offset;\n                // const hypotheticalPosition = inStreamOffset; // more complex w/ sortTuples\n\n                if (!memo.includes(topLevel)) {\n                    // if returnSortTuples...\n                    // else\n                    yield [topLevel, inStreamOffset, recurType];\n                    memo.push(topLevel);\n                }\n            }\n        }\n        // if followDerivation...\n    }\n}\n\nbase.Music21Object = Music21Object;\n","import * as Vex from 'vexflow';\n\nimport { common } from './common.js';\nimport { prebase } from './prebase.js';\n\n/**\n * articulations module. See {@link music21.articulations} namespace\n *\n */\n\n/**\n * @namespace music21.articulations\n * @memberof music21\n * @requires music21/prebase, Vexflow\n */\nexport const articulations = {};\n\n/**\n * Represents a single articulation, usually in the `.articulations` Array\n * on a {@link music21.note.Note} or something like that.\n *\n * @class Articulation\n * @memberof music21.articulations\n * @extends music21.prebase.ProtoM21Object\n * @property {string} name\n * @property {string} [placement='above']\n * @property {string} vexflowModifier - the string code to get this accidental in Vexflow\n * @property {number} [dynamicScale=1.0] - multiplier for the dynamic of a note that this is attached to\n * @property {number} [lengthScale=1.0] - multiplier for the length of a note that this is attached to.\n */\nexport class Articulation extends prebase.ProtoM21Object {\n    constructor() {\n        super();\n        this.name = undefined;\n        this.placement = 'above';\n        this.vexflowModifier = undefined;\n        this.setPosition = undefined;\n        this.dynamicScale = 1.0;\n        this.lengthScale = 1.0;\n    }\n\n    /**\n     * Generates a Vex.Flow.Articulation for this articulation.\n     *\n     * @memberof music21.articulations.Articulation\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfa = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfa.setPosition(this.setPosition);\n        }\n        return vfa;\n    }\n}\narticulations.Articulation = Articulation;\n/**\n * base class for articulations that change the length of a note...\n *\n * @class LengthArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class LengthArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'length-articulation';\n    }\n}\narticulations.LengthArticulation = LengthArticulation;\n\n/**\n * base class for articulations that change the dynamic of a note...\n *\n * @class DynamicArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class DynamicArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'dynamic-articulation';\n    }\n}\narticulations.DynamicArticulation = DynamicArticulation;\n\n/**\n * base class for articulations that change the pitch of a note...\n *\n * @class PitchArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class PitchArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'pitch-articulation';\n    }\n}\narticulations.PitchArticulation = PitchArticulation;\n\n/**\n * base class for articulations that change the timbre of a note...\n *\n * @class TimbreArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class TimbreArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'timbre-articulation';\n    }\n}\narticulations.TimbreArticulation = TimbreArticulation;\n\n/**\n * 50% louder than usual\n *\n * @class Accent\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n */\nexport class Accent extends DynamicArticulation {\n    constructor() {\n        super();\n        this.name = 'accent';\n        this.vexflowModifier = 'a>';\n        this.dynamicScale = 1.5;\n    }\n}\narticulations.Accent = Accent;\n\n/**\n * 100% louder than usual\n *\n * @class StrongAccent\n * @memberof music21.articulations\n * @extends music21.articulations.Accent\n */\nexport class StrongAccent extends Accent {\n    constructor() {\n        super();\n        this.name = 'strong accent';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 2.0;\n    }\n}\narticulations.StrongAccent = StrongAccent;\n\n/**\n * no playback for now.\n *\n * @class Staccato\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Staccato extends LengthArticulation {\n    constructor() {\n        super();\n        this.name = 'staccato';\n        this.vexflowModifier = 'a.';\n    }\n}\narticulations.Staccato = Staccato;\n\n/**\n * no playback for now.\n *\n * @class Staccatissimo\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Staccatissimo extends Staccato {\n    constructor() {\n        super();\n        this.name = 'staccatissimo';\n        this.vexflowModifier = 'av';\n    }\n}\narticulations.Staccatissimo = Staccatissimo;\n\n/**\n * no playback or display for now.\n *\n * @class Spiccato\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Spiccato extends Staccato {\n    constructor() {\n        super();\n        this.name = 'spiccato';\n        this.vexflowModifier = undefined;\n    }\n}\narticulations.Spiccato = Spiccato;\n\n/**\n * @class Marcato\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n * @extends music21.articulations.LengthArticulation\n */\nexport class Marcato extends DynamicArticulation {\n    constructor() {\n        super();\n        common.mixin(LengthArticulation, this);\n        this.name = 'marcato';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 1.7;\n    }\n}\narticulations.Marcato = Marcato;\n\n/**\n * @class Tenuto\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Tenuto extends LengthArticulation {\n    constructor() {\n        super();\n        this.name = 'tenuto';\n        this.vexflowModifier = 'a-';\n    }\n}\narticulations.Tenuto = Tenuto;\n","import MIDI from 'MIDI';\n\nimport { common } from './common.js';\n\n/**\n * audioSearch module. See {@link music21.audioSearch} namespace\n *\n * @exports music21/audioSearch\n */\n/**\n * @namespace music21.audioSearch\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n */\n\nexport const audioSearch = {};\n// functions based on the prototype created by Chris Wilson's MIT License version\n// and on Jordi Bartolome Guillen's audioSearch module for music21\n\naudioSearch.fftSize = 2048;\n\naudioSearch.AudioContextCaller\n    = window.AudioContext || window.webkitAudioContext;\naudioSearch._audioContext = null;\naudioSearch.animationFrameCallbackId = null;\n\nObject.defineProperties(audioSearch, {\n    audioContext: {\n        get: () => {\n            if (audioSearch._audioContext !== null) {\n                return audioSearch._audioContext;\n            } else {\n                // AudioContext should be a singleton, but MIDI reports loaded before it is!\n                if (\n                    MIDI !== undefined\n                    && MIDI.WebAudio !== undefined\n                    && MIDI.WebAudio.getContext() !== undefined\n                ) {\n                    window.globalAudioContext = MIDI.WebAudio.getContext();\n                } else if (typeof window.globalAudioContext === 'undefined') {\n                    window.globalAudioContext = new audioSearch.AudioContextCaller();\n                }\n                audioSearch._audioContext = window.globalAudioContext;\n                return audioSearch._audioContext;\n            }\n        },\n        set: ac => {\n            audioSearch._audioContext = ac;\n        },\n    },\n});\n\n/**\n *\n * @function music21.audioSearch.getUserMedia\n * @memberof music21.audioSearch\n * @param {object} dictionary - optional dictionary to fill\n * @param {function} callback - callback on success\n * @param {function} error - callback on error\n */\naudioSearch.getUserMedia = function getUserMedia(dictionary, callback, error) {\n    if (error === undefined) {\n        /* eslint no-alert: \"off\"*/\n        error = () => {\n            alert(\n                'navigator.getUserMedia either not defined (Safari, IE) or denied.'\n            );\n        };\n    }\n    if (callback === undefined) {\n        callback = mediaStream => {\n            audioSearch.userMediaStarted(mediaStream);\n        };\n    }\n    const n = navigator;\n    // need to polyfill navigator, or binding problems are hard...\n    n.getUserMedia\n        = n.getUserMedia\n        || n.webkitGetUserMedia\n        || n.mozGetUserMedia\n        || n.msGetUserMedia;\n\n    if (n.getUserMedia === undefined) {\n        error();\n    }\n    if (dictionary === undefined) {\n        dictionary = {\n            audio: {\n                mandatory: {},\n                optional: [],\n            },\n        };\n    }\n    n.getUserMedia(dictionary, callback, error);\n};\n\naudioSearch.sampleBuffer = null;\naudioSearch.currentAnalyser = null;\n\naudioSearch.userMediaStarted = function userMediaStarted(audioStream) {\n    /**\n     * This function which patches Safari requires some time to get started\n     * so we call it on object creation.\n     */\n    audioSearch.sampleBuffer = new Float32Array(audioSearch.fftSize / 2);\n    const mediaStreamSource = audioSearch.audioContext.createMediaStreamSource(\n        audioStream\n    );\n    const analyser = audioSearch.audioContext.createAnalyser();\n    analyser.fftSize = audioSearch.fftSize;\n    mediaStreamSource.connect(analyser);\n    audioSearch.currentAnalyser = analyser;\n    audioSearch.animateLoop();\n};\n\naudioSearch.minFrequency = 55;\naudioSearch.maxFrequency = 1050;\naudioSearch.animateLoop = function animateLoop(time) {\n    audioSearch.currentAnalyser.getFloatTimeDomainData(\n        audioSearch.sampleBuffer\n    );\n    // returns best frequency or -1\n    const frequencyDetected = audioSearch.autoCorrelate(\n        audioSearch.sampleBuffer,\n        audioSearch.audioContext.sampleRate,\n        audioSearch.minFrequency,\n        audioSearch.maxFrequency\n    );\n    const retValue = audioSearch.sampleCallback(frequencyDetected);\n    if (retValue !== -1) {\n        audioSearch.animationFrameCallbackId = window.requestAnimationFrame(\n            audioSearch.animateLoop\n        );\n    }\n};\n\naudioSearch.pitchSmoothingSize = 40;\naudioSearch.lastPitchClassesDetected = [];\naudioSearch.lastPitchesDetected = [];\naudioSearch.lastCentsDeviationsDetected = [];\n\naudioSearch.smoothPitchExtraction = function smoothPitchExtraction(frequency) {\n    if (frequency === -1) {\n        audioSearch.lastPitchClassesDetected.shift();\n        audioSearch.lastPitchesDetected.shift();\n        audioSearch.lastCentsDeviationsDetected.shift();\n    } else {\n        const [midiNum, centsOff] = audioSearch.midiNumDiffFromFrequency(\n            frequency\n        );\n        if (\n            audioSearch.lastPitchClassesDetected.length\n            > audioSearch.pitchSmoothingSize\n        ) {\n            audioSearch.lastPitchClassesDetected.shift();\n            audioSearch.lastPitchesDetected.shift();\n            audioSearch.lastCentsDeviationsDetected.shift();\n        }\n        audioSearch.lastPitchClassesDetected.push(midiNum % 12);\n        audioSearch.lastPitchesDetected.push(midiNum);\n        audioSearch.lastCentsDeviationsDetected.push(centsOff);\n    }\n    const mostCommonPitchClass = common.statisticalMode(\n        audioSearch.lastPitchClassesDetected\n    );\n    if (mostCommonPitchClass === null) {\n        return [-1, 0];\n    }\n    const pitchesMatchingClass = [];\n    const centsMatchingClass = [];\n    for (let i = 0; i < audioSearch.lastPitchClassesDetected.length; i++) {\n        if (audioSearch.lastPitchClassesDetected[i] === mostCommonPitchClass) {\n            pitchesMatchingClass.push(audioSearch.lastPitchesDetected[i]);\n            centsMatchingClass.push(audioSearch.lastCentsDeviationsDetected[i]);\n        }\n    }\n    const mostCommonPitch = common.statisticalMode(pitchesMatchingClass);\n\n    // find cents difference; weighing more recent samples more...\n    let totalSamplePoints = 0;\n    let totalSample = 0;\n    for (let j = 0; j < centsMatchingClass.length; j++) {\n        const weight = Math.pow(j, 2) + 1;\n        totalSample += weight * centsMatchingClass[j];\n        totalSamplePoints += weight;\n    }\n    const centsOff = Math.floor(totalSample / totalSamplePoints);\n    return [mostCommonPitch, centsOff];\n};\n\naudioSearch.sampleCallback = function sampleCallback(frequency) {\n    const [unused_midiNum, unused_centsOff] = audioSearch.smoothPitchExtraction(\n        frequency\n    );\n};\n\n// from Chris Wilson. Replace with Jordi's\naudioSearch.autoCorrelate = function autoCorrelate(\n    buf,\n    sampleRate,\n    minFrequency,\n    maxFrequency\n) {\n    const SIZE = buf.length;\n    const MAX_SAMPLES = Math.floor(SIZE / 2);\n    if (minFrequency === undefined) {\n        minFrequency = 0;\n    }\n    if (maxFrequency === undefined) {\n        maxFrequency = sampleRate;\n    }\n\n    let best_offset = -1;\n    let best_correlation = 0;\n    let rms = 0;\n    let foundGoodCorrelation = false;\n    const correlations = new Array(MAX_SAMPLES);\n\n    for (let i = 0; i < SIZE; i++) {\n        const val = buf[i];\n        rms += val * val;\n    }\n    rms = Math.sqrt(rms / SIZE);\n    if (rms < 0.01) {\n        return -1;\n    } // not enough signal\n\n    let lastCorrelation = 1;\n    for (let offset = 0; offset < MAX_SAMPLES; offset++) {\n        let correlation = 0;\n        const offsetFrequency = sampleRate / offset;\n        if (offsetFrequency < minFrequency) {\n            break;\n        }\n        if (offsetFrequency > maxFrequency) {\n            continue;\n        }\n\n        for (let i = 0; i < MAX_SAMPLES; i++) {\n            correlation += Math.abs(buf[i] - buf[i + offset]);\n        }\n        correlation = 1 - correlation / MAX_SAMPLES;\n        correlations[offset] = correlation; // store it, for the tweaking we need to do below.\n        if (correlation > 0.9 && correlation > lastCorrelation) {\n            foundGoodCorrelation = true;\n            if (correlation > best_correlation) {\n                best_correlation = correlation;\n                best_offset = offset;\n            }\n        } else if (foundGoodCorrelation) {\n            // short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.\n            // Now we need to tweak the offset - by interpolating between the values to the left and right of the\n            // best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -\n            // we need to do a curve fit on correlations[] around best_offset in order to better determine precise\n            // (anti-aliased) offset.\n\n            // we know best_offset >=1,\n            // since foundGoodCorrelation cannot go to true until the second pass (offset=1), and\n            // we can't drop into this clause until the following pass (else if).\n            const shift\n                = (correlations[best_offset + 1]\n                    - correlations[best_offset - 1])\n                / correlations[best_offset];\n            return sampleRate / (best_offset + 8 * shift);\n        }\n        lastCorrelation = correlation;\n    }\n    if (best_correlation > 0.01) {\n        // console.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\")\n        return sampleRate / best_offset;\n    }\n    return -1;\n    //  var best_frequency = sampleRate/best_offset;\n};\n\n/**\n *\n * @function midiNumDiffFromFrequency\n * @param {Number} frequency\n * @returns {Array<Int>} [miniNumber, centsOff]\n */\naudioSearch.midiNumDiffFromFrequency = function midiNumDiffFromFrequency(\n    frequency\n) {\n    const midiNumFloat = 12 * (Math.log(frequency / 440) / Math.log(2)) + 69;\n    const midiNum = Math.round(midiNumFloat);\n    const centsOff = Math.round(100 * (midiNumFloat - midiNum));\n    return [midiNum, centsOff];\n};\n","import { audioSearch } from './audioSearch.js';\n\n/**\n * Adopted from Matt Diamond's recorder.js code MIT License\n */\nexport class Recorder {\n    constructor(cfg) {\n        const config = cfg || {};\n        this.bufferLen = config.bufferLen || 4096;\n        this.config = config;\n        this.recording = false;\n        this.currCallback = undefined;\n        this.audioContext = audioSearch.audioContext;\n        this.frequencyCanvasInfo = {\n            id: 'frequencyAnalyser',\n            width: undefined,\n            height: undefined,\n            canvasContext: undefined,\n            animationFrameID: undefined,\n        };\n        this.waveformCanvasInfo = {\n            id: 'waveformCanvas',\n            width: undefined,\n            height: undefined,\n            canvasContext: undefined,\n        };\n        this.analyserNode = undefined;\n    }\n\n    /**\n     * Start here -- polyfills navigator, runs getUserMedia and then sends to audioStreamConnected\n     */\n    initAudio() {\n        this.polyfillNavigator();\n        navigator.getUserMedia(\n            {\n                audio: {\n                    mandatory: {\n                        googEchoCancellation: 'false',\n                        googAutoGainControl: 'false',\n                        googNoiseSuppression: 'false',\n                        googHighpassFilter: 'false',\n                        // 'echoCancellation': false,\n                        // 'autoGainControl': false,\n                        // 'noiseSuppression': false,\n                        // 'highpassFilter': false,\n                    },\n                    optional: [],\n                },\n            },\n            s => this.audioStreamConnected(s),\n            error => {\n                console.log('Error getting audio -- try on google Chrome?');\n                console.log(error);\n            }\n        );\n    }\n\n    /**\n     * After the user has given permission to record, this method is called.\n     * It creates a gain point, and then connects the input source to the gain.\n     * It connects an analyserNode (fftSize 2048) to the gain.\n     *\n     * It creates a second gain of 0.0 connected to the destination, so that\n     * we're not hearing what we're playing in in an infinite loop (SUCKS to turn this off...)\n     *\n     * And it calls this.connectSource on the inputPoint so that\n     * we can do something with all these wonderful inputs.\n     */\n    audioStreamConnected(stream) {\n        const inputPoint = this.audioContext.createGain();\n\n        // Create an AudioNode from the stream.\n        const audioInput = this.audioContext.createMediaStreamSource(stream);\n        audioInput.connect(inputPoint);\n\n        const analyserNode = this.audioContext.createAnalyser();\n        analyserNode.fftSize = 2048;\n        this.analyserNode = analyserNode;\n        inputPoint.connect(analyserNode);\n\n        this.connectSource(inputPoint);\n\n        const zeroGain = this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n        inputPoint.connect(zeroGain);\n        zeroGain.connect(this.audioContext.destination);\n    }\n\n    /**\n     * Creates a worker to receive and process all the messages asychronously.\n     */\n    connectSource(source) {\n        this.context = source.context;\n        this.setNode();\n\n        // create a Worker with inline code...\n        const workerBlob = new Blob(['(', recorderWorkerJs, ')()'], {\n            type: 'application/javascript',\n        });\n        const workerURL = URL.createObjectURL(workerBlob);\n        this.worker = new Worker(workerURL);\n        /**\n         * When worker sends a message, we just send it to the currentCallback...\n         */\n        this.worker.onmessage = e => {\n            const blob = e.data;\n            this.currCallback(blob);\n        };\n        URL.revokeObjectURL(workerURL);\n\n        this.worker.postMessage({\n            command: 'init',\n            config: {\n                sampleRate: this.context.sampleRate,\n            },\n        });\n\n        /**\n         * Whenever the ScriptProcessorNode receives enough audio to process\n         * (i.e., this.bufferLen stereo samples; default 4096), then it calls onaudioprocess\n         * which is set up to send the event's .getChannelData to the WebWorker via a\n         * postMessage.\n         *\n         * The 'record' command sends no message back.\n         */\n        this.node.onaudioprocess = e => {\n            if (!this.recording) {\n                return;\n            }\n            this.worker.postMessage({\n                command: 'record',\n                buffer: [\n                    e.inputBuffer.getChannelData(0),\n                    e.inputBuffer.getChannelData(1),\n                ],\n            });\n        };\n\n        source.connect(this.node);\n\n        /**\n         * polyfill for Chrome error.\n         *\n         * if the ScriptProcessorNode (this.node) is not connected to an output\n         * the \"onaudioprocess\" event is not triggered in Chrome.\n         */\n        this.node.connect(this.context.destination);\n    }\n\n    /**\n     * Creates a ScriptProcessorNode (preferably) to allow for direct audio processing.\n     *\n     * Sets it to this.node and returns it.\n     */\n    setNode() {\n        const numInputChannels = 2;\n        const numOutputChannels = 2;\n        if (!this.context.createScriptProcessor) {\n            this.node = this.context.createJavaScriptNode(\n                this.bufferLen,\n                numInputChannels,\n                numOutputChannels\n            );\n        } else {\n            this.node = this.context.createScriptProcessor(\n                this.bufferLen,\n                numInputChannels,\n                numOutputChannels\n            );\n        }\n        return this.node;\n    }\n\n    /**\n     * Configure from another source...\n     */\n    configure(cfg) {\n        for (const prop in cfg) {\n            if (Object.hasOwnProperty.call(cfg, prop)) {\n                this.config[prop] = cfg[prop];\n            }\n        }\n    }\n\n    record() {\n        this.recording = true;\n    }\n    stop() {\n        this.recording = false;\n    }\n    clear() {\n        this.worker.postMessage({ command: 'clear' });\n    }\n\n    /**\n     * Directly get the buffers from the worker and then call cb.\n     */\n    getBuffers(cb) {\n        this.currCallback = cb || this.config.callback;\n        this.worker.postMessage({ command: 'getBuffers' });\n    }\n\n    /**\n     * call exportWAV or exportMonoWAV on the worker, then call cb or (if undefined) setupDownload.\n     */\n    exportWAV(cb, type, isMono) {\n        let command = 'exportWAV';\n        if (isMono === true) {\n            // default false\n            command = 'exportMonoWAV';\n        }\n        this.currCallback = cb || this.config.callback;\n        type = type || this.config.type || 'audio/wav';\n        if (!this.currCallback) {\n            this.currCallback = blob => {\n                this.setupDownload(\n                    blob,\n                    'myRecording' + Date.now().toString() + '.wav'\n                );\n            };\n        }\n        this.worker.postMessage({\n            command,\n            type,\n        });\n    }\n\n    exportMonoWAV(cb, type) {\n        this.exportWAV(cb, type, true);\n    }\n\n    setupDownload(blob, filename, elementId) {\n        elementId = elementId || 'save';\n        const url = (window.URL || window.webkitURL).createObjectURL(blob);\n        const link = document.getElementById(elementId);\n        link.href = url;\n        link.download = filename || 'output.wav';\n    }\n\n    /**\n     * Polyfills for getUserMedia (requestAnimationFrame polyfills not needed.)\n     * As of 2016 September, only Edge support unprefixed.\n     */\n    polyfillNavigator() {\n        if (!navigator.getUserMedia) {\n            navigator.getUserMedia\n                = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        }\n        if (window.AnalyserNode && !window.AnalyserNode.prototype.getFloatTimeDomainData) {\n            const uint8 = new Uint8Array(2048);\n            window.AnalyserNode.prototype.getFloatTimeDomainData = function getFloatTimeDomainData(array) {\n                this.getByteTimeDomainData(uint8);\n                const imax = array.length;\n                for (let i = 0; i < imax; i++) {\n                    array[i] = (uint8[i] - 128) * 0.0078125;\n                }\n            };\n        }\n    }\n\n    updateAnalysers(time) {\n        if (!this.frequencyCanvasInfo.canvasContext) {\n            const canvas = document.getElementById(this.frequencyCanvasInfo.id);\n            if (!canvas) {\n                return;\n            }\n            this.frequencyCanvasInfo.width = canvas.width;\n            this.frequencyCanvasInfo.height = canvas.height;\n            this.frequencyCanvasInfo.canvasContext = canvas.getContext('2d');\n        }\n\n        // analyser draw code here\n        const SPACING = 3;\n        const BAR_WIDTH = 1;\n        const numBars = Math.round(this.frequencyCanvasInfo.width / SPACING);\n        const freqByteData = new Uint8Array(\n            this.analyserNode.frequencyBinCount\n        );\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        const canvasContext = this.frequencyCanvasInfo.canvasContext;\n        canvasContext.clearRect(\n            0,\n            0,\n            this.frequencyCanvasInfo.width,\n            this.frequencyCanvasInfo.height\n        );\n        canvasContext.fillStyle = '#F6D565';\n        canvasContext.lineCap = 'round';\n        const multiplier = this.analyserNode.frequencyBinCount / numBars;\n\n        // Draw rectangle for each frequency bin.\n        for (let i = 0; i < numBars; ++i) {\n            let magnitude = 0;\n            const offset = Math.floor(i * multiplier);\n            for (let j = 0; j < multiplier; j++) {\n                magnitude += freqByteData[offset + j];\n            }\n            magnitude\n                = magnitude\n                * (this.frequencyCanvasInfo.height / 256)\n                / multiplier;\n            canvasContext.fillStyle\n                = 'hsl( ' + Math.round(i * 360 / numBars) + ', 100%, 50%)';\n            canvasContext.fillRect(\n                i * SPACING,\n                this.frequencyCanvasInfo.height,\n                BAR_WIDTH,\n                -1 * magnitude\n            );\n        }\n\n        this.frequencyCanvasInfo.animationFrameID = window.requestAnimationFrame(\n            t => this.updateAnalysers(t)\n        );\n    }\n\n    drawWaveformCanvas(buffers) {\n        const data = buffers[0]; // one track of stereo recording.\n        if (!this.waveformCanvasInfo.context) {\n            const canvas = document.getElementById(this.waveformCanvasInfo.id);\n            if (!canvas) {\n                return;\n            }\n            this.waveformCanvasInfo.width = canvas.width;\n            this.waveformCanvasInfo.height = canvas.height;\n            this.waveformCanvasInfo.context = canvas.getContext('2d');\n        }\n        const context = this.waveformCanvasInfo.context;\n        const step = Math.ceil(data.length / this.waveformCanvasInfo.width);\n        const amp = this.waveformCanvasInfo.height / 2;\n        context.fillStyle = 'silver';\n        context.clearRect(\n            0,\n            0,\n            this.waveformCanvasInfo.width,\n            this.waveformCanvasInfo.height\n        );\n        for (let i = 0; i < this.waveformCanvasInfo.width; i++) {\n            let min = 1.0;\n            let max = -1.0;\n            for (let j = 0; j < step; j++) {\n                const datum = data[i * step + j];\n                if (datum < min) {\n                    min = datum;\n                }\n                if (datum > max) {\n                    max = datum;\n                }\n            }\n            context.fillRect(\n                i,\n                (1 + min) * amp,\n                1,\n                Math.max(1, (max - min) * amp)\n            );\n        }\n    }\n\n    /**\n     * set this as a callback from getBuffers.  Returns the source so that a stop() command\n     * is possible.\n     */\n    playBuffers(buffers) {\n        const channels = 2;\n        const numFrames = buffers[0].length;\n        const audioBuffer = this.context.createBuffer(\n            channels,\n            numFrames,\n            this.context.sampleRate\n        );\n        for (let channel = 0; channel < channels; channel++) {\n            const thisChannelBuffer = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < numFrames; i++) {\n                thisChannelBuffer[i] = buffers[channel][i];\n            }\n        }\n        const source = this.context.createBufferSource();\n        source.buffer = audioBuffer;\n        source.connect(this.context.destination);\n        source.start();\n        return source;\n    }\n}\n\n/**\n * This code does NOT go through babel, so no arrow functions, let, const, etc.\n */\nconst recorderWorkerJs = `function recorderWorkerJs() {\n    /**\n     *\n     *   Rewritten from Matt Diamond's recorderWorker -- MIT License\n     */\n    RecorderWorker = function RecorderWorker(parentContext) {\n            this.parent = parentContext;\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n            this.sampleRate = undefined;\n    };\n    RecorderWorker.prototype.onmessage = function onmessage(e) {\n            switch (e.data.command) {\n            case 'init':\n                this.init(e.data.config);\n                break;\n            case 'record':\n                this.record(e.data.buffer);\n                break;\n            case 'exportWAV':\n                this.exportWAV(e.data.type);\n                break;\n            case 'exportMonoWAV':\n                this.exportMonoWAV(e.data.type);\n                break;\n            case 'getBuffers':\n                this.getBuffers();\n                break;\n            case 'clear':\n                this.clear();\n                break;\n            default:\n                break;\n            }\n   };\n   RecorderWorker.prototype.postMessage = function postMessage(msg) {\n            this.parent.postMessage(msg);\n   };\n\n   RecorderWorker.prototype.init = function init(config) {\n            this.sampleRate = config.sampleRate;\n   };\n\n   RecorderWorker.prototype.record = function record(inputBuffer) {\n            var inputBufferL = inputBuffer[0];\n            var inputBufferR = inputBuffer[1];\n            this.recBuffersL.push(inputBufferL);\n            this.recBuffersR.push(inputBufferR);\n            this.recLength += inputBufferL.length;\n   };\n\n   RecorderWorker.prototype.exportWAV = function exportWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var bufferR = this.mergeBuffers(this.recBuffersR);\n            var interleaved = this.interleave(bufferL, bufferR);\n            var dataview = this.encodeWAV(interleaved);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.exportMonoWAV = function exportMonoWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var dataview = this.encodeWAV(bufferL);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.mergeBuffers = function mergeBuffers(recBuffers) {\n            var result = new Float32Array(this.recLength);\n            var offset = 0;\n            for (var i = 0; i < recBuffers.length; i++) {\n                result.set(recBuffers[i], offset);\n                offset += recBuffers[i].length;\n            }\n            return result;\n    };\n\n    RecorderWorker.prototype.getBuffers = function getBuffers() {\n            var buffers = [];\n            buffers.push(this.mergeBuffers(this.recBuffersL));\n            buffers.push(this.mergeBuffers(this.recBuffersR));\n            this.postMessage(buffers);\n        };\n\n    RecorderWorker.prototype.clear = function clear() {\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n        }\n\n    RecorderWorker.prototype.interleave = function interleave(inputL, inputR) {\n            var combinedLength = inputL.length + inputR.length;\n            var result = new Float32Array(combinedLength);\n\n            var index = 0;\n            var inputIndex = 0;\n\n            while (index < combinedLength) {\n                result[index++] = inputL[inputIndex];\n                result[index++] = inputR[inputIndex];\n                inputIndex++;\n            }\n            return result;\n        }\n    RecorderWorker.prototype.encodeWAV = function encodeWAV(samples, mono) {\n            var buffer = new ArrayBuffer(44 + (samples.length * 2));\n            var view = new DataView(buffer);\n\n            /* RIFF identifier */\n            writeString(view, 0, 'RIFF');\n\n            /* file length */\n            view.setUint32(4, 32 + samples.length * 2, true);\n\n            /* RIFF type */\n            writeString(view, 8, 'WAVE');\n\n            /* format chunk identifier */\n            writeString(view, 12, 'fmt ');\n\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n\n            /* sample format (raw) */\n            view.setUint16(20, 1, true);\n\n            /* channel count */\n            view.setUint16(22, mono ? 1 : 2, true);\n\n            /* sample rate */\n            view.setUint32(24, this.sampleRate, true);\n\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.sampleRate * 4, true);\n\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, 4, true);\n\n            /* bits per sample */\n            view.setUint16(34, 16, true);\n\n            /* data chunk identifier */\n            writeString(view, 36, 'data');\n\n            /* data chunk length */\n            view.setUint32(40, samples.length * 2, true);\n\n            floatTo16BitPCM(view, 44, samples);\n\n            return view;\n        }\n\n    function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n            var s = Math.max(-1, Math.min(1, input[i]));\n            output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n\n    function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    var recordWorker = new RecorderWorker(this);\n    this.onmessage = (function mainOnMessage(e) { recordWorker.onmessage(e) }).bind(this);\n}`;\n\nexport const audioRecording = { Recorder };\nexport default audioRecording;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/beam -- Beams and Beam class\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { prebase } from './prebase.js';\nimport { duration } from './duration.js';\n\n/**\n * Module holding beam materials. See {@link music21.beam} namespace.\n *\n * @exports music21/beam\n */\n/**\n * {@link music21.beam.Beam} and {music21.beam.Beams} objects\n *\n * @namespace music21.beam\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/duration\n */\nexport const beam = {};\n\nbeam.validBeamTypes = {\n    start: true,\n    stop: true,\n    continue: true,\n    partial: true,\n};\n\nbeam.beamableDurationTypes = [\n    duration.typeFromNumDict[8],\n    duration.typeFromNumDict[16], duration.typeFromNumDict[32],\n    duration.typeFromNumDict[64], duration.typeFromNumDict[128],\n    duration.typeFromNumDict[256],    \n];\n\n\n/**\n * Object representing a single beam (e.g., a 16th note that is beamed needs two)\n *\n * @class Beam\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - \"start\", \"stop\", \"continue\", \"partial\"\n * @param {string} direction - only needed for partial beams: \"left\" or \"right\"\n * @property {Int|undefined} number - which beam line does this refer to; 8th = 1, 16th = 2, etc.\n * @property {number|undefined} independentAngle - the angle of this beam if it is different than others (feathered beams)\n */\nexport class Beam extends prebase.ProtoM21Object {\n    constructor(type, direction) {\n        super();\n        this.type = type;\n        this.direction = direction;\n        this.independentAngle = undefined;\n        this.number = undefined;\n    }\n}\nbeam.Beam = Beam;\n/**\n * Object representing a collection of Beams\n *\n * @class Beams\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @property {Array<music21.beam.Beam>} beamsList - a list of Beam objects\n * @property {Boolean} [feathered=false] - is this a feathered beam.\n * @property {Int} length - length of beamsList\n */\nexport class Beams extends prebase.ProtoM21Object {\n    static naiveBeams(srcList) {\n        const beamsList = [];\n        for (const el of srcList) {\n            if (!beam.beamableDurationTypes.includes(el.duration.type)) {\n                beamsList.push(undefined);\n            } else if (el.isRest) {\n                beamsList.push(undefined);\n            } else {\n                const b = new beam.Beams();\n                b.fill(el.duration.type);\n                beamsList.push(b);\n            }\n        }\n        return beamsList;\n    }\n    \n    static removeSandwichedUnbeamables(beamsList) {\n        let beamLast;\n        let beamNext;\n        for (let i = 0; i < beamsList.length; i++) {\n            if (i !== beamsList.length - 1) {\n                beamNext = beamsList[i + 1];\n            } else {\n                beamNext = undefined;\n            }\n            if (beamLast === undefined && beamNext === undefined) {\n                beamsList[i] = undefined;\n            }\n            beamLast = beamsList[i];\n        }\n        return beamsList;\n    }\n    \n    static sanitizePartialBeams(beamsList) {\n        for (let i = 0; i < beamsList.length; i++) {\n            if (beamsList[i] === undefined) {\n                continue;\n            }\n            const allTypes = beamsList[i].getTypes();\n            if (!allTypes.includes('start') \n                    && !allTypes.includes('stop')\n                    && !allTypes.includes('continue')) {\n                // nothing but partials;\n                beamsList[i] = undefined;\n                continue;\n            }\n            let hasStart = false;\n            let hasStop = false;\n            for (const b of beamsList[i].beamsList) {\n                if (b.type === 'start') {\n                    hasStart = true;\n                    continue;\n                }\n                if (b.type === 'stop') {\n                    hasStop = true;\n                    continue;\n                }\n                if (hasStart && b.type === 'partial' && b.direction === 'left') {\n                    b.direction = 'right';\n                } else if (hasStop && b.type === 'partial' && b.direction === 'right') {\n                    b.direction = 'left';\n                }\n            }\n        }\n        return beamsList;\n    }\n    \n    static mergeConnectingPartialBeams(beamsList) {\n        for (let i = 0; i < beamsList.length - 1; i++) {\n            const bThis = beamsList[i];\n            const bNext = beamsList[i + 1];\n            if (!bThis || !bNext) {\n                continue;\n            }\n            const bThisNum = bThis.getNumbers();\n            if (!bThisNum || bThisNum.length === 0) {\n                continue;\n            }\n            for (const thisNum of bThisNum) {\n                const thisBeam = bThis.getByNumber(thisNum);\n                if (thisBeam.type !== 'partial' || thisBeam.direction !== 'right') {\n                    continue;\n                }\n                if (!(bNext.getNumbers().includes(thisNum))) {\n                    continue;\n                }\n                const nextBeam = bNext.getByNumber(thisNum);\n                if (nextBeam.type === 'partial' || nextBeam.direction === 'right') {\n                    continue;\n                }\n                if (nextBeam.type === 'continue' || nextBeam.type === 'stop') {\n                    // should not happen.\n                    continue;\n                }\n                thisBeam.type = 'start';\n                thisBeam.direction = undefined;\n                if (nextBeam.type === 'partial') {\n                    nextBeam.type = 'stop';\n                } else if (nextBeam.type === 'start') {\n                    nextBeam.type = 'continue';\n                }\n                nextBeam.direction = undefined;\n            }\n        }\n        // now fix partial-lefts that follow stops:\n        for (let i = 1; i < beamsList.length; i++) {\n            const bThis = beamsList[i];\n            const bPrev = beamsList[i - 1];\n            if (!bThis || !bPrev) {\n                continue;\n            }\n            const bThisNum = bThis.getNumbers();\n            if (!bThisNum || bThisNum.length === 0) {\n                continue;\n            }\n            for (const thisNum of bThisNum) {\n                const thisBeam = bThis.getByNumber(thisNum);\n                if (thisBeam.type !== 'partial' || thisBeam.direction !== 'left') {\n                    continue;\n                }\n                if (!(bPrev.getNumbers().includes(thisNum))) {\n                    continue;\n                }\n                const prevBeam = bPrev.getByNumber(thisNum);\n                if (prevBeam.type !== 'stop') {\n                    continue;\n                }\n                thisBeam.type = 'stop';\n                thisBeam.direction = undefined;\n                prevBeam.type = 'continue';\n            }\n        }\n        return beamsList;\n    }\n    \n\n    constructor() {\n        super();\n        this.beamsList = [];\n        this.feathered = false;\n    }\n    get length() {\n        return this.beamsList.length;\n    }\n    /**\n     * Append a new {@link music21.beam.Beam} object to this Beams, automatically creating the Beam\n     *   object and incrementing the number count.\n     *\n     * @memberof music21.beam.Beams\n     * @param {string} type - the type (passed to {@link music21.beam.Beam})\n     * @param {string} [direction=undefined] - the direction if type is \"partial\"\n     * @returns {music21.beam.Beam} newly appended object\n     */\n    append(type, direction) {\n        const obj = new beam.Beam(type, direction);\n        obj.number = this.beamsList.length + 1;\n        this.beamsList.push(obj);\n        return obj;\n    }\n    /**\n     * A quick way of setting the beams list for a particular duration, for\n            instance, fill(\"16th\") will clear the current list of beams in the\n            Beams object and add two beams.  fill(2) will do the same (though note\n            that that is an int, not a string).\n\n     * It does not do anything to the direction that the beams are going in,\n            or by default.  Either set type here or call setAll() on the Beams\n            object afterwards.\n\n     * Both \"eighth\" and \"8th\" work.  Adding more than six beams (i.e. things\n            like 512th notes) raises an error.\n\n     * @memberof music21.beam.Beams\n     * @param {string|Int} level - either a string like \"eighth\" or a number like 1 (=\"eighth\")\n     * @param {string} type - type to fill all beams to.\n     * @returns {this}\n     */\n    fill(level, type) {\n        this.beamsList = [];\n        let count = 1;\n        if (\n            level === 1\n            || level === '8th'\n            || level === duration.typeFromNumDict[8]\n        ) {\n            count = 1;\n        } else if (level === 2 || level === duration.typeFromNumDict[16]) {\n            count = 2;\n        } else if (level === 3 || level === duration.typeFromNumDict[32]) {\n            count = 3;\n        } else if (level === 4 || level === duration.typeFromNumDict[64]) {\n            count = 4;\n        } else if (level === 5 || level === duration.typeFromNumDict[128]) {\n            count = 5;\n        } else if (level === 6 || level === duration.typeFromNumDict[256]) {\n            count = 6;\n        } else {\n            throw new Music21Exception('cannot fill beams for level ' + level);\n        }\n        for (let i = 1; i <= count; i++) {\n            const obj = new beam.Beam();\n            obj.number = i;\n            this.beamsList.push(obj);\n        }\n        if (type !== undefined) {\n            this.setAll(type);\n        }\n        return this;\n    }\n    /**\n     * Get the beam with the given number or throw an exception.\n     *\n     * @memberof music21.beam.Beams\n     * @param {Int} number - the beam number to retrieve (usually one less than the position in `.beamsList`)\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getByNumber(number) {\n        if (!this.getNumbers().includes(number)) {\n            throw new Music21Exception('beam number error: ' + number);\n        }\n        for (const thisBeam of this.beamsList) {\n            if (thisBeam.number === number) {\n                return thisBeam;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get an Array of all the numbers for the beams\n     *\n     * @memberof music21.beam.Beams\n     * @returns {Array<Int>} all the numbers\n     */\n    getNumbers() {\n        const numbers = [];\n        for (const thisBeam of this.beamsList) {\n            numbers.push(thisBeam.number);\n        }\n        return numbers;\n    }\n    /**\n     * Returns the type + \"-\" + direction (if direction is defined)\n     * for the beam with the given number.\n     *\n     * @param {Int} number\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getTypeByNumber(number) {\n        const beamObj = this.getByNumber(number);\n        if (beamObj.direction === undefined) {\n            return beamObj.type;\n        } else {\n            const x = beamObj.type + '-' + beamObj.direction;\n            return x;\n        }\n    }\n    /**\n     * Get an Array of all the types for the beams\n     *\n     * @memberof music21.beam.Beams\n     * @returns {Array<string>} all the types\n     */\n    getTypes() {\n        const types = [];\n        for (let i = 0; i < this.length; i++) {\n            types.push(this.beamsList[i].type);\n        }\n        return types;\n    }\n    /**\n     * Set all the {@link music21.beam.Beam} objects to a given type/direction\n     *\n     * @memberof music21.beam.Beams\n     * @param {string} type - beam type\n     * @param {string} [direction] - beam direction\n     * @returns {this}\n     */\n    setAll(type, direction) {\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            const b = this.beamsList[i];\n            b.type = type;\n            b.direction = direction;\n        }\n        return this;\n    }\n    /**\n     * Set the {@link music21.beam.Beam} object specified by `number` to a given type/direction\n     *\n     * @memberof music21.beam.Beams\n     * @param {Int} number\n     * @param {string} type\n     * @param {string} [direction]\n     * @returns {this}\n     */\n    setByNumber(number, type, direction) {\n        if (direction === undefined) {\n            const splitit = type.split('-');\n            type = splitit[0];\n            direction = splitit[1]; // can be undefined...\n        }\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            if (this.beamsList[i].number === number) {\n                this.beamsList[i].type = type;\n                this.beamsList[i].direction = direction;\n            }\n        }\n        return this;\n    }\n}\nbeam.Beams = Beams;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/pitch -- pitch routines\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { prebase } from './prebase.js';\nimport { common } from './common.js';\n\n/**\n * pitch module.  See {@link music21.pitch} namespace\n *\n * @exports music21/pitch\n */\n/**\n * Pitch related objects and methods\n *\n * @namespace music21.pitch\n * @memberof music21\n * @requires music21/prebase\n */\nexport const pitch = {};\n/**\n * @class Accidental\n * @memberof music21.pitch\n * @param {string|number} accName - an accidental name\n * @extends music21.prebase.ProtoM21Object\n */\nexport class Accidental extends prebase.ProtoM21Object {\n    constructor(accName) {\n        super();\n        this._name = '';\n        this._alter = 0.0;\n        this._modifier = '';\n        this._unicodeModifier = '';\n        this.displayType = 'normal'; // \"normal\", \"always\" supported currently\n        this.displayStatus = undefined; // true, false, undefined\n        this.set(accName);\n    }\n    /**\n     * Sets a parameter of the accidental and updates name, alter, and modifier to suit.\n     *\n     * @memberof music21.pitch.Accidental\n     * @param {number|string} accName - the name, number, or modifier to set\n     * @returns {undefined}\n     */\n    set(accName) {\n        if (accName !== undefined && accName.toLowerCase !== undefined) {\n            accName = accName.toLowerCase();\n        }\n\n        if (\n            accName === 'natural'\n            || accName === 'n'\n            || accName === 0\n            || accName === undefined\n        ) {\n            this._name = 'natural';\n            this._alter = 0.0;\n            this._modifier = '';\n            this._unicodeModifier = '♮';\n        } else if (accName === 'sharp' || accName === '#' || accName === 1) {\n            this._name = 'sharp';\n            this._alter = 1.0;\n            this._modifier = '#';\n            this._unicodeModifier = '♯';\n        } else if (\n            accName === 'flat'\n            || accName === '-'\n            || accName === 'b'\n            || accName === -1\n        ) {\n            this._name = 'flat';\n            this._alter = -1.0;\n            this._modifier = '-';\n            this._unicodeModifier = '♭';\n        } else if (\n            accName === 'double-flat'\n            || accName === '--'\n            || accName === -2\n        ) {\n            this._name = 'double-flat';\n            this._alter = -2.0;\n            this._modifier = '--';\n            this._unicodeModifier = '&#x1d12b;';\n        } else if (\n            accName === 'double-sharp'\n            || accName === '##'\n            || accName === 2\n        ) {\n            this._name = 'double-sharp';\n            this._alter = 2.0;\n            this._modifier = '##';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (\n            accName === 'triple-flat'\n            || accName === '---'\n            || accName === -3\n        ) {\n            this._name = 'triple-flat';\n            this._alter = -3.0;\n            this._modifier = '---';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (\n            accName === 'triple-sharp'\n            || accName === '###'\n            || accName === 3\n        ) {\n            this._name = 'triple-sharp';\n            this._alter = 3.0;\n            this._modifier = '###';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (\n            accName === 'quadruple-flat'\n            || accName === '----'\n            || accName === -4\n        ) {\n            this._name = 'quadruple-flat';\n            this._alter = -4.0;\n            this._modifier = '----';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (\n            accName === 'quadruple-sharp'\n            || accName === '####'\n            || accName === 4\n        ) {\n            this._name = 'quadruple-sharp';\n            this._alter = 4.0;\n            this._modifier = '####';\n            this._unicodeModifier = '&#x1d12a;';\n        } else {\n            throw new Music21Exception('Accidental is not supported: ' + accName);\n        }\n\n    }\n    /**\n     * Return or set the name of the accidental ('flat', 'sharp', 'natural', etc.);\n     *\n     * When set, updates alter and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} name\n     */\n    get name() {\n        return this._name;\n    }\n    set name(n) {\n        this.set(n);\n    }\n    /**\n     * Return or set the alteration amount (-1.0 = flat; 1.0 = sharp; etc.)\n     *\n     * When set, updates name and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {number} alter\n     */\n    get alter() {\n        return this._alter;\n    }\n    set alter(alter) {\n        this.set(alter);\n    }\n    /**\n     * Return or set the modifier ('-', '#', '')\n     *\n     * When set, updates alter and name.\n\n     * @memberof music21.pitch.Accidental#\n     * @var {string} modifier\n     */\n    get modifier() {\n        return this._modifier;\n    }\n    set modifier(modifier) {\n        this.set(modifier);\n    }\n    /**\n     * Returns the modifier for vexflow ('b', '#', 'n')\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} vexflowModifier\n     * @readonly\n     */\n    get vexflowModifier() {\n        // todo -- rewrite with mapping.\n        const m = this.modifier;\n        if (m === '') {\n            return 'n';\n        } else if (m === '#') {\n            return '#';\n        } else if (m === '-') {\n            return 'b';\n        } else if (m === '##') {\n            return '##';\n        } else if (m === '--') {\n            return 'bb';\n        } else if (m === '###') {\n            return '###';\n        } else if (m === '---') {\n            return 'bbb';\n        } else {\n            throw new Music21Exception('Vexflow does not support: ' + m);\n        }\n    }\n    /**\n     * Returns the modifier in unicode or\n     * for double and triple accidentals, as a hex escape\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} unicodeModifier\n     * @readonly\n     */\n    get unicodeModifier() {\n        return this._unicodeModifier;\n    }\n}\npitch.Accidental = Accidental;\n\npitch.nameToMidi = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\npitch.nameToSteps = { C: 0, D: 1, E: 2, F: 3, G: 4, A: 5, B: 6 };\npitch.stepsToName = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\npitch.midiToName = [\n    'C',\n    'C#',\n    'D',\n    'E-',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'A-',\n    'A',\n    'B-',\n    'B',\n];\n\n/**\n * Pitch objects are found in {@link music21.note.Note} objects, and many other places.\n *\n * They do not have a {@link music21.duration.Duration} associated with them, so they\n * cannot be placed inside {@link music21.stream.Stream} objects.\n *\n * Valid pitch name formats are\n * - \"C\", \"D', etc. (\"B\" = American B; \"H\" is not allowed)\n * - \"C#\", \"C-\" (C-flat; do not use \"b\" for flat), \"C##\", \"C###\", \"C--\" etc.\n * - Octave may be specified after the name + accidental: \"C#4\" etc.\n * - Octave can be arbitrarily high (\"C10\") but only as low as \"C0\" because \"C-1\" would be interpreted as C-flat octave 1; shift octave later for very low notes.\n * - If octave is not specified, the system will usually use octave 4, but might adjust according to context. If you do not like this behavior, give an octave always.\n * - Microtones are not supported in music21j (they are in music21p)\n *\n * @class Pitch\n * @memberof music21.pitch\n * @param {string} pn - name of the pitch, with or without octave, see above.\n * @extends music21.prebase.ProtoM21Object\n * @property {music21.pitch.Accidental|undefined} accidental - link to an accidental\n * @property {number} diatonicNoteNum - diatonic number of the pitch, where 29 = C4, C#4, C-4, etc.; 30 = D-4, D4, D#4, etc. updates other properties.\n * @property {number} midi - midi number of the pitch (C4 = 60); readonly. See {@link music21.pitch.Pitch#ps} for setable version.\n * @property {string} name - letter name of pitch + accidental modifier; e.g., B-flat = 'B-'; changes automatically w/ step and accidental\n * @property {string} nameWithOctave - letter name of pitch + accidental modifier + octave; changes automatically w/ step, accidental, and octave\n * @property {number} octave - number for the octave, where middle C = C4, and octaves change between B and C; default 4\n * @property {number} ps - pitch space number, like midi number but floating point and w/ no restriction on range. C4 = 60.0\n * @property {string} step - letter name for the pitch (C-G, A, B), without accidental; default 'C'\n */\nexport class Pitch extends prebase.ProtoM21Object {\n    constructor(pn='C') {\n        super();\n        this._step = 'C';\n        this._octave = 4;\n        this._accidental = undefined;\n        this.spellingIsInferred = false;\n        \n        /* pn can be a nameWithOctave */\n        if (typeof pn === 'number') {\n            if (pn < 12) {\n                pn += 60; // pitchClass\n            }\n            this.ps = pn;\n        } else if (pn.match(/\\d+/)) {\n            this.nameWithOctave = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n\n    // N.B. cannot use transpose here, because of circular import.\n\n    get step() {\n        return this._step;\n    }\n    set step(s) {\n        if (s === '') {\n            throw new TypeError('All notes must have a step');\n        }\n        if (typeof s !== 'string') {\n            throw new TypeError('Steps must be strings');\n        }\n        s = s.toUpperCase();\n        if (!pitch.stepsToName.includes(s)) {\n            throw new TypeError(`${s} is not a valid step name.`);\n        }\n        this._step = s;\n        this.spellingIsInferred = false;\n    }\n    get octave() {\n        return this._octave;\n    }\n    set octave(o) {\n        this._octave = o;\n    }\n    get accidental() {\n        return this._accidental;\n    }\n    set accidental(a) {\n        if (typeof a !== 'object' && a !== undefined) {\n            a = new pitch.Accidental(a);\n        }\n        this._accidental = a;\n        this.spellingIsInferred = false;\n    }\n    get name() {\n        if (this.accidental === undefined) {\n            return this.step;\n        } else {\n            return this.step + this.accidental.modifier;\n        }\n    }\n    set name(nn) {\n        this.step = nn.slice(0, 1);\n        const tempAccidental = nn.slice(1);\n        if (tempAccidental) {\n            // not the empty string\n            this.accidental = tempAccidental; // converts automatically\n        } else {\n            this.accidental = undefined;\n        }\n    }\n    get nameWithOctave() {\n        return this.name + this.octave.toString();\n    }\n    set nameWithOctave(pn) {\n        const storedOctave = pn.match(/\\d+/);\n        if (storedOctave !== undefined) {\n            pn = pn.replace(/\\d+/, '');\n            this.octave = parseInt(storedOctave);\n            this.name = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n    get pitchClass() {\n        const pc = common.posMod(Math.round(this.ps), 12);\n        return pc;\n    }\n    \n    get diatonicNoteNum() {\n        return this.octave * 7 + pitch.nameToSteps[this.step] + 1;\n    }\n    set diatonicNoteNum(newDNN) {\n        newDNN -= 1; // makes math easier\n        this.octave = Math.floor(newDNN / 7);\n        this.step = pitch.stepsToName[newDNN % 7];\n    }\n    get frequency() {\n        return 440 * Math.pow(2, (this.ps - 69) / 12);\n    }\n    get midi() {\n        return Math.floor(this.ps);\n    }\n    get ps() {\n        let accidentalAlter = 0;\n        if (this.accidental !== undefined) {\n            accidentalAlter = parseInt(this.accidental.alter);\n        }\n        return (\n            (this.octave + 1) * 12\n            + pitch.nameToMidi[this.step]\n            + accidentalAlter\n        );\n    }\n    set ps(ps) {\n        this.name = pitch.midiToName[common.posMod(ps, 12)];\n        this.octave = Math.floor(ps / 12) - 1;\n        this.spellingIsInferred = true;\n    }\n\n    get unicodeName() {\n        if (this.accidental !== undefined) {\n            return this.step + this.accidental.unicodeModifier();\n        } else {\n            return this.step;\n        }\n    }\n    \n    get unicodeNameWithOctave() {\n        if (this.octave === undefined) {\n            return this.unicodeName;\n        } else {\n            return this.unicodeName + this.octave.toString();\n        }\n    }\n    \n    /**\n     * @param {boolean} inPlace\n     * @param {Int} directionInt -- -1 = down, 1 = up\n     */\n    _getEnharmonicHelper(inPlace=false, directionInt) {\n        // differs from Python version because\n        // cannot import interval here.\n        let octaveStored = true;\n        if (this.octave === undefined) {\n            octaveStored = false;\n        }\n        const p = this.clone();\n        p.diatonicNoteNum += directionInt;\n        if (p.accidental === undefined) {\n            p.accidental = new Accidental(0);\n        }\n        while (p.ps % 12 !== this.ps % 12) { // octaveless\n            p.accidental.alter += -1 * directionInt;\n        }\n\n        if (!inPlace) {\n            return p;\n        }\n        this.step = p.step;\n        this.accidental = p.accidental;\n        if (p.microtone === undefined) {\n            this.microtone = p.microtone;\n        }\n        if (!octaveStored) {\n            this.octave = undefined;\n        } else {\n            this.octave = p.octave;\n        }\n        return p;\n    }\n\n    getHigherEnharmonic(inPlace=false) {\n        return this._getEnharmonicHelper(inPlace, 1);\n    }\n\n    getLowerEnharmonic(inPlace=false) {\n        return this._getEnharmonicHelper(inPlace, -1);\n    }\n    /* TODO: isEnharmonic, getEnharmonic, getAllCommonEnharmonics */\n\n    /**\n     * Returns the vexflow name for the pitch in the given clef.\n     *\n     * @memberof music21.pitch.Pitch#\n     * @param {clef.Clef} clefObj - the active {@link music21.clef.Clef} object\n     * @returns {String} - representation in vexflow\n     */\n    vexflowName(clefObj) {\n        // returns a vexflow Key name for this pitch.\n        let tempPitch = this;\n        if (clefObj !== undefined) {\n            try {\n                tempPitch = clefObj.convertPitchToTreble(this);\n            } catch (e) {\n                console.log(e, clefObj);\n            }\n        }\n        let accidentalType = 'n';\n        if (this.accidental !== undefined) {\n            accidentalType = this.accidental.vexflowModifier;\n        }\n        const outName\n            = tempPitch.step + accidentalType + '/' + tempPitch.octave;\n        return outName;\n    }\n}\npitch.Pitch = Pitch;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/interval -- Interval routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { prebase } from './prebase.js';\nimport { pitch } from './pitch.js';\n\n/**\n * interval module. See {@link music21.interval} for namespace\n *\n * @exports music21/interval\n */\n/**\n * Interval related objects\n *\n * @namespace music21.interval\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/pitch\n */\nexport const interval = {};\n\n/**\n * Interval Directions as an Object/map\n *\n * @memberof music21.interval\n * @example\n * if (music21.interval.Direction.OBLIQUE >\n *     music21.interval.Direction.ASCENDING ) {\n *    console.log(music21.interval.Direction.DESCENDING);\n * }\n *\n */\ninterval.Direction = {\n    DESCENDING: -1,\n    OBLIQUE: 0,\n    ASCENDING: 1,\n};\n\n/**\n * N.B. a dict in music21p -- the indexes here let Direction call them + 1\n *\n * @memberof music21.interval\n * @example\n * console.log(music21.interval.IntervalDirectionTerms[music21l.interval.Direction.OBLIQUE + 1])\n * // \"Oblique\"\n */\ninterval.IntervalDirectionTerms = ['Descending', 'Oblique', 'Ascending'];\n\n/**\n * ordinals for music terms...\n *\n * @memberof music21.interval\n * @example\n * for (var i = 1; // N.B. 0 = undefined\n *      i < music21.interval.MusicOrdinals.length;\n *      i++) {\n *     console.log(i, music21.interval.MusicOrdinals[i]);\n * }\n * // 1, Unison\n * // 2, Second\n * // 3, Third\n * // ...\n * // 8, Octave\n * // ...\n * // 15, Double Octave\n */\ninterval.MusicOrdinals = [\n    undefined,\n    'Unison',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n    'Sixth',\n    'Seventh',\n    'Octave',\n    'Ninth',\n    'Tenth',\n    'Eleventh',\n    'Twelfth',\n    'Thirteenth',\n    'Fourteenth',\n    'Double Octave',\n];\n\n/**\n * Represents an interval such as unison, second, etc.\n *\n * Properties are demonstrated below.\n *\n * @class GenericInterval\n * @memberof music21.interval\n * @param {Int} [gi=1] - generic interval (1 or higher, or -2 or lower)\n * @example\n * var gi = new music21.interval.GenericInterval(-14)\n * gi.value\n * // -14\n * gi.directed\n * // -14\n * gi.undirected\n * // 14\n * gi.direction == music21.interval.Direction.DESCENDING\n * // true\n * gi.isSkip\n * // true\n * gi.isStep\n * // false\n * gi.isDiatonicStep\n * // false  // augmented unisons are not diatonicSteps but can't tell yet..\n * gi.isUnison\n * // false\n * gi.simpledDirected\n * // -7\n * gi.simpleUndirected\n * // 7\n * gi.undirectedOctaves\n * // 1\n * gi.semiSimpleUndirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.semiSimpleDirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.perfectable\n * // false\n * gi.niceName\n * // \"Fourteenth\"\n * gi.directedNiceName\n * // \"Descending Fourteenth\"\n * gi.simpleNiceName\n * // \"Seventh\"\n * gi.staffDistance\n * // -13\n * gi.mod7inversion\n * // 2  // sevenths invert to seconds\n *\n */\nexport class GenericInterval extends prebase.ProtoM21Object {\n    constructor(gi) {\n        super();\n        if (gi === undefined) {\n            gi = 1;\n        }\n        this.value = gi; // todo: convertGeneric() from python\n        this.directed = this.value;\n        this.undirected = Math.abs(this.value);\n\n        if (this.directed === 1) {\n            this.direction = interval.Direction.OBLIQUE;\n        } else if (this.directed < 0) {\n            this.direction = interval.Direction.DESCENDING;\n        } else if (this.directed > 1) {\n            this.direction = interval.Direction.ASCENDING;\n        }\n        // else (raise exception)\n\n        if (this.undirected > 2) {\n            this.isSkip = true;\n        } else {\n            this.isSkip = false;\n        }\n\n        if (this.undirected === 2) {\n            this.isDiatonicStep = true;\n        } else {\n            this.isDiatonicStep = false;\n        }\n\n        this.isStep = this.isDiatonicStep;\n\n        if (this.undirected === 1) {\n            this.isUnison = true;\n        } else {\n            this.isUnison = false;\n        }\n\n        let tempSteps = common.posMod(this.undirected, 7);\n        let tempOctaves = parseInt(this.undirected / 7);\n        if (tempSteps === 0) {\n            tempOctaves -= 1;\n            tempSteps = 7;\n        }\n        this.simpleUndirected = tempSteps;\n        this.undirectedOctaves = tempOctaves;\n        if (tempSteps === 1 && tempOctaves >= 1) {\n            this.semiSimpleUndirected = 8;\n        } else {\n            this.semiSimpleUndirected = this.simpleUndirected;\n        }\n\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.octaves = -1 * tempOctaves;\n            if (tempSteps !== 1) {\n                this.simpleDirected = -1 * tempSteps;\n            } else {\n                this.simpleDirected = 1; // no descending unisons...\n            }\n            this.semiSimpleDirected = -1 * this.semiSimpleUndirected;\n        } else {\n            this.octaves = tempOctaves;\n            this.simpleDirected = tempSteps;\n            this.semiSimpleDirected = this.semiSimpleUndirected;\n        }\n        if (\n            this.simpleUndirected === 1\n            || this.simpleUndirected === 4\n            || this.simpleUndirected === 5\n        ) {\n            this.perfectable = true;\n        } else {\n            this.perfectable = false;\n        }\n\n        if (this.undirected < interval.MusicOrdinals.length) {\n            this.niceName = interval.MusicOrdinals[this.undirected];\n        } else {\n            this.niceName = this.undirected.toString();\n        }\n\n        this.simpleNiceName = interval.MusicOrdinals[this.simpleUndirected];\n        this.semiSimpleNiceName\n            = interval.MusicOrdinals[this.semiSimpleUndirected];\n\n        if (Math.abs(this.directed) === 1) {\n            this.staffDistance = 0;\n        } else if (this.directed > 1) {\n            this.staffDistance = this.directed - 1;\n        } else if (this.directed < -1) {\n            this.staffDistance = this.directed + 1;\n        }\n        // else: raise IntervalException(\"Non-integer, -1, or 0 not permitted as a diatonic interval\")\n\n        // 2 -> 7; 3 -> 6; 8 -> 1 etc.\n        this.mod7inversion = 9 - this.semiSimpleUndirected;\n\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.mod7 = this.mod7inversion; // see chord.semitonesFromChordStep for usage...\n        } else {\n            this.mod7 = this.simpleDirected;\n        }\n    }\n\n    /**\n     * Returns a new GenericInterval which is the mod7inversion; 3rds (and 10ths etc.) to 6ths, etc.\n     *\n     * @memberof music21.interval.GenericInterval\n     * @returns {music21.interval.GenericInterval}\n     */\n    complement() {\n        return new interval.GenericInterval(this.mod7inversion);\n    }\n\n    /**\n     * Returns a new GenericInterval which has the opposite direction (descending becomes ascending, etc.)\n     *\n     * @memberof music21.interval.GenericInterval\n     * @returns {music21.interval.GenericInterval}\n     */\n    reverse() {\n        if (this.undirected === 1) {\n            return new interval.GenericInterval(1);\n        } else {\n            return new interval.GenericInterval(\n                this.undirected * (-1 * this.direction)\n            );\n        }\n    }\n    /**\n     * Given a specifier, return a new DiatonicInterval with this generic.\n     *\n     * @memberof music21.interval.GenericInterval\n     * @param {string|Int} specifier - a specifier such as \"P\",\"m\",\"M\",\"A\",\"dd\" etc.\n     * @returns {music21.interval.DiatonicInterval}\n     */\n    getDiatonic(specifier) {\n        return new interval.DiatonicInterval(specifier, this);\n    }\n\n    /**\n     * Transpose a pitch by this generic interval, maintaining accidentals\n     *\n     * @memberof music21.interval.GenericInterval\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        const pitch2 = new pitch.Pitch();\n        pitch2.step = p.step;\n        pitch2.octave = p.octave;\n\n        const oldDiatonicNum = p.diatonicNoteNum;\n\n        const distanceToMove = this.staffDistance;\n\n        // if not reverse...\n        const newDiatonicNumber = oldDiatonicNum + distanceToMove;\n        const [newStep, newOctave] = interval.convertDiatonicNumberToStep(\n            newDiatonicNumber\n        );\n        pitch2.step = newStep;\n        pitch2.octave = newOctave;\n        if (p.accidental !== undefined) {\n            pitch2.accidental = new pitch.Accidental(p.accidental.name);\n        }\n        return pitch2;\n    }\n}\ninterval.GenericInterval = GenericInterval;\n\ninterval.IntervalSpecifiersEnum = {\n    PERFECT: 1,\n    MAJOR: 2,\n    MINOR: 3,\n    AUGMENTED: 4,\n    DIMINISHED: 5,\n    DBLAUG: 6,\n    DBLDIM: 7,\n    TRPAUG: 8,\n    TRPDIM: 9,\n    QUADAUG: 10,\n    QUADDIM: 11,\n};\n\ninterval.IntervalNiceSpecNames = [\n    'ERROR',\n    'Perfect',\n    'Major',\n    'Minor',\n    'Augmented',\n    'Diminished',\n    'Doubly-Augmented',\n    'Doubly-Diminished',\n    'Triply-Augmented',\n    'Triply-Diminished',\n    'Quadruply-Augmented',\n    'Quadruply-Diminished',\n];\ninterval.IntervalPrefixSpecs = [\n    undefined,\n    'P',\n    'M',\n    'm',\n    'A',\n    'd',\n    'AA',\n    'dd',\n    'AAA',\n    'ddd',\n    'AAAA',\n    'dddd',\n];\n\ninterval.IntervalOrderedPerfSpecs = [\n    'dddd',\n    'ddd',\n    'dd',\n    'd',\n    'P',\n    'A',\n    'AA',\n    'AAA',\n    'AAAA',\n];\n\ninterval.IntervalPerfSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.PERFECT,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalPerfOffset = 4;\n\ninterval.IntervalOrderedImperfSpecs = [\n    'dddd',\n    'ddd',\n    'dd',\n    'd',\n    'm',\n    'M',\n    'A',\n    'AA',\n    'AAA',\n    'AAAA',\n];\n\ninterval.IntervalSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.MINOR,\n    interval.IntervalSpecifiersEnum.MAJOR,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalMajOffset = 5;\n\ninterval.IntervalSemitonesGeneric = {\n    1: 0,\n    2: 2,\n    3: 4,\n    4: 5,\n    5: 7,\n    6: 9,\n    7: 11,\n};\ninterval.IntervalAdjustPerfect = {\n    P: 0,\n    A: 1,\n    AA: 2,\n    AAA: 3,\n    AAAA: 4,\n    d: -1,\n    dd: -2,\n    ddd: -3,\n    dddd: -4,\n}; // offset from Perfect\n\ninterval.IntervalAdjustImperf = {\n    M: 0,\n    m: -1,\n    A: 1,\n    AA: 2,\n    AAA: 3,\n    AAAA: 4,\n    d: -2,\n    dd: -3,\n    ddd: -4,\n    dddd: -5,\n}; // offset from major\n\n/**\n * Represents a Diatonic interval.  See example for usage.\n *\n * @class DiatonicInterval\n * @memberof music21.interval\n * @param {string|Int|undefined} [specifier='P'] - a specifier such as \"P\", \"d\", \"m\", \"M\" etc.\n * @param {music21.interval.GenericInterval|Int} [generic=1] - a `GenericInterval` object or a number to be converted to one\n * @example\n * var di = new music21.interval.DiatonicInterval(\"M\", 10);\n * di.generic.isClassOrSubclass('GenericInterval');\n * // true\n * di.specifierAbbreviation;\n * // 'M'\n * di.name;\n * // 'M10'\n * di.direction == music21.interval.Direction.ASCENDING;\n * // true\n * di.niceName\n * // \"Major Tenth\"\n *\n * // See music21p for more possibilities.\n */\nexport class DiatonicInterval extends prebase.ProtoM21Object {\n    constructor(specifier, generic) {\n        super();\n\n        if (specifier === undefined) {\n            specifier = 'P';\n        }\n        if (generic === undefined) {\n            generic = new interval.GenericInterval(1);\n        } else if (typeof generic === 'number') {\n            generic = new interval.GenericInterval(generic);\n        }\n\n        this.name = '';\n        if (typeof specifier === 'number') {\n            this.specifier = specifier;\n        } else {\n            this.specifier = interval.IntervalPrefixSpecs.indexOf(specifier); // todo: convertSpecifier();\n        }\n        this.generic = generic;\n\n        if (\n            generic.undirected !== 1\n            || specifier === interval.IntervalSpecifiersEnum.PERFECT\n        ) {\n            this.direction = generic.direction;\n        } else if (\n            interval.IntervalPerfSpecifiers.indexOf(specifier)\n            <= interval.IntervalPerfSpecifiers.indexOf(\n                interval.IntervalSpecifiersEnum.DIMINISHED\n            )\n        ) {\n            // diminished unisons -- very controversial\n            this.direction = interval.Direction.DESCENDING;\n        } else {\n            this.direction = interval.Direction.ASCENDING;\n        }\n        const diatonicDirectionNiceName\n            = interval.IntervalDirectionTerms[this.direction + 1];\n        this.name\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.undirected.toString();\n        this.niceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.niceName;\n        this.simpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.simpleUndirected.toString();\n        this.simpleNiceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.simpleNiceName;\n        this.semiSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.semiSimpleUndirected.toString();\n        this.semiSimpleNiceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.semiSimpleNiceName;\n        this.directedName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.directed.toString();\n        this.directedNiceName = diatonicDirectionNiceName + ' ' + this.niceName;\n        this.directedSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.simpleDirected.toString();\n        this.directedSimpleNiceName\n            = diatonicDirectionNiceName + ' ' + this.simpleNiceName;\n        this.directedSemiSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.semiSimpleDirected.toString();\n        this.directedSemiSimpleNiceName\n            = diatonicDirectionNiceName + ' ' + this.semiSimpleNameName;\n        this.specificName = interval.IntervalNiceSpecNames[this.specifier];\n        this.perfectable = generic.perfectable;\n        this.isDiatonicStep = generic.isDiatonicStep;\n        this.isStep = generic.isStep;\n\n        // generate inversions\n        if (this.perfectable) {\n            this.orderedSpecifierIndex = interval.IntervalOrderedPerfSpecs.indexOf(\n                interval.IntervalPrefixSpecs[this.specifier]\n            );\n            this.invertedOrderedSpecIndex\n                = interval.IntervalOrderedPerfSpecs.length\n                - 1\n                - this.orderedSpecifierIndex;\n            this.invertedOrderedSpecifier\n                = interval.IntervalOrderedPerfSpecs[\n                    this.invertedOrderedSpecIndex\n                ];\n        } else {\n            this.orderedSpecifierIndex = interval.IntervalOrderedImperfSpecs.indexOf(\n                interval.IntervalPrefixSpecs[this.specifier]\n            );\n            this.invertedOrderedSpecIndex\n                = interval.IntervalOrderedImperfSpecs.length\n                - 1\n                - this.orderedSpecifierIndex;\n            this.invertedOrderedSpecifier\n                = interval.IntervalOrderedImperfSpecs[\n                    this.invertedOrderedSpecIndex\n                ];\n        }\n\n        this.mod7inversion\n            = this.invertedOrderedSpecifier + generic.mod7inversion.toString();\n        /* ( if (this.direction == interval.Direction.DESCENDING) {\n\t\t\tthis.mod7 = this.mod7inversion;\n\t\t} else {\n\t\t\tthis.mod7 = this.simpleName;\n\t\t} */\n\n        // TODO: reverse()\n        // TODO: property cents\n    }\n\n    /**\n     * Returns a ChromaticInterval object of the same size.\n     *\n     * @memberof music21.interval.DiatonicInterval\n     * @returns {music21.interval.ChromaticInterval}\n     */\n    getChromatic() {\n        const octaveOffset = Math.floor(\n            Math.abs(this.generic.staffDistance) / 7\n        );\n        const semitonesStart\n            = interval.IntervalSemitonesGeneric[this.generic.simpleUndirected];\n        const specName = interval.IntervalPrefixSpecs[this.specifier];\n\n        let semitonesAdjust = 0;\n        if (this.generic.perfectable) {\n            semitonesAdjust = interval.IntervalAdjustPerfect[specName];\n        } else {\n            semitonesAdjust = interval.IntervalAdjustImperf[specName];\n        }\n\n        let semitones = octaveOffset * 12 + semitonesStart + semitonesAdjust;\n\n        // direction should be same as original\n\n        if (this.generic.direction === interval.Direction.DESCENDING) {\n            semitones *= -1;\n        }\n        if (debug) {\n            console.log(\n                'DiatonicInterval.getChromatic -- octaveOffset: ' + octaveOffset\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitonesStart: '\n                    + semitonesStart\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- specName: ' + specName\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitonesAdjust: '\n                    + semitonesAdjust\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitones: ' + semitones\n            );\n        }\n        return new interval.ChromaticInterval(semitones);\n    }\n\n    transposePitch(p) {\n        const fullIntervalObject = new Interval(this, this.getChromatic());\n        return fullIntervalObject.transposePitch(p);\n    }\n\n    get specifierAbbreviation() {\n        return interval.IntervalPrefixSpecs[this.specifier];\n    }\n\n    get cents() {\n        return this.getChromatic().cents;\n    }\n}\ninterval.DiatonicInterval = DiatonicInterval;\n\n/**\n * @class ChromaticInterval\n * @memberof music21.interval\n * @param {number} value - number of semitones (positive or negative)\n * @property {number} cents\n * @property {number} value\n * @property {number} undirected - absolute value of value\n * @property {number} mod12 - reduction to one octave\n * @property {number} intervalClass - reduction to within a tritone (11 = 1, etc.)\n *\n */\nexport class ChromaticInterval extends prebase.ProtoM21Object {\n    constructor(value) {\n        super();\n\n        this.semitones = value;\n        this.cents = Math.round(value * 100.0, 5);\n        this.directed = value;\n        this.undirected = Math.abs(value);\n\n        if (this.directed === 0) {\n            this.direction = interval.Direction.OBLIQUE;\n        } else if (this.directed === this.undirected) {\n            this.direction = interval.Direction.ASCENDING;\n        } else {\n            this.direction = interval.Direction.DESCENDING;\n        }\n\n        this.mod12 = common.posMod(this.semitones, 12);\n        this.simpleUndirected = common.posMod(this.undirected, 12);\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.simpleDirected = -1 * this.simpleUndirected;\n        } else {\n            this.simpleDirected = this.simpleUndirected;\n        }\n\n        this.intervalClass = this.mod12;\n        if (this.mod12 > 6) {\n            this.intervalClass = 12 - this.mod12;\n        }\n\n        if (this.undirected === 1) {\n            this.isChromaticStep = true;\n        } else {\n            this.isChromaticStep = false;\n        }\n    }\n    reverse() {\n        return new interval.ChromaticInterval(\n            this.undirected * (-1 * this.direction)\n        );\n    }\n\n    //  TODO: this.getDiatonic()\n\n    /**\n     * Transposes pitches but does not maintain accidentals, etc.\n     *\n     * @memberof music21.interval.ChromaticInterval\n     * @property {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        let useImplicitOctave = false;\n        if (p.octave === undefined) {\n            // not yet implemented in m21j\n            useImplicitOctave = true;\n        }\n        const pps = p.ps;\n        const newPitch = new pitch.Pitch();\n        newPitch.ps = pps + this.semitones;\n        if (useImplicitOctave) {\n            newPitch.octave = undefined;\n        }\n        return newPitch;\n    }\n}\ninterval.ChromaticInterval = ChromaticInterval;\n\ninterval.IntervalStepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\n/**\n * @function music21.interval.convertDiatonicNumberToStep\n * @memberof music21.interval\n * @param {Int} dn - diatonic number, where 29 = C4, C#4 etc.\n * @returns {Array} two element array of {string} stepName and {Int} octave\n */\ninterval.convertDiatonicNumberToStep = function convertDiatonicNumberToStep(\n    dn\n) {\n    let stepNumber;\n    let octave;\n    if (dn === 0) {\n        return ['B', -1];\n    } else if (dn > 0) {\n        octave = Math.floor((dn - 1) / 7);\n        stepNumber = dn - 1 - octave * 7;\n    } else {\n        // low notes... test, because js(floor) != py(int);\n        octave = Math.floor(dn / 7);\n        stepNumber = dn - 1 - (octave + 1) * 7;\n    }\n    const stepName = interval.IntervalStepNames[stepNumber];\n    return [stepName, octave];\n};\n\n/**\n * This is the main, powerful Interval class.\n *\n * Instantiate with either a string (\"M3\") or two {@link music21.pitch.Pitch} or two {@link music21.note.Note}\n *\n * See music21p instructions for usage.\n *\n * @class Interval\n * @memberof music21.interval\n * @example\n * var n1 = new music21.note.Note(\"C4\");\n * var n2 = new music21.note.Note(\"F#5\");\n * var iv = new music21.interval.Interval(n1, n2);\n * iv.isConsonant();\n * // false\n * iv.semitones;\n * // 18\n * iv.niceName\n * // \"Augmented Eleventh\"\n */\nexport class Interval extends prebase.ProtoM21Object {\n    constructor(...restArgs) {\n        super();\n        // todo: allow full range of ways of specifying as in m21p\n        if (restArgs.length === 1) {\n            const arg0 = restArgs[0];\n            if (typeof arg0 === 'string') {\n                // simple...\n                const specifier = arg0.replace(/\\d+/, '').replace(/-/, '');\n                let generic = parseInt(arg0.replace(/\\D+/, ''));\n                if (arg0.includes('-')) {\n                    generic *= -1;\n                }\n                const gI = new interval.GenericInterval(generic);\n                const dI = new interval.DiatonicInterval(specifier, gI);\n                this.diatonic = dI;\n                this.chromatic = this.diatonic.getChromatic();\n            } else if (arg0.specifier !== undefined) {\n                // assume diatonic...\n                this.diatonic = arg0;\n                this.chromatic = this.diatonic.getChromatic();\n            } else {\n                console.error('cant parse string arguments to Interval yet');\n            }\n        } else if (restArgs.length === 2) {\n            if (\n                restArgs[0].pitch === undefined\n                && restArgs[0].diatonicNoteNum === undefined\n            ) {\n                this.diatonic = restArgs[0];\n                this.chromatic = restArgs[1];\n            } else {\n                const n1 = restArgs[0];\n                const n2 = restArgs[1];\n                const gInt = interval.notesToGeneric(n1, n2);\n                const cInt = interval.notesToChromatic(n1, n2);\n\n                this.diatonic = interval.intervalsToDiatonic(gInt, cInt);\n                this.chromatic = cInt;\n            }\n        }\n        this.reinit();\n    }\n    get complement() {\n        return new interval.Interval(this.diatonic.mod7inversion);\n    }\n    reinit() {\n        this.direction = this.chromatic.direction;\n        this.specifier = this.diatonic.specifier;\n        this.diatonicType = this.diatonic.specifier;\n        // this.specificName = this.diatonic.specificName;\n        this.generic = this.diatonic.generic;\n\n        this.name = this.diatonic.name;\n        this.niceName = this.diatonic.niceName;\n        this.simpleName = this.diatonic.simpleName;\n        this.simpleNiceName = this.diatonic.simpleNiceName;\n        this.semiSimpleName = this.diatonic.semiSimpleName;\n        this.semiSimpleNiceName = this.diatonic.semiSimpleNiceName;\n\n        this.directedName = this.diatonic.directedName;\n        this.directedNiceName = this.diatonic.directedNiceName;\n        this.directedSimpleName = this.diatonic.directedSimpleName;\n        this.directedSimpleNiceName = this.diatonic.directedSimpleNiceName;\n\n        // other names...\n        this.isDiatonicStep = this.diatonic.isDiatonicStep;\n\n        this.isChromaticStep = this.chromatic.isChromaticStep;\n        this.semitones = this.chromatic.semitones;\n        this.intervalClass = this.chromatic.intervalClass;\n        this.cents = this.chromatic.cents;\n        this.isStep = this.isChromaticStep || this.isDiatonicStep;\n    }\n\n    /**\n     * @memberof music21.interval.Interval\n     * @returns {Boolean}\n     */\n    isConsonant() {\n        const sn = this.simpleName;\n        const consonantNames = ['P5', 'm3', 'M3', 'm6', 'M6', 'P1'];\n        if (consonantNames.indexOf(sn) !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //  todo general: microtones\n    /**\n     * @memberof music21.interval.Interval\n     * @param {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        // todo: reverse, clearAccidentalDisplay, maxAccidental;\n\n        /*\n        var useImplicitOctave = false;\n        if (p.octave === undefined) {\n            useImplicitOctave = true;\n        }\n         */\n        const pitch2 = this.diatonic.generic.transposePitch(p);\n        pitch2.accidental = undefined;\n        // step and octave are right now, but not necessarily accidental\n        const halfStepsToFix\n            = this.chromatic.semitones - parseInt(pitch2.ps - p.ps);\n        if (halfStepsToFix !== 0) {\n            pitch2.accidental = new pitch.Accidental(halfStepsToFix);\n        }\n        if (debug) {\n            console.log('Interval.transposePitch -- new step ' + pitch2.step);\n            console.log(\n                'Interval.transposePitch -- new octave ' + pitch2.octave\n            );\n            console.log(\n                'Interval.transposePitch -- fixing halfsteps for '\n                    + halfStepsToFix\n            );\n        }\n        return pitch2;\n    }\n}\ninterval.Interval = Interval;\n\ninterval.intervalFromGenericAndChromatic = function intervalFromGenericAndChromatic(\n    gInt,\n    cInt\n) {\n    if (typeof gInt === 'number') {\n        gInt = new GenericInterval(gInt);\n    }\n    if (typeof cInt === 'number') {\n        cInt = new ChromaticInterval(cInt);\n    }\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    const dInt = new DiatonicInterval(specifier, gInt);\n    return new Interval(dInt, cInt);\n};\n/**\n * Convert two notes or pitches to a GenericInterval;\n */\ninterval.notesToGeneric = function notesToGeneric(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    const staffDist = p2.diatonicNoteNum - p1.diatonicNoteNum;\n    const genDist = interval.convertStaffDistanceToInterval(staffDist);\n    return new interval.GenericInterval(genDist);\n};\n\ninterval.convertStaffDistanceToInterval = function convertStaffDistanceToInterval(\n    staffDist\n) {\n    if (staffDist === 0) {\n        return 1;\n    } else if (staffDist > 0) {\n        return staffDist + 1;\n    } else {\n        return staffDist - 1;\n    }\n};\n\ninterval.notesToChromatic = function notesToChromatic(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    return new interval.ChromaticInterval(p2.ps - p1.ps);\n};\n\ninterval.intervalsToDiatonic = function intervalsToDiatonic(gInt, cInt) {\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    // todo -- convert specifier...\n    return new interval.DiatonicInterval(specifier, gInt);\n};\n\ninterval._getSpecifierFromGenericChromatic = function _getSpecifierFromGenericChromatic(\n    gInt,\n    cInt\n) {\n    const noteVals = [undefined, 0, 2, 4, 5, 7, 9, 11];\n    const normalSemis\n        = noteVals[gInt.simpleUndirected] + 12 * gInt.undirectedOctaves;\n    let theseSemis = 0;\n    if (\n        gInt.direction !== cInt.direction\n        && gInt.direction !== interval.Direction.OBLIQUE\n        && cInt.direction !== interval.Direction.OBLIQUE\n    ) {\n        // intervals like d2 and dd2 etc. (the last test doesn't matter, since -1*0 === 0, but in theory it should be there)\n        theseSemis = -1 * cInt.undirected;\n    } else if (gInt.undirected === 1) {\n        theseSemis = cInt.directed; // matters for unison\n    } else {\n        // all normal intervals\n        theseSemis = cInt.undirected;\n    }\n    const semisRounded = Math.round(theseSemis);\n    let specifier = '';\n    if (gInt.perfectable) {\n        specifier\n            = interval.IntervalPerfSpecifiers[\n                interval.IntervalPerfOffset + semisRounded - normalSemis\n            ];\n    } else {\n        specifier\n            = interval.IntervalSpecifiers[\n                interval.IntervalMajOffset + semisRounded - normalSemis\n            ];\n    }\n    return specifier;\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/note -- Note, Rest, NotRest, GeneralNote\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as Vex from 'vexflow';\n\nimport { prebase } from './prebase.js';\nimport { base } from './base.js';\nimport { debug } from './debug.js';\nimport { pitch } from './pitch.js';\nimport { beam } from './beam.js';\nimport { common } from './common.js';\n\n/**\n * Module for note classes. See the namespace {@link music21.note}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/beam\n * @exports music21/note\n */\n/**\n * Namespace for notes (single pitch) or rests, and some things like Lyrics that go on notes.\n *\n * @namespace music21.note\n * @memberof music21\n * @property {Array} noteheadTypeNames - an Array of allowable notehead names.\n * @property {Array} stemDirectionNames - an Array of allowable stemDirection names.\n */\nexport const note = {};\n\nnote.noteheadTypeNames = [\n    'arrow down',\n    'arrow up',\n    'back slashed',\n    'circle dot',\n    'circle-x',\n    'circled',\n    'cluster',\n    'cross',\n    'diamond',\n    'do',\n    'fa',\n    'inverted triangle',\n    'la',\n    'left triangle',\n    'mi',\n    'none',\n    'normal',\n    'other',\n    're',\n    'rectangle',\n    'slash',\n    'slashed',\n    'so',\n    'square',\n    'ti',\n    'triangle',\n    'x',\n];\n\nnote.stemDirectionNames = [\n    'double',\n    'down',\n    'noStem',\n    'none',\n    'unspecified',\n    'up',\n];\n\n/**\n * Class for a single Lyric attached to a {@link music21.note.GeneralNote}\n *\n * @class Lyric\n * @memberOf music21.note\n * @extends music21.prebase.ProtoM21Object\n * @param {string} text - the text of the lyric\n * @param {number} number=1 - the lyric number\n * @param {string} syllabic=undefined - placement of the syllable ('begin', 'middle', 'end', 'single'); undefined = interpret from text\n * @param {boolean} applyRaw=false - true = display the text exactly as it is or, false = use \"-\" etc. to determine syllabic\n * @param {string} identifier=undefined - identifier for the lyric.\n * @property {string} lyricConnector='-' - what to place between two lyrics that are syllabic.\n * @property {string} text - the text of the lyric syllable.\n * @property {string} syllabic - see above\n * @property {boolean} applyRaw - see above\n * @property {string} identifier - see above; gets .number if undefined\n * @property {number} number - see above\n * @property {string} rawText - text + any connectors\n */\nexport class Lyric extends prebase.ProtoM21Object {\n    constructor(text, number = 1, syllabic, applyRaw, identifier) {\n        super();\n        this.lyricConnector = '-'; // override to place something else between two notes...\n        this.text = text;\n        this._number = number;\n        this.syllabic = syllabic;\n        this.applyRaw = applyRaw || false;\n        this.setTextAndSyllabic(this.text, this.applyRaw);\n        this._identifier = identifier;\n        this.style = {\n            fillStyle: 'black',\n            strokeStyle: 'black',\n            fontFamily: 'Serif',\n            fontSize: 12,\n            fontWeight: '',\n        };\n    }\n    get identifier() {\n        return this._identifier || this._number;\n    }\n    set identifier(i) {\n        this._identifier = i;\n    }\n    // a property just to match m21p\n    get number() {\n        return this._number;\n    }\n    set number(n) {\n        this._number = n;\n    }\n\n    /**\n     * get rawText - gets the raw text.\n     *\n     * @return {string}  raw text\n     */\n    get rawText() {\n        if (this.syllabic === 'begin') {\n            return this.text + this.lyricConnector;\n        } else if (this.syllabic === 'middle') {\n            return this.lyricConnector + this.text + this.lyricConnector;\n        } else if (this.syllabic === 'end') {\n            return this.lyricConnector + this.text;\n        } else {\n            return this.text;\n        }\n    }\n    set rawText(t) {\n        this.setTextAndSyllabic(t, true);\n    }\n\n    /**\n     * setTextAndSyllabic - Given a setting for rawText and applyRaw,\n     *     sets the syllabic type for a lyric based on the rawText\n     *\n     * @param  {string} rawText text\n     * @param  {boolean} applyRaw = false if hyphens should not be applied\n     * @return {undefined}\n     */\n    setTextAndSyllabic(rawText, applyRaw = false) {\n        if (rawText === undefined) {\n            this.text = undefined;\n            return this;\n        }\n\n        if (\n            !applyRaw\n            && rawText.indexOf(this.lyricConnector) === 0\n            && rawText.slice(-1) === this.lyricConnector\n        ) {\n            this.text = rawText.slice(1, -1);\n            this.syllabic = 'middle';\n        } else if (!applyRaw && rawText.indexOf(this.lyricConnector) === 0) {\n            this.text = rawText.slice(1);\n            this.syllabic = 'end';\n        } else if (!applyRaw && rawText.slice(-1) === this.lyricConnector) {\n            this.text = rawText.slice(0, -1);\n            this.syllabic = 'begin';\n        } else {\n            this.text = rawText;\n            if (this.syllabic === undefined) {\n                this.syllabic = 'single';\n            }\n        }\n        return this;\n    }\n}\nnote.Lyric = Lyric;\n\n/* Notes and rests etc... */\n\n/**\n * Superclass for all Note values\n *\n * @class GeneralNote\n * @memberof music21.note\n * @extends music21.base.Music21Object\n * @param {(number|undefined)} [ql=1.0] - quarterLength of the note\n * @property {boolean} [isChord=false] - is this a chord\n * @property {number} quarterLength - shortcut to `.duration.quarterLength`\n * @property {object} activeVexflowNote - most recent Vex.Flow.StaveNote object to be made from this note (could change); default, undefined\n * @property {Array<music21.expressions.Expression>} expressions - array of attached expressions\n * @property {Array<music21.articulations.Articulation>} articulations - array of attached articulations\n * @property {string} lyric - the text of the first {@link music21.note.Lyric} object; can also set one.\n * @property {Array<music21.note.Lyric>} lyrics - array of attached lyrics\n * @property {number} [volume=60] - how loud is this note, 0-127, before articulations\n * @property {number} midiVolume - how loud is this note, taking into account articulations\n * @property {music21.note.Tie|undefined} [tie=undefined] - a tie object\n */\nexport class GeneralNote extends base.Music21Object {\n    constructor(ql) {\n        super();\n        this.isChord = false;\n        if (ql !== undefined) {\n            this.duration.quarterLength = ql;\n        } else {\n            this.duration.quarterLength = 1.0;\n        }\n        this.volume = 60;\n        this.activeVexflowNote = undefined;\n        this.expressions = [];\n        this.articulations = [];\n        this.lyrics = [];\n        this.tie = undefined;\n        /* TODO: editorial objects, color, addLyric, insertLyric, hasLyrics */\n        /* Later: augmentOrDiminish, getGrace, */\n    }\n    get lyric() {\n        if (this.lyrics.length > 0) {\n            return this.lyrics[0].text;\n        } else {\n            return undefined;\n        }\n    }\n    set lyric(value) {\n        this.lyrics = [];\n        if (value !== undefined && value !== false) {\n            this.lyrics.push(new note.Lyric(value));\n        }\n    }\n    get midiVolume() {\n        let volume = this.volume;\n        if (volume === undefined) {\n            volume = 60;\n        }\n        if (this.articulations !== undefined) {\n            this.articulations.forEach(a => {\n                volume *= a.dynamicScale;\n                if (volume > 127) {\n                    volume = 127;\n                } else if (isNaN(volume)) {\n                    volume = 60;\n                }\n            });\n        }\n        volume = Math.floor(volume);\n        return volume;\n    }\n    /**\n     * Add a {@link music21.note.Lyric} object to the Note\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {string} text - text to be added\n     * @param {number} [lyricNumber] - integer specifying lyric (defaults to the current `.lyrics.length` + 1)\n     * @param {boolean} [applyRaw=false] - if `true`, do not parse the text for cluses about syllable placement.\n     * @param {string} [lyricIdentifier] - an optional identifier\n     */\n    addLyric(text, lyricNumber, applyRaw = false, lyricIdentifier) {\n        if (lyricNumber === undefined) {\n            const maxLyrics = this.lyrics.length + 1;\n            const newLyric = new note.Lyric(\n                text,\n                maxLyrics,\n                undefined,\n                applyRaw,\n                lyricIdentifier\n            );\n            this.lyrics.push(newLyric);\n        } else {\n            let foundLyric = false;\n            for (let i = 0; i < this.lyrics.length; i++) {\n                const thisLyric = this.lyrics[i];\n                if (thisLyric.number === lyricNumber) {\n                    thisLyric.text = text;\n                    foundLyric = true;\n                    break;\n                }\n            }\n            if (foundLyric === false) {\n                const newLyric = new note.Lyric(\n                    text,\n                    lyricNumber,\n                    undefined,\n                    applyRaw,\n                    lyricIdentifier\n                );\n                this.lyrics.push(newLyric);\n            }\n        }\n    }\n    /**\n     * Change stem direction according to clef. Does nothing for GeneralNote; overridden in subclasses.\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {undefined}\n     */\n    setStemDirectionFromClef(clef) {\n        return undefined;\n    }\n    /**\n     * Sets the vexflow accidentals (if any), the dots, and the stem direction\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {Vex.Flow.StaveNote} vfn - a Vex.Flow note\n     * @param {object\n     */\n    vexflowAccidentalsAndDisplay(vfn, options) {\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (debug) {\n            console.log(this.stemDirection);\n        }\n        if (this.stemDirection === 'noStem') {\n            vfn.hasStem = () => false; // need to override...\n            // vfn.render_options.stem_height = 0;\n        } else {\n            // correct VexFlow stem length for notes far from the center line;\n            let staveDNNSpacing = 5;\n            if (options.stave) {\n                staveDNNSpacing = Math.floor(\n                    options.stave.options.spacing_between_lines_px / 2\n                );\n            }\n            if (options.clef !== undefined && this.pitch !== undefined) {\n                const midLine = options.clef.lowestLine + 4;\n                // console.log(midLine);\n                const absDNNfromCenter = Math.abs(\n                    this.pitch.diatonicNoteNum - midLine\n                );\n                const absOverOctave = absDNNfromCenter - 7;\n                // console.log(absOverOctave);\n                if (absOverOctave > 0 && vfn.getStemLength !== undefined) {\n                    const stemHeight\n                        = absOverOctave * staveDNNSpacing + vfn.getStemLength();\n                    vfn.setStemLength(stemHeight);\n                }\n            }\n        }\n    }\n    /**\n     * Play the current element as a MIDI note.\n     *\n     * @memberof music21.note.GeneralNote\n     * @param {number} [tempo=120] - tempo in bpm\n     * @param {(base.Music21Object)} [nextElement] - for determining the length to play in case of tied notes, etc.\n     * @param {object} [options] - other options (currently just `{instrument: {@link music21.instrument.Instrument} }`)\n     * @returns {Number} - delay time in milliseconds until the next element (may be ignored)\n     */\n    playMidi(tempo = 120, nextElement, options) {\n        // returns the number of milliseconds to the next element in\n        // case that can't be determined otherwise.\n        if (options === undefined) {\n            let inst;\n            if (this.activeSite !== undefined) {\n                inst = this.activeSite.instrument;\n            }\n            options = { instrument: inst };\n        }\n\n        const volume = this.midiVolume;\n        let channel = 0;\n        if (options !== undefined && options.instrument !== undefined) {\n            channel = options.instrument.midiChannel;\n        }\n        let milliseconds = 60 * 1000 / tempo;\n        const ql = this.duration.quarterLength;\n        milliseconds = 60 * ql * 1000 / tempo;\n        let midNum;\n        if (this.isClassOrSubclass('Note')) {\n            // Note, not rest\n            midNum = this.pitch.midi;\n            let stopTime = milliseconds / 1000;\n            if (\n                nextElement !== undefined\n                && nextElement.isClassOrSubclass('Note')\n            ) {\n                if (nextElement.pitch.midi !== this.pitch.midi) {\n                    stopTime += 60 * 0.25 / tempo; // legato -- play 16th note longer\n                } else if (\n                    this.tie !== undefined\n                    && (this.tie.type === 'start' || this.tie.type === 'continue')\n                ) {\n                    stopTime += 60 * nextElement.duration.quarterLength / tempo;\n                    // this does not take into account 3 or more notes tied.\n                    // TODO: look ahead at next nexts, etc.\n                }\n            } else if (nextElement === undefined) {\n                // let last note ring an extra beat...\n                stopTime += 60 * 1 / tempo;\n            }\n            // console.log(stopTime);\n            // console.log(this.tie);\n            if (this.tie === undefined || this.tie.type === 'start') {\n                // console.log(volume);\n                MIDI.noteOn(channel, midNum, volume, 0);\n                MIDI.noteOff(channel, midNum, stopTime);\n            } // else { console.log ('not going to play ', this.nameWithOctave); }\n        } else if (this.isClassOrSubclass('Chord')) {\n            // TODO: Tied Chords.\n            for (let j = 0; j < this._notes.length; j++) {\n                midNum = this._notes[j].pitch.midi;\n                MIDI.noteOn(channel, midNum, volume, 0);\n                MIDI.noteOff(channel, midNum, milliseconds / 1000);\n            }\n        } // it's a note.Rest -- do nothing -- milliseconds takes care of it...\n        return milliseconds;\n    }\n}\nnote.GeneralNote = GeneralNote;\n\n/**\n * Specifies that a GeneralNote is not a rest (Unpitched, Note, Chord).\n *\n * @class NotRest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in quarter notes\n * @property {music21.beam.Beams} beams - a link to a beam object\n * @property {string} [notehead='normal'] - notehead type\n * @property {string} [noteheadFill='default'] - notehead fill (to be moved to style...)\n * @property {string|undefined} [noteheadColor=undefined] - notehead color\n * @property {boolean} [noteheadParenthesis=false] - put a parenthesis around the notehead?\n * @property {string|undefined} [stemDirection=undefined] - One of ['up','down','noStem', undefined] -- 'double' not supported\n */\nexport class NotRest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.notehead = 'normal';\n        this.noteheadFill = 'default';\n        this.noteheadColor = 'black';\n        this.noteheadParenthesis = false;\n        this.volume = undefined; // not a real object yet.\n        this.beams = new beam.Beams();\n        /* TODO: this.duration.linkage -- need durationUnits */\n        this.stemDirection = undefined;\n        /* TODO: check stemDirection, notehead, noteheadFill, noteheadParentheses */\n    }\n}\nnote.NotRest = NotRest;\n\n/* ------- Note ----------- */\n/**\n * A very, very important class! music21.note.Note objects combine a {@link music21.pitch.Pitch}\n * object to describe pitch (highness/lowness) with a {@link music21.duration.Duration} object\n * that defines length, with additional features for drawing the Note, playing it back, etc.\n *\n * Together with {@link music21.stream.Stream} one of the two most important\n * classes in `music21`.\n *\n * See {@link music21.note.NotRest}, {@link music21.note.GeneralNote}, {@link music21.base.Music21Object}\n * and {@link music21.prebase.ProtoM21Object} (or in general, the **extends** list below) for other\n * things you can do with a `Note` object.\n *\n * Missing from music21p: `microtone, pitchClass, pitchClassString, transpose(), fullName`.\n *\n * @class Note\n * @memberof music21.note\n * @extends music21.note.NotRest\n * @param {(string|music21.pitch.Pitch|undefined)} [nn='C4'] - pitch name (\"C\", \"D#\", \"E-\") w/ or w/o octave (\"C#4\"), or a pitch.Pitch object\n * @param {(number|undefined)} [ql=1.0] - length in quarter notes\n * @property {Boolean} [isNote=true] - is it a Note? Yes!\n * @property {Boolean} [isRest=false] - is it a Rest? No!\n * @property {music21.pitch.Pitch} pitch - the {@link music21.pitch.Pitch} associated with the Note.\n * @property {string} name - shortcut to `.pitch.name`\n * @property {string} nameWithOctave - shortcut to `.pitch.nameWithOctave`\n * @property {string} step - shortcut to `.pitch.step`\n * @property {number} octave - shortcut to `.pitch.octave`\n */\nexport class Note extends NotRest {\n    constructor(nn, ql) {\n        super(ql);\n        this.isNote = true; // for speed\n        this.isRest = false; // for speed\n        if (\n            nn !== undefined\n            && nn.isClassOrSubclass !== undefined\n            && nn.isClassOrSubclass('Pitch') === true\n        ) {\n            this.pitch = nn;\n        } else {\n            this.pitch = new pitch.Pitch(nn);\n        }\n    }\n    get name() {\n        return this.pitch.name;\n    }\n    set name(nn) {\n        this.pitch.name = nn;\n    }\n    get nameWithOctave() {\n        return this.pitch.nameWithOctave;\n    }\n    set nameWithOctave(nn) {\n        this.pitch.nameWithOctave = nn;\n    }\n    get step() {\n        return this.pitch.step;\n    }\n    set step(nn) {\n        this.pitch.step = nn;\n    }\n    // no Frequency\n    get octave() {\n        return this.pitch.octave;\n    }\n    set octave(nn) {\n        this.pitch.octave = nn;\n    }\n    /* TODO: transpose, fullName, microtone, pitchclass, pitchClassString */\n    /**\n     * Change stem direction according to clef.\n     *\n     * @memberof music21.note.Note\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {music21.note.Note} Original object, for chaining methods\n     */\n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            const DNNfromCenter = this.pitch.diatonicNoteNum - midLine;\n            // console.log(DNNfromCenter, this.pitch.nameWithOctave);\n            if (DNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this note.\n     *\n     * @memberof music21.note.Note\n     * @param {object} [options={}] - `{clef: {@link music21.clef.Clef} }`\n     * clef to set the stem direction of.\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const params = {};\n        common.merge(params, options);\n        const clef = params.clef;\n\n        // fixup stem direction -- must happen before Vex.Flow.Note is created...\n        if (\n            this.activeSite !== undefined\n            && this.activeSite.renderOptions.stemDirection !== undefined\n            && note.stemDirectionNames.includes(\n                this.activeSite.renderOptions.stemDirection\n            )\n        ) {\n            this.stemDirection = this.activeSite.renderOptions.stemDirection;\n        } else if (\n            this.stemDirection === undefined\n            && options.clef !== undefined\n        ) {\n            this.setStemDirectionFromClef(options.clef);\n        }\n\n        if (this.duration === undefined) {\n            // console.log(this);\n            return undefined;\n        }\n        const vfd = this.duration.vexflowDuration;\n        if (vfd === undefined) {\n            return undefined;\n        }\n        const vexflowKey = this.pitch.vexflowName(clef);\n\n        const vfnStemDirection\n            = this.stemDirection === 'down'\n                ? Vex.Flow.StaveNote.STEM_DOWN\n                : Vex.Flow.StaveNote.STEM_UP;\n\n        //        const vfnStemDirection = -1;\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [vexflowKey],\n            duration: vfd,\n            stem_direction: vfnStemDirection,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, params); // clean up stuff...\n        if (this.pitch.accidental !== undefined) {\n            if (\n                this.pitch.accidental.vexflowModifier !== 'n'\n                && this.pitch.accidental.displayStatus !== false\n            ) {\n                vfn.addAccidental(\n                    0,\n                    new Vex.Flow.Accidental(\n                        this.pitch.accidental.vexflowModifier\n                    )\n                );\n            } else if (\n                this.pitch.accidental.displayType === 'always'\n                || this.pitch.accidental.displayStatus === true\n            ) {\n                vfn.addAccidental(\n                    0,\n                    new Vex.Flow.Accidental(\n                        this.pitch.accidental.vexflowModifier\n                    )\n                );\n            }\n        }\n\n        if (this.articulations[0] !== undefined) {\n            for (let i = 0; i < this.articulations.length; i++) {\n                const art = this.articulations[i];\n                // 0 refers to the first pitch (for chords etc.)...\n                vfn.addArticulation(0, art.vexflow());\n            }\n        }\n        if (this.expressions[0] !== undefined) {\n            for (let j = 0; j < this.expressions.length; j++) {\n                const exp = this.expressions[j];\n                // 0 refers to the first pitch (for chords etc.)...\n                vfn.addArticulation(0, exp.vexflow());\n            }\n        }\n        if (this.noteheadColor !== undefined) {\n            vfn.setStyle({ fillStyle: this.noteheadColor, strokeStyle: this.noteheadColor });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Note = Note;\n\n/* ------ TODO: Unpitched ------ */\n\n/* ------ Rest ------ */\n\n/**\n * Represents a musical rest.\n *\n * @class Rest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in number of quarterNotes\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=true]\n * @property {string} [name='rest']\n * @property {number} [lineShift=undefined] - number of lines to shift up or down from default\n * @property {string|undefined} [color='black'] - color of the rest\n */\nexport class Rest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.isNote = false; // for speed\n        this.isRest = true; // for speed\n        this.name = 'rest'; // for note compatibility\n        this.lineShift = undefined;\n        this.color = 'black';\n    }\n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this rest.\n     * Corrects for bug in VexFlow that renders a whole rest too low.\n     *\n     * @memberof music21.note.Rest\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        let keyLine = 'b/4';\n        if (this.duration.type === 'whole') {\n            if (\n                this.activeSite !== undefined\n                && this.activeSite.renderOptions.staffLines !== 1\n            ) {\n                keyLine = 'd/5';\n            }\n        }\n        if (this.lineShift !== undefined) {\n            const p = new pitch.Pitch('B4');\n            let ls = this.lineShift;\n            if (this.duration.type === 'whole') {\n                ls += 2;\n            }\n            p.diatonicNoteNum += ls;\n            keyLine = p.vexflowName(undefined);\n        }\n\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [keyLine],\n            duration: this.duration.vexflowDuration + 'r',\n        });\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (this.color !== undefined) {\n            vfn.setStyle({ fillStyle: this.color, strokeStyle: this.color });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Rest = Rest;\n\n/* ------ SpacerRest ------ */\n","import common from './common.js';\n\nconst posMod = common.posMod;\n\nlet t1;\nlet t2;\nlet t3;\nlet t4;\nlet t5;\nlet t6;\nlet t7;\nlet t8;\nlet t9;\nlet t10;\nlet t11; \nlet t12;\nlet t13;\nlet t14;\nlet t15;\nlet t16;\nlet t17;\nlet t18;\nlet t19;\nlet t20;\nlet t21; \nlet t22;\nlet t23;\nlet t24;\nlet t25;\nlet t26;\nlet t27;\nlet t28;\nlet t29;\nlet t30;\nlet t31; \nlet t32;\nlet t33;\nlet t34;\nlet t35;\nlet t36;\nlet t37;\nlet t38;\n\nt1   = [[0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 11, 11, 11, 11], 0]; // 1-1\nconst monad = [undefined, t1];\n\nt1   = [[0, 1], [1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-1\nt2   = [[0, 2], [0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-2\nt3   = [[0, 3], [0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-3\nt4   = [[0, 4], [0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-4\nt5   = [[0, 5], [0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-5\nt6   = [[0, 6], [0, 0, 0, 0, 0, 1], [2, 2, 2, 2, 10, 10, 10], 0]; // 2-6\nconst diad = [undefined, t1, t2, t3, t4, t5, t6];\n\nt1   = [[0, 1, 2], [2, 1, 0, 0, 0, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-1\nt2   = [[0, 1, 3], [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-2\nt3   = [[0, 1, 4], [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-3\nt4   = [[0, 1, 5], [1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 5, 6, 5, 6], 0]; // 3-4\nt5   = [[0, 1, 6], [1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-5\nt6   = [[0, 2, 4], [0, 2, 0, 1, 0, 0], [1, 1, 1, 1, 7, 7, 7, 7], 0]; // 3-6\nt7   = [[0, 2, 5], [0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-7\nt8   = [[0, 2, 6], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-8\nt9   = [[0, 2, 7], [0, 1, 0, 0, 2, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-9\nt10 = [[0, 3, 6], [0, 0, 2, 0, 0, 1], [1, 1, 1, 1, 8, 8, 8, 8], 0]; // 3-10\nt11 = [[0, 3, 7], [0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-11\nt12 = [[0, 4, 8], [0, 0, 0, 3, 0, 0], [3, 3, 3, 3, 9, 9, 9, 9], 0]; // 3-12\nconst trichord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];\n\nt1   = [[0, 1, 2, 3], [3, 2, 1, 0, 0, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-1\nt2   = [[0, 1, 2, 4], [2, 2, 1, 1, 0, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-2\nt3   = [[0, 1, 3, 4], [2, 1, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-3\nt4   = [[0, 1, 2, 5], [2, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-4\nt5   = [[0, 1, 2, 6], [2, 1, 0, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-5\nt6   = [[0, 1, 2, 7], [2, 1, 0, 0, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-6\nt7   = [[0, 1, 4, 5], [2, 0, 1, 2, 1, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-7\nt8   = [[0, 1, 5, 6], [2, 0, 0, 1, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-8\nt9   = [[0, 1, 6, 7], [2, 0, 0, 0, 2, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-9\nt10 = [[0, 2, 3, 5], [1, 2, 2, 0, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-10\nt11 = [[0, 1, 3, 5], [1, 2, 1, 1, 1, 0], [1, 0, 1, 0, 1, 3, 1, 3], 0]; // 4-11\nt12 = [[0, 2, 3, 6], [1, 1, 2, 1, 0, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-12\nt13 = [[0, 1, 3, 6], [1, 1, 2, 0, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-13\nt14 = [[0, 2, 3, 7], [1, 1, 1, 1, 2, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-14\nt15 = [[0, 1, 4, 6], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 29]; // 4-15z\nt16 = [[0, 1, 5, 7], [1, 1, 0, 1, 2, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-16\nt17 = [[0, 3, 4, 7], [1, 0, 2, 2, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-17\nt18 = [[0, 1, 4, 7], [1, 0, 2, 1, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-18\nt19 = [[0, 1, 4, 8], [1, 0, 1, 3, 1, 0], [1, 0, 1, 0, 3, 5, 3, 5], 0]; // 4-19\nt20 = [[0, 1, 5, 8], [1, 0, 1, 2, 2, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-20\nt21 = [[0, 2, 4, 6], [0, 3, 0, 2, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-21\nt22 = [[0, 2, 4, 7], [0, 2, 1, 1, 2, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-22\nt23 = [[0, 2, 5, 7], [0, 2, 1, 0, 3, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-23\nt24 = [[0, 2, 4, 8], [0, 2, 0, 3, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-24\nt25 = [[0, 2, 6, 8], [0, 2, 0, 2, 0, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-25\nt26 = [[0, 3, 5, 8], [0, 1, 2, 1, 2, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-26\nt27 = [[0, 2, 5, 8], [0, 1, 2, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-27\nt28 = [[0, 3, 6, 9], [0, 0, 4, 0, 0, 2], [4, 4, 4, 4, 8, 8, 8, 8], 0]; // 4-28\nt29 = [[0, 1, 3, 7], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 15]; // 4-29z\nconst tetrachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];\n\n\nt1   = [[0, 1, 2, 3, 4], [4, 3, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-1\nt2   = [[0, 1, 2, 3, 5], [3, 3, 2, 1, 1, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-2\nt3   = [[0, 1, 2, 4, 5], [3, 2, 2, 2, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-3\nt4   = [[0, 1, 2, 3, 6], [3, 2, 2, 1, 1, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-4\nt5   = [[0, 1, 2, 3, 7], [3, 2, 1, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-5\nt6   = [[0, 1, 2, 5, 6], [3, 1, 1, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-6\nt7   = [[0, 1, 2, 6, 7], [3, 1, 0, 1, 3, 2], [1, 0, 0, 1, 2, 3, 3, 2], 0]; // 5-7\nt8   = [[0, 2, 3, 4, 6], [2, 3, 2, 2, 0, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-8\nt9   = [[0, 1, 2, 4, 6], [2, 3, 1, 2, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-9\nt10 = [[0, 1, 3, 4, 6], [2, 2, 3, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-10\nt11 = [[0, 2, 3, 4, 7], [2, 2, 2, 2, 2, 0], [1, 0, 1, 0, 1, 1, 1, 1], 0]; // 5-11\nt12 = [[0, 1, 3, 5, 6], [2, 2, 2, 1, 2, 1], [1, 1, 1, 1, 0, 0, 0, 0], [36]]; // 5-12\nt13 = [[0, 1, 2, 4, 8], [2, 2, 1, 3, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-13\nt14 = [[0, 1, 2, 5, 7], [2, 2, 1, 1, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-14\nt15 = [[0, 1, 2, 6, 8], [2, 2, 0, 2, 2, 2], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-15\nt16 = [[0, 1, 3, 4, 7], [2, 1, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-16\nt17 = [[0, 1, 3, 4, 8], [2, 1, 2, 3, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], [37]]; // 5-17\nt18 = [[0, 1, 4, 5, 7], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], [38]]; // 5-18\nt19 = [[0, 1, 3, 6, 7], [2, 1, 2, 1, 2, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-19\nt20 = [[0, 1, 3, 7, 8], [2, 1, 1, 2, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-20\nt21 = [[0, 1, 4, 5, 8], [2, 0, 2, 4, 2, 0], [1, 0, 1, 0, 3, 3, 3, 3], 0]; // 5-21\nt22 = [[0, 1, 4, 7, 8], [2, 0, 2, 3, 2, 1], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-22\nt23 = [[0, 2, 3, 5, 7], [1, 3, 2, 1, 3, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-23\nt24 = [[0, 1, 3, 5, 7], [1, 3, 1, 2, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-24\nt25 = [[0, 2, 3, 5, 8], [1, 2, 3, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-25\nt26 = [[0, 2, 4, 5, 8], [1, 2, 2, 3, 1, 1], [1, 0, 1, 0, 0, 2, 0, 2], 0]; // 5-26\nt27 = [[0, 1, 3, 5, 8], [1, 2, 2, 2, 3, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-27\nt28 = [[0, 2, 3, 6, 8], [1, 2, 2, 2, 1, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-28\nt29 = [[0, 1, 3, 6, 8], [1, 2, 2, 1, 3, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-29\nt30 = [[0, 1, 4, 6, 8], [1, 2, 1, 3, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-30\nt31 = [[0, 1, 3, 6, 9], [1, 1, 4, 1, 1, 2], [1, 0, 0, 1, 0, 3, 3, 0], 0]; // 5-31\nt32 = [[0, 1, 4, 6, 9], [1, 1, 3, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-32\nt33 = [[0, 2, 4, 6, 8], [0, 4, 0, 4, 0, 2], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 5-33\nt34 = [[0, 2, 4, 6, 9], [0, 3, 2, 2, 2, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-34\nt35 = [[0, 2, 4, 7, 9], [0, 3, 2, 1, 4, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-35\nt36 = [[0, 1, 2, 4, 7], [2, 2, 2, 1, 2, 1], [1, 0, 0, 1, 0, 1, 1, 0], 12]; // 5-36\nt37 = [[0, 3, 4, 5, 8], [2, 1, 2, 2, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], 17]; // 5-37\nt38 = [[0, 1, 2, 5, 8], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 18]; // 5-38\nconst pentachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38];\n\n\nt1   = [[0, 1, 2, 3, 4, 5], [5, 4, 3, 2, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-1  A\nt2   = [[0, 1, 2, 3, 4, 6], [4, 4, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-2\nt3   = [[0, 1, 2, 3, 5, 6], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 36]; // 6-3\nt4   = [[0, 1, 2, 4, 5, 6], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 6-4\nt5   = [[0, 1, 2, 3, 6, 7], [4, 2, 2, 2, 3, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-5\nt6   = [[0, 1, 2, 5, 6, 7], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 38]; // 6-6\nt7   = [[0, 1, 2, 6, 7, 8], [4, 2, 0, 2, 4, 3], [2, 2, 2, 2, 2, 2, 2, 2], 0]; // 6-7 B\nt8   = [[0, 2, 3, 4, 5, 7], [3, 4, 3, 2, 3, 0], [1, 1, 1, 1, 1, 1, 1, 1], 0]; // 6-8 D\nt9   = [[0, 1, 2, 3, 5, 7], [3, 4, 2, 2, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-9\nt10 = [[0, 1, 3, 4, 5, 7], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 39]; // 6-10\nt11 = [[0, 1, 2, 4, 5, 7], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 40]; // 6-11\nt12 = [[0, 1, 2, 4, 6, 7], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 41]; // 6-12\nt13 = [[0, 1, 3, 4, 6, 7], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 42]; // 6-13\nt14 = [[0, 1, 3, 4, 5, 8], [3, 2, 3, 4, 3, 0], [1, 0, 1, 0, 1, 0, 1, 0], 0]; // 6-14\nt15 = [[0, 1, 2, 4, 5, 8], [3, 2, 3, 4, 2, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-15\nt16 = [[0, 1, 4, 5, 6, 8], [3, 2, 2, 4, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-16\nt17 = [[0, 1, 2, 4, 7, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 43]; // 6-17\nt18 = [[0, 1, 2, 5, 7, 8], [3, 2, 2, 2, 4, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-18\nt19 = [[0, 1, 3, 4, 7, 8], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 44]; // 6-19\nt20 = [[0, 1, 4, 5, 8, 9], [3, 0, 3, 6, 3, 0], [3, 3, 3, 3, 3, 3, 3, 3], 0]; // 6-20 E\nt21 = [[0, 2, 3, 4, 6, 8], [2, 4, 2, 4, 1, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-21\nt22 = [[0, 1, 2, 4, 6, 8], [2, 4, 1, 4, 2, 2], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-22\nt23 = [[0, 2, 3, 5, 6, 8], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 45]; // 6-23\nt24 = [[0, 1, 3, 4, 6, 8], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 46]; // 6-24\nt25 = [[0, 1, 3, 5, 6, 8], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 47]; // 6-25\nt26 = [[0, 1, 3, 5, 7, 8], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 48]; // 6-26\nt27 = [[0, 1, 3, 4, 6, 9], [2, 2, 5, 2, 2, 2], [1, 0, 0, 1, 0, 1, 1, 0], 0]; // 6-27\nt28 = [[0, 1, 3, 5, 6, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 49]; // 6-28\nt29 = [[0, 1, 3, 6, 8, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 50]; // 6- d29\nt30 = [[0, 1, 3, 6, 7, 9], [2, 2, 4, 2, 2, 3], [2, 0, 0, 2, 0, 2, 2, 0], 0]; // 6-30\nt31 = [[0, 1, 3, 5, 8, 9], [2, 2, 3, 4, 3, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-31\nt32 = [[0, 2, 4, 5, 7, 9], [1, 4, 3, 2, 5, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-32 C\nt33 = [[0, 2, 3, 5, 7, 9], [1, 4, 3, 2, 4, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-33\nt34 = [[0, 1, 3, 5, 7, 9], [1, 4, 2, 4, 2, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-34\nt35 = [[0, 2, 4, 6, 8, 10], [0, 6, 0, 6, 0, 3], [6, 6, 6, 6, 6, 6, 6, 6], 0]; // 6-35 F\nt36 = [[0, 1, 2, 3, 4, 7], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 3]; // 6-36\nt37 = [[0, 1, 2, 3, 4, 8], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 4]; // 6-37\nt38 = [[0, 1, 2, 3, 7, 8], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 6]; // 6-38\nconst t39 = [[0, 2, 3, 4, 5, 8], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 10]; // 6-39\nconst t40 = [[0, 1, 2, 3, 5, 8], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 11]; // 6-40\nconst t41 = [[0, 1, 2, 3, 6, 8], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 6-41\nconst t42 = [[0, 1, 2, 3, 6, 9], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 13]; // 6-42\nconst t43 = [[0, 1, 2, 5, 6, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 17]; // 6-43\nconst t44 = [[0, 1, 2, 5, 6, 9], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 19]; // 6-44\nconst t45 = [[0, 2, 3, 4, 6, 9], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 23]; // 6-45\nconst t46 = [[0, 1, 2, 4, 6, 9], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 24]; // 6-46\nconst t47 = [[0, 1, 2, 4, 7, 9], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 25]; // 6-47\nconst t48 = [[0, 1, 2, 5, 7, 9], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 26]; // 6-48\nconst t49 = [[0, 1, 3, 4, 7, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 28]; // 6-49\nconst t50 = [[0, 1, 4, 6, 7, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 29]; // 6-50\nconst hexachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38, t39,\n    t40, t41, t42, t43, t44, t45, t46, t47, t48, t49,\n    t50];\n\n\nt1   = [[0, 1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-1\nt2   = [[0, 1, 2, 3, 4, 5, 7], [5, 5, 4, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-2\nt3   = [[0, 1, 2, 3, 4, 5, 8], [5, 4, 4, 4, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-3\nt4   = [[0, 1, 2, 3, 4, 6, 7], [5, 4, 4, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-4\nt5   = [[0, 1, 2, 3, 5, 6, 7], [5, 4, 3, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-5\nt6   = [[0, 1, 2, 3, 4, 7, 8], [5, 3, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-6\nt7   = [[0, 1, 2, 3, 6, 7, 8], [5, 3, 2, 3, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-7\nt8   = [[0, 2, 3, 4, 5, 6, 8], [4, 5, 4, 4, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-8\nt9   = [[0, 1, 2, 3, 4, 6, 8], [4, 5, 3, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-9\nt10 = [[0, 1, 2, 3, 4, 6, 9], [4, 4, 5, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-10\nt11 = [[0, 1, 3, 4, 5, 6, 8], [4, 4, 4, 4, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-11\nt12 = [[0, 1, 2, 3, 4, 7, 9], [4, 4, 4, 3, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 36]; // 7-12 z\nt13 = [[0, 1, 2, 4, 5, 6, 8], [4, 4, 3, 5, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-13\nt14 = [[0, 1, 2, 3, 5, 7, 8], [4, 4, 3, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-14\nt15 = [[0, 1, 2, 4, 6, 7, 8], [4, 4, 2, 4, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-15\nt16 = [[0, 1, 2, 3, 5, 6, 9], [4, 3, 5, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-16\nt17 = [[0, 1, 2, 4, 5, 6, 9], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 7-17 z\nt18 = [[0, 1, 2, 3, 5, 8, 9], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 38]; // 7-18 z\nt19 = [[0, 1, 2, 3, 6, 7, 9], [4, 3, 4, 3, 4, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-19\nt20 = [[0, 1, 2, 4, 7, 8, 9], [4, 3, 3, 4, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-20\nt21 = [[0, 1, 2, 4, 5, 8, 9], [4, 2, 4, 6, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-21\nt22 = [[0, 1, 2, 5, 6, 8, 9], [4, 2, 4, 5, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-22\nt23 = [[0, 2, 3, 4, 5, 7, 9], [3, 5, 4, 3, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-23\nt24 = [[0, 1, 2, 3, 5, 7, 9], [3, 5, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-24\nt25 = [[0, 2, 3, 4, 6, 7, 9], [3, 4, 5, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-25\nt26 = [[0, 1, 3, 4, 5, 7, 9], [3, 4, 4, 5, 3, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-26\nt27 = [[0, 1, 2, 4, 5, 7, 9], [3, 4, 4, 4, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-27\nt28 = [[0, 1, 3, 5, 6, 7, 9], [3, 4, 4, 4, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-28\nt29 = [[0, 1, 2, 4, 6, 7, 9], [3, 4, 4, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-29\nt30 = [[0, 1, 2, 4, 6, 8, 9], [3, 4, 3, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-30\nt31 = [[0, 1, 3, 4, 6, 7, 9], [3, 3, 6, 3, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-31\nt32 = [[0, 1, 3, 4, 6, 8, 9], [3, 3, 5, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-32\nt33 = [[0, 1, 2, 4, 6, 8, 10], [2, 6, 2, 6, 2, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-33\nt34 = [[0, 1, 3, 4, 6, 8, 10], [2, 5, 4, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-34\nt35 = [[0, 1, 3, 5, 6, 8, 10], [2, 5, 4, 3, 6, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-35\nt36 = [[0, 1, 2, 3, 5, 6, 8], [4, 4, 4, 3, 4, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 7-36 z\nt37 = [[0, 1, 3, 4, 5, 7, 8], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 17]; // 7-37 z\nt38 = [[0, 1, 2, 4, 5, 7, 8], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 18]; // 7-38 z\nconst septachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38];\n\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7],  [7, 6, 5, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 8],  [6, 6, 5, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 9],  [6, 5, 6, 5, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-3\nt4   = [[0, 1, 2, 3, 4, 5, 7, 8],  [6, 5, 5, 5, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-4\nt5   = [[0, 1, 2, 3, 4, 6, 7, 8],  [6, 5, 4, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-5\nt6   = [[0, 1, 2, 3, 5, 6, 7, 8],  [6, 5, 4, 4, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-6\nt7   = [[0, 1, 2, 3, 4, 5, 8, 9],  [6, 4, 5, 6, 5, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-7\nt8   = [[0, 1, 2, 3, 4, 7, 8, 9],  [6, 4, 4, 5, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-8\nt9   = [[0, 1, 2, 3, 6, 7, 8, 9],  [6, 4, 4, 4, 6, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-9\nt10 = [[0, 2, 3, 4, 5, 6, 7, 9],   [5, 6, 6, 4, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-10\nt11 = [[0, 1, 2, 3, 4, 5, 7, 9],   [5, 6, 5, 5, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-11\nt12 = [[0, 1, 3, 4, 5, 6, 7, 9],   [5, 5, 6, 5, 4, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-12\nt13 = [[0, 1, 2, 3, 4, 6, 7, 9],   [5, 5, 6, 4, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-13\nt14 = [[0, 1, 2, 4, 5, 6, 7, 9],   [5, 5, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-14\nt15 = [[0, 1, 2, 3, 4, 6, 8, 9],   [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 29]; // 8-15  zz\nt16 = [[0, 1, 2, 3, 5, 7, 8, 9],   [5, 5, 4, 5, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-16\nt17 = [[0, 1, 3, 4, 5, 6, 8, 9],   [5, 4, 6, 6, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-17\nt18 = [[0, 1, 2, 3, 5, 6, 8, 9],   [5, 4, 6, 5, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-18\nt19 = [[0, 1, 2, 4, 5, 6, 8, 9],   [5, 4, 5, 7, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-19\nt20 = [[0, 1, 2, 4, 5, 7, 8, 9],   [5, 4, 5, 6, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-20\nt21 = [[0, 1, 2, 3, 4, 6, 8, 10], [4, 7, 4, 6, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-21\nt22 = [[0, 1, 2, 3, 5, 6, 8, 10], [4, 6, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-22\nt23 = [[0, 1, 2, 3, 5, 7, 8, 10], [4, 6, 5, 4, 7, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-23\nt24 = [[0, 1, 2, 4, 5, 6, 8, 10], [4, 6, 4, 7, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-24\nt25 = [[0, 1, 2, 4, 6, 7, 8, 10], [4, 6, 4, 6, 4, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-25\nt26 = [[0, 1, 2, 4, 5, 7, 9, 10], [4, 5, 6, 5, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-26\nt27 = [[0, 1, 2, 4, 5, 7, 8, 10], [4, 5, 6, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-27\nt28 = [[0, 1, 3, 4, 6, 7, 9, 10], [4, 4, 8, 4, 4, 4], [4, 4, 4, 4, 0, 0, 0, 0], 0]; // 8-28\nt29 = [[0, 1, 2, 3, 5, 6, 7, 9],   [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 15]; // 8-29\nconst octachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8],  [8, 7, 6, 6, 6, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 7, 9],  [7, 7, 7, 6, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 8, 9],  [7, 6, 7, 7, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-3\nt4   = [[0, 1, 2, 3, 4, 5, 7, 8, 9],  [7, 6, 6, 7, 7, 3], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 9-4\nt5   = [[0, 1, 2, 3, 4, 6, 7, 8, 9],  [7, 6, 6, 6, 7, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-5\nt6   = [[0, 1, 2, 3, 4, 5, 6, 8, 10], [6, 8, 6, 7, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-6\nt7   = [[0, 1, 2, 3, 4, 5, 7, 8, 10], [6, 7, 7, 6, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-7\nt8   = [[0, 1, 2, 3, 4, 6, 7, 8, 10], [6, 7, 6, 7, 6, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-8\nt9   = [[0, 1, 2, 3, 5, 6, 7, 8, 10], [6, 7, 6, 6, 8, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-9\nt10 = [[0, 1, 2, 3, 4, 6, 7, 9, 10], [6, 6, 8, 6, 6, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-10\nt11 = [[0, 1, 2, 3, 5, 6, 7, 9, 10], [6, 6, 7, 7, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-11\nt12 = [[0, 1, 2, 4, 5, 6, 8, 9, 10], [6, 6, 6, 9, 6, 3], [3, 3, 3, 3, 0, 0, 0, 0], 0]; // 9-12\nconst nonachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],    [9, 8, 8, 8, 8, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10],  [8, 9, 8, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10],  [8, 8, 9, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-3\nt4   = [[0, 1, 2, 3, 4, 5, 6, 8, 9, 10],  [8, 8, 8, 9, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-4\nt5   = [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10],  [8, 8, 8, 8, 9, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-5\nt6   = [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10],  [8, 8, 8, 8, 8, 5], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 10-6\nconst decachord = [undefined, t1, t2, t3, t4, t5, t6];\n\nt1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [10, 10, 10, 10, 10, 5], [1, 1, 1, 1, 0, 0, 0, 0], 0];// 11-1\nconst undecachord = [undefined, t1];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 12, 12, 12, 12, 6], [12, 12, 12, 12, 0, 0, 0, 0], 0]; // 12-1\nconst dodecachord = [undefined, t1];\n\n\n// -------------------------------------------------------------------------------\nexport const FORTE = [undefined, monad, diad, trichord, tetrachord, pentachord, hexachord, septachord, octachord,\n    nonachord, decachord, undecachord, dodecachord];\n\n\n// to access the data for a single form, use:\n// forte   [size[tetra]] = 4\n//         [number[forte]] = 3\n//         [data[0=pitches, 1=ICV, 2=invariance vector [morris], 3 = Z-relation]]\n//         [element in list]\n//-------------------------------------------------------------------------------\n\n// cardinality 1\nconst card_1 ={ '1,0': [FORTE[1][1][0], // 1\n    FORTE[1][1][2], // var\n    FORTE[1][1][1], //icv\n],\n};\n// cardinality 2\nconst card_2 ={ '1,0': [FORTE[2][1][0], // 2\n    FORTE[2][1][2], // var\n    FORTE[2][1][1], //icv\n],\n    '2,0': [FORTE[2][2][0], // 3\n        FORTE[2][2][2], // var\n        FORTE[2][2][1], //icv\n    ],\n    '3,0': [FORTE[2][3][0], // 4\n        FORTE[2][3][2], // var\n        FORTE[2][3][1], //icv\n    ],\n    '4,0': [FORTE[2][4][0], // 5\n        FORTE[2][4][2], // var\n        FORTE[2][4][1], //icv\n    ],\n    '5,0': [FORTE[2][5][0], // 6\n        FORTE[2][5][2], // var\n        FORTE[2][5][1], //icv\n    ],\n    '6,0': [FORTE[2][6][0], // 7\n        FORTE[2][6][2], // var\n        FORTE[2][6][1], //icv\n    ],\n};\n// cardinality 3\nconst card_3 ={ '1,0': [FORTE[3][1][0], // 8\n    FORTE[3][1][2], // var\n    FORTE[3][1][1], //icv\n],\n    '2,1': [FORTE[3][2][0], // 9\n        FORTE[3][2][2], // var\n        FORTE[3][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3], // 10\n        FORTE[3][2][2], // var\n        FORTE[3][2][1], //icv\n    ],\n    '3,1': [FORTE[3][3][0], // 11\n        FORTE[3][3][2], // var\n        FORTE[3][3][1], //icv\n    ],\n    '3,-1': [[0, 3, 4], // 12\n        FORTE[3][3][2], // var\n        FORTE[3][3][1], //icv\n    ],\n    '4,1': [FORTE[3][4][0], // 13\n        FORTE[3][4][2], // var\n        FORTE[3][4][1], //icv\n    ],\n    '4,-1': [[0, 4, 5], // 14\n        FORTE[3][4][2], // var\n        FORTE[3][4][1], //icv\n    ],\n    '5,1': [FORTE[3][5][0], // 15\n        FORTE[3][5][2], // var\n        FORTE[3][5][1], //icv\n    ],\n    '5,-1': [[0, 5, 6], // 16\n        FORTE[3][5][2], // var\n        FORTE[3][5][1], //icv\n    ],\n    '6,0': [FORTE[3][6][0], // 17\n        FORTE[3][6][2], // var\n        FORTE[3][6][1], //icv\n    ],\n    '7,1': [FORTE[3][7][0], // 18\n        FORTE[3][7][2], // var\n        FORTE[3][7][1], //icv\n    ],\n    '7,-1': [[0, 3, 5], // 19\n        FORTE[3][7][2], // var\n        FORTE[3][7][1], //icv\n    ],\n    '8,1': [FORTE[3][8][0], // 20\n        FORTE[3][8][2], // var\n        FORTE[3][8][1], //icv\n    ],\n    '8,-1': [[0, 4, 6], // 21\n        FORTE[3][8][2], // var\n        FORTE[3][8][1], //icv\n    ],\n    '9,0': [FORTE[3][9][0], // 22\n        FORTE[3][9][2], // var\n        FORTE[3][9][1], //icv\n    ],\n    '10,0': [FORTE[3][10][0], // 23\n        FORTE[3][10][2], // var\n        FORTE[3][10][1], //icv\n    ],\n    '11,1': [FORTE[3][11][0], // 24\n        FORTE[3][11][2], // var\n        FORTE[3][11][1], //icv\n    ],\n    '11,-1': [[0, 4, 7], // 25\n        FORTE[3][11][2], // var\n        FORTE[3][11][1], //icv\n    ],\n    '12,0': [FORTE[3][12][0], // 26\n        FORTE[3][12][2], // var\n        FORTE[3][12][1], //icv\n    ],\n};\n// cardinality 4\nconst card_4 ={ '1,0': [FORTE[4][1][0], // 27\n    FORTE[4][1][2], // var\n    FORTE[4][1][1], //icv\n],\n    '2,1': [FORTE[4][2][0], // 28\n        FORTE[4][2][2], // var\n        FORTE[4][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4], // 29\n        FORTE[4][2][2], // var\n        FORTE[4][2][1], //icv\n    ],\n    '3,0': [FORTE[4][3][0], // 30\n        FORTE[4][3][2], // var\n        FORTE[4][3][1], //icv\n    ],\n    '4,1': [FORTE[4][4][0], // 31\n        FORTE[4][4][2], // var\n        FORTE[4][4][1], //icv\n    ],\n    '4,-1': [[0, 3, 4, 5], // 32\n        FORTE[4][4][2], // var\n        FORTE[4][4][1], //icv\n    ],\n    '5,1': [FORTE[4][5][0], // 33\n        FORTE[4][5][2], // var\n        FORTE[4][5][1], //icv\n    ],\n    '5,-1': [[0, 4, 5, 6], // 34\n        FORTE[4][5][2], // var\n        FORTE[4][5][1], //icv\n    ],\n    '6,0': [FORTE[4][6][0], // 35\n        FORTE[4][6][2], // var\n        FORTE[4][6][1], //icv\n    ],\n    '7,0': [FORTE[4][7][0], // 36\n        FORTE[4][7][2], // var\n        FORTE[4][7][1], //icv\n    ],\n    '8,0': [FORTE[4][8][0], // 37\n        FORTE[4][8][2], // var\n        FORTE[4][8][1], //icv\n    ],\n    '9,0': [FORTE[4][9][0], // 38\n        FORTE[4][9][2], // var\n        FORTE[4][9][1], //icv\n    ],\n    '10,0': [FORTE[4][10][0], // 39\n        FORTE[4][10][2], // var\n        FORTE[4][10][1], //icv\n    ],\n    '11,1': [FORTE[4][11][0], // 40\n        FORTE[4][11][2], // var\n        FORTE[4][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 4, 5], // 41\n        FORTE[4][11][2], // var\n        FORTE[4][11][1], //icv\n    ],\n    '12,1': [FORTE[4][12][0], // 42\n        FORTE[4][12][2], // var\n        FORTE[4][12][1], //icv\n    ],\n    '12,-1': [[0, 3, 4, 6], // 43\n        FORTE[4][12][2], // var\n        FORTE[4][12][1], //icv\n    ],\n    '13,1': [FORTE[4][13][0], // 44\n        FORTE[4][13][2], // var\n        FORTE[4][13][1], //icv\n    ],\n    '13,-1': [[0, 3, 5, 6], // 45\n        FORTE[4][13][2], // var\n        FORTE[4][13][1], //icv\n    ],\n    '14,1': [FORTE[4][14][0], // 46\n        FORTE[4][14][2], // var\n        FORTE[4][14][1], //icv\n    ],\n    '14,-1': [[0, 4, 5, 7], // 47\n        FORTE[4][14][2], // var\n        FORTE[4][14][1], //icv\n    ],\n    '15,1': [FORTE[4][15][0], // 48\n        FORTE[4][15][2], // var\n        FORTE[4][15][1], //icv\n    ],\n    '15,-1': [[0, 2, 5, 6], // 49\n        FORTE[4][15][2], // var\n        FORTE[4][15][1], //icv\n    ],\n    '16,1': [FORTE[4][16][0], // 50\n        FORTE[4][16][2], // var\n        FORTE[4][16][1], //icv\n    ],\n    '16,-1': [[0, 2, 6, 7], // 51\n        FORTE[4][16][2], // var\n        FORTE[4][16][1], //icv\n    ],\n    '17,0': [FORTE[4][17][0], // 52\n        FORTE[4][17][2], // var\n        FORTE[4][17][1], //icv\n    ],\n    '18,1': [FORTE[4][18][0], // 53\n        FORTE[4][18][2], // var\n        FORTE[4][18][1], //icv\n    ],\n    '18,-1': [[0, 3, 6, 7], // 54\n        FORTE[4][18][2], // var\n        FORTE[4][18][1], //icv\n    ],\n    '19,1': [FORTE[4][19][0], // 55\n        FORTE[4][19][2], // var\n        FORTE[4][19][1], //icv\n    ],\n    '19,-1': [[0, 4, 7, 8], // 56\n        FORTE[4][19][2], // var\n        FORTE[4][19][1], //icv\n    ],\n    '20,0': [FORTE[4][20][0], // 57\n        FORTE[4][20][2], // var\n        FORTE[4][20][1], //icv\n    ],\n    '21,0': [FORTE[4][21][0], // 58\n        FORTE[4][21][2], // var\n        FORTE[4][21][1], //icv\n    ],\n    '22,1': [FORTE[4][22][0], // 59\n        FORTE[4][22][2], // var\n        FORTE[4][22][1], //icv\n    ],\n    '22,-1': [[0, 3, 5, 7], // 60\n        FORTE[4][22][2], // var\n        FORTE[4][22][1], //icv\n    ],\n    '23,0': [FORTE[4][23][0], // 61\n        FORTE[4][23][2], // var\n        FORTE[4][23][1], //icv\n    ],\n    '24,0': [FORTE[4][24][0], // 62\n        FORTE[4][24][2], // var\n        FORTE[4][24][1], //icv\n    ],\n    '25,0': [FORTE[4][25][0], // 63\n        FORTE[4][25][2], // var\n        FORTE[4][25][1], //icv\n    ],\n    '26,0': [FORTE[4][26][0], // 64\n        FORTE[4][26][2], // var\n        FORTE[4][26][1], //icv\n    ],\n    '27,1': [FORTE[4][27][0], // 65\n        FORTE[4][27][2], // var\n        FORTE[4][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 6, 8], // 66\n        FORTE[4][27][2], // var\n        FORTE[4][27][1], //icv\n    ],\n    '28,0': [FORTE[4][28][0], // 67\n        FORTE[4][28][2], // var\n        FORTE[4][28][1], //icv\n    ],\n    '29,1': [FORTE[4][29][0], // 68\n        FORTE[4][29][2], // var\n        FORTE[4][29][1], //icv\n    ],\n    '29,-1': [[0, 4, 6, 7], // 69\n        FORTE[4][29][2], // var\n        FORTE[4][29][1], //icv\n    ],\n};\n// cardinality 5\nconst card_5 ={ '1,0': [FORTE[5][1][0], // 70\n    FORTE[5][1][2], // var\n    FORTE[5][1][1], //icv\n],\n    '2,1': [FORTE[5][2][0], // 71\n        FORTE[5][2][2], // var\n        FORTE[5][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5], // 72\n        FORTE[5][2][2], // var\n        FORTE[5][2][1], //icv\n    ],\n    '3,1': [FORTE[5][3][0], // 73\n        FORTE[5][3][2], // var\n        FORTE[5][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5], // 74\n        FORTE[5][3][2], // var\n        FORTE[5][3][1], //icv\n    ],\n    '4,1': [FORTE[5][4][0], // 75\n        FORTE[5][4][2], // var\n        FORTE[5][4][1], //icv\n    ],\n    '4,-1': [[0, 3, 4, 5, 6], // 76\n        FORTE[5][4][2], // var\n        FORTE[5][4][1], //icv\n    ],\n    '5,1': [FORTE[5][5][0], // 77\n        FORTE[5][5][2], // var\n        FORTE[5][5][1], //icv\n    ],\n    '5,-1': [[0, 4, 5, 6, 7], // 78\n        FORTE[5][5][2], // var\n        FORTE[5][5][1], //icv\n    ],\n    '6,1': [FORTE[5][6][0], // 79\n        FORTE[5][6][2], // var\n        FORTE[5][6][1], //icv\n    ],\n    '6,-1': [[0, 1, 4, 5, 6], // 80\n        FORTE[5][6][2], // var\n        FORTE[5][6][1], //icv\n    ],\n    '7,1': [FORTE[5][7][0], // 81\n        FORTE[5][7][2], // var\n        FORTE[5][7][1], //icv\n    ],\n    '7,-1': [[0, 1, 5, 6, 7], // 82\n        FORTE[5][7][2], // var\n        FORTE[5][7][1], //icv\n    ],\n    '8,0': [FORTE[5][8][0], // 83\n        FORTE[5][8][2], // var\n        FORTE[5][8][1], //icv\n    ],\n    '9,1': [FORTE[5][9][0], // 84\n        FORTE[5][9][2], // var\n        FORTE[5][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6], // 85\n        FORTE[5][9][2], // var\n        FORTE[5][9][1], //icv\n    ],\n    '10,1': [FORTE[5][10][0], // 86\n        FORTE[5][10][2], // var\n        FORTE[5][10][1], //icv\n    ],\n    '10,-1': [[0, 2, 3, 5, 6], // 87\n        FORTE[5][10][2], // var\n        FORTE[5][10][1], //icv\n    ],\n    '11,1': [FORTE[5][11][0], // 88\n        FORTE[5][11][2], // var\n        FORTE[5][11][1], //icv\n    ],\n    '11,-1': [[0, 3, 4, 5, 7], // 89\n        FORTE[5][11][2], // var\n        FORTE[5][11][1], //icv\n    ],\n    '12,0': [FORTE[5][12][0], // 90\n        FORTE[5][12][2], // var\n        FORTE[5][12][1], //icv\n    ],\n    '13,1': [FORTE[5][13][0], // 91\n        FORTE[5][13][2], // var\n        FORTE[5][13][1], //icv\n    ],\n    '13,-1': [[0, 4, 6, 7, 8], // 92\n        FORTE[5][13][2], // var\n        FORTE[5][13][1], //icv\n    ],\n    '14,1': [FORTE[5][14][0], // 93\n        FORTE[5][14][2], // var\n        FORTE[5][14][1], //icv\n    ],\n    '14,-1': [[0, 2, 5, 6, 7], // 94\n        FORTE[5][14][2], // var\n        FORTE[5][14][1], //icv\n    ],\n    '15,0': [FORTE[5][15][0], // 95\n        FORTE[5][15][2], // var\n        FORTE[5][15][1], //icv\n    ],\n    '16,1': [FORTE[5][16][0], // 96\n        FORTE[5][16][2], // var\n        FORTE[5][16][1], //icv\n    ],\n    '16,-1': [[0, 3, 4, 6, 7], // 97\n        FORTE[5][16][2], // var\n        FORTE[5][16][1], //icv\n    ],\n    '17,0': [FORTE[5][17][0], // 98\n        FORTE[5][17][2], // var\n        FORTE[5][17][1], //icv\n    ],\n    '18,1': [FORTE[5][18][0], // 99\n        FORTE[5][18][2], // var\n        FORTE[5][18][1], //icv\n    ],\n    '18,-1': [[0, 2, 3, 6, 7], // 100\n        FORTE[5][18][2], // var\n        FORTE[5][18][1], //icv\n    ],\n    '19,1': [FORTE[5][19][0], // 101\n        FORTE[5][19][2], // var\n        FORTE[5][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 4, 6, 7], // 102\n        FORTE[5][19][2], // var\n        FORTE[5][19][1], //icv\n    ],\n    '20,1': [FORTE[5][20][0], // 103\n        FORTE[5][20][2], // var\n        FORTE[5][20][1], //icv\n    ],\n    '20,-1': [[0, 1, 5, 7, 8], // 104\n        FORTE[5][20][2], // var\n        FORTE[5][20][1], //icv\n    ],\n    '21,1': [FORTE[5][21][0], // 105\n        FORTE[5][21][2], // var\n        FORTE[5][21][1], //icv\n    ],\n    '21,-1': [[0, 3, 4, 7, 8], // 106\n        FORTE[5][21][2], // var\n        FORTE[5][21][1], //icv\n    ],\n    '22,0': [FORTE[5][22][0], // 107\n        FORTE[5][22][2], // var\n        FORTE[5][22][1], //icv\n    ],\n    '23,1': [FORTE[5][23][0], // 108\n        FORTE[5][23][2], // var\n        FORTE[5][23][1], //icv\n    ],\n    '23,-1': [[0, 2, 4, 5, 7], // 109\n        FORTE[5][23][2], // var\n        FORTE[5][23][1], //icv\n    ],\n    '24,1': [FORTE[5][24][0], // 110\n        FORTE[5][24][2], // var\n        FORTE[5][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 6, 7], // 111\n        FORTE[5][24][2], // var\n        FORTE[5][24][1], //icv\n    ],\n    '25,1': [FORTE[5][25][0], // 112\n        FORTE[5][25][2], // var\n        FORTE[5][25][1], //icv\n    ],\n    '25,-1': [[0, 3, 5, 6, 8], // 113\n        FORTE[5][25][2], // var\n        FORTE[5][25][1], //icv\n    ],\n    '26,1': [FORTE[5][26][0], // 114\n        FORTE[5][26][2], // var\n        FORTE[5][26][1], //icv\n    ],\n    '26,-1': [[0, 3, 4, 6, 8], // 115\n        FORTE[5][26][2], // var\n        FORTE[5][26][1], //icv\n    ],\n    '27,1': [FORTE[5][27][0], // 116\n        FORTE[5][27][2], // var\n        FORTE[5][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 5, 7, 8], // 117\n        FORTE[5][27][2], // var\n        FORTE[5][27][1], //icv\n    ],\n    '28,1': [FORTE[5][28][0], // 118\n        FORTE[5][28][2], // var\n        FORTE[5][28][1], //icv\n    ],\n    '28,-1': [[0, 2, 5, 6, 8], // 119\n        FORTE[5][28][2], // var\n        FORTE[5][28][1], //icv\n    ],\n    '29,1': [FORTE[5][29][0], // 120\n        FORTE[5][29][2], // var\n        FORTE[5][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 5, 7, 8], // 121\n        FORTE[5][29][2], // var\n        FORTE[5][29][1], //icv\n    ],\n    '30,1': [FORTE[5][30][0], // 122\n        FORTE[5][30][2], // var\n        FORTE[5][30][1], //icv\n    ],\n    '30,-1': [[0, 2, 4, 7, 8], // 123\n        FORTE[5][30][2], // var\n        FORTE[5][30][1], //icv\n    ],\n    '31,1': [FORTE[5][31][0], // 124\n        FORTE[5][31][2], // var\n        FORTE[5][31][1], //icv\n    ],\n    '31,-1': [[0, 3, 6, 8, 9], // 125\n        FORTE[5][31][2], // var\n        FORTE[5][31][1], //icv\n    ],\n    '32,1': [FORTE[5][32][0], // 126\n        FORTE[5][32][2], // var\n        FORTE[5][32][1], //icv\n    ],\n    '32,-1': [[0, 3, 5, 8, 9], // 127\n        FORTE[5][32][2], // var\n        FORTE[5][32][1], //icv\n    ],\n    '33,0': [FORTE[5][33][0], // 128\n        FORTE[5][33][2], // var\n        FORTE[5][33][1], //icv\n    ],\n    '34,0': [FORTE[5][34][0], // 129\n        FORTE[5][34][2], // var\n        FORTE[5][34][1], //icv\n    ],\n    '35,0': [FORTE[5][35][0], // 130\n        FORTE[5][35][2], // var\n        FORTE[5][35][1], //icv\n    ],\n    '36,1': [FORTE[5][36][0], // 131\n        FORTE[5][36][2], // var\n        FORTE[5][36][1], //icv\n    ],\n    '36,-1': [[0, 3, 5, 6, 7], // 132\n        FORTE[5][36][2], // var\n        FORTE[5][36][1], //icv\n    ],\n    '37,0': [FORTE[5][37][0], // 133\n        FORTE[5][37][2], // var\n        FORTE[5][37][1], //icv\n    ],\n    '38,1': [FORTE[5][38][0], // 134\n        FORTE[5][38][2], // var\n        FORTE[5][38][1], //icv\n    ],\n    '38,-1': [[0, 3, 6, 7, 8], // 135\n        FORTE[5][38][2], // var\n        FORTE[5][38][1], //icv\n    ],\n};\n// cardinality 6\nconst card_6 ={ '1,0': [FORTE[6][1][0], // 136\n    FORTE[6][1][2], // var\n    FORTE[6][1][1], //icv\n],\n    '2,1': [FORTE[6][2][0], // 137\n        FORTE[6][2][2], // var\n        FORTE[6][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6], // 138\n        FORTE[6][2][2], // var\n        FORTE[6][2][1], //icv\n    ],\n    '3,1': [FORTE[6][3][0], // 139\n        FORTE[6][3][2], // var\n        FORTE[6][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5, 6], // 140\n        FORTE[6][3][2], // var\n        FORTE[6][3][1], //icv\n    ],\n    '4,0': [FORTE[6][4][0], // 141\n        FORTE[6][4][2], // var\n        FORTE[6][4][1], //icv\n    ],\n    '5,1': [FORTE[6][5][0], // 142\n        FORTE[6][5][2], // var\n        FORTE[6][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 4, 5, 6, 7], // 143\n        FORTE[6][5][2], // var\n        FORTE[6][5][1], //icv\n    ],\n    '6,0': [FORTE[6][6][0], // 144\n        FORTE[6][6][2], // var\n        FORTE[6][6][1], //icv\n    ],\n    '7,0': [FORTE[6][7][0], // 145\n        FORTE[6][7][2], // var\n        FORTE[6][7][1], //icv\n    ],\n    '8,0': [FORTE[6][8][0], // 146\n        FORTE[6][8][2], // var\n        FORTE[6][8][1], //icv\n    ],\n    '9,1': [FORTE[6][9][0], // 147\n        FORTE[6][9][2], // var\n        FORTE[6][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6, 7], // 148\n        FORTE[6][9][2], // var\n        FORTE[6][9][1], //icv\n    ],\n    '10,1': [FORTE[6][10][0], // 149\n        FORTE[6][10][2], // var\n        FORTE[6][10][1], //icv\n    ],\n    '10,-1': [[0, 2, 3, 4, 6, 7], // 150\n        FORTE[6][10][2], // var\n        FORTE[6][10][1], //icv\n    ],\n    '11,1': [FORTE[6][11][0], // 151\n        FORTE[6][11][2], // var\n        FORTE[6][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 3, 5, 6, 7], // 152\n        FORTE[6][11][2], // var\n        FORTE[6][11][1], //icv\n    ],\n    '12,1': [FORTE[6][12][0], // 153\n        FORTE[6][12][2], // var\n        FORTE[6][12][1], //icv\n    ],\n    '12,-1': [[0, 1, 3, 5, 6, 7], // 154\n        FORTE[6][12][2], // var\n        FORTE[6][12][1], //icv\n    ],\n    '13,0': [FORTE[6][13][0], // 155\n        FORTE[6][13][2], // var\n        FORTE[6][13][1], //icv\n    ],\n    '14,1': [FORTE[6][14][0], // 156\n        FORTE[6][14][2], // var\n        FORTE[6][14][1], //icv\n    ],\n    '14,-1': [[0, 3, 4, 5, 7, 8], // 157\n        FORTE[6][14][2], // var\n        FORTE[6][14][1], //icv\n    ],\n    '15,1': [FORTE[6][15][0], // 158\n        FORTE[6][15][2], // var\n        FORTE[6][15][1], //icv\n    ],\n    '15,-1': [[0, 3, 4, 6, 7, 8], // 159\n        FORTE[6][15][2], // var\n        FORTE[6][15][1], //icv\n    ],\n    '16,1': [FORTE[6][16][0], // 160\n        FORTE[6][16][2], // var\n        FORTE[6][16][1], //icv\n    ],\n    '16,-1': [[0, 2, 3, 4, 7, 8], // 161\n        FORTE[6][16][2], // var\n        FORTE[6][16][1], //icv\n    ],\n    '17,1': [FORTE[6][17][0], // 162\n        FORTE[6][17][2], // var\n        FORTE[6][17][1], //icv\n    ],\n    '17,-1': [[0, 1, 4, 6, 7, 8], // 163\n        FORTE[6][17][2], // var\n        FORTE[6][17][1], //icv\n    ],\n    '18,1': [FORTE[6][18][0], // 164\n        FORTE[6][18][2], // var\n        FORTE[6][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 3, 6, 7, 8], // 165\n        FORTE[6][18][2], // var\n        FORTE[6][18][1], //icv\n    ],\n    '19,1': [FORTE[6][19][0], // 166\n        FORTE[6][19][2], // var\n        FORTE[6][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 4, 5, 7, 8], // 167\n        FORTE[6][19][2], // var\n        FORTE[6][19][1], //icv\n    ],\n    '20,0': [FORTE[6][20][0], // 168\n        FORTE[6][20][2], // var\n        FORTE[6][20][1], //icv\n    ],\n    '21,1': [FORTE[6][21][0], // 169\n        FORTE[6][21][2], // var\n        FORTE[6][21][1], //icv\n    ],\n    '21,-1': [[0, 2, 4, 5, 6, 8], // 170\n        FORTE[6][21][2], // var\n        FORTE[6][21][1], //icv\n    ],\n    '22,1': [FORTE[6][22][0], // 171\n        FORTE[6][22][2], // var\n        FORTE[6][22][1], //icv\n    ],\n    '22,-1': [[0, 2, 4, 6, 7, 8], // 172\n        FORTE[6][22][2], // var\n        FORTE[6][22][1], //icv\n    ],\n    '23,0': [FORTE[6][23][0], // 173\n        FORTE[6][23][2], // var\n        FORTE[6][23][1], //icv\n    ],\n    '24,1': [FORTE[6][24][0], // 174\n        FORTE[6][24][2], // var\n        FORTE[6][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 5, 7, 8], // 175\n        FORTE[6][24][2], // var\n        FORTE[6][24][1], //icv\n    ],\n    '25,1': [FORTE[6][25][0], // 176\n        FORTE[6][25][2], // var\n        FORTE[6][25][1], //icv\n    ],\n    '25,-1': [[0, 2, 3, 5, 7, 8], // 177\n        FORTE[6][25][2], // var\n        FORTE[6][25][1], //icv\n    ],\n    '26,0': [FORTE[6][26][0], // 178\n        FORTE[6][26][2], // var\n        FORTE[6][26][1], //icv\n    ],\n    '27,1': [FORTE[6][27][0], // 179\n        FORTE[6][27][2], // var\n        FORTE[6][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 5, 6, 8, 9], // 180\n        FORTE[6][27][2], // var\n        FORTE[6][27][1], //icv\n    ],\n    '28,0': [FORTE[6][28][0], // 181\n        FORTE[6][28][2], // var\n        FORTE[6][28][1], //icv\n    ],\n    '29,0': [FORTE[6][29][0], // 182\n        FORTE[6][29][2], // var\n        FORTE[6][29][1], //icv\n    ],\n    '30,1': [FORTE[6][30][0], // 183\n        FORTE[6][30][2], // var\n        FORTE[6][30][1], //icv\n    ],\n    '30,-1': [[0, 2, 3, 6, 8, 9], // 184\n        FORTE[6][30][2], // var\n        FORTE[6][30][1], //icv\n    ],\n    '31,1': [FORTE[6][31][0], // 185\n        FORTE[6][31][2], // var\n        FORTE[6][31][1], //icv\n    ],\n    '31,-1': [[0, 1, 4, 6, 8, 9], // 186\n        FORTE[6][31][2], // var\n        FORTE[6][31][1], //icv\n    ],\n    '32,0': [FORTE[6][32][0], // 187\n        FORTE[6][32][2], // var\n        FORTE[6][32][1], //icv\n    ],\n    '33,1': [FORTE[6][33][0], // 188\n        FORTE[6][33][2], // var\n        FORTE[6][33][1], //icv\n    ],\n    '33,-1': [[0, 2, 4, 6, 7, 9], // 189\n        FORTE[6][33][2], // var\n        FORTE[6][33][1], //icv\n    ],\n    '34,1': [FORTE[6][34][0], // 190\n        FORTE[6][34][2], // var\n        FORTE[6][34][1], //icv\n    ],\n    '34,-1': [[0, 2, 4, 6, 8, 9], // 191\n        FORTE[6][34][2], // var\n        FORTE[6][34][1], //icv\n    ],\n    '35,0': [FORTE[6][35][0], // 192\n        FORTE[6][35][2], // var\n        FORTE[6][35][1], //icv\n    ],\n    '36,1': [FORTE[6][36][0], // 193\n        FORTE[6][36][2], // var\n        FORTE[6][36][1], //icv\n    ],\n    '36,-1': [[0, 3, 4, 5, 6, 7], // 194\n        FORTE[6][36][2], // var\n        FORTE[6][36][1], //icv\n    ],\n    '37,0': [FORTE[6][37][0], // 195\n        FORTE[6][37][2], // var\n        FORTE[6][37][1], //icv\n    ],\n    '38,0': [FORTE[6][38][0], // 196\n        FORTE[6][38][2], // var\n        FORTE[6][38][1], //icv\n    ],\n    '39,1': [FORTE[6][39][0], // 197\n        FORTE[6][39][2], // var\n        FORTE[6][39][1], //icv\n    ],\n    '39,-1': [[0, 3, 4, 5, 6, 8], // 198\n        FORTE[6][39][2], // var\n        FORTE[6][39][1], //icv\n    ],\n    '40,1': [FORTE[6][40][0], // 199\n        FORTE[6][40][2], // var\n        FORTE[6][40][1], //icv\n    ],\n    '40,-1': [[0, 3, 5, 6, 7, 8], // 200\n        FORTE[6][40][2], // var\n        FORTE[6][40][1], //icv\n    ],\n    '41,1': [FORTE[6][41][0], // 201\n        FORTE[6][41][2], // var\n        FORTE[6][41][1], //icv\n    ],\n    '41,-1': [[0, 2, 5, 6, 7, 8], // 202\n        FORTE[6][41][2], // var\n        FORTE[6][41][1], //icv\n    ],\n    '42,0': [FORTE[6][42][0], // 203\n        FORTE[6][42][2], // var\n        FORTE[6][42][1], //icv\n    ],\n    '43,1': [FORTE[6][43][0], // 204\n        FORTE[6][43][2], // var\n        FORTE[6][43][1], //icv\n    ],\n    '43,-1': [[0, 2, 3, 6, 7, 8], // 205\n        FORTE[6][43][2], // var\n        FORTE[6][43][1], //icv\n    ],\n    '44,1': [FORTE[6][44][0], // 206\n        FORTE[6][44][2], // var\n        FORTE[6][44][1], //icv\n    ],\n    '44,-1': [[0, 3, 4, 7, 8, 9], // 207\n        FORTE[6][44][2], // var\n        FORTE[6][44][1], //icv\n    ],\n    '45,0': [FORTE[6][45][0], // 208\n        FORTE[6][45][2], // var\n        FORTE[6][45][1], //icv\n    ],\n    '46,1': [FORTE[6][46][0], // 209\n        FORTE[6][46][2], // var\n        FORTE[6][46][1], //icv\n    ],\n    '46,-1': [[0, 3, 5, 7, 8, 9], // 210\n        FORTE[6][46][2], // var\n        FORTE[6][46][1], //icv\n    ],\n    '47,1': [FORTE[6][47][0], // 211\n        FORTE[6][47][2], // var\n        FORTE[6][47][1], //icv\n    ],\n    '47,-1': [[0, 2, 5, 7, 8, 9], // 212\n        FORTE[6][47][2], // var\n        FORTE[6][47][1], //icv\n    ],\n    '48,0': [FORTE[6][48][0], // 213\n        FORTE[6][48][2], // var\n        FORTE[6][48][1], //icv\n    ],\n    '49,0': [FORTE[6][49][0], // 214\n        FORTE[6][49][2], // var\n        FORTE[6][49][1], //icv\n    ],\n    '50,0': [FORTE[6][50][0], // 215\n        FORTE[6][50][2], // var\n        FORTE[6][50][1], //icv\n    ],\n};\n// cardinality 7\nconst card_7 ={ '1,0': [FORTE[7][1][0], // 216\n    FORTE[7][1][2], // var\n    FORTE[7][1][1], //icv\n],\n    '2,1': [FORTE[7][2][0], // 217\n        FORTE[7][2][2], // var\n        FORTE[7][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7], // 218\n        FORTE[7][2][2], // var\n        FORTE[7][2][1], //icv\n    ],\n    '3,1': [FORTE[7][3][0], // 219\n        FORTE[7][3][2], // var\n        FORTE[7][3][1], //icv\n    ],\n    '3,-1': [[0, 3, 4, 5, 6, 7, 8], // 220\n        FORTE[7][3][2], // var\n        FORTE[7][3][1], //icv\n    ],\n    '4,1': [FORTE[7][4][0], // 221\n        FORTE[7][4][2], // var\n        FORTE[7][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 3, 4, 5, 6, 7], // 222\n        FORTE[7][4][2], // var\n        FORTE[7][4][1], //icv\n    ],\n    '5,1': [FORTE[7][5][0], // 223\n        FORTE[7][5][2], // var\n        FORTE[7][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 4, 5, 6, 7], // 224\n        FORTE[7][5][2], // var\n        FORTE[7][5][1], //icv\n    ],\n    '6,1': [FORTE[7][6][0], // 225\n        FORTE[7][6][2], // var\n        FORTE[7][6][1], //icv\n    ],\n    '6,-1': [[0, 1, 4, 5, 6, 7, 8], // 226\n        FORTE[7][6][2], // var\n        FORTE[7][6][1], //icv\n    ],\n    '7,1': [FORTE[7][7][0], // 227\n        FORTE[7][7][2], // var\n        FORTE[7][7][1], //icv\n    ],\n    '7,-1': [[0, 1, 2, 5, 6, 7, 8], // 228\n        FORTE[7][7][2], // var\n        FORTE[7][7][1], //icv\n    ],\n    '8,0': [FORTE[7][8][0], // 229\n        FORTE[7][8][2], // var\n        FORTE[7][8][1], //icv\n    ],\n    '9,1': [FORTE[7][9][0], // 230\n        FORTE[7][9][2], // var\n        FORTE[7][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6, 7, 8], // 231\n        FORTE[7][9][2], // var\n        FORTE[7][9][1], //icv\n    ],\n    '10,1': [FORTE[7][10][0], // 232\n        FORTE[7][10][2], // var\n        FORTE[7][10][1], //icv\n    ],\n    '10,-1': [[0, 3, 5, 6, 7, 8, 9], // 233\n        FORTE[7][10][2], // var\n        FORTE[7][10][1], //icv\n    ],\n    '11,1': [FORTE[7][11][0], // 234\n        FORTE[7][11][2], // var\n        FORTE[7][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 3, 4, 5, 7, 8], // 235\n        FORTE[7][11][2], // var\n        FORTE[7][11][1], //icv\n    ],\n    '12,0': [FORTE[7][12][0], // 236\n        FORTE[7][12][2], // var\n        FORTE[7][12][1], //icv\n    ],\n    '13,1': [FORTE[7][13][0], // 237\n        FORTE[7][13][2], // var\n        FORTE[7][13][1], //icv\n    ],\n    '13,-1': [[0, 2, 3, 4, 6, 7, 8], // 238\n        FORTE[7][13][2], // var\n        FORTE[7][13][1], //icv\n    ],\n    '14,1': [FORTE[7][14][0], // 239\n        FORTE[7][14][2], // var\n        FORTE[7][14][1], //icv\n    ],\n    '14,-1': [[0, 1, 3, 5, 6, 7, 8], // 240\n        FORTE[7][14][2], // var\n        FORTE[7][14][1], //icv\n    ],\n    '15,0': [FORTE[7][15][0], // 241\n        FORTE[7][15][2], // var\n        FORTE[7][15][1], //icv\n    ],\n    '16,1': [FORTE[7][16][0], // 242\n        FORTE[7][16][2], // var\n        FORTE[7][16][1], //icv\n    ],\n    '16,-1': [[0, 3, 4, 6, 7, 8, 9], // 243\n        FORTE[7][16][2], // var\n        FORTE[7][16][1], //icv\n    ],\n    '17,0': [FORTE[7][17][0], // 244\n        FORTE[7][17][2], // var\n        FORTE[7][17][1], //icv\n    ],\n    '18,1': [FORTE[7][18][0], // 245\n        FORTE[7][18][2], // var\n        FORTE[7][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 4, 6, 7, 8, 9], // 246\n        FORTE[7][18][2], // var\n        FORTE[7][18][1], //icv\n    ],\n    '19,1': [FORTE[7][19][0], // 247\n        FORTE[7][19][2], // var\n        FORTE[7][19][1], //icv\n    ],\n    '19,-1': [[0, 2, 3, 6, 7, 8, 9], // 248\n        FORTE[7][19][2], // var\n        FORTE[7][19][1], //icv\n    ],\n    '20,1': [FORTE[7][20][0], // 249\n        FORTE[7][20][2], // var\n        FORTE[7][20][1], //icv\n    ],\n    '20,-1': [[0, 1, 2, 5, 7, 8, 9], // 250\n        FORTE[7][20][2], // var\n        FORTE[7][20][1], //icv\n    ],\n    '21,1': [FORTE[7][21][0], // 251\n        FORTE[7][21][2], // var\n        FORTE[7][21][1], //icv\n    ],\n    '21,-1': [[0, 1, 4, 5, 7, 8, 9], // 252\n        FORTE[7][21][2], // var\n        FORTE[7][21][1], //icv\n    ],\n    '22,0': [FORTE[7][22][0], // 253\n        FORTE[7][22][2], // var\n        FORTE[7][22][1], //icv\n    ],\n    '23,1': [FORTE[7][23][0], // 254\n        FORTE[7][23][2], // var\n        FORTE[7][23][1], //icv\n    ],\n    '23,-1': [[0, 2, 4, 5, 6, 7, 9], // 255\n        FORTE[7][23][2], // var\n        FORTE[7][23][1], //icv\n    ],\n    '24,1': [FORTE[7][24][0], // 256\n        FORTE[7][24][2], // var\n        FORTE[7][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 6, 7, 8, 9], // 257\n        FORTE[7][24][2], // var\n        FORTE[7][24][1], //icv\n    ],\n    '25,1': [FORTE[7][25][0], // 258\n        FORTE[7][25][2], // var\n        FORTE[7][25][1], //icv\n    ],\n    '25,-1': [[0, 2, 3, 5, 6, 7, 9], // 259\n        FORTE[7][25][2], // var\n        FORTE[7][25][1], //icv\n    ],\n    '26,1': [FORTE[7][26][0], // 260\n        FORTE[7][26][2], // var\n        FORTE[7][26][1], //icv\n    ],\n    '26,-1': [[0, 2, 4, 5, 6, 8, 9], // 261\n        FORTE[7][26][2], // var\n        FORTE[7][26][1], //icv\n    ],\n    '27,1': [FORTE[7][27][0], // 262\n        FORTE[7][27][2], // var\n        FORTE[7][27][1], //icv\n    ],\n    '27,-1': [[0, 2, 4, 5, 7, 8, 9], // 263\n        FORTE[7][27][2], // var\n        FORTE[7][27][1], //icv\n    ],\n    '28,1': [FORTE[7][28][0], // 264\n        FORTE[7][28][2], // var\n        FORTE[7][28][1], //icv\n    ],\n    '28,-1': [[0, 2, 3, 4, 6, 8, 9], // 265\n        FORTE[7][28][2], // var\n        FORTE[7][28][1], //icv\n    ],\n    '29,1': [FORTE[7][29][0], // 266\n        FORTE[7][29][2], // var\n        FORTE[7][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 3, 5, 7, 8, 9], // 267\n        FORTE[7][29][2], // var\n        FORTE[7][29][1], //icv\n    ],\n    '30,1': [FORTE[7][30][0], // 268\n        FORTE[7][30][2], // var\n        FORTE[7][30][1], //icv\n    ],\n    '30,-1': [[0, 1, 3, 5, 7, 8, 9], // 269\n        FORTE[7][30][2], // var\n        FORTE[7][30][1], //icv\n    ],\n    '31,1': [FORTE[7][31][0], // 270\n        FORTE[7][31][2], // var\n        FORTE[7][31][1], //icv\n    ],\n    '31,-1': [[0, 2, 3, 5, 6, 8, 9], // 271\n        FORTE[7][31][2], // var\n        FORTE[7][31][1], //icv\n    ],\n    '32,1': [FORTE[7][32][0], // 272\n        FORTE[7][32][2], // var\n        FORTE[7][32][1], //icv\n    ],\n    '32,-1': [[0, 1, 3, 5, 6, 8, 9], // 273\n        FORTE[7][32][2], // var\n        FORTE[7][32][1], //icv\n    ],\n    '33,0': [FORTE[7][33][0], // 274\n        FORTE[7][33][2], // var\n        FORTE[7][33][1], //icv\n    ],\n    '34,0': [FORTE[7][34][0], // 275\n        FORTE[7][34][2], // var\n        FORTE[7][34][1], //icv\n    ],\n    '35,0': [FORTE[7][35][0], // 276\n        FORTE[7][35][2], // var\n        FORTE[7][35][1], //icv\n    ],\n    '36,1': [FORTE[7][36][0], // 277\n        FORTE[7][36][2], // var\n        FORTE[7][36][1], //icv\n    ],\n    '36,-1': [[0, 2, 3, 5, 6, 7, 8], // 278\n        FORTE[7][36][2], // var\n        FORTE[7][36][1], //icv\n    ],\n    '37,0': [FORTE[7][37][0], // 279\n        FORTE[7][37][2], // var\n        FORTE[7][37][1], //icv\n    ],\n    '38,1': [FORTE[7][38][0], // 280\n        FORTE[7][38][2], // var\n        FORTE[7][38][1], //icv\n    ],\n    '38,-1': [[0, 1, 3, 4, 6, 7, 8], // 281\n        FORTE[7][38][2], // var\n        FORTE[7][38][1], //icv\n    ],\n};\n// cardinality 8\nconst card_8 ={ '1,0': [FORTE[8][1][0], // 282\n    FORTE[8][1][2], // var\n    FORTE[8][1][1], //icv\n],\n    '2,1': [FORTE[8][2][0], // 283\n        FORTE[8][2][2], // var\n        FORTE[8][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8], // 284\n        FORTE[8][2][2], // var\n        FORTE[8][2][1], //icv\n    ],\n    '3,0': [FORTE[8][3][0], // 285\n        FORTE[8][3][2], // var\n        FORTE[8][3][1], //icv\n    ],\n    '4,1': [FORTE[8][4][0], // 286\n        FORTE[8][4][2], // var\n        FORTE[8][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 3, 4, 5, 6, 7, 8], // 287\n        FORTE[8][4][2], // var\n        FORTE[8][4][1], //icv\n    ],\n    '5,1': [FORTE[8][5][0], // 288\n        FORTE[8][5][2], // var\n        FORTE[8][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 4, 5, 6, 7, 8], // 289\n        FORTE[8][5][2], // var\n        FORTE[8][5][1], //icv\n    ],\n    '6,0': [FORTE[8][6][0], // 290\n        FORTE[8][6][2], // var\n        FORTE[8][6][1], //icv\n    ],\n    '7,0': [FORTE[8][7][0], // 291\n        FORTE[8][7][2], // var\n        FORTE[8][7][1], //icv\n    ],\n    '8,0': [FORTE[8][8][0], // 292\n        FORTE[8][8][2], // var\n        FORTE[8][8][1], //icv\n    ],\n    '9,0': [FORTE[8][9][0], // 293\n        FORTE[8][9][2], // var\n        FORTE[8][9][1], //icv\n    ],\n    '10,0': [FORTE[8][10][0], // 294\n        FORTE[8][10][2], // var\n        FORTE[8][10][1], //icv\n    ],\n    '11,1': [FORTE[8][11][0], // 295\n        FORTE[8][11][2], // var\n        FORTE[8][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 4, 5, 6, 7, 8, 9], // 296\n        FORTE[8][11][2], // var\n        FORTE[8][11][1], //icv\n    ],\n    '12,1': [FORTE[8][12][0], // 297\n        FORTE[8][12][2], // var\n        FORTE[8][12][1], //icv\n    ],\n    '12,-1': [[0, 2, 3, 4, 5, 6, 8, 9], // 298\n        FORTE[8][12][2], // var\n        FORTE[8][12][1], //icv\n    ],\n    '13,1': [FORTE[8][13][0], // 299\n        FORTE[8][13][2], // var\n        FORTE[8][13][1], //icv\n    ],\n    '13,-1': [[0, 2, 3, 5, 6, 7, 8, 9], // 300\n        FORTE[8][13][2], // var\n        FORTE[8][13][1], //icv\n    ],\n    '14,1': [FORTE[8][14][0], // 301\n        FORTE[8][14][2], // var\n        FORTE[8][14][1], //icv\n    ],\n    '14,-1': [[0, 2, 3, 4, 5, 7, 8, 9], // 302\n        FORTE[8][14][2], // var\n        FORTE[8][14][1], //icv\n    ],\n    '15,1': [FORTE[8][15][0], // 303\n        FORTE[8][15][2], // var\n        FORTE[8][15][1], //icv\n    ],\n    '15,-1': [[0, 1, 3, 5, 6, 7, 8, 9], // 304\n        FORTE[8][15][2], // var\n        FORTE[8][15][1], //icv\n    ],\n    '16,1': [FORTE[8][16][0], // 305\n        FORTE[8][16][2], // var\n        FORTE[8][16][1], //icv\n    ],\n    '16,-1': [[0, 1, 2, 4, 6, 7, 8, 9], // 306\n        FORTE[8][16][2], // var\n        FORTE[8][16][1], //icv\n    ],\n    '17,0': [FORTE[8][17][0], // 307\n        FORTE[8][17][2], // var\n        FORTE[8][17][1], //icv\n    ],\n    '18,1': [FORTE[8][18][0], // 308\n        FORTE[8][18][2], // var\n        FORTE[8][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 3, 4, 6, 7, 8, 9], // 309\n        FORTE[8][18][2], // var\n        FORTE[8][18][1], //icv\n    ],\n    '19,1': [FORTE[8][19][0], // 310\n        FORTE[8][19][2], // var\n        FORTE[8][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 3, 4, 5, 7, 8, 9], // 311\n        FORTE[8][19][2], // var\n        FORTE[8][19][1], //icv\n    ],\n    '20,0': [FORTE[8][20][0], // 312\n        FORTE[8][20][2], // var\n        FORTE[8][20][1], //icv\n    ],\n    '21,0': [FORTE[8][21][0], // 313\n        FORTE[8][21][2], // var\n        FORTE[8][21][1], //icv\n    ],\n    '22,1': [FORTE[8][22][0], // 314\n        FORTE[8][22][2], // var\n        FORTE[8][22][1], //icv\n    ],\n    '22,-1': [[0, 2, 4, 5, 7, 8, 9, 10], // 315\n        FORTE[8][22][2], // var\n        FORTE[8][22][1], //icv\n    ],\n    '23,0': [FORTE[8][23][0], // 316\n        FORTE[8][23][2], // var\n        FORTE[8][23][1], //icv\n    ],\n    '24,0': [FORTE[8][24][0], // 317\n        FORTE[8][24][2], // var\n        FORTE[8][24][1], //icv\n    ],\n    '25,0': [FORTE[8][25][0], // 318\n        FORTE[8][25][2], // var\n        FORTE[8][25][1], //icv\n    ],\n    '26,0': [FORTE[8][26][0], // 319\n        FORTE[8][26][2], // var\n        FORTE[8][26][1], //icv\n    ],\n    '27,1': [FORTE[8][27][0], // 320\n        FORTE[8][27][2], // var\n        FORTE[8][27][1], //icv\n    ],\n    '27,-1': [[0, 2, 3, 5, 6, 8, 9, 10], // 321\n        FORTE[8][27][2], // var\n        FORTE[8][27][1], //icv\n    ],\n    '28,0': [FORTE[8][28][0], // 322\n        FORTE[8][28][2], // var\n        FORTE[8][28][1], //icv\n    ],\n    '29,1': [FORTE[8][29][0], // 323\n        FORTE[8][29][2], // var\n        FORTE[8][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 3, 4, 6, 7, 8, 9], // 324\n        FORTE[8][29][2], // var\n        FORTE[8][29][1], //icv\n    ],\n};\n// cardinality 9\nconst card_9 ={ '1,0': [FORTE[9][1][0], // 325\n    FORTE[9][1][2], // var\n    FORTE[9][1][1], //icv\n],\n    '2,1': [FORTE[9][2][0], // 326\n        FORTE[9][2][2], // var\n        FORTE[9][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8, 9], // 327\n        FORTE[9][2][2], // var\n        FORTE[9][2][1], //icv\n    ],\n    '3,1': [FORTE[9][3][0], // 328\n        FORTE[9][3][2], // var\n        FORTE[9][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5, 6, 7, 8, 9], // 329\n        FORTE[9][3][2], // var\n        FORTE[9][3][1], //icv\n    ],\n    '4,1': [FORTE[9][4][0], // 330\n        FORTE[9][4][2], // var\n        FORTE[9][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 2, 4, 5, 6, 7, 8, 9], // 331\n        FORTE[9][4][2], // var\n        FORTE[9][4][1], //icv\n    ],\n    '5,1': [FORTE[9][5][0], // 332\n        FORTE[9][5][2], // var\n        FORTE[9][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 3, 5, 6, 7, 8, 9], // 333\n        FORTE[9][5][2], // var\n        FORTE[9][5][1], //icv\n    ],\n    '6,0': [FORTE[9][6][0], // 334\n        FORTE[9][6][2], // var\n        FORTE[9][6][1], //icv\n    ],\n    '7,1': [FORTE[9][7][0], // 335\n        FORTE[9][7][2], // var\n        FORTE[9][7][1], //icv\n    ],\n    '7,-1': [[0, 2, 3, 5, 6, 7, 8, 9, 10], // 336\n        FORTE[9][7][2], // var\n        FORTE[9][7][1], //icv\n    ],\n    '8,1': [FORTE[9][8][0], // 337\n        FORTE[9][8][2], // var\n        FORTE[9][8][1], //icv\n    ],\n    '8,-1': [[0, 2, 3, 4, 6, 7, 8, 9, 10], // 338\n        FORTE[9][8][2], // var\n        FORTE[9][8][1], //icv\n    ],\n    '9,0': [FORTE[9][9][0], // 339\n        FORTE[9][9][2], // var\n        FORTE[9][9][1], //icv\n    ],\n    '10,0': [FORTE[9][10][0], // 340\n        FORTE[9][10][2], // var\n        FORTE[9][10][1], //icv\n    ],\n    '11,1': [FORTE[9][11][0], // 341\n        FORTE[9][11][2], // var\n        FORTE[9][11][1], //icv\n    ],\n    '11,-1': [[0, 1, 3, 4, 5, 7, 8, 9, 10], // 342\n        FORTE[9][11][2], // var\n        FORTE[9][11][1], //icv\n    ],\n    '12,0': [FORTE[9][12][0], // 343\n        FORTE[9][12][2], // var\n        FORTE[9][12][1], //icv\n    ],\n};\n// cardinality 10\nconst card_10 ={ '1,0': [FORTE[10][1][0], // 344\n    FORTE[10][1][2], // var\n    FORTE[10][1][1], //icv\n],\n    '2,0': [FORTE[10][2][0], // 345\n        FORTE[10][2][2], // var\n        FORTE[10][2][1], //icv\n    ],\n    '3,0': [FORTE[10][3][0], // 346\n        FORTE[10][3][2], // var\n        FORTE[10][3][1], //icv\n    ],\n    '4,0': [FORTE[10][4][0], // 347\n        FORTE[10][4][2], // var\n        FORTE[10][4][1], //icv\n    ],\n    '5,0': [FORTE[10][5][0], // 348\n        FORTE[10][5][2], // var\n        FORTE[10][5][1], //icv\n    ],\n    '6,0': [FORTE[10][6][0], // 349\n        FORTE[10][6][2], // var\n        FORTE[10][6][1], //icv\n    ],\n};\n// cardinality 11\nconst card_11 ={ '1,0': [FORTE[11][1][0], // 350\n    FORTE[11][1][2], // var\n    FORTE[11][1][1], //icv\n],\n};\n// cardinality 12\nconst card_12 ={ '1,0': [FORTE[12][1][0], // 351\n    FORTE[12][1][2], // var\n    FORTE[12][1][1], //icv\n],\n};\n\n//-------------------------------------------------------------------------------\nexport const SCDICT = { 1: card_1,\n    2: card_2,\n    3: card_3,\n    4: card_4,\n    5: card_5,\n    6: card_6,\n    7: card_7,\n    8: card_8,\n    9: card_9,\n    10: card_10,\n    11: card_11,\n    12: card_12,\n};\n\n//-------------------------------------------------------------------------------\n// thes dicts provide index max fr cardinality key\nexport const TNMAX = { 0: 1, 1: 1, 2: 6, 3: 19, 4: 43, 5: 66, 6: 80,\n    7: 66, 8: 43, 9: 19, 10: 6, 11: 1, 12: 1 };\nexport const TNIMAX = { 0: 1, 1: 1, 2: 6, 3: 12, 4: 29, 5: 38, 6: 50,\n    7: 38, 8: 29, 9: 12, 10: 6, 11: 1, 12: 1 };\n\n// used to find TnI index numbers under Tn classification\nexport const TNREF = {  '1,1,0': 1,\n    '2,1,0': 1,\n    '2,2,0': 2,\n    '2,3,0': 3,\n    '2,4,0': 4,\n    '2,5,0': 5,\n    '2,6,0': 6,\n    '3,1,0': 1,\n    '3,2,1': 2,\n    '3,2,-1': 3,\n    '3,3,1': 4,\n    '3,3,-1': 5,\n    '3,4,1': 6,\n    '3,4,-1': 7,\n    '3,5,1': 8,\n    '3,5,-1': 9,\n    '3,6,0': 10,\n    '3,7,1': 11,\n    '3,7,-1': 12,\n    '3,8,1': 13,\n    '3,8,-1': 14,\n    '3,9,0': 15,\n    '3,10,0': 16,\n    '3,11,1': 17,\n    '3,11,-1': 18,\n    '3,12,0': 19,\n    '4,1,0': 1,\n    '4,2,1': 2,\n    '4,2,-1': 3,\n    '4,3,0': 4,\n    '4,4,1': 5,\n    '4,4,-1': 6,\n    '4,5,1': 7,\n    '4,5,-1': 8,\n    '4,6,0': 9,\n    '4,7,0': 10,\n    '4,8,0': 11,\n    '4,9,0': 12,\n    '4,10,0': 13,\n    '4,11,1': 14,\n    '4,11,-1': 15,\n    '4,12,1': 16,\n    '4,12,-1': 17,\n    '4,13,1': 18,\n    '4,13,-1': 19,\n    '4,14,1': 20,\n    '4,14,-1': 21,\n    '4,15,1': 22,\n    '4,15,-1': 23,\n    '4,16,1': 24,\n    '4,16,-1': 25,\n    '4,17,0': 26,\n    '4,18,1': 27,\n    '4,18,-1': 28,\n    '4,19,1': 29,\n    '4,19,-1': 30,\n    '4,20,0': 31,\n    '4,21,0': 32,\n    '4,22,1': 33,\n    '4,22,-1': 34,\n    '4,23,0': 35,\n    '4,24,0': 36,\n    '4,25,0': 37,\n    '4,26,0': 38,\n    '4,27,1': 39,\n    '4,27,-1': 40,\n    '4,28,0': 41,\n    '4,29,1': 42,\n    '4,29,-1': 43,\n    '5,1,0': 1,\n    '5,2,1': 2,\n    '5,2,-1': 3,\n    '5,3,1': 4,\n    '5,3,-1': 5,\n    '5,4,1': 6,\n    '5,4,-1': 7,\n    '5,5,1': 8,\n    '5,5,-1': 9,\n    '5,6,1': 10,\n    '5,6,-1': 11,\n    '5,7,1': 12,\n    '5,7,-1': 13,\n    '5,8,0': 14,\n    '5,9,1': 15,\n    '5,9,-1': 16,\n    '5,10,1': 17,\n    '5,10,-1': 18,\n    '5,11,1': 19,\n    '5,11,-1': 20,\n    '5,12,0': 21,\n    '5,13,1': 22,\n    '5,13,-1': 23,\n    '5,14,1': 24,\n    '5,14,-1': 25,\n    '5,15,0': 26,\n    '5,16,1': 27,\n    '5,16,-1': 28,\n    '5,17,0': 29,\n    '5,18,1': 30,\n    '5,18,-1': 31,\n    '5,19,1': 32,\n    '5,19,-1': 33,\n    '5,20,1': 34,\n    '5,20,-1': 35,\n    '5,21,1': 36,\n    '5,21,-1': 37,\n    '5,22,0': 38,\n    '5,23,1': 39,\n    '5,23,-1': 40,\n    '5,24,1': 41,\n    '5,24,-1': 42,\n    '5,25,1': 43,\n    '5,25,-1': 44,\n    '5,26,1': 45,\n    '5,26,-1': 46,\n    '5,27,1': 47,\n    '5,27,-1': 48,\n    '5,28,1': 49,\n    '5,28,-1': 50,\n    '5,29,1': 51,\n    '5,29,-1': 52,\n    '5,30,1': 53,\n    '5,30,-1': 54,\n    '5,31,1': 55,\n    '5,31,-1': 56,\n    '5,32,1': 57,\n    '5,32,-1': 58,\n    '5,33,0': 59,\n    '5,34,0': 60,\n    '5,35,0': 61,\n    '5,36,1': 62,\n    '5,36,-1': 63,\n    '5,37,0': 64,\n    '5,38,1': 65,\n    '5,38,-1': 66,\n    '6,1,0': 1,\n    '6,2,1': 2,\n    '6,2,-1': 3,\n    '6,3,1': 4,\n    '6,3,-1': 5,\n    '6,4,0': 6,\n    '6,5,1': 7,\n    '6,5,-1': 8,\n    '6,6,0': 9,\n    '6,7,0': 10,\n    '6,8,0': 11,\n    '6,9,1': 12,\n    '6,9,-1': 13,\n    '6,10,1': 14,\n    '6,10,-1': 15,\n    '6,11,1': 16,\n    '6,11,-1': 17,\n    '6,12,1': 18,\n    '6,12,-1': 19,\n    '6,13,0': 20,\n    '6,14,1': 21,\n    '6,14,-1': 22,\n    '6,15,1': 23,\n    '6,15,-1': 24,\n    '6,16,1': 25,\n    '6,16,-1': 26,\n    '6,17,1': 27,\n    '6,17,-1': 28,\n    '6,18,1': 29,\n    '6,18,-1': 30,\n    '6,19,1': 31,\n    '6,19,-1': 32,\n    '6,20,0': 33,\n    '6,21,1': 34,\n    '6,21,-1': 35,\n    '6,22,1': 36,\n    '6,22,-1': 37,\n    '6,23,0': 38,\n    '6,24,1': 39,\n    '6,24,-1': 40,\n    '6,25,1': 41,\n    '6,25,-1': 42,\n    '6,26,0': 43,\n    '6,27,1': 44,\n    '6,27,-1': 45,\n    '6,28,0': 46,\n    '6,29,0': 47,\n    '6,30,1': 48,\n    '6,30,-1': 49,\n    '6,31,1': 50,\n    '6,31,-1': 51,\n    '6,32,0': 52,\n    '6,33,1': 53,\n    '6,33,-1': 54,\n    '6,34,1': 55,\n    '6,34,-1': 56,\n    '6,35,0': 57,\n    '6,36,1': 58,\n    '6,36,-1': 59,\n    '6,37,0': 60,\n    '6,38,0': 61,\n    '6,39,1': 62,\n    '6,39,-1': 63,\n    '6,40,1': 64,\n    '6,40,-1': 65,\n    '6,41,1': 66,\n    '6,41,-1': 67,\n    '6,42,0': 68,\n    '6,43,1': 69,\n    '6,43,-1': 70,\n    '6,44,1': 71,\n    '6,44,-1': 72,\n    '6,45,0': 73,\n    '6,46,1': 74,\n    '6,46,-1': 75,\n    '6,47,1': 76,\n    '6,47,-1': 77,\n    '6,48,0': 78,\n    '6,49,0': 79,\n    '6,50,0': 80,\n    '7,1,0': 1,\n    '7,2,1': 2,\n    '7,2,-1': 3,\n    '7,3,1': 4,\n    '7,3,-1': 5,\n    '7,4,1': 6,\n    '7,4,-1': 7,\n    '7,5,1': 8,\n    '7,5,-1': 9,\n    '7,6,1': 10,\n    '7,6,-1': 11,\n    '7,7,1': 12,\n    '7,7,-1': 13,\n    '7,8,0': 14,\n    '7,9,1': 15,\n    '7,9,-1': 16,\n    '7,10,1': 17,\n    '7,10,-1': 18,\n    '7,11,1': 19,\n    '7,11,-1': 20,\n    '7,12,0': 21,\n    '7,13,1': 22,\n    '7,13,-1': 23,\n    '7,14,1': 24,\n    '7,14,-1': 25,\n    '7,15,0': 26,\n    '7,16,1': 27,\n    '7,16,-1': 28,\n    '7,17,0': 29,\n    '7,18,1': 30,\n    '7,18,-1': 31,\n    '7,19,1': 32,\n    '7,19,-1': 33,\n    '7,20,1': 34,\n    '7,20,-1': 35,\n    '7,21,1': 36,\n    '7,21,-1': 37,\n    '7,22,0': 38,\n    '7,23,1': 39,\n    '7,23,-1': 40,\n    '7,24,1': 41,\n    '7,24,-1': 42,\n    '7,25,1': 43,\n    '7,25,-1': 44,\n    '7,26,1': 45,\n    '7,26,-1': 46,\n    '7,27,1': 47,\n    '7,27,-1': 48,\n    '7,28,1': 49,\n    '7,28,-1': 50,\n    '7,29,1': 51,\n    '7,29,-1': 52,\n    '7,30,1': 53,\n    '7,30,-1': 54,\n    '7,31,1': 55,\n    '7,31,-1': 56,\n    '7,32,1': 57,\n    '7,32,-1': 58,\n    '7,33,0': 59,\n    '7,34,0': 60,\n    '7,35,0': 61,\n    '7,36,1': 62,\n    '7,36,-1': 63,\n    '7,37,0': 64,\n    '7,38,1': 65,\n    '7,38,-1': 66,\n    '8,1,0': 1,\n    '8,2,1': 2,\n    '8,2,-1': 3,\n    '8,3,0': 4,\n    '8,4,1': 5,\n    '8,4,-1': 6,\n    '8,5,1': 7,\n    '8,5,-1': 8,\n    '8,6,0': 9,\n    '8,7,0': 10,\n    '8,8,0': 11,\n    '8,9,0': 12,\n    '8,10,0': 13,\n    '8,11,1': 14,\n    '8,11,-1': 15,\n    '8,12,1': 16,\n    '8,12,-1': 17,\n    '8,13,1': 18,\n    '8,13,-1': 19,\n    '8,14,1': 20,\n    '8,14,-1': 21,\n    '8,15,1': 22,\n    '8,15,-1': 23,\n    '8,16,1': 24,\n    '8,16,-1': 25,\n    '8,17,0': 26,\n    '8,18,1': 27,\n    '8,18,-1': 28,\n    '8,19,1': 29,\n    '8,19,-1': 30,\n    '8,20,0': 31,\n    '8,21,0': 32,\n    '8,22,1': 33,\n    '8,22,-1': 34,\n    '8,23,0': 35,\n    '8,24,0': 36,\n    '8,25,0': 37,\n    '8,26,0': 38,\n    '8,27,1': 39,\n    '8,27,-1': 40,\n    '8,28,0': 41,\n    '8,29,1': 42,\n    '8,29,-1': 43,\n    '9,1,0': 1,\n    '9,2,1': 2,\n    '9,2,-1': 3,\n    '9,3,1': 4,\n    '9,3,-1': 5,\n    '9,4,1': 6,\n    '9,4,-1': 7,\n    '9,5,1': 8,\n    '9,5,-1': 9,\n    '9,6,0': 10,\n    '9,7,1': 11,\n    '9,7,-1': 12,\n    '9,8,1': 13,\n    '9,8,-1': 14,\n    '9,9,0': 15,\n    '9,10,0': 16,\n    '9,11,1': 17,\n    '9,11,-1': 18,\n    '9,12,0': 19,\n    '10,1,0': 1,\n    '10,2,0': 2,\n    '10,3,0': 3,\n    '10,4,0': 4,\n    '10,5,0': 5,\n    '10,6,0': 6,\n    '11,1,0': 1,\n    '12,1,0': 1,\n};\n\n\n// -----------------------------------------------------------------||||||||||||--\n// reference dict stores name and citation references\n\n// names found from many sources, including:\n// http://solo1.home.mindspring.com/pcsets.htm\n// Larry Solomon, 1997, 2000\n// Larry Solomon's 'The List of Chords, Their Properties and Use in Analysis,'\n// in Interface, Journal of New Music Research , 1982, v11/2.\n// http://www.sweb.cz/vladimir_ladma/english/music/structs/mus_rot.htm\n// Vladimir Ladma, Czech Republic\n\n// some changes: unison prefered to monad\n\n\nexport const SCREF = {\n    '1,1,0': { 'name': ['unison', 'monad', 'singleton'] },\n    '2,1,0': { 'name': ['interval class 1', 'minor second', 'm2', \n        'half step', 'semitone'] },\n    '2,2,0': { 'name': ['interval class 2', 'major second', 'M2', \n        'whole step', 'whole tone'] },\n    '2,3,0': { 'name': ['interval class 3', 'minor third', 'm3'] },\n    '2,4,0': { 'name': ['interval class 4', 'major third', 'M3'] },\n    '2,5,0': { 'name': ['interval class 5', 'perfect fourth', 'P4'] },\n    '2,6,0': { 'name': ['tritone', 'diminished fifth', 'augmented fourth'] },\n    '3,1,0': { 'name': ['chromatic trimirror'] },\n    '3,2,1': { 'name': ['phrygian trichord'] },\n    '3,2,-1': { 'name': ['minor trichord'] },\n    '3,3,1': { 'name': ['major-minor trichord'] },\n    '3,3,-1': { 'name': ['major-minor trichord'] },\n    '3,4,1': { 'name': ['incomplete major-seventh chord'] },\n    '3,4,-1': { 'name': ['incomplete major-seventh chord'] },\n    '3,5,1': { 'name': ['tritone-fourth'] },\n    '3,5,-1': { 'name': ['tritone-fourth'] },\n    '3,6,0': { 'name': ['whole-tone trichord'] },\n    '3,7,1': { 'name': ['incomplete minor-seventh chord'] },\n    '3,7,-1': { 'name': ['incomplete dominant-seventh chord'] },\n    '3,8,1': { 'name': ['incomplete dominant-seventh chord', 'Italian augmented sixth chord'] },\n    '3,8,-1': { 'name': ['incomplete half-diminished seventh chord'] },\n    '3,9,0': { 'name': ['quartal trichord'] },\n    '3,10,0': { 'name': ['diminished triad'] },\n    '3,11,1': { 'name': ['minor triad'] },\n    '3,11,-1': { 'name': ['major triad'] },\n    '3,12,0': { 'name': ['augmented triad', 'equal 3-part octave division'] },\n    '4,1,0': { 'name': ['chromatic tetramirror', 'BACH'] },\n    '4,2,1': { 'name': ['major-second tetracluster'] },\n    '4,2,-1': { 'name': ['major-second tetracluster'] },\n    '4,3,0': { 'name': ['alternating tetramirror'] },\n    '4,4,1': { 'name': ['minor third tetracluster'] },\n    '4,4,-1': { 'name': ['minor third tetracluster'] },\n    '4,5,1': { 'name': ['major third tetracluster'] },\n    '4,5,-1': { 'name': ['major third testacluster'] },\n    '4,6,0': { 'name': ['perfect fourth tetramirror'] },\n    '4,7,0': { 'name': ['Arabian tetramirror'] },\n    '4,8,0': { 'name': ['double-fourth tetramirror'] },\n    '4,9,0': { 'name': ['double tritone tetramirror'] },\n    '4,10,0': { 'name': ['minor tetramirror'] },\n    '4,11,1': { 'name': ['phrygian tetrachord'] },\n    '4,11,-1': { 'name': ['lydian tetrachord', 'major tetrachord'] },\n    '4,12,1': { 'name': ['harmonic minor tetrachord'] },\n    '4,12,-1': { 'name': ['major-third diminished terachord'] },\n    '4,13,1': { 'name': ['minor-second diminished tetrachord'] },\n    '4,13,-1': { 'name': ['perfect-fourth diminished tetrachord'] },\n    '4,14,1': { 'name': ['major-second minor tetrachord'] },\n    '4,14,-1': { 'name': ['perfect-fourth major tetrachord'] },\n    '4,15,1': { 'name': ['all-interval tetrachord'] },\n    '4,15,-1': { 'name': ['all-interval tetrachord'] },\n    '4,16,1': { 'name': ['minor-second quartal tetrachord'] },\n    '4,16,-1': { 'name': ['tritone quartal tetrachord'] },\n    '4,17,0': { 'name': ['major-minor tetramirror'] },\n    '4,18,1': { 'name': ['major-diminished tetrachord'] },\n    '4,18,-1': { 'name': ['minor-diminished tetrachord'] },\n    '4,19,1': { 'name': ['minor-augmented tetrachord'] },\n    '4,19,-1': { 'name': ['augmented major tetrachord'] },\n    '4,20,0': { 'name': ['major seventh chord'] },\n    '4,21,0': { 'name': ['whole-tone tetramirror'] },\n    '4,22,1': { 'name': ['major-second major tetrachord'] },\n    '4,22,-1': { 'name': ['perfect-fourth minor tetrachord'] },\n    '4,23,0': { 'name': ['quartal tetramirror'] },\n    '4,24,0': { 'name': ['augmented seventh chord'] },\n    '4,25,0': { 'name': [\"Messiaen's truncated mode 6\", 'French augmented sixth chord'] },\n    '4,26,0': { 'name': ['minor seventh chord'] },\n    '4,27,1': { 'name': ['half-diminished seventh chord'] },\n    '4,27,-1': { 'name': ['dominant seventh chord',\n        'major minor seventh chord', 'German augmented sixth chord', 'Swiss augmented sixth chord'] },\n    '4,28,0': { 'name': ['diminished seventh chord', 'equal 4-part octave division'] },\n    '4,29,1': { 'name': ['all-interval tetrachord'] },\n    '4,29,-1': { 'name': ['all-interval tetrachord'] },\n    '5,1,0': { 'name': ['chromatic pentamirror'] },\n    '5,2,1': { 'name': ['major-second pentacluster'] },\n    '5,2,-1': { 'name': ['major-second pentacluster'] },\n    '5,3,1': { 'name': ['minor-second major pentachord'] },\n    '5,3,-1': { 'name': ['Spanish pentacluster'] },\n    '5,4,1': { 'name': ['blues pentacluster'] },\n    '5,4,-1': { 'name': ['minor-third pentacluster'] },\n    '5,5,1': { 'name': ['major-third pentacluster'] },\n    '5,5,-1': { 'name': ['major-third pentacluster'] },\n    '5,6,1': { 'name': ['Asian pentacluster', 'quasi raga Megharanji'] },\n    '5,6,-1': { 'name': ['Asian pentacluster'] },\n    '5,7,1': { 'name': ['double pentacluster', 'quasi raga Nabhomani '] },\n    '5,7,-1': { 'name': ['double pentacluster'] },\n    '5,8,0': { 'name': ['tritone-symmetric pentamirror'] },\n    '5,9,1': { 'name': ['tritone-expanding pentachord'] },\n    '5,9,-1': { 'name': ['tritone-contracting pentachord'] },\n    '5,10,1': { 'name': ['alternating pentachord'] },\n    '5,10,-1': { 'name': ['alternating pentachord'] },\n    '5,11,1': { 'name': ['center-cluster pentachord'] },\n    '5,11,-1': { 'name': ['center-cluster pentachord'] },\n    '5,12,0': { 'name': ['locrian pentachord'] },\n    '5,13,1': { 'name': ['augmented pentacluster'] },\n    '5,13,-1': { 'name': ['augmented pentacluster'] },\n    '5,14,1': { 'name': ['double-seconds triple-fourth pentachord'] },\n    '5,14,-1': { 'name': ['double-seconds triple-fourth pentachord'] },\n    '5,15,0': { 'name': ['asssymetric pentamirror'] },\n    '5,16,1': { 'name': ['major-minor-diminished pentachord'] },\n    '5,16,-1': { 'name': ['major-minor diminished pentachord'] },\n    '5,17,0': { 'name': ['minor-major ninth chord'] },\n    '5,18,1': { 'name': ['Roma [Gypsy] pentachord'] },\n    '5,18,-1': { 'name': ['Roma [Gypsy] pentachord'] },\n    '5,19,1': { 'name': ['Javanese pentachord'] },\n    '5,19,-1': { 'name': ['Balinese pentachord'] },\n    '5,20,1': { 'name': ['Balinese Pelog pentatonic', \n        'quasi raga Bhupala', 'quasi raga Bibhas'] },\n    '5,20,-1': { 'name': ['Hirajoshi pentatonic', 'Iwato', 'Sakura', 'quasi raga Saveri'] },\n    '5,21,1': { 'name': ['major-augmented ninth chord', 'Syrian pentatonic',\n        'quasi raga Megharanji'] },\n    '5,21,-1': { 'name': ['Lebanese pentachord', 'augmented-minor chord'] },\n    '5,22,0': { 'name': ['Persian pentamirror', 'quasi raga Ramkali'] },\n    '5,23,1': { 'name': ['dorian pentachord', 'minor pentachord'] },\n    '5,23,-1': { 'name': ['major pentachord'] },\n    '5,24,1': { 'name': ['phrygian pentachord'] },\n    '5,24,-1': { 'name': ['lydian pentachord'] },\n    '5,25,1': { 'name': ['diminished-major ninth chord'] },\n    '5,25,-1': { 'name': ['minor-diminished ninth chord'] },\n    '5,26,1': { 'name': ['diminished-augmented ninth chord'] },\n    '5,26,-1': { 'name': ['augmented-diminished ninth chord'] },\n    '5,27,1': { 'name': ['major-ninth chord'] },\n    '5,27,-1': { 'name': ['minor-ninth chord'] },\n    '5,28,1': { 'name': ['augmented-sixth pentachord'] },\n    '5,28,-1': { 'name': ['Javanese pentatonic', 'augmented-sixth pentachord'] },\n    '5,29,1': { 'name': ['Kumoi pentachord'] },\n    '5,29,-1': { 'name': ['Kumoi pentachord'] },\n    '5,30,1': { 'name': ['enigmatic pentachord'] },\n    '5,30,-1': { 'name': ['enigmatic pentachord', 'altered pentatonic'] },\n    '5,31,1': { 'name': ['diminished minor-ninth chord'] },\n    '5,31,-1': { 'name': ['flat-ninth pentachord', 'quasi raga Ranjaniraga'] },\n    '5,32,1': { 'name': ['Neapolitan pentachord'] },\n    '5,32,-1': { 'name': ['Neapolitan pentachord'] },\n    '5,33,0': { 'name': ['whole-tone pentachord'] },\n    '5,34,0': { 'name': ['dominant-ninth', 'major-minor', 'Prometheus pentamirror',\n        'dominant pentatonic'] },\n    '5,35,0': { 'name': ['major pentatonic', 'black-key scale', 'blues pentatonic',\n        'slendro', 'quartal pentamirror'] },\n    '5,36,1': { 'name': ['major-seventh pentacluster'] },\n    '5,36,-1': { 'name': ['minor-seventh pentacluster'] },\n    '5,37,0': { 'name': ['center-cluster pentamirror'] },\n    '5,38,1': { 'name': ['diminished pentacluster'] },\n    '5,38,-1': { 'name': ['diminished pentacluster'] },\n    '6,1,0': { 'name': ['A all combinatorial [P6, I11, RI5, RI11]', 'chromatic hexamirror',\n        'first-order all-combinatorial'] },\n    '6,2,1': { 'name': ['combinatorial I [I11]'] },\n    '6,2,-1': { 'name': ['combinatorial I [I1]'] },\n    '6,3,1': {},\n    '6,3,-1': {},\n    '6,4,0': { 'name': ['combinatorial RI [RI6]'] },\n    '6,5,1': { 'name': ['combinatorial I [I11]'] },\n    '6,5,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,6,0': { 'name': ['double cluster hexamirror'] },\n    '6,7,0': { 'name': ['B all combinatorial [P3, P9, I5, R6, R12, R8]', \n        \"Messiaen's mode 5\",\n        'second-order all combinatorial'] },\n    '6,8,0': { 'name': ['D all combinatorial [P6, I1, RI7]'] },\n    '6,9,1': { 'name': ['combinatorial I [I11]'] },\n    '6,9,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,10,1': {},\n    '6,10,-1': {},\n    '6,11,1': {},\n    '6,11,-1': {},\n    '6,12,1': {},\n    '6,12,-1': {},\n    '6,13,0': { 'name': ['alternating hexamirror', 'combinatorial I [I7]'] },\n    '6,14,1': { 'name': ['combinatorial P [P6]'] },\n    '6,14,-1': { 'name': ['combinatorial P [P6]'] },\n    '6,15,1': { 'name': ['combinatorial I [I11]'] },\n    '6,15,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,16,1': { 'name': ['combinatorial I [I3]'] },\n    '6,16,-1': { 'name': ['combinatorial I [I1]', 'quasi raga Megha'] },\n    '6,17,1': { 'name': ['all tri-chord hexachord'] },\n    '6,17,-1': { 'name': ['all tri-chord hexachord [inverted form]'] },\n    '6,18,1': { 'name': ['combinatorial I [I11]'] },\n    '6,18,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,19,1': {},\n    '6,19,-1': {},\n    '6,20,0': { 'name': \n    ['E all combinatorial [P2, P6, P10, I3, I7, R4, R8, RI1, RI5, RI9]',\n        \"Messiaen's truncated mode 3\", 'Genus tertium',\n        'third-order all combinatorial'] },\n    '6,21,1': { 'name': ['combinatorial I [I1]'] },\n    '6,21,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,22,1': { 'name': ['combinatorial I [I11]'] },\n    '6,22,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,23,0': { 'name': ['combinatorial RI [RI8]', 'super-locrian hexa mirror'] },\n    '6,24,1': {},\n    '6,24,-1': { 'name': ['melodic-minor hexachord'] },\n    '6,25,1': { 'name': ['locrian hexachord'] },\n    '6,25,-1': { 'name': ['minor hexachord'] },\n    '6,26,0': { 'name': ['phrygian hexamirror', 'combinatorial RI [RI8]'] },\n    '6,27,1': { 'name': ['combinatorial I [I11]'] },\n    '6,27,-1': { 'name': ['combinatorial I [I1]', 'pyramid hexachord'] },\n    '6,28,0': { 'name': ['double-phrygian heachord', 'combinatorial RI [RI6]'] },\n    '6,29,0': { 'name': ['combinatorial RI [RI9]'] },\n    '6,30,1': { 'name': [\"Messiaen's truncated mode 2\", 'minor-bitonal hexachord',\n        'combinatorial R [R6]', 'combinatorial I [I1, I7]'] },\n    '6,30,-1': { 'name': [\"Stravinsky's Petrouchka-chord\", \"Messiaen's truncated mode 2\",\n        'major-bitonal hexachord', 'combinatorial R [R6]',\n        'combinatorial I [I1, I7]'] },\n    '6,31,1': { 'name': ['combinatorial I [I7]'] },\n    '6,31,-1': { 'name': ['combinatorial I [I11]'] },\n    '6,32,0': { 'name': ['C all combinatorial [P6, I3, RI9]', 'Guidon/Arezzo',\n        'Arezzo major diatonic', 'major hexamirror', 'quartal hexamirror',\n        'first-order all combinatorial'] },\n    '6,33,1': { 'name': ['dorian hexachord', 'combinatorial I [I6]'] },\n    '6,33,-1': { 'name': ['dominant-eleventh', 'lydian hexachord', 'combinatorial I [I1]'] },\n    '6,34,1': { 'name': [\"Scriabin's Mystic-chord\", 'Prometheus hexachord',\n        'combinatorial I [I11]'] },\n    '6,34,-1': { 'name': ['augmented-eleventh', 'harmonic hexachord', \n        'combinatorial I [I7]'] },\n    '6,35,0': { 'name': ['whole tone scale', '6 equal part division',\n        'F all-combinatorial [P1, P3, P5, P7, P9, P11, I1, I3, I5, I7, '\n                              + 'I9, I11, R2, R4, R6, R8, R10, RI2, RI4, RI6, RI8, RI10]',\n        \"Messiaen's mode 1\", 'sixth-order all combinatorial'] },\n    '6,36,1': {},\n    '6,36,-1': {},\n    '6,37,0': { 'name': ['combinatorial RI [RI4]'] },\n    '6,38,0': { 'name': ['combinatorial RI [RI3]'] },\n    '6,39,1': {},\n    '6,39,-1': {},\n    '6,40,1': {},\n    '6,40,-1': {},\n    '6,41,1': {},\n    '6,41,-1': {},\n    '6,42,0': { 'name': ['combinatorial RI [RI3]'] },\n    '6,43,1': { 'name': ['complement of all tri-chord hexachord'] },\n    '6,43,-1': { 'name': ['complement of all-tri-chord hexachord [inverted form]'] },\n    '6,44,1': { 'name': ['Schoenberg Anagram hexachord'] },\n    '6,44,-1': { 'name': ['quasi raga Bauli'] },\n    '6,45,0': { 'name': ['combinatorial RI [RI6]'] },\n    '6,46,1': {},\n    '6,46,-1': {},\n    '6,47,1': {},\n    '6,47,-1': { 'name': ['blues scale'] },\n    '6,48,0': { 'name': ['combinatorial RI [RI2]'] },\n    '6,49,0': { 'name': ['combinatorial RI [RI4]', 'Prometheus Neapolitan mode'] },\n    '6,50,0': { 'name': ['combinatorial RI [RI1]'] },\n    '7,1,0': { 'name': ['chromatic heptamirror'] },\n    '7,2,1': {},\n    '7,2,-1': {},\n    '7,3,1': {},\n    '7,3,-1': {},\n    '7,4,1': {},\n    '7,4,-1': {},\n    '7,5,1': {},\n    '7,5,-1': {},\n    '7,6,1': {},\n    '7,6,-1': {},\n    '7,7,1': {},\n    '7,7,-1': {},\n    '7,8,0': {},\n    '7,9,1': {},\n    '7,9,-1': {},\n    '7,10,1': {},\n    '7,10,-1': {},\n    '7,11,1': {},\n    '7,11,-1': {},\n    '7,12,0': {},\n    '7,13,1': {},\n    '7,13,-1': {},\n    '7,14,1': {},\n    '7,14,-1': {},\n    '7,15,0': {},\n    '7,16,1': { 'name': [\"Debussy's heptatonic\"] },\n    '7,16,-1': {},\n    '7,17,0': {},\n    '7,18,1': {},\n    '7,18,-1': {},\n    '7,19,1': {},\n    '7,19,-1': {},\n    '7,20,1': { 'name': ['chromatic phrygian inverse'] },\n    '7,20,-1': { 'name': ['Greek chromatic', 'chromatic mixolydian', 'chromatic dorian',\n        'quasi raga Pantuvarali', 'mela Kanakangi'] },\n    '7,21,1': {},\n    '7,21,-1': { 'name': ['Gypsy [Roma] hexatonic'] },\n    '7,22,0': { 'name': ['double harmonic scale', 'Persian', 'major Gypsy [Roma]',\n        'Hungarian minor', 'double harmonic scale', 'Asian',\n        'quasi raga Mayamdavagaula'] },\n    '7,23,1': {},\n    '7,23,-1': { 'name': ['tritone major heptachord'] },\n    '7,24,1': {},\n    '7,24,-1': { 'name': ['mystic heptaachord', 'Enigmatic heptatonic'] },\n    '7,25,1': {},\n    '7,25,-1': {},\n    '7,26,1': {},\n    '7,26,-1': {},\n    '7,27,1': {},\n    '7,27,-1': { 'name': ['modified blues'] },\n    '7,28,1': {},\n    '7,28,-1': {},\n    '7,29,1': {},\n    '7,29,-1': {},\n    '7,30,1': { 'name': ['Neapolitan-minor mode'] },\n    '7,30,-1': {},\n    '7,31,1': { 'name': ['alternating heptachord', 'Hungarian major mode'] },\n    '7,31,-1': { 'name': ['diminished scale', 'alternating heptachord'] },\n    '7,32,1': { 'name': ['harmonic minor scale', 'Spanish Gypsy', 'mela Kiravani'] },\n    '7,32,-1': { 'name': ['harmonic major scale', 'harmonic minor inverse', 'mela Cakravana',\n        'quasi raga Ahir Bhairav'] },\n    '7,33,0': { 'name': ['Neapolitan-major mode', 'leading-whole-tone mode'] },\n    '7,34,0': { 'name': ['melodic minor ascending scale', 'jazz minor',\n        'augmented thirteenth heptamirror', 'harmonic/super-locrian'] },\n    '7,35,0': { 'name': ['major scale', 'major diatonic heptachord', 'natural minor scale',\n        'dominant thirteenth', 'locrian', 'phrygian', 'major inverse'] },\n    '7,36,1': {},\n    '7,36,-1': {},\n    '7,37,0': {},\n    '7,38,1': {},\n    '7,38,-1': {},\n    '8,1,0': { 'name': ['chromatic octamirror'] },\n    '8,2,1': {},\n    '8,2,-1': {},\n    '8,3,0': {},\n    '8,4,1': {},\n    '8,4,-1': {},\n    '8,5,1': {},\n    '8,5,-1': {},\n    '8,6,0': {},\n    '8,7,0': {},\n    '8,8,0': {},\n    '8,9,0': { 'name': [\"Messiaen's mode 4\"] },\n    '8,10,0': {},\n    '8,11,1': {},\n    '8,11,-1': { 'name': ['blues octatonic'] },\n    '8,12,1': {},\n    '8,12,-1': {},\n    '8,13,1': { 'name': ['blues octatonic'] },\n    '8,13,-1': {},\n    '8,14,1': {},\n    '8,14,-1': {},\n    '8,15,1': {},\n    '8,15,-1': {},\n    '8,16,1': {},\n    '8,16,-1': { 'name': ['enigmatic octachord'] },\n    '8,17,0': {},\n    '8,18,1': {},\n    '8,18,-1': {},\n    '8,19,1': {},\n    '8,19,-1': {},\n    '8,20,0': {},\n    '8,21,0': {},\n    '8,22,1': {},\n    '8,22,-1': { 'name': ['Spanish octatonic scale'] },\n    '8,23,0': { 'name': ['Greek', 'blues', 'quartal octachord', 'diatonic octad'] },\n    '8,24,0': {},\n    '8,25,0': { 'name': [\"Messiaen's mode 6\"] },\n    '8,26,0': { 'name': ['blues', 'Spanish phrygian'] },\n    '8,27,1': {},\n    '8,27,-1': {},\n    '8,28,0': { 'name': ['octatonic scale', \"Messiaen's mode 2\", \n        'alternating octatonic scale',\n        'diminished scale'] },\n    '8,29,1': {},\n    '8,29,-1': {},\n    '9,1,0': { 'name': ['chromatic nonamirror'] },\n    '9,2,1': {},\n    '9,2,-1': {},\n    '9,3,1': {},\n    '9,3,-1': {},\n    '9,4,1': {},\n    '9,4,-1': {},\n    '9,5,1': {},\n    '9,5,-1': {},\n    '9,6,0': {},\n    '9,7,1': { 'name': ['nonatonic blues'] },\n    '9,7,-1': {},\n    '9,8,1': {},\n    '9,8,-1': {},\n    '9,9,0': {},\n    '9,10,0': {},\n    '9,11,1': {},\n    '9,11,-1': { 'name': ['diminishing nonachord'] },\n    '9,12,0': { 'name': [\"Messiaen's mode 3\", 'Tsjerepnin'] },\n    '10,1,0': { 'name': ['chromatic decamirror'] },\n    '10,2,0': {},\n    '10,3,0': {},\n    '10,4,0': {},\n    '10,5,0': { 'name': ['major-minor mixed'] },\n    '10,6,0': { 'name': [\"Messiaen's mode 7\"] },\n    '11,1,0': { 'name': ['chromatic undecamirror'] },\n    '12,1,0': { 'name': ['aggregate', 'dodecachord', 'twelve-tone chromatic',\n        'chromatic scale', 'dodecamirror'] },\n};\n\nexport function forteIndexToInversionsAvailable(card, index) {\n    if (card < 1 || card > 12) {\n        throw new Error(`cardinality ${card} is not valid`);\n    }\n    if (index < 1 || index > TNMAX[card]) {\n        throw new Error(`index ${index} is invalid`);\n    }\n    // get morris invaraince vector\n    const morris = FORTE[card][index][2];\n    if (morris[1] > 0) { // second value stored inversion status\n        return [0];\n    } else {\n        return [-1, 1];\n    }\n}\n\nfunction _chordTableAddress(cardinality, forteClass, inversion, pcOriginal) {\n    return {\n        cardinality,\n        forteClass,\n        inversion,\n        pcOriginal,\n    };\n}\n\nfunction _validateAddress(address) {\n    if (address !== undefined && address.cardinality !== undefined) {\n        // got an object...\n        address = [address.cardinality, address.forteClass, address.inversion, address.pcOriginal];\n    }\n    \n    const [card, index] = address.slice(0, 2);\n    let inversion;\n    if (address.length >= 3 && address[2] !== undefined) {\n        inversion = address[2];\n    }\n    if (card < 1 || card > 13) {\n        throw new Error(`cardinality ${card} not valid`);\n    }\n    // using TN mode for all comparions\n    if (index < 1 || index > TNMAX[card]) {\n        throw new Error(`index ${index} not valid`);\n    }\n    const inversionsAvailable = forteIndexToInversionsAvailable(card, index);\n    if (inversion !== undefined) {\n        if (!inversionsAvailable.includes(inversion)) {\n            throw new Error(`inversion ${inversion} not valid`);\n        }\n    }\n    if (inversion === undefined) { // get a default inversion\n        if (inversionsAvailable.includes(0)) {\n            inversion = 0;\n        } else {\n            inversion = 1;\n        }\n    }\n    return [card, index, inversion];\n}\n\nexport function addressToTransposedNormalForm(address) {\n    const [card, index, inversion] = _validateAddress(address);\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][0];\n}\n\nexport function addressToPrimeForm(address) {\n    const [card, index, inversion] = _validateAddress(address.slice(0, 2));\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][0];\n}\n\nexport function addressToIntervalVector(address) {\n    const [card, index, inversion] = _validateAddress(address);\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][2];\n}\n\nexport function intervalVectorToAddress(vector) {\n    const post = [];\n    for (let card = 1; card < 13; card++) {\n        let num = 0;\n        for (const sc of FORTE[card]) {\n            if (sc === undefined) {\n                num += 1;\n                continue; // first, used for spacing\n            }\n            // index 1 is vector\n            if (common.arrayEquals(sc[1], vector)) {\n                post.push(_chordTableAddress(card, num));\n            }\n            num += 1;\n        }\n    }\n    return post;\n}\n    \nexport function addressToZAddress(address) {\n    const [card, index, unused_inversion] = _validateAddress(address);\n    const z = FORTE[card][index][3];\n    if (z === 0) {\n        return undefined;\n    } else {\n        let zReal = z;\n        if (Array.isArray(z)) {\n            zReal = z[0];\n        }\n        const zAddress = _validateAddress([card, zReal, undefined]);\n        return _chordTableAddress(zAddress[0], zAddress[1], zAddress[2]);\n    }\n}\n\nexport function addressToCommonNames(address) {\n    const addressNew = _validateAddress(address);\n    const refDict = SCREF[String(addressNew)];\n    return refDict.name;\n}\n\nexport function addressToForteName(address, classification='tn') {\n    const [card, index, inversion] = _validateAddress(address);\n    let iStr;\n    if (classification.toLowerCase() === 'tn') {\n        if (inversion === -1) {\n            iStr = 'B';\n        } else if (inversion === 1) {\n            iStr = 'A';\n        } else if (inversion === 0) {\n            iStr = '';\n        }\n    } else { // tni, ignore inversion\n        iStr = '';\n    }\n    return `${card}-${index}${iStr}`;\n}\n\nexport function seekChordTablesAddress(c) {\n    const pcSet = c.orderedPitchClasses;\n    if (!(pcSet.length)) {\n        throw new Error(\n            'cannot access chord tables address for Chord with no pitches'\n        );\n    } \n    const card = pcSet.length;\n    if (card === 1) { // its a singleton: return\n        return _chordTableAddress(1, 1, 0, pcSet[0]);\n    } else if (card === 12) { // its the aggregate\n        return _chordTableAddress(12, 1, 0, 0);\n    }\n    // go through each rotation of pcSet\n    const candidates = [];\n    for (let rot = 0; rot < card; rot++) {\n        const testSetOrig = pcSet.slice(rot);\n        for (let rotRemainder = 0; rotRemainder < rot; rotRemainder++) {\n            testSetOrig.push(pcSet[rotRemainder]);   \n        }\n        // transpose to lead with zero\n        const testSetOriginalPC = testSetOrig[0];\n        const testSet = [];\n        for (const x of testSetOrig) {\n            const zeroTransposed = posMod(x - testSetOriginalPC, 12);\n            testSet.push(zeroTransposed);\n        }\n        // create inversion; first take difference from 12 mod 12\n        const testSetInvert = [];\n        for (const x of testSet) {\n            testSetInvert.push(posMod(12 - x, 12));\n        }\n        testSetInvert.reverse(); // reverse order (first steps now last)\n        // transpose all steps (were last) to zero, mod 12\n        const testSetInvertOriginalPC = testSetInvert[0];        \n        for (let i = 0; i < testSetInvert.length; i++) {\n            testSetInvert[i] = posMod(testSetInvert[i] + (12 - testSetInvertOriginalPC), 12);\n        }\n        const candidateTuple = [testSet, testSetInvert, testSetOriginalPC];\n        candidates.push(candidateTuple);\n    }    \n    // compare sets to those in table\n    let match = false;\n    let matchedPCOriginal;\n    let index;\n    let inversion;\n\n    for (let indexCandidate = 0; indexCandidate < FORTE[card].length; indexCandidate++) {\n        const dataLine = FORTE[card][indexCandidate];\n        if (dataLine === undefined) {\n            continue; // spacer lines\n        }\n        const dataLinePcs = dataLine[0];\n        const inversionsAvailable = forteIndexToInversionsAvailable(card, indexCandidate);\n        for (const [candidate, candidateInversion, candidateOriginalPC] of candidates) {\n            if (common.arrayEquals(dataLinePcs, candidate)) {\n                index = indexCandidate;\n                if (inversionsAvailable.includes(0)) {\n                    inversion = 0;\n                } else {\n                    inversion = 1;\n                }\n                matchedPCOriginal = candidateOriginalPC;\n                match = true;\n                break;\n            } else if (common.arrayEquals(dataLinePcs, candidateInversion)) {\n                index = indexCandidate;\n                if (inversionsAvailable.includes(0)) {\n                    inversion = 0;\n                } else {\n                    inversion = -1;\n                }\n                matchedPCOriginal = candidateOriginalPC;\n                match = true;\n                break;\n            }\n        }\n    }\n    if (!match) {\n        throw new Error(`cannot find a chord table address for ${pcSet}`);\n    }\n    return _chordTableAddress(card, index, inversion, matchedPCOriginal);\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/chord -- Chord\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\n\nimport { Music21Exception } from './exceptions21.js';\nimport { interval } from './interval.js';\nimport { note } from './note.js';\nimport * as chordTables from './chordTables.js';\n\n/**\n * chord Module. See {@link music21.chord} namespace for more details\n *\n * @exports music21/chord\n */\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @namespace music21.chord\n * @memberof music21\n * @requires music21/note\n */\nexport const chord = {};\n\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @class Chord\n * @memberof music21.chord\n * @param {Array<string|music21.note.Note|music21.pitch.Pitch>} [notes] - an Array of strings\n * (see {@link music21.pitch.Pitch} for valid formats), note.Note, or pitch.Pitch objects.\n * @extends music21.note.NotRest\n * @property {number} length - the number of pitches in the Chord (readonly)\n * @property {Array<music21.pitch.Pitch>} pitches - an Array of Pitch objects in the chord. (Consider the Array read only and pass in a new Array to change)\n * @property {Boolean} [isChord=true]\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=false]\n */\nexport class Chord extends note.NotRest {\n    constructor(notes) {\n        super();\n        if (typeof notes === 'undefined') {\n            notes = [];\n        } else if (typeof notes === 'string') {\n            notes = notes.split(/\\s+/);\n        }\n        this.isChord = true; // for speed\n        this.isNote = false; // for speed\n        this.isRest = false; // for speed\n\n        this._overrides = {};\n        this._cache = {};\n\n        this._notes = [];\n        this._chordTablesAddress = undefined;\n        this._chordTablesAddressNeedsUpdating = true; // only update when needed\n\n        notes.forEach(this.add, this, false);\n        this.sortPitches();\n    }\n    \n    get length() {\n        return this._notes.length;\n    }\n    get pitches() {\n        const tempPitches = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            tempPitches.push(this._notes[i].pitch);\n        }\n        return tempPitches;\n    }\n    set pitches(tempPitches) {\n        this._notes = [];\n        for (let i = 0; i < tempPitches.length; i++) {\n            let addNote;\n            if (typeof tempPitches[i] === 'string') {\n                addNote = new note.Note(tempPitches[i]);\n            } else if (tempPitches[i].isClassOrSubclass('Pitch')) {\n                addNote = new note.Note();\n                addNote.pitch = tempPitches[i];\n            } else if (tempPitches[i].isClassOrSubclass('Note')) {\n                addNote = tempPitches[i];\n            } else {\n                console.warn('bad pitch', tempPitches[i]);\n                throw new Music21Exception(\n                    'Cannot add pitch from ' + tempPitches[i]\n                );\n            }\n            this._notes.push(addNote);\n        }\n        this._cache = {};\n        this._overrides = {};\n    }\n    get orderedPitchClasses() {\n        const pcGroup = [];\n        for (const p of this.pitches) {\n            if (pcGroup.includes(p.pitchClass)) {\n                continue;\n            }\n            pcGroup.push(p.pitchClass);\n        }\n        pcGroup.sort((a, b) => a - b);\n        return pcGroup;\n    }\n    \n    get chordTablesAddress() {\n        if (this._chordTablesAddressNeedsUpdating) {\n            this._chordTablesAddress = chordTables.seekChordTablesAddress(this);\n        }\n        this._chordTablesAddressNeedsUpdating = false;\n        return this._chordTablesAddress;\n    }\n    \n    get commonName() {\n        // TODO: many more exemptions from music21p\n        const cta = this.chordTablesAddress;\n        const ctn = chordTables.addressToCommonNames(cta);\n        const forteClass = this.forteClass;\n        const enharmonicTests = {\n            '3-11A': () => this.isMinorTriad(),\n            '3-11B': () => this.isMajorTriad(),\n            '3-10': () => this.isDiminishedTriad(),\n            '3-12': () => this.isAugmentedTriad(),\n        };\n        if (enharmonicTests[forteClass] !== undefined) {\n            let out = ctn[0];\n            const test = enharmonicTests[forteClass];\n            if (!test()) {\n                out = 'enharmonic equivalent to ' + out;\n            }\n            return out;\n        }\n        \n        if (ctn === undefined) {\n            return '';            \n        } else {\n            return ctn[0];           \n        }\n    }\n    \n    get forteClass() {\n        return chordTables.addressToForteName(this.chordTablesAddress, 'tn');\n    }\n\n    get forteClassNumber() {\n        return this.chordTablesAddress.forteClass;\n    }\n    \n    get forteClassTnI() {\n        return chordTables.addressToForteName(this.chordTablesAddress, 'tni');\n    }\n    \n    areZRelations(other) {\n        const zRelationAddress = chordTables.addressToZAddress(this.chordTablesAddress);\n        if (zRelationAddress === undefined) {\n            return false;\n        }\n        for (const key of ['cardinality', 'forteClass', 'inversion']) {\n            if (other.chordTablesAddress[key] !== zRelationAddress[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    getZRelation() {\n        if (!this.hasZRelation) {\n            return undefined;\n        }\n        const chordTablesAddress = this.chordTablesAddress;\n        const v = chordTables.addressToIntervalVector(chordTablesAddress);\n        const addresses = chordTables.intervalVectorToAddress(v);\n        let other;\n        for (const thisAddress of addresses) {\n            if (thisAddress.forteClass !== chordTablesAddress.forteClass) {\n                other = thisAddress;                \n            }\n        }\n        // other should always be defined;\n        const prime = chordTables.addressToTransposedNormalForm(other);\n        return new Chord(prime);\n    }\n    \n    get hasZRelation() {\n        const post = chordTables.addressToZAddress(this.chordTablesAddress);\n        if (post !== undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n    get intervalVector() {\n        return chordTables.addressToIntervalVector(this.chordTablesAddress);        \n    }\n    \n//    get intervalVectorString() {\n//        \n//    }\n//    \n//    static formatVectorString() {\n//        // needs pitch._convertPitchClassToStr\n//    }\n    \n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            // console.log(midLine, 'midLine');\n            let maxDNNfromCenter = 0;\n            const pA = this.pitches;\n            for (let i = 0; i < this.pitches.length; i++) {\n                const p = pA[i];\n                const DNNfromCenter = p.diatonicNoteNum - midLine;\n                // >= not > so that the highest pitch wins the tie and thus stem down.\n                if (Math.abs(DNNfromCenter) >= Math.abs(maxDNNfromCenter)) {\n                    maxDNNfromCenter = DNNfromCenter;\n                }\n            }\n            if (maxDNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Adds a note to the chord, sorting the note array\n     *\n     * @memberof music21.chord.Chord\n     * @param {string|music21.note.Note|music21.pitch.Pitch} notes - the Note or Pitch to be added or a string defining a pitch.\n     * @param {boolean} runSort - Sort after running (default true)\n     * @returns {music21.chord.Chord} the original chord.\n     */\n    add(notes, runSort = true) {\n        if (!(notes instanceof Array)) {\n            notes = [notes];\n        }\n        for (let noteObj of notes) {\n            // takes in either a note or a pitch\n            if (typeof noteObj === 'string') {\n                noteObj = new note.Note(noteObj);\n            } else if (noteObj.isClassOrSubclass('Pitch')) {\n                const pitchObj = noteObj;\n                const noteObj2 = new note.Note();\n                noteObj2.pitch = pitchObj;\n                noteObj = noteObj2;\n            }\n            this._notes.push(noteObj);\n        }\n        // inefficient because sorts after each add, but safe and #(p) is small\n        if (runSort === true) {\n            this.sortPitches();\n        }\n        this._cache = {};\n        return this;\n    }\n\n    sortPitches() {\n        this._notes.sort((a, b) => a.pitch.ps - b.pitch.ps);        \n    }\n    \n    // TODO: add remove\n\n    /**\n     * Removes any pitches that appear more than once (in any octave), removing the higher ones, and returns a new Chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.chord.Chord} A new Chord object with duplicate pitches removed.\n     */\n    removeDuplicatePitches() {\n        const stepsFound = [];\n        const nonDuplicatingPitches = [];\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (stepsFound.indexOf(p.step) === -1) {\n                stepsFound.push(p.step);\n                nonDuplicatingPitches.push(p);\n            }\n        }\n        const closedChord = new chord.Chord(nonDuplicatingPitches);\n        return closedChord;\n    }\n    /**\n     * Finds the Root of the chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.pitch.Pitch} the root of the chord.\n     */\n    root(newroot) {\n        if (newroot !== undefined) {\n            this._overrides.root = newroot;\n            this._cache.root = newroot;\n            this._cache.inversion = undefined;\n        }\n\n        if (this._overrides.root !== undefined) {\n            return this._cache.root;\n        }\n\n        if (this._cache.root !== undefined) {\n            return this._cache.root;\n        }\n\n        const closedChord = this.removeDuplicatePitches();\n        /* var chordBass = closedChord.bass(); */\n        const closedPitches = closedChord.pitches;\n        if (closedPitches.length === 0) {\n            throw new Music21Exception('No notes in Chord!');\n        } else if (closedPitches.length === 1) {\n            return this.pitches[0];\n        }\n        const indexOfPitchesWithPerfectlyStackedThirds = [];\n        const testSteps = [3, 5, 7, 2, 4, 6];\n        for (let i = 0; i < closedPitches.length; i++) {\n            const p = closedPitches[i];\n            const currentListOfThirds = [];\n            for (let tsIndex = 0; tsIndex < testSteps.length; tsIndex++) {\n                const chordStepPitch = closedChord.getChordStep(\n                    testSteps[tsIndex],\n                    p\n                );\n                if (chordStepPitch !== undefined) {\n                    // console.log(p.name + \" \" + testSteps[tsIndex].toString() + \" \" + chordStepPitch.name);\n                    currentListOfThirds.push(true);\n                } else {\n                    currentListOfThirds.push(false);\n                }\n            }\n            // console.log(currentListOfThirds);\n            let hasFalse = false;\n            for (let j = 0; j < closedPitches.length - 1; j++) {\n                if (currentListOfThirds[j] === false) {\n                    hasFalse = true;\n                }\n            }\n            if (hasFalse === false) {\n                indexOfPitchesWithPerfectlyStackedThirds.push(i);\n                return closedChord.pitches[i]; // should do more, but fine...\n                // should test rootedness function, etc. 13ths. etc.\n            }\n        }\n        const newRoot = closedChord.pitches[0]; // fallback, just return the bass...\n        this._cache.root = newRoot;\n        return newRoot;\n    }\n    /**\n     * Returns the number of semitones above the root that a given chordstep is.\n     *\n     * For instance, in a G dominant 7th chord (G, B, D, F), would\n     * return 4 for chordStep=3, since the third of the chord (B) is four semitones above G.\n     *\n     * @memberof music21.chord.Chord\n     * @param {number} chordStep - the step to find, e.g., 1, 2, 3, etc.\n     * @param {music21.pitch.Pitch} [testRoot] - the pitch to temporarily consider the root.\n     * @returns {number|undefined} Number of semitones above the root for this chord step or undefined if no pitch matches that chord step.\n     */\n    semitonesFromChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        const tempChordStep = this.getChordStep(chordStep, testRoot);\n        if (tempChordStep === undefined) {\n            return undefined;\n        } else {\n            let semitones = (tempChordStep.ps - testRoot.ps) % 12;\n            if (semitones < 0) {\n                semitones += 12;\n            }\n            return semitones;\n        }\n    }\n    /**\n     * Gets the lowest note (based on .ps not name) in the chord.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {music21.pitch.Pitch} bass pitch\n     */\n    bass() {\n        let lowest;\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (lowest === undefined) {\n                lowest = p;\n            } else if (p.ps < lowest.ps) {\n                lowest = p;\n            }\n        }\n        return lowest;\n    }\n    /**\n     * Counts the number of non-duplicate pitch MIDI Numbers in the chord.\n     *\n     * Call after \"closedPosition()\" to get Forte style cardinality disregarding octave.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {number}\n     */\n    cardinality() {\n        const uniqueChord = this.removeDuplicatePitches();\n        return uniqueChord.pitches.length;\n    }\n\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isMajorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isMinorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isDiminishedTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 6) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @memberof music21.chord.Chord\n    * @returns {Boolean}\n    */\n    isAugmentedTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 8) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    \n    isDominantSeventh() {\n        return this.isSeventhOfType([0, 4, 7, 10]);\n    }\n    \n    isDiminishedSeventh() {\n        return this.isSeventhOfType([0, 3, 6, 9]);        \n    }\n\n    isSeventhOfType(intervalArray) {\n        if (intervalArray === undefined) {\n            throw new Music21Exception('intervalArray is required');\n        }\n        const third = this.third;\n        const fifth = this.fifth;\n        const seventh = this.seventh;\n\n        if (\n            third === undefined\n            || fifth === undefined\n            || seventh === undefined\n        ) {\n            return false;\n        }\n\n        const root = this.root();\n        \n        for (const thisPitch of this.pitches) {\n            const thisInterval = new interval.Interval(root, thisPitch);\n            if (!intervalArray.includes(thisInterval.chromatic.mod12)) {\n                return false;\n            }\n//            // check if it doesn't have any other pitches, such as C E F- G Bb != Dominant Seventh\n//            if (!ignoreSpelling && !chordalNames.includes(thisPitch.name)) {\n//                return false;\n//            }\n        }\n        return true;\n\n    \n    }\n    \n\n    /**\n     * canBeDominantV - Returns true if the chord is a Major Triad or a Dominant Seventh\n     *\n     * @return {Boolean}\n     */\n    canBeDominantV() {\n        if (this.isMajorTriad() || this.isDominantSeventh()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns true if the chord is a major or minor triad\n     *\n     * @memberof music21.chord.Chord\n     * @returns {Boolean}\n     */\n    canBeTonic() {\n        if (this.isMajorTriad() || this.isMinorTriad()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the inversion of the chord as a number (root-position = 0)\n     *\n     * Unlike music21 version, cannot set the inversion, yet.\n     *\n     * TODO: add.\n     *\n     * @memberof music21.chord.Chord\n     * @returns {number}\n     */\n    inversion() {\n        const bass = this.bass();\n        const root = this.root();\n        const chordStepsToInversions = [1, 6, 4, 2, 7, 5, 3];\n        for (let i = 0; i < chordStepsToInversions.length; i++) {\n            const testNote = this.getChordStep(chordStepsToInversions[i], bass);\n            if (testNote !== undefined && testNote.name === root.name) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * @memberof music21.chord.Chord\n     * @param {object} options - a dictionary of options `{clef: {@music21.clef.Clef} }` is especially important\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const clef = options.clef;\n\n        const pitchKeys = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            pitchKeys.push(this._notes[i].pitch.vexflowName(clef));\n        }\n        const vfn = new Vex.Flow.StaveNote({\n            keys: pitchKeys,\n            duration: this.duration.vexflowDuration,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, options); // clean up stuff...\n        for (let i = 0; i < this._notes.length; i++) {\n            const tn = this._notes[i];\n            if (tn.pitch.accidental !== undefined) {\n                if (\n                    tn.pitch.accidental.vexflowModifier !== 'n'\n                    && tn.pitch.accidental.displayStatus !== false\n                ) {\n                    vfn.addAccidental(\n                        i,\n                        new Vex.Flow.Accidental(\n                            tn.pitch.accidental.vexflowModifier\n                        )\n                    );\n                } else if (\n                    tn.pitch.accidental.displayType === 'always'\n                    || tn.pitch.accidental.displayStatus === true\n                ) {\n                    vfn.addAccidental(\n                        i,\n                        new Vex.Flow.Accidental(\n                            tn.pitch.accidental.vexflowModifier\n                        )\n                    );\n                }\n            }\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n    /**\n     * Returns the Pitch object that is a Generic interval (2, 3, 4, etc., but not 9, 10, etc.) above\n     * the `.root()`\n     *\n     * In case there is more that one note with that designation (e.g., `[A-C-C#-E].getChordStep(3)`)\n     * the first one in `.pitches` is returned.\n     *\n     * @memberof music21.chord.Chord\n     * @param {Int} chordStep a positive integer representing the chord step\n     * @param {music21.pitch.Pitch} [testRoot] - the Pitch to use as a temporary root\n     * @returns {music21.pitch.Pitch|undefined}\n     */\n    getChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        if (chordStep >= 8) {\n            chordStep %= 7;\n        }\n        const thisPitches = this.pitches;\n        const testRootDNN = testRoot.diatonicNoteNum;\n        for (let i = 0; i < thisPitches.length; i++) {\n            const thisPitch = thisPitches[i];\n            let thisInterval\n                = (thisPitch.diatonicNoteNum - testRootDNN + 1) % 7; // fast cludge\n            if (thisInterval <= 0) {\n                thisInterval += 7;\n            }\n            if (thisInterval === chordStep) {\n                return thisPitch;\n            }\n        }\n        return undefined;\n    }\n\n    get third() {\n        return this.getChordStep(3);\n    }\n    get fifth() {\n        return this.getChordStep(5);\n    }\n    get seventh() {\n        return this.getChordStep(7);\n    }\n}\nchord.Chord = Chord;\n\nchord.chordDefinitions = {\n    major: ['M3', 'm3'],\n    minor: ['m3', 'M3'],\n    diminished: ['m3', 'm3'],\n    augmented: ['M3', 'M3'],\n    'major-seventh': ['M3', 'm3', 'M3'],\n    'dominant-seventh': ['M3', 'm3', 'm3'],\n    'minor-seventh': ['m3', 'M3', 'm3'],\n    'diminished-seventh': ['m3', 'm3', 'm3'],\n    'half-diminished-seventh': ['m3', 'm3', 'M3'],\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/clef -- Clef objects\n *\n * note: only defines a single Clef object for now\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { pitch } from './pitch.js';\n\n/**\n * Clef module, see {@link music21.clef} for namespace\n *\n * @exports music21/clef\n */\n/**\n * Clef related objects and properties\n *\n * @namespace music21.clef\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n */\nexport const clef = {};\n/*  music21.Clef\n\tmust be defined before Stream since Stream subclasses call new music21.Clef...\n */\n// TODO: Fix to newest Vexflow format...\nclef.lowestLines = {\n    treble: 31,\n    soprano: 29,\n    'mezzo-soprano': 27,\n    alto: 25,\n    tenor: 23,\n    bass: 19,\n    percussion: 31,\n};\n/**\n * Clefname can be one of\n * \"treble\", \"bass\", \"soprano\", \"mezzo-soprano\", \"alto\", \"tenor\", \"percussion\"\n *\n * @class Clef\n * @memberof music21.clef\n * @extends music21.base.Music21Object\n * @param {string} name - clef name\n * @param {Int} [octaveChange=0] - ottava\n * @property {string|undefined} name\n * @property {Int} lowestLine - diatonicNoteNum (C4 = 29) for the lowest line (in a five-line staff)\n * @property {Int} lowestLineTrebleOffset - difference between the first line of this staff and the first line in treble clef\n * @property {Int} octaveChange\n */\nexport class Clef extends base.Music21Object {\n    constructor(name, octaveChange) {\n        super();\n        if (name !== undefined) {\n            name = name.toLowerCase();\n            this.name = name;\n            this.lowestLine = clef.lowestLines[name];\n            this.lowestLineTrebleOffset\n                = clef.lowestLines.treble - this.lowestLine;\n        } else {\n            this.name = undefined;\n            this.lowestLine = clef.lowestLines.treble;\n            this.lowestLineTrebleOffset = 0;\n        }\n        if (octaveChange === undefined) {\n            this.octaveChange = 0;\n        } else {\n            this.octaveChange = octaveChange;\n            this.lowestLine += 7 * octaveChange;\n            this.lowestLineTrebleOffset -= 7 * octaveChange;\n        }\n    }\n    /**\n     * returns a new pitch object if the clef name is not Treble\n     * designed so it would look the same as it would in treble clef.\n     * for instance, bass-clef 2nd-space C# becomes treble clef 2nd-space A#\n     * used for Vex.Flow which requires all pitches to be input as if they\n     * are in treble clef.\n     *\n     * @memberof music21.clef.Clef\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch} new pitch\n     */\n    convertPitchToTreble(p) {\n        if (this.lowestLine === undefined) {\n            console.log('no first line defined for clef', this.name, this);\n            return p; // error\n        }\n        const lowestLineDifference = this.lowestLineTrebleOffset;\n        const tempPitch = new pitch.Pitch(p.step);\n        tempPitch.octave = p.octave;\n        tempPitch.diatonicNoteNum += lowestLineDifference;\n        tempPitch.accidental = p.accidental;\n        return tempPitch;\n    }\n}\n\nclef.Clef = Clef;\n\n/**\n * A TrebleClef (same as new music21.clef.Clef('treble')\n *\n * @class TrebleClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TrebleClef extends Clef {\n    constructor() {\n        super('treble');\n    }\n}\nclef.TrebleClef = TrebleClef;\n/**\n * A TrebleClef down an octave (same as new music21.clef.Clef('treble', -1)\n *\n * Unlike music21p, currently not a subclass of TrebleClef.\n *\n * @class Treble8vbClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vbClef extends Clef {\n    constructor() {\n        super('treble', -1);\n    }\n}\nclef.Treble8vbClef = Treble8vbClef;\n\n/**\n * A TrebleClef up an octave (same as new music21.clef.Clef('treble', 1)\n *\n * @class Treble8vaClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vaClef extends Clef {\n    constructor() {\n        super('treble', 1);\n    }\n}\nclef.Treble8vaClef = Treble8vaClef;\n\n/**\n * A BassClef (same as new music21.clef.Clef('bass')\n *\n * @class BassClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class BassClef extends Clef {\n    constructor() {\n        super('bass');\n    }\n}\nclef.BassClef = BassClef;\n\n/**\n * An AltoClef (same as new music21.clef.Clef('alto')\n *\n * @class AltoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class AltoClef extends Clef {\n    constructor() {\n        super('alto');\n    }\n}\nclef.AltoClef = AltoClef;\n\n/**\n * A Tenor Clef (same as new music21.clef.Clef('tenor')\n *\n * @class TenorClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TenorClef extends Clef {\n    constructor() {\n        super('tenor');\n    }\n}\nclef.TenorClef = TenorClef;\n/**\n * A Soprano Clef (same as new music21.clef.Clef('soprano')\n *\n * @class SopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class SopranoClef extends Clef {\n    constructor() {\n        super('soprano');\n    }\n}\nclef.SopranoClef = SopranoClef;\n\n/**\n * A Mezzo-Soprano Clef (same as new music21.clef.Clef('mezzo-soprano')\n *\n * @class MezzoSopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class MezzoSopranoClef extends Clef {\n    constructor() {\n        super('mezzo-soprano');\n    }\n}\nclef.MezzoSopranoClef = MezzoSopranoClef;\n\n/**\n * A Percussion Clef (same as new music21.clef.Clef('percussion')\n *\n * First line is treated as if it's treble clef. Not available as \"bestClef\"\n *\n * @class PercussionClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class PercussionClef extends Clef {\n    constructor() {\n        super('percussion');\n    }\n}\nclef.PercussionClef = PercussionClef;\n\n/**\n * Looks at the pitches in a Stream and returns the best clef\n * of Treble and Bass\n *\n * @function music21.clef.bestClef\n * @memberof music21.clef\n * @param {music21.stream.Stream} st\n * @returns {music21.clef.Clef}\n */\nclef.bestClef = function bestClef(st) {\n    // console.log('calling flat on stream: ', st.elements.length, st.classes[st.classes.length - 1]);\n    const stFlat = st.flat;\n    let totalNotes = 0;\n    let totalPitch = 0.0;\n    for (let i = 0; i < stFlat.length; i++) {\n        const el = stFlat.get(i);\n        if (el.pitch !== undefined) {\n            totalNotes += 1;\n            totalPitch += el.pitch.diatonicNoteNum;\n        } else if (el.pitches !== undefined) {\n            for (let j = 0; j < el.pitches.length; j++) {\n                totalNotes += 1;\n                totalPitch += el.pitches[j].diatonicNoteNum;\n            }\n        }\n    }\n    let averageHeight;\n    if (totalNotes === 0) {\n        averageHeight = 29;\n    } else {\n        averageHeight = totalPitch / totalNotes;\n    }\n    // console.log('bestClef: average height', averageHeight);\n    if (averageHeight > 28) {\n        // 29 = c4\n        return new clef.TrebleClef();\n    } else {\n        return new clef.BassClef();\n    }\n};\n\nclef.clefFromString = function clefFromString(clefString, octaveShift) {\n    if (octaveShift === undefined) {\n        octaveShift = 0;\n    }\n    const xnStr = clefString.trim();\n    let thisType;\n    let lineNum;\n    if (xnStr.toLowerCase() === 'percussion') {\n        return new clef.PercussionClef(clefString, octaveShift);\n    } // todo: tab, none, jianpu\n\n    if (xnStr.length === 2) {\n        thisType = xnStr[0].toUpperCase();\n        lineNum = xnStr[1];\n    } else if (xnStr.length === 1) {\n        thisType = xnStr[0].toUpperCase();\n        if (thisType === 'G') {\n            lineNum = 2;\n        } else if (thisType === 'F') {\n            lineNum = 4;\n        } else if (thisType === 'C') {\n            lineNum = 3;\n        } else {\n            lineNum = 0;\n        }\n    }\n\n    const arrayEqual = (a, b) =>\n        a.length === b.length && a.every((el, ix) => el === b[ix]);\n\n    const params = [thisType, lineNum, octaveShift];\n    if (arrayEqual(params, ['G', 2, 0])) {\n        return new clef.TrebleClef();\n    } else if (arrayEqual(params, ['G', 2, -1])) {\n        return new clef.Treble8vbClef();\n    } else if (arrayEqual(params, ['G', 2, 1])) {\n        return new clef.Treble8vaClef();\n    } else if (arrayEqual(params, ['F', 4, 0])) {\n        return new clef.BassClef();\n    } else if (arrayEqual(params, ['F', 4, -1])) {\n        return new clef.Bass8vbClef();\n    } else if (arrayEqual(params, ['C', 3, 0])) {\n        return new clef.AltoClef();\n    } else if (arrayEqual(params, ['C', 4, 0])) {\n        return new clef.TenorClef();\n    } else {\n        return new clef.Clef(xnStr, octaveShift);\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/dynamics -- Dynamics\n *\n * note that Vex.Flow does not support Dynamics yet and we do not support MIDI dynamics,\n *  so currently of limited value...\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\n\n/**\n * dynamics Module. See {@link music21.dynamics} for namespace\n *\n * @exports music21/dynamics\n */\n/**\n * Dynamics related objects.\n *\n * N.B. Firefox completely ignores dyanmics on playback!\n *\n * Currently do not export to Vexflow.  :-(\n *\n * @namespace music21.dynamics\n * @memberof music21\n * @requires music21/base\n */\nexport const dynamics = {};\ndynamics.shortNames = [\n    'pppppp',\n    'ppppp',\n    'pppp',\n    'ppp',\n    'pp',\n    'p',\n    'mp',\n    'mf',\n    'f',\n    'fp',\n    'sf',\n    'ff',\n    'fff',\n    'ffff',\n    'fffff',\n    'ffffff',\n];\ndynamics.longNames = {\n    ppp: ['pianississimo'],\n    pp: ['pianissimo'],\n    p: ['piano'],\n    mp: ['mezzopiano'],\n    mf: ['mezzoforte'],\n    f: ['forte'],\n    fp: ['fortepiano'],\n    sf: ['sforzando'],\n    ff: ['fortissimo'],\n    fff: ['fortississimo'],\n};\ndynamics.englishNames = {\n    ppp: ['extremely soft'],\n    pp: ['very soft'],\n    p: ['soft'],\n    mp: ['moderately soft'],\n    mf: ['moderately loud'],\n    f: ['loud'],\n    ff: ['very loud'],\n    fff: ['extremely loud'],\n};\ndynamics.dynamicStrToScalar = {\n    None: [0.5], // default value\n    n: [0.0],\n    pppp: [0.1],\n    ppp: [0.15],\n    pp: [0.25],\n    p: [0.35],\n    mp: [0.45],\n    mf: [0.55],\n    f: [0.7],\n    fp: [0.75],\n    sf: [0.85],\n    ff: [0.85],\n    fff: [0.9],\n    ffff: [0.95],\n};\n\n/**\n * A representation of a dynamic.\n *\n * @class Dynamic\n * @memberof music21.dynamics\n * @extends music21.base.Music21Object\n * @param {number|string} value - either a number between 0 and 1 or a dynamic mark such as \"ff\" or \"mp\"\n * @property {string|undefined} value - a name such as \"pp\" etc.\n * @property {string|undefined} longName - a longer name such as \"pianissimo\"\n * @property {string|undefined} englishName - a name such as \"very soft\"\n * @property {number} volumeScalar - a number between 0 and 1.\n */\nexport class Dynamic extends base.Music21Object {\n    constructor(value) {\n        super();\n        this._value = undefined;\n        this._volumeScalar = undefined;\n        this.longName = undefined;\n        this.englishName = undefined;\n        this.value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (typeof value !== 'string') {\n            // assume number\n            this._volumeScalar = value;\n            if (value <= 0) {\n                this._value = 'n';\n            } else if (value < 0.11) {\n                this._value = 'pppp';\n            } else if (value < 0.16) {\n                this._value = 'ppp';\n            } else if (value < 0.26) {\n                this._value = 'pp';\n            } else if (value < 0.36) {\n                this._value = 'p';\n            } else if (value < 0.5) {\n                this._value = 'mp';\n            } else if (value < 0.65) {\n                this._value = 'mf';\n            } else if (value < 0.8) {\n                this._value = 'f';\n            } else if (value < 0.9) {\n                this._value = 'ff';\n            } else {\n                this._value = 'fff';\n            }\n        } else {\n            this._value = value;\n            this._volumeScalar = undefined;\n        }\n        if (this._value in dynamics.longNames) {\n            this.longName = dynamics.longNames[this._value][0];\n        } else {\n            this.longName = undefined;\n        }\n        if (this._value in dynamics.englishNames) {\n            this.englishName = dynamics.englishNames[this._value][0];\n        } else {\n            this.englishName = undefined;\n        }\n    }\n    get volumeScalar() {\n        if (this._volumeScalar !== undefined) {\n            return this._volumeScalar;\n        } else if (this._value in dynamics.dynamicStrToScalar) {\n            return dynamics.dynamicStrToScalar[this._value][0];\n        } else {\n            return undefined;\n        }\n    }\n    set volumeScalar(value) {\n        if (typeof value === 'number' && value <= 1 && value >= 0) {\n            this._volumeScalar = value;\n        }\n    }\n}\ndynamics.Dynamic = Dynamic;\n","import * as Vex from 'vexflow';\n\nimport { base } from './base.js';\n/**\n * Expressions module.  See {@link music21.expressions}\n *\n * @exports music21/expressions\n */\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @namespace music21.expressions\n * @memberof music21\n * @requires music21/expressions\n */\nexport const expressions = {};\n\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @class Expression\n * @memberof music21.expressions\n * @extends music21.base.Music21Object\n * @property {string} name\n * @property {string} vexflowModifier\n * @property {Int} setPosition\n */\nexport class Expression extends base.Music21Object {\n    constructor() {\n        super();\n        this.name = 'expression';\n        this.vexflowModifier = '';\n        this.setPosition = undefined;\n    }\n    /**\n     * Renders this Expression as a Vex.Flow.Articulation\n     *\n     * (this is not right for all cases)\n     *\n     * @memberof music21.expressions.Expression\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfe = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfe.setPosition(this.setPosition);\n        }\n        return vfe;\n    }\n}\nexpressions.Expression = Expression;\n\n/**\n * A fermata...\n *\n * @class Fermata\n * @memberof music21.expressions\n * @extends music21.expressions.Expression\n */\nexport class Fermata extends Expression {\n    constructor() {\n        super();\n        this.name = 'fermata';\n        this.vexflowModifier = 'a@a';\n        this.setPosition = 3;\n    }\n}\nexpressions.Fermata = Fermata;\n","import { pitch } from './pitch.js';\n\nconst shorthandNotation = {\n    '': [5, 3],\n    '5': [5, 3],\n    '6': [6, 3],\n    '7': [7, 5, 3],\n    '9': [9, 7, 5, 3],\n    '11': [11, 9, 7, 5, 3],\n    '13': [13, 11, 9, 7, 5, 3],\n    '6,5': [6, 5, 3],\n    '4,3': [6, 4, 3],\n    '4,2': [6, 4, 2],\n    '2': [6, 4, 2],\n};\n/**\n * In music21p is in figuredBass.notation -- eventually to be moved there.\n */\n\nclass Notation {\n    constructor(notationColumn) {\n        if (notationColumn === undefined) {\n            notationColumn = '';\n        }\n        this.notationColumn = notationColumn;\n        this.figureStrings = undefined;\n        this.origNumbers = undefined;\n        this.origModStrings = undefined;\n        this.numbers = undefined;\n        this.modifierStrings = undefined;\n        this._parseNotationColumn();\n        this._translateToLonghand();\n\n        this.modifiers = undefined;\n        this.figures = undefined;\n        this._getModifiers();\n        this._getFigures();\n    }\n\n    /**\n     * _parseNotationColumn - Given a notation column below a pitch, defines both this.numbers\n     *    and this.modifierStrings, which provide the intervals above the\n     *    bass and (if necessary) how to modify the corresponding pitches\n     *    accordingly.\n     *\n     * @return {undefined}\n     */\n\n    _parseNotationColumn() {\n        const nc = this.notationColumn;\n        const figures = nc.split(/,/);\n        const numbers = [];\n        const modifierStrings = [];\n        const figureStrings = [];\n\n        for (let figure of figures) {\n            figure = figure.trim();\n            figureStrings.push(figure);\n            let numberString = '';\n            let modifierString = '';\n            for (const c of figure) {\n                if (c.match(/\\d/)) {\n                    numberString += c;\n                } else {\n                    modifierString += c;\n                }\n            }\n            let number;\n            if (numberString !== '') {\n                number = parseInt(numberString);\n            }\n            numbers.push(number);\n            if (modifierString === '') {\n                modifierString = undefined;\n            }\n            modifierStrings.push(modifierString);\n        }\n        this.origNumbers = numbers;\n        this.numbers = numbers;\n        this.modifierStrings = modifierStrings;\n        this.figureStrings = figureStrings;\n    }\n\n    _translateToLonghand() {\n        let oldNumbers = this.numbers;\n        let newNumbers = oldNumbers;\n        const oldModifierStrings = this.modifierStrings;\n        let newModifierStrings = oldModifierStrings;\n        const oldNumbersString = oldNumbers.toString();\n\n        if (shorthandNotation[oldNumbersString] !== undefined) {\n            newNumbers = shorthandNotation[oldNumbersString];\n            newModifierStrings = [];\n            const temp = [];\n            for (const number of oldNumbers) {\n                if (number === undefined) {\n                    temp.push(3);\n                } else {\n                    temp.push(number);\n                }\n            }\n            oldNumbers = temp;\n\n            for (const number of newNumbers) {\n                let newModifierString;\n                if (oldNumbers.includes(number)) {\n                    const modifierStringIndex = oldNumbers.indexOf(number);\n                    newModifierString = oldModifierStrings[modifierStringIndex];\n                }\n                newModifierStrings.push(newModifierString);\n            }\n        } else {\n            const temp = [];\n            for (const number of oldNumbers) {\n                if (number === undefined) {\n                    temp.push(3);\n                } else {\n                    temp.push(number);\n                }\n            }\n            newNumbers = temp;\n        }\n        this.numbers = newNumbers;\n        this.modifierStrings = newModifierStrings;\n    }\n\n    _getModifiers() {\n        const modifiers = [];\n        for (let i = 0; i < this.numbers.length; i++) {\n            const modifierString = this.modifierStrings[i];\n            const modifier = new Modifier(modifierString);\n            modifiers.push(modifier);\n        }\n        this.modifiers = modifiers;\n    }\n\n    _getFigures() {\n        const figures = [];\n        for (let i = 0; i < this.numbers.length; i++) {\n            const number = this.numbers[i];\n            const modifierString = this.modifierStrings[i];\n            const figure = new Figure(number, modifierString);\n            figures.push(figure);\n        }\n        this.figures = figures;\n    }\n}\n\nclass Figure {\n    constructor(number, modifierString) {\n        this.number = number;\n        this.modifierString = modifierString;\n        this.modifier = new Modifier(modifierString);\n    }\n}\n\nconst specialModifiers = {\n    '+': '#',\n    '/': '-',\n    '\\\\': '#',\n    b: '-',\n    bb: '--',\n    bbb: '---',\n    bbbb: '-----',\n    '++': '##',\n    '+++': '###',\n    '++++': '####',\n};\n\nclass Modifier {\n    constructor(modifierString) {\n        this.modifierString = modifierString;\n        this.accidental = this._toAccidental();\n    }\n\n    _toAccidental() {\n        let modStr = this.modifierString;\n        if (modStr === undefined || modStr === '') {\n            return undefined;\n        }\n        const a = new pitch.Accidental();\n        if (specialModifiers[modStr] !== undefined) {\n            modStr = specialModifiers[modStr];\n        }\n        a.set(modStr);\n        return a;\n    }\n\n    modifyPitchName(pitchNameToAlter) {\n        const pitchToAlter = new pitch.Pitch(pitchNameToAlter);\n        this.modifyPitch(pitchToAlter, true);\n        return pitchToAlter.name;\n    }\n\n    modifyPitch(pitchToAlter, inPlace) {\n        if (inPlace !== true) {\n            pitchToAlter = pitchToAlter.clone();\n        }\n\n        if (this.accidental === undefined) {\n            return pitchToAlter;\n        }\n\n        if (\n            this.accidental.alter === 0.0\n            || pitchToAlter.accidental === undefined\n        ) {\n            pitchToAlter.accidental = this.accidental.clone();\n        } else {\n            const newAccidental = new pitch.Accidental();\n            const newAlter\n                = pitchToAlter.accidental.alter + this.accidental.alter;\n            newAccidental.set(newAlter);\n            pitchToAlter.accidental = newAccidental;\n        }\n        return pitchToAlter;\n    }\n}\n\nexport const figuredBass = {\n    Notation,\n    Figure,\n    Modifier,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/fromPython -- Conversion from music21p jsonpickle streams\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n * usage:\n *\n * in python:\n *\n * s = corpus.parse('bwv66.6')\n * stringRepresentingM21JsonPickle = s.freezeStream('jsonpickle')\n *\n * in js:\n *\n * pyConv = new music21.fromPython.Converter();\n * s = pyConv.run(stringRepresentingM21JsonPickle);\n *\n *\n */\nimport * as jsonpickle from 'jsonpickle';\n\nconst jp = jsonpickle;\n/**\n * fromPython module -- see {@link music21.fromPython}\n */\nconst unpickler = jp.unpickler;\n\n/**\n * Converter for taking a Python-encoded jsonpickle music21p stream\n * and loading it into music21j\n *\n * Very very alpha.  See music21(p).vexflow modules to see how it works.\n *\n * Requires Cuthbert's jsonpickle.js port (included in music21j)\n *\n * @namespace music21.fromPython\n * @extends music21\n * @requires jsonpickle\n */\nexport const fromPython = {};\n\n/**\n *\n * @class Converter\n * @memberof music21.fromPython\n * @property {boolean} debug\n * @property {Array<string>} knownUnparsables - list of classes that cannot be parsed\n * @property {object} handlers - object mapping string names of classes to a set of function calls to perform when restoring or post-restoring. (too complicated to explain; read the code)\n */\nexport class Converter {\n    constructor() {\n        this.debug = true;\n        this.knownUnparsables = [\n            'music21.spanner.Line',\n            'music21.instrument.Instrument',\n            'music21.layout.StaffGroup',\n            'music21.layout.StaffLayout',\n            'music21.layout.SystemLayout',\n            'music21.layout.PageLayout',\n            'music21.expressions.TextExpression',\n            'music21.bar.Barline', // Soon...\n            'music21.tempo.MetronomeMark', // should be possible\n            'music21.metadata.Metadata', // Soon...\n        ];\n        this.handlers = {\n            'music21.duration.Duration': {\n                post_restore: d => {\n                    d.quarterLength = d._qtrLength;\n                    return d;\n                },\n            },\n            'music21.meter.TimeSignature': {\n                post_restore: ts => {\n                    ts._numerator = ts.displaySequence._numerator;\n                    ts._denominator = ts.displaySequence._denominator;\n                    return ts;\n                },\n            },\n            'music21.stream.Part': {\n                post_restore: p => {\n                    this.currentPart = p;\n                    this.lastClef = undefined;\n                    this.lastKeySignature = undefined;\n                    this.lastTimeSignature = undefined;\n                    this.streamPostRestore(p);\n                    return p;\n                },\n            },\n            // TODO: all inherit somehow, through _classes or better, prototype...\n            'music21.stream.Score': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Stream': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Measure': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Voice': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n        };\n        this.currentPart = undefined;\n        this.lastClef = undefined;\n        this.lastKeySignature = undefined;\n        this.lastTimeSignature = undefined;\n    }\n\n    /**\n     * Fixes up some references that cannot be unpacked from jsonpickle.\n     *\n     * @method music21.fromPython.Converter#streamPostRestore\n     * @memberof music21.fromPython.Converter\n     * @param {music21.stream.Stream} s - stream after unpacking from jsonpickle\n     * @returns {music21.stream.Stream}\n     */\n    streamPostRestore(s) {\n        const st = s._storedElementOffsetTuples;\n\n        s._clef = this.lastClef;\n        s._keySignature = this.lastKeySignature;\n        s._timeSignature = this.lastTimeSignature;\n        for (let i = 0; i < st.length; i++) {\n            const el = st[i][0];\n            el.offset = st[i][1];\n            let classList = el.classes;\n            if (classList === undefined) {\n                console.warn('M21object without classes: ', el);\n                console.warn('Javascript classes are: ', el._py_class);\n                classList = [];\n            }\n            let streamPart = this.currentPart;\n            if (streamPart === undefined) {\n                streamPart = s; // possibly a Stream constructed from .measures()\n            }\n\n            let appendEl = true;\n            let insertAtStart = false;\n\n            for (let j = 0; j < classList.length; j++) {\n                const thisClass = classList[j];\n                for (let kn = 0; kn < this.knownUnparsables.length; kn++) {\n                    const unparsable = this.knownUnparsables[kn];\n                    if (unparsable.indexOf(thisClass) !== -1) {\n                        appendEl = false;\n                    }\n                }\n                if (thisClass === 'TimeSignature') {\n                    // console.log(\"Got timeSignature\", streamPart, newM21pObj, storedElement);\n                    s._timeSignature = el;\n                    this.lastTimeSignature = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.timeSignature === undefined\n                    ) {\n                        streamPart.timeSignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Clef') {\n                    s._clef = el;\n                    this.lastClef = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.clef === undefined\n                    ) {\n                        streamPart.clef = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'KeySignature') {\n                    s._keySignature = el;\n                    this.lastKeySignature = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.keySignature === undefined\n                    ) {\n                        streamPart.keySignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Part') {\n                    appendEl = false;\n                    insertAtStart = true;\n                }\n            }\n\n            if (appendEl) {\n                s.append(el); // all but clef, ts, ks\n            } else if (insertAtStart) {\n                s.insert(0, el); // Part\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Run the main decoder\n     *\n     * @method music21.fromPython.Converter#run\n     * @memberof music21.fromPython.Converter\n     * @param {string} jss - stream encoded as JSON\n     * @returns {music21.stream.Stream}\n     */\n    run(jss) {\n        const outStruct = unpickler.decode(jss, this.handlers);\n        return outStruct.stream;\n    }\n}\nfromPython.Converter = Converter;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/scale -- Scales\n *\n * Does not implement the full range of scales from music21p\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { interval } from './interval.js';\nimport { pitch } from './pitch.js';\n\nimport { Music21Exception } from './exceptions21.js';\n\n// const DIRECTION_BI = 'bi';\n// const DIRECTION_DESCENDING = 'descending';\n// const DIRECTION_ASCENDING = 'ascending';\n\n/**\n * Scale module. See {@link music21.scale} namespace\n *\n * @exports music21/scale\n */\n/**\n * Scale namespace.  Right now only supports very simple scales.\n *\n * @namespace music21.scale\n * @memberof music21\n * @requires music21/base\n * @requires music21/common\n * @requires music21/debug\n * @requires music21/interval\n * @requires music21/pitch\n */\nexport class Scale extends base.Music21Object {\n    constructor() {\n        super();\n        this.type = 'Scale';\n    }\n\n    get name() {\n        return this.type;\n    }\n\n    get isConcrete() {\n        return false;\n    }\n}\n\nexport class AbstractScale extends Scale {\n    constructor() {\n        super();\n        this._net = []; // simplified -- no IntervalNetwork, just list of intervals\n        this.tonicDegree = 1;\n        this.octaveDuplicating = true;\n        this.deterministic = true;\n        this._alteredDegrees = {};\n        this._oneOctaveRealizationCache = undefined;\n    }\n\n    equals(other) {\n        if (\n            common.arrayEquals(this.classes, other.classes)\n            && this.tonicDegree === other.tonicDegree\n            && common.arrayEquals(this._net, other._net)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    buildNetworkFromPitches(pitchList) {\n        const pitchListReal = [];\n        for (const p of pitchList) {\n            if (typeof p === 'string') {\n                pitchListReal.push(new pitch.Pitch(p));\n            } else if (p.classes.includes('Note')) {\n                pitchListReal.push(p.pitch);\n            } else {\n                pitchListReal.push(p);\n            }\n        }\n        pitchList = pitchListReal;\n\n        const pLast = pitchList[pitchList.length - 1];\n        if (pLast.name === pitchList[0]) {\n            const p = pitchList[0].clone();\n            if (pLast.ps > pitchList[0]) {\n                // ascending;\n                while (p.ps < pLast.ps) {\n                    p.octave += 1;\n                }\n            } else {\n                while (p.ps < pLast.ps) {\n                    p.octave += -1;\n                }\n            }\n            pitchList.push(p);\n        }\n\n        const intervalList = [];\n        for (let i = 0; i < pitchList.length - 1; i++) {\n            const thisInterval = new interval.Interval(\n                pitchList[i],\n                pitchList[i + 1]\n            );\n            intervalList.push(thisInterval);\n        }\n        this._net = intervalList;\n    }\n\n    getDegreeMaxUnique() {\n        return this._net.length;\n    }\n\n    getRealization(\n        pitchObj,\n        unused_stepOfPitch,\n        unused_minPitch,\n        unused_maxPitch,\n        unused_direction,\n        unused_reverse\n    ) {\n        // if (direction === undefined) {\n        //     direction = DIRECTION_ASCENDING;\n        // }\n        // if (stepOfPitch === undefined) {\n        //     stepOfPitch = 1;\n        // }\n        if (typeof pitchObj === 'string') {\n            pitchObj = new pitch.Pitch(pitchObj);\n        } else {\n            pitchObj = pitchObj.clone();\n        }\n        const post = [pitchObj];\n        for (const intV of this._net) {\n            pitchObj = intV.transposePitch(pitchObj);\n            post.push(pitchObj);\n        }\n        return post;\n    }\n\n    getPitchFromNodeDegree(pitchReference, unused_nodeName, nodeDegreeTarget) {\n        const zeroIndexDegree = nodeDegreeTarget - 1;\n        for (let i = 0; i < zeroIndexDegree; i++) {\n            const thisIntv = this._net[i % this._net.length];\n            pitchReference = thisIntv.transposePitch(pitchReference);\n        }\n        return pitchReference;\n    }\n\n    getRelativeNodeDegree(\n        pitchReference,\n        unused_nodeName,\n        pitchTarget,\n        unused_comparisonAttribute,\n        unused_direction\n    ) {\n        if (typeof pitchTarget === 'string') {\n            pitchTarget = new pitch.Pitch(pitchTarget);\n        }\n        let realizedPitches;\n        if (this._oneOctaveRealizationCache !== undefined) {\n            realizedPitches = this._oneOctaveRealizationCache;\n        } else {\n            realizedPitches = this.getRealization(pitchReference);\n            this._oneOctaveRealizationCache = realizedPitches;\n        }\n        const realizedNames = [];\n        for (const p of realizedPitches) {\n            realizedNames.push(p.name);\n        }\n        const realizedIndex = realizedNames.indexOf(pitchTarget.name);\n        if (realizedIndex === -1) {\n            return undefined;\n        } else {\n            return realizedIndex + 1;\n        }\n    }\n}\n\nexport class AbstractDiatonicScale extends AbstractScale {\n    constructor(mode) {\n        super();\n        this.type = 'Abstract diatonic';\n        this.tonicDegree = undefined;\n        this.dominantDegree = undefined;\n        this.octaveDuplicating = true;\n        this._buildNetwork(mode);\n    }\n    _buildNetwork(mode) {\n        const srcList = ['M2', 'M2', 'm2', 'M2', 'M2', 'M2', 'm2'];\n        let intervalList;\n        this.tonicDegree = 1;\n        this.dominantDegree = 5;\n        if (['major', 'ionian', undefined].includes(mode)) {\n            intervalList = srcList;\n            this.relativeMajorDegree = 1;\n            this.relativeMinorDegree = 6;\n        } else if (['minor', 'aeolian'].includes(mode)) {\n            intervalList = srcList.slice(5, 7);\n            intervalList.push(...srcList.slice(0, 5));\n            this.relativeMajorDegree = 3;\n            this.relativeMinorDegree = 1;\n        }\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\nexport class AbstractHarmonicMinorScale extends AbstractScale {\n    constructor() {\n        super();\n        this.type = 'Abstract harmonic minor';\n        this.octaveDuplicating = true;\n        this._buildNetwork();\n    }\n    _buildNetwork() {\n        const intervalList = ['M2', 'm2', 'M2', 'M2', 'm2', 'A2', 'm2'];\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\n// temporary, until bidirectional scales are created\n// no need for descending, since minor takes care of that.\nexport class AbstractAscendingMelodicMinorScale extends AbstractScale {\n    constructor() {\n        super();\n        this.type = 'Abstract ascending melodic minor';\n        this.octaveDuplicating = true;\n        this._buildNetwork();\n    }\n    _buildNetwork() {\n        const intervalList = ['M2', 'm2', 'M2', 'M2', 'M2', 'M2', 'm2'];\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\nexport class ConcreteScale extends Scale {\n    constructor(tonic) {\n        super();\n        if (typeof tonic === 'string') {\n            tonic = new pitch.Pitch(tonic);\n        }\n        this.tonic = tonic;\n        this.abstract = undefined;\n    }\n\n    // when adding functionality here, must also be added to key.Key.\n    get isConcrete() {\n        if (this.tonic !== undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getTonic() {\n        return this.tonic;\n    }\n\n    // transpose\n    // tune\n    // No .romanNumeral function because of circular imports...\n    // romanNumeral(degree) {\n    //     return new roman.RomanNumeral(degree, this);\n    // }\n\n    getPitches(unused_minPitch, unused_maxPitch, unused_direction) {\n        let pitchObj;\n        if (this.tonic === undefined) {\n            pitchObj = new pitch.Pitch('C4');\n        } else {\n            pitchObj = this.tonic;\n        }\n        return this.abstract.getRealization(pitchObj);\n    }\n\n    pitchFromDegree(\n        degree,\n        unused_minPitch,\n        unused_maxPitch,\n        unused_direction,\n        unused_equateTermini\n    ) {\n        return this.abstract.getPitchFromNodeDegree(\n            this.tonic,\n            this.abstract.tonicDegree,\n            degree\n        );\n    }\n\n    getScaleDegreeFromPitch(\n        pitchTarget,\n        unused_direction,\n        unused_comparisonAttribute\n    ) {\n        return this.abstract.getRelativeNodeDegree(\n            this.tonic,\n            this.abstract.tonicDegree,\n            pitchTarget\n        );\n    }\n}\n\nexport class DiatonicScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.abstract = new AbstractDiatonicScale();\n        this.type = 'diatonic';\n    }\n}\n\nexport class MajorScale extends DiatonicScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'major';\n        this.abstract._buildNetwork(this.type);\n    }\n}\n\nexport class MinorScale extends DiatonicScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'minor';\n        this.abstract._buildNetwork(this.type);\n    }\n}\n\nexport class HarmonicMinorScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'harmonic minor';\n        this.abstract = new AbstractHarmonicMinorScale();\n    }\n}\n\nexport class AscendingMelodicMinorScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'harmonic minor';\n        this.abstract = new AbstractAscendingMelodicMinorScale();\n    }\n}\n\n/**\n * Function, not class\n *\n * @function music21.scale.SimpleDiatonicScale\n * @param {music21.pitch.Pitch} tonic\n * @param {Array<string>} scaleSteps - an array of diatonic prefixes,\n *     generally 'M' (major) or 'm' (minor) describing the seconds.\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function SimpleDiatonicScale(tonic, scaleSteps) {\n    if (tonic === undefined) {\n        tonic = new pitch.Pitch('C4');\n    } else if (!(tonic instanceof pitch.Pitch)) {\n        throw new Music21Exception(\n            'Cannot make a scale not from '\n                + 'a music21.pitch.Pitch object: '\n                + tonic\n        );\n    }\n    if (scaleSteps === undefined) {\n        scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    }\n    const gi = new interval.GenericInterval(2);\n    const pitches = [tonic];\n    let lastPitch = tonic;\n    for (let i = 0; i < scaleSteps.length; i++) {\n        const di = new interval.DiatonicInterval(scaleSteps[i], gi);\n        const ii = new interval.Interval(di);\n        const newPitch = ii.transposePitch(lastPitch);\n        if (debug) {\n            console.log('ScaleSimpleMajor -- adding pitch: ' + newPitch.name);\n        }\n        pitches.push(newPitch);\n        lastPitch = newPitch;\n    }\n    return pitches;\n}\n\n/**\n * One octave of a major scale\n *\n * @function music21.scale.ScaleSimpleMajor\n * @param {music21.pitch.Pitch} tonic\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function ScaleSimpleMajor(tonic) {\n    const scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    return SimpleDiatonicScale(tonic, scaleSteps);\n}\n\n/**\n * One octave of a minor scale\n *\n * @function music21.scale.ScaleSimpleMinor\n * @param {music21.pitch.Pitch} tonic\n * @param {string} [minorType='natural'] - 'harmonic', 'harmonic-minor',\n *     'melodic', 'melodic-minor', 'melodic-minor-ascending',\n *     'melodic-ascending' or other (=natural/melodic-descending)\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function ScaleSimpleMinor(tonic, minorType) {\n    const scaleSteps = ['M', 'm', 'M', 'M', 'm', 'M', 'M'];\n    if (typeof minorType === 'string') {\n        // \"harmonic minor\" -> \"harmonic-minor\"\n        minorType = minorType.replace(/\\s/g, '-');\n    }\n    if (minorType === 'harmonic' || minorType === 'harmonic-minor') {\n        scaleSteps[5] = 'A';\n        scaleSteps[6] = 'm';\n    } else if (\n        minorType === 'melodic'\n        || minorType === 'melodic-ascending'\n        || minorType === 'melodic-minor'\n        || minorType === 'melodic-minor-ascending'\n    ) {\n        scaleSteps[4] = 'M';\n        scaleSteps[6] = 'm';\n    }\n    return SimpleDiatonicScale(tonic, scaleSteps);\n}\n\nexport const scale = {\n    Scale,\n    AbstractScale,\n    AbstractDiatonicScale,\n    AbstractHarmonicMinorScale,\n    AbstractAscendingMelodicMinorScale,\n    ConcreteScale,\n    DiatonicScale,\n    MajorScale,\n    MinorScale,\n    HarmonicMinorScale,\n    AscendingMelodicMinorScale,\n\n    ScaleSimpleMinor,\n    ScaleSimpleMajor,\n    SimpleDiatonicScale,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/key -- KeySignature and Key objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { base } from './base.js';\n// import { common } from './common.js';\nimport { debug } from './debug.js';\nimport { interval } from './interval.js';\nimport { pitch } from './pitch.js';\nimport { scale } from './scale.js';\n\n/* key and keysignature module. See {@link music21.key} namespace for details\n *\n * @exports music21/key\n */\n/**\n * Key and KeySignature related objects and methods\n *\n * @namespace music21.key\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/interval\n * @requires music21/scale\n */\nexport const key = {};\n\nkey.modeSharpsAlter = {\n    major: 0,\n    minor: -3,\n    dorian: -2,\n    phrygian: -4,\n    lydian: 1,\n    mixolydian: -1,\n    locrian: -5,\n};\n\nkey.convertKeyStringToMusic21KeyString = function convertKeyStringToMusic21KeyString(\n    textString\n) {\n    if (textString === 'bb') {\n        textString = 'b-';\n    } else if (textString === 'Bb') {\n        textString = 'B-';\n    } else if (textString.endsWith('b') && !textString.startsWith('b')) {\n        textString = textString.replace(/b$/, '-');\n    }\n    return textString;\n};\n\n/**\n * @class KeySignature\n * @memberof music21.key\n * @description Represents a key signature\n * @param {Int} [sharps=0] -- the number of sharps (negative for flats)\n * @property {Int} [sharps=0] -- number of sharps (negative for flats)\n * @extends music21.base.Music21Object\n * @example\n * var ks = new music21.key.KeySignature(-3); //E-flat major or c minor\n * var s = new music21.stream.Stream();\n * s.keySignature = ks;\n * var n = new music21.note.Note('A-'); // A-flat\n * s.append(n);\n * s.appendNewDOM();\n */\nexport class KeySignature extends base.Music21Object {\n    constructor(sharps) {\n        super();\n        this._sharps = sharps || 0; // if undefined\n        this._alteredPitchesCache = undefined;\n\n        // 12 flats/sharps enough for now...\n        this.flatMapping = [\n            'C',\n            'F',\n            'B-',\n            'E-',\n            'A-',\n            'D-',\n            'G-',\n            'C-',\n            'F-',\n            'B--',\n            'E--',\n            'A--',\n            'D--',\n        ];\n        this.sharpMapping = [\n            'C',\n            'G',\n            'D',\n            'A',\n            'E',\n            'B',\n            'F#',\n            'C#',\n            'G#',\n            'D#',\n            'A#',\n            'E#',\n            'B#',\n        ];\n    }\n    get sharps() {\n        return this._sharps;\n    }\n    set sharps(s) {\n        this._alteredPitchesCache = [];\n        this._sharps = s;\n    }\n    /**\n     * Gives the width in pixels necessary to represent the key signature.\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {number} width\n     * @readonly\n     */\n    get width() {\n        if (this.sharps === 0) {\n            return 0;\n        } else {\n            // add 6 to add extra space after the KS...\n            return 12 * Math.abs(this.sharps) + 6;\n        }\n    }\n    /**\n     * An Array of Altered Pitches in KeySignature order (i.e., for flats, Bb, Eb, etc.)\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {Array<music21.pitch.Pitch>} alteredPitches\n     * @readonly\n     * @example\n     * var ks = new music21.key.KeySignature(3)\n     * var ap = ks.alteredPitches\n     * var apName = [];\n     * for (var i = 0; i < ap.length; i++) {\n     *     apName.push(ap[i].name);\n     * }\n     * apName\n     * // [\"F#\", \"C#\", \"G#\"]\n     */\n    get alteredPitches() {\n        if (this._alteredPitchesCache !== undefined) {\n            return this._alteredPitchesCache;\n        }\n        let transStr = 'P5';\n        let startPitch = 'B';\n        if (this.sharps < 0) {\n            transStr = 'P4';\n            startPitch = 'F';\n        }\n        const transInterval = new interval.Interval(transStr);\n        const post = [];\n        let pKeep = new pitch.Pitch(startPitch);\n        for (let i = 0; i < Math.abs(this.sharps); i++) {\n            pKeep = transInterval.transposePitch(pKeep);\n            pKeep.octave = 4;\n            post.push(pKeep);\n        }\n        this._alteredPitchesCache = post;\n        return post;\n    }\n    /**\n     * Return the name of the major key with this many sharps\n     *\n     * @memberof music21.key.KeySignature\n     * @returns {(string|undefined)} name of key\n     * @example\n     * var ks = new music21.key.KeySignature(-3)\n     * ks.majorName()\n     * // \"E-\"\n     */\n    majorName() {\n        if (this.sharps >= 0) {\n            return this.sharpMapping[this.sharps];\n        } else {\n            return this.flatMapping[Math.abs(this.sharps)];\n        }\n    }\n    /**\n     * Return the name of the minor key with this many sharps\n     * @memberof music21.key.KeySignature\n     * @returns {(string|undefined)}\n     */\n    minorName() {\n        const tempSharps = this.sharps + 3;\n        if (tempSharps >= 0) {\n            return this.sharpMapping[tempSharps];\n        } else {\n            return this.flatMapping[Math.abs(tempSharps)];\n        }\n    }\n    /**\n     * returns the vexflow name (just the `majorName()` with \"b\" for \"-\") for\n     * the key signature.  Does not create the object.\n     *\n     * Deprecated.\n     *\n     * @memberof music21.key.KeySignature\n     * @returns {string}\n     */\n    vexflow() {\n        console.log('calling deprecated function KeySignature.vexflow');\n        const tempName = this.majorName();\n        return tempName.replace(/-/g, 'b');\n    }\n    /**\n     * Returns the accidental associated with a step in this key, or undefined if none.\n     *\n     * @memberof music21.key.KeySignature\n     * @param {string} step - a valid step name such as \"C\",\"D\", etc., but not \"C#\" etc.\n     * @returns {(music21.pitch.Accidental|undefined)}\n     */\n    accidentalByStep(step) {\n        const aps = this.alteredPitches;\n        for (let i = 0; i < aps.length; i++) {\n            if (aps[i].step === step) {\n                if (aps[i].accidental === undefined) {\n                    return undefined;\n                }\n                // make a new accidental;\n                return new pitch.Accidental(aps[i].accidental.alter);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Takes a pitch in C major and transposes it so that it has\n     * the same step position in the current key signature.\n     *\n     * @memberof music21.key.KeySignature\n     * @returns {music21.pitch.Pitch}\n     * @example\n     * var ks = new music21.key.KeySignature(-3)\n     * var p1 = new music21.pitch.Pitch('B')\n     * var p2 = ks.transposePitchFromC(p1)\n     * p2.name\n     * // \"D\"\n     * var p3 = new music21.pitch.Pitch('G-')\n     * var p4 = ks.transposePitchFromC(p3)\n     * p4.name\n     * // \"B--\"\n     */\n    transposePitchFromC(p) {\n        let transInterval;\n        let transTimes;\n        if (this.sharps === 0) {\n            return new pitch.Pitch(p.nameWithOctave);\n        } else if (this.sharps < 0) {\n            transTimes = Math.abs(this.sharps);\n            transInterval = new interval.Interval('P4');\n        } else {\n            transTimes = this.sharps;\n            transInterval = new interval.Interval('P5');\n        }\n        let newPitch = p;\n        for (let i = 0; i < transTimes; i++) {\n            newPitch = transInterval.transposePitch(newPitch);\n            if (i % 2 === 1) {\n                newPitch.octave -= 1;\n            }\n        }\n        return newPitch;\n    }\n}\nkey.KeySignature = KeySignature;\n\n/**\n * Create a Key object. Like a KeySignature but with ideas about Tonic, Dominant, etc.\n *\n * TODO: allow keyName to be a {@link music21.pitch.Pitch}\n * TODO: Scale mixin.\n *\n * @class Key\n * @memberof music21.key\n * @extends music21.key.KeySignature\n * @param {string} keyName -- a pitch name representing the key (w/ \"-\" for flat)\n * @param {string} [mode] -- if not given then the CASE of the keyName will be used (\"C\" => \"major\", \"c\" => \"minor\")\n */\nexport class Key extends KeySignature {\n    constructor(keyName, mode) {\n        if (keyName === undefined) {\n            keyName = 'C';\n        }\n        if (mode === undefined) {\n            const lowerCase = keyName.toLowerCase();\n            if (keyName === lowerCase) {\n                mode = 'minor';\n            } else {\n                mode = 'major';\n            }\n        }\n\n        const sharpsArray = 'A-- E-- B-- F- C- G- D- A- E- B- F C G D A E B F# C# G# D# A# E# B#'.split(\n            ' '\n        );\n        const sharpsIndex = sharpsArray.indexOf(keyName.toUpperCase());\n        if (sharpsIndex === -1) {\n            throw new Music21Exception('Cannot find the key for ' + keyName);\n        }\n        const modeShift = key.modeSharpsAlter[mode] || 0;\n        const sharps = sharpsIndex + modeShift - 11;\n        if (debug) {\n            console.log('Found sharps ' + sharps + ' for key: ' + keyName);\n        }\n        super(sharps);\n\n        this.tonic = new pitch.Pitch(keyName);\n        this.mode = mode;\n        this._scale = this.getScale();\n    }\n    /**\n     * returns a {@link music21.scale.MajorScale} or {@link music21.scale.MinorScale}\n     * object from the pitch object.\n     *\n     * @memberof music21.key.Key\n     * @param {string|undefined} [scaleType=this.mode] - the type of scale, or the mode.\n     * @returns {object} A music21.scale.Scale subclass.\n     */\n    getScale(scaleType) {\n        if (scaleType === undefined) {\n            scaleType = this.mode;\n        }\n        const pitchObj = this.tonic;\n        if (scaleType === 'major') {\n            return new scale.MajorScale(pitchObj);\n        } else if (scaleType === 'minor') {\n            return new scale.MinorScale(pitchObj);\n        } else if (['harmonic minor', 'harmonic-minor'].includes(scaleType)) {\n            return new scale.HarmonicMinorScale(pitchObj);\n        } else if (['melodic minor', 'melodic-minor'].includes(scaleType)) {\n            return new scale.AscendingMelodicMinorScale(pitchObj);\n        } else {\n            return new scale.ConcreteScale(pitchObj);\n        }\n    }\n\n    // when scale.js adds functionality, it must be added here.\n    get isConcrete() {\n        return this._scale.isConcrete;\n    }\n    getPitches(...args) {\n        return this._scale.getPitches(...args);\n    }\n    pitchFromDegree(...args) {\n        return this._scale.pitchFromDegree(...args);\n    }\n    getScaleDegreeFromPitch(...args) {\n        return this._scale.getScaleDegreeFromPitch(...args);\n    }\n}\nkey.Key = Key;\n","import { chord } from './chord.js';\nimport { key } from './key.js';\n\nclass Harmony extends chord.Chord {\n    constructor(figure, keywords) {\n        if (keywords === undefined) {\n            keywords = {};\n        }\n\n        super();\n        this._writeAsChord = false;\n        this._roman = undefined;\n        this.chordStepModifications = [];\n        this._degreesList = [];\n        this._key = undefined;\n        // this._updateBasedOnXMLInput(keywords);\n        this._figure = figure;\n        if (keywords.parseFigure !== false && this._figure !== undefined) {\n            this._parseFigure();\n        }\n        if (\n            this._overrides.bass === undefined\n            && this._overrides.root !== undefined\n        ) {\n            this.bass(this._overrides.root);\n        }\n        if (\n            (keywords.updatePitches && this._figure !== undefined)\n            || this._overrides.root !== undefined\n            || this._overrides.bass !== undefined\n        ) {\n            this._updatePitches();\n        }\n        // this._updateBasedOnXMLInput(keywords);\n        if (\n            keywords.parseFigure !== false\n            && this._figure !== undefined\n            && this._figure.indexOf('sus') !== -1\n            && this._figure.indexOf('sus2') === -1\n        ) {\n            this.root(this.bass());\n        }\n    }\n    _parseFigure() {}\n\n    _updatePitches() {}\n\n    get figure() {\n        if (this._figure === undefined) {\n            return this.findFigure();\n        } else {\n            return this._figure;\n        }\n    }\n    set figure(newFigure) {\n        this._figure = newFigure;\n        if (this._figure !== undefined) {\n            this._parseFigure();\n            this._updatePitches();\n        }\n    }\n\n    get key() {\n        return this._key;\n    }\n    set key(keyOrScale) {\n        if (typeof keyOrScale === 'string') {\n            this._key = new key.Key(keyOrScale);\n        } else {\n            this._key = keyOrScale;\n            this._roman = undefined;\n        }\n    }\n\n    findFigure() {\n        return;\n    }\n}\n\nexport const harmony = {\n    Harmony,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/instrument -- instrument objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\n\n/**\n * Instrument module, see {@link music21.instrument}\n *\n * @exports music21/instrument\n */\n\n/**\n * Looking for the {@link music21.instrument.Instrument} object? :-)\n *\n * @namespace music21.instrument\n * @memberof music21\n * @requires music21/base\n */\nexport const instrument = {};\n\n/**\n * Represents an instrument.  instrumentNames are found in the ext/soundfonts directory\n *\n * See {@link music21.miditools} and esp. `loadSoundfont` for a way of loading soundfonts into\n * instruments.\n *\n * @class Instrument\n * @memberof music21.instrument\n * @param {string} instrumentName\n * @property {string|undefined} partId\n * @property {string|undefined} partName\n * @property {string|undefined} partAbbreviation\n * @property {string|undefined} instrumentId\n * @property {string|undefined} instrumentName\n * @property {string|undefined} instrumentAbbreviation\n * @property {Int|undefined} midiProgram\n * @property {Int|undefined} midiChannel\n * @property {Int|undefined} lowestNote\n * @property {Int|undefined} highestNote\n * @property {music21.interval.Interval|undefined} transposition\n * @property {Boolean} inGMPercMap=false\n * @property {string|undefined} soundfontFn\n * @property {string|undefined} oggSoundfont - url of oggSoundfont for this instrument\n * @property {string|undefined} mp3Soundfont - url of mp3Soundfont for this instrument\n */\nclass Instrument extends base.Music21Object {\n    constructor(instrumentName) {\n        super();\n        this.classSortOrder = -25;\n\n        this.partId = undefined;\n        this.partName = undefined;\n        this.partAbbreviation = undefined;\n\n        this.instrumentId = undefined;\n        this.instrumentName = instrumentName;\n        this.instrumentAbbreviation = undefined;\n        this.midiProgram = undefined;\n        this._midiChannel = undefined;\n\n        this.lowestNote = undefined;\n        this.highestNote = undefined;\n\n        this.transpostion = undefined;\n\n        this.inGMPercMap = false;\n        this.soundfontFn = undefined;\n\n        if (instrumentName !== undefined) {\n            instrument.find(instrumentName, this);\n        }\n    }\n    /**\n     * Assign an instrument to an unused midi channel.\n     *\n     * Will use the global list of used channels (`music21.instrument.Instrument.usedChannels`)\n     * if not given.  Assigns up to `music21.instrument.maxMidi` channels (16)\n     * Skips 10 unless this.inGMPercMap is true\n     *\n     * @memberof music21.instrument.Instrument\n     * @param {Array<Int>} [usedChannels]\n     * @returns {Number}\n     */\n    autoAssignMidiChannel(usedChannels) {\n        if (usedChannels === undefined) {\n            usedChannels = instrument.usedChannels;\n        }\n        let startChannel = 0;\n        if (this.inGMPercMap) {\n            startChannel = 10;\n        }\n        for (let ch = startChannel; ch < instrument.maxMidi; ch++) {\n            if (ch % 16 === 10 && this.inGMPercMap !== true) {\n                continue; // skip 10 / percussion.\n            }\n            if (\n                usedChannels[ch] === undefined\n                || usedChannels[ch] === this.midiProgram\n            ) {\n                usedChannels[ch] = this.midiProgram;\n                this.midiChannel = ch;\n                return ch;\n            }\n        }\n        // TODO: no channels! throw exception!\n        return undefined;\n    }\n    get oggSounfont() {\n        return this.soundfontFn + '-ogg.js';\n    }\n    get mp3Soundfont() {\n        return this.soundfontFn + '-mp3.js';\n    }\n    get midiChannel() {\n        if (this._midiChannel === undefined) {\n            this.autoAssignMidiChannel();\n        }\n        return this._midiChannel;\n    }\n    set midiChannel(ch) {\n        this._midiChannel = ch;\n    }\n}\ninstrument.Instrument = Instrument;\n\ninstrument.usedChannels = []; // differs from m21p -- stored midiProgram numbers\ninstrument.maxMidi = 16;\n\ninstrument.info = [\n    { fn: 'acoustic_grand_piano', name: 'Acoustic Grand Piano', midiNumber: 0 },\n    {\n        fn: 'bright_acoustic_piano',\n        name: 'Bright Acoustic Piano',\n        midiNumber: 1,\n    },\n    { fn: 'electric_grand_piano', name: 'Electric Grand Piano', midiNumber: 2 },\n    { fn: 'honkytonk_piano', name: 'Honky-tonk Piano', midiNumber: 3 },\n    { fn: 'electric_piano_1', name: 'Electric Piano 1', midiNumber: 4 },\n    { fn: 'electric_piano_2', name: 'Electric Piano 2', midiNumber: 5 },\n    { fn: 'harpsichord', name: 'Harpsichord', midiNumber: 6 },\n    { fn: 'clavinet', name: 'Clavinet', midiNumber: 7 },\n    { fn: 'celesta', name: 'Celesta', midiNumber: 8 },\n    { fn: 'glockenspiel', name: 'Glockenspiel', midiNumber: 9 },\n    { fn: 'music_box', name: 'Music Box', midiNumber: 10 },\n    { fn: 'vibraphone', name: 'Vibraphone', midiNumber: 11 },\n    { fn: 'marimba', name: 'Marimba', midiNumber: 12 },\n    { fn: 'xylophone', name: 'Xylophone', midiNumber: 13 },\n    { fn: 'tubular_bells', name: 'Tubular Bells', midiNumber: 14 },\n    { fn: 'dulcimer', name: 'Dulcimer', midiNumber: 15 },\n    { fn: 'drawbar_organ', name: 'Drawbar Organ', midiNumber: 16 },\n    { fn: 'percussive_organ', name: 'Percussive Organ', midiNumber: 17 },\n    { fn: 'rock_organ', name: 'Rock Organ', midiNumber: 18 },\n    { fn: 'church_organ', name: 'Church Organ', midiNumber: 19 },\n    { fn: 'reed_organ', name: 'Reed Organ', midiNumber: 20 },\n    { fn: 'accordion', name: 'Accordion', midiNumber: 21 },\n    { fn: 'harmonica', name: 'Harmonica', midiNumber: 22 },\n    { fn: 'tango_accordion', name: 'Tango Accordion', midiNumber: 23 },\n    {\n        fn: 'acoustic_guitar_nylon',\n        name: 'Acoustic Guitar (nylon)',\n        midiNumber: 24,\n    },\n    {\n        fn: 'acoustic_guitar_steel',\n        name: 'Acoustic Guitar (steel)',\n        midiNumber: 25,\n    },\n    {\n        fn: 'electric_guitar_jazz',\n        name: 'Electric Guitar (jazz)',\n        midiNumber: 26,\n    },\n    {\n        fn: 'electric_guitar_clean',\n        name: 'Electric Guitar (clean)',\n        midiNumber: 27,\n    },\n    {\n        fn: 'electric_guitar_muted',\n        name: 'Electric Guitar (muted)',\n        midiNumber: 28,\n    },\n    { fn: 'overdriven_guitar', name: 'Overdriven Guitar', midiNumber: 29 },\n    { fn: 'distortion_guitar', name: 'Distortion Guitar', midiNumber: 30 },\n    { fn: 'guitar_harmonics', name: 'Guitar Harmonics', midiNumber: 31 },\n    { fn: 'acoustic_bass', name: 'Acoustic Bass', midiNumber: 32 },\n    {\n        fn: 'electric_bass_finger',\n        name: 'Electric Bass (finger)',\n        midiNumber: 33,\n    },\n    { fn: 'electric_bass_pick', name: 'Electric Bass (pick)', midiNumber: 34 },\n    { fn: 'fretless_bass', name: 'Fretless Bass', midiNumber: 35 },\n    { fn: 'slap_bass_1', name: 'Slap Bass 1', midiNumber: 36 },\n    { fn: 'slap_bass_2', name: 'Slap Bass 2', midiNumber: 37 },\n    { fn: 'synth_bass_1', name: 'Synth Bass 1', midiNumber: 38 },\n    { fn: 'synth_bass_2', name: 'Synth Bass 2', midiNumber: 39 },\n    { fn: 'violin', name: 'Violin', midiNumber: 40 },\n    { fn: 'viola', name: 'Viola', midiNumber: 41 },\n    { fn: 'cello', name: 'Cello', midiNumber: 42 },\n    { fn: 'contrabass', name: 'Contrabass', midiNumber: 43 },\n    { fn: 'tremolo_strings', name: 'Tremolo Strings', midiNumber: 44 },\n    { fn: 'pizzicato_strings', name: 'Pizzicato Strings', midiNumber: 45 },\n    { fn: 'orchestral_harp', name: 'Orchestral Harp', midiNumber: 46 },\n    { fn: 'timpani', name: 'Timpani', midiNumber: 47 },\n    { fn: 'string_ensemble_1', name: 'String Ensemble 1', midiNumber: 48 },\n    { fn: 'string_ensemble_2', name: 'String Ensemble 2', midiNumber: 49 },\n    { fn: 'synth_strings_1', name: 'Synth Strings 1', midiNumber: 50 },\n    { fn: 'synth_strings_2', name: 'Synth Strings 2', midiNumber: 51 },\n    { fn: 'choir_aahs', name: 'Choir Aahs', midiNumber: 52 },\n    { fn: 'voice_oohs', name: 'Voice Oohs', midiNumber: 53 },\n    { fn: 'synth_choir', name: 'Synth Choir', midiNumber: 54 },\n    { fn: 'orchestra_hit', name: 'Orchestra Hit', midiNumber: 55 },\n    { fn: 'trumpet', name: 'Trumpet', midiNumber: 56 },\n    { fn: 'trombone', name: 'Trombone', midiNumber: 57 },\n    { fn: 'tuba', name: 'Tuba', midiNumber: 58 },\n    { fn: 'muted_trumpet', name: 'Muted Trumpet', midiNumber: 59 },\n    { fn: 'french_horn', name: 'French Horn', midiNumber: 60 },\n    { fn: 'brass_section', name: 'Brass Section', midiNumber: 61 },\n    { fn: 'synth_brass_1', name: 'Synth Brass 1', midiNumber: 62 },\n    { fn: 'synth_brass_2', name: 'Synth Brass 2', midiNumber: 63 },\n    { fn: 'soprano_sax', name: 'Soprano Sax', midiNumber: 64 },\n    { fn: 'alto_sax', name: 'Alto Sax', midiNumber: 65 },\n    { fn: 'tenor_sax', name: 'Tenor Sax', midiNumber: 66 },\n    { fn: 'baritone_sax', name: 'Baritone Sax', midiNumber: 67 },\n    { fn: 'oboe', name: 'Oboe', midiNumber: 68 },\n    { fn: 'english_horn', name: 'English Horn', midiNumber: 69 },\n    { fn: 'bassoon', name: 'Bassoon', midiNumber: 70 },\n    { fn: 'clarinet', name: 'Clarinet', midiNumber: 71 },\n    { fn: 'piccolo', name: 'Piccolo', midiNumber: 72 },\n    { fn: 'flute', name: 'Flute', midiNumber: 73 },\n    { fn: 'recorder', name: 'Recorder', midiNumber: 74 },\n    { fn: 'pan_flute', name: 'Pan Flute', midiNumber: 75 },\n    { fn: 'blown_bottle', name: 'Blown bottle', midiNumber: 76 },\n    { fn: 'shakuhachi', name: 'Shakuhachi', midiNumber: 77 },\n    { fn: 'whistle', name: 'Whistle', midiNumber: 78 },\n    { fn: 'ocarina', name: 'Ocarina', midiNumber: 79 },\n    { fn: 'lead_1_square', name: 'Lead 1 (square)', midiNumber: 80 },\n    { fn: 'lead_2_sawtooth', name: 'Lead 2 (sawtooth)', midiNumber: 81 },\n    { fn: 'lead_3_calliope', name: 'Lead 3 (calliope)', midiNumber: 82 },\n    { fn: 'lead_4_chiff', name: 'Lead 4 chiff', midiNumber: 83 },\n    { fn: 'lead_5_charang', name: 'Lead 5 (charang)', midiNumber: 84 },\n    { fn: 'lead_6_voice', name: 'Lead 6 (voice)', midiNumber: 85 },\n    { fn: 'lead_7_fifths', name: 'Lead 7 (fifths)', midiNumber: 86 },\n    { fn: 'lead_8_bass__lead', name: 'Lead 8 (bass + lead)', midiNumber: 87 },\n    { fn: 'pad_1_new_age', name: 'Pad 1 (new age)', midiNumber: 88 },\n    { fn: 'pad_2_warm', name: 'Pad 2 (warm)', midiNumber: 89 },\n    { fn: 'pad_3_polysynth', name: 'Pad 3 (polysynth)', midiNumber: 90 },\n    { fn: 'pad_4_choir', name: 'Pad 4 (choir)', midiNumber: 91 },\n    { fn: 'pad_5_bowed', name: 'Pad 5 (bowed)', midiNumber: 92 },\n    { fn: 'pad_6_metallic', name: 'Pad 6 (metallic)', midiNumber: 93 },\n    { fn: 'pad_7_halo', name: 'Pad 7 (halo)', midiNumber: 94 },\n    { fn: 'pad_8_sweep', name: 'Pad 8 (sweep)', midiNumber: 95 },\n    { fn: 'fx_1_rain', name: 'FX 1 (rain)', midiNumber: 96 },\n    { fn: 'fx_2_soundtrack', name: 'FX 2 (soundtrack)', midiNumber: 97 },\n    { fn: 'fx_3_crystal', name: 'FX 3 (crystal)', midiNumber: 98 },\n    { fn: 'fx_4_atmosphere', name: 'FX 4 (atmosphere)', midiNumber: 99 },\n    { fn: 'fx_5_brightness', name: 'FX 5 (brightness)', midiNumber: 100 },\n    { fn: 'fx_6_goblins', name: 'FX 6 (goblins)', midiNumber: 101 },\n    { fn: 'fx_7_echoes', name: 'FX 7 (echoes)', midiNumber: 102 },\n    { fn: 'fx_8_scifi', name: 'FX 8 (sci-fi)', midiNumber: 103 },\n    { fn: 'sitar', name: 'Sitar', midiNumber: 104 },\n    { fn: 'banjo', name: 'Banjo', midiNumber: 105 },\n    { fn: 'shamisen', name: 'Shamisen', midiNumber: 106 },\n    { fn: 'koto', name: 'Koto', midiNumber: 107 },\n    { fn: 'kalimba', name: 'Kalimba', midiNumber: 108 },\n    { fn: 'bagpipe', name: 'Bagpipe', midiNumber: 109 },\n    { fn: 'fiddle', name: 'Fiddle', midiNumber: 110 },\n    { fn: 'shanai', name: 'Shanai', midiNumber: 111 },\n    { fn: 'tinkle_bell', name: 'Tinkle Bell', midiNumber: 112 },\n    { fn: 'agogo', name: 'Agogo', midiNumber: 113 },\n    { fn: 'steel_drums', name: 'Steel Drums', midiNumber: 114 },\n    { fn: 'woodblock', name: 'Woodblock', midiNumber: 115 },\n    { fn: 'taiko_drum', name: 'Taiko Drum', midiNumber: 116 },\n    { fn: 'melodic_tom', name: 'Melodic Tom', midiNumber: 117 },\n    { fn: 'synth_drum', name: 'Synth Drum', midiNumber: 118 },\n    { fn: 'reverse_cymbal', name: 'Reverse Cymbal', midiNumber: 119 },\n    { fn: 'guitar_fret_noise', name: 'Guitar Fret Noise', midiNumber: 120 },\n    { fn: 'breath_noise', name: 'Breath Noise', midiNumber: 121 },\n    { fn: 'seashore', name: 'Seashore', midiNumber: 122 },\n    { fn: 'bird_tweet', name: 'Bird Tweet', midiNumber: 123 },\n    { fn: 'telephone_ring', name: 'Telephone Ring', midiNumber: 124 },\n    { fn: 'helicopter', name: 'Helicopter', midiNumber: 125 },\n    { fn: 'applause', name: 'Applause', midiNumber: 126 },\n    { fn: 'gunshot', name: 'Gunshot', midiNumber: 127 },\n];\n\n/**\n * Find information for a given instrument (by filename or name)\n * and load it into an instrument object.\n *\n * @function music21.instrument.find\n * @memberof music21.instrument\n * @param {string} fn - name or filename of instrument\n * @param {music21.instrument.Instrument} [inst] - instrument object to load into\n * @returns {music21.instrument.Instrument|undefined}\n */\ninstrument.find = function instrument_find(fn, inst) {\n    if (inst === undefined) {\n        inst = new instrument.Instrument();\n    }\n    for (let i = 0; i < instrument.info.length; i++) {\n        const info = instrument.info[i];\n        if (info.fn === fn || info.name === fn) {\n            inst.soundfontFn = info.fn;\n            inst.instrumentName = info.name;\n            inst.midiProgram = info.midiNumber;\n            return inst;\n        }\n    }\n    return undefined;\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/miditools -- A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * Copyright (c) 2014-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n * @author Michael Scott Cuthbert\n */\nimport * as $ from 'jquery';\nimport * as eventjs from 'eventjs'; // drag handler...\nimport * as MIDI from 'MIDI';\n\nimport { chord } from './chord.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { instrument } from './instrument.js';\nimport { note } from './note.js';\n\n/**\n * A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * @exports music21/miditools\n */\n/**\n * Module that holds **music21** tools for connecting with MIDI.js and somewhat with the\n * events from the Jazz plugin or the WebMIDI protocol.\n *\n * @namespace music21.miditools\n * @memberof music21\n */\nexport const miditools = {};\n\n/**\n * Number of octaves to transpose all incoming midi signals\n *\n * @type {number}\n * @default 0\n */\nmiditools.transposeOctave = 0;\n/**\n * @class Event\n * @memberof music21.miditools\n * @param {number} t - timing information\n * @param {number} a - midi data 1 (N.B. a >> 4 = midiCommand )\n * @param {number} b - midi data 2\n * @param {number} c - midi data 3\n */\nexport class Event {\n    constructor(t, a, b, c) {\n        this.timing = t;\n        this.data1 = a;\n        this.data2 = b;\n        this.data3 = c;\n        this.midiCommand = a >> 4;\n\n        this.noteOff = this.midiCommand === 8;\n        this.noteOn = this.midiCommand === 9;\n\n        this.midiNote = undefined;\n        if (this.noteOn || this.noteOff) {\n            this.midiNote = this.data2 + 12 * miditools.transposeOctave;\n            this.velocity = this.data3;\n        }\n    }\n    /**\n     * Calls MIDI.noteOn or MIDI.noteOff for the note\n     * represented by the Event (if appropriate)\n     *\n     * @memberof music21.miditools.Event\n     * @returns {undefined}\n     */\n    sendToMIDIjs() {\n        if (MIDI !== undefined && MIDI.noteOn !== undefined) {\n            // noteOn check because does not exist if no audio context\n            // or soundfont has been loaded, such as if a play event\n            // is triggered before soundfont has been loaded.\n            if (this.noteOn) {\n                MIDI.noteOn(0, this.midiNote, this.velocity, 0);\n            } else if (this.noteOff) {\n                MIDI.noteOff(0, this.midiNote, 0);\n            }\n        } else {\n            console.warn('could not playback note because no MIDIout defined');\n        }\n    }\n    /**\n     * Makes a {@link music21.note.Note} object from the event's midiNote number.\n     *\n     * @memberof music21.miditools.Event\n     * @returns {music21.note.Note} - the {@link music21.note.Note} object represented by Event.midiNote\n     */\n    music21Note() {\n        const m21n = new note.Note();\n        m21n.pitch.ps = this.midiNote;\n        return m21n;\n    }\n}\nmiditools.Event = Event;\n\n/**\n * How long to wait in milliseconds before deciding that a note belongs to another chord. Default 100ms\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.maxDelay = 100; // in ms\n/**\n * At what time (in ms since Epoch) the chord started.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.heldChordTime = 0;\n/**\n * An Array (or undefined) of currently held chords that have not been sent out yet.\n *\n * @memberof music21.miditools\n * @type {Array|undefined}\n */\nmiditools.heldChordNotes = undefined;\n\n/**\n * When, in MS since Jan 1, 1970, was the last {@link music21.note.Note} played.\n * Defaults to the time that the module was loaded.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.timeOfLastNote = Date.now(); // in ms\n\nmiditools._baseTempo = 60;\n/**\n * Assign (or query) a Metronome object to run all timing information.\n *\n * @memberof music21.miditools\n * @type {music21.tempo.Metronome}\n */\nmiditools.metronome = undefined;\n\nObject.defineProperties(miditools, {\n    tempo: {\n        enumerable: true,\n        get() {\n            if (this.metronome === undefined) {\n                return this._baseTempo;\n            } else {\n                return this.metronome.tempo;\n            }\n        },\n        set(t) {\n            if (this.metronome === undefined) {\n                this._baseTempo = t;\n            } else {\n                this.metronome.tempo = t;\n            }\n        },\n    },\n});\n\n/* --------- chords ------------- */\n/**\n *  Clears chords that are older than miditools.heldChordTime\n *\n *  Runs a setTimeout on itself.\n *  Calls miditools.sendOutChord\n *\n *  @memberof music21.miditools\n */\nmiditools.clearOldChords = function clearOldChords() {\n    // clear out notes that may be a chord...\n    const nowInMs = Date.now(); // in ms\n    if (miditools.heldChordTime + miditools.maxDelay < nowInMs) {\n        miditools.heldChordTime = nowInMs;\n        if (miditools.heldChordNotes !== undefined) {\n            // console.log('to send out chords');\n            miditools.sendOutChord(miditools.heldChordNotes);\n            miditools.heldChordNotes = undefined;\n        }\n    }\n    setTimeout(miditools.clearOldChords, miditools.maxDelay);\n};\n/**\n *  Take a series of jEvent noteOn objects and convert them to a single Chord object\n *  so long as they are all sounded within miditools.maxDelay milliseconds of each other.\n *  this method stores notes in miditools.heldChordNotes (Array).\n *\n *  @param {music21.miditools.Event} jEvent\n *  @memberof music21.miditools\n *  @returns undefined\n */\nmiditools.makeChords = function makeChords(jEvent) {\n    // jEvent is a miditools.Event object\n    if (jEvent.noteOn) {\n        const m21n = jEvent.music21Note();\n        if (miditools.heldChordNotes === undefined) {\n            miditools.heldChordNotes = [m21n];\n        } else {\n            for (let i = 0; i < miditools.heldChordNotes.length; i++) {\n                const foundNote = miditools.heldChordNotes[i];\n                if (foundNote.pitch.ps === m21n.pitch.ps) {\n                    return; // no duplicates\n                }\n            }\n            miditools.heldChordNotes.push(m21n);\n        }\n    }\n};\n\n/**\n * The last Note or Chord to be sent out from miditools.  This is an important semi-global\n * attribute, since the last element may need to be quantized by quantizeLastNote() to\n * determine its length, since the note may need to be placed into a staff before its total\n * length can be determined.\n *\n * @memberof music21.miditools\n * @type {music21.chord.Chord|music21.note.Note|undefined}\n */\nmiditools.lastElement = undefined;\n\n/**\n * Take the list of Notes and makes a chord out of it, if appropriate and call\n * {@link music21.miditools.callBacks.sendOutChord} callback with the Chord or Note as a parameter.\n *\n * @memberof music21.miditools\n * @param {Array<music21.note.Note>} chordNoteList - an Array of {@link music21.note.Note} objects\n * @returns {(music21.note.Note|music21.chord.Chord|undefined)} A {@link music21.chord.Chord} object,\n * most likely, but maybe a {@link music21.note.Note} object)\n */\nmiditools.sendOutChord = function sendOutChord(chordNoteList) {\n    let appendObject;\n    if (chordNoteList.length > 1) {\n        // console.log(chordNoteList[0].name, chordNoteList[1].name);\n        appendObject = new chord.Chord(chordNoteList);\n    } else if (chordNoteList.length === 1) {\n        appendObject = chordNoteList[0]; // note object\n    } else {\n        return undefined;\n    }\n    appendObject.stemDirection = 'noStem';\n    miditools.quantizeLastNote();\n    miditools.lastElement = appendObject;\n    if (miditools.callBacks.sendOutChord !== undefined) {\n        miditools.callBacks.sendOutChord(appendObject);\n    }\n    return appendObject;\n};\n\n/* ----------- callbacks --------- */\n// TODO: all callbacks (incl. raw, sendOutChord) should be able to be a function or an array of functions\n\n/**\n* callBacks is an object with three keys:\n*\n* - raw: function (t, a, b,c) to call when any midievent arrives. Default: `function (t, a, b, c) { return new miditools.Event(t, a, b, c); }`\n* - general: function ( miditools.Event() ) to call when an Event object has been created. Default: `[miditools.sendToMIDIjs, miditools.quantizeLastNote]`\n* - sendOutChord: function (array_of_note.Note_objects) to call when a sufficient time has passed to build a chord from input. Default: empty function.\n*\n* At present, only \"general\" can take an Array of event listening functions, but I hope to change that for sendOutChord also.\n*\n* \"general\" is usually the callback list to play around with.\n*\n* @memberof music21.miditools\n*/\nmiditools.callBacks = {\n    raw: (t, a, b, c) => new miditools.Event(t, a, b, c),\n    general: [miditools.sendToMIDIjs, miditools.quantizeLastNote],\n    sendOutChord: arrayOfNotes => {},\n};\n\n/**\n * Quantizes the lastElement (passed in) or music21.miditools.lastElement.\n *\n * @memberof music21.miditools\n * @param {music21.note.GeneralNote} lastElement - A {@link music21.note.Note} to be quantized\n * @returns {music21.note.GeneralNote} The same {@link music21.note.Note} object passed in with\n * duration quantized\n */\nmiditools.quantizeLastNote = function quantizeLastNote(lastElement) {\n    if (lastElement === undefined) {\n        lastElement = this.lastElement;\n        if (lastElement === undefined) {\n            return undefined;\n        }\n    }\n    lastElement.stemDirection = undefined;\n    const nowInMS = Date.now();\n    const msSinceLastNote = nowInMS - this.timeOfLastNote;\n    this.timeOfLastNote = nowInMS;\n    const normalQuarterNoteLength = 1000 * 60 / this.tempo;\n    const numQuarterNotes = msSinceLastNote / normalQuarterNoteLength;\n    let roundedQuarterLength = Math.round(4 * numQuarterNotes) / 4;\n    if (roundedQuarterLength >= 4) {\n        roundedQuarterLength = 4;\n    } else if (roundedQuarterLength >= 3) {\n        roundedQuarterLength = 3;\n    } else if (roundedQuarterLength > 2) {\n        roundedQuarterLength = 2;\n    } else if (roundedQuarterLength === 1.25) {\n        roundedQuarterLength = 1;\n    } else if (roundedQuarterLength === 0.75) {\n        roundedQuarterLength = 0.5;\n    } else if (roundedQuarterLength === 0) {\n        roundedQuarterLength = 0.125;\n    }\n    lastElement.duration.quarterLength = roundedQuarterLength;\n    return lastElement;\n};\n\n/* ----------- callbacks --------- */\n/**\n * Callback to midiEvent.sendToMIDIjs.\n *\n * @memberof music21.miditools\n * @param {music21.miditools.Event} midiEvent - event to send out.\n * @returns undefined\n */\nmiditools.sendToMIDIjs = midiEvent => {\n    midiEvent.sendToMIDIjs();\n};\n\n/* ------------ MIDI.js ----------- */\n\n/**\n * a mapping of soundfont text names to true, false, or \"loading\".\n *\n * @memberof music21.miditools\n * @type {object}\n */\nmiditools.loadedSoundfonts = {};\n\n/**\n * Called after a soundfont has been loaded. The callback is better to be specified elsewhere\n * rather than overriding this important method.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n */\nmiditools.postLoadCallback = function postLoadCallback(soundfont, callback) {\n    // this should be bound to MIDI\n    if (debug) {\n        console.log('soundfont loaded about to execute callback.');\n        console.log(\n            'first playing two notes very softly -- seems to flush the buffer.'\n        );\n    }\n    $('.loadingSoundfont').remove();\n\n    const isFirefox = typeof InstallTrigger !== 'undefined'; // Firefox 1.0+\n    const isAudioTag = MIDI.technology === 'HTML Audio Tag';\n    const instrumentObj = instrument.find(soundfont);\n    if (instrumentObj !== undefined) {\n        MIDI.programChange(\n            instrumentObj.midiChannel,\n            instrumentObj.midiProgram\n        );\n        if (debug) {\n            console.log(\n                soundfont + ' (' + instrumentObj.midiProgram + ') loaded on ',\n                instrumentObj.midiChannel\n            );\n        }\n        if (isFirefox === false && isAudioTag === false) {\n            // Firefox ignores sound volume! so don't play! \n            // as does IE and others using HTML audio tag.\n            const channel = instrumentObj.midiChannel;\n            MIDI.noteOn(channel, 36, 1, 0);    // if no notes have been played before then\n            MIDI.noteOff(channel, 36, 1, 0.1); // the second note to be played is always\n            MIDI.noteOn(channel, 48, 1, 0.2);  // very clipped (on Safari at least)\n            MIDI.noteOff(channel, 48, 1, 0.3); // this helps a lot.\n            MIDI.noteOn(channel, 60, 1, 0.3);  // chrome needs three notes?\n            MIDI.noteOff(channel, 60, 1, 0.4);\n        }\n    }\n    if (callback !== undefined) {\n        callback(instrumentObj);\n    }\n    miditools.loadedSoundfonts[soundfont] = true;\n};\n\n/**\n * method to load soundfonts while waiting for other processes that need them\n * to load first.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n * @example\n * s = new music21.stream.Stream();\n * music21.miditools.loadSoundfont(\n *     'clarinet',\n *     function(i) {\n *         console.log('instrument object', i, 'loaded');\n *         s.instrument = i;\n * });\n */\nmiditools.loadSoundfont = function loadSoundfont(soundfont, callback) {\n    if (miditools.loadedSoundfonts[soundfont] === true) {\n        // this soundfont has already been loaded once, so just call the callback.\n        if (callback !== undefined) {\n            const instrumentObj = instrument.find(soundfont);\n            callback(instrumentObj);\n        }\n    } else if (miditools.loadedSoundfonts[soundfont] === 'loading') {\n        // we are still waiting for this instrument to load, so\n        // wait for it before calling callback.\n        const waitThenCall = () => {\n            if (miditools.loadedSoundfonts[soundfont] === true) {\n                if (debug) {\n                    console.log(\n                        'other process has finished loading; calling callback'\n                    );\n                }\n                if (callback !== undefined) {\n                    const instrumentObj = instrument.find(soundfont);\n                    callback(instrumentObj);\n                }\n            } else {\n                if (debug) {\n                    console.log('waiting for other process load');\n                }\n                setTimeout(waitThenCall, 100);\n            }\n        };\n        waitThenCall();\n    } else {\n        // soundfont we have not seen before:\n        // set its status to loading and then load it.\n        miditools.loadedSoundfonts[soundfont] = 'loading';\n        if (debug) {\n            console.log('waiting for document ready');\n        }\n        $(document).ready(() => {\n            if (debug) {\n                console.log('document ready, waiting to load soundfont');\n            }\n            $(document.body).append(\n                $(\n                    \"<div class='loadingSoundfont'><b>Loading MIDI Instrument</b>: \"\n                        + 'audio will begin when this message disappears.</div>'\n                )\n            );\n            MIDI.loadPlugin({\n                soundfontUrl: common.urls.soundfontUrl,\n                instrument: soundfont,\n                onsuccess: miditools.postLoadCallback.bind(\n                    MIDI,\n                    soundfont,\n                    callback\n                ),\n            });\n        });\n    }\n};\n\n/**\n * MidiPlayer -- an embedded midi player including the ability to create a\n * playback device.\n *\n * @class MidiPlayer\n * @memberOf music21.miditools\n * @property {number} speed - playback speed scaling (1=default).\n * @property {JQueryDOMObject|undefined} $playDiv - div holding the player,\n */\nexport class MidiPlayer {\n    constructor() {\n        this.player = new MIDI.Players.PlayInstance();\n        this.speed = 1.0;\n        this.$playDiv = undefined;\n    }\n    /**\n     * @param where\n     * @returns DOMElement\n     */\n    addPlayer(where) {\n        let $where = where;\n        if (where === undefined) {\n            where = document.body;\n        }\n        if (where.jquery === undefined) {\n            $where = $(where);\n        }\n        const $playDiv = $('<div class=\"midiPlayer\">');\n        const $controls = $('<div class=\"positionControls\">');\n        const $playPause = $(\n            '<input type=\"image\" src=\"'\n                + this.playPng()\n                + '\" align=\"absmiddle\" value=\"play\" class=\"playPause\">'\n        );\n        const $stop = $(\n            '<input type=\"image\" src=\"'\n                + this.stopPng()\n                + '\" align=\"absmiddle\" value=\"stop\" class=\"stopButton\">'\n        );\n\n        $playPause.on('click', this.pausePlayStop.bind(this));\n        $stop.on('click', this.stopButton.bind(this));\n        $controls.append($playPause);\n        $controls.append($stop);\n        $playDiv.append($controls);\n\n        const $time = $('<div class=\"timeControls\">');\n        const $timePlayed = $('<span class=\"timePlayed\">0:00</span>');\n        const $capsule = $(\n            '<span class=\"capsule\"><span class=\"cursor\"></span></span>'\n        );\n        const $timeRemaining = $('<span class=\"timeRemaining\">-0:00</span>');\n        $time.append($timePlayed);\n        $time.append($capsule);\n        $time.append($timeRemaining);\n        $playDiv.append($time);\n\n        $where.append($playDiv);\n        this.$playDiv = $playDiv;\n        return $playDiv;\n    }\n\n    stopButton() {\n        this.pausePlayStop('yes');\n    }\n\n    playPng() {\n        return common.urls.midiPlayer + '/play.png';\n    }\n    pausePng() {\n        return common.urls.midiPlayer + '/pause.png';\n    }\n    stopPng() {\n        return common.urls.midiPlayer + '/stop.png';\n    }\n\n    pausePlayStop(stop) {\n        let d;\n        if (this.$playDiv === undefined) {\n            d = { src: 'doesnt matter' };\n        } else {\n            d = this.$playDiv.find('.playPause')[0];\n        }\n        if (stop === 'yes') {\n            this.player.stop();\n            d.src = this.playPng();\n        } else if (this.player.playing || stop === 'pause') {\n            d.src = this.playPng();\n            this.player.pause(true);\n        } else {\n            d.src = this.pausePng();\n            this.player.resume();\n        }\n    }\n\n    base64Load(b64data) {\n        const player = this.player;\n        player.timeWarp = this.speed;\n\n        const m21midiplayer = this;\n        miditools.loadSoundfont('acoustic_grand_piano', () => {\n            player.loadFile(\n                b64data,\n                () => {\n                    // success\n                    m21midiplayer.fileLoaded();\n                },\n                undefined, // loading\n                e => {\n                    // failure\n                    console.log(e);\n                }\n            );\n        });\n    }\n\n    songFinished() {\n        this.pausePlayStop('yes');\n    }\n\n    fileLoaded() {\n        this.updatePlaying();\n    }\n\n    startAndUpdate() {\n        this.player.start();\n        this.updatePlaying();\n    }\n\n    updatePlaying() {\n        const self = this;\n        const player = this.player;\n        if (this.$playDiv === undefined) {\n            return;\n        }\n        const $d = this.$playDiv;\n        // update the timestamp\n        const timePlayed = $d.find('.timePlayed')[0];\n        const timeRemaining = $d.find('.timeRemaining')[0];\n        const timeCursor = $d.find('.cursor')[0];\n        const $capsule = $d.find('.capsule');\n        //\n        eventjs.add($capsule[0], 'drag', (event, self) => {\n            eventjs.cancel(event);\n            const player = this.player;\n            player.currentTime = self.x / 420 * player.endTime;\n            if (player.currentTime < 0) {\n                player.currentTime = 0;\n            }\n            if (player.currentTime > player.endTime) {\n                player.currentTime = player.endTime;\n            }\n            if (self.state === 'down') {\n                this.pausePlayStop('pause');\n            } else if (self.state === 'up') {\n                this.pausePlayStop('play');\n            }\n        });\n        //\n        function timeFormatting(n) {\n            const minutes = (n / 60) >> 0;\n            let seconds = String((n - minutes * 60) >> 0);\n            if (seconds.length === 1) {\n                seconds = '0' + seconds;\n            }\n            return minutes + ':' + seconds;\n        }\n\n        player.setAnimation(data => {\n            const percent = data.now / data.end;\n            const now = data.now >> 0; // where we are now\n            const end = data.end >> 0; // end of song\n            if (now === end) {\n                // go to next song\n                self.songFinished();\n            }\n            // display the information to the user\n            timeCursor.style.width = percent * 100 + '%';\n            timePlayed.innerHTML = timeFormatting(now);\n            timeRemaining.innerHTML = '-' + timeFormatting(end - now);\n        });\n    }\n}\nmiditools.MidiPlayer = MidiPlayer;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/keyboard -- PianoKeyboard rendering and display objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\n// Minimum usage:\n\n// var kd = document.getElementById('keyboardDiv');\n// k = new music21.keyboard.Keyboard();\n// k.appendKeyboard(kd, 6, 57); // 88 key keyboard\n\n// configurable:\n// k.scaleFactor = 1.2;  // default 1\n// k.whiteKeyWidth = 40; // default 23\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { common } from './common.js';\nimport { miditools } from './miditools.js';\nimport { pitch } from './pitch.js';\n\n/**\n * Keyboard module, see {@link music21.keyboard} namespace\n *\n * @exports music21/keyboard\n */\n/**\n * keyboard namespace -- tools for creating an onscreen keyboard and interacting with it.\n *\n * @namespace music21.keyboard\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n * @requires music21/miditools\n * @requires jquery\n * @requires MIDI\n */\nexport const keyboard = {};\n/**\n * Represents a single Key\n *\n * @class Key\n * @memberof music21.keyboard\n * @property {Array<function>} callbacks - called when key is clicked/selected\n * @property {number} [scaleFactor=1]\n * @property {music21.keyboard.Keyboard|undefined} parent\n * @property {Int} id - midinumber associated with the key.\n * @property {music21.pitch.Pitch|undefined} pitchObj\n * @property {DOMObject|undefined} svgObj - SVG representing the drawing of the key\n * @property {DOMObject|undefined} noteNameSvgObj - SVG representing the note name drawn on the key\n * @property {string} keyStyle='' - css style information for the key\n * @property {string} keyClass='' - css class information for the key (\"keyboardkey\" + this is the class)\n * @property {number} width - width of key\n * @property {number} height - height of key\n */\nexport class Key {\n    constructor() {\n        this.classes = ['Key']; // name conflict with key.Key\n        this.callbacks = [];\n        this.scaleFactor = 1;\n        this.parent = undefined;\n        this.id = 0;\n        this.width = 23;\n        this.height = 120;\n        this.pitchObj = undefined;\n        this.svgObj = undefined;\n        this.noteNameSvgObj = undefined;\n        this.keyStyle = '';\n        this.keyClass = '';\n    }\n    /**\n     * Gets an SVG object for the key\n     *\n     * @method music21.keyboard.Key#makeKey\n     * @memberof music21.keyboard.Key\n     * @param {number} startX - X position in pixels from left of keyboard to draw key at\n     * @returns {DOMObject} a SVG rectangle for the key\n     */\n    makeKey(startX) {\n        const keyattrs = {\n            style: this.keyStyle,\n            x: startX,\n            y: 0,\n            class: 'keyboardkey ' + this.keyClass,\n            id: this.id,\n            width: this.width * this.scaleFactor,\n            height: this.height * this.scaleFactor,\n            rx: 3,\n            ry: 3,\n        };\n        const keyDOM = common.makeSVGright('rect', keyattrs);\n        for (const x in this.callbacks) {\n            if ({}.hasOwnProperty.call(this.callbacks, x)) {\n                keyDOM.addEventListener(x, this.callbacks[x], false);\n            }\n        }\n        this.svgObj = keyDOM;\n        return keyDOM;\n    }\n    /**\n     * Adds a circle (red) on the key (to mark middle C etc.)\n     *\n     * @method music21.keyboard.Key#addCircle\n     * @param {string} [strokeColor='red']\n     * @returns {DOMObject}\n     */\n    addCircle(strokeColor) {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return undefined;\n        }\n        if (strokeColor === undefined) {\n            strokeColor = 'red';\n        }\n        const x = parseInt(this.svgObj.getAttribute('x'));\n        const cx = x + this.parent.scaleFactor * this.width / 2;\n        // console.log('cx', cx);\n        const keyattrs = {\n            stroke: strokeColor,\n            'stroke-width': 3,\n            fill: 'none',\n            cx,\n            cy: (this.height - 10) * this.parent.scaleFactor,\n            class: 'keyboardkeyannotation',\n            r: this.width * this.parent.scaleFactor / 4,\n        };\n\n        const circleDom = common.makeSVGright('circle', keyattrs);\n        this.parent.svgObj.appendChild(circleDom);\n        // console.log(circleDom);\n        return circleDom;\n    }\n    /**\n     * Adds the note name on the key\n     *\n     * @method music21.keyboard.Key#addNoteName\n     * @param {Boolean} [labelOctaves=false] - use octave numbers too?\n     * @returns {DOMObject}\n     */\n    addNoteName(labelOctaves) {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return this;\n        }\n        if (this.id === 0 && this.pitchObj === undefined) {\n            return this;\n        } else if (this.pitchObj === undefined) {\n            this.pitchObj = new pitch.Pitch();\n            this.pitchObj.ps = this.id;\n        }\n        if (\n            this.pitchObj.accidental !== undefined\n            && this.pitchObj.accidental.alter !== 0\n        ) {\n            return this;\n        }\n        let x = parseInt(this.svgObj.getAttribute('x'));\n        let idStr = this.pitchObj.name;\n        let fontSize = 14;\n        if (labelOctaves === true) {\n            idStr = this.pitchObj.nameWithOctave;\n            fontSize = 12;\n            x -= 2;\n        }\n        fontSize = Math.floor(fontSize * parent.scaleFactor);\n\n        let textfill = 'white';\n        if (this.keyClass === 'whitekey') {\n            textfill = 'black';\n        }\n        const textattrs = {\n            fill: textfill,\n            x: x + this.parent.scaleFactor * (this.width / 2 - 5),\n            y: this.parent.scaleFactor * (this.height - 20),\n            class: 'keyboardkeyname',\n            'font-size': fontSize,\n        };\n\n        const textDom = common.makeSVGright('text', textattrs);\n        const textNode = document.createTextNode(idStr);\n        textDom.appendChild(textNode);\n        this.noteNameSvgObj = textDom; // store for removing...\n        this.parent.svgObj.appendChild(textDom);\n        return this;\n    }\n    /**\n     * Removes the note name from the key (if exists)\n     *\n     * @method music21.keyboard.Key#removeNoteName\n     * @returns {undefined}\n     */\n    removeNoteName() {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return;\n        }\n        if (this.noteNameSvgObj === undefined) {\n            return;\n        }\n        if (this.noteNameSvgObj.parentNode === this.parent.svgObj) {\n            this.parent.svgObj.removeChild(this.noteNameSvgObj);\n        }\n        this.noteNameSvgObj = undefined;\n    }\n}\nkeyboard.Key = Key;\n\n/**\n * Defaults for a WhiteKey (width, height, keyStyle, keyClass)\n *\n * @class WhiteKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class WhiteKey extends Key {\n    constructor() {\n        super();\n        this.width = 23;\n        this.height = 120;\n        this.keyStyle = 'fill:#fffff6;stroke:black';\n        this.keyClass = 'whitekey';\n    }\n}\nkeyboard.WhiteKey = WhiteKey;\n/**\n * Defaults for a BlackKey (width, height, keyStyle, keyClass)\n *\n * @class BlackKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class BlackKey extends Key {\n    constructor() {\n        super();\n        this.width = 13;\n        this.height = 80;\n        this.keyStyle = 'fill:black;stroke:black';\n        this.keyClass = 'blackkey';\n    }\n}\n\nkeyboard.BlackKey = BlackKey;\n\n/**\n * A Class representing a whole Keyboard full of keys.\n *\n * @class Keyboard\n * @memberof music21.keyboard\n * @property {number} whiteKeyWidth - default 23\n * @property {number} scaleFactor - default 1\n * @property {object} keyObjects - a mapping of id to {@link music21.keyboard.Key} objects\n * @property {DOMObject} svgObj - the SVG object of the keyboard\n * @property {Boolean} markC - default true\n * @property {Boolean} showNames - default false\n * @property {Boolean} showOctaves - default false\n * @property {string} startPitch - default \"C3\"\n * @property {string} endPitch - default \"C5\"\n * @property {Boolean} hideable - default false -- add a way to hide and show keyboard\n * @property {Boolean} scrollable - default false -- add scroll bars to change octave\n */\nexport class Keyboard {\n    constructor() {\n        this.whiteKeyWidth = 23;\n        this._defaultWhiteKeyWidth = 23;\n        this._defaultBlackKeyWidth = 13;\n        this.scaleFactor = 1;\n        this.height = 120; // does nothing right now...\n        this.keyObjects = {};\n        this.svgObj = undefined;\n\n        this.markC = true;\n        this.showNames = false;\n        this.showOctaves = false;\n\n        this.startPitch = 'C3';\n        this.endPitch = 'C5';\n        this._startDNN = undefined;\n        this._endDNN = undefined;\n\n        this.hideable = false;\n        this.scrollable = false;\n        /**\n         * An object of callbacks on events.\n         *\n         * default:\n         *\n         * - click: this.clickHandler\n         *\n         * @name callbacks\n         * @type {object}\n         * @memberof music21.keyboard.Keyboard#\n         */\n        this.callbacks = {\n            click: (keyClicked) => this.clickHandler(keyClicked),\n        };\n        //   more accurate offsets from http://www.mathpages.com/home/kmath043.htm\n        this.sharpOffsets = {\n            0: 14.3333,\n            1: 18.6666,\n            3: 13.25,\n            4: 16.25,\n            5: 19.75,\n        };\n    }\n    /**\n     * Redraws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#redrawSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    redrawSVG() {\n        if (this.svgObj === undefined) {\n            return undefined;\n        }\n        const oldSVG = this.svgObj;\n        const svgParent = oldSVG.parentNode;\n        this.keyObjects = {};\n        const svgDOM = this.createSVG();\n        svgParent.replaceChild(svgDOM, oldSVG);\n        return svgDOM;\n    }\n    /**\n     * Appends a keyboard to the `where` parameter\n     *\n     * @method music21.keyboard.Keyboard#appendKeyboard\n     * @param {JQueryDOMObject|DOMObject} [where]\n     * @returns {music21.keyboard.Keyboard} this\n     */\n    appendKeyboard(where) {\n        if (where === undefined) {\n            where = document.body;\n        } else if (where.jquery !== undefined) {\n            where = where[0];\n        }\n\n        let svgDOM = this.createSVG();\n\n        if (this.scrollable) {\n            svgDOM = this.wrapScrollable(svgDOM)[0];\n        }\n\n        if (this.hideable) {\n            // make it so the keyboard can be shown or hidden...\n            this.appendHideableKeyboard(where, svgDOM);\n        } else {\n            where.appendChild(svgDOM); // svg must use appendChild, not append.\n        }\n        return this;\n    }\n    /**\n     * Handle a click on a given SVG object\n     *\n     * @method music21.keyboard.Keyboard#clickHandler\n     * @param {DOMObject} keyRect - the dom object with the keyboard.\n     */\n    clickHandler(keyRect) {\n        // to-do : integrate with jazzHighlight...\n        const id = keyRect.id;\n        const thisKeyObject = this.keyObjects[id];\n        if (thisKeyObject === undefined) {\n            return; // not on keyboard;\n        }\n        const storedStyle = thisKeyObject.keyStyle;\n        let fillColor = '#c0c000';\n        if (thisKeyObject.keyClass === 'whitekey') {\n            fillColor = 'yellow';\n        }\n        keyRect.setAttribute('style', 'fill:' + fillColor + ';stroke:black');\n        miditools.loadSoundfont('acoustic_grand_piano', i => {\n            MIDI.noteOn(i.midiChannel, id, 100, 0);\n            MIDI.noteOff(i.midiChannel, id, 500);\n        });\n        setTimeout(() => {\n            keyRect.setAttribute('style', storedStyle);\n        }, 500);\n    }\n\n    /**\n     * Draws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#createSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    createSVG() {\n        // DNN = pitch.diatonicNoteNum;\n        // this._endDNN = final key note. I.e., the last note to be included, not the first note not included.\n        // 6, 57 gives a standard 88-key keyboard;\n        if (this._startDNN === undefined) {\n            if (typeof this.startPitch === 'string') {\n                const tempP = new pitch.Pitch(this.startPitch);\n                this._startDNN = tempP.diatonicNoteNum;\n            } else {\n                this._startDNN = this.startPitch;\n            }\n        }\n\n        if (this._endDNN === undefined) {\n            if (typeof this.endPitch === 'string') {\n                const tempP = new pitch.Pitch(this.endPitch);\n                this._endDNN = tempP.diatonicNoteNum;\n            } else {\n                this._endDNN = this.endPitch;\n            }\n        }\n\n        let currentIndex = (this._startDNN - 1) % 7; // C = 0\n        const keyboardDiatonicLength = 1 + this._endDNN - this._startDNN;\n        const totalWidth\n            = this.whiteKeyWidth * this.scaleFactor * keyboardDiatonicLength;\n        const height = 120 * this.scaleFactor;\n        const heightString = height.toString() + 'px';\n\n        const svgDOM = common.makeSVGright('svg', {\n            'xml:space': 'preserve',\n            height: heightString,\n            width: totalWidth.toString() + 'px',\n            class: 'keyboardSVG',\n        });\n        const movingPitch = new pitch.Pitch('C4');\n        const blackKeys = [];\n        const thisKeyboardObject = this;\n\n        for (let wki = 0; wki < keyboardDiatonicLength; wki++) {\n            movingPitch.diatonicNoteNum = this._startDNN + wki;\n            const wk = new keyboard.WhiteKey();\n            wk.id = movingPitch.midi;\n            wk.parent = this;\n            this.keyObjects[movingPitch.midi] = wk;\n            wk.scaleFactor = this.scaleFactor;\n            wk.width = this.whiteKeyWidth;\n            wk.callbacks.click = function whitekeyCallbacksClick() {\n                thisKeyboardObject.callbacks.click(this);\n            };\n\n            const wkSVG = wk.makeKey(\n                this.whiteKeyWidth * this.scaleFactor * wki\n            );\n            svgDOM.appendChild(wkSVG);\n\n            if (\n                (currentIndex === 0\n                    || currentIndex === 1\n                    || currentIndex === 3\n                    || currentIndex === 4\n                    || currentIndex === 5)\n                && wki !== keyboardDiatonicLength - 1\n            ) {\n                // create but do not append blackkey to the right of whitekey\n                const bk = new keyboard.BlackKey();\n                bk.id = movingPitch.midi + 1;\n                this.keyObjects[movingPitch.midi + 1] = bk;\n                bk.parent = this;\n\n                bk.scaleFactor = this.scaleFactor;\n                bk.width\n                    = this._defaultBlackKeyWidth\n                    * this.whiteKeyWidth\n                    / this._defaultWhiteKeyWidth;\n                bk.callbacks.click = function blackKeyClicksCallback() {\n                    thisKeyboardObject.callbacks.click(this);\n                };\n\n                let offsetFromWhiteKey = this.sharpOffsets[currentIndex];\n                offsetFromWhiteKey\n                    *= this.whiteKeyWidth\n                    / this._defaultWhiteKeyWidth\n                    * this.scaleFactor;\n                const bkSVG = bk.makeKey(\n                    this.whiteKeyWidth * this.scaleFactor * wki\n                        + offsetFromWhiteKey\n                );\n                blackKeys.push(bkSVG);\n            }\n            currentIndex += 1;\n            currentIndex %= 7;\n        }\n        // append blackkeys later since they overlap white keys;\n        for (let bki = 0; bki < blackKeys.length; bki++) {\n            svgDOM.appendChild(blackKeys[bki]);\n        }\n\n        this.svgObj = svgDOM;\n        if (this.markC) {\n            this.markMiddleC();\n        }\n        if (this.showNames) {\n            this.markNoteNames(this.showOctaves);\n        }\n\n        return svgDOM;\n    }\n\n    /**\n     * Puts a circle on middle c.\n     *\n     * @method music21.keyboard.Keyboard#markMiddleC\n     * @param {string} [strokeColor='red']\n     */\n    markMiddleC(strokeColor) {\n        const midC = this.keyObjects[60];\n        if (midC !== undefined) {\n            midC.addCircle('red');\n        }\n    }\n    /**\n     * Puts note names on every white key.\n     *\n     * @method music21.keyboard.Keyboard#markNoteNames\n     * @param {Boolean} [labelOctaves=false]\n     */\n    markNoteNames(labelOctaves) {\n        this.removeNoteNames(); // in case...\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.addNoteName(labelOctaves);\n            }\n        }\n    }\n\n    /**\n     * Remove note names on the keys, if they exist\n     *\n     * @method music21.keyboard.Keyboard#removeNoteNames\n     */\n    removeNoteNames() {\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.removeNoteName();\n            }\n        }\n    }\n\n    /**\n     * Wraps the SVG object inside a scrollable set of buttons\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * scrollable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#wrapScrollable\n     * @param {DOMObject} svgDOM\n     * @returns {JQueryDOMObject}\n     */\n    wrapScrollable(svgDOM) {\n        const $wrapper = $(\n            \"<div class='keyboardScrollableWrapper'></div>\"\n        ).css({\n            display: 'inline-block',\n        });\n        const $bDown = $(\"<button class='keyboardOctaveDown'>&lt;&lt;</button>\")\n            .css({\n                'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n            })\n            .bind('click', () => {\n                miditools.transposeOctave -= 1;\n                this._startDNN -= 7;\n                this._endDNN -= 7;\n                this.redrawSVG();\n            });\n        const $bUp = $(\"<button class='keyboardOctaveUp'>&gt;&gt;</button>\")\n            .css({\n                'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n            })\n            .bind('click', () => {\n                miditools.transposeOctave += 1;\n                this._startDNN += 7;\n                this._endDNN += 7;\n                this.redrawSVG();\n            });\n        const $kWrapper = $(\n            \"<div style='display:inline-block; vertical-align: middle' class='keyboardScrollableInnerDiv'></div>\"\n        );\n        $kWrapper[0].appendChild(svgDOM);\n        $wrapper.append($bDown);\n        $wrapper.append($kWrapper);\n        $wrapper.append($bUp);\n        return $wrapper;\n    }\n    /**\n     * Puts a hideable keyboard inside a Div with the proper controls.\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * hideable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#appendHideableKeyboard\n     * @param {DOMObject} where\n     * @param {DOMObject} keyboardSVG\n     */\n    appendHideableKeyboard(where, keyboardSVG) {\n        const $container = $(\"<div class='keyboardHideableContainer'/>\");\n        const $bInside = $(\"<div class='keyboardToggleInside'>↥</div>\").css({\n            display: 'inline-block',\n            'padding-top': '40px',\n            'font-size': '40px',\n        });\n        const $b = $(\"<div class='keyboardToggleOutside'/>\").css({\n            display: 'inline-block',\n            'vertical-align': 'top',\n            background: 'white',\n        });\n        $b.append($bInside);\n        $b.data(\n            'defaultDisplay',\n            $container.find('.keyboardSVG').css('display')\n        );\n        $b.data('state', 'down');\n        $b.click(keyboard.triggerToggleShow);\n        const $explain = $(\n            \"<div class='keyboardExplain'>Show keyboard</div>\"\n        ).css({\n            display: 'none',\n            'background-color': 'white',\n            padding: '10px 10px 10px 10px',\n            'font-size': '12pt',\n        });\n        $b.append($explain);\n        $container.append($b);\n        $container[0].appendChild(keyboardSVG); // svg must use appendChild, not append.\n        $(where).append($container);\n        return $container;\n    }\n}\n\n/**\n * triggerToggleShow -- event for keyboard is shown or hidden.\n *\n * @function music21.keyboard.triggerToggleShow\n * @param {Event} e\n */\nkeyboard.triggerToggleShow = function triggerToggleShow(e) {\n    // \"this\" refers to the object clicked\n    // e -- event is not used.\n    const $t = $(this);\n    const state = $t.data('state');\n    const $parent = $t.parent();\n    let $k = $parent.find('.keyboardScrollableWrapper');\n    if ($k.length === 0) {\n        // not scrollable\n        $k = $parent.find('.keyboardSVG');\n    }\n    const $bInside = $t.find('.keyboardToggleInside');\n    const $explain = $parent.find('.keyboardExplain');\n    if (state === 'up') {\n        $bInside.text('↥');\n        $bInside.css('padding-top', '40px');\n        $explain.css('display', 'none');\n        let dd = $t.data('defaultDisplay');\n        if (dd === undefined) {\n            dd = 'inline';\n        }\n        $k.css('display', dd);\n        $t.data('state', 'down');\n    } else {\n        $k.css('display', 'none');\n        $explain.css('display', 'inline-block');\n        $bInside.text('↧');\n        $bInside.css('padding-top', '10px');\n        $t.data('state', 'up');\n    }\n};\n\n/**\n * highlight the keyboard stored in \"this\" appropriately\n *\n * @function music21.keyboard.jazzHighlight\n * @param {Event} e\n * @example\n * var midiCallbacksPlay = [music21.miditools.makeChords,\n *                          music21.miditools.sendToMIDIjs,\n *                          music21.keyboard.jazzHighlight.bind(k)];\n */\nkeyboard.jazzHighlight = function jazzHighlight(e) {\n    // e is a miditools.event object -- call with this = keyboard.Keyboard object via bind...\n    if (e === undefined) {\n        return;\n    }\n    if (e.noteOn) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            let intensityRGB = '';\n            let normalizedVelocity = (e.velocity + 25) / 127;\n            if (normalizedVelocity > 1) {\n                normalizedVelocity = 1.0;\n            }\n\n            if (keyObj.keyClass === 'whitekey') {\n                const intensity = normalizedVelocity.toString();\n                intensityRGB = 'rgba(255, 255, 0, ' + intensity + ')';\n            } else {\n                const intensity = Math.floor(\n                    normalizedVelocity * 255\n                ).toString();\n                intensityRGB = 'rgb(' + intensity + ',' + intensity + ',0)';\n                // console.log(intensityRGB);\n            }\n            svgObj.setAttribute(\n                'style',\n                'fill:' + intensityRGB + ';stroke:black'\n            );\n        }\n    } else if (e.noteOff) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            svgObj.setAttribute('style', keyObj.keyStyle);\n        }\n    }\n}; // call this with a bind(keyboard.Keyboard object)...\n\nkeyboard.Keyboard = Keyboard;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/meter -- TimeSignature objects\n *\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\n\nimport { base } from './base.js';\nimport { beam } from './beam.js';\nimport { common } from './common.js';\nimport { duration } from './duration.js';\n\n/**\n * meter module. See {@link music21.meter} namespace for details.\n *\n * @exports music21/meter\n */\n\n/**\n * Meter and TimeSignature Classes (esp. {@link music21.meter.TimeSignature} ) and methods.\n *\n * @namespace music21.meter\n * @memberof music21\n * @requires music21/base\n * @requires music21/duration\n */\nexport const meter = {};\n\n/**\n * A MUCH simpler version of the music21p TimeSignature object.\n *\n * @class TimeSignature\n * @memberof music21.meter\n * @param {string} meterString - a string (\"4/4\", \"3/8\" etc.) to initialize the TimeSignature.\n * @property {Int} [numerator=4]\n * @property {Int} [denominator=4]\n * @property {Array<Array<Int>>} beatGroups - groupings of beats; inner arrays are numerator, denominator\n * @property {string} ratioString - a string like \"4/4\"\n * @property {music21.duration.Duration} barDuration - a Duration object representing the expressed total length of the TimeSignature.\n */\nexport class TimeSignature extends base.Music21Object {\n    constructor(meterString) {\n        super();\n        this._numerator = 4;\n        this._denominator = 4;\n        this._beatGroups = [];\n        this._overwrittenBeatCount = undefined;\n        this._overwrittenBeatDuration = undefined;\n        if (typeof meterString === 'string') {\n            this.ratioString = meterString;\n        }\n    }\n    get numerator() {\n        return this._numerator;\n    }\n    set numerator(s) {\n        this._numerator = s;\n    }\n    get denominator() {\n        return this._denominator;\n    }\n    set denominator(s) {\n        this._denominator = s;\n    }\n    get ratioString() {\n        return this.numerator.toString() + '/' + this.denominator.toString();\n    }\n    set ratioString(meterString) {\n        const meterList = meterString.split('/');\n        this.numerator = parseInt(meterList[0]);\n        this.denominator = parseInt(meterList[1]);\n        this._beatGroups = [];\n    }\n    get barDuration() {\n        const ql = 4.0 * this._numerator / this._denominator;\n        return new duration.Duration(ql);\n    }\n    get beatGroups() {\n        if (this._beatGroups.length === 0) {\n            this._beatGroups = this.computeBeatGroups();\n        }\n        return this._beatGroups;\n    }\n    set beatGroups(newGroups) {\n        this._beatGroups = newGroups;\n    }\n\n    /**\n     *  Get the beatCount from the numerator, assuming fast 6/8, etc.\n     *  unless .beatCount has been set manually.\n     */\n    get beatCount() {\n        if (this._overwrittenBeatCount !== undefined) {\n            return this._overwrittenBeatCount;\n        }\n        if (this.numerator > 3 && this.numerator % 3 === 0) {\n            return this.numerator / 3;\n        } else {\n            return this.numerator;\n        }\n    }\n    /**\n     *  Manually set the beatCount to an int.\n     */\n    set beatCount(overwrite) {\n        this._overwrittenBeatCount = overwrite;\n        return overwrite;\n    }\n\n    /**\n     * Gets a single duration.Duration object representing\n     * the length of a beat in this time signature (using beatCount)\n     * or, if set manually, it can return a list of Durations For\n     * asymmetrical meters.\n     */\n    get beatDuration() {\n        const dur = this.barDuration;\n        dur.quarterLength /= this.beatCount;\n        return dur;\n    }\n    /**\n     * Set beatDuration to a duration.Duration object or\n     * if the client can handle it, a list of Duration objects...\n     */\n    set beatDuration(overwrite) {\n        this._overwrittenBeatDuration = overwrite;\n    }\n\n    /**\n     * Compute the Beat Group according to this time signature.\n     *\n     * @memberof music21.meter.TimeSignature\n     * @returns {Array<Array<Int>>} a list of numerator and denominators, find a list of beat groups.\n     */\n    computeBeatGroups() {\n        const tempBeatGroups = [];\n        let numBeats = this.numerator;\n        let beatValue = this.denominator;\n        if (beatValue < 8 && numBeats >= 5) {\n            const beatsToEighthNoteRatio = 8 / beatValue; // hopefully Int -- right Brian Ferneyhough?\n            beatValue = 8;\n            numBeats *= beatsToEighthNoteRatio;\n        }\n\n        if (beatValue >= 8) {\n            while (numBeats >= 5) {\n                tempBeatGroups.push([3, beatValue]);\n                numBeats -= 3;\n            }\n            if (numBeats === 4) {\n                tempBeatGroups.push([2, beatValue]);\n                tempBeatGroups.push([2, beatValue]);\n            } else if (numBeats > 0) {\n                tempBeatGroups.push([numBeats, beatValue]);\n            }\n        } else if (beatValue === 2) {\n            tempBeatGroups.push([1, 2]);\n        } else if (beatValue <= 1) {\n            tempBeatGroups.push([1, 1]);\n        } else {\n            // 4/4, 2/4, 3/4, standard stuff\n            tempBeatGroups.push([2, 8]);\n        }\n        return tempBeatGroups;\n    }\n    \n    /**\n     * Return a span of [start, end] for the current beat/beam grouping\n     */\n    offsetToSpan(offset) {\n        const beatDuration = this.beatDuration.quarterLength;\n        const beatsFromStart = Math.floor(offset / beatDuration);\n        const start = beatsFromStart * beatDuration;\n        const end = start + beatDuration;\n        return [start, end];\n    }\n    \n    /**\n     * @param {Iterable} srcStream - a stream of elements.\n     * @param {object} options - an object with measureStartOffset\n     */\n    getBeams(srcStream, options) {\n        const params = { measureStartOffset: 0.0 };\n        common.merge(params, options);\n        const measureStartOffset = params.measureStartOffset;\n        let beamsList = beam.Beams.naiveBeams(srcStream);\n        beamsList = beam.Beams.removeSandwichedUnbeamables(beamsList);\n        const fixBeamsOneElementDepth = (i, el, depth) => {\n            const beams = beamsList[i];\n            if (!beams || beams === undefined) {\n                return;\n            }\n            const beamNumber = depth + 1;\n            if (!(beams.getNumbers().includes(beamNumber))) {\n                return;\n            }\n            const dur = el.duration;\n            const pos = el.offset + measureStartOffset;\n            \n            const start = pos; // opFrac\n            const end = pos + dur.quarterLength; // opFrac;\n            const startNext = end;\n            const isLast = (i === srcStream.length - 1);\n            const isFirst = (i === 0);\n            let beamNext;\n            let beamPrevious;\n            if (!isFirst) {\n                beamPrevious = beamsList[i - 1];\n            }\n            if (!isLast) {\n                beamNext = beamsList[i + 1];\n            }\n            const [archetypeSpanStart, archetypeSpanEnd] = this.offsetToSpan(start);\n            let archetypeSpanNextStart = 0.0;\n            if (beamNext !== undefined) {\n                archetypeSpanNextStart = this.offsetToSpan(startNext)[0];\n            }\n            if (start === archetypeSpanStart && end === archetypeSpanEnd) {\n                beamsList[i] = undefined;\n                return;\n            }\n            \n            let beamType;\n            if (isFirst) {\n                beamType = 'start';\n                if (beamNext === undefined || !(beamNext.getNumbers().includes(beamNumber))) {\n                    beamType = 'partial-right';\n                }\n            } else if (isLast) {\n                beamType = 'start';\n                if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {\n                    beamType = 'partial-left';\n                }\n            } else if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {\n                if (beamNumber === 1 && beamNext === undefined) {\n                    beamsList[i] = undefined;\n                    return;\n                } else if (beamNext === undefined && beamNumber > 1) {\n                    beamType = 'partial-left';\n                } else if (startNext >= archetypeSpanEnd) {\n                    beamType = 'partial-left';\n                } else if (beamNext === undefined || !(beamNext.getNumbers().includes(beamNumber))) {\n                    beamType = 'partial-right';\n                } else {\n                    beamType = 'start';\n                }\n            } else if (beamPrevious !== undefined \n                        && beamPrevious.getNumbers().includes(beamNumber)\n                        && ['stop', 'partial-left'].includes(beamPrevious.getTypeByNumber(beamNumber))\n                       ) {\n                if (beamNext !== undefined) {\n                    beamType = 'start';                    \n                } else {\n                    beamType = 'partial-left'; \n                }\n            } else if (beamNext === undefined || !beamNext.getNumbers().includes(beamNumber)) {\n                beamType = 'stop';\n            } else if (startNext < archetypeSpanEnd) {\n                beamType = 'continue';\n            } else if (startNext >= archetypeSpanNextStart) {\n                beamType = 'stop';\n            } else {\n                console.warn('Cannot match beamType');\n                return;\n            }\n            beams.setByNumber(beamNumber, beamType);\n        };\n        \n        for (let depth = 0; depth < beam.beamableDurationTypes.length; depth++) {\n            let i = 0;\n            for (const el of srcStream) {\n                fixBeamsOneElementDepth(i, el, depth);\n                i += 1;\n            }\n        }\n        \n        beamsList = beam.Beams.sanitizePartialBeams(beamsList);\n        beamsList = beam.Beams.mergeConnectingPartialBeams(beamsList);\n        return beamsList;\n    }\n    \n    /**\n     * Compute the Beat Group according to this time signature for VexFlow. For beaming.\n     *\n     * @memberof music21.meter.TimeSignature\n     * @param {Vex} Vex - a reference to the Vex object\n     * @returns {Array<Vex.Flow.Fraction>} a list of numerator and denominator groups, for VexFlow\n     */\n    vexflowBeatGroups() {\n        const tempBeatGroups = this.beatGroups;\n        // console.log(tempBeatGroups);\n        const vfBeatGroups = [];\n        for (let i = 0; i < tempBeatGroups.length; i++) {\n            const bg = tempBeatGroups[i];\n            vfBeatGroups.push(new Vex.Flow.Fraction(bg[0], bg[1]));\n        }\n        return vfBeatGroups;\n\n        //  if (numBeats % 3 == 0 && beatValue < 4) {\n        //  // 6/8, 3/8, 9/8, etc.\n        //  numBeats = numBeats / 3;\n        //  beatValue = beatValue / 3;\n        //  }\n    }\n}\n\nmeter.TimeSignature = TimeSignature;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/renderOptions -- an object that defines the render options for a Stream\n *\n * note: no parallel in music21p\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\n/**\n * renderOptions module, see {@link music21.renderOptions}\n *\n * @exports music21/renderOptions\n */\n/**\n * Options for rendering a stream\n *\n * @namespace music21.renderOptions\n * @memberof music21\n */\nexport const renderOptions = {};\n\n/**\n * An object that contains information on rendering the current stream\n *\n * Found on every Stream as `.renderOptions`\n *\n * @class RenderOptions\n * @memberof music21.renderOptions\n */\nexport class RenderOptions {\n    constructor() {\n        const defaultOptions = {\n            displayClef: true,\n            displayTimeSignature: true,\n            displayKeySignature: true,\n\n            scaleFactor: { x: 0.7, y: 0.7 },\n\n            top: 0,\n            left: undefined,\n            width: undefined,\n            overriddenWidth: undefined,\n            height: undefined,\n            naiveHeight: 120,\n\n            systemIndex: 0,\n            partIndex: 0,\n            measureIndex: 0,\n\n            systemMeasureIndex: 0,\n            systemPadding: undefined,\n            naiveSystemPadding: 40,\n\n            stemDirection: undefined,\n\n            maxSystemWidth: undefined,\n            rightBarline: undefined,\n            staffLines: 5,\n            staffConnectors: ['single', 'brace'],\n            staffPadding: 60, // width...\n            events: {\n                click: 'play',\n                dblclick: undefined,\n                // resize\n            },\n            startNewSystem: false,\n            startNewPage: false,\n            showMeasureNumber: undefined,\n        };\n        common.merge(this, defaultOptions);\n    }\n}\nrenderOptions.RenderOptions = RenderOptions;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/vfShow -- Vexflow integration\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport * as $ from 'jquery';\nimport * as Vex from 'vexflow';\n\nimport { debug } from './debug.js';\nimport { duration } from './duration.js';\n/**\n * for rendering vexflow. Will eventually go to music21/converter/vexflow\n *\n * See {@link music21.vfShow} namespace for details\n *\n * @exports music21/vfShow\n */\n/**\n * Vexflow display related objects and methods.\n *\n * @namespace music21.vfShow\n * @memberof music21\n * @requires music21/common\n * @requires vexflow\n */\nexport const vfShow = {};\n\n/**\n * Represents a stack of objects that need to be rendered together.\n *\n * An intermediary state for showing created by {@link music21.vfShow.Renderer}.\n *\n * @class RenderStack\n * @memberof music21.vfShow\n * @property {Array<Vex.Flow.Voice>} voices - Vex.Flow.Voice objects\n * @property {Array<music21.stream.Stream>} streams - {@link music21.stream.Stream} objects\n * associated with the voices\n * @property {Array} textVoices - Vex.Flow.Voice objects for the text.\n */\nexport class RenderStack {\n    constructor() {\n        this.voices = [];\n        this.streams = [];\n        this.textVoices = [];\n        this.voiceToStreamMapping = new Map();\n    }\n    /**\n     * @memberof music21.vfShow.RenderStack\n     * @returns {Array} this.voices and this.textVoices as one array\n     */\n    allTickables() {\n        const t = [];\n        t.push(...this.voices);\n        t.push(...this.textVoices);\n        return t;\n    }\n    /**\n     * @memberof music21.vfShow.RenderStack\n     * @returns {Array<Array>} each array represents one staff....\n     * where this.voices and this.textVoices are all in that staff...\n     */\n    tickablesByStave() {\n        const tickablesByStave = []; // a list of lists of tickables being placed on the same Stave.\n        const knownStaves = []; // a list of Vex.Flow.Stave objects...\n\n        for (const t of this.allTickables()) {\n            const thisStaveIndex = knownStaves.indexOf(t.stave);\n            let currentStaveHolder;\n            if (thisStaveIndex === -1) {\n                knownStaves.push(t.stave);\n                currentStaveHolder = [];\n                tickablesByStave.push(currentStaveHolder);\n            } else {\n                currentStaveHolder = tickablesByStave[thisStaveIndex];\n            }\n            currentStaveHolder.push(t);\n        }\n        return tickablesByStave;\n    }\n}\nvfShow.RenderStack = RenderStack;\n\n/**\n * Renderer is a function that takes a stream, an\n * optional existing canvas or SVG element and a DOM\n * element where the canvas or SVG element should be placed\n * and renders the stream as Vexflow on the\n * canvas or svg element, placing it then in the where\n * DOM.\n *\n * \"s\" can be any type of Stream.\n *\n * \"div\" and \"where\" can be either a DOM\n * element or a jQuery object.\n *\n * @class Renderer\n * @memberof music21.vfShow\n * @param {music21.stream.Stream} s - main stream to render\n * @param {div} [div] - existing canvas or div-surroundingSVG element\n * @param {DOMObject|jQueryDOMObject} [where=document.body] - where to render the stream\n * @property {Vex.Flow.Renderer} vfRenderer - a Vex.Flow.Renderer to use\n * (will create if not existing)\n * @property {string} rendererType - canvas or svg\n * @property {Vex.Flow.Context} ctx - a Vex.Flow.Context (Canvas or SVG) to use.\n * @property {div} div - div-with-svg-or-canvas element\n * @property {jQueryDOMObject} $div - jQuery div or canvas element\n * @property {jQueryDOMObject} $where - jQuery element to render onto\n * @property {Vex.Flow.Formatter} activeFormatter - formatter\n * @property {Array<Vex.Flow.Beam>} beamGroups - beamGroups\n * @property {Array<Vex.Flow.StaveTie>} vfTies - ties as instances of Vex.Flow.StaveTie\n * @property {Array<number>} systemBreakOffsets - where to break the systems\n * @property {Array<Vex.Flow.Tuplet>} vfTuplets - tuplets represented in Vexflow\n * @property {Array<music21.vfShow.RenderStack>} stacks - array of RenderStack objects\n */\nexport class Renderer {\n    constructor(s, div, where) {\n        this.stream = s;\n        // this.streamType = s.classes[-1];\n        this.rendererType = 'svg';\n\n        this.div = undefined;\n        this.$div = undefined;\n        this.$where = undefined;\n        this.activeFormatter = undefined;\n        this._vfRenderer = undefined;\n        this._ctx = undefined;\n        this.beamGroups = [];\n        this.stacks = []; // an Array of RenderStacks: {voices: [Array of Vex.Flow.Voice objects],\n        //                                           streams: [Array of Streams, usually Measures]}\n        this.vfTies = [];\n        this.systemBreakOffsets = [];\n        this.vfTuplets = [];\n        // this.measureFormatters = [];\n        if (where !== undefined) {\n            if (where.jquery !== undefined) {\n                this.$where = where;\n            } else {\n                this.$where = $(where);\n            }\n        }\n        if (div !== undefined) {\n            if (div.jquery !== undefined) {\n                this.$div = div;\n                this.div = div[0];\n            } else {\n                this.div = div;\n                this.$div = $(div);\n            }\n        }\n    }\n\n    get vfRenderer() {\n        let backend;\n        if (this.rendererType === 'canvas') {\n            backend = Vex.Flow.Renderer.Backends.CANVAS;\n        } else {\n            backend = Vex.Flow.Renderer.Backends.SVG;\n        }\n\n        if (this._vfRenderer !== undefined) {\n            return this._vfRenderer;\n        } else {\n            this._vfRenderer = new Vex.Flow.Renderer(this.div, backend);\n            if (this.rendererType === 'svg') {\n                this._vfRenderer.resize(\n                    this.$div.attr('width'),\n                    this.$div.attr('height')\n                );\n            }\n            return this._vfRenderer;\n        }\n    }\n    set vfRenderer(vfr) {\n        this._vfRenderer = vfr;\n    }\n    get ctx() {\n        if (this._ctx !== undefined) {\n            return this._ctx;\n        } else {\n            this._ctx = this.vfRenderer.getContext();\n            if (\n                this.stream\n                && this.stream.renderOptions\n                && this.stream.renderOptions.scaleFactor.x\n                && this.stream.renderOptions.scaleFactor.y\n            ) {\n                this._ctx.scale(\n                    this.stream.renderOptions.scaleFactor.x,\n                    this.stream.renderOptions.scaleFactor.y\n                );\n            }\n            return this._ctx;\n        }\n    }\n    set ctx(ctx) {\n        this._ctx = ctx;\n    }\n    /**\n     *\n     * main function to render a Stream.\n     *\n     * if s is undefined, uses the stored Stream from\n     * the constructor object.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream]\n     */\n    render(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        let isScorelike = false;\n        let isPartlike = false;\n        const hasSubStreams = s.hasSubStreams();\n\n        if (s.isClassOrSubclass('Score')) {\n            isScorelike = true;\n        } else if (hasSubStreams && s.get(0).hasSubStreams()) {\n            isScorelike = true;\n        } else if (hasSubStreams) {\n            isPartlike = true;\n        }\n        // requires organization Score -> Part -> Measure -> elements...\n        if (isScorelike) {\n            this.prepareScorelike(s);\n        } else if (isPartlike) {\n            this.preparePartlike(s);\n        } else {\n            this.prepareArrivedFlat(s);\n        }\n        this.formatMeasureStacks();\n        this.drawTies();\n        this.drawMeasureStacks();\n        this.drawBeamGroups();\n        this.drawTuplets();\n    }\n    /**\n     * Prepares a scorelike stream (i.e., one with parts or\n     * Streams that should be rendered vertically like parts)\n     * for rendering and adds Staff Connectors\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Score} s - prepare a stream of parts (i.e., Score)\n     */\n    prepareScorelike(s) {\n        // console.log('prepareScorelike called');\n        //\n        const parts = s.parts;\n        for (const subStream of parts) {\n            this.preparePartlike(subStream);\n        }\n        this.addStaffConnectors(s);\n    }\n    /**\n     *\n     * Prepares a Partlike stream (that is one with Measures\n     * or substreams that should be considered like Measures)\n     * for rendering.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Part} p\n     */\n    preparePartlike(p) {\n        // console.log('preparePartlike called');\n        this.systemBreakOffsets = [];\n        const measureList = p.measures;\n        for (let i = 0; i < measureList.length; i++) {\n            const subStream = measureList.get(i);\n            if (subStream.renderOptions.startNewSystem) {\n                this.systemBreakOffsets.push(subStream.offset);\n            }\n            if (i === p.length - 1) {\n                subStream.renderOptions.rightBarline = 'end';\n            }\n            if (this.stacks[i] === undefined) {\n                this.stacks[i] = new vfShow.RenderStack();\n            }\n            this.prepareMeasure(subStream, this.stacks[i]);\n        }\n        this.prepareTies(p);\n    }\n    /**\n     *\n     * Prepares a score that arrived flat... sets up\n     * stacks and vfTies after calling prepareFlat\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} m - a flat stream (maybe a measure or voice)\n     */\n    prepareArrivedFlat(m) {\n        const stack = new vfShow.RenderStack();\n        this.prepareMeasure(m, stack);\n        this.stacks[0] = stack;\n        this.prepareTies(m);\n    }\n    /**\n     *\n     * Prepares a measure (w/ or w/o voices) or generic Stream -- makes accidentals,\n     * associates a Vex.Flow.Stave with the stream and\n     * returns a vexflow Voice object\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Measure} m - a measure object (w or w/o voices)\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     */\n    prepareMeasure(m, stack) {\n        if (m.hasVoices === undefined || m.hasVoices() === false) {\n            this.prepareFlat(m, stack);\n        } else {\n            // TODO: don't assume that all elements are Voices;\n            let stave;\n            const rendOp = m.renderOptions; // get render options from Measure;\n            for (let voiceIndex = 0; voiceIndex < m.length; voiceIndex++) {\n                const voiceStream = m.get(voiceIndex);\n                stave = this.prepareFlat(voiceStream, stack, stave, rendOp);\n            }\n        }\n        return stack;\n    }\n    /**\n     * Main internal routine to prepare a flat stream\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - a flat stream object\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     * @param {Vex.Flow.Stave} [optionalStave] - an optional existing stave.\n     * @param {object} [optional_renderOp] - render options.\n     * Passed to {@link music21.vfShow.Renderer#renderStave}\n     * @returns {Vex.Flow.Stave} staff to return too\n     * (also changes the `stack` parameter and runs `makeAccidentals` on s)\n     */\n    prepareFlat(s, stack, optionalStave, optional_renderOp) {\n        s.makeAccidentals();\n        let stave;\n        if (optionalStave !== undefined) {\n            stave = optionalStave;\n        } else {\n            stave = this.renderStave(s, optional_renderOp);\n        }\n        s.activeVFStave = stave;\n        const voice = this.getVoice(s, stave);\n        stack.voices.push(voice);\n        stack.streams.push(s);\n        stack.voiceToStreamMapping.set(voice, s);\n\n        if (s.hasLyrics()) {\n            stack.textVoices.push(this.getLyricVoice(s, stave));\n        }\n\n        return stave;\n    }\n    /**\n     * Render the Vex.Flow.Stave from a flat stream and draws it.\n     *\n     * Just draws the stave, not the notes, etc.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [m=this.stream] - a flat stream\n     * @param {object} [optional_rendOp] - render options, passed\n     * to {@link music21.vfShow.Renderer#newStave} and {@link music21.vfShow.Renderer#setClefEtc}\n     * @returns {Vex.Flow.Stave} stave\n     */\n    renderStave(m, optional_rendOp) {\n        if (m === undefined) {\n            m = this.stream;\n        }\n        const ctx = this.ctx;\n        // stave will be passed in from Measure when we have Voices\n        const stave = this.newStave(m, optional_rendOp);\n\n        this.setClefEtc(m, stave, optional_rendOp);\n        stave.setContext(ctx);\n        stave.draw();\n        return stave;\n    }\n    /**\n     * Draws the Voices (music and text) from `this.stacks`\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawMeasureStacks() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.stacks.length; i++) {\n            const voices = this.stacks[i].allTickables();\n            for (let j = 0; j < voices.length; j++) {\n                const v = voices[j];\n                v.draw(ctx);\n            }\n        }\n    }\n    /**\n     * draws the tuplets.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawTuplets() {\n        const ctx = this.ctx;\n        this.vfTuplets.forEach(vft => {\n            vft.setContext(ctx).draw();\n        });\n    }\n    /**\n     * draws the vfTies\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawTies() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.vfTies.length; i++) {\n            this.vfTies[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Finds all tied notes and creates the proper Vex.Flow.StaveTie objects in\n     * `this.vfTies`.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Part} p - a Part or similar object\n     */\n    prepareTies(p) {\n        const pf = p.flat.notesAndRests;\n        // console.log('newSystemsAt', this.systemBreakOffsets);\n        for (let i = 0; i < pf.length - 1; i++) {\n            const thisNote = pf.get(i);\n            if (thisNote.tie === undefined || thisNote.tie.type === 'stop') {\n                continue;\n            }\n            const nextNote = pf.get(i + 1);\n            let onSameSystem = true;\n            // this.systemBreakOffsets.length will be 0 for a flat score\n            for (let sbI = 0; sbI < this.systemBreakOffsets.length; sbI++) {\n                const thisSystemBreak = this.systemBreakOffsets[sbI];\n                if (\n                    thisNote.offset < thisSystemBreak\n                    && nextNote.offset >= thisSystemBreak\n                ) {\n                    onSameSystem = false;\n                    break;\n                }\n            }\n            if (onSameSystem) {\n                const vfTie = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                    last_indices: [0],\n                });\n                this.vfTies.push(vfTie);\n            } else {\n                // console.log('got me a tie across systemBreaks!');\n                const vfTie1 = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.vfTies.push(vfTie1);\n                const vfTie2 = new Vex.Flow.StaveTie({\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.vfTies.push(vfTie2);\n            }\n        }\n    }\n    /**\n     * Returns a Vex.Flow.Voice object with all the tickables (i.e., Notes, Voices, etc.)\n     *\n     * Does not draw it...\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream] -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave - not optional (would never fly in Python...)\n     * @returns {Vex.Flow.Voice}\n     */\n    getVoice(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        // gets a group of notes as a voice, but completely unformatted and not drawn.\n        const notes = this.vexflowNotes(s, stave);\n        const voice = this.vexflowVoice(s);\n        voice.setStave(stave);\n\n        voice.addTickables(notes);\n        return voice;\n    }\n    /**\n     * Returns a Vex.Flow.Voice with the lyrics set to render in the proper place.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Vex.Flow.Voice}\n     */\n    getLyricVoice(s, stave) {\n        const textVoice = this.vexflowVoice(s);\n        const lyrics = this.vexflowLyrics(s, stave);\n        textVoice.setStave(stave);\n        textVoice.addTickables(lyrics);\n        return textVoice;\n    }\n    /**\n     * Aligns all of `this.stacks` (after they've been prepared) so they align properly.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    formatMeasureStacks() {\n        // adds formats the voices, then adds the formatter information to every note in a voice...\n        for (let i = 0; i < this.stacks.length; i++) {\n            const stack = this.stacks[i];\n            const voices = stack.voices;\n            const measures = stack.streams;\n            const formatter = this.formatVoiceGroup(stack);\n            for (let j = 0; j < measures.length; j++) {\n                const m = measures[j];\n                const v = voices[j];\n                this.applyFormatterInformationToNotes(v.stave, m, formatter);\n            }\n        }\n    }\n    /**\n     * Formats a single voice group from a stack.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.vfShow.RenderStack} stack\n     * @param {Boolean} [autoBeam=measures[0].autoBeam]\n     * @returns {Vex.Flow.Formatter}\n     */\n    formatVoiceGroup(stack, autoBeam) {\n        // formats a group of voices to use the same formatter; returns the formatter\n        // if autoBeam is true then it will apply beams for each voice and put them in\n        // this.beamGroups;\n        const allTickables = stack.allTickables();\n        const voices = stack.voices;\n        const measures = stack.streams;\n        if (autoBeam === undefined) {\n            autoBeam = measures[0].autoBeam;\n        }\n\n        const formatter = new Vex.Flow.Formatter();\n        // var minLength = formatter.preCalculateMinTotalWidth([voices]);\n        // console.log(minLength);\n        if (voices.length === 0) {\n            return formatter;\n        }\n        let maxGlyphStart = 0; // find the stave with the farthest start point -- diff key sig, etc.\n        for (let i = 0; i < allTickables.length; i++) {\n            // console.log(voices[i], voices[i].stave, i);\n            if (allTickables[i].stave.getNoteStartX() > maxGlyphStart) {\n                maxGlyphStart = allTickables[i].stave.getNoteStartX();\n            }\n        }\n        for (let i = 0; i < allTickables.length; i++) {\n            allTickables[i].stave.setNoteStartX(maxGlyphStart); // corrected!\n        }\n        // TODO: should do the same for end_x -- for key sig changes, etc...\n\n        const stave = voices[0].stave; // all staves should be same length, so does not matter;\n        const tickablesByStave = stack.tickablesByStave();\n        for (const staveTickables of tickablesByStave) {\n            formatter.joinVoices(staveTickables);\n        }\n        formatter.formatToStave(allTickables, stave);\n\n//        const vf_auto_stem = false;\n//        for (const voice of voices) {            \n//            let activeBeamGroupNotes = [];\n//            for (let j = 0; j < voice.notes.length; j++) {\n//                const n = voice.notes[j];\n//                if (n.beams === undefined || !n.beams.getNumbers().includes(1)) {\n//                    continue;\n//                }\n//                const eighthNoteBeam = n.beams.getByNumber(1);\n//                if (eighthNoteBeam.type === 'start') {\n//                    activeBeamGroupNotes = [n];\n//                } else {\n//                    activeBeamGroupNotes.push(n);\n//                }\n//                if (eighthNoteBeam.type === 'stop') {\n//                    const vfBeam = new Vex.Flow.Beam(activeBeamGroupNotes, vf_auto_stem);\n//                    this.beamGroups.push(vfBeam);\n//                    activeBeamGroupNotes = []; // housekeeping, not really necessary...\n//                }\n//            }\n//        }\n        \n        if (autoBeam) {\n            for (let i = 0; i < voices.length; i++) {\n                // find beam groups -- n.b. this wipes out stemDirection. worth it usually...\n                const voice = voices[i];\n                const associatedStream = stack.voiceToStreamMapping.get(voice);\n                let beatGroups;\n                if (\n                    associatedStream !== undefined\n                    && associatedStream.timeSignature !== undefined\n                ) {\n                    beatGroups = associatedStream.timeSignature.vexflowBeatGroups(\n                        Vex\n                    );\n                    // TODO: getContextByClass...\n                    // console.log(beatGroups);\n                } else {\n                    beatGroups = [new Vex.Flow.Fraction(2, 8)]; // default beam groups\n                }\n                const beamGroups = Vex.Flow.Beam.applyAndGetBeams(\n                    voice,\n                    undefined,\n                    beatGroups\n                );\n                this.beamGroups.push(...beamGroups);\n            }\n        }\n        return formatter;\n    }\n    /**\n     * Draws the beam groups.\n     *\n     * @memberof music21.vfShow.Renderer\n     */\n    drawBeamGroups() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.beamGroups.length; i++) {\n            this.beamGroups[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Return a new Vex.Flow.Stave object, which represents\n     * a single MEASURE of notation in m21j\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Stave}\n     */\n    newStave(s, rendOp) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n        // measure level...\n        let width = rendOp.width;\n        if (width === undefined) {\n            width = s.estimateStaffLength() + rendOp.staffPadding;\n        }\n        let top = rendOp.top; // * rendOp.scaleFactor.y;\n        if (top === undefined) {\n            top = 0;\n        }\n        let left = rendOp.left;\n        if (left === undefined) {\n            left = 10;\n        }\n        // console.log('streamLength: ' + streamLength);\n        if (debug) {\n            console.log(\n                'creating new stave: left:'\n                    + left\n                    + ' top: '\n                    + top\n                    + ' width: '\n                    + width\n            );\n        }\n        const stave = new Vex.Flow.Stave(left, top, width);\n        return stave;\n    }\n    /**\n     * Sets the number of stafflines, puts the clef on the Stave,\n     * adds keySignature, timeSignature, and rightBarline\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @param {Vex.Flow.Stave} stave\n     * @param {object} [rendOp=s.renderOptions] - a {@link music21.renderOptions.RenderOptions}\n     * object that might have\n     * `{showMeasureNumber: boolean, rightBarLine: string<{'single', 'double', 'end'}>}`\n     */\n    setClefEtc(s, stave, rendOp) {\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n        this.setStafflines(s, stave);\n        if (rendOp.showMeasureNumber) {\n            stave.setMeasure(rendOp.measureIndex + 1);\n        }\n        if (rendOp.displayClef) {\n            let ottava;\n            const size = 'default';\n            if (s.clef.octaveChange === 1) {\n                ottava = '8va';\n            } else if (s.clef.octaveChange === -1) {\n                ottava = '8vb';\n            }\n            stave.addClef(s.clef.name, size, ottava);\n        }\n        if (s.keySignature !== undefined && rendOp.displayKeySignature) {\n            const ksVFName = s.keySignature.majorName().replace(/-/g, 'b');\n            stave.addKeySignature(ksVFName);\n        }\n\n        if (s.timeSignature !== undefined && rendOp.displayTimeSignature) {\n            stave.addTimeSignature(\n                s.timeSignature.numerator.toString()\n                    + '/'\n                    + s.timeSignature.denominator.toString()\n            );\n        }\n        if (rendOp.rightBarline !== undefined) {\n            const bl = rendOp.rightBarline;\n            const barlineMap = {\n                single: 'SINGLE',\n                double: 'DOUBLE',\n                end: 'END',\n            };\n            const vxBL = barlineMap[bl];\n            if (vxBL !== undefined) {\n                stave.setEndBarType(Vex.Flow.Barline.type[vxBL]);\n            }\n        }\n    }\n    /**\n     * Sets the number of stafflines properly for the Stave object.\n     *\n     * This method does not just set Vex.Flow.Stave#setNumLines() except\n     * if the number of lines is 0 or >=4, because the default in VexFlow is\n     * to show the bottom(top?), not middle, lines and that looks bad.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - stream to get the `.staffLines`\n     * from `s.renderOptions` from -- should allow for overriding.\n     * @param {Vex.Flow.Stave} vexflowStave - stave to set the staff lines for.\n     */\n    setStafflines(s, vexflowStave) {\n        const rendOp = s.renderOptions;\n        if (rendOp.staffLines !== 5) {\n            if (rendOp.staffLines === 0) {\n                vexflowStave.setNumLines(0);\n            } else if (rendOp.staffLines === 1) {\n                // Vex.Flow.Stave.setNumLines hides all but the top line.\n                // this is better\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: false },\n                    { visible: true }, // show middle\n                    { visible: false },\n                    { visible: false },\n                ];\n            } else if (rendOp.staffLines === 2) {\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: false },\n                    { visible: true }, // show middle\n                    { visible: true },\n                    { visible: false },\n                ];\n            } else if (rendOp.staffLines === 3) {\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: true },\n                    { visible: true }, // show middle\n                    { visible: true },\n                    { visible: false },\n                ];\n            } else {\n                vexflowStave.setNumLines(rendOp.staffLines);\n            }\n        }\n    }\n    /**\n     * Gets the Vex.Flow.StaveNote objects from a Stream.\n     *\n     * Also changes `this.vfTuplets`.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} [s=this.stream] - flat stream to find notes in\n     * @param {Vex.Flow.Stave} stave - Vex.Flow.Stave to render notes on to.\n     * @returns {Array<Vex.Flow.StaveNote>} notes to return\n     */\n    vexflowNotes(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat stream, returns a list of voices...\n        const notes = [];\n        const vfTuplets = [];\n        let activeTuplet;\n        let activeTupletLength = 0.0;\n        let activeTupletVexflowNotes = [];\n\n        const options = { clef: s.clef, stave };\n        for (const thisEl of s) {\n            if (\n                thisEl.isClassOrSubclass('GeneralNote')\n                && thisEl.duration !== undefined\n            ) {\n                // sets thisEl.activeVexflowNote -- may be overwritten but not so fast...\n                const vfn = thisEl.vexflowNote(options);\n                if (vfn === undefined) {\n                    console.error('Cannot create a vexflowNote from: ', thisEl);\n                }\n                if (stave !== undefined) {\n                    vfn.setStave(stave);\n                }\n                notes.push(vfn);\n\n                // account for tuplets...\n                if (thisEl.duration.tuplets.length > 0) {\n                    // only support one tuplet per note -- like vexflow\n                    if (activeTuplet === undefined) {\n                        activeTuplet = thisEl.duration.tuplets[0];\n                    }\n                    activeTupletVexflowNotes.push(vfn);\n                    activeTupletLength += thisEl.duration.quarterLength;\n                    // console.log(activeTupletLength, activeTuplet.totalTupletLength());\n                    //\n                    // Add tuplet when complete.\n                    if (\n                        activeTupletLength\n                            >= activeTuplet.totalTupletLength()\n                        || Math.abs(\n                            activeTupletLength\n                                - activeTuplet.totalTupletLength()\n                        ) < 0.001\n                    ) {\n                        // console.log(activeTupletVexflowNotes);\n                        const tupletOptions = {\n                            num_notes: activeTuplet.numberNotesActual,\n                            notes_occupied: activeTuplet.numberNotesNormal,\n                        };\n                        // console.log('tupletOptions', tupletOptions);\n                        const vfTuplet = new Vex.Flow.Tuplet(\n                            activeTupletVexflowNotes,\n                            tupletOptions\n                        );\n                        if (activeTuplet.tupletNormalShow === 'ratio') {\n                            vfTuplet.setRatioed(true);\n                        }\n\n                        vfTuplets.push(vfTuplet);\n                        activeTupletLength = 0.0;\n                        activeTuplet = undefined;\n                        activeTupletVexflowNotes = [];\n                    }\n                }\n            }\n        }\n        if (activeTuplet !== undefined) {\n            console.warn('incomplete tuplet found in stream: ', s);\n        }\n        if (vfTuplets.length > 0) {\n            this.vfTuplets.push(...vfTuplets);\n        }\n        return notes;\n    }\n\n    /**\n     * Gets an Array of `Vex.Flow.TextNote` objects from any lyrics found in s\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - flat stream to search.\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Array<Vex.Flow.TextNote>}\n     */\n    vexflowLyrics(s, stave) {\n        const getTextNote = (text, font, d, lyricObj) => {\n            // console.log(text, font, d);\n            const t1 = new Vex.Flow.TextNote({\n                text,\n                font,\n                duration: d.vexflowDuration,\n            })\n                .setLine(11)\n                .setStave(stave)\n                .setJustification(Vex.Flow.TextNote.Justification.LEFT);\n            if (lyricObj) {\n                t1.setStyle(lyricObj.style);\n            }\n            if (d.tuplets.length > 0) {\n                t1.applyTickMultiplier(d.tuplets[0].numberNotesNormal, d.tuplets[0].numberNotesActual);\n            }\n            return t1;\n        };\n\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat, gapless, no-overlap stream, returns a list of TextNote objects...\n        const lyricsObjects = [];\n        for (const el of s) {\n            const lyricsArray = el.lyrics;\n            let text;\n            let d = el.duration;\n            let addConnector = false;\n            let firstLyric;\n            const font = {\n                family: 'Serif',\n                size: 12,\n                weight: '',\n            };\n\n            if (lyricsArray.length === 0) {\n                text = '';\n            } else {\n                firstLyric = lyricsArray[0];\n                text = firstLyric.text;\n                if (text === undefined) {\n                    text = '';\n                }\n                if (\n                    firstLyric.syllabic === 'middle'\n                    || firstLyric.syllabic === 'begin'\n                ) {\n                    addConnector = ' ' + firstLyric.lyricConnector;\n                    const tempQl = el.duration.quarterLength / 2.0;\n                    d = new duration.Duration(tempQl);\n                }\n                if (firstLyric.style.fontFamily) {\n                    font.family = firstLyric.style.fontFamily;                    \n                }\n                if (firstLyric.style.fontSize) {\n                    font.size = firstLyric.style.fontSize;                    \n                }\n                if (firstLyric.style.fontWeight) {\n                    font.weight = firstLyric.style.fontWeight;                    \n                }\n            }\n            const t1 = getTextNote(text, font, d, firstLyric);\n            lyricsObjects.push(t1);\n            if (addConnector !== false) {\n                const connector = getTextNote(addConnector, font, d);\n                lyricsObjects.push(connector);\n            }\n        }\n        return lyricsObjects;\n    }\n    /**\n     * Creates a Vex.Flow.Voice of the appropriate length given a Stream.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Voice}\n     */\n    vexflowVoice(s) {\n        const totalLength = s.duration.quarterLength;\n\n        let num1024 = Math.round(totalLength / (1 / 256));\n        let beatValue = 1024;\n\n        if (num1024 % 512 === 0) {\n            beatValue = 2;\n            num1024 /= 512;\n        } else if (num1024 % 256 === 0) {\n            beatValue = 4;\n            num1024 /= 256;\n        } else if (num1024 % 128 === 0) {\n            beatValue = 8;\n            num1024 /= 128;\n        } else if (num1024 % 64 === 0) {\n            beatValue = 16;\n            num1024 /= 64;\n        } else if (num1024 % 32 === 0) {\n            beatValue = 32;\n            num1024 /= 32;\n        } else if (num1024 % 16 === 0) {\n            beatValue = 64;\n            num1024 /= 16;\n        } else if (num1024 % 8 === 0) {\n            beatValue = 128;\n            num1024 /= 8;\n        } else if (num1024 % 4 === 0) {\n            beatValue = 256;\n            num1024 /= 4;\n        } else if (num1024 % 2 === 0) {\n            beatValue = 512;\n            num1024 /= 2;\n        }\n        // console.log('creating voice');\n        if (debug) {\n            console.log(\n                'New voice, num_beats: '\n                    + num1024.toString()\n                    + ' beat_value: '\n                    + beatValue.toString()\n            );\n        }\n        const vfv = new Vex.Flow.Voice({\n            num_beats: num1024,\n            beat_value: beatValue,\n            resolution: Vex.Flow.RESOLUTION,\n        });\n\n        // from vexflow/src/voice.js\n        //\n        // Modes allow the addition of ticks in three different ways:\n        //\n        // STRICT: This is the default. Ticks must fill the voice.\n        // SOFT:   Ticks can be added without restrictions.\n        // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n        //         tick length.\n        vfv.setMode(Vex.Flow.Voice.Mode.SOFT);\n        return vfv;\n    }\n    staffConnectorsMap(connectorType) {\n        const connectorMap = {\n            brace: Vex.Flow.StaveConnector.type.BRACE,\n            single: Vex.Flow.StaveConnector.type.SINGLE,\n            double: Vex.Flow.StaveConnector.type.DOUBLE,\n            bracket: Vex.Flow.StaveConnector.type.BRACKET,\n        };\n        return connectorMap[connectorType];\n    }\n\n    /**\n     * If a stream has parts (NOT CHECKED HERE) create and\n     * draw an appropriate Vex.Flow.StaveConnector\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Score} s\n     */\n    addStaffConnectors(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const parts = s.parts;\n        const numParts = parts.length;\n        if (numParts < 2) {\n            return;\n        }\n\n        const firstPart = parts.get(0);\n        const lastPart = parts.get(-1);\n\n        const firstPartMeasures = firstPart.measures;\n        const lastPartMeasures = lastPart.measures;\n        const numMeasures = firstPartMeasures.length;\n\n        for (let mIndex = 0; mIndex < numMeasures; mIndex++) {\n            const thisPartMeasure = firstPartMeasures.get(mIndex);\n            const lastPartMeasure = lastPartMeasures.get(mIndex); // only needed once per system but\n            // good for symmetry.\n            if (thisPartMeasure.renderOptions.startNewSystem) {\n                let topVFStaff = thisPartMeasure.activeVFStave;\n                let bottomVFStaff = lastPartMeasure.activeVFStave;\n                if (topVFStaff === undefined) {\n                    if (thisPartMeasure.hasSubStreams()) {\n                        const thisPartVoice = thisPartMeasure\n                            .getElementsByClass('Stream')\n                            .get(0);\n                        topVFStaff = thisPartVoice.activeVFStave;\n                        if (topVFStaff === undefined) {\n                            console.warn(\n                                'No active VexFlow Staves defined for at least one measure'\n                            );\n                            continue;\n                        }\n                    }\n                }\n                if (bottomVFStaff === undefined) {\n                    if (lastPartMeasure.hasSubStreams()) {\n                        const lastPartVoice = lastPartMeasure\n                            .getElementsByClass('Stream')\n                            .get(0);\n                        bottomVFStaff = lastPartVoice.activeVFStave;\n                        if (bottomVFStaff === undefined) {\n                            console.warn(\n                                'No active VexFlow Staves defined for at least one measure'\n                            );\n                            continue;\n                        }\n                    }\n                }\n                for (\n                    let i = 0;\n                    i < s.renderOptions.staffConnectors.length;\n                    i++\n                ) {\n                    const sc = new Vex.Flow.StaveConnector(\n                        topVFStaff,\n                        bottomVFStaff\n                    );\n                    const scTypeM21 = s.renderOptions.staffConnectors[i];\n                    const scTypeVF = this.staffConnectorsMap(scTypeM21);\n                    sc.setType(scTypeVF);\n                    sc.setContext(this.ctx);\n                    sc.draw();\n                }\n            }\n        }\n    }\n\n    /**\n     * The process of putting a Stream onto a div affects each of the\n     * elements in the Stream by adding pieces of information to\n     * each {@link music21.base.Music21Object} -- see `applyFormatterInformationToNotes`\n     *\n     * You might want to remove this information; this routine does that.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {music21.stream.Stream} s - can have parts, measures, etc.\n     * @param {boolean} [recursive=false]\n     */\n    removeFormatterInformation(s, recursive) {\n        s.storedVexflowStave = undefined;\n        for (const el of s) {\n            el.x = undefined;\n            el.y = undefined;\n            el.width = undefined;\n            el.systemIndex = undefined;\n            el.activeVexflowNote = undefined;\n            if (recursive && el.isClassOrSubclass('Stream')) {\n                this.removeFormatterInformation(el, recursive);\n            }\n        }\n    }\n\n    /**\n     * Adds the following pieces of information to each Note\n     *\n     * - el.x -- x location in pixels\n     * - el.y -- y location in pixels\n     * - el.width - width of element in pixels.\n     * - el.systemIndex -- which system is it on\n     * - el.activeVexflowNote - which Vex.Flow.StaveNote is it connected with.\n     *\n     * mad props to our friend Vladimir Viro for figuring this out! Visit http://peachnote.com/\n     *\n     * Also sets s.storedVexflowStave to stave.\n     *\n     * @memberof music21.vfShow.Renderer\n     * @param {Vex.Flow.Stave} stave\n     * @param {music21.stream.Stream} [s=this.stream]\n     * @param {Vex.Flow.Formatter} formatter\n     */\n    applyFormatterInformationToNotes(stave, s, formatter) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        let noteOffsetLeft = 0;\n        // var staveHeight = 80;\n        if (stave !== undefined) {\n            noteOffsetLeft = stave.start_x + stave.glyph_start_x;\n            if (debug) {\n                console.log(\n                    'noteOffsetLeft: '\n                        + noteOffsetLeft\n                        + ' ; stave.start_x: '\n                        + stave.start_x\n                );\n                console.log('Bottom y: ' + stave.getBottomY());\n            }\n            // staveHeight = stave.height;\n        }\n\n        let nextTicks = 0;\n        for (const el of s) {\n            if (el.isClassOrSubclass('GeneralNote')) {\n                const vfn = el.activeVexflowNote;\n                if (vfn === undefined) {\n                    continue;\n                }\n                const nTicks = parseInt(vfn.ticks);\n                const formatterNote\n                    = formatter.tickContexts.map[String(nextTicks)];\n                nextTicks += nTicks;\n                el.x = vfn.getAbsoluteX();\n                // these are a bit hacky...\n                el.systemIndex = s.renderOptions.systemIndex;\n\n                // console.log(el.x + \" \" + formatterNote.x + \" \" + noteOffsetLeft);\n                if (formatterNote === undefined) {\n                    continue;\n                }\n\n                el.width = formatterNote.width;\n                if (el.pitch !== undefined) {\n                    // note only...\n                    el.y\n                        = stave.getBottomY()\n                        - (s.clef.lowestLine - el.pitch.diatonicNoteNum)\n                            * stave.options.spacing_between_lines_px;\n                    // console.log('Note DNN: ' + el.pitch.diatonicNoteNum + \" ; y: \" + el.y);\n                }\n            }\n        }\n        if (debug) {\n            for (const n of s) {\n                if (n.pitch !== undefined) {\n                    console.log(\n                        n.pitch.diatonicNoteNum\n                            + ' '\n                            + n.x\n                            + ' '\n                            + (n.x + n.width)\n                    );\n                }\n            }\n        }\n        s.storedVexflowStave = stave;\n    }\n}\nvfShow.Renderer = Renderer;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/stream -- Streams -- objects that hold other Music21Objects\n *\n * Does not implement the full features of music21p Streams by a long shot...\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport * as MIDI from 'MIDI';\n\nimport { Music21Exception } from './exceptions21.js';\n\nimport { base } from './base.js';\nimport { beam } from './beam.js';\nimport { clef } from './clef.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { duration } from './duration.js';\nimport { instrument } from './instrument.js';\nimport { meter } from './meter.js';\nimport { pitch } from './pitch.js';\nimport { renderOptions } from './renderOptions.js';\nimport { vfShow } from './vfShow.js';\n\n/**\n * powerful stream module, See {@link music21.stream} namespace\n * @exports music21/stream\n */\n/**\n * Streams are powerful music21 objects that hold Music21Object collections,\n * such as {@link music21.note.Note} or {@link music21.chord.Chord} objects.\n *\n * Understanding the {@link music21.stream.Stream} object is of fundamental\n * importance for using music21.  Definitely read the music21(python) tutorial\n * on using Streams before proceeding\n *\n * @namespace music21.stream\n * @memberof music21\n * @requires music21/base\n * @requires music21/renderOptions\n * @requires music21/clef\n * @requires music21/vfShow\n * @requires music21/duration\n * @requires music21/common\n * @requires music21/meter\n * @requires music21/pitch\n * @requires jquery\n */\nexport const stream = {};\n\nclass StreamException extends Music21Exception {}\n\nstream.StreamException = StreamException;\n\n/**\n * A generic Stream class -- a holder for other music21 objects\n * Will be subclassed into {@link music21.stream.Score},\n * {@link music21.stream.Part},\n * {@link music21.stream.Measure},\n * {@link music21.stream.Voice}, but most functions will be found here.\n *\n * @class Stream\n * @memberof music21.stream\n * @extends music21.base.Music21Object\n *\n * @property {Array<music21.base.Music21Object>} elements - the elements in the stream. DO NOT MODIFY individual components (consider it like a Python tuple)\n * @property {Int} length - (readonly) the number of elements in the stream.\n * @property {music21.duration.Duration} duration - the total duration of the stream's elements\n * @property {number} highestTime -- the highest time point in the stream's elements\n * @property {music21.clef.Clef} clef - the clef for the Stream (if there is one; if there are multiple, then the first clef)\n * @property {music21.meter.TimeSignature} timeSignature - the first TimeSignature of the Stream\n * @property {music21.key.KeySignature} keySignature - the first KeySignature for the Stream\n * @property {music21.renderOptions.RenderOptions} renderOptions - an object specifying how to render the stream\n * @property {music21.stream.Stream} flat - (readonly) a flattened representation of the Stream\n * @property {music21.stream.Stream} notes - (readonly) the stream with only {@link music21.note.Note} and {@link music21.chord.Chord} objects included\n * @property {music21.stream.Stream} notesAndRests - (readonly) like notes but also with {@link music21.note.Rest} objects included\n * @property {music21.stream.Stream} parts - (readonly) a filter on the Stream to just get the parts (NON-recursive)\n * @property {music21.stream.Stream} measures - (readonly) a filter on the Stream to just get the measures (NON-recursive)\n * @property {number} tempo - tempo in beats per minute (will become more sophisticated later, but for now the whole stream has one tempo\n * @property {music21.instrument.Instrument|undefined} instrument - an instrument object associated with the stream (can be set with a string also, but will return an `Instrument` object)\n * @property {Boolean} autoBeam - whether the notes should be beamed automatically or not (will be moved to `renderOptions` soon)\n * @property {Int} [staffLines=5] - number of staff lines\n * @property {function|undefined} changedCallbackFunction - function to call when the Stream changes through a standard interface\n * @property {number} maxSystemWidth - confusing... should be in renderOptions\n */\nexport class Stream extends base.Music21Object {\n    constructor() {\n        super();\n        // class variables;\n        this.isStream = true;\n        this.isMeasure = false;\n        this.classSortOrder = -20;\n        this.recursionType = 'elementsFirst';\n\n        this._duration = undefined;\n\n        this._elements = [];\n        this._elementOffsets = [];\n        this._clef = undefined;\n        this.displayClef = undefined;\n\n        this._keySignature = undefined; // a music21.key.KeySignature object\n        this._timeSignature = undefined; // a music21.meter.TimeSignature object\n        this._instrument = undefined;\n\n        this._autoBeam = undefined;\n        this.activeVFStave = undefined;\n        this.activeVFRenderer = undefined;\n        this.renderOptions = new renderOptions.RenderOptions();\n        this._tempo = undefined;\n\n        this.staffLines = 5;\n\n        this._stopPlaying = false;\n        this._allowMultipleSimultaneousPlays = true; // not implemented yet.\n        this.changedCallbackFunction = undefined; // for editable svges\n        /**\n         * A function bound to the current stream that\n         * will changes the stream. Used in editableAccidentalDOM, among other places.\n         *\n         *      var can = s.appendNewDOM();\n         *      $(can).on('click', s.DOMChangerFunction);\n         *\n         * @memberof music21.stream.Stream\n         * @param {Event} e\n         * @returns {music21.base.Music21Object|undefined} - returns whatever changedCallbackFunction does.\n         */\n        this.DOMChangerFunction = e => {\n            const canvasOrSVGElement = e.currentTarget;\n            const [clickedDiatonicNoteNum, foundNote] = this.findNoteForClick(\n                canvasOrSVGElement,\n                e\n            );\n            if (foundNote === undefined) {\n                if (debug) {\n                    console.log('No note found');\n                }\n                return undefined;\n            }\n            return this.noteChanged(\n                clickedDiatonicNoteNum,\n                foundNote,\n                canvasOrSVGElement\n            );\n        };\n    }\n    * [Symbol.iterator]() {\n        for (let i = 0; i < this.length; i++) {\n            yield this.get(i);\n        }\n    }\n\n    get duration() {\n        if (this._duration !== undefined) {\n            return this._duration;\n        }\n        return new duration.Duration(this.highestTime);\n    }\n    set duration(newDuration) {\n        this._duration = newDuration;\n    }\n    get highestTime() {\n        let highestTime = 0.0;\n        for (const el of this) {\n            let endTime = el.offset;\n            if (el.duration !== undefined) {\n                endTime += el.duration.quarterLength;\n            }\n            if (endTime > highestTime) {\n                highestTime = endTime;\n            }\n        }\n        return highestTime;\n    }\n\n    get semiFlat() {\n        return this._getFlatOrSemiFlat(true);\n    }\n\n    get flat() {\n        return this._getFlatOrSemiFlat(false);\n    }\n\n    _getFlatOrSemiFlat(retainContainers) {\n        if (!this.hasSubStreams()) {\n            return this;\n        }\n        const tempEls = [];\n        for (const el of this) {\n            if (el.isStream) {\n                if (retainContainers) {\n                    tempEls.push(el);\n                }\n                const offsetShift = el.offset;\n                // console.log('offsetShift', offsetShift, el.classes[el.classes.length -1]);\n                const elFlat = el._getFlatOrSemiFlat(retainContainers);\n                for (let j = 0; j < elFlat.length; j++) {\n                    // offset should NOT be null because already in Stream\n                    elFlat.get(j).offset += offsetShift;\n                }\n                tempEls.push(...elFlat._elements);\n            } else {\n                tempEls.push(el);\n            }\n        }\n        const newSt = this.clone(false);\n        newSt.elements = tempEls;\n        return newSt;\n    }\n\n    get notes() {\n        return this.getElementsByClass(['Note', 'Chord']);\n    }\n    get notesAndRests() {\n        return this.getElementsByClass('GeneralNote');\n    }\n    get tempo() {\n        if (this._tempo === undefined && this.activeSite !== undefined) {\n            return this.activeSite.tempo;\n        } else if (this._tempo === undefined) {\n            return 150;\n        } else {\n            return this._tempo;\n        }\n    }\n    set tempo(newTempo) {\n        this._tempo = newTempo;\n    }\n    get instrument() {\n        if (this._instrument === undefined && this.activeSite !== undefined) {\n            return this.activeSite.instrument;\n        } else {\n            return this._instrument;\n        }\n    }\n    set instrument(newInstrument) {\n        if (typeof newInstrument === 'string') {\n            newInstrument = new instrument.Instrument(newInstrument);\n        }\n        this._instrument = newInstrument;\n    }\n    get clef() {\n        if (this._clef === undefined && this.activeSite === undefined) {\n            return new clef.Clef('treble');\n        } else if (this._clef === undefined) {\n            return this.activeSite.clef;\n        } else {\n            return this._clef;\n        }\n    }\n    set clef(newClef) {\n        this._clef = newClef;\n    }\n    get keySignature() {\n        if (this._keySignature === undefined && this.activeSite !== undefined) {\n            return this.activeSite.keySignature;\n        } else {\n            return this._keySignature;\n        }\n    }\n    set keySignature(newKeySignature) {\n        this._keySignature = newKeySignature;\n    }\n    get timeSignature() {\n        if (\n            this._timeSignature === undefined\n            && this.activeSite !== undefined\n        ) {\n            return this.activeSite.timeSignature;\n        } else {\n            return this._timeSignature;\n        }\n    }\n    set timeSignature(newTimeSignature) {\n        if (typeof newTimeSignature === 'string') {\n            newTimeSignature = new meter.TimeSignature(newTimeSignature);\n        }\n        this._timeSignature = newTimeSignature;\n    }\n    get autoBeam() {\n        if (this._autoBeam === undefined && this.activeSite !== undefined) {\n            return this.activeSite.autoBeam;\n        } else if (this._autoBeam !== undefined) {\n            return this._autoBeam;\n        } else {\n            return true; // default...\n        }\n    }\n    set autoBeam(ab) {\n        this._autoBeam = ab;\n    }\n    get maxSystemWidth() {\n        let baseMaxSystemWidth = 750;\n        if (\n            this.renderOptions.maxSystemWidth === undefined\n            && this.activeSite !== undefined\n        ) {\n            baseMaxSystemWidth = this.activeSite.maxSystemWidth;\n        } else if (this.renderOptions.maxSystemWidth !== undefined) {\n            baseMaxSystemWidth = this.renderOptions.maxSystemWidth;\n        }\n        return baseMaxSystemWidth / this.renderOptions.scaleFactor.x;\n    }\n    set maxSystemWidth(newSW) {\n        this.renderOptions.maxSystemWidth\n            = newSW * this.renderOptions.scaleFactor.x;\n    }\n    get parts() {\n        return this.getElementsByClass('Part');\n    }\n    get measures() {\n        return this.getElementsByClass('Measure');\n    }\n    get voices() {\n        return this.getElementsByClass('Voice');\n    }\n\n    get length() {\n        return this._elements.length;\n    }\n    get elements() {\n        return this._elements;\n    }\n    set elements(newElements) {\n        let highestOffsetSoFar = 0.0;\n        this._elements = [];\n        this._elementOffsets = [];\n        const tempInsert = [];\n        let i;\n        let thisEl;\n        for (i = 0; i < newElements.length; i++) {\n            thisEl = newElements[i];\n            const thisElOffset = thisEl.offset;\n            if (thisElOffset === null || thisElOffset === highestOffsetSoFar) {\n                // append\n                this._elements.push(thisEl);\n                thisEl.offset = highestOffsetSoFar;\n                this._elementOffsets.push(highestOffsetSoFar);\n                if (thisEl.duration === undefined) {\n                    console.error('No duration for ', thisEl, ' in ', this);\n                }\n                highestOffsetSoFar += thisEl.duration.quarterLength;\n            } else {\n                // append -- slow\n                tempInsert.push(thisEl);\n            }\n        }\n        // console.warn('end', highestOffsetSoFar, tempInsert);\n        for (i = 0; i < tempInsert.length; i++) {\n            thisEl = tempInsert[i];\n            this.insert(thisEl.offset, thisEl);\n        }\n    }\n\n    /* override protoM21Object.clone() */\n    clone(deep=true) {\n        const ret = Object.create(this.constructor.prototype);\n        for (const key in this) {\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key === 'activeSite') {\n                ret[key] = this[key];\n            } else if (key === 'renderOptions') {\n                ret[key] = common.merge({}, this[key]);\n            } else if (\n                deep !== true\n                && (key === '_elements' || key === '_elementOffsets')\n            ) {\n                ret[key] = this[key].slice(); // shallow copy...\n            } else if (\n                deep\n                && (key === '_elements' || key === '_elementOffsets')\n            ) {\n                if (key === '_elements') {\n                    // console.log('got elements for deepcopy');\n                    ret._elements = [];\n                    ret._elementOffsets = [];\n                    for (let j = 0; j < this._elements.length; j++) {\n                        ret._elementOffsets[j] = this._elementOffsets[j];\n                        const el = this._elements[j];\n                        // console.log('cloning el: ', el.name);\n                        const elCopy = el.clone(deep);\n                        elCopy.activeSite = ret;\n                        ret._elements[j] = elCopy;\n                    }\n                }\n            } else if (\n                key === 'activeVexflowNote'\n                || key === 'storedVexflowstave'\n            ) {\n                // do nothing -- do not copy vexflowNotes -- permanent recursion\n            } else if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else {\n                    // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof this[key] === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (\n                this[key] !== null\n                && this[key] !== undefined\n                && this[key].isMusic21Object === true\n            ) {\n                // console.log('cloning...', key);\n                ret[key] = this[key].clone(deep);\n            } else {\n                ret[key] = this[key];\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Add an element to the end of the stream, setting its `.offset` accordingly\n     *\n     * @memberof music21.stream.Stream\n     * @param {music21.base.Music21Object|Array} el - element or list of elements to append\n     * @returns {this}\n     */\n    append(elOrElList) {\n        if (Array.isArray(elOrElList)) {\n            for (const el of elOrElList) {\n                this.append(el);\n            }\n            return this;\n        }\n        \n        const el = elOrElList;\n        try {\n            if (\n                el.isClassOrSubclass !== undefined\n                && el.isClassOrSubclass('NotRest')\n            ) {\n                // set stem direction on output...;\n            }\n            let elOffset = 0.0;\n            if (this._elements.length > 0) {\n                const lastQL = this._elements[this._elements.length - 1]\n                    .duration.quarterLength;\n                elOffset\n                    = this._elementOffsets[this._elementOffsets.length - 1]\n                    + lastQL;\n            }\n            this._elementOffsets.push(elOffset);\n            this._elements.push(el);\n            el.offset = elOffset;\n            el.sites.add(this);\n            el.activeSite = this; // would prefer weakref, but does not exist in JS.\n        } catch (err) {\n            console.error(\n                'Cannot append element ',\n                el,\n                ' to stream ',\n                this,\n                ' : ',\n                err\n            );\n        }\n        return this;\n    }\n\n    /**\n     * Add an element to the specified place in the stream, setting its `.offset` accordingly\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} offset - offset to place.\n     * @param {music21.base.Music21Object} el - element to append\n     * @returns {this}\n     */\n    insert(offset, el) {\n        try {\n            if (\n                el.isClassOrSubclass !== undefined\n                && el.isClassOrSubclass('NotRest')\n            ) {\n                // set stem direction on output\n                // this.clef.setStemDirection(el);\n            }\n            for (let i = 0; i < this._elements.length; i++) {\n                const testOffset = this._elementOffsets[i];\n                if (testOffset <= offset) {\n                    continue;\n                } else {\n                    this._elementOffsets.splice(i, 0, offset);\n                    this._elements.splice(i, 0, el);\n                    el.offset = offset;\n                    el.activeSite = this;\n                    return this;\n                }\n            }\n            // no element found. insert at end;\n            this._elementOffsets.push(offset);\n            this._elements.push(el);\n            el.offset = offset;\n            el.sites.add(this);\n            el.activeSite = this; // would prefer weakref, but does not exist in JS.\n        } catch (err) {\n            console.error(\n                'Cannot insert element ',\n                el,\n                ' to stream ',\n                this,\n                ' : ',\n                err\n            );\n        }\n        return this;\n    }\n\n    /**\n     * Inserts a single element at offset, shifting elements at or after it begins\n     * later in the stream.\n     *\n     * In single argument form, assumes it is an element and takes the offset from the element.\n     *\n     * Unlike music21p, does not take a list of elements.  TODO(msc): add this.\n     */\n    insertAndShift(offset, elementOrNone) {\n        let element;\n        if (elementOrNone === undefined) {\n            element = offset;\n            offset = element.offset;\n        } else {\n            element = elementOrNone;\n        }\n        const amountToShift = element.duration.quarterLength;\n\n        let shiftingOffsets = false;\n        for (let i = 0; i < this.length; i++) {\n            if (!shiftingOffsets && this._elementOffsets[i] >= offset) {\n                shiftingOffsets = true;\n            }\n            if (shiftingOffsets) {\n                this._elementOffsets[i] += amountToShift;\n                this._elements[i].offset = this._elementOffsets[i];\n            }\n        }\n        this.insert(offset, element);\n    }\n    \n    \n    /**\n     * Return the first matched index\n     */\n    index(el) {\n        let count = 0;\n        for (const e of this._elements) {\n            if (el === e) {\n                return count;\n            }\n            count += 1;\n        }\n        // endElements\n        throw new StreamException(\n            `cannot find object (${el}) in Stream`\n            );\n    }\n\n    /**\n     * Remove and return the last element in the stream,\n     * or return undefined if the stream is empty\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.base.Music21Object|undefined} last element in the stream\n     */\n    pop() {\n        // remove last element;\n        if (this.length > 0) {\n            const el = this.get(-1);\n            this._elementOffsets.pop();\n            this._elements.pop();\n            el.sites.remove(this);\n            return el;\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Remove an object from this Stream\n     */\n    remove(targetOrList, \n            { \n                firstMatchOnly=true, \n                shiftOffsets=false, \n                recurse=false,\n            } = {}) {\n        if (shiftOffsets === true) {\n            throw new StreamException('sorry cannot shiftOffsets yet');\n        }\n        if (recurse === true) {\n            throw new StreamException('sorry cannot recurse yet');\n        }\n\n        let targetList;\n        if (!Array.isArray(targetOrList)) {\n            targetList = [targetOrList];\n        } else {\n            targetList = targetOrList;\n        }\n//        if (targetList.length > 1) {\n//            sort targetList\n//        }        \n        // let shiftDur = 0.0; // for shiftOffsets\n        let i = -1;\n        for (const target of targetList) {\n            i += 1;\n            let indexInStream;\n            try {\n                indexInStream = this.index(target);\n            } catch (err) {\n                if (err instanceof StreamException) {\n                    if (recurse) {\n                        // do something\n                    }\n                    continue;\n                }\n                throw err;\n            }\n            \n            // const matchOffset = this._elementOffsets[indexInStream];\n            // let match;\n            // handle _endElements\n            // let matchedEndElement = false;\n            // let baseElementCount = this._elements.length;\n            this._elements.splice(indexInStream, 1);\n            this._elementOffsets.splice(indexInStream, 1);\n            // remove from sites if needed.\n\n//            if (shiftOffsets) {\n//                const matchDuration = target.duration.quarterLength;\n//                const shiftedRegionStart = matchOffset + matchDuration;\n//                shiftDur += matchDuration;\n//                let shiftedRegionEnd;\n//                if ((i + 1) < targetList.length) {\n//                    const nextElIndex = this.index(targetList[i + 1]);\n//                    const nextElOffset = this._elementOffsets[nextElIndex];\n//                    shiftedRegionEnd = nextElOffset;\n//                } else {\n//                    shiftedRegionEnd = this.duration.quarterLength;\n//                }\n//                if (shiftDur !== 0.0) {\n//                    for (const e of this.getElementsByOffset(\n//                       shiftedRegionStart,\n//                       shiftedRegionEnd,\n//                       {\n//                           includeEndBoundary: false,\n//                           mustFinishInSpan: false,\n//                           mustBeginInSpan: false,                           \n//                       }\n//                    )) {\n//                        const elementOffset = this.elementOffset(e);\n//                        this.setElementOffset(e, elementOffset - shiftDur);\n//                    }\n//                }\n//            }\n        }\n        \n    }\n    \n    /**\n     *  Given a `target` object, replace it with\n     *  the supplied `replacement` object.\n     *  \n     *  `recurse` and `allDerived` do not currently work.\n     *  \n     *  Does nothing if target cannot be found.\n     */    \n    replace(target, replacement, {\n        recurse=false,\n        allDerivated=true,\n    } = {}) {\n        let i;\n        try {\n            i = this.index(target);            \n        } catch (err) {\n            if (err instanceof StreamException) {\n                return;\n            } else {\n                throw err;\n            }\n        }\n        replacement.offset = this._elementOffsets[i];\n        this._elements[i] = replacement;\n        target.offset = 0.0;\n    }\n        \n    /**\n     * Get the `index`th element from the Stream.  Equivalent to the\n     * music21p format of s[index].  Can use negative indexing to get from the end.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} index - can be -1, -2, to index from the end, like python\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    get(index) {\n        // substitute for Python stream __getitem__; supports -1 indexing, etc.\n        let el;\n        if (index === undefined) {\n            return undefined;\n        } else if (Math.abs(index) > this._elements.length) {\n            return undefined;\n        } else if (index === this._elements.length) {\n            return undefined;\n        } else if (index < 0) {\n            el = this._elements[this._elements.length + index];\n            el.offset = this._elementOffsets[this._elements.length + index];\n            return el;\n        } else {\n            el = this._elements[index];\n            el.offset = this._elementOffsets[index];\n            return el;\n        }\n    }\n\n    setElementOffset(el, value, addElement = false) {\n        for (let i = 0; i < this.length; i++) {\n            if (this._elements[i] === el) {\n                this._elementOffsets[i] = value;\n                return;\n            }\n        }\n        if (!addElement) {\n            throw new StreamException(\n                'Cannot set the offset for elemenet '\n                    + el.toString()\n                    + ', not in Stream'\n            );\n        } else {\n            this.insert(value, el);\n        }\n    }\n\n    elementOffset(element, stringReturns = false) {\n        for (let i = 0; i < this.length; i++) {\n            if (this._elements[i] === element) {\n                return this._elementOffsets[i];\n            }\n        }\n        throw new StreamException(\n            'An entry for this object is not stored in this Stream.'\n        );\n    }\n\n    /*  --- ############# END ELEMENT FUNCTIONS ########## --- */\n\n    /**\n     * Returns Boolean about whether this stream contains any other streams.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasSubStreams() {\n        let hasSubStreams = false;\n        for (const el of this) {\n            if (el.isClassOrSubclass('Stream')) {\n                hasSubStreams = true;\n                break;\n            }\n        }\n        return hasSubStreams;\n    }\n    /**\n     * Takes a stream and places all of its elements into\n     * measures (:class:`~music21.stream.Measure` objects)\n     * based on the :class:`~music21.meter.TimeSignature` objects\n     * placed within\n     * the stream. If no TimeSignatures are found in the\n     * stream, a default of 4/4 is used.\n\n     * If `options.inPlace` is true, the original Stream is modified and lost\n     * if `options.inPlace` is False, this returns a modified deep copy.\n\n     * @memberof music21.stream.Stream\n     * @param {object} options\n     * @returns {music21.stream.Stream}\n     */\n    makeMeasures(options) {\n        const params = {\n            meterStream: undefined,\n            refStreamOrTimeRange: undefined,\n            searchContext: false,\n            innerBarline: undefined,\n            finalBarline: 'final',\n            bestClef: false,\n            inPlace: false,\n        };\n        common.merge(params, options);\n        let voiceCount;\n        if (this.hasVoices()) {\n            voiceCount = this.getElementsByClass('Voice').length;\n        } else {\n            voiceCount = 0;\n        }\n        // meterStream\n        const meterStream = this.getElementsByClass('TimeSignature');\n        if (meterStream.length === 0) {\n            meterStream.append(this.timeSignature);\n        }\n        // getContextByClass('Clef')\n        const clefObj = this.clef;\n        const offsetMap = this.offsetMap();\n        let oMax = 0;\n        for (let i = 0; i < offsetMap.length; i++) {\n            if (offsetMap[i].endTime > oMax) {\n                oMax = offsetMap[i].endTime;\n            }\n        }\n        // console.log('oMax: ', oMax);\n        const post = new this.constructor();\n        // derivation\n        let o = 0.0;\n        let measureCount = 0;\n        let lastTimeSignature;\n        let m;\n        let mStart;\n        while (measureCount === 0 || o < oMax) {\n            m = new stream.Measure();\n            m.number = measureCount + 1;\n            // var thisTimeSignature = meterStream.getElementAtOrBefore(o);\n            const thisTimeSignature = this.timeSignature;\n            if (thisTimeSignature === undefined) {\n                break;\n            }\n            const oneMeasureLength\n                = thisTimeSignature.barDuration.quarterLength;\n            if (oneMeasureLength === 0) {\n                // if for some reason we are advancing not at all, then get out!\n                break;\n            }\n            if (measureCount === 0) {\n                // simplified...\n            }\n            m.clef = clefObj;\n            m.timeSignature = thisTimeSignature.clone();\n\n            for (let voiceIndex = 0; voiceIndex < voiceCount; voiceIndex++) {\n                const v = new stream.Voice();\n                v.id = voiceIndex;\n                m.insert(0, v);\n            }\n            post.insert(o, m);\n            o += oneMeasureLength;\n            measureCount += 1;\n        }\n        for (let i = 0; i < offsetMap.length; i++) {\n            const ob = offsetMap[i];\n            const e = ob.element;\n            const start = ob.offset;\n            const voiceIndex = ob.voiceIndex;\n\n            // if 'Spanner' in e.classes;\n            lastTimeSignature = undefined;\n            for (let j = 0; j < post.length; j++) {\n                m = post.get(j); // nothing but measures...\n                if (m.timeSignature !== undefined) {\n                    lastTimeSignature = m.timeSignature;\n                }\n                mStart = m.getOffsetBySite(post);\n                const mEnd\n                    = mStart + lastTimeSignature.barDuration.quarterLength;\n                if (start >= mStart && start < mEnd) {\n                    break;\n                }\n            }\n            // if not match, raise Exception;\n            const oNew = start - mStart;\n            if (m.clef === e) {\n                continue;\n            }\n            if (oNew === 0 && e.isClassOrSubclass('TimeSignature')) {\n                continue;\n            }\n            let insertStream = m;\n            if (voiceIndex !== undefined) {\n                insertStream = m.getElementsByClass('Voice').get(voiceIndex);\n            }\n            insertStream.insert(oNew, e);\n        }\n        // set barlines, etc.\n        if (params.inPlace !== true) {\n            return post;\n        } else {\n            this.elements = [];\n            // endElements\n            // elementsChanged;\n            for (const e of post) {\n                this.insert(e.offset, e);\n            }\n            return this; // javascript style;\n        }\n    }\n\n    /**\n     * Return a new Stream or modify this stream\n     * to have beams.\n     *\n     * NOT yet being called March 2018\n     */\n    makeBeams(options) {\n        const params = { inPlace: false };\n        common.merge(params, options);\n        let returnObj = this;\n        if (!params.inPlace) {\n            returnObj = this.clone(true);\n        }\n        let mColl;\n        if (this.classes.includes('Measure')) {\n            mColl = [returnObj];\n        } else {\n            mColl = [];\n            for (const m of returnObj.getElementsByClass('Measure').elements) {\n                mColl.push(m);\n            }\n        }\n        let lastTimeSignature;\n        for (const m of mColl) {\n            if (m.timeSignature !== undefined) {\n                lastTimeSignature = m.timeSignature;\n            }\n            if (lastTimeSignature === undefined) {\n                throw new StreamException('Need a Time Signature to process beams');\n            }\n            // todo voices!\n            if (m.length <= 1) {\n                continue; // nothing to beam.\n            }\n            const noteStream = m.notesAndRests;\n            const durList = [];\n            for (const n of noteStream) {\n                durList.push(n.duration);\n            }\n            const durSum = durList.map(a => a.quarterLength).reduce((total, val) => total + val);\n            const barQL = lastTimeSignature.barDuration.quarterLength;\n            if (durSum > barQL) {\n                continue;\n            }\n            let offset = 0.0;\n            if (m.paddingLeft !== 0.0 && m.paddingLeft !== undefined) {\n                offset = m.paddingLeft;\n            } else if (noteStream.highestTime < barQL) {\n                offset = barQL - noteStream.highestTime;\n            }\n            const beamsList = lastTimeSignature.getBeams(noteStream, { measureStartOffset: offset });\n            for (let i = 0; i < noteStream.length; i++) {\n                const n = noteStream.get(i);\n                const thisBeams = beamsList[i];\n                if (thisBeams !== undefined) {\n                    n.beams = thisBeams;\n                } else {\n                    n.beams = new beam.Beams();\n                }\n            }\n        }\n\n        // returnObj.streamStatus.beams = true;\n        return returnObj;\n    }\n\n    /**\n     * Returns true if any note in the stream has lyrics, otherwise false\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasLyrics() {\n        for (const el of this) {\n            if (el.lyric !== undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a list of OffsetMap objects\n     *\n     * @memberof music21.stream.Stream\n     * @returns [music21.stream.OffsetMap]\n     */\n    offsetMap() {\n        const offsetMap = [];\n        let groups = [];\n        if (this.hasVoices()) {\n            $.each(this.getElementsByClass('Voice').elements, (i, v) => {\n                groups.push([v.flat, i]);\n            });\n        } else {\n            groups = [[this, undefined]];\n        }\n        for (let i = 0; i < groups.length; i++) {\n            const group = groups[i][0];\n            const voiceIndex = groups[i][1];\n            for (let j = 0; j < group.length; j++) {\n                const e = group.get(j);\n                const dur = e.duration.quarterLength;\n                const offset = e.offset; // TODO: getOffsetBySite(group)\n                const endTime = offset + dur;\n                const thisOffsetMap = new stream.OffsetMap(\n                    e,\n                    offset,\n                    endTime,\n                    voiceIndex\n                );\n                offsetMap.push(thisOffsetMap);\n            }\n        }\n        return offsetMap;\n    }\n\n    /**\n     * Find all elements with a certain class; if an Array is given, then any\n     * matching class will work.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Array<string>|string} classList - a list of classes to find\n     * @returns {music21.stream.Stream}\n     */\n    getElementsByClass(classList) {\n        const tempEls = [];\n        for (const thisEl of this) {\n            // console.warn(thisEl);\n            if (thisEl.isClassOrSubclass === undefined) {\n                console.error(\n                    'what the hell is a ',\n                    thisEl,\n                    'doing in a Stream?'\n                );\n            } else if (thisEl.isClassOrSubclass(classList)) {\n                tempEls.push(thisEl);\n            }\n        }\n        const newSt = this.clone(false);\n        newSt.elements = tempEls;\n        return newSt;\n    }\n    \n    /**\n     * Returns a new stream [StreamIterator does not yet exist in music21j]\n     * containing all Music21Objects that are found at a certain offset or\n     * within a certain offset time range (given the offsetStart and\n     * (optional) offsetEnd values).\n     * \n     * See music21p documentation for the effect of various parameters. \n     */\n    getElementsByOffset(\n        offsetStart, \n        offsetEnd, \n        {\n            includeEndBoundary=true,\n            mustFinishInSpan=false,\n            mustBeginInSpan=true,\n            includeElementsThatEndAtStart=true,\n            classList=undefined,\n        }={}) {\n                        \n        let s = this;\n        if (classList !== undefined) {\n            s = this.getElementsByClass(classList);\n        }\n        let zeroLengthSearch = false;\n        if (offsetEnd === undefined) {\n            offsetEnd = offsetStart;\n            zeroLengthSearch = true;            \n        } else if (offsetEnd <= offsetStart) {\n            zeroLengthSearch = true;\n        }\n\n        const isElementOffsetInRange = (e, offset) => {\n            if (offset > offsetEnd) {\n                // anything that begins after the span is definitely out.\n                return false;\n            }\n            const dur = e.duration;\n            const elementEnd = offset + dur.quarterLength;\n            if (elementEnd < offsetStart) {\n                // anything that finishes before the span ends is definitely out\n                return false;\n            }\n            \n            // some part of the element is at least touching some part of span.\n            \n            let elementIsZeroLength = false;\n            if (dur.quarterLength === 0) {\n                elementIsZeroLength = true;\n            }                        \n            if (zeroLengthSearch && elementIsZeroLength) {\n                return true;\n            }\n            \n            if (mustFinishInSpan) {\n                if (elementEnd > offsetEnd) {\n                    return false;                    \n                }\n                if (!includeEndBoundary && offset === offsetEnd) {\n                    return false;\n                }\n            } \n            \n            if (mustBeginInSpan) {\n                if (offset < offsetStart) {\n                    return false;\n                }  \n                if (!includeEndBoundary && offset === offsetEnd) {\n                    return false;\n                }\n            } else if (!elementIsZeroLength && elementEnd === offsetEnd && zeroLengthSearch) {\n                return false;\n            }\n\n            if (!includeEndBoundary && offset === offsetEnd) {\n                return false;\n            }\n            if (!includeElementsThatEndAtStart && elementEnd === offsetStart) {\n                return false;\n            }\n            return true;\n        };\n        \n        const retStream = s.clone(false);\n        retStream.elements = [];\n        for (const e of s) {\n            const offset = s.elementOffset(e);\n            if (isElementOffsetInRange(e, offset)) {\n                retStream.insert(offset, e);\n            }\n        }\n        return retStream;\n    }\n    \n    /**\n     *  Given an element (from another Stream) returns the single element\n     *  in this Stream that is sounding while the given element starts.\n     *\n     *  If there are multiple elements sounding at the moment it is\n     *  attacked, the method returns the first element of the same class\n     *  as this element, if any. If no element\n     *  is of the same class, then the first element encountered is\n     *  returned. For more complex usages, use allPlayingWhileSounding.\n     *\n     *  Returns None if no elements fit the bill.        \n     *\n     *  The optional elStream is the stream in which el is found.\n     *  If provided, el's offset\n     *  in that Stream is used.  Otherwise, the current offset in\n     *  el is used.  It is just\n     *  in case you are paranoid that el.offset might not be what\n     *  you want, because of some fancy manipulation of\n     *  el.activeSite\n     *   \n     * @memberof music21.stream.Stream\n     * @param {music21.base.Music21Object} el - object with an offset and class to search for.\n     * @param {music21.stream.Stream|undefined} elStream - a place to get el's offset from.\n     * @returns {music21.stream.Stream}\n     * @returns {music21.base.Music21Object|undefined}\n     */    \n    playingWhenAttacked(el, elStream) {\n        let elOffset;\n        if (elStream !== undefined) {\n            elOffset = el.getOffsetBySite(elStream);\n        } else {\n            elOffset = el.offset;\n        }\n        \n        const otherElements = this.getElementsByOffset(elOffset, elOffset, { mustBeginInSpan: false });\n        if (otherElements.length === 0) {\n            return undefined;\n        } else if (otherElements.length === 1) {\n            return otherElements.get(0);\n        } else {\n            for (const thisEl of otherElements) {\n                if (el.constructor === thisEl.constructor) {\n                    return thisEl;\n                }\n            }\n            return otherElements.get(0);\n        }        \n    }\n    \n    \n    /**\n     * Sets Pitch.accidental.displayStatus for every element with a\n     * pitch or pitches in the stream. If a natural needs to be displayed\n     * and the Pitch does not have an accidental object yet, adds one.\n     *\n     * Called automatically before appendDOM routines are called.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    makeAccidentals() {\n        // cheap version of music21p method\n        const extendableStepList = {};\n        const stepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n        for (const stepName of stepNames) {\n            let stepAlter = 0;\n            if (this.keySignature !== undefined) {\n                const tempAccidental = this.keySignature.accidentalByStep(\n                    stepName\n                );\n                if (tempAccidental !== undefined) {\n                    stepAlter = tempAccidental.alter;\n                    // console.log(stepAlter + \" \" + stepName);\n                }\n            }\n            extendableStepList[stepName] = stepAlter;\n        }\n        const lastOctaveStepList = [];\n        for (let i = 0; i < 10; i++) {\n            const tempOctaveStepDict = $.extend({}, extendableStepList);\n            lastOctaveStepList.push(tempOctaveStepDict);\n        }\n        const lastOctavelessStepDict = $.extend({}, extendableStepList); // probably unnecessary, but safe...\n\n        for (const el of this) {\n            if (el.pitch !== undefined) {\n                // note\n                const p = el.pitch;\n                const lastStepDict = lastOctaveStepList[p.octave];\n                this._makeAccidentalForOnePitch(\n                    p,\n                    lastStepDict,\n                    lastOctavelessStepDict\n                );\n            } else if (el._notes !== undefined) {\n                // chord\n                for (const chordNote of el._notes) {\n                    const p = chordNote.pitch;\n                    const lastStepDict = lastOctaveStepList[p.octave];\n                    this._makeAccidentalForOnePitch(\n                        p,\n                        lastStepDict,\n                        lastOctavelessStepDict\n                    );\n                }\n            }\n        }\n        return this;\n    }\n\n    //  returns pitch\n    _makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict) {\n        if (lastStepDict === undefined) {\n            // octave < 0 or > 10? -- error that appeared sometimes.\n            lastStepDict = {};\n        }\n        let newAlter;\n        if (p.accidental === undefined) {\n            newAlter = 0;\n        } else {\n            newAlter = p.accidental.alter;\n        }\n        // console.log(p.name + \" \" + lastStepDict[p.step].toString());\n        if (\n            lastStepDict[p.step] !== newAlter\n            || lastOctavelessStepDict[p.step] !== newAlter\n        ) {\n            if (p.accidental === undefined) {\n                p.accidental = new pitch.Accidental('natural');\n            }\n            p.accidental.displayStatus = true;\n            // console.log(\"setting displayStatus to true\");\n        } else if (\n            lastStepDict[p.step] === newAlter\n            && lastOctavelessStepDict[p.step] === newAlter\n        ) {\n            if (p.accidental !== undefined) {\n                p.accidental.displayStatus = false;\n            }\n            // console.log(\"setting displayStatus to false\");\n        }\n        lastStepDict[p.step] = newAlter;\n        lastOctavelessStepDict[p.step] = newAlter;\n        return p;\n    }\n\n    /**\n     * Sets the render options for any substreams (such as placing them\n     * in systems, etc.) DOES NOTHING for music21.stream.Stream, but is\n     * overridden in subclasses.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    setSubstreamRenderOptions() {\n        /* does nothing for standard streams ... */\n        return this;\n    }\n    /**\n     * Resets all the RenderOptions back to defaults. Can run recursively\n     * and can also preserve the `RenderOptions.events` object.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Boolean} [recursive=false]\n     * @param {Boolean} [preserveEvents=false]\n     * @returns {music21.stream.Stream} this\n     */\n    resetRenderOptions(recursive, preserveEvents) {\n        const oldEvents = this.renderOptions.events;\n        this.renderOptions = new renderOptions.RenderOptions();\n        if (preserveEvents) {\n            this.renderOptions.events = oldEvents;\n        }\n\n        if (recursive) {\n            for (const el of this) {\n                if (el.isClassOrSubclass('Stream')) {\n                    el.resetRenderOptions(recursive, preserveEvents);\n                }\n            }\n        }\n        return this;\n    }\n\n    //  * *********  VexFlow functionality\n\n    renderVexflowOnCanvas(canvasOrSVG) {\n        console.warn(\n            'renderVexflowOnCanvas is deprecated; call renderVexflow instead'\n        );\n        return this.renderVexflow(canvasOrSVG);\n    }\n\n    /**\n     * Uses {@link music21.vfShow.Renderer} to render Vexflow onto an\n     * existing canvas or SVG object.\n     *\n     * Runs `this.setRenderInteraction` on the canvas.\n     *\n     * Will be moved to vfShow eventually when converter objects are enabled...maybe.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject|JQueryDOMObject} canvasOrSVG - a canvas or the div surrounding an SVG object\n     * @returns {vfShow.Renderer}\n     */\n    renderVexflow(canvasOrSVG) {\n        if (canvasOrSVG.jquery) {\n            canvasOrSVG = canvasOrSVG[0];\n        }\n        const DOMContains = document.body.contains(canvasOrSVG);\n        if (!DOMContains) {\n            // temporarily add to DOM so Firefox can measure it...\n            document.body.appendChild(canvasOrSVG);\n        }\n\n        const tagName = canvasOrSVG.tagName.toLowerCase();\n\n        if (this.autoBeam === true) {\n            try {\n                this.makeBeams({ inPlace: true });                \n            } catch (e) {\n                if (!e.toString().includes('Time Signature')) {\n                    throw e;\n                }\n            }\n        }\n        const vfr = new vfShow.Renderer(this, canvasOrSVG);\n        if (tagName === 'canvas') {\n            vfr.rendererType = 'canvas';\n        } else if (tagName === 'svg') {\n            vfr.rendererType = 'svg';\n        }\n        vfr.render();\n        this.setRenderInteraction(canvasOrSVG);\n        this.activeVFRenderer = vfr;\n        if (!DOMContains) {\n            // remove the adding to DOM so that Firefox could measure it...\n            document.body.removeChild(canvasOrSVG);\n        }\n\n        return vfr;\n    }\n\n    /**\n     * Estimate the stream height for the Stream.\n     *\n     * If there are systems they will be incorporated into the height unless `ignoreSystems` is `true`.\n     *\n     * @memberof music21.stream.Stream\n     * @param {Boolean} [ignoreSystems=false]\n     * @returns {number} height in pixels\n     */\n    estimateStreamHeight(ignoreSystems) {\n        const staffHeight = this.renderOptions.naiveHeight;\n        let systemPadding = this.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = 0;\n        }\n        let numSystems;\n        if (this.isClassOrSubclass('Score')) {\n            const numParts = this.length;\n            numSystems = this.numSystems();\n            if (numSystems === undefined || ignoreSystems) {\n                numSystems = 1;\n            }\n            const scoreHeight\n                = numSystems * staffHeight * numParts\n                + (numSystems - 1) * systemPadding;\n            // console.log('scoreHeight of ' + scoreHeight);\n            return scoreHeight;\n        } else if (this.isClassOrSubclass('Part')) {\n            numSystems = 1;\n            if (!ignoreSystems) {\n                numSystems = this.numSystems();\n            }\n            if (debug) {\n                console.log(\n                    'estimateStreamHeight for Part: numSystems ['\n                        + numSystems\n                        + '] * staffHeight ['\n                        + staffHeight\n                        + '] + (numSystems ['\n                        + numSystems\n                        + '] - 1) * systemPadding ['\n                        + systemPadding\n                        + '].'\n                );\n            }\n            return numSystems * staffHeight + (numSystems - 1) * systemPadding;\n        } else {\n            return staffHeight;\n        }\n    }\n\n    /**\n     * Estimates the length of the Stream in pixels.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {number} length in pixels\n     */\n    estimateStaffLength() {\n        let i;\n        let totalLength;\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (this.hasVoices()) {\n            let maxLength = 0;\n            for (const v of this) {\n                if (v.isClassOrSubclass('Stream')) {\n                    const thisLength\n                        = v.estimateStaffLength() + v.renderOptions.staffPadding;\n                    if (thisLength > maxLength) {\n                        maxLength = thisLength;\n                    }\n                }\n            }\n            return maxLength;\n        } else if (this.hasSubStreams()) {\n            // part\n            totalLength = 0;\n            for (i = 0; i < this.length; i++) {\n                const m = this.get(i);\n                if (m.isClassOrSubclass('Stream')) {\n                    totalLength\n                        += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                    if (i !== 0 && m.renderOptions.startNewSystem === true) {\n                        break;\n                    }\n                }\n            }\n            return totalLength;\n        } else {\n            const rendOp = this.renderOptions;\n            totalLength = 30 * this.length;\n            totalLength += rendOp.displayClef ? 30 : 0;\n            totalLength\n                += rendOp.displayKeySignature && this.keySignature\n                    ? this.keySignature.width\n                    : 0;\n            totalLength += rendOp.displayTimeSignature ? 30 : 0;\n            // totalLength += rendOp.staffPadding;\n            return totalLength;\n        }\n    }\n\n    //  * ***** MIDI related routines...\n\n    /**\n     * Plays the Stream through the MIDI/sound playback (for now, only MIDI.js is supported)\n     *\n     * `options` can be an object containing:\n     * - instrument: {@link music21.instrument.Instrument} object (default, `this.instrument`)\n     * - tempo: number (default, `this.tempo`)\n     *\n     * @memberof music21.stream.Stream\n     * @param {object} [options] - object of playback options\n     * @returns {music21.stream.Stream} this\n     */\n    playStream(options) {\n        const params = {\n            instrument: this.instrument,\n            tempo: this.tempo,\n            done: undefined,\n            startNote: undefined,\n        };\n        common.merge(params, options);\n        const startNoteIndex = params.startNote;\n        let currentNoteIndex = 0;\n        if (startNoteIndex !== undefined) {\n            currentNoteIndex = startNoteIndex;\n        }\n        const flatEls = this.flat.elements;\n        const lastNoteIndex = flatEls.length - 1;\n        this._stopPlaying = false;\n        const thisStream = this;\n\n        const playNext = function playNext(elements, params) {\n            if (currentNoteIndex <= lastNoteIndex && !thisStream._stopPlaying) {\n                const el = elements[currentNoteIndex];\n                let nextNote;\n                let playDuration;\n                if (currentNoteIndex < lastNoteIndex) {\n                    nextNote = elements[currentNoteIndex + 1];\n                    playDuration = nextNote.offset - el.offset;\n                } else {\n                    playDuration = el.duration.quarterLength;\n                }\n                const milliseconds = playDuration * 1000 * 60 / params.tempo;\n                if (debug) {\n                    console.log(\n                        'playing: ',\n                        el,\n                        playDuration,\n                        milliseconds,\n                        params.tempo\n                    );\n                }\n\n                if (el.playMidi !== undefined) {\n                    el.playMidi(params.tempo, nextNote, params);\n                }\n                currentNoteIndex += 1;\n                setTimeout(() => {\n                    playNext(elements, params);\n                }, milliseconds);\n            } else if (params && params.done) {\n                params.done.call();\n            }\n        };\n        playNext(flatEls, params);\n        return this;\n    }\n\n    /**\n     * Stops a stream from playing if it currently is.\n     *\n     * @memberof music21.stream.Stream\n     * @returns {music21.stream.Stream} this\n     */\n    stopPlayStream() {\n        // turns off all currently playing MIDI notes (on any stream) and stops playback.\n        this._stopPlaying = true;\n        for (let i = 0; i < 127; i++) {\n            MIDI.noteOff(0, i, 0);\n        }\n        return this;\n    }\n    /* ----------------------------------------------------------------------\n     *\n     *  SVG/Canvas DOM routines -- to be factored out eventually.\n     *\n     */\n\n    createNewCanvas(width, height, elementType='svg') {\n        console.warn('createNewCanvas is deprecated, use createNewDOM instead');\n        return this.createNewDOM(width, height, elementType);\n    }\n\n    /**\n     * Creates and returns a new `&lt;canvas&gt;` or `&lt;svg&gt;` object.\n     *\n     * Calls setSubstreamRenderOptions() first.\n     *\n     * Does not render on the DOM element.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} width - will use `this.estimateStaffLength()` + `this.renderOptions.staffPadding` if not given\n     * @param {number|string|undefined} height - if undefined will use `this.renderOptions.height`. If still undefined, will use `this.estimateStreamHeight()`\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {JQueryDOMObject} svg in jquery.\n     */\n    createNewDOM(width, height, elementType='svg') {\n        if (this.hasSubStreams()) {\n            this.setSubstreamRenderOptions();\n        }\n\n        // we render SVG on a Div for Vexflow\n        let renderElementType = 'div';\n        if (elementType === 'canvas') {\n            renderElementType = 'canvas';\n        }\n\n        const $newCanvasOrDIV = $('<' + renderElementType + '/>');\n        $newCanvasOrDIV.addClass('streamHolding'); // .css('border', '1px red solid');\n        $newCanvasOrDIV.css('display', 'inline-block');\n\n        if (width !== undefined) {\n            if (typeof width === 'string') {\n                width = common.stripPx(width);\n            }\n            $newCanvasOrDIV.attr('width', width);\n        } else {\n            const computedWidth\n                = this.estimateStaffLength()\n                + this.renderOptions.staffPadding\n                + 0;\n            $newCanvasOrDIV.attr('width', computedWidth);\n        }\n        if (height !== undefined) {\n            $newCanvasOrDIV.attr('height', height);\n        } else {\n            let computedHeight;\n            if (this.renderOptions.height === undefined) {\n                computedHeight = this.estimateStreamHeight();\n                // console.log('computed Height estim: ' + computedHeight);\n            } else {\n                computedHeight = this.renderOptions.height;\n                // console.log('computed Height: ' + computedHeight);\n            }\n            $newCanvasOrDIV.attr(\n                'height',\n                computedHeight * this.renderOptions.scaleFactor.y\n            );\n        }\n        return $newCanvasOrDIV;\n    }\n\n    createPlayableCanvas(width, height, elementType = 'svg') {\n        console.warn(\n            'createPlayableCanvas is deprecated, use createPlayableDOM instead'\n        );\n        return this.createPlayableDOM(width, height, elementType);\n    }\n\n    /**\n     * Creates a rendered, playable svg where clicking plays it.\n     *\n     * Called from appendNewDOM() etc.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} width\n     * @param {number|string|undefined} height\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {JQueryDOMObject} canvas or svg\n     */\n    createPlayableDOM(width, height, elementType='svg') {\n        this.renderOptions.events.click = 'play';\n        return this.createDOM(width, height, elementType);\n    }\n\n    createCanvas(width, height, elementType='svg') {\n        console.warn('createCanvas is deprecated, use createDOM');\n        return this.createDOM(width, height, elementType);\n    }\n    /**\n     * Creates a new svg and renders vexflow on it\n     *\n     * @memberof music21.stream.Stream\n     * @param {number|string|undefined} [width]\n     * @param {number|string|undefined} [height]\n     * @param {string} elementType - what type of element svg or canvas, default = svg\n     * @returns {JQueryDOMObject} canvas or SVG\n     */\n    createDOM(width, height, elementType='svg') {\n        const $newSvg = this.createNewDOM(width, height, elementType);\n        // temporarily append the SVG to the document to fix a Firefox bug\n        // where nothing can be measured unless is it in the document.\n        this.renderVexflow($newSvg);\n        return $newSvg;\n    }\n\n    appendNewCanvas(appendElement, width, height, elementType = 'svg') {\n        console.warn('appendNewCanvas is deprecated, use appendNewDOM instead');\n        return this.appendNewDOM(appendElement, width, height, elementType);\n    }\n\n    /**\n     * Creates a new canvas, renders vexflow on it, and appends it to the DOM.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [appendElement=document.body] - where to place the svg\n     * @param {number|string} [width]\n     * @param {number|string} [height]\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {DOMObject} svg (not the jQueryDOMObject -- this is a difference with other routines and should be fixed. TODO: FIX)\n     *\n     */\n    appendNewDOM(appendElement, width, height, elementType = 'svg') {\n        if (appendElement === undefined) {\n            appendElement = 'body';\n        }\n        let $appendElement = appendElement;\n        if (appendElement.jquery === undefined) {\n            $appendElement = $(appendElement);\n        }\n\n        //      if (width === undefined && this.renderOptions.maxSystemWidth === undefined) {\n        //      var $bodyElement = bodyElement;\n        //      if (bodyElement.jquery === undefined) {\n        //      $bodyElement = $(bodyElement);\n        //      }\n        //      width = $bodyElement.width();\n        //      };\n\n        const svgOrCanvasBlock = this.createDOM(width, height, elementType);\n        $appendElement.append(svgOrCanvasBlock);\n        return svgOrCanvasBlock[0];\n    }\n\n    replaceCanvas(where, preserveSvgSize, elementType = 'svg') {\n        console.warn('replaceCanvas is deprecated, use replaceDOM instead');\n        return this.replaceDOM(where, preserveSvgSize, elementType);\n    }\n\n    /**\n     * Replaces a particular Svg with a new rendering of one.\n     *\n     * Note that if 'where' is empty, will replace all svges on the page.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject|DOMObject} [where] - the canvas or SVG to replace or a container holding the canvas(es) to replace.\n     * @param {Boolean} [preserveSvgSize=false]\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {JQueryDOMObject} the svg\n     */\n    replaceDOM(where, preserveSvgSize, elementType = 'svg') {\n        // if called with no where, replaces all the svges on the page...\n        if (where === undefined) {\n            where = 'body';\n        }\n        let $where;\n        if (where.jquery === undefined) {\n            $where = $(where);\n        } else {\n            $where = where;\n            where = $where[0];\n        }\n        let $oldSVGOrCanvas;\n\n        if ($where.hasClass('streamHolding')) {\n            $oldSVGOrCanvas = $where;\n        } else {\n            $oldSVGOrCanvas = $where.find('.streamHolding');\n        }\n        // TODO: Max Width!\n        if ($oldSVGOrCanvas.length === 0) {\n            throw new Music21Exception('No svg defined for replaceDOM!');\n        } else if ($oldSVGOrCanvas.length > 1) {\n            // change last svg...\n            // replacing each with svgBlock doesn't work\n            // anyhow, it just resizes the svg but doesn't\n            // draw.\n            $oldSVGOrCanvas = $($oldSVGOrCanvas[$oldSVGOrCanvas.length - 1]);\n        }\n\n        let svgBlock;\n        if (preserveSvgSize) {\n            const width = $oldSVGOrCanvas.width() || parseInt($oldSVGOrCanvas.attr('width'));\n            const height = $oldSVGOrCanvas.attr('height'); // height manipulates\n            svgBlock = this.createDOM(width, height, elementType);\n        } else {\n            svgBlock = this.createDOM(undefined, undefined, elementType);\n        }\n\n        $oldSVGOrCanvas.replaceWith(svgBlock);\n        return svgBlock;\n    }\n\n\n    /**\n     * Set the type of interaction on the svg based on\n     *    - Stream.renderOptions.events.click\n     *    - Stream.renderOptions.events.dblclick\n     *    - Stream.renderOptions.events.resize\n     *\n     * Currently the only options available for each are:\n     *    - 'play' (string)\n     *    - 'reflow' (string; only on event.resize)\n     *    - customFunction (will receive event as a first variable; should set up a way to\n     *                    find the original stream; var s = this; var f = function () { s...}\n     *                   )\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} canvasOrDiv - canvas or the Div surrounding it.\n     * @returns {music21.stream.Stream} this\n     */\n    setRenderInteraction(canvasOrDiv) {\n        let $svg = canvasOrDiv;\n        if (canvasOrDiv === undefined) {\n            return this;\n        } else if (canvasOrDiv.jquery === undefined) {\n            $svg = $(canvasOrDiv);\n        }\n        const playFunc = () => {\n            this.playStream();\n        };\n\n        $.each(\n            this.renderOptions.events,\n            $.proxy(function setRenderInteractionProxy(\n                eventType,\n                eventFunction\n            ) {\n                $svg.off(eventType);\n                if (\n                    typeof eventFunction === 'string'\n                    && eventFunction === 'play'\n                ) {\n                    $svg.on(eventType, playFunc);\n                } else if (\n                    typeof eventFunction === 'string'\n                    && eventType === 'resize'\n                    && eventFunction === 'reflow'\n                ) {\n                    this.windowReflowStart($svg);\n                } else if (eventFunction !== undefined) {\n                    $svg.on(eventType, eventFunction);\n                }\n            },\n            this)\n        );\n        return this;\n    }\n\n    /**\n     *\n     * Recursively search downward for the closest storedVexflowStave...\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Vex.Flow.Stave|undefined}\n     */\n    recursiveGetStoredVexflowStave() {\n        let storedVFStave = this.storedVexflowStave;\n        if (storedVFStave === undefined) {\n            if (!this.hasSubStreams()) {\n                return undefined;\n            } else {\n                const subStreams = this.getElementsByClass('Stream');\n                storedVFStave = subStreams.get(0).storedVexflowStave;\n                if (storedVFStave === undefined) {\n                    // TODO: bad programming ... should support continuous recurse\n                    // but good enough for now...\n                    if (subStreams.get(0).hasSubStreams()) {\n                        storedVFStave = subStreams.get(0).get(0)\n                            .storedVexflowStave;\n                    }\n                }\n            }\n        }\n        return storedVFStave;\n    }\n\n    getUnscaledXYforCanvas(svg, e) {\n        console.warn(\n            'getUnscaledXYforCanvas is deprecated, use getUnscaledXYforDOM instead'\n        );\n        return this.getUnscaledXYforDOM(svg, e);\n    }\n\n    /**\n     * Given a mouse click, or other event with .pageX and .pageY,\n     * find the x and y for the svg.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg - a canvas or SVG object\n     * @param {Event} e\n     * @returns {Array<number>} two-elements, [x, y] in pixels.\n     */\n    getUnscaledXYforDOM(svg, e) {\n        let offset = null;\n        if (svg === undefined) {\n            offset = { left: 0, top: 0 };\n        } else {\n            offset = $(svg).offset();\n        }\n        /*\n         * mouse event handler code from: http://diveintohtml5.org/canvas.html\n         */\n        let xClick;\n        let yClick;\n        if (e.pageX !== undefined && e.pageY !== undefined) {\n            xClick = e.pageX;\n            yClick = e.pageY;\n        } else {\n            xClick\n                = e.clientX\n                + document.body.scrollLeft\n                + document.documentElement.scrollLeft;\n            yClick\n                = e.clientY\n                + document.body.scrollTop\n                + document.documentElement.scrollTop;\n        }\n        const xPx = xClick - offset.left;\n        const yPx = yClick - offset.top;\n        return [xPx, yPx];\n    }\n\n    getScaledXYforCanvas(svg, e) {\n        console.warn(\n            'getScaledXYforCanvas is deprecated, use getScaledXYforDOM instead'\n        );\n        return this.getScaledXYforDOM(svg, e);\n    }\n\n    /**\n     * return a list of [scaledX, scaledY] for\n     * a svg element.\n     *\n     * xScaled refers to 1/scaleFactor.x -- for instance, scaleFactor.x = 0.7 (default)\n     * x of 1 gives 1.42857...\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg -- a canvas or SVG object\n     * @param {Event} e\n     * @returns {Array<number>} [scaledX, scaledY]\n     */\n    getScaledXYforDOM(svg, e) {\n        const [xPx, yPx] = this.getUnscaledXYforDOM(svg, e);\n        const pixelScaling = this.renderOptions.scaleFactor;\n\n        const yPxScaled = yPx / pixelScaling.y;\n        const xPxScaled = xPx / pixelScaling.x;\n        return [xPxScaled, yPxScaled];\n    }\n    /**\n     *\n     * Given a Y position find the diatonicNoteNum that a note at that position would have.\n     *\n     * searches this.storedVexflowStave\n     *\n     * Y position must be offset from the start of the stave...\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} yPxScaled\n     * @returns {Int}\n     */\n    diatonicNoteNumFromScaledY(yPxScaled) {\n        const storedVFStave = this.recursiveGetStoredVexflowStave();\n        // for (var i = -10; i < 10; i++) {\n        //    console.log(\"line: \" + i + \" y: \" + storedVFStave.getYForLine(i));\n        // }\n        const lineSpacing = storedVFStave.options.spacing_between_lines_px;\n        const linesAboveStaff = storedVFStave.options.space_above_staff_ln;\n\n        const notesFromTop = yPxScaled * 2 / lineSpacing;\n        const notesAboveLowestLine\n            = (storedVFStave.options.num_lines - 1 + linesAboveStaff) * 2\n            - notesFromTop;\n        const clickedDiatonicNoteNum\n            = this.clef.lowestLine + Math.round(notesAboveLowestLine);\n        return clickedDiatonicNoteNum;\n    }\n\n    /**\n     * Returns the stream that is at X location xPxScaled and system systemIndex.\n     *\n     * Override in subclasses, always returns this; here.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} [xPxScaled]\n     * @param {number} [allowablePixels=10]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream}\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        return this;\n    }\n\n    /**\n     *\n     * Return the note (or chord or rest) at pixel X (or within allowablePixels [default 10])\n     * of the note.\n     *\n     * systemIndex element is not used on bare Stream\n     *\n     * options can be a dictionary of: 'allowBackup' which gets the closest\n     * note within the window even if it's beyond allowablePixels (default: true)\n     * and 'backupMaximum' which specifies a maximum distance even for backup\n     * (default: 70);\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} xPxScaled\n     * @param {number} [allowablePixels=10]\n     * @param {number} [systemIndex]\n     * @param {object} [options]\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    noteElementFromScaledX(xPxScaled, allowablePixels, systemIndex, options) {\n        const params = {\n            allowBackup: true,\n            backupMaximum: 70,\n        };\n        common.merge(params, options);\n        let foundNote;\n        if (allowablePixels === undefined) {\n            allowablePixels = 10;\n        }\n        const subStream = this.getStreamFromScaledXandSystemIndex(\n            xPxScaled,\n            systemIndex\n        );\n        if (subStream === undefined) {\n            return undefined;\n        }\n        const backup = {\n            minDistanceSoFar: params.backupMaximum,\n            note: undefined,\n        }; // a backup in case we did not find within allowablePixels\n\n        for (const n of subStream.flat.notesAndRests.elements) {\n            /* should also\n             * compensate for accidentals...\n             */\n            const leftDistance = Math.abs(n.x - xPxScaled);\n            const rightDistance = Math.abs(n.x + n.width - xPxScaled);\n            const minDistance = Math.min(leftDistance, rightDistance);\n\n            if (\n                leftDistance < allowablePixels\n                && rightDistance < allowablePixels\n            ) {\n                foundNote = n;\n                break; /* O(n); can be made O(log n) */\n            } else if (\n                leftDistance < params.backupMaximum\n                && rightDistance < params.backupMaximum\n                && minDistance < backup.minDistanceSoFar\n            ) {\n                backup.note = n;\n                backup.minDistanceSoFar = minDistance;\n            }\n        }\n        // console.log('note here is: ', foundNote);\n        if (params.allowBackup && foundNote === undefined) {\n            foundNote = backup.note;\n            // console.log('used backup: closest was: ', backup.minDistanceSoFar);\n        }\n        // console.log(foundNote);\n        return foundNote;\n    }\n\n    /**\n     * Given an event object, and an x and y location, returns a two-element array\n     * of the pitch.Pitch.diatonicNoteNum that was clicked (i.e., if C4 was clicked this\n     * will return 29; if D4 was clicked this will return 30) and the closest note in the\n     * stream that was clicked.\n     *\n     * Return a list of [diatonicNoteNum, closestXNote]\n     * for an event (e) called on the svg (svg)\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg\n     * @param {Event} e\n     * @param {number} x\n     * @param {number} y\n     * @returns {Array} [diatonicNoteNum, closestXNote]\n     */\n    findNoteForClick(svg, e, x, y) {\n        if (x === undefined || y === undefined) {\n            [x, y] = this.getScaledXYforDOM(svg, e);\n        }\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(y);\n        const foundNote = this.noteElementFromScaledX(x);\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Change the pitch of a note given that it has been clicked and then\n     * call changedCallbackFunction\n     *\n     * To be removed...\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} clickedDiatonicNoteNum\n     * @param {music21.base.Music21Object} foundNote\n     * @param {DOMObject} svg\n     * @returns {any} output of changedCallbackFunction\n     */\n    noteChanged(clickedDiatonicNoteNum, foundNote, svg) {\n        const n = foundNote;\n        const p = new pitch.Pitch('C');\n        p.diatonicNoteNum = clickedDiatonicNoteNum;\n        p.accidental = n.pitch.accidental;\n        n.pitch = p;\n        n.stemDirection = undefined;\n        this.activeNote = n;\n        const $newSvg = this.redrawDOM(svg);\n        const params = { foundNote: n, svg: $newSvg };\n        if (this.changedCallbackFunction !== undefined) {\n            return this.changedCallbackFunction(params);\n        } else {\n            return params;\n        }\n    }\n\n    redrawCanvas(svg) {\n        console.warn('redrawCanvas is deprecated, use redrawDOM instead');\n        return this.redrawDOM(svg);\n    }\n\n    /**\n     * Redraws an svgDiv, keeping the events of the previous svg.\n     *\n     * @memberof music21.stream.Stream\n     * @param {DOMObject} svg\n     * @returns {music21.stream.Stream} this\n     */\n    redrawDOM(svg) {\n        // this.resetRenderOptions(true, true); // recursive, preserveEvents\n        // this.setSubstreamRenderOptions();\n        const $svg = $(svg); // works even if svg is already $jquery\n        const $newSvg = this.createNewDOM(svg.width, svg.height);\n        this.renderVexflow($newSvg);\n        $svg.replaceWith($newSvg);\n        // this is no longer necessary.\n        // common.jQueryEventCopy($.event, $svg, $newCanv); /* copy events -- using custom extension... */\n        return $newSvg;\n    }\n\n    editableAccidentalCanvas(width, height) {\n        console.warn(\n            'editableAccidentalCanvas is deprecated, use editableAccidentalDOM instead'\n        );\n        return this.editableAccidentalDOM(width, height);\n    }\n\n    /**\n     * Renders a stream on svg with the ability to edit it and\n     * a toolbar that allows the accidentals to be edited.\n     *\n     * @memberof music21.stream.Stream\n     * @param {number} [width]\n     * @param {number} [height]\n     * @returns {DOMObject} &lt;div&gt; tag around the svg.\n     */\n    editableAccidentalDOM(width, height) {\n        /*\n         * Create an editable svg with an accidental selection bar.\n         */\n        const d = $('<div/>')\n            .css('text-align', 'left')\n            .css('position', 'relative');\n\n        this.renderOptions.events.click = this.DOMChangerFunction;\n        const $svgDiv = this.createDOM(width, height);\n        const buttonDiv = this.getAccidentalToolbar(\n            undefined,\n            undefined,\n            $svgDiv\n        );\n        d.append(buttonDiv);\n        d.append($(\"<br clear='all'/>\"));\n        d.append($svgDiv);\n        return d;\n    }\n\n    /*\n     * SVG toolbars...\n     */\n\n    /**\n     *\n     * @memberof music21.stream.Stream\n     * @param {Int} minAccidental - alter of the min accidental (default -1)\n     * @param {Int} maxAccidental - alter of the max accidental (default 1)\n     * @param {jQueryObject} $siblingSvg - svg to use for redrawing;\n     * @returns {jQueryObject} the accidental toolbar.\n     */\n    getAccidentalToolbar(minAccidental, maxAccidental, $siblingSvg) {\n        if (minAccidental === undefined) {\n            minAccidental = -1;\n        }\n        if (maxAccidental === undefined) {\n            maxAccidental = 1;\n        }\n        minAccidental = Math.round(minAccidental);\n        maxAccidental = Math.round(maxAccidental);\n\n        const addAccidental = (newAlter, clickEvent) => {\n            /*\n             * To be called on a button...\n             */\n            let $useSvg = $siblingSvg;\n            if ($useSvg === undefined) {\n                let $searchParent = $(clickEvent.target).parent();\n                let maxSearch = 99;\n                while (\n                    maxSearch > 0\n                    && $searchParent !== undefined\n                    && ($useSvg === undefined || $useSvg[0] === undefined)\n                ) {\n                    maxSearch -= 1;\n                    $useSvg = $searchParent.find('.streamHolding');\n                    $searchParent = $searchParent.parent();\n                }\n                if ($useSvg[0] === undefined) {\n                    console.log('Could not find a svg...');\n                    return;\n                }\n            }\n            if (this.activeNote !== undefined) {\n                const n = this.activeNote;\n                n.pitch.accidental = new pitch.Accidental(newAlter);\n                /* console.log(n.pitch.name); */\n                const $newSvg = this.redrawDOM($useSvg[0]);\n                if (this.changedCallbackFunction !== undefined) {\n                    this.changedCallbackFunction({\n                        foundNote: n,\n                        svg: $newSvg,\n                    });\n                }\n            }\n        };\n\n        const $buttonDiv = $('<div/>').attr(\n            'class',\n            'accidentalToolbar scoreToolbar'\n        );\n        for (let i = minAccidental; i <= maxAccidental; i++) {\n            const acc = new pitch.Accidental(i);\n            const $button = $(\n                '<button>' + acc.unicodeModifier + '</button>'\n            ).click(e => addAccidental(i, e));\n            if (Math.abs(i) > 1) {\n                $button.css('font-family', 'Bravura Text');\n                $button.css('font-size', '20px');\n            }\n            $buttonDiv.append($button);\n        }\n        return $buttonDiv;\n    }\n    /**\n     *\n     * @memberof music21.stream.Stream\n     * @returns {jQueryObject} a Div containing two buttons -- play and stop\n     */\n    getPlayToolbar() {\n        const $buttonDiv = $('<div/>').attr(\n            'class',\n            'playToolbar scoreToolbar'\n        );\n        const $bPlay = $('<button>&#9658</button>');\n        $bPlay.click(() => {\n            this.playStream();\n        });\n        $buttonDiv.append($bPlay);\n        const $bStop = $('<button>&#9724</button>');\n        $bStop.click(() => {\n            this.stopPlayStream();\n        });\n        $buttonDiv.append($bStop);\n        return $buttonDiv;\n    }\n    //  reflow\n\n    /**\n     * Begins a series of bound events to the window that makes it\n     * so that on resizing the stream is redrawn and reflowed to the\n     * new size.\n     *\n     * @memberof music21.stream.Stream\n     * @param {JQueryDOMObject} jSvg\n     * @returns {music21.stream.Stream} this\n     */\n    windowReflowStart(jSvg) {\n        // set up a bunch of windowReflow bindings that affect the svg.\n        const callingStream = this;\n        let jSvgNow = jSvg;\n        $(window).bind('resizeEnd', () => {\n            // do something, window hasn't changed size in 500ms\n            const jSvgParent = jSvgNow.parent();\n            const newWidth = jSvgParent.width();\n            const svgWidth = newWidth;\n            // console.log(svgWidth);\n            console.log('resizeEnd triggered', newWidth);\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.resetRenderOptions(true, true); // recursive, preserveEvents\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.maxSystemWidth = svgWidth - 40;\n            jSvgNow.remove();\n            const svgObj = callingStream.appendNewDOM(jSvgParent);\n            jSvgNow = $(svgObj);\n        });\n        $(window).resize(function resizeSvgTo() {\n            if (this.resizeTO) {\n                clearTimeout(this.resizeTO);\n            }\n            this.resizeTO = setTimeout(function resizeToTimeout() {\n                $(this).trigger('resizeEnd');\n            }, 200);\n        });\n        setTimeout(function triggerResizeOnCreateSvg() {\n            const $window = $(window);\n            const doResize = $window.data('triggerResizeOnCreateSvg');\n            if (doResize === undefined || doResize === true) {\n                $(this).trigger('resizeEnd');\n                $window.data('triggerResizeOnCreateSvg', false);\n            }\n        }, 1000);\n        return this;\n    }\n    /**\n     * Does this stream have a {@link music21.stream.Voice} inside it?\n     *\n     * @memberof music21.stream.Stream\n     * @returns {Boolean}\n     */\n    hasVoices() {\n        for (const el of this) {\n            if (el.isClassOrSubclass('Voice')) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nstream.Stream = Stream;\n\n/**\n *\n * @class Voice\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Voice extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsFirst';\n    }\n}\nstream.Voice = Voice;\n\n/**\n * @class Measure\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Measure extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsFirst';\n        this.isMeasure = true;\n        this.number = 0; // measure number\n    }\n}\nstream.Measure = Measure;\n\n/**\n * Part -- specialized to handle Measures inside it\n *\n * @class Part\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Part extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'flatten';\n        this.systemHeight = this.renderOptions.naiveHeight;\n    }\n\n    /**\n     * How many systems does this Part have?\n     *\n     * Does not change any reflow information, so by default it's always 1.\n     *\n     * @memberof music21.stream.Part\n     * @returns {Number}\n     */\n    numSystems() {\n        let numSystems = 1;\n        const subStreams = this.getElementsByClass('Stream');\n        for (let i = 1; i < subStreams.length; i++) {\n            if (subStreams.get(i).renderOptions.startNewSystem) {\n                numSystems += 1;\n            }\n        }\n        return numSystems;\n    }\n\n    /**\n     * Find the width of every measure in the Part.\n     *\n     * @memberof music21.stream.Part\n     * @returns {Array<number>}\n     */\n    getMeasureWidths() {\n        /* call after setSubstreamRenderOptions */\n        const measureWidths = [];\n        for (const el of this) {\n            if (el.isClassOrSubclass('Measure')) {\n                const elRendOp = el.renderOptions;\n                measureWidths[elRendOp.measureIndex] = elRendOp.width;\n            }\n        }\n        /* console.log(measureWidths);\n         *\n         */\n        return measureWidths;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @memberof music21.stream.Part\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (this.hasSubStreams()) {\n            // part with Measures underneath\n            let totalLength = 0;\n            let isFirst = true;\n            for (const m of this.getElementsByClass('Measure')) {\n                // this looks wrong, but actually seems to be right. moving it to\n                // after the break breaks things.\n                totalLength\n                    += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                if (!isFirst && m.renderOptions.startNewSystem === true) {\n                    break;\n                }\n                isFirst = false;\n            }\n            return totalLength;\n        }\n        // no measures found in part... treat as measure\n        const tempM = new stream.Measure();\n        tempM.elements = this.elements;\n        return tempM.estimateStaffLength();\n    }\n    /**\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     *\n     * @memberof music21.stream.Part\n     * @param systemHeight\n     * @returns {Array}\n     */\n    fixSystemInformation(systemHeight) {\n        /*\n         * console.log('system height: ' + systemHeight);\n         */\n        if (systemHeight === undefined) {\n            systemHeight = this.systemHeight; /* part.show() called... */\n        } else if (debug) {\n            console.log('overridden systemHeight: ' + systemHeight);\n        }\n        const systemPadding\n            = this.renderOptions.systemPadding\n            || this.renderOptions.naiveSystemPadding;\n        const measureWidths = this.getMeasureWidths();\n        const maxSystemWidth = this.maxSystemWidth; /* of course fix! */\n        const systemCurrentWidths = [];\n        const systemBreakIndexes = [];\n        let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n        const startLeft = 20; /* TODO: make it obtained elsewhere */\n        let currentLeft = startLeft;\n        let i;\n        for (i = 0; i < measureWidths.length; i++) {\n            const currentRight = currentLeft + measureWidths[i];\n            /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n            if (currentRight > maxSystemWidth && lastSystemBreak !== i) {\n                systemBreakIndexes.push(i - 1);\n                systemCurrentWidths.push(currentLeft);\n\n                // console.log('setting new width at ' + currentLeft);\n                currentLeft = startLeft + measureWidths[i]; // 20 + this width;\n                lastSystemBreak = i;\n            } else {\n                currentLeft = currentRight;\n            }\n        }\n        // console.log(systemCurrentWidths);\n        // console.log(systemBreakIndexes);\n\n        let currentSystemIndex = 0;\n        let leftSubtract = 0;\n        let newLeftSubtract;\n        for (i = 0; i < this.length; i++) {\n            const m = this.get(i);\n            if (m.renderOptions === undefined) {\n                continue;\n            }\n            if (i === 0) {\n                m.renderOptions.startNewSystem = true;\n            }\n            currentLeft = m.renderOptions.left;\n\n            if (systemBreakIndexes.indexOf(i - 1) !== -1) {\n                /* first measure of new System */\n                const oldWidth = m.renderOptions.width;\n                m.renderOptions.displayClef = true;\n                m.renderOptions.displayKeySignature = true;\n                m.renderOptions.startNewSystem = true;\n\n                const newWidth\n                    = m.estimateStaffLength() + m.renderOptions.staffPadding;\n                m.renderOptions.width = newWidth;\n                leftSubtract = currentLeft - 20;\n                // after this one, we'll have a new left subtract...\n                newLeftSubtract = leftSubtract - (newWidth - oldWidth);\n\n                currentSystemIndex += 1;\n            } else if (i !== 0) {\n                m.renderOptions.startNewSystem = false;\n                m.renderOptions.displayClef = false; // check for changed clef first?\n                m.renderOptions.displayKeySignature = false; // check for changed KS first?\n            }\n            m.renderOptions.systemIndex = currentSystemIndex;\n            let currentSystemMultiplier;\n            if (currentSystemIndex >= systemCurrentWidths.length) {\n                /* last system... non-justified */\n                currentSystemMultiplier = 1;\n            } else {\n                const currentSystemWidth\n                    = systemCurrentWidths[currentSystemIndex];\n                currentSystemMultiplier = maxSystemWidth / currentSystemWidth;\n                // console.log('systemMultiplier: ' + currentSystemMultiplier + ' max: ' + maxSystemWidth + ' current: ' + currentSystemWidth);\n            }\n            /* might make a small gap? fix? */\n            const newLeft = currentLeft - leftSubtract;\n            if (newLeftSubtract !== undefined) {\n                leftSubtract = newLeftSubtract;\n                newLeftSubtract = undefined;\n            }\n            // console.log('M: ' + i + ' ; old left: ' + currentLeft + ' ; new Left: ' + newLeft);\n            m.renderOptions.left = Math.floor(\n                newLeft * currentSystemMultiplier\n            );\n            m.renderOptions.width = Math.floor(\n                m.renderOptions.width * currentSystemMultiplier\n            );\n            const newTop\n                = m.renderOptions.top\n                + currentSystemIndex * (systemHeight + systemPadding);\n            // console.log('M: ' + i + '; New top: ' + newTop + \" ; old Top: \" + m.renderOptions.top);\n            m.renderOptions.top = newTop;\n        }\n\n        return systemCurrentWidths;\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained measures\n     *\n     * @memberof music21.stream.Part\n     */\n    setSubstreamRenderOptions() {\n        let currentMeasureIndex = 0; /* 0 indexed for now */\n        let currentMeasureLeft = 20;\n        const rendOp = this.renderOptions;\n        let lastTimeSignature;\n        let lastKeySignature;\n        let lastClef;\n\n        for (const el of this) {\n            if (el.isClassOrSubclass('Measure')) {\n                const elRendOp = el.renderOptions;\n                elRendOp.measureIndex = currentMeasureIndex;\n                elRendOp.top = rendOp.top;\n                elRendOp.partIndex = rendOp.partIndex;\n                elRendOp.left = currentMeasureLeft;\n\n                if (currentMeasureIndex === 0) {\n                    lastClef = el._clef;\n                    lastTimeSignature = el._timeSignature;\n                    lastKeySignature = el._keySignature;\n\n                    elRendOp.displayClef = true;\n                    elRendOp.displayKeySignature = true;\n                    elRendOp.displayTimeSignature = true;\n                } else {\n                    if (\n                        el._clef !== undefined\n                        && lastClef !== undefined\n                        && el._clef.name !== lastClef.name\n                    ) {\n                        console.log(\n                            'changing clefs for ',\n                            elRendOp.measureIndex,\n                            ' from ',\n                            lastClef.name,\n                            ' to ',\n                            el._clef.name\n                        );\n                        lastClef = el._clef;\n                        elRendOp.displayClef = true;\n                    } else {\n                        elRendOp.displayClef = false;\n                    }\n\n                    if (\n                        el._keySignature !== undefined\n                        && lastKeySignature !== undefined\n                        && el._keySignature.sharps !== lastKeySignature.sharps\n                    ) {\n                        lastKeySignature = el._keySignature;\n                        elRendOp.displayKeySignature = true;\n                    } else {\n                        elRendOp.displayKeySignature = false;\n                    }\n\n                    if (\n                        el._timeSignature !== undefined\n                        && lastTimeSignature !== undefined\n                        && el._timeSignature.ratioString\n                            !== lastTimeSignature.ratioString\n                    ) {\n                        lastTimeSignature = el._timeSignature;\n                        elRendOp.displayTimeSignature = true;\n                    } else {\n                        elRendOp.displayTimeSignature = false;\n                    }\n                }\n                elRendOp.width\n                    = el.estimateStaffLength() + elRendOp.staffPadding;\n                elRendOp.height = el.estimateStreamHeight();\n                currentMeasureLeft += elRendOp.width;\n                currentMeasureIndex += 1;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * systemIndexAndScaledY - given a scaled Y, return the systemIndex\n     * and the scaledYRelativeToSystem\n     *\n     * @memberof music21.stream.Part\n     * @param  {number} y the scaled Y\n     * @return Array<int, number>   systemIndex, scaledYRelativeToSystem\n     */\n    systemIndexAndScaledY(y) {\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n        const systemIndex = Math.floor(y / (this.systemHeight + systemPadding));\n        const scaledYRelativeToSystem\n            = y - systemIndex * (this.systemHeight + systemPadding);\n        return [systemIndex, scaledYRelativeToSystem];\n    }\n\n    /**\n     * Overrides the default music21.stream.Stream#findNoteForClick\n     * by taking into account systems\n     *\n     * @memberof music21.stream.Part\n     * @param {DOMObject} svg\n     * @param {Event} e\n     * @returns {Array} [clickedDiatonicNoteNum, foundNote]\n     */\n    findNoteForClick(svg, e) {\n        const [x, y] = this.getScaledXYforDOM(svg, e);\n\n        // debug = true;\n        if (debug) {\n            console.log(\n                'this.estimateStreamHeight(): '\n                    + this.estimateStreamHeight()\n                    + ' / $(svg).height(): '\n                    + $(svg).height()\n            );\n        }\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n        const [systemIndex, scaledYRelativeToSystem] = this.systemIndexAndScaledY(y);\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(\n            scaledYRelativeToSystem\n        );\n\n        const foundNote = this.noteElementFromScaledX(\n            x,\n            undefined,\n            systemIndex\n        );\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Returns the measure that is at X location xPxScaled and system systemIndex.\n     *\n     * @memberof music21.stream.Part\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream}\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        let gotMeasure;\n        const measures = this.measures;\n        for (const m of measures) {\n            const rendOp = m.renderOptions;\n            const left = rendOp.left;\n            const right = left + rendOp.width;\n            const top = rendOp.top;\n            const bottom = top + rendOp.height;\n            if (debug) {\n                console.log(\n                    'Searching for X:'\n                        + Math.round(xPxScaled)\n                        + ' in Measure '\n                        + ' with boundaries L:'\n                        + left\n                        + ' R:'\n                        + right\n                        + ' T: '\n                        + top\n                        + ' B: '\n                        + bottom\n                );\n            }\n            if (xPxScaled >= left && xPxScaled <= right) {\n                if (systemIndex === undefined) {\n                    gotMeasure = m;\n                    break;\n                } else if (rendOp.systemIndex === systemIndex) {\n                    gotMeasure = m;\n                    break;\n                }\n            }\n        }\n        return gotMeasure;\n    }\n}\nstream.Part = Part;\n\n/**\n * Scores with multiple parts\n *\n * @class Score\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Score extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsOnly';\n        this.measureWidths = [];\n        this.partSpacing = this.renderOptions.naiveHeight;\n    }\n    get systemPadding() {\n        const numParts = this.parts.length;\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            if (numParts === 1) {\n                systemPadding = this.renderOptions.naiveSystemPadding; // fix to 0\n            } else {\n                systemPadding = this.renderOptions.naiveSystemPadding;\n            }\n        }\n        return systemPadding;\n    }\n\n    /**\n     * Returns the measure that is at X location xPxScaled and system systemIndex.\n     *\n     * Always returns the measure of the top part...\n     *\n     * @memberof music21.stream.Score\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream} usually a Measure\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        const parts = this.parts;\n        return parts\n            .get(0)\n            .getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex);\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained parts\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    setSubstreamRenderOptions() {\n        let currentPartNumber = 0;\n        let currentPartTop = 0;\n        const partSpacing = this.partSpacing;\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.renderOptions.partIndex = currentPartNumber;\n                el.renderOptions.top = currentPartTop;\n                el.setSubstreamRenderOptions();\n                currentPartTop += partSpacing;\n                currentPartNumber += 1;\n            }\n        }\n        this.evenPartMeasureSpacing();\n        const ignoreNumSystems = true;\n        const currentScoreHeight = this.estimateStreamHeight(ignoreNumSystems);\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.fixSystemInformation(currentScoreHeight);\n            }\n        }\n        this.renderOptions.height = this.estimateStreamHeight();\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @memberof music21.stream.Score\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        // override\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        for (const p of this) {\n            if (p.isClassOrSubclass('Part')) {\n                return p.estimateStaffLength();\n            }\n        }\n        // no parts found in score... use part...\n        console.log('no parts found in score');\n        const tempPart = new stream.Part();\n        tempPart.elements = this.elements;\n        return tempPart.estimateStaffLength();\n    }\n\n    /* MIDI override */\n    /**\n     * Overrides the default music21.stream.Stream#playStream\n     *\n     * Works crappily -- just starts *n* midi players.\n     *\n     * Render scrollable score works better...\n     *\n     * @memberof music21.stream.Score\n     * @param {object} params -- passed to each part\n     * @returns {music21.stream.Score} this\n     */\n    playStream(params) {\n        // play multiple parts in parallel...\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.playStream(params);\n            }\n        }\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#stopPlayScore()\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    stopPlayStream() {\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.stopPlayStream();\n            }\n        }\n        return this;\n    }\n    /*\n     * Svg routines\n     */\n    /**\n     * call after setSubstreamRenderOptions\n     * gets the maximum measure width for each measure\n     * by getting the maximum for each measure of\n     * Part.getMeasureWidths();\n     *\n     * Does this work? I found a bug in this and fixed it that should have\n     * broken it!\n     *\n     * @memberof music21.stream.Score\n     * @returns Array<number>\n     */\n    getMaxMeasureWidths() {\n        const maxMeasureWidths = [];\n        const measureWidthsArrayOfArrays = [];\n        let i;\n        // TODO: Do not crash on not partlike...\n        for (const el of this) {\n            measureWidthsArrayOfArrays.push(el.getMeasureWidths());\n        }\n        for (i = 0; i < measureWidthsArrayOfArrays[0].length; i++) {\n            let maxFound = 0;\n            for (let j = 0; j < this.length; j++) {\n                if (measureWidthsArrayOfArrays[j][i] > maxFound) {\n                    maxFound = measureWidthsArrayOfArrays[j][i];\n                }\n            }\n            maxMeasureWidths.push(maxFound);\n        }\n        // console.log(measureWidths);\n        return maxMeasureWidths;\n    }\n\n    /**\n     * systemIndexAndScaledY - given a scaled Y, return the systemIndex\n     * and the scaledYRelativeToSystem\n     *\n     * @memberof music21.stream.Score\n     * @param  {number} y the scaled Y\n     * @return Array<int, number>   systemIndex, scaledYRelativeToSystem\n     */\n    systemIndexAndScaledY(y) {\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n\n        const numParts = this.parts.length;\n        const systemHeight = numParts * this.partSpacing + this.systemPadding;\n        const systemIndex = Math.floor(y / systemHeight);\n        const scaledYRelativeToSystem = y - systemIndex * systemHeight;\n        return [systemIndex, scaledYRelativeToSystem];\n    }\n\n    /**\n     * Returns a list of [clickedDiatonicNoteNum, foundNote] for a\n     * click event, taking into account that the note will be in different\n     * Part objects (and different Systems) given the height and possibly different Systems.\n     *\n     * @memberof music21.stream.Score\n     * @param {DOMObject} svg\n     * @param {Event} e\n     * @returns {Array} [diatonicNoteNum, m21Element]\n     */\n    findNoteForClick(svg, e) {\n        const [x, y] = this.getScaledXYforDOM(svg, e);\n        const [systemIndex, scaledYFromSystemTop] = this.systemIndexAndScaledY(\n            y\n        );\n        const partIndex = Math.floor(scaledYFromSystemTop / this.partSpacing);\n        const scaledYinPart\n            = scaledYFromSystemTop - partIndex * this.partSpacing;\n        // console.log('systemIndex: ' + systemIndex + \" partIndex: \" + partIndex);\n        const rightPart = this.get(partIndex);\n        if (rightPart === undefined) {\n            return [undefined, undefined]; // may be too low?\n        }\n\n        const clickedDiatonicNoteNum = rightPart.diatonicNoteNumFromScaledY(\n            scaledYinPart\n        );\n\n        const foundNote = rightPart.noteElementFromScaledX(\n            x,\n            undefined,\n            systemIndex\n        );\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * How many systems are there? Calls numSystems() on the first part.\n     *\n     * @memberof music21.stream.Score\n     * @returns {Int}\n     */\n    numSystems() {\n        return this.getElementsByClass('Part')\n            .get(0)\n            .numSystems();\n    }\n\n    /**\n     * Fixes the part measure spacing for all parts.\n     *\n     * @memberof music21.stream.Score\n     * @returns {music21.stream.Score} this\n     */\n    evenPartMeasureSpacing() {\n        const measureStacks = [];\n        let currentPartNumber = 0;\n        const maxMeasureWidth = [];\n        let j;\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                const measureWidths = el.getMeasureWidths();\n                for (j = 0; j < measureWidths.length; j++) {\n                    const thisMeasureWidth = measureWidths[j];\n                    if (measureStacks[j] === undefined) {\n                        measureStacks[j] = [];\n                        maxMeasureWidth[j] = thisMeasureWidth;\n                    } else if (thisMeasureWidth > maxMeasureWidth[j]) {\n                        maxMeasureWidth[j] = thisMeasureWidth;\n                    }\n                    measureStacks[j][currentPartNumber] = thisMeasureWidth;\n                }\n                currentPartNumber += 1;\n            }\n        }\n        let currentLeft = 20;\n        for (let i = 0; i < maxMeasureWidth.length; i++) {\n            // TODO: do not assume, only elements in Score are Parts and in Parts are Measures...\n            const measureNewWidth = maxMeasureWidth[i];\n            for (j = 0; j < this.length; j++) {\n                const part = this.get(j);\n                const measure = part.get(i);\n                const rendOp = measure.renderOptions;\n                rendOp.width = measureNewWidth;\n                rendOp.left = currentLeft;\n            }\n            currentLeft += measureNewWidth;\n        }\n        return this;\n    }\n}\nstream.Score = Score;\n\n// small Class; a namedtuple in music21p\nexport class OffsetMap {\n    constructor(element, offset, endTime, voiceIndex) {\n        this.element = element;\n        this.offset = offset;\n        this.endTime = endTime;\n        this.voiceIndex = voiceIndex;\n    }\n}\nstream.OffsetMap = OffsetMap;\n","// future -- rewrite of Score and Part to Page, System, SystemPart\n// not currently used\n// import * as $ from 'jquery';\n//\n// import { base } from './base.js';\n// import { renderOptions } from './renderOptions.js';\nimport { stream } from './stream.js';\n// import { common } from './common.js';\n/**\n * Does not work yet, so not documented\n *\n */\nexport const layout = {};\nlayout.makeLayoutFromScore = function makeLayoutFromScore(\n    score,\n    containerWidth\n) {\n    /*\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     */\n    // var systemHeight = score.systemHeight; /* part.show() called... */\n    // var systemPadding = score.systemPadding;\n    const parts = score.parts;\n    // console.log(parts);\n    const numParts = parts.length;\n    const partZero = parts[0];\n    const numMeasures = partZero.length;\n\n    const measureWidths = partZero.getMeasureWidths();\n    const maxSystemWidth\n        = containerWidth || score.maxSystemWidth; /* of course fix! */\n\n    const layoutScore = new layout.LayoutScore();\n    const currentPage = new layout.Page(); // to-do multiple pages...\n    currentPage.measureStart = 1;\n    currentPage.measureEnd = numMeasures;\n\n    layoutScore.insert(0, currentPage);\n\n    let currentSystem = new layout.System();\n    let currentSystemNumber = 1;\n    currentSystem.measureStart = 1;\n    let currentStaves = [];\n\n    const staffMaker = (staffHolder, numParts, measureStart) => {\n        for (let pNum = 0; pNum < numParts; pNum++) {\n            const staff = new layout.Staff();\n            staff.measureStart = measureStart;\n            staff.staffNumber = pNum + 1;\n            staffHolder.push(staff);\n        }\n    };\n    staffMaker(currentStaves, numParts, 1);\n\n    const systemCurrentWidths = [];\n    const systemBreakIndexes = [];\n    let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n    const startLeft = 20; /* TODO: make it obtained elsewhere */\n    let currentLeft = startLeft;\n    // let currentSystemTop = 0;\n    // var partTopOffsets = [];\n    // const ignoreSystemsInCalculatingScoreHeight = true;\n    // const systemHeight = score.estimateStreamHeight(ignoreSystemsInCalculatingScoreHeight);\n\n    for (let i = 0; i < measureWidths.length; i++) {\n        const currentRight = currentLeft + measureWidths[i];\n        /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n        if (currentRight > maxSystemWidth && lastSystemBreak !== i) {\n            // new system...\n            for (let j = 0; j < currentStaves.length; j++) {\n                currentStaves.measureEnd = i;\n                currentSystem.insert(0, currentStaves[j]);\n            }\n            currentStaves = [];\n            staffMaker(currentStaves, numParts, i + 1);\n            // currentSystemTop += systemHeight;\n            currentSystem.measureEnd = i;\n            currentPage.insert(0, currentSystem);\n            currentSystemNumber += 1;\n            currentSystem = new layout.System();\n            currentSystem.measureStart = i + 1;\n            currentSystem.systemNumber = currentSystemNumber;\n\n            systemBreakIndexes.push(i - 1);\n            systemCurrentWidths.push(currentLeft);\n            console.log(\n                'setting new width at ' + currentLeft + ' measure ' + i\n            );\n            currentLeft = startLeft + measureWidths[i];\n            lastSystemBreak = i;\n        } else {\n            currentLeft = currentRight;\n        }\n        for (let pNum = 0; pNum < currentStaves.length; pNum++) {\n            currentStaves[pNum].append(parts[pNum].get(i));\n        }\n    }\n    for (let j = 0; j < currentStaves.length; j++) {\n        currentStaves.measureEnd = measureWidths.length - 1;\n        currentSystem.insert(0, currentStaves[j]);\n    }\n    currentPage.insert(0, currentSystem);\n    return layoutScore;\n};\n\nexport class LayoutScore extends stream.Score {\n    constructor() {\n        super();\n        this.scoreLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = 0;\n        this.left = 0;\n    }\n    get pages() {\n        return this.getElementsByClass('Page');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n    /**\n     * return a tuple of (top, bottom) for a staff, specified by a given pageId,\n     * systemId, and staffId in PIXELS.\n\n     * @param pageId\n     * @param systemId\n     * @param staffId\n     * @param units -- \"pixels\" or \"tenths\" (not supported)\n     */\n\n    getPositionForStaff(pageId, systemId, staffId, units) {\n        units = units || 'pixels';\n    }\n}\nlayout.LayoutScore = LayoutScore;\n\n/**\n * All music must currently be on page 1.\n */\nexport class Page extends stream.Score {\n    constructor() {\n        super();\n        this.pageNumber = 1;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this.systemStart = undefined;\n        this.systemEnd = undefined;\n        this.pageLayout = undefined;\n    }\n    get systems() {\n        return this.getElementsByClass('System');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.Page = Page;\n\nexport class System extends stream.Score {\n    constructor() {\n        super();\n        this.systemNumber = 1;\n        this.systemLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = undefined;\n        this.left = undefined;\n    }\n    get staves() {\n        return this.getElementsByClass('Staff');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.System = System;\n\nexport class Staff extends stream.Part {\n    constructor() {\n        super();\n        this.staffNumber = 1;\n        this.optimized = 0;\n        this.top = undefined;\n        this.left = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.inheritedHeight = undefined;\n        this.staffLayout = undefined;\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nlayout.Staff = Staff;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tie -- ties!\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport { prebase } from './prebase.js';\nimport { Music21Exception } from './exceptions21.js';\n\n/**\n * Simple tie module {@link music21.tie} namespace\n *\n * @exports music21/tie\n */\n\n/**\n * Tie namespace, just has the {@link music21.tie.Tie} object\n *\n * @namespace music21.tie\n * @memberof music21\n * @requires music21/prebase\n */\nexport const tie = {};\nconst VALID_TIE_TYPES = ['start', 'stop', 'continue', 'let-ring', undefined];\n\n/**\n * Tie class. Found in {@link music21.note.GeneralNote} `.tie`.\n *\n * Does not support advanced music21p values `.to` and `.from`\n *\n * @class Tie\n * @memberof music21.tie\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - 'start', 'stop', 'continue', or 'let-ring'\n * @property {string} type - the tie type\n * @property {string} style - only supports 'normal' for now.\n * @property {string|undefined} placement - undefined = unknown or above/below. (NB curently does nothing)\n */\nexport class Tie extends prebase.ProtoM21Object {\n    constructor(type) {\n        super();\n        this._type = undefined;\n        this.style = 'normal';\n        this.type = type;\n        this.placement = undefined;\n    }\n    get type() {\n        return this._type;\n    }\n    set type(newType) {\n        if (!VALID_TIE_TYPES.includes(newType)) {\n            throw new Music21Exception(\n                'Tie type must be one of \"start\", \"stop\", \"continue\", \"let-ring\"'\n            );\n        }\n        this._type = newType;\n    }\n}\ntie.Tie = Tie;\n","import * as $ from 'jquery';\n\nimport { chord } from './chord.js';\nimport { clef } from './clef.js';\nimport { duration } from './duration.js';\nimport { key } from './key.js';\nimport { meter } from './meter.js';\nimport { note } from './note.js';\nimport { pitch } from './pitch.js';\nimport { stream } from './stream.js';\nimport { tie } from './tie.js';\n\nconst DEFAULTS = {\n    divisionsPerQuarter: 32 * 3 * 3 * 5 * 7,\n};\n\nfunction hyphenToCamelCase(tag) {\n    return tag.replace(/-([a-z])/g, firstLetter =>\n        firstLetter[1].toUpperCase()\n    );\n}\n\nfunction seta(m21El, xmlEl, tag, attributeName, transform) {\n    const $matchEl = $(xmlEl).children(tag);\n    if (!$matchEl) {\n        return;\n    }\n    let value = $matchEl\n        .contents()\n        .eq(0)\n        .text();\n    if (value === undefined || value === '') {\n        return;\n    }\n    if (transform !== undefined) {\n        value = transform(value);\n    }\n    if (attributeName === undefined) {\n        attributeName = hyphenToCamelCase(tag);\n    }\n    m21El[attributeName] = value;\n}\n\nexport class ScoreParser {\n    constructor() {\n        this.xmlText = undefined;\n        this.xmlUrl = undefined;\n        this.$xmlRoot = undefined;\n        this.stream = new stream.Score();\n\n        this.definesExplicitSystemBreaks = false;\n        this.definesExplicitPageBreaks = false;\n\n        this.mxScorePartDict = {};\n        this.m21PartObjectsById = {};\n        this.partGroupList = [];\n        this.parts = [];\n\n        this.musicXmlVersion = '1.0';\n    }\n\n    scoreFromUrl(url) {\n        this.xmlUrl = url;\n        return $.get(url, {}, (xmlDoc, textStatus) =>\n            this.scoreFromDOMTree(xmlDoc)\n        );\n    }\n\n    scoreFromText(xmlText) {\n        this.xmlText = xmlText;\n        const xmlDoc = $.parseXML(xmlText);\n        return this.scoreFromDOMTree(xmlDoc);\n    }\n\n    scoreFromDOMTree(xmlDoc) {\n        this.$xmlRoot = $($(xmlDoc).children('score-partwise'));\n        this.xmlRootToScore(this.$xmlRoot, this.stream);\n        return this.stream;\n    }\n\n    xmlRootToScore($mxScore, inputM21) {\n        let s = inputM21;\n        if (inputM21 === undefined) {\n            s = new stream.Score();\n        }\n        // version\n        // defaults\n        // credit\n        this.parsePartList($mxScore);\n        for (const p of $mxScore.children('part')) {\n            const $p = $(p);\n            const partId = $p.attr('id');\n            // if (partId === undefined) {\n            //     partId = //something\n            // }\n            const $mxScorePart = this.mxScorePartDict[partId];\n            const part = this.xmlPartToPart($p, $mxScorePart);\n            if (part !== undefined) {\n                // partStreams are undefined\n                s.insert(0.0, part);\n                this.m21PartObjectsById[partId] = part;\n                this.parts.push(part);\n            }\n        }\n        // partGroups;\n        // spanners;\n        // definesExplicitSystemreaks, etc.\n        // sort\n        return s;\n    }\n\n    xmlPartToPart($mxPart, $mxScorePart) {\n        const parser = new PartParser($mxPart, $mxScorePart, this);\n        parser.parse();\n        // handle partStreams\n        return parser.stream;\n    }\n\n    parsePartList($mxScore) {\n        const mxPartList = $mxScore.children('part-list');\n        if (!mxPartList) {\n            return;\n        }\n        // const openPartGroups = [];\n        for (const partListElement of mxPartList) {\n            const $partListElement = $(partListElement);\n            const partId = $partListElement.attr('id');\n            this.mxScorePartDict[partId] = $partListElement;\n        }\n        // deal with part-groups\n    }\n}\n\nexport class PartParser {\n    constructor($mxPart, $mxScorePart, parent) {\n        this.$mxPart = $mxPart;\n        this.$mxScorePart = $mxScorePart;\n        // ignore parent for now\n        if ($mxPart !== undefined) {\n            this.partId = $mxPart.attr('id');\n            // ignore empty partId for now\n        }\n        // spannerBundles\n        this.stream = new stream.Part();\n        this.atSoundingPitch = true;\n        this.staffReferenceList = [];\n\n        this.lastTimeSignature = undefined;\n        this.lastMeasureWasShort = false;\n        this.lastMeasureOffset = 0.0;\n        this.lastClefs = {\n            0: new clef.TrebleClef(),\n        };\n        this.activeTuplets = [];\n        this.activeTuplets.length = 7;\n        this.activeTuplets.fill(undefined);\n\n        this.maxStaves = 1;\n        this.lastMeasureNumber = 0;\n        this.lastNumberSuffix = undefined;\n\n        this.multiMeasureRestsToCapture = 0;\n        this.activeMultimeasureRestSpanner = undefined;\n\n        this.activeInstrument = undefined;\n        this.firstMeasureParsed = false;\n        this.$activeAttributes = undefined;\n        this.lastDivisions = DEFAULTS.divisionsPerQuarter;\n\n        this.appendToScoreAfterParse = true;\n        this.lastMeasureParser = undefined;\n    }\n\n    parse() {\n        this.parseXmlScorePart();\n        this.parseMeasures();\n        // atSoundingPitch;\n        // spannerBundles\n        // partStaves;\n    }\n\n    parseXmlScorePart() {\n        const part = this.stream;\n        const $mxScorePart = this.$mxScorePart;\n\n        seta(part, $mxScorePart, 'part-name'); // todo -- clean string\n        // remainder of part names\n        // instruments\n    }\n\n    parseMeasures() {\n        for (const mxMeasure of this.$mxPart.children('measure')) {\n            const $mxMeasure = $(mxMeasure);\n            this.xmlMeasureToMeasure($mxMeasure);\n        }\n        if (this.lastMeasureParser !== undefined) {\n            this.lastMeasureParser.parent = undefined; // gc.\n        }\n    }\n\n    xmlMeasureToMeasure($mxMeasure) {\n        const measureParser = new MeasureParser($mxMeasure, this);\n        measureParser.parse();\n        if (this.lastMeasureParser !== undefined) {\n            this.lastMeasureParser.parent = undefined; // gc.\n        }\n        this.lastMeasureParser = measureParser;\n        // max staves\n        // transposition\n        this.firstMeasureParsed = true;\n        // staffReferenceList\n\n        const m = measureParser.stream;\n        this.setLastMeasureInfo(m);\n        // fullMeasureRests\n\n        // TODO: offsets!!!\n        // this.stream.insert(this.lastMeasureOffset, m);\n        this.stream.append(m);\n\n        this.adjustTimeAttributesFromMeasure(m);\n    }\n\n    setLastMeasureInfo(m) {\n        if (m.number !== this.lastMeasureNumber) {\n            this.lastMeasureNumber = m.number;\n            this.lastNumberSuffix = m.numberSuffix;\n        }\n\n        if (m.timeSignature !== undefined) {\n            this.lastTimeSignature = m.timeSignature;\n        } else if (this.lastTimeSignature === undefined) {\n            this.lastTimeSignature = new meter.TimeSignature('4/4');\n        }\n    }\n\n    adjustTimeAttributesFromMeasure(m) {\n        const mHighestTime = m.highestTime;\n        // ignore incomplete measures.\n        const mOffsetShift = mHighestTime;\n        this.lastMeasureOffset += mOffsetShift;\n    }\n}\n\nexport class MeasureParser {\n    constructor($mxMeasure, parent) {\n        this.$mxMeasure = $mxMeasure;\n        this.$mxMeasureElements = [];\n\n        this.divisions = undefined;\n        this.parent = parent;\n\n        this.transposition = undefined;\n        // spannerBundles\n        this.staffReference = {};\n        // activeTuplets\n        this.useVoices = false;\n        this.voicesById = {};\n        this.voiceIndices = new Set();\n        this.staves = 1;\n        this.$activeAttributes = undefined;\n        this.attributesAreInternal = true;\n        this.measureNumber = undefined;\n        this.numberSuffix = undefined;\n\n        if (parent !== undefined) {\n            this.divisions = parent.lastDivisions;\n        } else {\n            this.divisions = DEFAULTS.divisionsPerQuarter;\n        }\n\n        this.staffLayoutObjects = [];\n        this.stream = new stream.Measure();\n\n        this.$mxNoteList = [];\n        this.$mxLyricList = [];\n        this.nLast = undefined;\n        this.chordVoice = undefined;\n        this.fullMeasureRest = false;\n        this.restAndNoteCount = {\n            rest: 0,\n            note: 0,\n        };\n        this.lastClefs = {\n            0: undefined,\n        };\n        this.parseIndex = 0;\n        this.offsetMeasureNote = 0.0;\n\n        // class attributes in m21p\n        this.attributeTagsToMethods = {\n            time: 'handleTimeSignature',\n            clef: 'handleClef',\n            key: 'handleKeySignature',\n            // 'staff-details': 'handleStaffDetails',\n            // 'measure-style': 'handleMeasureStyle',\n        };\n        this.musicDataMethods = {\n            note: 'xmlToNote',\n            // 'backup': 'xmlBackup',\n            // 'forward': 'xmlForward',\n            // 'direction': 'xmlDirection',\n            attributes: 'parseAttributesTag',\n            // 'harmony': 'xmlHarmony',\n            // 'figured-bass': undefined,\n            // 'sound': undefined,\n            // 'barline': 'xmlBarline',\n            // 'grouping': undefined,\n            // 'link': undefined,\n            // 'bookmark': undefined,\n\n            // Note: <print> is handled separately...\n        };\n    }\n\n    parse() {\n        // mxPrint\n        this.parseMeasureAttributes();\n        // updateVoiceInformation;\n\n        const children = this.$mxMeasure.children();\n        this.$mxMeasureElements = [];\n        for (const c of children) {\n            const $c = $(c);\n            this.$mxMeasureElements.push($c);\n        }\n\n        let i = 0;\n        for (const $mxObj of this.$mxMeasureElements) {\n            const tag = $mxObj[0].tagName;\n            this.parseIndex = i;\n            const methName = this.musicDataMethods[tag];\n            if (methName !== undefined) {\n                this[methName]($mxObj);\n            }\n            i += 1;\n        }\n        // useVoices\n        // fullMeasureRest\n    }\n\n    insertInMeasureOrVoice($mxObj, el) {\n        // TODO: offsets!\n        // this.stream.insert(this.offsetMeasureNote, el);\n        this.stream.append(el);\n    }\n\n    xmlToNote($mxNote) {\n        let nextNoteIsChord = false;\n        const $mxObjNext = this.$mxMeasureElements[this.parseIndex + 1];\n        if ($mxObjNext !== undefined) {\n            if (\n                $mxObjNext[0].tagName === 'note'\n                && $mxObjNext.children('chord').length > 0\n            ) {\n                nextNoteIsChord = true;\n            }\n        }\n        let isChord = false;\n        let isRest = false;\n\n        let offsetIncrement = 0.0;\n        if ($mxNote.children('rest').length > 0) {\n            isRest = true;\n        }\n        if ($mxNote.children('chord').length > 0) {\n            isChord = true;\n        }\n        if (nextNoteIsChord) {\n            isChord = true;\n        }\n\n        let n;\n\n        if (isChord) {\n            this.$mxNoteList.push($mxNote);\n            // chord lyrics\n        } else if (!isChord && !isRest) {\n            // normal note\n            this.restAndNoteCount.note += 1;\n            n = this.xmlToSimpleNote($mxNote);\n        } else {\n            this.restAndNoteCount.rest += 1;\n            n = this.xmlToRest($mxNote);\n        }\n\n        if (!isChord) {\n            // update lyrics\n            // add to staffReference\n            this.insertInMeasureOrVoice($mxNote, n);\n            offsetIncrement = n.duration.quarterLength;\n            this.nLast = n;\n        }\n\n        if (this.$mxNoteList && !nextNoteIsChord) {\n            const c = this.xmlToChord(this.$mxNoteList);\n            // update lyrics\n            // addToStaffRest;\n\n            // voices;\n            this.insertInMeasureOrVoice($mxNote, c);\n\n            this.$mxNoteList = [];\n            this.$mxLyricList = [];\n            offsetIncrement = c.duration.quarterLength;\n            this.nLast = c;\n        }\n\n        this.offsetMeasureNote += offsetIncrement;\n    }\n\n    xmlToChord($mxNoteList) {\n        const notes = [];\n        for (const $mxNote of $mxNoteList) {\n            const freeSpanners = false;\n            notes.push(this.xmlToSimpleNote($mxNote, freeSpanners));\n        }\n        const c = new chord.Chord(notes);\n        // move beams from first note;\n        // move articulations;\n        // move expressions;\n        // move spanners;\n\n        return c;\n    }\n\n    xmlToSimpleNote($mxNote, freeSpanners) {\n        const n = new note.Note();\n        this.xmlToPitch($mxNote, n.pitch);\n        // beams;\n        // stems;\n        // noteheads\n        return this.xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners);\n    }\n\n    // xmlToBeam\n    // xmlToBeams\n    // xmlNotehead\n\n    xmlToPitch($mxNote, inputM21) {\n        let p = inputM21;\n        if (inputM21 === undefined) {\n            p = new pitch.Pitch();\n        }\n\n        let $mxPitch;\n        if ($mxNote[0].tagName === 'pitch') {\n            $mxPitch = $mxNote;\n        } else {\n            $mxPitch = $($mxNote.children('pitch')[0]);\n            if ($mxPitch.length === 0) {\n                // whoops!\n                return p;\n            }\n        }\n\n        seta(p, $mxPitch, 'step');\n        seta(p, $mxPitch, 'octave', undefined, parseInt);\n        const $mxAlter = $mxPitch.children('alter');\n        let accAlter;\n        if ($mxAlter) {\n            accAlter = parseFloat($mxAlter.text().trim());\n        }\n\n        const $mxAccidental = $mxNote.children('accidental');\n        // dropping support for musescore 0.9 errors...\n        if ($mxAccidental.length > 0) {\n            const accObj = this.xmlToAccidental($mxAccidental);\n            p.accidental = accObj;\n            p.accidental.displayStatus = true;\n            // independent accidental from alter\n        } else if (accAlter !== undefined) {\n            p.accidental = new pitch.Accidental(accAlter);\n            p.accidental.displayStatus = false;\n        }\n        return p;\n    }\n\n    xmlToAccidental($mxAccidental) {\n        const acc = new pitch.Accidental();\n        // to-do m21/musicxml accidental name differences;\n        const name = $($mxAccidental[0])\n            .text()\n            .trim()\n            .toLowerCase();\n        acc.set(name);\n\n        // set print style\n        // parentheses\n        // bracket\n        // editorial\n        return acc;\n    }\n\n    xmlToRest($mxRest) {\n        const r = new note.Rest();\n        // full measure rest\n        // apply multimeasure rest\n        // display-step, octave, etc.\n        return this.xmlNoteToGeneralNoteHelper(r, $mxRest);\n    }\n\n    xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners) {\n        if (freeSpanners === undefined) {\n            freeSpanners = true;\n        }\n        // spanners\n        // setPrintStyle\n        // print-object\n        // dynamics\n        // pizzacato\n        // grace\n        this.xmlToDuration($mxNote, n.duration);\n        // type styles\n        // color\n        // position\n        if ($mxNote.children('tie').length > 0) {\n            n.tie = this.xmlToTie($mxNote);\n        }\n        // grace\n        // notations\n        // editorial\n        return n;\n    }\n\n    xmlToDuration($mxNote, inputM21) {\n        let d = inputM21;\n        if (inputM21 === undefined) {\n            d = new duration.Duration();\n        }\n        const divisions = this.divisions;\n        const mxDuration = $mxNote.children('duration')[0];\n        let qLen = 0.0;\n\n        if (mxDuration) {\n            const noteDivisions = parseFloat(\n                $(mxDuration)\n                    .text()\n                    .trim()\n            );\n            qLen = noteDivisions / divisions;\n        }\n\n        const mxType = $mxNote.children('type')[0];\n        if (mxType) {\n            // long vs longa todo\n            const durationType = $(mxType)\n                .text()\n                .trim();\n            const numDots = $mxNote.children('dot').length;\n            // tuplets!!!! big to-do!\n            d.type = durationType;\n            d.dots = numDots;\n        } else {\n            d.quarterLength = qLen;\n        }\n\n        return d;\n    }\n\n    // xmlGraceToGrace\n    // xmlNotations\n    // xmlTechnicalToArticulation\n    // setHarmonic\n    // handleFingering\n    // xmlToArticulation\n    // xmlOrnamentToExpression\n    // xmlDirectionTypeToSpanners\n    // xmlNotationsToSpanners\n    // xmlToTremolo\n    // xmlOneSpanner\n\n    xmlToTie($mxNote) {\n        const t = new tie.Tie();\n        const allTies = $mxNote.children('tie');\n        if (allTies.length > 1) {\n            t.type = 'continue';\n        } else {\n            const $t0 = $(allTies[0]);\n            t.type = $t0.attr('type');\n        }\n        // style\n        return t;\n    }\n\n    insertIntoMeasureOrVoice($mxElement, el) {\n        this.stream.insert(this.offsetMeasureNote, el);\n    }\n\n    parseMeasureAttributes() {\n        this.parseMeasureNumbers();\n        // width;\n    }\n\n    parseMeasureNumbers() {\n        const mNumRaw = this.$mxMeasure.attr('number');\n        const mNum = parseInt(mNumRaw); // no suffixes...\n        this.stream.number = mNum;\n        if (this.parent) {\n            this.parent.lastMeasureNumber = mNum;\n        }\n        this.measureNumber = mNum;\n    }\n\n    parseAttributesTag($mxAttributes) {\n        this.attributesAreInternal = false;\n        this.$activeAttributes = $mxAttributes;\n        for (const mxSub of $mxAttributes) {\n            const tag = mxSub.tagName;\n            const $mxSub = $(mxSub);\n            const methName = this.attributeTagsToMethods[tag];\n            if (methName !== undefined) {\n                this[methName]($mxSub);\n            } else if (tag === 'staves') {\n                this.staves = parseInt($mxSub.text());\n            } else if (tag === 'divisions') {\n                this.divisions = parseFloat($mxSub.text());\n            }\n            // transpose;\n        }\n        if (this.parent !== undefined) {\n            this.parent.lastDivisions = this.divisions;\n            this.parent.$activeAttributes = this.$activeAttributes;\n        }\n    }\n    // xmlTransposeToInterval\n\n    handleTimeSignature($mxTime) {\n        const ts = this.xmlToTimeSignature($mxTime);\n        this.insertIntoMeasureOrVoice($mxTime, ts);\n    }\n\n    xmlToTimeSignature($mxTime) {\n        // senza-misura\n        // simple time signature only;\n        const numerator = $($mxTime.children('beats')[0])\n            .text()\n            .trim();\n        const denominator = $($mxTime.children('beat-type')[0])\n            .text()\n            .trim();\n        return new meter.TimeSignature(numerator + '/' + denominator);\n        // symbol\n    }\n\n    handleClef($mxClef) {\n        const clefObj = this.xmlToClef($mxClef);\n        this.insertIntoMeasureOrVoice($mxClef, clefObj);\n        this.lastClefs[0] = clefObj;\n    }\n\n    xmlToClef($mxClef) {\n        const sign = $($mxClef.children('sign')[0])\n            .text()\n            .trim();\n        // TODO: percussion, etc.\n        const line = $($mxClef.children('line')[0])\n            .text()\n            .trim();\n\n        let clefOctaveChange = 0;\n        const $coc = $mxClef.children('clef-octave-change');\n        if ($coc.length > 0) {\n            clefOctaveChange = parseInt(\n                $($coc[0])\n                    .text()\n                    .trim()\n            );\n        }\n        return clef.clefFromString(sign + line, clefOctaveChange);\n    }\n\n    handleKeySignature($mxKey) {\n        const keySig = this.xmlToKeySignature($mxKey);\n        this.insertIntoMeasureOrVoice($mxKey, keySig);\n    }\n\n    xmlToKeySignature($mxKey) {\n        const ks = new key.KeySignature();\n        seta(ks, $mxKey, 'fifths', 'sharps', parseInt);\n        // mode!\n        // non-standard and key-octaves\n        return ks;\n    }\n}\n\nexport const musicxml = {\n    ScoreParser,\n    PartParser,\n    MeasureParser,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/roman -- roman.RomanNumberal -- Chord subclass\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { chord } from './chord.js';\nimport { common } from './common.js';\n// import { debug } from './debug.js';\nimport { figuredBass } from './figuredBass.js';\nimport { harmony } from './harmony.js';\nimport { interval } from './interval.js';\nimport { key } from './key.js';\nimport { pitch } from './pitch.js';\nimport { scale } from './scale.js';\n/**\n * Roman numeral module. See {@link music21.roman} namespace\n *\n * @exports music21/roman\n */\n/**\n * music21.roman -- namespace for dealing with RomanNumeral analysis.\n *\n * @namespace music21.roman\n * @memberof music21\n * @requires music21/chord\n * @requires music21/common\n * @requires music21/figuredBass\n * @requires music21/harmony\n * @requires music21/key\n * @requires music21/pitch\n * @requires music21/interval\n */\nexport const roman = {};\n\nroman.figureShorthands = {\n    '53': '',\n    '3': '',\n    '63': '6',\n    '753': '7',\n    '75': '7', // controversial perhaps\n    '73': '7', // controversial perhaps\n    '9753': '9',\n    '975': '9', // controversial perhaps\n    '953': '9', // controversial perhaps\n    '97': '9', // controversial perhaps\n    '95': '9', // controversial perhaps\n    '93': '9', // controversial perhaps\n    '653': '65',\n    '6b53': '6b5',\n    '643': '43',\n    '642': '42',\n    bb7b5b3: 'o7',\n    bb7b53: 'o7',\n    // '6b5bb3': 'o65',\n    b7b5b3: '/o7',\n};\n\nroman.functionalityScores = {\n    I: 100,\n    i: 90,\n    V7: 80,\n    V: 70,\n    V65: 68,\n    I6: 65,\n    V6: 63,\n    V43: 61,\n    I64: 60,\n    IV: 59,\n    i6: 58,\n    viio7: 57,\n    V42: 55,\n    viio65: 53,\n    viio6: 52,\n    '#viio65': 51,\n    ii: 50,\n    '#viio6': 49,\n    ii65: 48,\n    ii43: 47,\n    ii42: 46,\n    IV6: 45,\n    ii6: 43,\n    VI: 42,\n    '#VI': 41,\n    vi: 40,\n    viio: 39,\n    '#viio': 39,\n    iio: 37, // common in Minor\n    iio42: 36,\n    bII6: 35, // Neapolitan\n    iio43: 32,\n    iio65: 31,\n    '#vio': 28,\n    '#vio6': 28,\n    III: 22,\n    v: 20,\n    VII: 19,\n    VII7: 18,\n    IV65: 17,\n    IV7: 16,\n    iii: 15,\n    iii6: 12,\n    vi6: 10,\n};\n\n/**\n * expandShortHand - expand a string of numbers into an array\n *\n * N.B. this is NOT where abbreviations get expanded\n *\n * @memberof music21.roman\n * @param  {string} shorthand string of a figure w/o roman to parse\n * @return {Array<string>}           array of shorthands\n */\n\nroman.expandShortHand = function expandShortHand(shorthand) {\n    shorthand = shorthand.replace('/', '');\n    if (shorthand.match(/[b-]$/)) {\n        shorthand += '3';\n    }\n    shorthand = shorthand.replace('11', 'x');\n    shorthand = shorthand.replace('13', 'y');\n    shorthand = shorthand.replace('15', 'z');\n    const rx = new RegExp('#*-*b*o*[1-9xyz]', 'g');\n    let shorthandGroups = [];\n    let match = rx.exec(shorthand);\n    while (match !== null) {\n        shorthandGroups.push(match[0]);\n        match = rx.exec(shorthand);\n    }\n    if (shorthandGroups.length === 1 && shorthandGroups[0].endsWith('3')) {\n        shorthandGroups = ['5', shorthandGroups[0]];\n    }\n    const shGroupOut = [];\n    for (let sh of shorthandGroups) {\n        sh = sh.replace('x', '11');\n        sh = sh.replace('y', '13');\n        sh = sh.replace('z', '15');\n        shGroupOut.push(sh);\n    }\n    return shGroupOut;\n};\n\n/**\n * correctSuffixForChordQuality - Correct a given inversionString suffix given a\n *     chord of various qualities.\n *\n * @memberof music21.roman\n * @param  {music21.chord.Chord} chordObj\n * @param  {string} inversionString a string like '6' to fix.\n * @return {string}           corrected inversionString\n  */\n\nroman.correctSuffixForChordQuality = function correctSuffixForChordQuality(\n    chordObj,\n    inversionString\n) {\n    const fifthType = chordObj.semitonesFromChordStep(5);\n    let qualityName = '';\n    if (fifthType === 6) {\n        qualityName = 'o';\n    } else if (fifthType === 8) {\n        qualityName = '+';\n    }\n\n    if (\n        inversionString !== undefined\n        && (inversionString.startsWith('o') || inversionString.startsWith('/o'))\n    ) {\n        if (qualityName === 'o') {\n            // don't call viio7, viioo7.\n            qualityName = '';\n        }\n    }\n\n    const seventhType = chordObj.semitonesFromChordStep(7);\n    if (seventhType !== undefined && fifthType === 6) {\n        // there is a seventh and this is a diminished 5\n        if (seventhType === 10 && qualityName === 'o') {\n            qualityName = '/o';\n        } else if (seventhType !== 9) {\n            // do something for very odd chords built on diminished triad.\n        }\n    }\n    return qualityName + inversionString;\n};\n\n/**\n * maps an index number to a roman numeral in lowercase\n *\n * @memberof music21.roman\n * @example\n * music21.roman.romanToNumber[4]\n * // 'iv'\n */\nroman.romanToNumber = [undefined, 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n\n/**\n * Represents a RomanNumeral.  By default, capital Roman Numerals are\n * major chords; lowercase are minor.\n *\n * @class RomanNumeral\n * @memberof music21.roman\n * @extends music21.chord.Chord\n * @param {string} figure - the roman numeral as a string, e.g., 'IV', 'viio', 'V7'\n * @param {string|music21.key.Key} [keyStr='C']\n * @property {Array<music21.pitch.Pitch>} scale - (readonly) returns the scale associated with the roman numeral\n * @property {music21.key.Key} key - the key associated with the RomanNumeral (not allowed to be undefined yet)\n * @property {string} figure - the figure as passed in\n * @property {string} degreeName - the name associated with the scale degree, such as \"mediant\" etc., scale 7 will be \"leading tone\" or \"subtonic\" appropriately\n * @property {Int} scaleDegree\n * @property {string} impliedQuality - \"major\", \"minor\", \"diminished\", \"augmented\"\n * @property {Array<music21.pitch.Pitch>} pitches - RomanNumerals are Chord objects, so .pitches will work for them also.\n */\nexport class RomanNumeral extends harmony.Harmony {\n    constructor(figure = '', keyStr, keywords) {\n        const params = { updatePitches: false, parseFigure: false };\n        common.merge(params, keywords);\n        super(figure, params);\n        this._parsingComplete = false;\n\n        // not yet used...\n        this.primaryFigure = undefined;\n        this.secondaryRomanNumeral = undefined;\n        this.secondaryRomanNumeralKey = undefined;\n\n        this.pivotChord = undefined;\n        this.scaleCardinality = 7;\n        this._figure = undefined;\n\n        this.caseMatters = true;\n        if (typeof figure === 'number') {\n            this.caseMatters = false;\n        }\n\n        this.scaleDegree = undefined;\n        this.frontAlterationString = undefined;\n        this.frontAlterationTransposeInterval = undefined;\n        this.frontAlterationAccidental = undefined;\n        this.romanNumeralAlone = undefined;\n\n        this.impliedQuality = undefined;\n        this.impliedScale = undefined;\n        this.scaleOffset = undefined;\n        this.useImpliedScale = false;\n        this.bracketedAlterations = [];\n        this.omittedSteps = [];\n        this.followsKeyChange = false;\n        this._functionalityScore = undefined;\n\n        this._scale = undefined; // the key\n\n        this.figure = figure;\n        this.key = keyStr;\n\n        // to remove...\n        this.numbers = '';\n\n        if (figure !== '') {\n            this._parseFigure();\n            this._parsingComplete = true;\n            this._updatePitches();\n        }\n    }\n\n    _parseFigure() {\n        let workingFigure = this.figure;\n\n        let useScale = this.impliedScale;\n        if (!this.useImpliedScale) {\n            useScale = this.key;\n        }\n        [workingFigure, useScale] = this._correctForSecondaryRomanNumeral(\n            useScale\n        );\n        this.primaryFigure = workingFigure;\n\n        workingFigure = this._parseOmittedSteps(workingFigure);\n        workingFigure = this._parseBracketedAlterations(workingFigure);\n        workingFigure = workingFigure.replace(/^N6/, 'bII6');\n        workingFigure = workingFigure.replace(/^N/, 'bII6');\n        workingFigure = this._parseFrontAlterations(workingFigure);\n        [workingFigure, useScale] = this._parseRNAloneAmidstAug6(\n            workingFigure,\n            useScale\n        );\n        workingFigure = this._setImpliedQualityFromString(workingFigure);\n\n        this._tempRoot = useScale.pitchFromDegree(this.scaleDegree);\n        this._fixMinorVIandVII(useScale);\n        const expandedFigure = roman.expandShortHand(workingFigure);\n        this.figuresNotationObj = new figuredBass.Notation(\n            expandedFigure.toString()\n        );\n\n        const numbersArr = workingFigure.match(/\\d+/);\n        if (numbersArr != null) {\n            workingFigure = workingFigure.replace(/\\d+/, '');\n            this.numbers = parseInt(numbersArr[0]);\n        }\n    }\n\n    _parseFrontAlterations(workingFigure) {\n        let frontAlterationString = '';\n        let frontAlterationTransposeInterval;\n        let frontAlterationAccidental;\n        const _alterationRegex = new RegExp('^(b+|-+|#+)');\n        const match = _alterationRegex.exec(workingFigure);\n        if (match != null) {\n            const group = match[1];\n            let alteration = group.length;\n            if (group[0] === 'b' || group[0] === '-') {\n                alteration *= -1;\n            }\n            frontAlterationTransposeInterval = interval.intervalFromGenericAndChromatic(\n                1,\n                alteration\n            );\n            frontAlterationAccidental = new pitch.Accidental(alteration);\n            frontAlterationString = group;\n            workingFigure = workingFigure.replace(_alterationRegex, '');\n        }\n        this.frontAlterationString = frontAlterationString;\n        this.frontAlterationTransposeInterval = frontAlterationTransposeInterval;\n        this.frontAlterationAccidental = frontAlterationAccidental;\n        return workingFigure;\n    }\n\n    _correctBracketedPitches() {\n        for (const innerAlteration of this.bracketedAlterations) {\n            const [alterNotation, chordStep] = innerAlteration;\n            const alterPitch = this.getChordStep(chordStep);\n            if (alterPitch === undefined) {\n                continue;\n            }\n            const newAccidental = new pitch.Accidental(alterNotation);\n            if (alterPitch.accidental === undefined) {\n                alterPitch.accidental = newAccidental;\n            } else {\n                alterPitch.accidental.set(\n                    alterPitch.accidental.alter + newAccidental.alter\n                );\n            }\n        }\n    }\n\n    _setImpliedQualityFromString(workingFigure) {\n        let impliedQuality = '';\n        if (workingFigure.startsWith('o')) {\n            impliedQuality = 'diminished';\n            workingFigure = workingFigure.replace(/^o/, '');\n        } else if (workingFigure.startsWith('/o')) {\n            impliedQuality = 'half-diminished';\n            workingFigure = workingFigure.replace(/^\\/o/, '');\n        } else if (workingFigure.startsWith('+')) {\n            impliedQuality = 'augmented';\n            workingFigure = workingFigure.replace(/^\\+/, '');\n        } else if (workingFigure.endsWith('d7')) {\n            impliedQuality = 'dominant-seventh';\n            workingFigure = workingFigure.replace(/d7$/, '7');\n        } else if (\n            this.caseMatters\n            && this.romanNumeralAlone.toUpperCase() === this.romanNumeralAlone\n        ) {\n            impliedQuality = 'major';\n        } else if (\n            this.caseMatters\n            && this.romanNumeralAlone.toLowerCase() === this.romanNumeralAlone\n        ) {\n            impliedQuality = 'minor';\n        }\n        this.impliedQuality = impliedQuality;\n        return workingFigure;\n    }\n\n    _fixMinorVIandVII(useScale) {\n        if (useScale.mode !== 'minor') {\n            return;\n        }\n        if (!this.caseMatters) {\n            return;\n        }\n        if (this.scaleDegree !== 6 && this.scaleDegree !== 7) {\n            return;\n        }\n        if (\n            !['minor', 'diminished', 'half-diminished'].includes(\n                this.impliedQuality\n            )\n        ) {\n            return;\n        }\n\n        const fati = this.frontAlterationTransposeInterval;\n        if (fati !== undefined) {\n            const newFati = interval.add([fati, new interval.Interval('A1')]);\n            this.frontAlterationTransposeInterval = newFati;\n            this.frontAlterationAccidental.alter\n                = this.frontAlterationAccidental.alter + 1;\n        } else {\n            this.frontAlterationTransposeInterval = new interval.Interval('A1');\n            this.frontAlterationAccidental = new pitch.Accidental(1);\n        }\n\n        this._tempRoot = this.frontAlterationTransposeInterval.transposePitch(\n            this._tempRoot\n        );\n\n        return;\n    }\n\n    _parseRNAloneAmidstAug6(workingFigure, useScale) {\n        let romanNumeralAlone = '';\n        const _romanNumeralAloneRegex = new RegExp(\n            '(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2}|N)'\n        );\n        const _augmentedSixthRegex = new RegExp('(It|Ger|Fr|Sw)');\n        const rm = _romanNumeralAloneRegex.exec(workingFigure);\n        const a6match = _augmentedSixthRegex.exec(workingFigure);\n        if (rm === null && a6match === null) {\n            throw new Music21Exception(\n                `No roman numeral found in ${workingFigure}`\n            );\n        }\n        if (a6match !== null) {\n            if (useScale.mode === 'major') {\n                useScale = new key.Key(useScale.tonic.name, 'minor');\n                this.impliedScale = useScale;\n                this.useImpliedScale = true;\n            }\n            romanNumeralAlone = a6match[1];\n            if (['It', 'Ger'].includes(romanNumeralAlone)) {\n                this.scaleDegree = 4;\n            } else {\n                this.scaleDegree = 2;\n            }\n            workingFigure = workingFigure.replace(_augmentedSixthRegex, '');\n            this.romanNumeralAlone = romanNumeralAlone;\n            if (romanNumeralAlone !== 'Fr') {\n                this.bracketedAlterations.push(['#', 1]);\n            }\n            if (romanNumeralAlone === 'Fr' || romanNumeralAlone === 'Sw') {\n                this.bracketedAlterations.push(['#', 3]);\n            }\n        } else {\n            romanNumeralAlone = rm[1];\n            this.scaleDegree = common.fromRoman(romanNumeralAlone);\n            workingFigure = workingFigure.replace(_romanNumeralAloneRegex, '');\n            this.romanNumeralAlone = romanNumeralAlone;\n        }\n        return [workingFigure, useScale];\n    }\n\n    /**\n     * get romanNumeral - return either romanNumeralAlone (II) or with frontAlterationAccidental (#II)\n     *\n     * @return {string}  new romanNumeral;\n     */\n\n    get romanNumeral() {\n        if (this.frontAlterationAccidental === undefined) {\n            return this.romanNumeralAlone;\n        } else {\n            return (\n                this.frontAlterationAccidental.modifier + this.romanNumeralAlone\n            );\n        }\n    }\n\n    get scale() {\n        if (this._scale !== undefined) {\n            return this._scale;\n        } else {\n            this._scale = this.key.getScale();\n            return this._scale;\n        }\n    }\n    get key() {\n        return this._scale;\n    }\n    set key(keyOrScale) {\n        if (typeof keyOrScale === 'string') {\n            this._scale = new key.Key(keyOrScale);\n        } else if (typeof keyOrScale === 'undefined') {\n            this._scale = new key.Key('C');\n        } else {\n            this._scale = keyOrScale;\n        }\n        if (keyOrScale === undefined) {\n            this.useImpliedScale = true;\n            this.impliedScale = new scale.MajorScale('C');\n        } else {\n            this.useImpliedScale = false;\n            this.impliedScale = false;\n        }\n        if (this._parsingComplete) {\n            this._updatePitches();\n        }\n    }\n\n    get figure() {\n        return this._figure;\n    }\n    set figure(newFigure) {\n        this._figure = newFigure;\n        if (this._parsingComplete) {\n            this._parseFigure();\n            this._updatePitches();\n        }\n    }\n\n    get figureAndKey() {\n        let tonicName = this.key.tonic.name;\n        let mode = '';\n        if (this.key.mode !== undefined) {\n            mode = ' ' + this.key.mode;\n        }\n\n        if (mode === ' minor') {\n            tonicName = tonicName.toLowerCase();\n        } else if (mode === ' major') {\n            tonicName = tonicName.toUpperCase();\n        }\n        return this.figure + ' in ' + tonicName + mode;\n    }\n\n    get degreeName() {\n        if (this.scaleDegree < 7) {\n            return [\n                undefined,\n                'Tonic',\n                'Supertonic',\n                'Mediant',\n                'Subdominant',\n                'Dominant',\n                'Submediant',\n            ][this.scaleDegree];\n        } else {\n            const tonicPitch = this.key.tonic;\n            let diffRootToTonic = (tonicPitch.ps - this.root().ps) % 12;\n            if (diffRootToTonic < 0) {\n                diffRootToTonic += 12;\n            }\n            if (diffRootToTonic === 1) {\n                return 'Leading-tone';\n            } else {\n                return 'Subtonic';\n            }\n        }\n    }\n\n    /**\n     * Update the .pitches array.  Called at instantiation, but not automatically afterwards.\n     *\n     * @memberof music21.roman.RomanNumeral\n     */\n    _updatePitches() {\n        let useScale;\n        if (this.secondaryRomanNumeralKey !== undefined) {\n            useScale = this.secondaryRomanNumeralKey;\n        } else if (!this.useImpliedScale) {\n            useScale = this.key;\n        } else {\n            useScale = this.impliedScale;\n        }\n\n        this.scaleCardinality = 7; // simple speedup;\n        const bassScaleDegree = this.bassScaleDegreeFromNotation(\n            this.figuresNotationObj\n        );\n        const bassPitch = useScale.pitchFromDegree(\n            bassScaleDegree,\n            'ascending'\n        );\n        const pitches = [bassPitch];\n        let lastPitch = bassPitch;\n        const numberNotes = this.figuresNotationObj.numbers.length;\n\n        for (let j = 0; j < numberNotes; j++) {\n            const i = numberNotes - j - 1;\n            const thisScaleDegree\n                = bassScaleDegree + this.figuresNotationObj.numbers[i] - 1;\n            const newPitch = useScale.pitchFromDegree(\n                thisScaleDegree,\n                'ascending'\n            );\n            const pitchName = this.figuresNotationObj.modifiers[\n                i\n            ].modifyPitchName(newPitch.name);\n            const newNewPitch = new pitch.Pitch(pitchName);\n            newNewPitch.octave = newPitch.octave;\n            if (newNewPitch.ps < lastPitch.ps) {\n                newNewPitch.octave += 1;\n            }\n            pitches.push(newNewPitch);\n            lastPitch = newNewPitch;\n        }\n        if (this.frontAlterationTransposeInterval !== undefined) {\n            const newPitches = [];\n            for (const thisPitch of pitches) {\n                const newPitch = this.frontAlterationTransposeInterval.transposePitch(\n                    thisPitch\n                );\n                newPitches.push(newPitch);\n            }\n            this.pitches = newPitches;\n        } else {\n            this.pitches = pitches;\n        }\n\n        this._matchAccidentalsToQuality(this.impliedQuality);\n\n        this.scaleOffset = this.frontAlterationTransposeInterval;\n\n        if (this.omittedSteps.length) {\n            const omittedPitches = [];\n            for (const thisCS of this.omittedSteps) {\n                const p = this.getChordStep(thisCS);\n                if (p !== undefined) {\n                    omittedPitches.push(p.name);\n                }\n            }\n            const newPitches = [];\n            for (const thisPitch of pitches) {\n                if (!omittedPitches.includes(thisPitch.name)) {\n                    newPitches.push(thisPitch);\n                }\n            }\n            this.pitches = newPitches;\n            // do something...\n        }\n        this._correctBracketedPitches();\n    }\n\n    bassScaleDegreeFromNotation(notationObject) {\n        const c = new pitch.Pitch('C3');\n        const cDNN = c.diatonicNoteNum; // always 22\n        const pitches = [c];\n        for (const i of notationObject.numbers) {\n            const distanceToMove = i - 1;\n            const newDiatonicNumber = cDNN + distanceToMove;\n            const [newStep, newOctave] = interval.convertDiatonicNumberToStep(\n                newDiatonicNumber\n            );\n            const newPitch = new pitch.Pitch('C3');\n            newPitch.step = newStep;\n            newPitch.octave = newOctave;\n            pitches.push(newPitch);\n        }\n        const tempChord = new chord.Chord(pitches);\n        const rootDNN = tempChord.root().diatonicNoteNum;\n        const staffDistanceFromBassToRoot = rootDNN - cDNN;\n        let bassSD = common.posMod(\n            this.scaleDegree - staffDistanceFromBassToRoot,\n            7\n        );\n        if (bassSD === 0) {\n            bassSD = 7;\n        }\n        return bassSD;\n    }\n\n    _matchAccidentalsToQuality(impliedQuality) {\n        const correctSemitones = this._findSemitoneSizeForQuality(\n            impliedQuality\n        );\n        const chordStepsToExamine = [3, 5, 7];\n        for (let i = 0; i < chordStepsToExamine.length; i++) {\n            const thisChordStep = chordStepsToExamine[i];\n            const thisCorrect = correctSemitones[i];\n            const thisSemis = this.semitonesFromChordStep(thisChordStep);\n            if (thisCorrect === undefined) {\n                continue;\n            }\n            if (thisSemis === undefined) {\n                continue;\n            }\n            if (thisSemis === thisCorrect) {\n                continue;\n            }\n\n            let correctedSemis = thisCorrect - thisSemis;\n            if (correctedSemis >= 6) {\n                correctedSemis = -1 * (12 - correctedSemis);\n            } else if (correctedSemis <= -6) {\n                correctedSemis += 12;\n            }\n\n            const faultyPitch = this.getChordStep(thisChordStep);\n            // TODO: check for faultyPitch is undefined\n\n            if (faultyPitch.accidental === undefined) {\n                faultyPitch.accidental = new pitch.Accidental(correctedSemis);\n            } else {\n                const acc = faultyPitch.accidental;\n                correctedSemis += acc.alter;\n                if (correctedSemis >= 6) {\n                    correctedSemis = -1 * (12 - correctedSemis);\n                } else if (correctedSemis <= -6) {\n                    correctedSemis += 12;\n                }\n                acc.set(correctedSemis);\n            }\n        }\n    }\n\n    _correctForSecondaryRomanNumeral(useScale, figure) {\n        if (figure === undefined) {\n            figure = this._figure;\n        }\n        let workingFigure = figure;\n        const rx = new RegExp('(.*?)/([#a-np-zA-NP-Z].*)');\n        const match = rx.exec(figure);\n        if (match !== null) {\n            const primaryFigure = match[1];\n            const secondaryFigure = match[2];\n            const secondaryRomanNumeral = new RomanNumeral(\n                secondaryFigure,\n                useScale,\n                this.caseMatters\n            );\n            this.secondaryRomanNumeral = secondaryRomanNumeral;\n            let secondaryMode;\n            if (secondaryRomanNumeral.quality === 'minor') {\n                secondaryMode = 'minor';\n            } else if (secondaryRomanNumeral.quality === 'major') {\n                secondaryMode = 'minor';\n            } else if (secondaryRomanNumeral.semitonesFromChordStep(3) === 3) {\n                secondaryMode = 'minor';\n            } else {\n                secondaryMode = 'major';\n            }\n            this.secondaryRomanNumeralKey = new key.Key(\n                secondaryRomanNumeral.root().name,\n                secondaryMode\n            );\n            useScale = this.secondaryRomanNumeralKey;\n            workingFigure = primaryFigure;\n        }\n        return [workingFigure, useScale];\n    }\n\n    _parseOmittedSteps(workingFigure) {\n        const omittedSteps = [];\n        const rx = new RegExp(/\\[no(\\d+)\\]s*/);\n        let match = rx.exec(workingFigure);\n        while (match !== null) {\n            let thisStep = match[1];\n            thisStep = parseInt(thisStep);\n            thisStep = thisStep % 7 || 7;\n            omittedSteps.push(thisStep);\n            workingFigure = workingFigure.replace(rx, '');\n            match = rx.exec(workingFigure);\n        }\n        this.omittedSteps = omittedSteps;\n        return workingFigure;\n    }\n\n    _parseBracketedAlterations(workingFigure) {\n        const bracketedAlterations = this.bracketedAlterations;\n        const rx = new RegExp(/\\[(b+|-+|#+)(\\d+)\\]/);\n        let match = rx.exec(workingFigure);\n        while (match !== null) {\n            const matchAlteration = match[1];\n            const matchDegree = parseInt(match[2]);\n            bracketedAlterations.push([matchAlteration, matchDegree]);\n            workingFigure = workingFigure.replace(rx, '');\n            match = rx.exec(workingFigure);\n        }\n        return workingFigure;\n    }\n\n    _findSemitoneSizeForQuality(impliedQuality) {\n        let correctSemitones;\n        if (impliedQuality === 'major') {\n            correctSemitones = [4, 7];\n        } else if (impliedQuality === 'minor') {\n            correctSemitones = [3, 7];\n        } else if (impliedQuality === 'diminished') {\n            correctSemitones = [3, 6, 9];\n        } else if (impliedQuality === 'half-diminished') {\n            correctSemitones = [3, 6, 10];\n        } else if (impliedQuality === 'augmented') {\n            correctSemitones = [4, 8];\n        } else if (impliedQuality === 'dominant-seventh') {\n            correctSemitones = [4, 7, 10];\n        } else {\n            correctSemitones = [];\n        }\n\n        return correctSemitones;\n    }\n\n    /**\n     * Gives a string display.  Note that since inversion is not yet supported\n     * it needs to be given separately.\n     *\n     * Inverting 7th chords does not work.\n     *\n     * @memberof music21.roman.RomanNumeral\n     * @param {string} displayType - ['roman', 'bassName', 'nameOnly', other]\n     * @param {Int} [inversion=0]\n     * @returns {String}\n     */\n    asString(displayType, inversion) {\n        const keyObj = this.key;\n        const tonicName = keyObj.tonic.name;\n        const mode = keyObj.mode;\n\n        // specifying inversion is for backwards compatibility only.\n        if (inversion === undefined) {\n            inversion = 0;\n        }\n        let inversionName = '';\n        if (inversion === 1) {\n            if (displayType === 'roman') {\n                inversionName = '6';\n            } else {\n                inversionName = ' (first inversion)';\n            }\n        } else if (inversion === 2) {\n            if (displayType === 'roman') {\n                inversionName = '64';\n            } else {\n                inversionName = ' (second inversion)';\n            }\n        }\n        let fullChordName;\n        let connector = ' in ';\n        let suffix = '';\n        if (displayType === 'roman') {\n            fullChordName = this.figure;\n            fullChordName = fullChordName.replace('/o', 'ø');\n        } else if (displayType === 'nameOnly') {\n            // use only with only choice being tonicName\n            fullChordName = '';\n            connector = '';\n            suffix = ' triad';\n        } else if (displayType === 'bassName') {\n            fullChordName = this.bass().name.replace(/-/, 'b');\n        } else {\n            // \"default\" submediant, etc...\n            fullChordName = this.degreeName;\n            if (this.numbers !== undefined) {\n                fullChordName += ' ' + this.numbers.toString();\n            }\n        }\n        let tonicDisplay = tonicName.replace(/-/, 'b');\n        if (mode === 'minor') {\n            tonicDisplay = tonicDisplay.toLowerCase();\n        }\n        const chordStr\n            = fullChordName\n            + inversionName\n            + connector\n            + tonicDisplay\n            + ' '\n            + mode\n            + suffix;\n        return chordStr;\n    }\n}\nroman.RomanNumeral = RomanNumeral;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/tempo -- tempo and (not in music21p) metronome objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { prebase } from './prebase.js';\n\n/* a Music21Object in m21p; the overhead is too high here to follow ... */\n/**\n * tempo module, see {@link music21.tempo}\n *\n * @exports music21/tempo\n */\n/**\n * tempo namespace\n *\n * @namespace music21.tempo\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/base\n * @requires MIDI\n * @property {number} [baseTempo=60] - basic tempo\n */\nexport const tempo = {};\n\n/**\n * Object mapping names to tempo values\n *\n * @name music21.tempo.defaultTempoValues\n * @memberof music21.tempo\n * @example\n * music21.tempo.defaultTempoValues.grave\n * // 40\n */\ntempo.defaultTempoValues = {\n    larghissimo: 16,\n    largamente: 32,\n    grave: 40,\n    'molto adagio': 40,\n    largo: 46,\n    lento: 52,\n    adagio: 56,\n    slow: 56,\n    langsam: 56,\n    larghetto: 60,\n    adagietto: 66,\n    andante: 72,\n    andantino: 80,\n    'andante moderato': 83,\n    maestoso: 88,\n    moderato: 92,\n    moderate: 92,\n    allegretto: 108,\n    animato: 120,\n    'allegro moderato': 128,\n    allegro: 132,\n    fast: 132,\n    schnell: 132,\n    allegrissimo: 140,\n    'molto allegro': 144,\n    'très vite': 144,\n    vivace: 160,\n    vivacissimo: 168,\n    presto: 184,\n    prestissimo: 208,\n};\n\ntempo.baseTempo = 60;\n\n/* --------- metronome ---------- */\n/**\n *\n * @class Metronome\n * @memberof music21.tempo\n * @extends music21.prebase.ProtoM21Object\n * @param {number} [tempo=music21.tempo.baseTempo] - the tempo of the metronome to start\n * @property {number} tempo\n * @property {Int} [numBeatsPerMeasure=4]\n * @property {number} [minTempo=10]\n * @property {number} [maxTempo=600]\n * @property {bool} [flash=false] - flash the tempo\n * @property {bool} [silent=false] - play silently\n * @property {Int} beat - current beat number\n * @property {Int} chirpTimeout - an index of a timeout object for chirping\n */\nexport class Metronome extends prebase.ProtoM21Object {\n    constructor(tempoInt) {\n        super();\n        this._tempo = 60; // overridden by music21.tempo.baseTempo;\n        if (tempoInt === undefined) {\n            this.tempo = tempo.baseTempo;\n        } else {\n            this.tempo = tempoInt;\n        }\n        this.numBeatsPerMeasure = 4;\n        this.minTempo = 10;\n        this.maxTempo = 600;\n        this.beat = this.numBeatsPerMeasure;\n        this.chirpTimeout = undefined;\n        this.silent = false;\n        this.flash = false;\n        this.tempoRanges = [0, 40, 60, 72, 120, 144, 240, 999];\n        this.tempoIncreases = [0, 1, 2, 3, 4, 6, 8, 15, 100];\n    }\n    get tempo() {\n        return this._tempo;\n    }\n    set tempo(t) {\n        this._tempo = t;\n        if (this._tempo > this.maxTempo) {\n            this._tempo = this.maxTempo;\n        } else if (this._tempo < this.minTempo) {\n            this._tempo = this.minTempo;\n        }\n    }\n    get beatLength() {\n        return 60.0 / this.tempo;\n    }\n    _silentFlash(flashColor) {\n        this.$metronomeDiv\n            .find('.metroFlash')\n            .css('background-color', flashColor)\n            .fadeOut(this.beatLength * 1000 * 1 / 4, function silentFadeOut() {\n                $(this)\n                    .css('background-color', '#ffffff')\n                    .fadeIn(1);\n            });\n    }\n\n    /**\n     * Play a note (a higher one on the downbeat) and start the metronome chirping.\n     *\n     * @memberof music21.tempo.Metronome\n     */\n    chirp() {\n        this.beat += 1;\n        if (this.beat > this.numBeatsPerMeasure) {\n            this.beat = 1;\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 96, 100, 0);\n                MIDI.noteOff(0, 96, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#0000f0');\n            }\n        } else {\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 84, 70, 0);\n                MIDI.noteOff(0, 84, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#ff0000');\n            }\n        }\n        const that = this;\n        this.chirpTimeout = setTimeout(() => {\n            that.chirp();\n        }, 1000 * 60 / this.tempo);\n    }\n\n    /**\n     * Stop the metronome from chirping.\n     *\n     * @memberof music21.tempo.Metronome\n     */\n    stopChirp() {\n        if (this.chirpTimeout !== undefined) {\n            clearTimeout(this.chirpTimeout);\n            this.chirpTimeout = undefined;\n        }\n    }\n\n    /**\n     * Increase the metronome tempo one \"click\".\n     *\n     * Value changes depending on the current tempo.  Uses standard metronome guidelines.\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {Int} n - number of clicks to the right\n     * @returns {number} new tempo\n     */\n    increaseSpeed(n) {\n        // increase by one metronome 'click' for every n\n        if (n === undefined) {\n            n = 1;\n        }\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            for (let tr = 0; tr < this.tempoRanges.length; tr++) {\n                const tempoExtreme = this.tempoRanges[tr];\n                const tempoIncrease = this.tempoIncreases[tr];\n                if (t < tempoExtreme) {\n                    t += tempoIncrease;\n                    t = tempoIncrease * Math.round(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n        return this.tempo;\n    }\n\n    /**\n     * Decrease the metronome tempo one \"click\"\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {Int} n - number of clicks to the left\n     * @returns {number} new tempo\n     */\n    decreaseSpeed(n) {\n        if (n === undefined) {\n            n = 1;\n        }\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            const trL = this.tempoRanges.length;\n            for (let tr = 1; tr <= trL; tr++) {\n                const tempoExtreme = this.tempoRanges[trL - tr];\n                const tempoIncrease = this.tempoIncreases[trL - tr + 1];\n                if (t > tempoExtreme) {\n                    t -= tempoIncrease;\n                    t = tempoIncrease * Math.floor(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n    }\n\n    /**\n     * add a Metronome interface onto the DOM at where\n     *\n     * @memberof music21.tempo.Metronome\n     * @param {JQueryDOMObject|DOMObject} [where='body']\n     * @returns {JQueryDOMObject} - a div holding the metronome.\n     */\n    addDiv(where) {\n        let jWhere;\n        if (where !== undefined && where.jquery !== undefined) {\n            jWhere = where;\n        } else if (where !== undefined) {\n            jWhere = $(where);\n        } else {\n            jWhere = $('body');\n        }\n        const metroThis = this;\n        const tempoHolder = $(\n            '<span class=\"tempoHolder\">' + this.tempo.toString() + '</span>'\n        );\n        tempoHolder.css({\n            'font-size': '24px',\n            'padding-left': '10px',\n            'padding-right': '10px',\n        });\n        const newDiv = $('<div class=\"metronomeRendered\"></div>');\n        newDiv.append(tempoHolder);\n\n        const b1 = $('<button>start</button>');\n        b1.on('click', () => {\n            metroThis.chirp();\n        });\n        const b2 = $('<button>stop</button>');\n        b2.on('click', () => {\n            metroThis.stopChirp();\n        });\n        newDiv.prepend(b2);\n        newDiv.prepend(b1);\n        const b3 = $('<button>up</button>');\n        b3.on('click', function increaseSpeedButton() {\n            metroThis.increaseSpeed();\n            $(this)\n                .prevAll('.tempoHolder')\n                .html(metroThis.tempo.toString());\n        });\n        const b4 = $('<button>down</button>');\n        b4.on('click', function decreaseSpeedButton() {\n            metroThis.decreaseSpeed();\n            $(this)\n                .prevAll('.tempoHolder')\n                .html(metroThis.tempo.toString());\n        });\n        newDiv.append(b3);\n        newDiv.append(b4);\n        const $flash = $(\n            '<span class=\"metroFlash\">'\n                + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>'\n        );\n        $flash.css('margin-left', '40px');\n        $flash.css('height', '40px');\n\n        newDiv.append($flash);\n\n        jWhere.append(newDiv);\n\n        this.$metronomeDiv = newDiv;\n        return newDiv;\n    }\n}\ntempo.Metronome = Metronome;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tinyNotation -- TinyNotation implementation\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\n\nimport { clef } from './clef.js';\nimport { duration } from './duration.js';\nimport { pitch } from './pitch.js';\nimport { note } from './note.js';\nimport { meter } from './meter.js';\nimport { stream } from './stream.js';\nimport { tie } from './tie.js';\n\n/**\n * TinyNotation module, see {@link music21.tinyNotation} namespace\n *\n * @exports music21/tinyNotation\n */\n/**\n * @namespace music21.tinyNotation\n * @memberof music21\n * @requires music21/base\n * @requires music21/clef\n * @requires music21/duration\n * @requires music21/pitch\n * @requires music21/note\n * @requires music21/meter\n * @requires music21/stream\n * @requires music21/tie\n */\nexport const tinyNotation = {};\n\n/**\n * Regular expressions object\n *\n * @memberof music21.tinyNotation\n */\ntinyNotation.regularExpressions = {\n    REST: /r/,\n    OCTAVE2: /([A-G])[A-G]+/,\n    OCTAVE3: /([A-G])/,\n    OCTAVE5: /([a-g])('+)/,\n    OCTAVE4: /([a-g])/,\n    EDSHARP: /\\((#+)\\)/,\n    EDFLAT: /\\((-+)\\)/,\n    EDNAT: /\\(n\\)/,\n    SHARP: /^[A-Ga-g]+'*(#+)/, // simple notation finds\n    FLAT: /^[A-Ga-g]+'*(-+)/, // double sharps too\n    NAT: /^[A-Ga-g]+'*n/, // explicit naturals\n    TYPE: /(\\d+)/,\n    TIE: /.~/, // not preceding ties\n    PRECTIE: /~/, // front ties\n    ID_EL: /=([A-Za-z0-9]*)/,\n    LYRIC: /_(.*)/,\n    DOT: /\\.+/,\n    TIMESIG: /(\\d+)\\/(\\d+)/,\n\n    PARTBREAK: /partBreak/, // nonstandard...fix later...\n\n    TRIP: /trip\\{/,\n    QUAD: /quad\\{/,\n    ENDBRAC: /\\}$/,\n};\n/**\n * Function, not class.\n *\n * Converts a TinyNotation String into a music21 Stream\n *\n * See music21p for examples of what can go into tinynotation. It's an\n * adaptation of Lilypond format, by design Extremely simple!\n *\n * @memberof music21.tinyNotation\n * @param {string} textIn - a valid tinyNotation string\n * @returns {music21.stream.Part|music21.stream.Measure} - a Stream or Part object (if multiple measures)\n * @example\n * var t = \"3/4 c4 B8 c d4 e2.\";\n * var p = music21.tinyNotation.TinyNotation(t);\n * p.duration.quarterLength;\n * // 6.0\n */\ntinyNotation.TinyNotation = function TinyNotation(textIn) {\n    textIn = textIn.trim();\n    const tokens = textIn.split(' ');\n\n    let optionalScore;\n\n    let p = new stream.Part();\n    let m = new stream.Measure();\n    let currentTSBarDuration = 4.0;\n    let lastDurationQL = 1.0;\n    const storedDict = {\n        lastNoteTied: false,\n        inTrip: false,\n        inQuad: false,\n        endTupletAfterNote: false,\n    };\n    const tnre = tinyNotation.regularExpressions; // faster typing\n    for (let i = 0; i < tokens.length; i++) {\n        // check at first so that a full measure but not over full\n        // gets returned as a stream.Measure object.\n        if ((m.duration.quarterLength >= currentTSBarDuration)\n            || (Math.abs(m.duration.quarterLength - currentTSBarDuration) < 0.0001)) {\n            p.append(m);\n            m = new stream.Measure();\n        }\n\n        let token = tokens[i];\n        let noteObj;\n        let lyric;\n        if (tnre.PARTBREAK.exec(token)) {\n            if (m.length > 0) {\n                p.append(m);\n                m = new stream.Measure();\n            }\n            if (optionalScore === undefined) {\n                optionalScore = new stream.Score();\n            }\n            optionalScore.insert(0, p);\n            p = new stream.Part();\n\n            storedDict.lastNoteTied = false;\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n\n            continue;\n        }\n\n        if (tnre.TRIP.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inTrip = true;\n        }\n        if (tnre.QUAD.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inQuad = true;\n        }\n        if (tnre.ENDBRAC.exec(token)) {\n            token = token.slice(0, -1); // cut...\n            storedDict.endTupletAfterNote = true;\n        }\n\n        // Modifiers\n        if (tnre.LYRIC.exec(token)) {\n            [token, lyric] = token.split('_');\n        }\n\n        if (tnre.TIMESIG.exec(token)) {\n            const MATCH = tnre.TIMESIG.exec(token);\n            const ts = new meter.TimeSignature();\n            ts.numerator = parseInt(MATCH[1]);\n            ts.denominator = parseInt(MATCH[2]);\n            m.timeSignature = ts;\n            currentTSBarDuration = ts.barDuration.quarterLength;\n            // console.log(currentTSBarDuration);\n            continue;\n        } else if (tnre.REST.exec(token)) {\n            noteObj = new note.Rest(lastDurationQL);\n        } else if (tnre.OCTAVE2.exec(token)) {\n            const MATCH = tnre.OCTAVE2.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 4 - MATCH[0].length;\n        } else if (tnre.OCTAVE3.exec(token)) {\n            const MATCH = tnre.OCTAVE3.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 3;\n        } else if (tnre.OCTAVE5.exec(token)) {\n            // must match octave 5 before 4\n            const MATCH = tnre.OCTAVE5.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 3 + MATCH[0].length;\n        } else if (tnre.OCTAVE4.exec(token)) {\n            const MATCH = tnre.OCTAVE4.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 4;\n        }\n\n        if (noteObj === undefined) {\n            continue;\n        }\n\n        if (lyric !== undefined) {\n            noteObj.lyric = lyric;\n        }\n\n        if (tnre.TIE.exec(token)) {\n            noteObj.tie = new tie.Tie('start');\n            if (storedDict.lastNoteTied) {\n                noteObj.tie.type = 'continue';\n            }\n            storedDict.lastNoteTied = true;\n        } else if (storedDict.lastNoteTied) {\n            noteObj.tie = new tie.Tie('stop');\n            storedDict.lastNoteTied = false;\n        }\n        if (tnre.SHARP.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('sharp');\n        } else if (tnre.FLAT.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('flat');\n        } else if (tnre.NAT.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('natural');\n            noteObj.pitch.accidental.displayType = 'always';\n        }\n        let MATCH = tnre.TYPE.exec(token);\n        if (MATCH) {\n            const durationType = parseInt(MATCH[0]);\n            noteObj.duration.quarterLength = 4.0 / durationType;\n        }\n        MATCH = tnre.DOT.exec(token);\n        if (MATCH) {\n            const numDots = MATCH[0].length;\n            const multiplier = 1 + (1 - Math.pow(0.5, numDots));\n            noteObj.duration.quarterLength *= multiplier;\n        }\n        lastDurationQL = noteObj.duration.quarterLength;\n        // do before appending tuplets\n\n        if (storedDict.inTrip) {\n            // console.log(noteObj.duration.quarterLength);\n            noteObj.duration.appendTuplet(\n                new duration.Tuplet(3, 2, noteObj.duration.quarterLength)\n            );\n        }\n        if (storedDict.inQuad) {\n            noteObj.duration.appendTuplet(\n                new duration.Tuplet(4, 3, noteObj.duration.quarterLength)\n            );\n        }\n        if (storedDict.endTupletAfterNote) {\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n        }\n        m.append(noteObj);\n    }\n\n    if (m.length > 0) {\n        p.append(m);\n    }\n\n    let returnObject;\n\n    if (optionalScore !== undefined) {\n        if (p.length > 0) {\n            optionalScore.append(p);\n        }\n        for (let i = 0; i < optionalScore.length; i++) {\n            const innerPart = optionalScore.get(i);\n            innerPart.clef = clef.bestClef(innerPart);\n        }\n        returnObject = optionalScore;\n    } else {\n        p.clef = clef.bestClef(p);\n        returnObject = p;\n    }\n    return returnObject;\n};\n\n// render notation divs in HTML\n/**\n * Render all the TinyNotation classes in the DOM as notation\n *\n * Called automatically when music21 is loaded.\n *\n * @memberof music21.tinyNotation\n * @param {string} classTypes - a JQuery selector to find elements to replace.\n */\ntinyNotation.renderNotationDivs = function renderNotationDivs(\n    classTypes,\n    selector\n) {\n    if (classTypes === undefined) {\n        classTypes = '.music21.tinyNotation';\n    }\n    let allRender = [];\n    if (selector === undefined) {\n        allRender = $(classTypes);\n    } else {\n        if (selector.jquery === undefined) {\n            selector = $(selector);\n        }\n        allRender = selector.find(classTypes);\n    }\n    for (let i = 0; i < allRender.length; i++) {\n        const thisTN = allRender[i];\n        const $thisTN = $(thisTN);\n        let thisTNContents;\n        if ($thisTN.attr('tinynotationcontents') !== undefined) {\n            thisTNContents = $thisTN.attr('tinynotationcontents');\n        } else if (thisTN.textContent !== undefined) {\n            thisTNContents = thisTN.textContent;\n            thisTNContents = thisTNContents.replace(/s+/g, ' '); // no line-breaks, etc.\n        }\n\n        if (\n            String.prototype.trim !== undefined\n            && thisTNContents !== undefined\n        ) {\n            thisTNContents = thisTNContents.trim(); // remove leading, trailing whitespace\n        }\n        if (thisTNContents) {\n            const st = tinyNotation.TinyNotation(thisTNContents);\n            if ($thisTN.hasClass('noPlayback')) {\n                st.renderOptions.events.click = undefined;\n            }\n            const newSVG = st.createDOM();\n\n            $thisTN.attr('tinynotationcontents', thisTNContents);\n            $thisTN.empty();\n            $thisTN.data('stream', st);\n            $thisTN.append(newSVG);\n            // console.log(thisTNContents);\n        }\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/voiceLeading -- voiceLeading objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport { interval } from './interval.js';\nimport { key } from './key.js';\nimport { note } from './note.js';\n\nimport { Music21Object } from './base.js';\n\nconst intervalCache = [];\n\nconst MotionType = {\n    antiParallel: 'Anti-Parallel',\n    contrary: 'Contrary',\n    noMotion: 'No Motion',\n    oblique: 'Oblique',\n    parallel: 'Parallel',\n    similar: 'Similar',\n};\n\nclass VoiceLeadingQuartet extends Music21Object {\n    constructor(v1n1, v1n2, v2n1, v2n2, analyticKey) {\n        super();\n        if (!intervalCache.length) {\n            intervalCache.push(new interval.Interval('P1'));\n            intervalCache.push(new interval.Interval('P5'));\n            intervalCache.push(new interval.Interval('P8'));\n        }\n        this.unison = intervalCache[0];\n        this.fifth = intervalCache[1];\n        this.octave = intervalCache[2];\n\n        this._v1n1 = undefined;\n        this._v1n2 = undefined;\n        this._v2n1 = undefined;\n        this._v2n2 = undefined;\n\n        this.v1n1 = v1n1;\n        this.v1n2 = v1n2;\n        this.v2n1 = v2n1;\n        this.v2n2 = v2n2;\n\n        this.vIntervals = [];\n        this.hIntervals = [];\n\n        this._key = undefined;\n        if (analyticKey !== undefined) {\n            this.key = analyticKey;\n        }\n        if (\n            v1n1 !== undefined\n            && v1n2 !== undefined\n            && v2n1 !== undefined\n            && v2n2 !== undefined\n        ) {\n            this._findIntervals();\n        }\n    }\n\n    _setVoiceNote(value, which) {\n        if (value === undefined) {\n            this[which] = value;\n        } else if (typeof value === 'string') {\n            this[which] = new note.Note(value);\n        } else if (value.classes.includes('Note')) {\n            this[which] = value;\n        } else {\n            const n = new note.Note(value.nameWithOctave);\n            n.duration.quarterLength = 0.0;\n            this[which] = n;\n        }\n    }\n\n    get v1n1() {\n        return this._v1n1;\n    }\n    set v1n1(value) {\n        this._setVoiceNote(value, '_v1n1');\n    }\n    get v1n2() {\n        return this._v1n2;\n    }\n    set v1n2(value) {\n        this._setVoiceNote(value, '_v1n2');\n    }\n    get v2n1() {\n        return this._v2n1;\n    }\n    set v2n1(value) {\n        this._setVoiceNote(value, '_v2n1');\n    }\n    get v2n2() {\n        return this._v2n2;\n    }\n    set v2n2(value) {\n        this._setVoiceNote(value, '_v2n2');\n    }\n\n    get key() {\n        return this._key;\n    }\n    set key(keyValue) {\n        if (typeof keyValue === 'string') {\n            keyValue = new key.Key(\n                key.convertKeyStringToMusic21KeyString(keyValue)\n            );\n        }\n        this._key = keyValue;\n    }\n\n    _findIntervals() {\n        this.vIntervals.push(new interval.Interval(this.v1n1, this.v2n1));\n        this.vIntervals.push(new interval.Interval(this.v1n2, this.v2n2));\n        this.hIntervals.push(new interval.Interval(this.v1n1, this.v1n2));\n        this.hIntervals.push(new interval.Interval(this.v2n1, this.v2n2));\n    }\n\n    motionType() {\n        if (this.obliqueMotion()) {\n            return MotionType.oblique;\n        } else if (this.parallelMotion()) {\n            return MotionType.parallel;\n        } else if (this.similarMotion()) {\n            return MotionType.similar;\n        } else if (this.contraryMotion()) {\n            return MotionType.contrary;\n        } else if (this.antiParallelMotion()) {\n            return MotionType.antiParallel;\n        } else if (this.noMotion()) {\n            return MotionType.noMotion;\n        }\n        return undefined;\n    }\n\n    noMotion() {\n        for (const iV of this.hIntervals) {\n            if (iV.name !== 'P1') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    obliqueMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n\n        for (const iH of this.hIntervals) {\n            if (iH.name === 'P1') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    similarMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n\n        if (this.hIntervals[0].direction === this.hIntervals[1].direction) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelMotion(requiredInterval) {\n        if (!this.similarMotion()) {\n            return false;\n        }\n        if (\n            this.vIntervals[0].directedSimpleName\n            !== this.vIntervals[1].directedSimpleName\n        ) {\n            return false;\n        }\n        if (requiredInterval === undefined) {\n            return true;\n        }\n        if (typeof requiredInterval === 'string') {\n            requiredInterval = new interval.Interval(requiredInterval);\n        }\n        if (this.vIntervals[0].simpleName === requiredInterval.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    contraryMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n        if (this.obliqueMotion()) {\n            return false;\n        }\n        if (this.hIntervals[0].direction === this.hIntervals[1].direction) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    outwardContraryMotion() {\n        return (\n            this.contraryMotion()\n            && this.hIntervals[0].direction === interval.Direction.ASCENDING\n        );\n    }\n\n    inwardContraryMotion() {\n        return (\n            this.contraryMotion()\n            && this.hIntervals[0].direction === interval.Direction.DESCENDING\n        );\n    }\n\n    antiParallelMotion(simpleName) {\n        if (!this.contraryMotion()) {\n            return false;\n        }\n        if (this.vIntervals[0].simpleName !== this.vIntervals[1].simpleName) {\n            return false;\n        }\n        if (simpleName === undefined) {\n            return true;\n        }\n        if (typeof simpleName === 'string') {\n            if (this.vIntervals[0].simpleName === simpleName) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (this.vIntervals[0].simpleName === simpleName.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelInterval(thisInterval) {\n        if (!(this.parallelMotion() || this.antiParallelMotion())) {\n            return false;\n        }\n        if (typeof thisInterval === 'string') {\n            thisInterval = new interval.Interval(thisInterval);\n        }\n\n        if (this.vIntervals[0].semiSimpleName === thisInterval.semiSimpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelFifth() {\n        return this.parallelInterval(this.fifth);\n    }\n\n    parallelOctave() {\n        return this.parallelInterval(this.octave);\n    }\n\n    parallelUnison() {\n        return this.parallelInterval(this.unison);\n    }\n\n    parallelUnisonOrOctave() {\n        return this.parallelUnison() || this.parallelOctave();\n    }\n\n    hiddenInterval(thisInterval) {\n        if (this.parallelMotion()) {\n            return false;\n        }\n        if (!this.similarMotion()) {\n            return false;\n        }\n\n        if (typeof thisInterval === 'string') {\n            thisInterval = new interval.Interval(thisInterval);\n        }\n        if (this.vIntervals[1].simpleName === thisInterval.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    hiddenFifth() {\n        return this.hiddenInterval(this.fifth);\n    }\n\n    hiddenOctave() {\n        return this.hiddenInterval(this.octave);\n    }\n\n    // True if either note in voice 1 is lower than the corresponding voice 2 note\n    voiceCrossing() {\n        return (\n            this.v1n1.pitch.ps < this.v2n1.pitch.ps\n            || this.v1n2.pitch.ps < this.v2n2.pitch.ps\n        );\n    }\n\n    voiceOverlap() {\n        return (\n            this.v1n2.pitch.ps <= this.v2n1.pitch.ps\n            || this.v2n2.pitch.ps >= this.v1n1.pitch.ps\n        );\n    }\n\n    /**\n     * isProperResolution - Checks whether the voice-leading quartet resolves correctly according to standard\n     *         counterpoint rules. If the first harmony is dissonant (d5, A4, or m7) it checks\n     *         that these are correctly resolved. If the first harmony is consonant, True is returned.\n     *\n     *         The key parameter should be specified to check for motion in the bass from specific\n     *         note degrees. If it is not set, then no checking for scale degrees takes place.\n     *\n     *         Diminished Fifth: in by contrary motion to a third, with 7 resolving up to 1 in the bass\n     *         Augmented Fourth: out by contrary motion to a sixth, with chordal seventh resolving\n     *         down to a third in the bass.\n     *         Minor Seventh: Resolves to a third with a leap form 5 to 1 in the bass\n     *\n     * @return {boolean}  true if proper or rules do not apply; false if improper\n     */\n\n    isProperResolution() {\n        if (this.noMotion()) {\n            return true;\n        }\n        let scale;\n        let n1degree;\n        let n2degree;\n        if (this.key !== undefined) {\n            scale = this.key.getScale();\n            n1degree = scale.getScaleDegreeFromPitch(this.v2n1);\n            n2degree = scale.getScaleDegreeFromPitch(this.v2n2);\n        }\n\n        // catches case of #7 in minor\n        if (\n            this.key !== undefined\n            && this.key.mode === 'minor'\n            && (n1degree === undefined || n2degree === undefined)\n        ) {\n            const scale2 = this.key.getScale('melodic-minor'); // gets ascending form\n            if (n1degree === undefined) {\n                n1degree = scale2.getScaleDegreeFromPitch(this.v2n1);\n            }\n            if (n2degree === undefined) {\n                n2degree = scale2.getScaleDegreeFromPitch(this.v2n2);\n            }\n        }\n\n        const firstHarmony = this.vIntervals[0].simpleName;\n        const secondHarmony = this.vIntervals[1].generic.simpleUndirected;\n\n        if (firstHarmony === 'P4') {\n            if (this.v1n1.pitch.ps >= this.v1n2.pitch.ps) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (firstHarmony === 'd5') {\n            if (scale !== undefined && n1degree !== 7) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 1) {\n                return false;\n            }\n            return this.inwardContraryMotion() && secondHarmony === 3;\n        } else if (firstHarmony === 'A4') {\n            if (scale !== undefined && n1degree !== 4) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 3) {\n                return false;\n            }\n            return this.outwardContraryMotion() && secondHarmony === 6;\n        } else if (firstHarmony === 'm7') {\n            if (scale !== undefined && n1degree !== 5) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 1) {\n                return false;\n            }\n            return secondHarmony === 3;\n        } else {\n            return true;\n        }\n    }\n}\n\nexport const voiceLeading = {\n    VoiceLeadingQuartet,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/webmidi -- webmidi or wrapper around the Jazz Plugin\n *\n * For non webmidi --  Uses the cross-platform, cross-browser plugin from\n * http://jazz-soft.net/doc/Jazz-Plugin/Plugin.html\n * P.S. by the standards of divinity of most major religions, Sema Kachalo is a god.\n *\n * Copyright (c) 2014-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport { debug } from './debug.js';\nimport { common } from './common.js';\nimport { miditools } from './miditools.js';\n\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * See {@link music21.webmidi}\n *\n * @exports music21/webmidi\n */\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * @namespace music21.webmidi\n * @memberof music21\n * @requires music21/miditools\n * @requires jquery\n * @property {JazzObject|undefined} storedPlugin - reference to the Jazz object from the plugin; cached from `createPlugin`.\n * @property {string} selectedJazzInterface - the currently connected interface (note that we can only use one right now)\n */\nexport const webmidi = {};\n\nwebmidi.selectedOutputPort = undefined;\nwebmidi.selectedInputPort = undefined;\n\nwebmidi.access = undefined;\nwebmidi.$selectDiv = undefined;\n\nwebmidi.jazzDownloadUrl = 'http://jazz-soft.net/download/Jazz-Plugin/';\nwebmidi.storedPlugin = undefined;\nwebmidi.selectedJazzInterface = undefined; // not the same as \"\" etc. uses last selected interface by default.\n\n/**\n * Called by Jazz MIDI plugin when an event arrives.\n *\n * Shim to convert the data into WebMIDI API format and then call the WebMIDI API midiInArrived\n *\n * See the MIDI spec for information on parameters\n *\n * @memberof music21.webmidi\n * @param {byte} t - timing information\n * @param {byte} a - data 1\n * @param {byte} b - data 2\n * @param {byte} c - data 3\n */\nwebmidi.jazzMidiInArrived = function jazzMidiInArrived(t, a, b, c) {\n    const webmidiEvent = {\n        timestamp: t,\n        data: [a, b, c],\n    };\n    return webmidi.midiInArrived(webmidiEvent);\n};\n\n/**\n * Called directly when a MIDI event arrives from the WebMIDI API, or via a Shim (jazzMidiInArrived)\n * when MIDI information comes from JazzMIDI\n *\n * Calls the 'raw' and 'general callbacks when a raw midi event (four bytes)\n * arrives.\n *\n * See the MIDI spec for information on the contents of the three parameters.\n *\n * midiMessageEvent should be an object with two keys: timeStamp (int) and data (array of three int values)\n *\n * @memberof music21.webmidi\n * @param {MidiMessageEvent} midiMessageEvent - midi Information\n */\nwebmidi.midiInArrived = function midiInArrived(midiMessageEvent) {\n    const t = midiMessageEvent.timeStamp;\n    const a = midiMessageEvent.data[0];\n    const b = midiMessageEvent.data[1];\n    const c = midiMessageEvent.data[2];\n    const eventObject = miditools.callBacks.raw(t, a, b, c);\n    if (miditools.callBacks.general instanceof Array) {\n        return miditools.callBacks.general.forEach((el, index, array) => {\n            el(eventObject);\n        });\n    } else if (miditools.callBacks.general !== undefined) {\n        return miditools.callBacks.general(eventObject);\n    } else {\n        return undefined;\n    }\n};\n\n/**\n * Create a hidden tiny, &lt;object&gt; tag in the DOM with the\n * proper classid (`CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90`) to\n * load the Jazz plugin.\n *\n * It will return the plugin if it can or undefined if it cannot. Caches it in webmidi.storedPlugin.\n *\n * @function music21.webmidi.createPlugin\n * @param {DOMObject} [appendElement=document.body] - where to place this hidden object (does not really matter)\n * @param {Boolean} [override=false] - if this method has been called successfully before return the storedPlugin unless override is true.\n * @returns {Jazz|undefined} Jazz MIDI plugin object\n */\nwebmidi.createPlugin = function createPlugin(appendElement, override) {\n    if (webmidi.storedPlugin && override !== true) {\n        return webmidi.storedPlugin;\n    }\n    if (typeof appendElement === 'undefined') {\n        appendElement = $('body')[0];\n    }\n    const obj = document.createElement('object');\n    obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\n    if (!obj.isJazz) {\n        obj.type = 'audio/x-jazz';\n    }\n    obj.style.visibility = 'hidden';\n    obj.style.width = '0px';\n    obj.style.height = '0px';\n    appendElement.appendChild(obj);\n\n    if (obj.isJazz) {\n        webmidi.storedPlugin = obj;\n        return obj;\n    } else {\n        appendElement.removeChild(obj);\n        console.error(\n            'Cannot use jazz plugin; install at ' + webmidi.jazzDownloadUrl\n        );\n        return undefined;\n    }\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * @function music21.webmidi.createJazzSelector\n * @param {JQueryDOMObject|DOMObject} [midiSelectDiv=document.body] - object to append the select to\n * @param {object} [options] - see createSelector for details\n * @returns {DOMObject|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createJazzSelector = function createJazzSelector($newSelect, options) {\n    const params = {};\n    common.merge(params, options);\n\n    const Jazz = webmidi.createPlugin();\n    if (Jazz === undefined) {\n        return undefined;\n    }\n\n    $newSelect.change(() => {\n        const selectedInput = $('#midiInSelect option:selected').text();\n        if (selectedInput !== 'None selected') {\n            webmidi.selectedJazzInterface = Jazz.MidiInOpen(\n                selectedInput,\n                webmidi.jazzMidiInArrived\n            );\n        } else {\n            Jazz.MidiInClose();\n        }\n        if (debug) {\n            console.log(\n                'current input changed to: ' + webmidi.selectedInterface\n            );\n        }\n    });\n    const midiOptions = Jazz.MidiInList();\n    const noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    $newSelect.append(noneAppendOption);\n\n    let anySelected = false;\n    const allAppendOptions = [];\n    for (let i = 0; i < midiOptions.length; i++) {\n        const $appendOption = $(\n            \"<option value='\"\n                + midiOptions[i]\n                + \"'>\"\n                + midiOptions[i]\n                + '</option>'\n        );\n        if (midiOptions[i] === webmidi.selectedJazzInterface) {\n            $appendOption.attr('selected', true);\n            anySelected = true;\n        }\n        allAppendOptions.push($appendOption);\n        // console.log(appendOption);\n        $newSelect.append($appendOption);\n    }\n    if (anySelected === false && midiOptions.length > 0) {\n        $newSelect.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n        webmidi.selectedJazzInterface = Jazz.MidiInOpen(\n            midiOptions[0],\n            webmidi.jazzMidiInArrived\n        );\n        anySelected = true;\n    } else {\n        noneAppendOption.attr('selected', true);\n    }\n    if (params.onsuccess !== undefined) {\n        params.onsuccess();\n    }\n    if (anySelected === true && params.oninputsuccess !== undefined) {\n        params.oninputsuccess();\n    } else if (anySelected === false && params.oninputempty !== undefined) {\n        params.oninputempty();\n    }\n    return $newSelect;\n};\n\n/**\n * Function to be called if the webmidi-api selection changes. (not jazz)\n *\n */\nwebmidi.selectionChanged = function selectionChanged() {\n    const selectedInput = webmidi.$select.val();\n    if (selectedInput === webmidi.selectedInputPort) {\n        return false;\n    }\n    const storedStateChange = webmidi.access.onstatechange; // port.close() fires onstatechange, so turn off for a moment.\n    webmidi.access.onstatechange = () => {};\n    if (debug) {\n        console.log('current input changed to: ' + selectedInput);\n    }\n    webmidi.selectedInputPort = selectedInput;\n\n    webmidi.access.inputs.forEach(port => {\n        if (port.name === selectedInput) {\n            port.onmidimessage = webmidi.midiInArrived;\n        } else {\n            port.close();\n        }\n    });\n    webmidi.access.onstatechange = storedStateChange;\n    return false;\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * The options object has several parameters:\n *\n * {bool} autoupdate -- should this auto update?\n * {function} onsuccess -- function to call on all successful port queries\n * {function} oninputsuccess -- function to call if successful and at least one input device is found\n * {function} oninputempty -- function to call if successful but no input devices are found.\n * {bool} existingMidiSelect -- is there already a select tag for MIDI?\n *\n * @function music21.webmidi.createSelector\n * @param {JQueryDOMObject|DOMObject} [$midiSelectDiv=$('body')] - object to append the select to\n * @param {object} [options] - see above.\n * @returns {DOMObject|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createSelector = function createSelector($midiSelectDiv, options) {\n    const params = {\n        autoUpdate: true,\n        existingMidiSelect: false,\n    };\n    common.merge(params, options);\n\n    if (typeof $midiSelectDiv === 'undefined') {\n        $midiSelectDiv = $('body');\n    }\n    if ($midiSelectDiv.jquery === undefined) {\n        $midiSelectDiv = $($midiSelectDiv);\n    }\n    let $newSelect;\n    const foundMidiSelects = $midiSelectDiv.find('select#midiInSelect');\n    if (foundMidiSelects.length > 0) {\n        $newSelect = foundMidiSelects[0];\n        params.existingMidiSelect = true;\n    } else {\n        $newSelect = $('<select>').attr('id', 'midiInSelect');\n        $midiSelectDiv.append($newSelect);\n    }\n    webmidi.$select = $newSelect;\n\n    if (navigator.requestMIDIAccess === undefined) {\n        webmidi.createJazzSelector($newSelect, params);\n    } else {\n        if (params.existingMidiSelect !== true) {\n            $newSelect.change(webmidi.selectionChanged);\n        }\n        navigator.requestMIDIAccess().then(\n            access => {\n                webmidi.access = access;\n                webmidi.populateSelect();\n                if (params.autoUpdate) {\n                    access.onstatechange = webmidi.populateSelect;\n                }\n                webmidi.$select.change();\n                if (params.onsuccess !== undefined) {\n                    params.onsuccess();\n                }\n                if (\n                    webmidi.selectedInputPort !== 'None'\n                    && params.oninputsuccess !== undefined\n                ) {\n                    params.oninputsuccess();\n                } else if (\n                    webmidi.selectedInputPort === 'None'\n                    && params.oninputempty !== undefined\n                ) {\n                    params.oninputempty();\n                }\n            },\n            e => {\n                $midiSelectDiv.html(e.message);\n            }\n        );\n    }\n    miditools.clearOldChords(); // starts the chord checking process.\n    return $newSelect;\n};\n\nwebmidi.populateSelect = function populateSelect() {\n    const inputs = webmidi.access.inputs;\n    webmidi.$select.empty();\n\n    const $noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    webmidi.$select.append($noneAppendOption);\n\n    const allAppendOptions = [];\n    const midiOptions = [];\n    let i = 0;\n    inputs.forEach(port => {\n        const $appendOption = $(\n            \"<option value='\" + port.name + \"'>\" + port.name + '</option>'\n        );\n        allAppendOptions.push($appendOption);\n        midiOptions.push(port.name);\n        // console.log(appendOption);\n        webmidi.$select.append($appendOption);\n        i += 1;\n    });\n\n    if (allAppendOptions.length > 0) {\n        webmidi.$select.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n    } else {\n        $noneAppendOption.attr('selected', true);\n    }\n    webmidi.$select.change();\n};\n\n// this allows for the deprecated webmidi.callBacks to still work for now.\nwebmidi.callBacks = miditools.callBacks;\n\n/**\n * Example smallest usage of the webmidi toolkit.  see testHTML/midiInRequire.html\n\n<html>\n<head>\n    <title>MIDI In/Jazz Test for Music21j</title>\n    <!-- for MSIE 10 on Windows 8 -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n    <script data-main=\"../src/music21.js\" src=\"../ext/require/require.js\"></script>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n\n    <script>\n    var s = \"\";\n    function displayStream(me) {\n        me.sendToMIDIjs();\n        if (me.noteOn) {\n            var m21n = me.music21Note();\n            if (s.length > 7) {\n                s.elements = s.elements.slice(1)\n            }\n            s.append(m21n);\n            var $svgDiv = $(\"#svgDiv\");\n            $svgDiv.empty();\n            var svgDiv = s.appendNewDOM($svgDiv);\n        }\n    }\n\n    require(['music21'], function () {\n        s = new music21.stream.Stream();\n        music21.webmidi.createSelector($(\"#putMidiSelectHere\"));\n        music21.miditools.callBacks.general = displayStream;\n    });\n\n\n    </script>\n</head>\n<body>\n<div>\nMIDI Input: <div id=\"putMidiSelectHere\" />\n</div>\n<div id=\"svgDiv\">\n</div>\n</body>\n</html>\n **/\n","// order below doesn't matter, but good to give a sense\n// of what will be needed by almost everyone, and then\n// alphabetical.\nimport * as exceptions21 from './music21/exceptions21.js';\nimport { debug } from './music21/debug.js';\nimport { common } from './music21/common.js';\nimport { prebase } from './music21/prebase.js';\nimport { base } from './music21/base.js';\n\nimport { articulations } from './music21/articulations.js';\nimport { audioRecording } from './music21/audioRecording.js';\nimport { audioSearch } from './music21/audioSearch.js';\nimport { beam } from './music21/beam.js';\nimport { chord } from './music21/chord.js';\nimport * as chordTables from './music21/chordTables.js';\nimport { clef } from './music21/clef.js';\nimport { duration } from './music21/duration.js';\nimport { dynamics } from './music21/dynamics.js';\nimport { expressions } from './music21/expressions.js';\nimport { figuredBass } from './music21/figuredBass.js';\nimport { fromPython } from './music21/fromPython.js';\nimport { harmony } from './music21/harmony.js';\nimport { instrument } from './music21/instrument.js';\nimport { interval } from './music21/interval.js';\nimport { key } from './music21/key.js';\nimport { keyboard } from './music21/keyboard.js';\nimport { layout } from './music21/layout.js';\nimport { meter } from './music21/meter.js';\nimport { miditools } from './music21/miditools.js';\nimport { musicxml } from './music21/musicxml.js';\nimport { note } from './music21/note.js';\nimport { pitch } from './music21/pitch.js';\nimport { renderOptions } from './music21/renderOptions.js';\nimport { roman } from './music21/roman.js';\nimport { scale } from './music21/scale.js';\nimport { sites } from './music21/sites.js';\nimport { stream } from './music21/stream.js';\nimport { tempo } from './music21/tempo.js';\nimport { tie } from './music21/tie.js';\nimport { tinyNotation } from './music21/tinyNotation.js';\nimport { voiceLeading } from './music21/voiceLeading.js';\nimport { vfShow } from './music21/vfShow.js';\nimport { webmidi } from './music21/webmidi.js';\n\nconst music21 = {\n    common,\n    debug,\n    prebase,\n    base,\n\n    articulations,\n    audioRecording,\n    audioSearch,\n    beam,\n    chord,\n    chordTables,\n    clef,\n    dynamics,\n    duration,\n    exceptions21,\n    expressions,\n    figuredBass,\n    fromPython,\n    harmony,\n    instrument,\n    interval,\n    key,\n    keyboard,\n    layout,\n    meter,\n    miditools,\n    musicxml,\n    note,\n    pitch,\n    renderOptions,\n    roman,\n    scale,\n    sites,\n    stream,\n    tempo,\n    tie,\n    tinyNotation,\n    voiceLeading,\n    vfShow,\n    webmidi,\n};\n\nmusic21.Music21Object = base.Music21Object;\n\nexport default music21;\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.articulations.Articulation', assert => {\n        const acc = new music21.articulations.Accent();\n        assert.equal(acc.name, 'accent', 'matching names for accent');\n        const ten = new music21.articulations.Tenuto();\n        assert.equal(ten.name, 'tenuto', 'matching names for tenuto');\n        const n = new music21.note.Note('C');\n        n.articulations.push(acc);\n        n.articulations.push(ten);\n        assert.equal(n.articulations[0].name, 'accent', 'accent in array');\n        assert.equal(n.articulations[1].name, 'tenuto', 'tenuto in array');\n    });\n\n    QUnit.test('music21.articulations.Articulation display', assert => {\n        // Marcato is a pseudo multiple inheritance\n        const marc = new music21.articulations.Marcato();\n        assert.equal(marc.name, 'marcato', 'matching names for marcato');\n        const n = new music21.note.Note('D#5');\n        n.articulations.push(marc);\n        const nBoring = new music21.note.Note('D#5');\n\n        const measure = new music21.stream.Measure();\n        measure.append(n);\n        measure.append(nBoring);\n        measure.append(nBoring.clone());\n        measure.append(n.clone());\n        measure.appendNewDOM();\n        assert.ok(true, 'something worked');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.base.Music21Object', assert => {\n        const m21o = new music21.base.Music21Object();\n        assert.equal(m21o.classSortOrder, 20);\n        assert.ok(m21o.duration instanceof music21.duration.Duration);\n        assert.deepEqual(m21o.classes, [\n            'Music21Object',\n            'ProtoM21Object',\n            'object',\n        ]);\n        assert.ok(m21o.sites instanceof music21.sites.Sites);\n        assert.ok(m21o.isMusic21Object);\n        assert.notOk(m21o.isStream);\n        assert.equal(m21o.priority, 0, 'priority is 0');\n        assert.equal(m21o.quarterLength, 0.0, 'default duration is 0.0');\n        m21o.quarterLength = 2.0;\n        assert.equal(m21o.quarterLength, 2.0);\n        const st = new music21.stream.Measure();\n        st.insert(3.0, m21o);\n        assert.equal(m21o.offset, 3.0);\n        assert.equal(m21o.getOffsetBySite(st), 3.0);\n        const st2 = new music21.stream.Measure();\n        st2.insert(5.0, m21o);\n        assert.equal(m21o.offset, 5.0);\n        assert.strictEqual(m21o.activeSite, st2);\n        assert.equal(m21o.getOffsetBySite(st), 3.0);\n        assert.equal(m21o.getOffsetBySite(st2), 5.0);\n        m21o.setOffsetBySite(st2, 5.5);\n        assert.equal(m21o.getOffsetBySite(st2), 5.5);\n    });\n    QUnit.test('music21.base.Music21Object Contexts', assert => {\n        const m21o = new music21.base.Music21Object();\n        const m = new music21.stream.Measure();\n        const p = new music21.stream.Part();\n        const sc = new music21.stream.Score();\n        m.insert(3.0, m21o);\n        p.insert(1.0, m);\n        sc.insert(0.0, p);\n        assert.strictEqual(\n            m21o.getContextByClass('Measure'),\n            m,\n            'get context by class Measure'\n        );\n        assert.strictEqual(\n            m21o.getContextByClass('Part'),\n            p,\n            'get context by class Part'\n        );\n        assert.strictEqual(\n            m21o.getContextByClass('Score'),\n            sc,\n            'get context by class Score'\n        );\n\n        const contextS = Array.from(m21o.contextSites());\n        assert.equal(contextS.length, 3);\n        assert.deepEqual(\n            contextS[0],\n            [m, 3, 'elementsFirst'],\n            'first site is m'\n        );\n        assert.deepEqual(contextS[1], [p, 4, 'flatten'], 'second site is p');\n        assert.deepEqual(\n            contextS[2],\n            [sc, 4.0, 'elementsOnly'],\n            'third site is sc'\n        );\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.beam.Beams', assert => {\n        const a = new music21.beam.Beams();\n        a.fill('16th');\n        a.setAll('start');\n        assert.equal(a.getTypes()[0], 'start');\n        assert.equal(a.getTypes()[1], 'start');\n\n        const b = new music21.beam.Beams();\n        b.fill('16th');\n        b.setAll('start');\n        b.setByNumber(1, 'continue');\n        assert.equal(b.beamsList[0].type, 'continue');\n        b.setByNumber(2, 'stop');\n        assert.equal(b.beamsList[1].type, 'stop');\n        b.setByNumber(2, 'partial-right');\n        assert.equal(b.beamsList[1].type, 'partial');\n        assert.equal(b.beamsList[1].direction, 'right');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.chord.Chord', assert => {\n        let c = new music21.chord.Chord(['C5', 'E5', 'G5']);\n\n        assert.equal(c.length, 3, 'Checking length of Chord');\n        assert.ok(c.isMajorTriad(), 'C E G should be a major triad');\n        assert.equal(\n            c.isMinorTriad(),\n            false,\n            'C E G should not be minor triad'\n        );\n        assert.equal(c.canBeTonic(), true, 'C E G can be a tonic');\n\n        // string construction\n        c = new music21.chord.Chord('C5 E5 G5');\n        assert.equal(c.length, 3, 'Checking length of Chord');\n        assert.ok(c.isMajorTriad(), 'test chord construction from string');\n\n        c = new music21.chord.Chord(['B', 'G', 'D', 'F']);\n        assert.ok(c.isDominantSeventh());\n        \n        // test is sorted:\n        c = new music21.chord.Chord('C5 E4 G3');\n        const pitches = c.pitches;\n        assert.equal(pitches[0].nameWithOctave, 'G3');\n        assert.equal(pitches[2].nameWithOctave, 'C5');\n        \n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.clef.Clef', assert => {\n        const c1 = new music21.clef.Clef();\n        assert.equal(c1.isClassOrSubclass('Clef'), true, 'clef is a Clef');\n\n        const ac = new music21.clef.AltoClef();\n        assert.equal(ac.lowestLine, 25, 'first line set');\n        const n = new music21.note.Note('C#4');\n        n.setStemDirectionFromClef(ac);\n        assert.equal(n.stemDirection, 'down', 'stem direction set');\n        n.pitch.diatonicNoteNum -= 1;\n        n.setStemDirectionFromClef(ac);\n        assert.equal(n.stemDirection, 'up', 'stem direction set');\n        n.pitch.diatonicNoteNum += 1;\n        const p2 = ac.convertPitchToTreble(n.pitch);\n        assert.equal(p2.nameWithOctave, 'B#4', 'converted to treble');\n    });\n    QUnit.test('music21.clef.Clef 8va', assert => {\n        const ac = new music21.clef.Treble8vaClef();\n        assert.equal(ac.lowestLine, 38, 'first line set');\n        const n = new music21.note.Note('C#5');\n        n.setStemDirectionFromClef(ac);\n        assert.equal(n.stemDirection, 'up', 'stem direction set');\n        const p2 = ac.convertPitchToTreble(n.pitch);\n        assert.equal(p2.nameWithOctave, 'C#4', 'converted to treble');\n        const s = new music21.stream.Stream();\n        s.clef = ac;\n        s.append(n);\n        s.appendNewDOM($('body'));\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nconst common = music21.common;\n\nexport default function tests() {\n    QUnit.test('music21.common.posMod', assert => {\n        assert.equal(common.posMod(8, 7), 1, 'positive posMod passed');\n        assert.equal(common.posMod(-1, 7), 6, 'negative posMod passed');\n        assert.equal(common.posMod(-15, 7), 6, 'big negative posMod passed');\n    });\n\n    QUnit.test('music21.common.fromRoman', assert => {\n        assert.equal(common.fromRoman('I'), 1, 'first roman passed');\n        assert.equal(common.fromRoman('LX'), 60, 'LX roman passed');\n        assert.equal(common.fromRoman('XC'), 90, 'XC subtraction roman passed');\n        assert.equal(\n            common.fromRoman('xc'),\n            90,\n            'lowercase subtraction roman passed'\n        );\n        assert.equal(common.fromRoman('VIII'), 8, 'max RN passed');\n        assert.equal(common.fromRoman('MCDLXXXIX'), 1489, 'big roman passed');\n    });\n\n    QUnit.test('music21.common.toRoman', assert => {\n        assert.equal(common.toRoman(1), 'I', 'first roman passed');\n        assert.equal(common.toRoman(2), 'II', '2 passed');\n        assert.equal(common.toRoman(7), 'VII', '7 passed');\n        assert.equal(common.toRoman(1999), 'MCMXCIX', '1999 passed');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.duration.Duration 0', assert => {\n        const d = new music21.duration.Duration(0.0);\n        assert.equal(d.type, 'zero', 'got zero');\n        assert.equal(d.dots, 0, 'got no dots');\n        assert.equal(d.quarterLength, 0.0, 'got 0.0');\n    });\n\n    QUnit.test('music21.duration.Duration', assert => {\n        const d = new music21.duration.Duration(1.0);\n        assert.equal(d.type, 'quarter', 'got quarter note from 1.0');\n        assert.equal(d.dots, 0, 'got no dots');\n        assert.equal(d.quarterLength, 1.0, 'got 1.0 from 1.0');\n        assert.equal(d.vexflowDuration, 'q', 'vexflow q');\n        d.type = 'half';\n        assert.equal(d.type, 'half', 'got half note from half');\n        assert.equal(d.dots, 0, 'got no dots');\n        assert.equal(d.quarterLength, 2.0, 'got 2.0 from half');\n        assert.equal(d.vexflowDuration, 'h', 'vexflow h');\n        d.quarterLength = 6.0;\n        assert.equal(d.type, 'whole');\n        assert.equal(d.dots, 1, 'got one dot from 6.0');\n        assert.equal(d.quarterLength, 6.0, 'got 6.0');\n        assert.equal(d.vexflowDuration, 'wd', 'vexflow duration wd');\n\n        d.quarterLength = 7.75;\n        assert.equal(d.type, 'whole');\n        assert.equal(d.dots, 4, 'got four dots from 7.75');\n    });\n\n    QUnit.test('music21.duration.Tuplet', assert => {\n        const d = new music21.duration.Duration(0.5);\n        const t = new music21.duration.Tuplet(5, 4);\n        assert.equal(t.tupletMultiplier(), 0.8, 'tuplet multiplier');\n        d.appendTuplet(t);\n        assert.equal(t.frozen, true, 'tuplet is frozen');\n        assert.equal(d._tuplets[0], t, 'tuplet appended');\n        assert.equal(d.quarterLength, 0.4, 'quarterLength Updated');\n\n        const d2 = new music21.duration.Duration(1 / 3);\n        assert.equal(d2.type, 'eighth', 'got eighth note from 1/3');\n        assert.equal(d2.dots, 0, 'got no dots');\n        assert.equal(d2.quarterLength, 1 / 3, 'got 1/3 from 1/3');\n        const t2 = d2.tuplets[0];\n        assert.equal(t2.numberNotesActual, 3, '3/2 tuplet');\n        assert.equal(t2.numberNotesNormal, 2, '3/2 tuplet');\n        assert.equal(t2.durationActual.quarterLength, 0.5);\n        assert.equal(t2.tupletMultiplier(), 2 / 3, '2/3 tuplet multiplier');\n        assert.equal(t2.totalTupletLength(), 1.0, 'total tuplet == 1.0');\n\n        const s = new music21.stream.Stream();\n        s.timeSignature = new music21.meter.TimeSignature('2/2');\n        for (let i = 0; i < 6; i++) {\n            const n1 = new music21.note.Note('C4');\n            n1.duration.quarterLength = 2 / 3;\n            if (i % 3 === 0) {\n                n1.articulations.push(new music21.articulations.Accent());\n            }\n            s.append(n1);\n        }\n        s.appendNewDOM();\n        assert.ok(true, 'quarter note triplets displayed');\n\n        const m6 = new music21.stream.Measure();\n        m6.renderOptions.staffLines = 1;\n        m6.timeSignature = new music21.meter.TimeSignature('2/4');\n        const n6 = new music21.note.Note('B4');\n        n6.duration.quarterLength = 2 / 3;\n        n6.duration.tuplets[0].durationNormal.type = 'eighth';\n        n6.duration.tuplets[0].tupletNormalShow = 'ratio';\n\n        const n7 = new music21.note.Note('B4');\n        n7.duration.quarterLength = 1 / 3;\n        n7.duration.tuplets[0].tupletNormalShow = 'ratio';\n\n        m6.append(n6);\n        m6.append(n7);\n        m6.append(n7.clone());\n        const n6clone = n6.clone();\n        m6.append(n6clone);\n        m6.appendNewDOM();\n        assert.ok(true, 'tuplets beginning with different type than original');\n        assert.equal(\n            n6.duration.tuplets[0] !== n6clone.duration.tuplets[0],\n            true,\n            'tuplet should not be the same object after clone'\n        );\n    });\n    QUnit.test('music21.duration.Tuplet multiple parts', assert => {\n        const s2 = new music21.stream.Measure();\n        s2.timeSignature = new music21.meter.TimeSignature('3/2');\n        const na1 = new music21.note.Note('F4');\n        const na2 = new music21.note.Note('E4');\n        s2.append(na1);\n        s2.append(na2);\n        for (let i = 0; i < 10; i++) {\n            const n1 = new music21.note.Note('F4');\n            n1.pitch.diatonicNoteNum += i;\n            n1.duration.quarterLength = 2 / 5;\n            n1.duration.tuplets[0].tupletNormalShow = 'ratio';\n            if (i % 5 === 0) {\n                n1.articulations.push(new music21.articulations.Accent());\n            }\n            s2.append(n1);\n        }\n        const s3 = new music21.stream.Measure();\n        s3.timeSignature = new music21.meter.TimeSignature('3/2');\n        s3.append(new music21.note.Note('B5', 6.0));\n        const p = new music21.stream.Part();\n        p.append(s2);\n        p.append(s3);\n\n        const m4 = new music21.stream.Measure();\n        m4.timeSignature = new music21.meter.TimeSignature('3/2');\n        m4.append(new music21.note.Note('B3', 6.0));\n        const m5 = new music21.stream.Measure();\n        m5.timeSignature = new music21.meter.TimeSignature('3/2');\n        m5.append(new music21.note.Note('B3', 6.0));\n        const p2 = new music21.stream.Part();\n        p2.append(m4);\n        p2.append(m5);\n\n        const sc = new music21.stream.Score();\n        sc.insert(0, p);\n        sc.insert(0, p2);\n        sc.appendNewDOM();\n        assert.ok(true, '5:4 tuplets in 3/2 with multiple parts');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.dynamics.Dynamic', assert => {\n        let dynamic = new music21.dynamics.Dynamic('pp');\n        assert.equal(dynamic.value, 'pp', 'matching dynamic');\n\n        dynamic = new music21.dynamics.Dynamic(0.98);\n        assert.equal(dynamic.value, 'fff', 'number conversion successful');\n        assert.equal(dynamic.volumeScalar, 0.98, 'correct volume');\n        assert.equal(dynamic.longName, 'fortississimo', 'matching long name');\n        assert.equal(\n            dynamic.englishName,\n            'extremely loud',\n            'matching english names'\n        );\n\n        dynamic = new music21.dynamics.Dynamic('other');\n        assert.equal(dynamic.value, 'other', 'record non standard dynamic');\n        assert.equal(\n            dynamic.longName,\n            undefined,\n            'no long name for non standard dynamic'\n        );\n        assert.equal(\n            dynamic.englishName,\n            undefined,\n            'no english name for non standard dynamic'\n        );\n\n        dynamic.value = 0.18;\n        assert.equal(dynamic.value, 'pp', 'change in dynamic');\n        assert.equal(dynamic.volumeScalar, 0.18, 'change in volume');\n\n        dynamic.value = 'other';\n        assert.equal(dynamic.value, 'other', 'change to non standard');\n        assert.equal(\n            dynamic.longName,\n            undefined,\n            'change to non standard dynamic'\n        );\n        assert.equal(\n            dynamic.englishName,\n            undefined,\n            'change to non standard dynamic'\n        );\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nconst figuredBass = music21.figuredBass;\n\nexport default function tests() {\n    QUnit.test('music21.figuredBass.Notation', assert => {\n        const n1 = new figuredBass.Notation('4+,2');\n        assert.equal(n1.notationColumn, '4+,2');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nconst interval = music21.interval;\nconst Interval = music21.interval.Interval;\n\nexport default function tests() {\n    QUnit.test('music21.interval.intervalFromGenericAndChromatic', assert => {\n        let i;\n        i = interval.intervalFromGenericAndChromatic(2, 2);\n        assert.equal(i.name, 'M2');\n    });\n    QUnit.test('music21.interval.Interval', assert => {\n        let i;\n        i = new Interval('P5');\n        assert.equal(i.name, 'P5', 'name passed');\n        assert.equal(i.niceName, 'Perfect Fifth', 'nice name passed');\n        assert.equal(i.generic.simpleDirected, 5);\n    });\n    QUnit.test('music21.interval.DiatonicInterval', assert => {\n        let i;\n        i = new interval.DiatonicInterval('P', 5);\n        assert.equal(i.specifier, 1);\n        assert.equal(i.specifierAbbreviation, 'P');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.key.convertKeyStringToMusic21KeyString', assert => {\n        const conv = music21.key.convertKeyStringToMusic21KeyString;\n        assert.equal(conv('A'), 'A', 'normal string passed');\n        assert.equal(conv('a-'), 'a-', 'normal string passed');\n        assert.equal(conv('Bb'), 'B-', 'Bb passed');\n        assert.equal(conv('bb'), 'b-', 'bb passed');\n        assert.equal(conv('b'), 'b', 'b minor passed');\n        assert.equal(conv('B'), 'B', 'B major passed');\n        assert.equal(conv('Eb'), 'E-', 'E- major passed');\n    });\n\n    QUnit.test('music21.key.Key', assert => {\n        const testSharps = [\n            // sharps, mode, given name, given mode\n            [0, 'minor', 'a'],\n            [0, 'major', 'C'],\n            [0, 'major'],\n            [6, 'major', 'F#'],\n            [3, 'minor', 'f#'],\n            [6, 'major', 'f#', 'major'],\n            [-2, 'major', 'B-'],\n            [-5, 'minor', 'b-'],\n        ];\n        for (let i = 0; i < testSharps.length; i++) {\n            const thisTest = testSharps[i];\n            const expectedSharps = thisTest[0];\n            const expectedMode = thisTest[1];\n            const givenKeyName = thisTest[2];\n            const givenMode = thisTest[3];\n            const k = new music21.key.Key(givenKeyName, givenMode);\n            const foundSharps = k.sharps;\n            const foundMode = k.mode;\n            assert.equal(\n                foundSharps,\n                expectedSharps,\n                'Test sharps: ' + givenKeyName + ' (mode: ' + givenMode + ') '\n            );\n            assert.equal(\n                foundMode,\n                expectedMode,\n                'Test mode: ' + givenKeyName + ' (mode: ' + givenMode + ') '\n            );\n        }\n\n        const k = new music21.key.Key('f#');\n        let s = k.getScale().getPitches();\n        assert.equal(s[2].nameWithOctave, 'A4', 'test minor scale');\n        assert.equal(s[6].nameWithOctave, 'E5');\n        s = k.getScale('major').getPitches();\n        assert.equal(s[2].nameWithOctave, 'A#4', 'test major scale');\n        assert.equal(s[6].nameWithOctave, 'E#5');\n        s = k.getScale('harmonic minor').getPitches();\n        assert.equal(s[2].nameWithOctave, 'A4', 'test harmonic minor scale');\n        assert.equal(s[5].nameWithOctave, 'D5');\n        assert.equal(s[6].nameWithOctave, 'E#5');\n\n        assert.equal(k.width, 42, 'checking width');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.meter.TimeSignature', assert => {\n        const m = new music21.meter.TimeSignature('4/4');\n\n        assert.equal(m.ratioString, '4/4', 'ratioString matches');\n        assert.equal(m.barDuration.quarterLength, 4.0, 'bar lasts 4.0 ql');\n        assert.deepEqual(m.beatGroups, [[2, 8]], 'beatGroups check out');\n        assert.equal(m.beatCount, 4, 'beat count is 4');\n        assert.equal(\n            m.beatDuration.type,\n            'quarter',\n            'beatDuration type is quarter'\n        );\n        assert.equal(m.beatDuration.dots, 0, 'beatDuration has not dots');\n    });\n\n    QUnit.test('music21.meter.TimeSignature beams', assert => {\n        const m = new music21.meter.TimeSignature('4/4');\n        const [start, end] = m.offsetToSpan(3.2);\n        assert.equal(start, 3.0, 'beat starts at 3');\n        assert.equal(end, 4.0, 'beat ends at 4');\n      \n    });\n    \n    QUnit.test('music21.meter.TimeSignature compound', assert => {\n        const m = new music21.meter.TimeSignature('6/8');\n\n        assert.equal(m.ratioString, '6/8', 'ratioString matches');\n        assert.equal(m.barDuration.quarterLength, 3.0, 'bar lasts 3.0 ql');\n        assert.deepEqual(\n            m.beatGroups,\n            [[3, 8], [3, 8]],\n            'beatGroups check out'\n        );\n        assert.equal(m.beatCount, 2, 'beat count is 2');\n        assert.equal(\n            m.beatDuration.type,\n            'quarter',\n            'beatDuration type is quarter'\n        );\n        assert.equal(m.beatDuration.dots, 1, 'beatDuration has dot');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.note.Note', assert => {\n        const n = new music21.note.Note('D#5');\n\n        assert.equal(n.pitch.name, 'D#', 'Pitch Name set to D#');\n        assert.equal(n.pitch.step, 'D', 'Pitch Step set to D');\n        assert.equal(n.pitch.octave, 5, 'Pitch octave set to 5');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.pitch.Accidental', assert => {\n        const a = new music21.pitch.Accidental('-');\n        assert.equal(a.alter, -1.0, 'flat alter passed');\n        assert.equal(a.name, 'flat', 'flat name passed');\n        a.name = 'sharp';\n        assert.equal(a.alter, 1.0, 'flat alter passed');\n        assert.equal(a.name, 'sharp', 'flat name passed');\n\n        const b = new music21.pitch.Accidental('b');\n        assert.equal(b.alter, -1.0, 'flat alter passed');\n        assert.equal(b.name, 'flat', 'flat name passed');\n    });\n\n    QUnit.test('music21.pitch.Pitch', assert => {\n        const p = new music21.pitch.Pitch('D#5');\n        assert.equal(p.name, 'D#', 'Pitch Name set to D#');\n        assert.equal(p.step, 'D', 'Pitch Step set to D');\n        assert.equal(p.octave, 5, 'Pitch octave set to 5');\n        assert.equal(p.nameWithOctave, 'D#5', 'Name with octave');\n        const c = new music21.clef.AltoClef();\n        const vfn = p.vexflowName(c);\n        assert.equal(vfn, 'C#/6', 'Vexflow name set');\n    });\n\n    QUnit.test('music21.pitch.Pitch enharmonics', assert => {\n        const es = new music21.pitch.Pitch('E-5');\n        const dis = es.getLowerEnharmonic();\n        assert.equal(es.name, 'E-', 'Original Pitch Name unchanged');\n        assert.equal(dis.name, 'D#', 'Pitch Name set to D#');\n        assert.equal(dis.step, 'D', 'Pitch Step set to D');\n        assert.equal(dis.octave, 5, 'Pitch octave set to 5');\n\n        // inPlace\n        dis.getHigherEnharmonic(true); // inPlace\n        assert.equal(dis.nameWithOctave, es.nameWithOctave);\n\n        const cDblSharp = new music21.pitch.Pitch('C##5');\n        const dNatural = cDblSharp.getHigherEnharmonic();\n        assert.equal(cDblSharp.ps, dNatural.ps);\n        assert.equal(dNatural.name, 'D', 'C## higher is D');\n        assert.equal(dNatural.octave, 5, 'Octave is 5');\n        const bTripleSharp = cDblSharp.getLowerEnharmonic();\n        assert.equal(cDblSharp.ps, bTripleSharp.ps);\n        assert.equal(bTripleSharp.octave, 4, 'Octave is 4 [B###]');\n\n        const cDblFlat = new music21.pitch.Pitch('C--5');\n        const bFlat = cDblFlat.getLowerEnharmonic();\n        assert.equal(cDblFlat.ps, bFlat.ps);\n\n\n        // once octaveless pitches exist...\n//        const octaveless = new music21.pitch.Pitch('C');\n//        const bsharp = octaveless.getLowerEnharmonic();\n//        assert.equal(octaveless.octave, undefined, 'octave should be undefined');\n//        assert.equal(bsharp.octave, undefined, 'octave should be undefined');\n//        assert.equal(bsharp.name, 'B#');\n\n    });\n\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.prebase.ProtoM21Object classes', assert => {\n        const n = new music21.note.Note();\n        assert.deepEqual(n.classes, [\n            'Note',\n            'NotRest',\n            'GeneralNote',\n            'Music21Object',\n            'ProtoM21Object',\n            'object',\n        ]);\n        assert.ok(n.isClassOrSubclass('Note'));\n        assert.ok(n.isClassOrSubclass('GeneralNote'));\n        assert.notOk(n.isClassOrSubclass('Rest'));\n    });\n    QUnit.test('clone', assert => {\n        const n = new music21.note.Note('D4');\n        const n2 = n.clone();\n        n.pitch.octave = 5;\n        assert.equal(n2.pitch.octave, 4);\n        const n3 = n.clone(false);\n        n.pitch.octave = 6;\n        assert.equal(n3.pitch.octave, 6);\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.roman.expandShortHand', assert => {\n        let outGroups;\n        outGroups = music21.roman.expandShortHand('64');\n        assert.equal(outGroups.length, 2);\n        assert.equal(outGroups[0], 6);\n        assert.equal(outGroups[1], 4);\n\n        outGroups = music21.roman.expandShortHand('973');\n        assert.equal(outGroups.toString(), '9,7,3');\n\n        outGroups = music21.roman.expandShortHand('11b3');\n        assert.equal(outGroups.toString(), '11,b3');\n\n        outGroups = music21.roman.expandShortHand('b13#9-6');\n        assert.equal(outGroups.toString(), 'b13,#9,-6');\n\n        outGroups = music21.roman.expandShortHand('-');\n        assert.equal(outGroups.toString(), '5,-3');\n\n        outGroups = music21.roman.expandShortHand('6/4');\n        assert.equal(outGroups.toString(), '6,4');\n\n        // no shorthand expansion here\n        outGroups = music21.roman.expandShortHand('7');\n        assert.equal(outGroups.toString(), '7');\n\n        outGroups = music21.roman.expandShortHand('4/3');\n        assert.equal(outGroups.toString(), '4,3');\n\n        outGroups = music21.roman.expandShortHand('6');\n        assert.equal(outGroups.toString(), '6');\n    });\n    QUnit.test('music21.roman.correctSuffixForChordQuality', assert => {\n        let c;\n        c = new music21.chord.Chord('E3 C4 G4');\n        assert.equal(music21.roman.correctSuffixForChordQuality(c, '6'), '6');\n        c = new music21.chord.Chord('E3 C4 G-4');\n        assert.equal(music21.roman.correctSuffixForChordQuality(c, '6'), 'o6');\n    });\n    QUnit.test('music21.roman.RomanNumeral', assert => {\n        const t1 = 'IV';\n        let rn1 = new music21.roman.RomanNumeral(t1, 'F');\n        assert.equal(rn1.scaleDegree, 4, 'test scale dgree of F IV');\n        const rnKey = rn1.key;\n        assert.equal(rnKey.tonic.name, 'F', 'test scale is F');\n        assert.equal(rn1.root().name, 'B-', 'test root of F IV');\n        assert.equal(rn1.impliedQuality, 'major', 'test quality is major');\n        assert.equal(rn1.pitches.length, 3, 'should be three pitches');\n        assert.equal(rn1.pitches[0].name, 'B-', 'test pitches[0] == B-');\n        assert.equal(rn1.pitches[1].name, 'D', 'test pitches[1] == D');\n        assert.equal(rn1.pitches[2].name, 'F', 'test pitches[2] == F');\n        assert.equal(rn1.figureAndKey, 'IV in F major');\n        assert.equal(rn1.degreeName, 'Subdominant', 'test is Subdominant');\n\n        let t2;\n        t2 = 'viio7';\n        assert.equal(t2, 'viio7', 'beginning viio7 test');\n        rn1 = new music21.roman.RomanNumeral(t2, 'a');\n        assert.equal(rn1.scaleDegree, 7, 'test scale dgree of A viio7');\n        assert.equal(rn1.root().name, 'G#', 'test root name == G#');\n        assert.equal(rn1.impliedQuality, 'diminished', 'implied quality');\n        assert.equal(rn1.pitches[0].name, 'G#', 'test viio7 pitches[0] == G#');\n        assert.equal(rn1.pitches[1].name, 'B', 'test viio7 pitches[1] == B');\n        assert.equal(rn1.pitches[2].name, 'D', 'test viio7 pitches[2] == D');\n        assert.equal(rn1.pitches[3].name, 'F', 'test viio7 pitches[3] == F');\n        assert.equal(rn1.degreeName, 'Leading-tone', 'test is Leading-tone');\n        assert.equal(rn1.figureAndKey, 'viio7 in a minor');\n\n        t2 = 'V7';\n        rn1 = new music21.roman.RomanNumeral(t2, 'a');\n        assert.equal(rn1.scaleDegree, 5, 'test scale dgree of a V7');\n        assert.equal(rn1.romanNumeralAlone, 'V', 'test romanNumeralAlone');\n        assert.equal(rn1.root().name, 'E', 'root name is E');\n        assert.equal(rn1.impliedQuality, 'major', 'implied quality major');\n        assert.equal(rn1.pitches[0].name, 'E', 'test pitches[0] == E');\n        assert.equal(rn1.pitches[1].name, 'G#', 'test pitches[1] == G#');\n        assert.equal(rn1.pitches[2].name, 'B', 'test pitches[2] == B');\n        assert.equal(rn1.pitches[3].name, 'D', 'test pitches[3] == D');\n        assert.equal(rn1.degreeName, 'Dominant', 'test is Dominant');\n\n        t2 = 'VII';\n        rn1 = new music21.roman.RomanNumeral(t2, 'f#');\n        assert.equal(rn1.scaleDegree, 7, 'test scale dgree of a VII');\n        assert.equal(rn1.root().name, 'E', 'root name is E');\n        assert.equal(rn1.impliedQuality, 'major', 'implied quality major');\n        assert.equal(rn1.pitches[0].name, 'E', 'test pitches[0] == E');\n        assert.equal(rn1.pitches[1].name, 'G#', 'test pitches[1] == G#');\n        assert.equal(rn1.pitches[2].name, 'B', 'test pitches[2] == B');\n        assert.equal(rn1.degreeName, 'Subtonic', 'test is Subtonic');\n\n        t2 = '#IV';\n        rn1 = new music21.roman.RomanNumeral(t2, 'F');\n        assert.equal(rn1.scaleDegree, 4, 'test scale dgree of F #IV');\n        assert.equal(rn1.root().name, 'B', 'test root of F #IV');\n        assert.equal(rn1.impliedQuality, 'major', 'test quality is major');\n        assert.equal(rn1.pitches.length, 3, 'should be three pitches');\n        assert.equal(rn1.pitches[0].name, 'B', 'test pitches[0] == B');\n        assert.equal(rn1.pitches[1].name, 'D#', 'test pitches[1] == D#');\n        assert.equal(rn1.pitches[2].name, 'F#', 'test pitches[2] == F#');\n        assert.equal(rn1.figureAndKey, '#IV in F major');\n        assert.equal(rn1.degreeName, 'Subdominant', 'test is Subdominant');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - inversions', assert => {\n        const t1 = 'IV6';\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral(t1, 'F');\n        assert.equal(rn1.scaleDegree, 4, 'test scale dgree of F IV6');\n        const rnKey = rn1.key;\n        assert.equal(rnKey.tonic.name, 'F', 'test scale is F');\n        assert.equal(rn1.root().name, 'B-', 'test root of F IV6');\n        assert.equal(rn1.bass().name, 'D', 'test bass of F IV6');\n        assert.equal(rn1.impliedQuality, 'major', 'test quality is major');\n        assert.equal(rn1.pitches[0].name, 'D', 'test pitches[0] == D');\n        assert.ok(rn1.pitches.map(p => p.name).includes('B-'), 'B- in pitches');\n        assert.ok(rn1.pitches.map(p => p.name).includes('F'), 'F in pitches');\n        assert.equal(rn1.degreeName, 'Subdominant', 'test is Subdominant');\n\n        let t2 = 'V43';\n        rn1 = new music21.roman.RomanNumeral(t2, 'a');\n        assert.equal(rn1.scaleDegree, 5, 'test scale dgree of a V43');\n        assert.equal(rn1.romanNumeralAlone, 'V', 'test romanNumeralAlone');\n        assert.equal(rn1.root().name, 'E', 'root name is E');\n        assert.equal(rn1.bass().name, 'B', 'bass name is B');\n        assert.equal(rn1.impliedQuality, 'major', 'implied quality major');\n        assert.equal(rn1.pitches[0].name, 'B', 'test pitches[0] == B');\n        assert.equal(rn1.pitches[1].name, 'D', 'test pitches[1] == D');\n        assert.equal(rn1.pitches[2].name, 'E', 'test pitches[2] == E');\n        assert.equal(rn1.pitches[3].name, 'G#', 'test pitches[3] == G#');\n        assert.equal(rn1.degreeName, 'Dominant', 'test is Dominant');\n\n        t2 = 'ii/o65';\n        rn1 = new music21.roman.RomanNumeral(t2, 'g');\n        assert.equal(rn1.scaleDegree, 2, 'test scale dgree of a ii/o65');\n        assert.equal(\n            rn1.romanNumeralAlone,\n            'ii',\n            'test romanNumeralAlone is ii'\n        );\n        assert.equal(rn1.root().name, 'A', 'root name is A');\n        assert.equal(rn1.bass().name, 'C', 'bass name is C');\n        assert.equal(\n            rn1.impliedQuality,\n            'half-diminished',\n            'implied quality half-diminished'\n        );\n        assert.equal(rn1.pitches[0].name, 'C', 'test ii/o65 pitches[0] == C');\n        assert.equal(rn1.pitches[1].name, 'E-', 'test ii/o65 pitches[1] == E-');\n        assert.equal(rn1.pitches[2].name, 'G', 'test ii/o65 pitches[2] == G');\n        assert.equal(rn1.pitches[3].name, 'A', 'test ii/o65 pitches[3] == A');\n        assert.equal(rn1.degreeName, 'Supertonic', 'test is Supertonic');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - front alterations', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('#II', 'C');\n        assert.equal(rn1.root().name, 'D#', 'root name is D#');\n        assert.equal(rn1.bass().name, 'D#', 'bass name is D#');\n        assert.equal(rn1.pitches[1].name, 'F##', 'next pitch is F##');\n        assert.equal(rn1.pitches[2].name, 'A#', 'last pitch is A#');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - neapolitan', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('N6', 'C');\n        assert.equal(rn1.root().name, 'D-', 'root name is D-');\n        assert.equal(rn1.bass().name, 'F', 'bass name is F');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - omittedSteps', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('V7[no5][no3]', 'C');\n        assert.equal(rn1.omittedSteps[0], 5, '5 is omitted');\n        assert.equal(rn1.omittedSteps[1], 3, '3 is omitted');\n        assert.equal(rn1.root().name, 'G', '#1 root name is G');\n        assert.equal(rn1.pitches.length, 2, '#1 length is 2');\n        assert.equal(rn1.pitches[0].name, 'G');\n        assert.equal(rn1.pitches[1].name, 'F');\n\n        rn1 = new music21.roman.RomanNumeral('V13[no11][no9][no7]', 'C');\n        assert.equal(rn1.omittedSteps[0], 4, '4 =11 is omitted');\n        assert.equal(rn1.omittedSteps[1], 2, '2 =9 is omitted');\n        assert.equal(rn1.omittedSteps[2], 7, '7 is omitted');\n        // root of 13th is undefined...\n        // assert.equal(rn1.root().name, 'G', 'root is G');\n        assert.equal(rn1.bass().name, 'G', 'bass is G');\n        assert.equal(rn1.pitches.length, 4, '#2 length is 4');\n        assert.equal(rn1.pitches[0].name, 'G', 'first pitch is G');\n        assert.equal(rn1.pitches[1].name, 'B');\n        assert.equal(rn1.pitches[2].name, 'D');\n        assert.equal(rn1.pitches[3].name, 'E');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - bracketedAlterations', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('V7[#5][b3]', 'C');\n        assert.deepEqual(\n            rn1.bracketedAlterations[0],\n            ['#', 5],\n            `5 is sharped: ${rn1.bracketedAlterations[0]}`\n        );\n        assert.deepEqual(\n            rn1.bracketedAlterations[1],\n            ['b', 3],\n            `3 is flattened:  ${rn1.bracketedAlterations[1]}`\n        );\n        assert.equal(rn1.root().name, 'G', '#1 root name is G');\n        assert.equal(rn1.pitches.length, 4, '#1 length is 3');\n        assert.equal(rn1.third.name, 'B-', 'third is B-');\n        assert.equal(rn1.fifth.name, 'D#', 'fifth is D#');\n    });\n\n    QUnit.test(\n        'music21.roman.RomanNumeral - vio, VI, vii, VII in minor',\n        assert => {\n            let rn1;\n            rn1 = new music21.roman.RomanNumeral('vio', 'c');\n            assert.equal(rn1.root().name, 'A', 'root name is A');\n            assert.equal(rn1.fifth.name, 'E-', 'fifth name is E-');\n\n            rn1 = new music21.roman.RomanNumeral('vi', 'c');\n            assert.equal(rn1.root().name, 'A', 'root name is A');\n            assert.equal(rn1.fifth.name, 'E', 'fifth name is E');\n\n            rn1 = new music21.roman.RomanNumeral('VI', 'c');\n            assert.equal(rn1.root().name, 'A-', 'root name is A-');\n            assert.equal(rn1.fifth.name, 'E-', 'fifth name is E-');\n\n            rn1 = new music21.roman.RomanNumeral('viio', 'c');\n            assert.equal(rn1.root().name, 'B', 'root name is B');\n            assert.equal(rn1.fifth.name, 'F', 'fifth name is F');\n\n            rn1 = new music21.roman.RomanNumeral('vii', 'c');\n            assert.equal(rn1.root().name, 'B', 'root name is B');\n            assert.equal(rn1.fifth.name, 'F#', 'fifth name is F#');\n\n            rn1 = new music21.roman.RomanNumeral('VII', 'c');\n            assert.equal(rn1.root().name, 'B-', 'root name is B-');\n            assert.equal(rn1.fifth.name, 'F', 'fifth name is F');\n        }\n    );\n\n    QUnit.test(\n        'music21.roman.RomanNumeral - secondary roman numerals',\n        assert => {\n            let rn1;\n            rn1 = new music21.roman.RomanNumeral('V/V', 'C');\n            assert.equal(rn1.root().name, 'D', 'root name is D');\n            assert.equal(rn1.bass().name, 'D', 'bass name is D');\n            assert.equal(rn1.pitches[1].name, 'F#', 'third is F#');\n\n            rn1 = new music21.roman.RomanNumeral('V65/V', 'C');\n            assert.equal(rn1.root().name, 'D', 'root name is F#');\n            assert.equal(rn1.bass().name, 'F#', 'bass name is F#');\n\n            rn1 = new music21.roman.RomanNumeral('V65/IV', 'C');\n            assert.equal(rn1.figure, 'V65/IV', 'figure is unchanged');\n            assert.equal(\n                rn1.secondaryRomanNumeral.figure,\n                'IV',\n                'secondary to IV'\n            );\n            assert.equal(rn1.secondaryRomanNumeralKey.tonic.name, 'F');\n            assert.equal(rn1.root().name, 'C', 'root name is C');\n            assert.equal(rn1.bass().name, 'E', 'bass name is E');\n            assert.equal(rn1.seventh.name, 'B-', 'seventh is B-');\n\n            rn1 = new music21.roman.RomanNumeral('V7/V/V', 'B-');\n            assert.equal(rn1.root().name, 'G');\n            assert.equal(rn1.third.name, 'B');\n            assert.equal(rn1.secondaryRomanNumeral.figure, 'V/V');\n            assert.equal(\n                rn1.secondaryRomanNumeral.secondaryRomanNumeral.figure,\n                'V'\n            );\n        }\n    );\n\n    QUnit.test('music21.roman.RomanNumeral - augmented6ths', assert => {\n        let k = new music21.key.Key('a');\n        const p = rn => {\n            const rn1 = new music21.roman.RomanNumeral(rn, k);\n            let x = '';\n            for (const pi of rn1.pitches) {\n                x += pi.nameWithOctave + ' ';\n            }\n            return x.trim();\n        };\n        const empty = new music21.roman.RomanNumeral();\n        const out = empty._parseRNAloneAmidstAug6(\n            'It6',\n            new music21.key.Key('C')\n        );\n        assert.equal(empty.useImpliedScale, true);\n        assert.equal(out[0], '6');\n        assert.equal(out[1].mode, 'minor');\n        assert.equal(empty.scaleDegree, 4);\n        assert.deepEqual(empty.bracketedAlterations[0], ['#', 1]);\n\n        assert.equal(p('V'), 'E5 G#5 B5');\n        assert.equal(p('It6'), 'F5 A5 D#6');\n        assert.equal(p('Ger65'), 'F5 A5 C6 D#6');\n        assert.equal(p('Ger6/5'), 'F5 A5 C6 D#6');\n        assert.equal(p('Fr43'), 'F5 A5 B5 D#6');\n        assert.equal(p('Fr4/3'), 'F5 A5 B5 D#6');\n        assert.equal(p('Sw43'), 'F5 A5 B#5 D#6');\n\n        k = new music21.key.Key('A');\n        assert.equal(p('V'), 'E5 G#5 B5');\n        assert.equal(p('It6'), 'F5 A5 D#6');\n        assert.equal(p('Ger65'), 'F5 A5 C6 D#6');\n        assert.equal(p('Ger6/5'), 'F5 A5 C6 D#6');\n        assert.equal(p('Fr43'), 'F5 A5 B5 D#6');\n        assert.equal(p('Fr4/3'), 'F5 A5 B5 D#6');\n        assert.equal(p('Sw43'), 'F5 A5 B#5 D#6');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.scale.Scale', assert => {\n        const sc = new music21.scale.Scale();\n        assert.ok(sc.classes.includes('Scale'));\n    });\n    QUnit.test('music21.scale.AbstractDiatonicScale', assert => {\n        const sc = new music21.scale.AbstractDiatonicScale('major');\n        const net = sc._net;\n        assert.equal(net.length, 7);\n        assert.equal(net[0].name, 'M2');\n        const p = new music21.pitch.Pitch('A-');\n        const pitches = sc.getRealization(p);\n        assert.equal(pitches.length, 8);\n        assert.equal(pitches[3].name, 'D-');\n        assert.equal(sc.getPitchFromNodeDegree(p, undefined, 4).name, 'D-');\n    });\n\n    QUnit.test('music21.scale.MajorScale', assert => {\n        const sc = new music21.scale.MajorScale('F');\n        assert.equal(sc.tonic.name, 'F');\n        const pitches = sc.getPitches();\n        assert.equal(pitches[0].name, 'F');\n        assert.equal(pitches[1].name, 'G');\n        assert.equal(pitches[2].name, 'A');\n        assert.equal(pitches[3].name, 'B-');\n        assert.equal(pitches[4].name, 'C');\n        assert.equal(pitches[5].name, 'D');\n        assert.equal(pitches[6].name, 'E');\n        assert.equal(pitches[7].name, 'F');\n        assert.equal(sc.pitchFromDegree(5).name, 'C');\n        assert.equal(sc.getScaleDegreeFromPitch('B-'), 4);\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.sites.SiteRef', assert => {\n        const sr = new music21.sites.SiteRef();\n        assert.ok(!sr.isDead);\n        assert.equal(\n            sr.siteWeakref.ref,\n            undefined,\n            'SiteRef should start undefined'\n        );\n        const st = new music21.stream.Measure();\n        sr.site = st;\n        sr.classString = st.classes[0];\n        assert.equal(sr.site, st);\n        assert.equal(sr.classString, 'Measure');\n    });\n\n    QUnit.test('music21.sites.Sites', assert => {\n        const s = new music21.sites.Sites();\n        assert.equal(s.length, 1, 'empty sites has length 1');\n        const st = new music21.stream.Measure();\n        st.number = 12;\n        s.add(st);\n        assert.equal(s.length, 2, 'should have two sites now');\n        assert.ok(s.includes(st));\n        const first = s._keysByTime()[0];\n        assert.equal(first, music21.sites.getId(st));\n\n        let af;\n        af = Array.from(s.yieldSites(false, st));\n        assert.equal(af.length, 2);\n        assert.strictEqual(af[0], st);\n        af = Array.from(s.yieldSites(false, st, true));\n        assert.equal(af.length, 1);\n        assert.strictEqual(af[0], st);\n\n        const mNum = s.getAttrByName('number');\n        assert.equal(mNum, 12, 'measure number should be 12');\n\n        assert.strictEqual(s.getObjByClass('Measure'), st);\n        assert.strictEqual(s.getObjByClass('Stream'), st);\n        assert.notOk(s.getObjByClass('Score'));\n\n        s.clear();\n        assert.equal(s.length, 1);\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.stream.Stream', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        s.append(new music21.note.Note('D#5'));\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.append(n);\n        assert.equal(s.length, 3, 'Simple stream length');\n        \n        // test iteration.\n        for (const n of s) {\n            const oct = n.pitch.octave;\n            assert.equal(oct, 5, 'all notes are octave 5');\n        }\n    });\n    QUnit.test('music21.stream.Stream remove, index, replace', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        const d = new music21.note.Note('D#5');\n        s.append(d);\n        const n = new music21.note.Note('F5');\n        s.append(n);\n        assert.equal(s.index(d), 1);\n        assert.equal(s.index(n), 2);\n        assert.equal(s.length, 3);\n        \n        s.remove(n);\n        assert.equal(s.length, 2);\n        assert.throws(() => { s.index(n) }, /cannot find/, 'n is no longer in s');\n\n        assert.equal(d.offset, 1.0);\n        const r = new music21.note.Rest();\n        assert.equal(r.offset, 0.0);\n\n        s.replace(d, r);\n        assert.equal(d.offset, 0.0);\n        assert.equal(r.offset, 1.0);\n        assert.equal(s.index(r), 1.0);\n        assert.throws(() => { s.index(d) }, /cannot find/, 'd is no longer in s');        \n    });\n    \n    QUnit.test('music21.stream.Stream.duration', assert => {\n        const s = new music21.stream.Stream();\n        assert.equal(s.duration.quarterLength, 0, 'EmptyString QuarterLength');\n\n        s.append(new music21.note.Note('C#5'));\n        assert.equal(s.duration.quarterLength, 1.0, '1 quarter QuarterLength');\n\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.append(n);\n        assert.equal(s.highestTime, 3.0);\n        assert.equal(s.duration.quarterLength, 3.0, '3 quarter QuarterLength');\n\n        s.duration = new music21.duration.Duration(3.0);\n        s.append(new music21.note.Note('D#5'));\n        assert.equal(\n            s.duration.quarterLength,\n            3.0,\n            'overridden duration -- remains'\n        );\n\n        const sc = new music21.stream.Score();\n        const p1 = new music21.stream.Part();\n        const p2 = new music21.stream.Part();\n        const m1 = new music21.stream.Measure();\n        const m2 = new music21.stream.Measure();\n        const n11 = new music21.note.Note();\n        const n12 = new music21.note.Note();\n        n12.duration.type = 'half';\n        const n13 = new music21.note.Note();\n        n13.duration.type = 'eighth'; // incomplete measure\n        m1.append(n11);\n        m1.append(n12);\n        m1.append(n13);\n        const n21 = new music21.note.Note();\n        n21.duration.type = 'whole';\n        m2.append(n21);\n        p1.append(m1);\n        p2.append(m2);\n        sc.insert(0, p1);\n        sc.insert(0, p2);\n        assert.equal(\n            sc.duration.quarterLength,\n            4.0,\n            'duration of streams with nested parts'\n        );\n        assert.equal(\n            sc.flat.duration.quarterLength,\n            4.0,\n            'duration of flat stream with overlapping notes'\n        );\n        n21.duration.type = 'half';\n        assert.equal(\n            sc.duration.quarterLength,\n            3.5,\n            'new music21.duration with nested parts'\n        );\n        assert.equal(\n            sc.flat.duration.quarterLength,\n            3.5,\n            'new music21.duration of flat stream'\n        );\n    });\n\n    QUnit.test('music21.stream.Stream.append', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C4'));\n        assert.equal(s.length, 1);\n\n        const s2 = new music21.stream.Stream();\n        const n1 = new music21.note.Note('C#4');\n        const n2 = new music21.note.Note('D4');\n        const n3 = new music21.note.Note('D#4');\n        n3.duration.type = 'half';\n        const l = [n1, n2, n3];\n        s2.append(l);\n        assert.equal(s2.length, 3);\n        assert.equal(s2.duration.quarterLength, 4.0);\n    });\n    \n    QUnit.test('music21.stream.Stream.insert and offsets', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        const n3 = new music21.note.Note('E5');\n        s.insert(2.0, n3);\n        let n2 = new music21.note.Note('D#5');\n        s.insert(1.0, n2);\n        assert.equal(s.get(0).name, 'C#');\n        assert.equal(s.get(1).name, 'D#');\n        assert.equal(s.get(2).name, 'E');\n        assert.equal(s.get(0).offset, 0.0);\n        assert.equal(s.get(1).offset, 1.0);\n        assert.equal(s.get(2).offset, 2.0);\n        const p = new music21.stream.Part();\n        const m1 = new music21.stream.Measure();\n        const n1 = new music21.note.Note('C#');\n        n1.duration.type = 'whole';\n        m1.append(n1);\n        const m2 = new music21.stream.Measure();\n        n2 = new music21.note.Note('D#'); \n        n2.duration.type = 'whole'; \n        m2.append(n2);\n        p.append(m1);\n        p.append(m2);\n        assert.equal(p.get(0).get(0).offset, 0.0);\n        const pf = p.flat;\n        assert.equal(pf.get(1).offset, 4.0);\n        const pf2 = p.flat; // repeated calls do not change\n        assert.equal(\n            pf2.get(1).offset,\n            4.0,\n            'repeated calls do not change offset'\n        );\n        const pf3 = pf2.flat;\n        assert.equal(\n            pf3.get(1).offset,\n            4.0,\n            '.flat.flat does not change offset'\n        );\n    });\n\n    QUnit.test('music21.stream.Stream insertAndShift', assert => {\n        const s = new music21.stream.Stream();\n        s.insert(0, new music21.note.Note('C4'));\n        s.insert(1, new music21.note.Note('E4'));\n        s.insert(2, new music21.note.Note('F4'));\n        s.insertAndShift(1, new music21.note.Note('D4'));\n        const outListNames = [];\n        const outListOffsets = [];\n        for (const n of s) {\n            outListNames.push(n.name);\n            outListOffsets.push(n.offset);\n        }\n        assert.equal(outListNames[0], 'C');\n        assert.equal(outListOffsets[0], 0.0);\n        assert.equal(outListNames[1], 'D');\n        assert.equal(outListOffsets[1], 1.0);\n        assert.equal(outListNames[2], 'E');\n        assert.equal(outListOffsets[2], 2.0);\n        assert.equal(outListNames[3], 'F');\n        assert.equal(outListOffsets[3], 3.0);\n    });\n\n    QUnit.test('music21.stream.Stream.DOM', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        s.append(new music21.note.Note('D#5'));\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.append(n);\n        const c = s.createNewDOM(100, 50);\n        assert.equal(c.attr('width'), 100, 'stored width matches');\n        assert.equal(c.attr('height'), 50, 'stored height matches');\n    });\n\n    QUnit.test('music21.stream.Stream.getElementsByClass', assert => {\n        const s = new music21.stream.Stream();\n        const n1 = new music21.note.Note('C#5');\n        const n2 = new music21.note.Note('D#5');\n        const r = new music21.note.Rest();\n        const tc = new music21.clef.TrebleClef();\n        s.append(tc);\n        s.append(n1);\n        s.append(r);\n        s.append(n2);\n        let c = s.getElementsByClass('Note');\n        assert.equal(c.length, 2, 'got two notes');\n        assert.equal(c.get(0), n1, 'n1 first');\n        assert.equal(c.get(1), n2, 'n2 second');\n        c = s.getElementsByClass('Clef');\n        assert.equal(c.length, 1, 'got clef from subclass');\n        c = s.getElementsByClass(['Note', 'TrebleClef']);\n        assert.equal(c.length, 3, 'got multiple classes');\n        c = s.getElementsByClass('GeneralNote');\n        assert.equal(c.length, 3, 'got multiple subclasses');\n    });\n    QUnit.test('music21.stream.offsetMap', assert => {\n        const n = new music21.note.Note('G3');\n        const o = new music21.note.Note('A3');\n        const s = new music21.stream.Measure();\n        s.insert(0, n);\n        s.insert(0.5, o);\n        const om = s.offsetMap();\n        assert.equal(om.length, 2, 'offsetMap should have length 2');\n        const omn = om[0];\n        const omo = om[1];\n        assert.equal(omn.element, n, 'omn element should be n');\n        assert.equal(omn.offset, 0.0, 'omn offset should be 0');\n        assert.equal(omn.endTime, 1.0, 'omn endTime should be 1.0');\n        assert.equal(\n            omn.voiceIndex,\n            undefined,\n            'omn voiceIndex should be undefined'\n        );\n        assert.equal(omo.element, o, 'omo element should be o');\n        assert.equal(omo.offset, 0.5, 'omo offset should be 0.5');\n        assert.equal(omo.endTime, 1.5, 'omo endTime should be 1.5');\n    });\n    QUnit.test('music21.stream.Stream appendNewDOM ', assert => {\n        const n = new music21.note.Note('G3');\n        const s = new music21.stream.Measure();\n        s.append(n);\n        s.appendNewDOM(document.body);\n        assert.equal(s.length, 1, 'ensure that should have one note');\n        const n1 = new music21.note.Note('G3');\n        const s1 = new music21.stream.Measure();\n        s1.append(n1);\n        const n2 = new music21.note.Note('G3');\n        s1.append(n2);\n        const n3 = new music21.note.Note('G3');\n        s1.append(n3);\n        const n4 = new music21.note.Note('G3');\n        s1.append(n4);\n        const div1 = s1.editableAccidentalDOM();\n        $(document.body).append(div1);\n    });\n    QUnit.test('music21.stream.Stream makeAccidentals ', assert => {\n        const n = new music21.note.Note('G#3');\n        const n2 = new music21.note.Note('G#3');\n        const n3 = new music21.note.Note('C#4');\n        const c = new music21.chord.Chord(['C3', 'E-3', 'G3', 'G4']);\n        const ks = new music21.key.KeySignature(2);\n        const s = new music21.stream.Measure();        \n        s.keySignature = ks;\n        s.append([n, n2, n3, c]);\n        s.makeAccidentals();\n        assert.ok(n.pitch.accidental.displayStatus);\n        assert.notOk(n2.pitch.accidental.displayStatus);\n        assert.notOk(n3.pitch.accidental.displayStatus);\n        assert.ok(c._notes[0].pitch.accidental);\n        assert.ok(c._notes[0].pitch.accidental.displayStatus);\n        assert.ok(c._notes[1].pitch.accidental.displayStatus);\n        assert.ok(c._notes[2].pitch.accidental.displayStatus);\n        assert.notOk(c._notes[3].pitch.accidental); // perhaps should exist?\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.tie.Tie', assert => {\n        const t = new music21.tie.Tie('start');\n        assert.equal(t.type, 'start', 'Tie type is start');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.voiceLeading.VoiceLeadingQuartet', assert => {\n        const VLQ = music21.voiceLeading.VoiceLeadingQuartet;\n        const sc = new VLQ();\n        assert.ok(sc.classes.includes('VoiceLeadingQuartet'));\n        const N = music21.note.Note;\n        const v1n1 = new N('C4');\n        const v1n2 = new N('B3');\n        const v2n1 = new N('F3');\n        let v2n2 = new N('E3');\n        const vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n        assert.equal(vlq1.vIntervals[0].name, 'P5');\n        assert.equal(vlq1.vIntervals[1].name, 'P5');\n        assert.equal(vlq1.hIntervals[0].name, 'm2');\n        assert.equal(vlq1.hIntervals[1].name, 'm2');\n        assert.ok(!vlq1.noMotion(), 'not no motion');\n        assert.ok(!vlq1.obliqueMotion());\n        assert.ok(vlq1.similarMotion());\n        assert.ok(vlq1.parallelMotion());\n        assert.ok(vlq1.parallelMotion('P5'));\n        assert.ok(vlq1.parallelInterval('P5'));\n        assert.ok(vlq1.parallelFifth());\n        assert.ok(!vlq1.parallelOctave());\n        v2n2 = new N('A3');\n        const vlq2 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n        assert.equal(vlq2.vIntervals[1].name, 'M2');\n        assert.equal(vlq2.hIntervals[1].name, 'M3');\n        assert.ok(!vlq2.similarMotion(), 'not similar motion');\n        assert.ok(vlq2.contraryMotion(), 'contrary motion');\n        assert.ok(vlq2.inwardContraryMotion(), 'inward contrary motion');\n        assert.ok(!vlq2.outwardContraryMotion(), 'not outward contrary motion');\n\n        const vlq3 = new VLQ('C4', 'D4', 'A3', 'F3');\n        assert.ok(vlq3.contraryMotion(), 'contrary motion set w/ strings');\n    });\n    QUnit.test(\n        'music21.voiceLeading.VoiceLeadingQuartet proper resolution',\n        assert => {\n            const VLQ = music21.voiceLeading.VoiceLeadingQuartet;\n            const sc = new VLQ();\n            assert.ok(sc.classes.includes('VoiceLeadingQuartet'));\n            const N = music21.note.Note;\n            let v1n1 = new N('B-4');\n            let v1n2 = new N('A4');\n            let v2n1 = new N('E4');\n            let v2n2 = new N('F4');\n            let vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(vlq1.isProperResolution(), 'd5 resolves inward');\n            v2n2 = new N('D4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(!vlq1.isProperResolution(), 'd5 resolves outward');\n            vlq1.key = 'B-';\n            assert.ok(\n                vlq1.isProperResolution(),\n                'not on scale degrees that need resolution'\n            );\n            v1n1 = new N('E5');\n            v1n2 = new N('F5');\n            v2n1 = new N('B-4');\n            v2n2 = new N('A4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(vlq1.isProperResolution(), 'A4 resolves outward');\n            v2n2 = new N('D4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(!vlq1.isProperResolution(), 'A4 resolves inward');\n            vlq1.key = 'B-';\n            assert.ok(\n                vlq1.isProperResolution(),\n                'not on scale degrees that need resolution'\n            );\n            v1n1 = new N('B-4');\n            v1n2 = new N('A4');\n            v2n1 = new N('C4');\n            v2n2 = new N('F4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(vlq1.isProperResolution(), 'm7 resolves inward');\n            // v2n2 = new N('F3');\n            // vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            // Ryan believes that this is ok now...\n            // assert.ok(!vlq1.isProperResolution(), 'm7 with similar motion');\n\n            v2n2 = new N('F#4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            vlq1.key = 'B-';\n            assert.ok(\n                vlq1.isProperResolution(),\n                'm7 not on scale degrees that need resolution'\n            );\n            vlq1.key = 'F';\n            assert.ok(\n                !vlq1.isProperResolution(),\n                'm7 on scale degrees that need resolution'\n            );\n\n            v1n1 = new N('F5');\n            v1n2 = new N('G5');\n            v2n1 = new N('C4');\n            v2n2 = new N('C4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(\n                !vlq1.isProperResolution(),\n                'P4 must move down or remain constant'\n            );\n            v1n2 = new N('E5');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(\n                vlq1.isProperResolution(),\n                'P4 moves down: ' + vlq1.v1n1.ps + vlq1.v1n2.ps\n            );\n        }\n    );\n}\n","import articulations from './moduleTests/articulations.js';\nimport base from './moduleTests/base.js';\nimport beam from './moduleTests/beam.js';\nimport chord from './moduleTests/chord.js';\nimport clef from './moduleTests/clef.js';\nimport common from './moduleTests/common.js';\nimport duration from './moduleTests/duration.js';\nimport dynamics from './moduleTests/dynamics.js';\nimport figuredBass from './moduleTests/figuredBass.js';\nimport interval from './moduleTests/interval.js';\nimport key from './moduleTests/key.js';\nimport meter from './moduleTests/meter.js';\nimport note from './moduleTests/note.js';\nimport pitch from './moduleTests/pitch.js';\nimport prebase from './moduleTests/prebase.js';\nimport roman from './moduleTests/roman.js';\nimport scale from './moduleTests/scale.js';\nimport sites from './moduleTests/sites.js';\nimport stream from './moduleTests/stream.js';\nimport tie from './moduleTests/tie.js';\nimport voiceLeading from './moduleTests/voiceLeading.js';\n\nconst allTests = {\n    articulations,\n    base,\n    beam,\n    chord,\n    clef,\n    common,\n    duration,\n    dynamics,\n    figuredBass,\n    interval,\n    key,\n    meter,\n    note,\n    pitch,\n    prebase,\n    roman,\n    scale,\n    sites,\n    stream,\n    tie,\n    voiceLeading,\n};\nif (typeof window !== undefined) {\n    window.allTests = allTests;\n}\nexport default allTests;\n"],"names":["ExtendableError","message","name","constructor","Error","captureStackTrace","stack","Music21Exception","StreamException","debug","common","merge","mergeRecursive","destination","source","undefined","p","hasOwnProperty","call","Object","e","range","common_range","start","stop","step","count","Math","ceil","Array","apply","map","i","mixin","common_mixin","OtherParent","thisClassOrObject","proto","getPrototypeOf","classProto","key","keys","aggregation","baseClass","mixins","base","args","forEach","copyProps","target","getOwnPropertyNames","concat","getOwnPropertySymbols","prop","match","defineProperty","getOwnPropertyDescriptor","prototype","posMod","a","b","statisticalMode","length","modeMap","maxEl","maxCount","el","fromRoman","num","inputRoman","toUpperCase","subtractionValues","nums","ints","places","c","includes","value","indexOf","nextValue","push","summation","n","toRoman","result","floor","repeat","makeSVGright","tag","attrs","document","createElementNS","k","setAttribute","ordinalAbbreviation","plural","post","valueHundreths","valueMod","rationalize","ql","epsilon","maxDenominator","abs","round","numerator","denominator","stripPx","str","pxIndex","slice","parseInt","urlParam","replace","regex","RegExp","results","exec","location","search","decodeURIComponent","arrayEquals","a1","a2","_singletonCounter","SingletonCounter","setWindowVisibilityWatcher","callback","hidden","addEventListener","windowFocusChanged","onfocusin","onfocusout","window","onpageshow","onpagehide","onfocus","onblur","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","event","callbackState","type","initialState","visibilityState","initialStateEvent","urls","css","webResources","midiPlayer","soundfontUrl","prebase","ProtoM21Object","_storedClasses","isProtoM21Object","isMusic21Object","_cloneCallbacks","deep","babelHelpers.extends","create","ret","get","set","babelHelpers.typeof","clone","TypeError","console","log","testClass","classes","classList","thisConstructor","maxLinks","duration","typeFromNumDict","quarterTypeIndex","ordinalTypeFromNum","vexflowDurationArray","Duration","_quarterLength","_dots","_durationNumber","_type","_tuplets","quarterLength","cloneCallbacksTupletFunction","tupletKey","obj","newTuplets","newTuplet","typeNumber","powerOfTwo","pow","dotsNum","dotMultiplier","durationMultiplier","undottedQuarterLength","dottedMultiplier","unTupletedQl","tupletCorrectedQl","tuplet","tupletMultiplier","_findDots","tupletRatio","ratioRat","t","Tuplet","appendTuplet","skipUpdateQl","frozen","updateQlFromFeatures","numDots","updateFeaturesFromQl","typeIn","vd","dots","numberNotesActual","numberNotesNormal","durationActual","durationNormal","bracket","placement","tupletActualShow","tupletNormalShow","actual","normal","lengthActual","totalTupletLength","numActual","numNormal","ordStr","toString","sites","SitesException","SiteRef","isDead","classString","globalSiteIndex","siteIndex","siteWeakref","WeakMap","ref","newSite","_NoneSiteRef","GLOBAL_SITE_STATE_DICT","getId","has","newId","Sites","siteDict","Map","_siteIndex","_lastID","checkSite","unused_key","siteRef","site","newFirst","keyVal","sort","reverse","innerList","idKey","updateNotAdd","tempSiteRef","delete","sortByCreationTime","priorityTarget","excludeNone","keyRepository","_keysByTime","from","priorityId","splice","pop","yieldSites","attrName","className","options","params","callerFirst","getElementMethod","memo","objs","classNameIsStr","objId","getContextByClass","size","Music21Object","keywords","classSortOrder","activeSite","offset","_naiveOffset","_activeSiteStoredOffset","_duration","_priority","groups","isStream","Music21Object_cloneCallbacks_activeSite","keyName","newObj","self","Music21Object_cloneCallbacks_sites","stringReturns","elementOffset","setElementOffset","payloadExtractor","useSite","flatten","positionStart","lastElement","indexOffset","_elementOffsets","thisElement","_elements","matchClass","isClassOrSubclass","potentialElement","contextSites","returnSortTuples","searchType","contextEl","offsetAppend","followDerivation","recursionType","sortByCreationType","siteObj","offsetInStream","newOffset","positionInStream","newParams","topLevel","inStreamPos","recurType","inStreamOffset","newDuration","articulations","Articulation","vexflowModifier","setPosition","dynamicScale","lengthScale","vfa","Vex","Flow","LengthArticulation","DynamicArticulation","PitchArticulation","TimbreArticulation","Accent","StrongAccent","Staccato","Staccatissimo","Spiccato","Marcato","Tenuto","audioSearch","fftSize","AudioContextCaller","AudioContext","webkitAudioContext","_audioContext","animationFrameCallbackId","defineProperties","audioContext","MIDI","WebAudio","getContext","globalAudioContext","ac","getUserMedia","dictionary","error","alert","userMediaStarted","mediaStream","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","audio","mandatory","optional","sampleBuffer","currentAnalyser","audioStream","Float32Array","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","connect","animateLoop","minFrequency","maxFrequency","time","getFloatTimeDomainData","frequencyDetected","autoCorrelate","sampleRate","retValue","sampleCallback","requestAnimationFrame","pitchSmoothingSize","lastPitchClassesDetected","lastPitchesDetected","lastCentsDeviationsDetected","smoothPitchExtraction","frequency","shift","midiNumDiffFromFrequency","midiNum","centsOff","mostCommonPitchClass","pitchesMatchingClass","centsMatchingClass","mostCommonPitch","totalSamplePoints","totalSample","j","weight","unused_midiNum","unused_centsOff","buf","SIZE","MAX_SAMPLES","best_offset","best_correlation","rms","foundGoodCorrelation","correlations","val","sqrt","lastCorrelation","correlation","offsetFrequency","midiNumFloat","Recorder","cfg","config","bufferLen","recording","currCallback","frequencyCanvasInfo","id","width","height","canvasContext","animationFrameID","waveformCanvasInfo","analyserNode","polyfillNavigator","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","audioStreamConnected","s","stream","inputPoint","createGain","audioInput","connectSource","zeroGain","gain","context","setNode","workerBlob","Blob","recorderWorkerJs","workerURL","URL","createObjectURL","worker","Worker","onmessage","blob","data","revokeObjectURL","postMessage","command","node","onaudioprocess","buffer","inputBuffer","getChannelData","numInputChannels","numOutputChannels","createScriptProcessor","createJavaScriptNode","cb","isMono","setupDownload","Date","now","exportWAV","filename","elementId","url","webkitURL","link","getElementById","href","download","AnalyserNode","uint8","Uint8Array","array","getByteTimeDomainData","imax","canvas","SPACING","BAR_WIDTH","numBars","freqByteData","frequencyBinCount","getByteFrequencyData","clearRect","fillStyle","lineCap","multiplier","magnitude","fillRect","updateAnalysers","buffers","amp","min","max","datum","channels","numFrames","audioBuffer","createBuffer","channel","thisChannelBuffer","createBufferSource","audioRecording","beam","validBeamTypes","continue","partial","beamableDurationTypes","Beam","direction","independentAngle","number","Beams","srcList","beamsList","isRest","fill","beamLast","beamNext","allTypes","getTypes","hasStart","hasStop","bThis","bNext","bThisNum","getNumbers","thisNum","thisBeam","getByNumber","nextBeam","bPrev","prevBeam","feathered","level","setAll","numbers","beamObj","x","types","splitit","split","pitch","Accidental","accName","_name","_alter","_modifier","_unicodeModifier","displayType","displayStatus","toLowerCase","alter","modifier","m","nameToMidi","C","D","E","F","G","A","B","nameToSteps","stepsToName","midiToName","Pitch","pn","_step","_octave","_accidental","spellingIsInferred","ps","nameWithOctave","inPlace","directionInt","octaveStored","octave","diatonicNoteNum","accidental","microtone","_getEnharmonicHelper","clefObj","tempPitch","convertPitchToTreble","accidentalType","outName","o","nn","tempAccidental","storedOctave","pc","newDNN","accidentalAlter","unicodeModifier","unicodeName","interval","Direction","DESCENDING","OBLIQUE","ASCENDING","IntervalDirectionTerms","MusicOrdinals","GenericInterval","gi","directed","undirected","isSkip","isDiatonicStep","isStep","isUnison","tempSteps","tempOctaves","simpleUndirected","undirectedOctaves","semiSimpleUndirected","octaves","simpleDirected","semiSimpleDirected","perfectable","niceName","simpleNiceName","semiSimpleNiceName","staffDistance","mod7inversion","mod7","specifier","DiatonicInterval","pitch2","oldDiatonicNum","distanceToMove","newDiatonicNumber","convertDiatonicNumberToStep","newStep","newOctave","IntervalSpecifiersEnum","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","DBLAUG","DBLDIM","TRPAUG","TRPDIM","QUADAUG","QUADDIM","IntervalNiceSpecNames","IntervalPrefixSpecs","IntervalOrderedPerfSpecs","IntervalPerfSpecifiers","QUADDMIN","IntervalPerfOffset","IntervalOrderedImperfSpecs","IntervalSpecifiers","IntervalMajOffset","IntervalSemitonesGeneric","IntervalAdjustPerfect","P","AA","AAA","AAAA","d","dd","ddd","dddd","IntervalAdjustImperf","M","generic","diatonicDirectionNiceName","simpleName","semiSimpleName","directedName","directedNiceName","directedSimpleName","directedSimpleNiceName","directedSemiSimpleName","directedSemiSimpleNiceName","semiSimpleNameName","specificName","orderedSpecifierIndex","invertedOrderedSpecIndex","invertedOrderedSpecifier","octaveOffset","semitonesStart","specName","semitonesAdjust","semitones","ChromaticInterval","fullIntervalObject","Interval","getChromatic","transposePitch","cents","mod12","intervalClass","isChromaticStep","useImplicitOctave","pps","newPitch","IntervalStepNames","dn","stepNumber","stepName","restArgs","arg0","gI","dI","diatonic","chromatic","n1","n2","gInt","notesToGeneric","cInt","notesToChromatic","intervalsToDiatonic","reinit","diatonicType","sn","consonantNames","halfStepsToFix","intervalFromGenericAndChromatic","_getSpecifierFromGenericChromatic","dInt","p1","p2","staffDist","genDist","convertStaffDistanceToInterval","noteVals","normalSemis","theseSemis","semisRounded","note","noteheadTypeNames","stemDirectionNames","Lyric","text","syllabic","applyRaw","identifier","lyricConnector","_number","setTextAndSyllabic","_identifier","style","strokeStyle","fontFamily","fontSize","fontWeight","rawText","GeneralNote","isChord","volume","activeVexflowNote","expressions","lyrics","tie","lyricNumber","lyricIdentifier","maxLyrics","newLyric","foundLyric","thisLyric","clef","vfn","addDotToAll","stemDirection","hasStem","staveDNNSpacing","stave","spacing_between_lines_px","midLine","lowestLine","absDNNfromCenter","absOverOctave","getStemLength","stemHeight","setStemLength","tempo","nextElement","inst","instrument","midiVolume","midiChannel","milliseconds","midNum","midi","stopTime","noteOn","noteOff","_notes","isNaN","NotRest","notehead","noteheadFill","noteheadColor","noteheadParenthesis","beams","Note","isNote","DNNfromCenter","renderOptions","setStemDirectionFromClef","vfd","vexflowDuration","vexflowKey","vexflowName","vfnStemDirection","StaveNote","STEM_DOWN","STEM_UP","stem_direction","vexflowAccidentalsAndDisplay","addAccidental","art","addArticulation","vexflow","exp","setStyle","Rest","lineShift","color","keyLine","staffLines","ls","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","monad","diad","trichord","tetrachord","pentachord","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50","hexachord","septachord","octachord","nonachord","decachord","undecachord","dodecachord","FORTE","card_1","card_2","card_3","card_4","card_5","card_6","card_7","card_8","card_9","card_10","card_11","card_12","SCDICT","TNMAX","TNIMAX","TNREF","SCREF","forteIndexToInversionsAvailable","card","index","morris","_chordTableAddress","cardinality","forteClass","inversion","pcOriginal","_validateAddress","address","inversionsAvailable","addressToTransposedNormalForm","i2","String","addressToPrimeForm","addressToIntervalVector","intervalVectorToAddress","vector","sc","addressToZAddress","unused_inversion","z","zReal","isArray","zAddress","addressToCommonNames","addressNew","refDict","addressToForteName","classification","iStr","seekChordTablesAddress","pcSet","orderedPitchClasses","candidates","rot","testSetOrig","rotRemainder","testSetOriginalPC","testSet","zeroTransposed","testSetInvert","testSetInvertOriginalPC","candidateTuple","matchedPCOriginal","indexCandidate","dataLine","dataLinePcs","candidate","candidateInversion","candidateOriginalPC","chord","Chord","notes","_overrides","_cache","_chordTablesAddress","_chordTablesAddressNeedsUpdating","add","sortPitches","other","zRelationAddress","chordTables","chordTablesAddress","hasZRelation","addresses","thisAddress","prime","maxDNNfromCenter","pA","pitches","runSort","noteObj","pitchObj","noteObj2","stepsFound","nonDuplicatingPitches","closedChord","newroot","root","removeDuplicatePitches","closedPitches","indexOfPitchesWithPerfectlyStackedThirds","testSteps","currentListOfThirds","tsIndex","chordStepPitch","getChordStep","hasFalse","newRoot","chordStep","testRoot","tempChordStep","lowest","uniqueChord","thirdST","semitonesFromChordStep","fifthST","isSeventhOfType","intervalArray","third","fifth","seventh","thisPitch","thisInterval","isMajorTriad","isDominantSeventh","isMinorTriad","bass","chordStepsToInversions","testNote","pitchKeys","tn","thisPitches","testRootDNN","tempPitches","addNote","warn","pcGroup","pitchClass","cta","ctn","enharmonicTests","isDiminishedTriad","isAugmentedTriad","out","test","chordDefinitions","major","minor","diminished","augmented","lowestLines","treble","soprano","alto","tenor","percussion","Clef","octaveChange","lowestLineTrebleOffset","lowestLineDifference","TrebleClef","Treble8vbClef","Treble8vaClef","BassClef","AltoClef","TenorClef","SopranoClef","MezzoSopranoClef","PercussionClef","bestClef","st","stFlat","flat","totalNotes","totalPitch","averageHeight","clefFromString","clefString","octaveShift","xnStr","trim","thisType","lineNum","arrayEqual","every","ix","Bass8vbClef","dynamics","shortNames","longNames","ppp","pp","mp","mf","f","fp","sf","ff","fff","englishNames","dynamicStrToScalar","None","pppp","ffff","Dynamic","_value","_volumeScalar","longName","englishName","Expression","vfe","Fermata","shorthandNotation","Notation","notationColumn","figureStrings","origNumbers","origModStrings","modifierStrings","_parseNotationColumn","_translateToLonghand","modifiers","figures","_getModifiers","_getFigures","nc","figure","numberString","modifierString","oldNumbers","newNumbers","oldModifierStrings","newModifierStrings","oldNumbersString","temp","newModifierString","modifierStringIndex","Modifier","Figure","specialModifiers","bb","bbb","bbbb","_toAccidental","modStr","pitchNameToAlter","pitchToAlter","modifyPitch","newAccidental","newAlter","figuredBass","jp","jsonpickle","unpickler","fromPython","Converter","knownUnparsables","handlers","post_restore","_qtrLength","ts","_numerator","displaySequence","_denominator","currentPart","lastClef","lastKeySignature","lastTimeSignature","streamPostRestore","bind","_storedElementOffsetTuples","_clef","_keySignature","_timeSignature","_py_class","streamPart","appendEl","insertAtStart","thisClass","kn","unparsable","timeSignature","keySignature","append","insert","jss","outStruct","decode","Scale","AbstractScale","_net","tonicDegree","octaveDuplicating","deterministic","_alteredDegrees","_oneOctaveRealizationCache","pitchList","pitchListReal","pLast","intervalList","unused_stepOfPitch","unused_minPitch","unused_maxPitch","unused_direction","unused_reverse","intV","pitchReference","unused_nodeName","nodeDegreeTarget","zeroIndexDegree","thisIntv","pitchTarget","unused_comparisonAttribute","realizedPitches","getRealization","realizedNames","realizedIndex","AbstractDiatonicScale","mode","dominantDegree","_buildNetwork","relativeMajorDegree","relativeMinorDegree","intVStr","AbstractHarmonicMinorScale","AbstractAscendingMelodicMinorScale","ConcreteScale","tonic","abstract","degree","unused_equateTermini","getPitchFromNodeDegree","getRelativeNodeDegree","DiatonicScale","MajorScale","MinorScale","HarmonicMinorScale","AscendingMelodicMinorScale","SimpleDiatonicScale","scaleSteps","lastPitch","di","ii","ScaleSimpleMajor","ScaleSimpleMinor","minorType","scale","modeSharpsAlter","dorian","phrygian","lydian","mixolydian","locrian","convertKeyStringToMusic21KeyString","textString","endsWith","startsWith","KeySignature","sharps","_sharps","_alteredPitchesCache","flatMapping","sharpMapping","tempSharps","tempName","majorName","aps","alteredPitches","transInterval","transTimes","transStr","startPitch","pKeep","Key","lowerCase","sharpsArray","sharpsIndex","modeShift","_scale","getScale","scaleType","getPitches","pitchFromDegree","getScaleDegreeFromPitch","isConcrete","Harmony","_writeAsChord","_roman","chordStepModifications","_degreesList","_key","_figure","parseFigure","_parseFigure","updatePitches","_updatePitches","findFigure","newFigure","keyOrScale","harmony","Instrument","instrumentName","partId","partName","partAbbreviation","instrumentId","instrumentAbbreviation","midiProgram","_midiChannel","lowestNote","highestNote","transpostion","inGMPercMap","soundfontFn","find","usedChannels","startChannel","ch","maxMidi","autoAssignMidiChannel","info","fn","midiNumber","instrument_find","miditools","transposeOctave","Event","timing","data1","data2","data3","midiCommand","midiNote","velocity","m21n","maxDelay","heldChordTime","heldChordNotes","timeOfLastNote","_baseTempo","metronome","enumerable","clearOldChords","nowInMs","sendOutChord","setTimeout","makeChords","jEvent","music21Note","foundNote","chordNoteList","appendObject","quantizeLastNote","callBacks","raw","general","sendToMIDIjs","nowInMS","msSinceLastNote","normalQuarterNoteLength","numQuarterNotes","roundedQuarterLength","midiEvent","loadedSoundfonts","postLoadCallback","soundfont","$","remove","isFirefox","InstallTrigger","isAudioTag","technology","instrumentObj","programChange","loadSoundfont","waitThenCall","ready","body","loadPlugin","onsuccess","MidiPlayer","player","Players","PlayInstance","speed","$playDiv","where","$where","jquery","$controls","$playPause","playPng","$stop","stopPng","on","pausePlayStop","stopButton","$time","$timePlayed","$capsule","$timeRemaining","src","playing","pause","pausePng","resume","b64data","timeWarp","m21midiplayer","loadFile","fileLoaded","updatePlaying","$d","timePlayed","timeRemaining","timeCursor","eventjs","cancel","currentTime","endTime","state","timeFormatting","minutes","seconds","setAnimation","percent","end","songFinished","innerHTML","keyboard","callbacks","scaleFactor","parent","svgObj","noteNameSvgObj","keyStyle","keyClass","startX","keyattrs","y","class","rx","ry","keyDOM","strokeColor","getAttribute","cx","stroke","cy","r","circleDom","appendChild","labelOctaves","idStr","textfill","textattrs","textDom","textNode","createTextNode","parentNode","removeChild","WhiteKey","BlackKey","Keyboard","whiteKeyWidth","_defaultWhiteKeyWidth","_defaultBlackKeyWidth","keyObjects","markC","showNames","showOctaves","endPitch","_startDNN","_endDNN","hideable","scrollable","click","keyClicked","clickHandler","sharpOffsets","oldSVG","svgParent","svgDOM","createSVG","replaceChild","wrapScrollable","appendHideableKeyboard","keyRect","thisKeyObject","storedStyle","fillColor","tempP","currentIndex","keyboardDiatonicLength","totalWidth","heightString","movingPitch","blackKeys","thisKeyboardObject","wki","wk","whitekeyCallbacksClick","wkSVG","makeKey","bk","blackKeyClicksCallback","offsetFromWhiteKey","bkSVG","bki","markMiddleC","markNoteNames","midC","addCircle","removeNoteNames","keyObj","addNoteName","removeNoteName","$wrapper","display","$bDown","redrawSVG","$bUp","$kWrapper","keyboardSVG","$container","$bInside","$b","background","triggerToggleShow","$explain","padding","$t","$parent","$k","jazzHighlight","intensityRGB","normalizedVelocity","intensity","meter","TimeSignature","meterString","_beatGroups","_overwrittenBeatCount","_overwrittenBeatDuration","ratioString","tempBeatGroups","numBeats","beatValue","beatsToEighthNoteRatio","beatDuration","beatsFromStart","srcStream","measureStartOffset","naiveBeams","removeSandwichedUnbeamables","fixBeamsOneElementDepth","depth","beamNumber","dur","pos","startNext","isLast","isFirst","beamPrevious","offsetToSpan","archetypeSpanStart","archetypeSpanEnd","archetypeSpanNextStart","beamType","getTypeByNumber","setByNumber","sanitizePartialBeams","mergeConnectingPartialBeams","beatGroups","vfBeatGroups","bg","Fraction","meterList","computeBeatGroups","newGroups","overwrite","barDuration","beatCount","RenderOptions","defaultOptions","displayClef","displayTimeSignature","displayKeySignature","top","left","overriddenWidth","naiveHeight","systemIndex","partIndex","measureIndex","systemMeasureIndex","systemPadding","naiveSystemPadding","maxSystemWidth","rightBarline","staffConnectors","staffPadding","events","dblclick","startNewSystem","startNewPage","showMeasureNumber","vfShow","RenderStack","voices","streams","textVoices","voiceToStreamMapping","tickablesByStave","knownStaves","allTickables","thisStaveIndex","currentStaveHolder","Renderer","div","rendererType","$div","activeFormatter","_vfRenderer","_ctx","beamGroups","stacks","vfTies","systemBreakOffsets","vfTuplets","isScorelike","isPartlike","hasSubStreams","prepareScorelike","preparePartlike","prepareArrivedFlat","formatMeasureStacks","drawTies","drawMeasureStacks","drawBeamGroups","drawTuplets","parts","subStream","addStaffConnectors","measureList","measures","prepareMeasure","prepareTies","hasVoices","prepareFlat","rendOp","voiceIndex","voiceStream","optionalStave","optional_renderOp","makeAccidentals","renderStave","activeVFStave","voice","getVoice","hasLyrics","getLyricVoice","optional_rendOp","ctx","newStave","setClefEtc","setContext","draw","vft","pf","notesAndRests","thisNote","nextNote","onSameSystem","sbI","thisSystemBreak","vfTie","StaveTie","first_note","last_note","first_indices","last_indices","vfTie1","vfTie2","vexflowNotes","vexflowVoice","setStave","addTickables","textVoice","vexflowLyrics","formatter","formatVoiceGroup","applyFormatterInformationToNotes","autoBeam","Formatter","maxGlyphStart","getNoteStartX","setNoteStartX","staveTickables","joinVoices","formatToStave","associatedStream","vexflowBeatGroups","applyAndGetBeams","estimateStaffLength","Stave","setStafflines","setMeasure","ottava","addClef","ksVFName","addKeySignature","addTimeSignature","bl","barlineMap","single","double","vxBL","setEndBarType","Barline","vexflowStave","setNumLines","line_config","visible","activeTuplet","activeTupletLength","activeTupletVexflowNotes","thisEl","vexflowNote","tuplets","tupletOptions","num_notes","notes_occupied","vfTuplet","setRatioed","getTextNote","font","lyricObj","TextNote","setLine","setJustification","Justification","LEFT","applyTickMultiplier","lyricsObjects","lyricsArray","addConnector","firstLyric","family","tempQl","connector","totalLength","num1024","vfv","Voice","num_beats","beat_value","resolution","RESOLUTION","setMode","Mode","SOFT","connectorType","connectorMap","brace","StaveConnector","BRACE","SINGLE","DOUBLE","BRACKET","numParts","firstPart","lastPart","firstPartMeasures","lastPartMeasures","numMeasures","mIndex","thisPartMeasure","lastPartMeasure","topVFStaff","bottomVFStaff","thisPartVoice","getElementsByClass","lastPartVoice","scTypeM21","scTypeVF","staffConnectorsMap","setType","recursive","storedVexflowStave","removeFormatterInformation","noteOffsetLeft","start_x","glyph_start_x","getBottomY","nextTicks","nTicks","ticks","formatterNote","tickContexts","getAbsoluteX","backend","Backends","CANVAS","SVG","resize","attr","vfr","vfRenderer","Stream","isMeasure","_instrument","_autoBeam","activeVFRenderer","_tempo","_stopPlaying","_allowMultipleSimultaneousPlays","changedCallbackFunction","DOMChangerFunction","canvasOrSVGElement","currentTarget","findNoteForClick","clickedDiatonicNoteNum","noteChanged","Symbol","iterator","retainContainers","tempEls","offsetShift","elFlat","_getFlatOrSemiFlat","newSt","elements","elCopy","elOrElList","elOffset","lastQL","err","testOffset","elementOrNone","element","amountToShift","shiftingOffsets","targetOrList","firstMatchOnly","shiftOffsets","recurse","targetList","indexInStream","replacement","allDerivated","addElement","meterStream","refStreamOrTimeRange","searchContext","innerBarline","finalBarline","voiceCount","offsetMap","oMax","measureCount","mStart","Measure","thisTimeSignature","oneMeasureLength","ob","getOffsetBySite","mEnd","oNew","insertStream","returnObj","mColl","noteStream","durList","durSum","reduce","total","barQL","paddingLeft","highestTime","getBeams","thisBeams","lyric","each","group","thisOffsetMap","OffsetMap","offsetStart","offsetEnd","includeEndBoundary","mustFinishInSpan","mustBeginInSpan","includeElementsThatEndAtStart","zeroLengthSearch","isElementOffsetInRange","elementEnd","elementIsZeroLength","retStream","elStream","otherElements","getElementsByOffset","extendableStepList","stepNames","stepAlter","accidentalByStep","lastOctaveStepList","tempOctaveStepDict","extend","lastOctavelessStepDict","lastStepDict","_makeAccidentalForOnePitch","chordNote","preserveEvents","oldEvents","resetRenderOptions","canvasOrSVG","renderVexflow","DOMContains","contains","tagName","makeBeams","render","setRenderInteraction","ignoreSystems","staffHeight","numSystems","scoreHeight","maxLength","thisLength","done","startNote","startNoteIndex","currentNoteIndex","flatEls","lastNoteIndex","thisStream","playNext","playDuration","playMidi","elementType","createNewDOM","setSubstreamRenderOptions","renderElementType","$newCanvasOrDIV","addClass","computedWidth","computedHeight","estimateStreamHeight","createPlayableDOM","createDOM","$newSvg","appendElement","appendNewDOM","$appendElement","svgOrCanvasBlock","preserveSvgSize","replaceDOM","$oldSVGOrCanvas","hasClass","svgBlock","replaceWith","canvasOrDiv","$svg","playFunc","playStream","proxy","setRenderInteractionProxy","eventType","eventFunction","off","windowReflowStart","storedVFStave","subStreams","svg","getUnscaledXYforDOM","xClick","yClick","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","xPx","yPx","getScaledXYforDOM","pixelScaling","yPxScaled","xPxScaled","recursiveGetStoredVexflowStave","lineSpacing","linesAboveStaff","space_above_staff_ln","notesFromTop","notesAboveLowestLine","num_lines","allowablePixels","allowBackup","backupMaximum","getStreamFromScaledXandSystemIndex","backup","minDistanceSoFar","leftDistance","rightDistance","minDistance","diatonicNoteNumFromScaledY","noteElementFromScaledX","activeNote","redrawDOM","editableAccidentalDOM","$svgDiv","buttonDiv","getAccidentalToolbar","minAccidental","maxAccidental","$siblingSvg","clickEvent","$useSvg","$searchParent","maxSearch","$buttonDiv","acc","$button","$bPlay","$bStop","stopPlayStream","jSvg","callingStream","jSvgNow","jSvgParent","newWidth","svgWidth","resizeSvgTo","resizeTO","clearTimeout","resizeToTimeout","trigger","triggerResizeOnCreateSvg","$window","doResize","newTempo","newInstrument","newClef","newKeySignature","newTimeSignature","ab","baseMaxSystemWidth","newSW","newElements","highestOffsetSoFar","tempInsert","thisElOffset","Part","systemHeight","measureWidths","elRendOp","tempM","getMeasureWidths","systemCurrentWidths","systemBreakIndexes","lastSystemBreak","startLeft","currentLeft","currentRight","currentSystemIndex","leftSubtract","newLeftSubtract","oldWidth","currentSystemMultiplier","currentSystemWidth","newLeft","newTop","currentMeasureIndex","currentMeasureLeft","scaledYRelativeToSystem","systemIndexAndScaledY","gotMeasure","right","bottom","Score","partSpacing","currentPartNumber","currentPartTop","evenPartMeasureSpacing","ignoreNumSystems","currentScoreHeight","fixSystemInformation","tempPart","maxMeasureWidths","measureWidthsArrayOfArrays","maxFound","scaledYFromSystemTop","scaledYinPart","rightPart","measureStacks","maxMeasureWidth","thisMeasureWidth","measureNewWidth","part","measure","layout","makeLayoutFromScore","score","containerWidth","partZero","layoutScore","LayoutScore","currentPage","Page","measureStart","measureEnd","currentSystem","System","currentSystemNumber","currentStaves","staffMaker","staffHolder","pNum","staff","Staff","staffNumber","systemNumber","scoreLayout","_width","pageId","systemId","staffId","units","pageNumber","systemStart","systemEnd","pageLayout","systemLayout","optimized","inheritedHeight","staffLayout","VALID_TIE_TYPES","Tie","newType","DEFAULTS","divisionsPerQuarter","hyphenToCamelCase","firstLetter","seta","m21El","xmlEl","attributeName","transform","$matchEl","children","contents","eq","ScoreParser","xmlText","xmlUrl","$xmlRoot","definesExplicitSystemBreaks","definesExplicitPageBreaks","mxScorePartDict","m21PartObjectsById","partGroupList","musicXmlVersion","xmlDoc","textStatus","scoreFromDOMTree","parseXML","xmlRootToScore","$mxScore","inputM21","parsePartList","$p","$mxScorePart","xmlPartToPart","$mxPart","parser","PartParser","parse","mxPartList","partListElement","$partListElement","atSoundingPitch","staffReferenceList","lastMeasureWasShort","lastMeasureOffset","lastClefs","activeTuplets","maxStaves","lastMeasureNumber","lastNumberSuffix","multiMeasureRestsToCapture","activeMultimeasureRestSpanner","activeInstrument","firstMeasureParsed","$activeAttributes","lastDivisions","appendToScoreAfterParse","lastMeasureParser","parseXmlScorePart","parseMeasures","mxMeasure","$mxMeasure","xmlMeasureToMeasure","measureParser","MeasureParser","setLastMeasureInfo","adjustTimeAttributesFromMeasure","numberSuffix","mHighestTime","mOffsetShift","$mxMeasureElements","divisions","transposition","staffReference","useVoices","voicesById","voiceIndices","Set","staves","attributesAreInternal","measureNumber","staffLayoutObjects","$mxNoteList","$mxLyricList","nLast","chordVoice","fullMeasureRest","restAndNoteCount","rest","parseIndex","offsetMeasureNote","attributeTagsToMethods","musicDataMethods","attributes","parseMeasureAttributes","$c","$mxObj","methName","$mxNote","nextNoteIsChord","$mxObjNext","offsetIncrement","xmlToSimpleNote","xmlToRest","insertInMeasureOrVoice","xmlToChord","freeSpanners","xmlToPitch","xmlNoteToGeneralNoteHelper","$mxPitch","$mxAlter","accAlter","parseFloat","$mxAccidental","accObj","xmlToAccidental","$mxRest","xmlToDuration","xmlToTie","mxDuration","qLen","noteDivisions","mxType","durationType","allTies","$t0","$mxElement","parseMeasureNumbers","mNumRaw","mNum","$mxAttributes","mxSub","$mxSub","$mxTime","xmlToTimeSignature","insertIntoMeasureOrVoice","$mxClef","xmlToClef","sign","line","clefOctaveChange","$coc","$mxKey","keySig","xmlToKeySignature","ks","musicxml","roman","figureShorthands","bb7b5b3","bb7b53","b7b5b3","functionalityScores","I","V7","V","V65","I6","V6","V43","I64","IV","i6","viio7","V42","viio65","viio6","ii65","ii43","ii42","IV6","ii6","VI","vi","viio","iio","iio42","bII6","iio43","iio65","III","VII","VII7","IV65","IV7","iii","iii6","vi6","expandShortHand","shorthand","shorthandGroups","shGroupOut","sh","correctSuffixForChordQuality","chordObj","inversionString","fifthType","qualityName","seventhType","romanToNumber","RomanNumeral","keyStr","_parsingComplete","primaryFigure","secondaryRomanNumeral","secondaryRomanNumeralKey","pivotChord","scaleCardinality","caseMatters","scaleDegree","frontAlterationString","frontAlterationTransposeInterval","frontAlterationAccidental","romanNumeralAlone","impliedQuality","impliedScale","scaleOffset","useImpliedScale","bracketedAlterations","omittedSteps","followsKeyChange","_functionalityScore","workingFigure","useScale","_correctForSecondaryRomanNumeral","_parseOmittedSteps","_parseBracketedAlterations","_parseFrontAlterations","_parseRNAloneAmidstAug6","_setImpliedQualityFromString","_tempRoot","_fixMinorVIandVII","expandedFigure","figuresNotationObj","numbersArr","_alterationRegex","alteration","innerAlteration","alterNotation","alterPitch","fati","newFati","_romanNumeralAloneRegex","_augmentedSixthRegex","rm","a6match","bassScaleDegree","bassScaleDegreeFromNotation","bassPitch","numberNotes","thisScaleDegree","pitchName","modifyPitchName","newNewPitch","newPitches","_matchAccidentalsToQuality","omittedPitches","thisCS","_correctBracketedPitches","notationObject","cDNN","tempChord","rootDNN","staffDistanceFromBassToRoot","bassSD","correctSemitones","_findSemitoneSizeForQuality","chordStepsToExamine","thisChordStep","thisCorrect","thisSemis","correctedSemis","faultyPitch","secondaryFigure","secondaryMode","quality","thisStep","matchAlteration","matchDegree","tonicName","inversionName","fullChordName","suffix","degreeName","tonicDisplay","chordStr","tonicPitch","diffRootToTonic","defaultTempoValues","larghissimo","largamente","grave","largo","lento","adagio","slow","langsam","larghetto","adagietto","andante","andantino","maestoso","moderato","moderate","allegretto","animato","allegro","fast","schnell","allegrissimo","vivace","vivacissimo","presto","prestissimo","baseTempo","Metronome","tempoInt","numBeatsPerMeasure","minTempo","maxTempo","beat","chirpTimeout","silent","flash","tempoRanges","tempoIncreases","flashColor","$metronomeDiv","fadeOut","beatLength","silentFadeOut","fadeIn","_silentFlash","that","chirp","tr","tempoExtreme","tempoIncrease","trL","jWhere","metroThis","tempoHolder","newDiv","b1","b2","stopChirp","prepend","b3","increaseSpeedButton","increaseSpeed","prevAll","html","b4","decreaseSpeedButton","decreaseSpeed","$flash","tinyNotation","regularExpressions","REST","OCTAVE2","OCTAVE3","OCTAVE5","OCTAVE4","EDSHARP","EDFLAT","EDNAT","SHARP","FLAT","NAT","TYPE","TIE","PRECTIE","ID_EL","LYRIC","DOT","TIMESIG","PARTBREAK","TRIP","QUAD","ENDBRAC","TinyNotation","textIn","tokens","optionalScore","currentTSBarDuration","lastDurationQL","storedDict","lastNoteTied","inTrip","inQuad","endTupletAfterNote","tnre","token","MATCH","returnObject","innerPart","renderNotationDivs","classTypes","selector","allRender","thisTN","$thisTN","thisTNContents","textContent","newSVG","empty","intervalCache","MotionType","antiParallel","contrary","noMotion","oblique","parallel","similar","VoiceLeadingQuartet","v1n1","v1n2","v2n1","v2n2","analyticKey","unison","_v1n1","_v1n2","_v2n1","_v2n2","vIntervals","hIntervals","_findIntervals","which","obliqueMotion","parallelMotion","similarMotion","contraryMotion","antiParallelMotion","iV","iH","requiredInterval","parallelInterval","parallelUnison","parallelOctave","hiddenInterval","n1degree","n2degree","scale2","firstHarmony","secondHarmony","inwardContraryMotion","outwardContraryMotion","_setVoiceNote","keyValue","voiceLeading","webmidi","selectedOutputPort","selectedInputPort","access","$selectDiv","jazzDownloadUrl","storedPlugin","selectedJazzInterface","jazzMidiInArrived","webmidiEvent","timestamp","midiInArrived","midiMessageEvent","timeStamp","eventObject","createPlugin","override","createElement","classid","isJazz","visibility","createJazzSelector","$newSelect","Jazz","change","selectedInput","MidiInOpen","MidiInClose","selectedInterface","midiOptions","MidiInList","noneAppendOption","anySelected","allAppendOptions","$appendOption","oninputsuccess","oninputempty","selectionChanged","$select","storedStateChange","onstatechange","inputs","port","onmidimessage","close","createSelector","$midiSelectDiv","autoUpdate","existingMidiSelect","foundMidiSelects","requestMIDIAccess","then","populateSelect","$noneAppendOption","music21","exceptions21","tests","QUnit","assert","equal","ten","marc","nBoring","ok","m21o","deepEqual","notOk","priority","st2","strictEqual","setOffsetBySite","contextS","canBeTonic","c1","d2","m6","n6","n7","n6clone","s2","na1","na2","s3","m4","m5","dynamic","volumeScalar","specifierAbbreviation","conv","testSharps","thisTest","expectedSharps","expectedMode","givenKeyName","givenMode","foundSharps","foundMode","es","dis","getLowerEnharmonic","getHigherEnharmonic","cDblSharp","dNatural","bTripleSharp","cDblFlat","bFlat","n3","outGroups","rn1","rnKey","figureAndKey","rn","pi","net","sr","first","af","getAttrByName","getObjByClass","clear","oct","throws","m1","m2","n11","n12","n13","n21","l","pf2","pf3","insertAndShift","outListNames","outListOffsets","tc","om","omn","omo","s1","n4","div1","VLQ","N","vlq1","parallelFifth","vlq2","vlq3","isProperResolution","allTests"],"mappings":"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"}