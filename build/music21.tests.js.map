{"version":3,"file":null,"sources":["../src/music21/exceptions21.js","../src/music21/debug.js","../src/music21/common.js","../src/music21/prebase.js","../src/music21/derivation.js","../src/music21/duration.js","../src/music21/sites.js","../src/music21/base.js","../src/music21/articulations.js","../src/music21/audioSearch.js","../src/music21/audioRecording.js","../src/music21/bar.js","../src/music21/beam.js","../src/music21/pitch.js","../src/music21/note.js","../src/music21/interval.js","../src/music21/chordTables.js","../src/music21/chord.js","../src/music21/clef.js","../src/music21/scale.js","../src/music21/key.js","../src/music21/meter.js","../src/music21/instrument.js","../src/music21/renderOptions.js","../src/music21/vfShow.js","../src/music21/musicxml/m21ToXml.js","../src/music21/stream/filters.js","../src/music21/stream/iterator.js","../src/music21/stream.js","../src/music21/tie.js","../src/music21/musicxml/xmlToM21.js","../src/music21/converter.js","../src/music21/dynamics.js","../src/music21/expressions.js","../src/music21/figuredBass.js","../src/music21/fromPython.js","../src/music21/harmony.js","../src/music21/miditools.js","../src/music21/keyboard.js","../src/music21/layout.js","../src/music21/musicxml.js","../src/music21/roman.js","../src/music21/tempo.js","../src/music21/tinyNotation.js","../src/music21/voiceLeading.js","../src/music21/webmidi.js","../src/loadModules.js","../tests/moduleTests/articulations.js","../tests/moduleTests/base.js","../tests/moduleTests/beam.js","../tests/moduleTests/chord.js","../tests/moduleTests/clef.js","../tests/moduleTests/common.js","../tests/moduleTests/duration.js","../tests/moduleTests/dynamics.js","../tests/moduleTests/figuredBass.js","../tests/moduleTests/interval.js","../tests/moduleTests/key.js","../tests/moduleTests/meter.js","../tests/moduleTests/note.js","../tests/moduleTests/pitch.js","../tests/moduleTests/prebase.js","../tests/moduleTests/roman.js","../tests/moduleTests/scale.js","../tests/moduleTests/sites.js","../tests/moduleTests/stream.js","../tests/moduleTests/tie.js","../tests/moduleTests/voiceLeading.js","../tests/loadAll.js"],"sourcesContent":["// not working properly...\n\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = new Error(message).stack;\n        }\n    }\n}\n\nexport class Music21Exception extends ExtendableError {}\n\nexport class StreamException extends Music21Exception {}\n","export const debug = false;\n","/**\n * common functions\n *\n * @exports music21/common\n */\n/**\n * functions that are useful everywhere...\n *\n * @namespace music21.common\n * @memberof music21\n */\nexport const common = {};\n\n/**\n * concept borrowed from Vex.Flow.Merge, though here the source can be undefined;\n * http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\n * recursive parts used in .clone()\n *\n * @function music21.common.merge\n * @param {Object} destination - object to have attributes placed into\n * @param {Object} source - object to take attributes from.\n * @memberof music21.common\n * @returns {Object} destination\n */\ncommon.merge = function mergeRecursive(destination, source) {\n    if (source === undefined || source === null) {\n        return destination;\n    }\n    for (const p in source) {\n        if (!{}.hasOwnProperty.call(source, p)) {\n            continue;\n        }\n        try {\n            // Property in destination object set; update its value.\n            if (source[p] && source[p].constructor === Object) {\n                destination[p] = mergeRecursive(destination[p], source[p]);\n            } else {\n                destination[p] = source[p];\n            }\n        } catch (e) {\n            // Property in destination object not set; create it and set its value.\n            destination[p] = source[p];\n        }\n    }\n    return destination;\n};\n\ncommon.range = function common_range(start, stop, step) {\n    if (step === undefined) {\n        step = 1;\n    }\n    if (stop === undefined) {\n        stop = start;\n        start = 0;\n    }\n\n    const count = Math.ceil((stop - start) / step);\n    return Array.apply(0, Array(count)).map((e, i) => i * step + start);\n};\n\n/**\n * Mix in another class into this class -- a simple form of multiple inheritance.\n * See articulations.Marcato for an example.\n *\n */\ncommon.mixin = function common_mixin(OtherParent, thisClassOrObject) {\n    let proto = Object.getPrototypeOf(OtherParent);\n    const classProto = Object.getPrototypeOf(thisClassOrObject);\n\n    while (proto) {\n        for (const key in Object.keys(proto)) {\n            if (!{}.hasOwnProperty.call(proto, key)) {\n                continue;\n            }\n            if (!(key in classProto)) {\n                classProto[key] = proto[key];\n            }\n        }\n        proto = Object.getPrototypeOf(proto);\n    }\n};\n\n/**\n * Aggregation -- closer to true multiple inheritance -- prefers last class's functions.  See\n * https://stackoverflow.com/questions/29879267/es6-class-multiple-inheritance\n *\n *  not currently used...\n */\n\ncommon.aggregation = (baseClass, ...mixins) => {\n    class base extends baseClass {\n        constructor(...args) {\n            super(...args);\n            mixins.forEach(mixin => {\n                copyProps(this, new mixin());\n            });\n        }\n    }\n    let copyProps = (target, source) => {\n        // this function copies all properties and symbols, filtering out some special ones\n        // noinspection JSUnresolvedFunction\n        Object.getOwnPropertyNames(source)\n            .concat(Object.getOwnPropertySymbols(source))\n            .forEach(prop => {\n                if (\n                    !prop.match(\n                        /^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n                    )\n                ) {\n                    Object.defineProperty(\n                        target,\n                        prop,\n                        Object.getOwnPropertyDescriptor(source, prop)\n                    );\n                }\n            });\n    };\n    mixins.forEach(mixin => {\n        // outside constructor() to allow aggregation(A,B,C).staticFunction() to be called etc.\n        copyProps(base.prototype, mixin.prototype);\n        copyProps(base, mixin);\n    });\n    return base;\n};\n\n/**\n * posMod - return a modulo value that is not negative\n *\n * @param  {int} a value\n * @param  {int} b modulo\n * @return {int}   a mod b between 0 and b - 1\n */\n\ncommon.posMod = function posMod(a, b) {\n    if (a === undefined || b === undefined) {\n        throw new Error('Modulo needs two numbers');\n    }\n    return (a % b + b) % b;\n};\n\n/**\n *\n * Returns the statistical mode (most commonly appearing element)\n * in a.\n *\n * In case of tie, returns the first element to reach the maximum\n * number of occurrences.\n *\n * @function music21.common.statisticalMode\n * @param {Array<*>} a - an array to analyze\n * @returns {Object} element with the highest frequency in a\n */\ncommon.statisticalMode = function statisticalMode(a) {\n    if (a.length === 0) {\n        return null;\n    }\n    const modeMap = {};\n    let maxEl = a[0];\n    let maxCount = 1;\n    for (let i = 0; i < a.length; i++) {\n        const el = a[i];\n        if (modeMap[el] == null) {\n            modeMap[el] = 0;\n        }\n        modeMap[el] += 1;\n        if (modeMap[el] > maxCount) {\n            maxEl = el;\n            maxCount = modeMap[el];\n        }\n    }\n    return maxEl;\n};\n\n/**\n * fromRoman - Convert a Roman numeral (upper or lower) to an int.\n *\n * @param  {string} num roman numeral representation of a number\n * @return {int}     integer value of roman numeral;\n */\n\ncommon.fromRoman = function fromRoman(num) {\n    const inputRoman = num.toUpperCase();\n    const subtractionValues = [1, 10, 100];\n    const nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I'];\n    const ints = [1000, 500, 100, 50, 10, 5, 1];\n    const places = [];\n    for (const c of inputRoman) {\n        if (!nums.includes(c)) {\n            throw new Error(\n                'Value is not a valid roman numeral: ' + inputRoman\n            );\n        }\n    }\n    for (let i = 0; i < inputRoman.length; i++) {\n        const c = inputRoman[i];\n        let value = ints[nums.indexOf(c)];\n        if (i < inputRoman.length - 1) {\n            const nextValue = ints[nums.indexOf(inputRoman[i + 1])];\n            if (nextValue > value && subtractionValues.includes(value)) {\n                value *= -1;\n            }\n        }\n        places.push(value);\n    }\n    let summation = 0;\n    for (const n of places) {\n        summation += n;\n    }\n    return summation;\n};\n\n/**\n * toRoman - Convert a number from 1 to 3999 to a roman numeral\n *\n * @param  {int} num number to convert\n * @return {string}     as roman numeral\n */\n\ncommon.toRoman = function toRoman(num) {\n    if (typeof num !== 'number') {\n        throw new Error('expected integer, got ' + typeof num);\n    }\n    if (num < 0 || num > 4000) {\n        throw new Error('Argument must be between 1 and 3999');\n    }\n    const ints = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const nums = [\n        'M',\n        'CM',\n        'D',\n        'CD',\n        'C',\n        'XC',\n        'L',\n        'XL',\n        'X',\n        'IX',\n        'V',\n        'IV',\n        'I',\n    ];\n    let result = '';\n    for (let i = 0; i < ints.length; i++) {\n        const count = Math.floor(num / ints[i]);\n        result += nums[i].repeat(count);\n        num -= ints[i] * count;\n    }\n    return result;\n};\n\n/**\n * Creates a DOMObject of an SVG figure using the correct `document.createElementNS` call.\n *\n * @function music21.common.makeSVGright\n * @param {string} [tag='svg'] - a tag, such as 'rect', 'circle', 'text', or 'svg'\n * @param {Object} [attrs] - attributes to pass to the tag.\n * @memberof music21.common\n * @returns {SVGElement}\n */\ncommon.makeSVGright = function makeSVGright(tag='svg', attrs) {\n    // see http://stackoverflow.com/questions/3642035/jquerys-append-not-working-with-svg-element\n    // normal JQuery does not work.\n    if (attrs === undefined) {\n        attrs = {};\n    }\n\n    const el = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (const k in attrs) {\n        if (!{}.hasOwnProperty.call(attrs, k)) {\n            continue;\n        }\n        el.setAttribute(k, attrs[k]);\n    }\n    return el;\n};\n\n/**\n * Take a number such as 32 and return a string such as \"nd\"\n * (for \"32nd\") etc.\n *\n * @function music21.common.ordinalAbbreviation\n * @param {int} value\n * @param {Boolean} [plural=false] - make plural (note that \"21st\" plural is \"21st\")\n * @return {string}\n */\ncommon.ordinalAbbreviation = function ordinalAbbreviation(value, plural) {\n    let post = '';\n    const valueHundreths = value % 100;\n    if (\n        valueHundreths === 11\n        || valueHundreths === 12\n        || valueHundreths === 13\n    ) {\n        post = 'th';\n    } else {\n        const valueMod = value % 10;\n        if (valueMod === 1) {\n            post = 'st';\n        } else if (valueMod === 2) {\n            post = 'nd';\n        } else if (valueMod === 3) {\n            post = 'rd';\n        } else {\n            post = 'th';\n        }\n    }\n    if (post !== 'st' && plural) {\n        post += 's';\n    }\n    return post;\n};\n\n/**\n * Find a rational number approximation of this floating point.\n *\n * @function music21.common.rationalize\n * @param {number} ql - number to rationalize\n * @param {number} [epsilon=0.001] - how close to get\n * @param {int} [maxDenominator=50] - maximum denominator\n * @returns {object|undefined} {'numerator: numerator, 'denominator': denominator}\n */\ncommon.rationalize = function rationalize(ql, epsilon, maxDenominator) {\n    epsilon = epsilon || 0.001;\n    maxDenominator = maxDenominator || 50;\n\n    for (let i = 2; i < maxDenominator; i++) {\n        if (Math.abs(ql * i - Math.round(ql * i)) < epsilon) {\n            const numerator = Math.round(ql * i);\n            const denominator = i;\n            return { numerator, denominator };\n        }\n    }\n    return undefined;\n};\n\n/**\n * Change something that could be a string or number and might\n * end with \"px\" to a number.\n *\n * \"400px\" -> 400\n *\n * @function music21.common.stripPx\n * @param {number|string} str -- string that might have 'px' at the end or not\n * @returns {number} a number to use\n */\ncommon.stripPx = function stripPx(str) {\n    if (typeof str === 'string') {\n        const pxIndex = str.indexOf('px');\n        str = str.slice(0, pxIndex);\n        return parseInt(str);\n    } else {\n        return str;\n    }\n};\n\n/**\n * Find name in the query string (?name=value) and return value.\n *\n * @function music21.common.urlParam\n * @param {string} name - url parameter to find\n * @returns {string} may be \"\" if empty.\n */\ncommon.urlParam = function urlParam(name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    const results = regex.exec(location.search);\n    return results == null\n        ? ''\n        : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\ncommon.arrayEquals = function arrayEquals(a1, a2) {\n    if (a1.length !== a2.length) {\n        return false;\n    }\n    for (let i = 0; i < a1.length; i++) {\n        if (a1[i] instanceof Array && a2[i] instanceof Array) {\n            if (!arrayEquals(a1[i], a2[i])) {\n                return false;\n            }\n        } else if (a1[i] !== a2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n\nconst _singletonCounter = {};\n_singletonCounter.value = 0;\n\nexport class SingletonCounter {\n    call() {\n        const post = _singletonCounter.value;\n        _singletonCounter.value += 1;\n        return post;\n    }\n}\ncommon.SingletonCounter = SingletonCounter;\n\n/**\n * runs a callback with either \"visible\" or \"hidden\" as the argument anytime the\n * window or document state changes.\n *\n * Depending on the browser, may be called multiple times with the same argument\n * for a single event.  For instance, Safari calls once on losing focus completely\n * but twice for a tab change.\n *\n * @function music21.common.setWindowVisibilityWatcher\n * @param {function} callback\n */\ncommon.setWindowVisibilityWatcher = function setWindowVisibilityWatcher(\n    callback\n) {\n    let hidden = 'hidden';\n\n    // Standards:\n    if (hidden in document) {\n        document.addEventListener('visibilitychange', windowFocusChanged);\n    } else if ('mozHidden' in document) {\n        hidden = 'mozHidden';\n        document.addEventListener('mozvisibilitychange', windowFocusChanged);\n    } else if ('webkitHidden' in document) {\n        hidden = 'webkitHidden';\n        document.addEventListener('webkitvisibilitychange', windowFocusChanged);\n    } else if ('msHidden' in document) {\n        hidden = 'msHidden';\n        document.addEventListener('msvisibilitychange', windowFocusChanged);\n    } else if ('onfocusin' in document) {\n        // IE 9 and lower:\n        document.onfocusin = windowFocusChanged;\n        document.onfocusout = windowFocusChanged;\n    }\n\n    // Also catch window... -- get two calls for a tab shift, but one for window losing focus\n    // noinspection AssignmentResultUsedJS\n    window.onpageshow = window.onpagehide = window.onfocus = window.onblur = windowFocusChanged;\n\n    function windowFocusChanged(evt) {\n        const v = 'visible';\n        const h = 'hidden';\n        const evtMap = {\n            focus: v,\n            focusin: v,\n            pageshow: v,\n            blur: h,\n            focusout: h,\n            pagehide: h,\n        };\n\n        // noinspection JSDeprecatedSymbols\n        evt = evt || window.event;\n        let callbackState = '';\n        if (evt.type in evtMap) {\n            callbackState = evtMap[evt.type];\n        } else {\n            callbackState = this[hidden] ? 'hidden' : 'visible';\n        }\n        callback(callbackState, evt);\n    }\n    // set the initial state\n    const initialState\n        = document.visibilityState === 'visible' ? 'focus' : 'blur';\n    const initialStateEvent = { type: initialState };\n    windowFocusChanged(initialStateEvent);\n};\n\ncommon.urls = {\n    css: '/css',\n    webResources: '/webResources',\n    midiPlayer: '/webResources/midiPlayer',\n    soundfontUrl: '/src/ext/soundfonts/FluidR3_GM/',\n};\n\ncommon.hyphenToCamelCase = function hyphenToCamelCase(usrStr) {\n    return usrStr.replace(/-([a-zA-Z])/, (all, match) => match.toUpperCase());\n};\n\ncommon.numToIntOrFloat = function numToIntOrFloat(value) {\n    const intVal = Math.round(value);\n    if (Math.abs(value - intVal) < 0.000001) {\n        return intVal;\n    } else {\n        return value;\n    }\n};\n\nexport default common;\n","/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit. See the {@link music21.prebase} namespace.\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n *\n * @exports music21/prebase\n */\n/**\n * module for things that all music21-created objects, not just objects that can live in\n * Stream.elements should inherit\n *\n * @namespace music21.prebase\n * @memberof music21\n */\nexport const prebase = {};\n/**\n * Class for pseudo-m21 objects to inherit from. The most important attributes that nearly\n * everything in music21 should inherit from are given below.\n *\n * @class ProtoM21Object\n * @memberof music21.prebase\n * @property {Array<string>} classes - An Array of strings of classes that the object belongs to (default ['ProtoM21Object'])\n * @property {Boolean} isProtoM21Object - Does this object descend from {@link music21.prebase.ProtoM21Object}: obviously true.\n * @property {Boolean} isMusic21Object - Does this object descend from {@link music21.base.Music21Object}; default false.\n */\nexport class ProtoM21Object {\n    constructor() {\n        /**\n         *\n         * @type {[string[]]}\n         * @private\n         */\n        this._storedClasses = undefined;\n        this.isProtoM21Object = true;\n        this.isMusic21Object = false;\n        this._cloneCallbacks = {};\n    }\n\n    get classes() {\n        if (this._storedClasses !== undefined) {\n            return this._storedClasses;\n        }\n        const classList = [];\n        let thisConstructor = this.constructor;\n        let maxLinks = 20;\n        while (\n            thisConstructor !== null\n            && thisConstructor !== undefined\n            && maxLinks\n        ) {\n            maxLinks -= 1;\n            if (thisConstructor.name === '') {\n                break;\n            }\n            classList.push(thisConstructor.name);\n            thisConstructor = Object.getPrototypeOf(thisConstructor);\n        }\n        classList.push('object');\n        this._storedClasses = classList;\n        return classList;\n    }\n\n    /**\n     * Makes (as much as possible) a complete duplicate copy of the object called with .clone()\n     *\n     * Works similarly to Python's copy.deepcopy().\n     *\n     * Every ProtoM21Object has a `._cloneCallbacks` object which maps `{attribute: callbackFunction}`\n     * to handle custom clone cases.  See, for instance, {@link music21.base.Music21Object} which\n     * uses a custom callback to NOT clone the `.activeSite` attribute.\n     *\n     * @returns {music21.prebase.ProtoM21Object}\n     * @example\n     * var n1 = new music21.note.Note(\"C#\");\n     * n1.duration.quarterLength = 4;\n     * var n2 = n1.clone();\n     * n2.duration.quarterLength == 4; // true\n     * n2 === n1; // false\n     */\n    clone(deep=true, memo) {\n        if (!deep) {\n            return Object.assign(\n                Object.create(Object.getPrototypeOf(this)),\n                this\n            );\n        }\n\n        const ret = new this.constructor();\n        if (memo === undefined) {\n            memo = new WeakMap();\n        }\n        \n        // todo: do Arrays work?\n        for (const key in this) {\n            // not that we ONLY copy the keys in Ret -- it's easier that way.\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else {\n                    // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof this[key] === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (\n                typeof this[key] === 'object'\n                && this[key] !== null\n                && this[key].isProtoM21Object\n            ) {\n                // console.log('cloning ', key);\n                const m21Obj = this[key];\n                let clonedVersion;\n                if (memo.has(m21Obj)) {\n                    clonedVersion = memo.get(m21Obj);\n                } else {\n                    clonedVersion = this[key].clone(deep, memo);\n                }\n                ret[key] = clonedVersion;\n            } else {\n                try {\n                    ret[key] = this[key];\n                    // music21.common.merge(ret[key], this[key]); // not really necessary?\n                } catch (e) {\n                    if (e instanceof TypeError) {\n                        console.log('typeError:', e, key);\n                        // do nothing\n                    } else {\n                        throw e;\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n    /**\n     * Check to see if an object is of this class or subclass.\n     *\n     * @param {(string|string[])} testClass - a class or Array of classes to test\n     * @returns {Boolean}\n     * @example\n     * var n = new music21.note.Note();\n     * n.isClassOrSubclass('Note'); // true\n     * n.isClassOrSubclass('Music21Object'); // true\n     * n.isClassOrSubclass(['Duration', 'NotRest']); // true // NotRest\n     */\n    isClassOrSubclass(testClass) {\n        if (testClass instanceof Array === false) {\n            testClass = [testClass];\n        }\n        for (let i = 0; i < testClass.length; i++) {\n            if (this.classes.includes(testClass[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    toString() { \n        let si = this.stringInfo();\n        if (si !== '') {\n            si = ' ' + si;\n        }\n        return `<${this.classes[0]}${si}>`;\n    }\n\n    stringInfo() {\n        return '';\n    }\n}\nprebase.ProtoM21Object = ProtoM21Object;\n","export class Derivation {\n\n    /**\n     *\n     * @param {music21.base.Music21Object} [client]\n     * @property {str} [method]\n     * @property {music21.base.Music21Object} [origin]\n     */\n    constructor(client) {\n        this.client = client;\n        this.method = undefined;\n        this.origin = undefined;\n    }\n\n    clone() {\n        const newThing = new Derivation(this.client);\n        newThing.method = this.method;\n        newThing.origin = this.origin;\n    }\n\n    * chain() {\n        let origin = this.origin;\n        while (origin !== undefined) {\n            yield origin;\n            origin = origin.derivation.origin;\n        }\n    }\n\n    rootDerivation() {\n        const derivationChain = Array.from(this.chain());\n        if (derivationChain.length) {\n            return derivationChain[derivationChain.length - 1];\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport default Derivation;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/duration -- duration routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { prebase } from './prebase.js';\n/**\n * Duration module. See {@link music21.duration}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @exports music21/duration\n */\n/**\n * Module that holds **music21** classes and\n * tools for dealing with durations, especially\n * the {@link music21.duration.Duration} class.\n *\n * @namespace music21.duration\n * @memberof music21\n */\nexport const duration = {};\n\n/**\n * Object mapping int to name, as in `{1: 'whole'}` etc.\n *\n * @memberof music21.duration\n * @type {Object}\n */\nduration.typeFromNumDict = {\n    1: 'whole',\n    2: 'half',\n    4: 'quarter',\n    8: 'eighth',\n    16: '16th',\n    32: '32nd',\n    64: '64th',\n    128: '128th',\n    256: '256th',\n    512: '512th',\n    1024: '1024th',\n    0: 'zero',\n    '0.5': 'breve',\n    '0.25': 'longa',\n    '0.125': 'maxima',\n    '0.0625': 'duplex-maxima',\n};\nduration.quarterTypeIndex = 6; // where is quarter in the following array.\nduration.ordinalTypeFromNum = [\n    'duplex-maxima',\n    'maxima',\n    'longa',\n    'breve',\n    'whole',\n    'half',\n    'quarter',\n    'eighth',\n    '16th',\n    '32nd',\n    '64th',\n    '128th',\n    '256th',\n    '512th',\n    '1024th',\n];\nduration.vexflowDurationArray = [\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    'w',\n    'h',\n    'q',\n    '8',\n    '16',\n    '32',\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n];\n\n/**\n * Duration object; found as the `.duration` attribute on {@link music21.base.Music21Object} instances\n * such as {@link music21.note.Note}\n *\n * @class Duration\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {(number|undefined)} ql - quarterLength (default 1.0)\n */\nexport class Duration extends prebase.ProtoM21Object {\n    constructor(ql) {\n        super();\n        this._quarterLength = 0.0;\n        this._dots = 0;\n        this._durationNumber = undefined;\n        this._type = 'zero';\n        this._tuplets = [];\n        if (typeof ql === 'string') {\n            this.type = ql;\n        } else if (ql !== undefined) {\n            this.quarterLength = ql;\n        }\n        this._cloneCallbacks._tuplets = this.cloneCallbacksTupletFunction;\n    }\n    \n    stringInfo() {\n        return this.quarterLength.toString();\n    }\n    \n    /**\n     * Read or sets the number of dots on the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type Number\n     * @instance\n     * @default 0\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.dots === 0; // true\n     * d.dots = 1;\n     * d.quarterLength == 3; // true;\n     */\n    get dots() {\n        return this._dots;\n    }\n    set dots(numDots) {\n        this._dots = numDots;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Read or sets the quarterLength of the Duration\n     *\n     * Updates the type, dots, tuplets(?)\n     *\n     * @type Number\n     * @instance\n     * @default 1.0\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.quarterLength == 2.0; // true;\n     * d.quarterLength = 1.75;\n     * d.dots == 2; // true\n     * d.type == 'quarter'; // true\n     */\n    get quarterLength() {\n        return this._quarterLength;\n    }\n    set quarterLength(ql) {\n        if (ql === undefined) {\n            ql = 1.0;\n        }\n        this._quarterLength = ql;\n        this.updateFeaturesFromQl();\n    }\n    /**\n     * Read or sets the type of the duration.\n     *\n     * Updates the quarterLength\n     *\n     * @type String\n     * @instance\n     * @default 'quarter'\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.type == 'half; // true\n     * d.type = 'breve';\n     * d.quarterLength == 8.0; // true\n     * d.dots = 1;\n     * d.type = 'quarter'; // will not change dots\n     * d.quarterLength == 1.5; // true\n     */\n    get type() {\n        return this._type;\n    }\n    set type(typeIn) {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(typeIn);\n        if (typeNumber === -1) {\n            console.log('invalid type ' + typeIn);\n            throw new Music21Exception('invalid type ' + typeIn);\n        }\n        this._type = typeIn;\n        this.updateQlFromFeatures();\n    }\n    /**\n     * Reads the tuplet Array for the duration.\n     *\n     * The tuplet array should be considered Read Only.\n     * Use {@link music21.duration.Duration#appendTuplet} to\n     * add a tuplet (no way to remove yet)\n     *\n     * @type Array<music21.duration.Tuplet>\n     * @instance\n     * @default []\n     */\n    get tuplets() {\n        return this._tuplets;\n    }\n    /**\n     * Read-only: the duration expressed for VexFlow\n     *\n     * @type String\n     * @instance\n     * @default 'd'\n     * @example\n     * var d = new music21.duration.Duration(2);\n     * d.vexflowDuration == 'h'; // true;\n     * d.dots = 2;\n     * d.vexflowDuration == 'hdd'; // true;\n     */\n    get vexflowDuration() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this.type);\n        let vd = duration.vexflowDurationArray[typeNumber];\n        if (this.dots > 0) {\n            for (let i = 0; i < this.dots; i++) {\n                vd += 'd'; // vexflow does not handle double dots .. or does it???\n            }\n        }\n        return vd;\n    }\n    cloneCallbacksTupletFunction(tupletKey, ret, obj) {\n        // make sure that tuplets clone properly\n        const newTuplets = [];\n        for (let i = 0; i < obj[tupletKey].length; i++) {\n            const newTuplet = obj[tupletKey][i].clone();\n            // console.log('cloning tuplets', obj[tupletKey][i], newTuplet);\n            newTuplets.push(newTuplet);\n        }\n        ret[tupletKey] = newTuplets;\n    }\n    _findDots(ql) {\n        if (ql === 0) {\n            return 0;\n        } // zero length stream probably;\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type);\n        const powerOfTwo = Math.pow(2, duration.quarterTypeIndex - typeNumber);\n        // alert(undottedQL * 1.5 + \" \" + ql)\n        // console.log('find dots called on ql: ', ql, typeNumber, powerOfTwo);\n        for (let dotsNum = 0; dotsNum <= 4; dotsNum++) {\n            const dotMultiplier\n                = (Math.pow(2, dotsNum) - 1.0) / Math.pow(2, dotsNum);\n            const durationMultiplier = 1 + dotMultiplier;\n            if (Math.abs(powerOfTwo * durationMultiplier - ql) < 0.0001) {\n                return dotsNum;\n            }\n        }\n        if (debug) {\n            console.log('no dots available for ql; probably a tuplet', ql);\n        }\n        return 0;\n    }\n    updateQlFromFeatures() {\n        const typeNumber = duration.ordinalTypeFromNum.indexOf(this._type); // must be set property\n        const undottedQuarterLength = Math.pow(\n            2,\n            duration.quarterTypeIndex - typeNumber\n        );\n        const dottedMultiplier\n            = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);\n        const unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        let tupletCorrectedQl = unTupletedQl;\n        this._tuplets.forEach(tuplet => {\n            tupletCorrectedQl *= tuplet.tupletMultiplier();\n        });\n        this._quarterLength = tupletCorrectedQl;\n    }\n    updateFeaturesFromQl() {\n        const ql = this._quarterLength;\n        this._tuplets = [];\n        if (ql === 0) {\n            this._type = 'zero';\n            this._dots = 0;\n            return;\n        }\n        const powerOfTwo = Math.floor(Math.log(ql + 0.00001) / Math.log(2));\n        let typeNumber = duration.quarterTypeIndex - powerOfTwo;\n        this._type = duration.ordinalTypeFromNum[typeNumber];\n        // console.log(this._findDots);\n        this._dots = this._findDots(ql);\n\n        const undottedQuarterLength = Math.pow(\n            2,\n            duration.quarterTypeIndex - typeNumber\n        );\n        const dottedMultiplier\n            = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);\n        let unTupletedQl = undottedQuarterLength * dottedMultiplier;\n        if (unTupletedQl !== ql && ql !== 0) {\n            typeNumber -= 1;\n            this._type = duration.ordinalTypeFromNum[typeNumber]; // increase type: eighth to quarter etc.\n            unTupletedQl *= 2;\n            const tupletRatio = ql / unTupletedQl;\n            const ratioRat = common.rationalize(tupletRatio);\n            if (ratioRat === undefined) {\n                // probably a Stream with a length that is inexpressable;\n            } else {\n                const t = new duration.Tuplet(\n                    ratioRat.denominator,\n                    ratioRat.numerator,\n                    new duration.Duration(unTupletedQl)\n                );\n                this.appendTuplet(t, true); // skipUpdateQl\n            }\n            // console.log(ratioRat, ql, unTupletedQl);\n        }\n    }\n    /**\n     * Add a tuplet to music21j\n     *\n     * @param {music21.duration.Tuplet} newTuplet - tuplet to add to `.tuplets`\n     * @param {boolean} [skipUpdateQl=false] - update the quarterLength afterwards?\n     */\n    appendTuplet(newTuplet, skipUpdateQl) {\n        newTuplet.frozen = true;\n        this._tuplets.push(newTuplet);\n        if (skipUpdateQl !== true) {\n            this.updateQlFromFeatures();\n        }\n    }\n}\n\nduration.Duration = Duration;\n\n/**\n * Represents a Tuplet; found in {@link music21.duration.Duration#tuplets}\n *\n * @class Tuplet\n * @memberof music21.duration\n * @extends music21.prebase.ProtoM21Object\n * @param {number} numberNotesActual - numerator of the tuplet, default 3\n * @param {number} numberNotesNormal - denominator of the tuplet, default 2\n * @param {(music21.duration.Duration|number)} durationActual - duration or quarterLength of duration type, default music21.duration.Duration(0.5)\n * @param {(music21.duration.Duration|number)} durationNormal - unused; see music21p for description\n */\nexport class Tuplet extends prebase.ProtoM21Object {\n    constructor(\n        numberNotesActual,\n        numberNotesNormal,\n        durationActual,\n        durationNormal\n    ) {\n        super();\n        this.numberNotesActual = numberNotesActual || 3;\n        this.numberNotesNormal = numberNotesNormal || 2;\n        this.durationActual = durationActual || new duration.Duration(0.5);\n        if (typeof this.durationActual === 'number') {\n            this.durationActual = new duration.Duration(this.durationActual);\n        }\n        this.durationNormal = durationNormal || this.durationActual;\n\n        this.frozen = false;\n        this.type = undefined;\n        /**\n         * Show a bracket above the tuplet\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {Boolean} bracket\n         * @default true\n         */\n        this.bracket = true;\n        /**\n         * Bracket placement. Options are `above` or `below`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} placement\n         * @default 'above'\n         */\n        this.placement = 'above';\n\n        /**\n         * What to show above the Tuplet. Options are `number`, `type`, or (string) `none`.\n         *\n         * @memberof music21.duration.Tuplet#\n         * @member {String} tupletActualShow\n         * @default 'number'\n         */\n        this.tupletActualShow = 'number';\n        this.tupletNormalShow = undefined; // undefined, 'ratio' for ratios, 'type' for ratioed notes (does not work)\n    }\n    /**\n     * A nice name for the tuplet.\n     *\n     * @type String\n     * @instance\n     * @readonly\n     */\n    get fullName() {\n        // actual is what is presented to viewer\n        const numActual = this.numberNotesActual;\n        const numNormal = this.numberNotesNormal;\n\n        if (numActual === 3 && numNormal === 2) {\n            return 'Triplet';\n        } else if (numActual === 5 && (numNormal === 4 || numNormal === 2)) {\n            return 'Quintuplet';\n        } else if (numActual === 6 && numNormal === 4) {\n            return 'Sextuplet';\n        }\n        const ordStr = common.ordinalAbbreviation(numNormal, true); // plural\n        return (\n            'Tuplet of '\n            + numActual.toString()\n            + '/'\n            + numNormal.toString()\n            + ordStr\n        );\n    }\n    /**\n     * Set both durationActual and durationNormal for the tuplet.\n     *\n     * @param {string} type - a duration type, such as `half`, `quarter`\n     * @returns {music21.duration.Duration} A converted {@link music21.duration.Duration} matching `type`\n     */\n    setDurationType(type) {\n        if (this.frozen === true) {\n            throw new Music21Exception(\n                'A frozen tuplet (or one attached to a duration) is immutable'\n            );\n        }\n        this.durationActual = new duration.Duration(type);\n        this.durationNormal = this.durationActual;\n        return this.durationActual;\n    }\n    /**\n     * Sets the tuplet ratio.\n     *\n     * @param {Number} actual - number of notes in actual (e.g., 3)\n     * @param {Number} normal - number of notes in normal (e.g., 2)\n     * @returns {undefined}\n     */\n    setRatio(actual, normal) {\n        if (this.frozen === true) {\n            throw new Music21Exception(\n                'A frozen tuplet (or one attached to a duration) is immutable'\n            );\n        }\n        this.numberNotesActual = actual || 3;\n        this.numberNotesNormal = normal || 2;\n    }\n    /**\n     * Get the quarterLength corresponding to the total length that\n     * the completed tuplet (i.e., 3 notes in a triplet) would occupy.\n     *\n     * @returns {Number} A quarter length.\n     */\n    totalTupletLength() {\n        return this.numberNotesNormal * this.durationNormal.quarterLength;\n    }\n    /**\n     * The amount by which each quarter length is multiplied to get\n     * the tuplet. For instance, in a normal triplet, this is 0.666\n     *\n     * @returns {Number} A float of the multiplier\n     */\n    tupletMultiplier() {\n        const lengthActual = this.durationActual.quarterLength;\n        return (\n            this.totalTupletLength() / (this.numberNotesActual * lengthActual)\n        );\n    }\n}\nduration.Tuplet = Tuplet;\n","/**\n * Objects for keeping track of relationships among Music21Objects. See {@link music21.sites} namespace\n *\n * Copyright 2017, Michael Scott Cuthbert and cuthbertLab\n * License: BSD\n */\n\nimport { common } from './common.js';\nimport { Music21Exception } from './exceptions21';\n\n/**\n * @namespace music21.sites\n * @memberof music21\n * @requires music21/common\n */\nexport class SitesException extends Music21Exception {}\n\n/**\n * SiteRef.site is held strongly in Javascript.  This is\n * actually NOT a problem because of the difference between\n * the way JS Garbage Collection works from Python (in all\n * browsers since IE6...). They follow reference chains and\n * find unreachable references and don't just check reference\n * counts.  Thus circular references still allow memory to be\n * garbage collected.  Tested in Chrome on 100000 streams, and\n * very small additional memory usage.\n * \n * https://stackoverflow.com/questions/7347203/circular-references-in-javascript-garbage-collector\n */\nexport class SiteRef {\n    /**\n     * @property {boolean} isDead\n     * @property {string|undefined} classString\n     * @property {boolean|number} globalSiteIndex\n     * @property {number|undefined} siteIndex\n     * @property {music21.stream.Stream|undefined} site\n     */\n    constructor() {\n        this.isDead = false;\n        this.classString = undefined;\n        this.globalSiteIndex = false;\n        this.siteIndex = undefined;\n        this.site = undefined;\n    }\n}\n\nconst _NoneSiteRef = new SiteRef();\n_NoneSiteRef.globalSiteIndex = -2;\n_NoneSiteRef.siteIndex = -2;\n\nconst _singletonCounter = new common.SingletonCounter();\n\nconst GLOBAL_SITE_STATE_DICT = new WeakMap();\n\nexport function getId(obj) {\n    if (!GLOBAL_SITE_STATE_DICT.has(obj)) {\n        const newId = _singletonCounter.call();\n        GLOBAL_SITE_STATE_DICT.set(obj, newId);\n    }\n    return GLOBAL_SITE_STATE_DICT.get(obj);\n}\n\nexport class Sites {\n    constructor() {\n        this.siteDict = new Map();\n        this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);\n        this._siteIndex = 0;\n        this._lastID = -1;\n    }\n\n    get length() {\n        return this.siteDict.size;\n    }\n    includes(checkSite) {\n        // noinspection JSUnusedLocalSymbols\n        for (const [unused_key, siteRef] of this.siteDict) {\n            if (siteRef.site === checkSite) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _keysByTime(newFirst = true) {\n        const post = [];\n        for (const [key, siteRef] of this.siteDict) {\n            const keyVal = [siteRef.siteIndex, key];\n            post.push(keyVal);\n        }\n        post.sort();\n        if (newFirst) {\n            post.reverse();\n        }\n        return post.map(innerList => innerList[1]);\n    }\n\n    add(obj, idKey, classString) {\n        if (idKey === undefined && obj !== undefined) {\n            idKey = getId(obj);\n        }\n        let updateNotAdd = false;\n        if (this.siteDict.has(idKey)) {\n            const tempSiteRef = this.siteDict.get(idKey);\n            if (!tempSiteRef.isDead && tempSiteRef.site !== undefined) {\n                updateNotAdd = true;\n            }\n        }\n        if (obj !== undefined && classString === undefined) {\n            classString = obj.classes[0];\n        }\n\n        let siteRef;\n        if (updateNotAdd) {\n            siteRef = this.siteDict.get(idKey);\n            siteRef.isDead = false;\n        } else {\n            siteRef = new SiteRef();\n        }\n\n        siteRef.site = obj; // stores a weakRef;\n        siteRef.classString = classString;\n        siteRef.siteIndex = this._siteIndex;\n        this._siteIndex += 1;\n        siteRef.globalSiteIndex = _singletonCounter.call();\n\n        if (!updateNotAdd) {\n            this.siteDict.set(idKey, siteRef);\n        }\n    }\n\n    remove(obj) {\n        const idKey = getId(obj);\n        if (idKey === undefined) {\n            return false;\n        }\n        return this.siteDict.delete(idKey);\n    }\n    \n    clear() {\n        this.siteDict = new Map();\n        this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);\n        this._lastID = -1;\n    }\n\n    /**\n     *\n     * @param {boolean|string} [sortByCreationTime=false]\n     * @param {music21.stream.Stream|undefined} [priorityTarget]\n     * @param {boolean} [excludeNone=false]\n     * @returns {IterableIterator<*>}\n     */\n    * yieldSites(\n        sortByCreationTime=false,\n        priorityTarget=undefined,\n        excludeNone=false\n    ) {\n        let keyRepository;\n        if (sortByCreationTime === true) {\n            keyRepository = this._keysByTime(false);\n        } else if (sortByCreationTime === 'reverse') {\n            keyRepository = this._keysByTime(true);\n        } else {\n            keyRepository = Array.from(this.siteDict.keys());\n        }\n        if (priorityTarget !== undefined) {\n            const priorityId = getId(priorityTarget);\n            if (keyRepository.includes(priorityId)) {\n                keyRepository.splice(\n                    0,\n                    0,\n                    keyRepository.pop(keyRepository.indexOf(priorityId))\n                );\n            }\n        }\n        for (const key of keyRepository) {\n            const siteRef = this.siteDict.get(key);\n            if (siteRef === _NoneSiteRef) {\n                if (!excludeNone) {\n                    yield siteRef.site;\n                }\n            } else {\n                const obj = siteRef.site;\n                if (obj === undefined) {\n                    siteRef.isDead = true;\n                } else {\n                    yield obj;\n                }\n            }\n        }\n    }\n\n    get(sortByCreationTime=false, priorityTarget, excludeNone=false) {\n        const post = Array.from(\n            this.yieldSites(sortByCreationTime, priorityTarget, excludeNone)\n        );\n\n        // we do this resorting again, because the priority target might not match id and we\n        // want to be extra safe.  If you want fast, use .yieldSites\n        if (priorityTarget !== undefined) {\n            if (post.includes(priorityTarget)) {\n                post.splice(0, 0, post.pop(post.indexOf(priorityTarget)));\n            }\n        }\n        return post;\n    }\n    getAttrByName(attrName) {\n        for (const obj of this.yieldSites('reverse')) {\n            if (obj === undefined) {\n                continue;\n            }\n            if (attrName in obj) {\n                return obj[attrName];\n            }\n        }\n        return undefined;\n    }\n\n    getObjByClass(className, options) {\n        const params = {\n            callerFirst: this,\n            sortByCreationTime: false,\n            priorityTarget: undefined,\n            getElementMethod: 'getElementAtOrBefore',\n            memo: {},\n        };\n        common.merge(params, options);\n        const memo = params.memo;\n        let post;\n        const objs = Array.from(\n            this.yieldSites(\n                params.sortByCreationTime,\n                params.priorityTarget,\n                true // excludeNone\n            )\n        );\n        const classNameIsStr = typeof className === 'string';\n        for (const obj of objs) {\n            if (classNameIsStr) {\n                if (obj.classes.includes(className)) {\n                    post = obj;\n                    break;\n                }\n            } else if (obj instanceof className) {\n                post = obj;\n                break;\n            }\n        }\n        if (post !== undefined) {\n            return post;\n        }\n        for (const obj of objs) {\n            // TODO: check inside object... perhaps should not be done in m21p\n            const objId = getId(obj);\n            if (!(objId in memo)) {\n                memo[objId] = obj;\n            }\n            post = obj.getContextByClass(className, params);\n            if (post !== undefined) {\n                break;\n            }\n        }\n        return post;\n    }\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/base -- objects in base in music21p routines\n *\n * does not load the other modules, music21/moduleLoader.js does that.\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\nimport * as derivation from './derivation.js';\nimport { duration } from './duration.js';\nimport { prebase } from './prebase.js';\nimport * as sites from './sites.js';\n\n/**\n * module for Music21Objects, see {@link music21.base}\n *\n * @requires music21/common\n * @requires music21/duration\n * @requires music21/prebase\n * @requires music21/sites\n * @exports music21/base\n */\n/**\n * Module for Music21Objects.  Does not load other modules, see {@link music21.moduleLoader}\n * for this functionality.\n *\n * @namespace music21.base\n * @memberof music21\n */\nexport const base = {};\n\n/**\n * Base class for any object that can be placed in a {@link music21.stream.Stream}.\n *\n * @class Music21Object\n * @memberof music21.base\n * @extends music21.prebase.ProtoM21Object\n * @property {Object} activeSite - hardlink to a {@link music21.stream.Stream} containing the element.\n * @property {number} classSortOrder - Default sort order for this class (default 20; override in other classes). Lower numbered objects will sort before other objects in the staff if priority and offset are the same.\n * @property {music21.duration.Duration} duration - the duration (object) for the element. (can be set with a quarterLength also)\n * @property {Array} groups - An Array of strings representing group (equivalent to css classes) to assign to the object. (default [])\n * @property {boolean} isMusic21Object - true\n * @property {boolean} isStream - false\n * @property {number} offset - offset from the beginning of the stream (in quarterLength)\n * @property {number} priority - The priority (lower = earlier or more left) for elements at the same offset. (default 0)\n */\nexport class Music21Object extends prebase.ProtoM21Object {\n    constructor(keywords) {\n        super();\n        this.classSortOrder = 20; // default;\n\n        this._activeSite = undefined;\n        this._naiveOffset = 0;\n\n        // this._derivation = undefined;\n        // this._style = undefined;\n        // this._editorial = undefined;\n\n        this._duration = new duration.Duration();\n        this._derivation = undefined; // avoid making extra objects...\n\n        this._priority = 0; // default;\n\n        this.id = sites.getId(this);\n        this.groups = [];\n        // groups\n        this.sites = new sites.Sites();\n\n        this.isMusic21Object = true;\n        this.isStream = false;\n\n        this.groups = []; // custom object in m21p\n\n        // beat, measureNumber, etc.\n        // lots to do...\n        // noinspection JSUnusedLocalSymbols\n        this._cloneCallbacks._activeSite = function Music21Object_cloneCallbacks_activeSite(\n            keyName,\n            newObj,\n            self\n        ) {\n            newObj[keyName] = undefined;\n        };\n        this._cloneCallbacks._derivation = function Music21Music21Object_cloneCallbacks_derivation(\n            keyName,\n            newObj,\n            self\n        ) {\n            const newDerivation = new derivation.Derivation(newObj);\n            newDerivation.origin = self;\n            newDerivation.method = 'clone';\n            newObj[keyName] = newDerivation;\n        };\n\n        // noinspection JSUnusedLocalSymbols\n        this._cloneCallbacks.sites = function Music21Object_cloneCallbacks_sites(\n            keyName,\n            newObj,\n            self\n        ) {\n            newObj[keyName] = new sites.Sites();\n        };\n    }\n    \n    stringInfo() {\n        let id16 = this.id;\n        if (typeof id16 === 'number') {\n            id16 = id16.toString(16);\n            while (id16.length < 4) {\n                id16 = '0' + id16;\n            }\n            id16 = '0x' + id16;\n        }\n        return id16;\n    }\n    \n    get activeSite() {\n        return this._activeSite;\n    }\n\n    set activeSite(site) {\n        if (site === undefined) {\n            this._activeSite = undefined;\n            this._activeSiteStoredOffset = undefined;\n        } else {\n            try {\n                site.elementOffset(this);\n            } catch (e) {\n                throw new sites.SitesException(\n                        'activeSite cannot be set for an object not in the stream');\n            }\n            this._activeSite = site;\n        }\n    }\n\n    get derivation() {\n        if (this._derivation === undefined) {\n            this._derivation = new derivation.Derivation(this);\n        }\n        return this._derivation;\n    }\n    set derivation(newDerivation) {\n        this._derivation = newDerivation;\n    }\n\n\n    get measureNumber() {\n        if (this.activeSite !== undefined && this.activeSite.classes.includes('Measure')) {\n            return this.activeSite.number;\n        } else {\n            const m = this.sites.getObjByClass('Measure');\n            if (m !== undefined) {\n                return m.number;\n            } else {\n                return undefined;\n            }\n        }\n    }\n\n    get offset() {\n        if (this.activeSite === undefined) {\n            return this._naiveOffset;\n        } else {\n            return this.activeSite.elementOffset(this);\n        }\n    }\n\n    set offset(newOffset) {\n        if (this.activeSite === undefined) {\n            this._naiveOffset = newOffset;\n        } else {\n            this.activeSite.setElementOffset(this, newOffset);\n        }\n    }\n\n    get priority() {\n        return this._priority;\n    }\n    set priority(p) {\n        this._priority = p;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(newDuration) {\n        if (typeof newDuration === 'object') {\n            this._duration = newDuration;\n            // common errors below...\n        } else if (typeof newDuration === 'number') {\n            this._duration.quarterLength = newDuration;\n        } else if (typeof newDuration === 'string') {\n            this._duration.type = newDuration;\n        }\n    }\n    get quarterLength() {\n        return this.duration.quarterLength;\n    }\n    set quarterLength(ql) {\n        this.duration.quarterLength = ql;\n    }\n\n    mergeAttributes(other) {\n        // id;\n        this.groups = other.groups.slice();\n    }\n\n    /**\n     * Return the offset of this element in a given site -- use .offset if you are sure that\n     * site === activeSite.\n     *\n     * Raises an Error if not in site.\n     *\n     * Does not change activeSite or .offset\n     *\n     * @param {music21.stream.Stream} site\n     * @param {boolean} [stringReturns=false] -- allow strings to be returned\n     * @returns Number|undefined\n     */\n    getOffsetBySite(site, stringReturns=false) {\n        if (site === undefined) {\n            return this._naiveOffset;\n        }\n        return site.elementOffset(this, stringReturns);\n    }\n\n    /**\n     * setOffsetBySite - sets the offset for a given Stream\n     *\n     * @param  {music21.stream.Stream} site  Stream object\n     * @param  {number} value offset\n     */\n\n    setOffsetBySite(site, value) {\n        if (site !== undefined) {\n            site.setElementOffset(this, value);\n        } else {\n            this._naiveOffset = value;\n        }\n    }\n\n\n    /**\n     * For an element which may not be in site, but might be in a Stream\n     * in site (or further in streams), find the cumulative offset of the\n     * clement in that site.\n     *\n     * See also music21.stream.iterator.RecursiveIterator.currentHierarchyOffset for\n     * a method that is about 10x faster when running through a recursed stream.\n     *\n     * @param {music21.stream.Stream} site\n     * @returns Number|undefined\n     */\n    getOffsetInHierarchy(site) {\n        try {\n            return this.getOffsetBySite(site);\n        } catch (e) {} // eslint-disable-line no-empty\n        for (const [csSite, csOffset, unused_csRecursionType] of this.contextSites()) {\n            if (csSite === site) {\n                return csOffset;\n            }\n        }\n        throw new Error(`Element ${this} is not in hierarchy of ${site}`);\n    }\n\n    // ---------- Contexts -------------\n\n    getContextByClass(className, options) {\n        const payloadExtractor = function payloadExtractor(\n            useSite,\n            flatten,\n            positionStart,\n            getElementMethod,\n            classList\n        ) {\n            // this should all be done as a tree...\n            // do not use .flat or .semiFlat so as not\n            // to create new sites.\n\n            // VERY HACKY...\n            let lastElement;\n            for (let i = 0; i < useSite.length; i++) {\n                const thisElement = useSite._elements[i];\n                const indexOffset = useSite.elementOffset(thisElement);\n                const matchClass = thisElement.isClassOrSubclass(classList);\n                if (flatten === false && !matchClass) {\n                    continue;\n                } else if (!thisElement.isStream && !matchClass) {\n                    continue;\n                }\n                // is a stream or an element of the appropriate class...\n                // first check normal elements\n                if (\n                    getElementMethod.includes('Before')\n                    && indexOffset >= positionStart\n                ) {\n                    if (\n                        getElementMethod.includes('At')\n                        && lastElement === undefined\n                    ) {\n                        lastElement = thisElement;\n                        try {\n                            lastElement.activeSite = useSite;\n                        } catch (e) {\n                            // do nothing... should not happen.\n                        }\n                    } else if (lastElement !== undefined\n                                && lastElement.isClassOrSubclass(classList)) {\n                        return lastElement;\n                    } else if (matchClass) {\n                        return thisElement;\n                    }\n                } else {\n                    lastElement = thisElement;\n                }\n                if (\n                    getElementMethod.includes('After')\n                    && indexOffset > positionStart\n                    && matchClass\n                ) {\n                    return thisElement;\n                }\n                // now check stream... already filtered out flatten == false;\n                if (thisElement.isStream) {\n                    const potentialElement = payloadExtractor(\n                        thisElement,\n                        flatten,\n                        positionStart + indexOffset,\n                        getElementMethod,\n                        classList\n                    );\n                    if (potentialElement !== undefined) {\n                        return potentialElement;\n                    }\n                }\n            }\n            if (lastElement !== undefined && lastElement.isClassOrSubclass(classList)) {\n                return lastElement;\n            } else {\n                return undefined;\n            }\n        };\n\n        const params = {\n            getElementMethod: 'getElementAtOrBefore',\n            sortByCreationTime: false,\n        };\n        common.merge(params, options);\n\n        const getElementMethod = params.getElementMethod;\n        const sortByCreationTime = params.sortByCreationTime;\n\n        if (className !== undefined && !(className instanceof Array)) {\n            className = [className];\n        }\n        if (\n            getElementMethod.includes('At')\n            && this.isClassOrSubclass(className)\n        ) {\n            return this;\n        }\n\n        for (const [site, positionStart, searchType] of this.contextSites({\n            returnSortTuples: true,\n            sortByCreationTime,\n        })) {\n            if (\n                getElementMethod.includes('At')\n                && site.isClassOrSubclass(className)\n            ) {\n                return site;\n            }\n\n            if (\n                searchType === 'elementsOnly'\n                || searchType === 'elementsFirst'\n            ) {\n                const contextEl = payloadExtractor(\n                    site,\n                    false,\n                    positionStart,\n                    getElementMethod,\n                    className\n                );\n                if (contextEl !== undefined) {\n                    try {\n                        contextEl.activeSite = site;\n                    } catch (e) {\n                        // do nothing.\n                    }\n                    return contextEl;\n                }\n            } else if (searchType !== 'elementsOnly') {\n                if (\n                    getElementMethod.includes('After')\n                    && (className === undefined\n                        || site.isClassOrSubclass(className))\n                ) {\n                    if (\n                        !getElementMethod.includes('NotSelf')\n                        && this !== site\n                    ) {\n                        return site;\n                    }\n                }\n                const contextEl = payloadExtractor(\n                    site,\n                    'semiFlat',\n                    positionStart,\n                    getElementMethod,\n                    className\n                );\n                if (contextEl !== undefined) {\n                    try {\n                        contextEl.activeSite = site;\n                    } catch (e) {\n                        // do nothing.\n                    }\n                    return contextEl;\n                }\n                if (\n                    getElementMethod.includes('Before')\n                    && (className === undefined\n                        || site.isClassOrSubclass(className))\n                ) {\n                    if (\n                        !getElementMethod.includes('NotSelf')\n                        || this !== site\n                    ) {\n                        return site;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    * contextSites(options) {\n        const params = {\n            callerFirst: undefined,\n            memo: [],\n            offsetAppend: 0.0,\n            sortByCreationTime: false,\n            priorityTarget: undefined,\n            returnSortTuples: false,\n            followDerivation: true,\n        };\n        common.merge(params, options);\n        const memo = params.memo;\n        if (params.callerFirst === undefined) {\n            params.callerFirst = this;\n            if (this.isStream && !(this in memo)) {\n                const recursionType = this.recursionType;\n                yield [this, 0.0, recursionType];\n            }\n            memo.push(this);\n        }\n\n        if (params.priorityTarget === undefined && !params.sortByCreationType) {\n            params.priorityTarget = this.activeSite;\n        }\n        const topLevel = this;\n        for (const siteObj of this.sites.yieldSites(\n            params.sortByCreationTime,\n            params.priorityTarget,\n            true // excludeNone\n        )) {\n            if (memo.includes(siteObj)) {\n                continue;\n            }\n            if (siteObj.classes.includes('SpannerStorage')) {\n                continue;\n            }\n\n            // let offset = this.getOffsetBySite(siteObj);\n            // followDerivation;\n            const offsetInStream = siteObj.elementOffset(this);\n            const newOffset = offsetInStream + params.offsetAppend;\n            const positionInStream = newOffset;\n            const recursionType = siteObj.recursionType;\n            yield [siteObj, positionInStream, recursionType];\n            memo.push(siteObj);\n\n            const newParams = {\n                callerFirst: params.callerFirst,\n                memo,\n                offsetAppend: positionInStream, // .offset\n                returnSortTuples: true, // always!\n                sortByCreationTime: params.sortByCreationTime,\n            };\n            for (const [\n                topLevelInner,\n                inStreamPos,\n                recurType\n            ] of siteObj.contextSites(newParams)) {\n                const inStreamOffset = inStreamPos; // .offset;\n                // const hypotheticalPosition = inStreamOffset; // more complex w/ sortTuples\n\n                if (!memo.includes(topLevelInner)) {\n                    // if returnSortTuples...\n                    // else\n                    yield [topLevelInner, inStreamOffset, recurType];\n                    memo.push(topLevelInner);\n                }\n            }\n        }\n        // if followDerivation...\n        if (params.followDerivation) {\n            for (const derivatedObject of topLevel.derivation.chain()) {\n                for (const [derivedSite, derivedOffset, derivedRecurseType] of derivatedObject.contextSites({\n                    callerFirst: undefined,\n                    memo,\n                    offsetAppend: 0.0,\n                    returnSortTuples: true,\n                    sortByCreationTime: params.sortByCreationTime,\n                })) {\n                    const offsetAdjustedCsTuple = [derivedSite, derivedOffset + params.offsetAppend, derivedRecurseType];\n                    yield offsetAdjustedCsTuple;\n                }\n            }\n        }\n    }\n}\n\nbase.Music21Object = Music21Object;\n","import * as Vex from 'vexflow';\n\nimport { common } from './common.js';\nimport { prebase } from './prebase.js';\n\n/**\n * articulations module. See {@link music21.articulations} namespace\n *\n */\n\n/**\n * @namespace music21.articulations\n * @memberof music21\n * @requires music21/prebase, Vexflow\n */\nexport const articulations = {};\n\n/**\n * Represents a single articulation, usually in the `.articulations` Array\n * on a {@link music21.note.Note} or something like that.\n *\n * @class Articulation\n * @memberof music21.articulations\n * @extends music21.prebase.ProtoM21Object\n * @property {string} name\n * @property {string} [placement='above']\n * @property {string|undefined} vexflowModifier - the string code to get this accidental in Vexflow\n * @property {number} [dynamicScale=1.0] - multiplier for the dynamic of a note that this is attached to\n * @property {number} [lengthScale=1.0] - multiplier for the length of a note that this is attached to.\n */\nexport class Articulation extends prebase.ProtoM21Object {\n    constructor() {\n        super();\n        this.name = undefined;\n        this.placement = 'above';\n        this.vexflowModifier = undefined;\n        this.setPosition = undefined;\n        this.dynamicScale = 1.0;\n        this.lengthScale = 1.0;\n    }\n\n    /**\n     * Generates a Vex.Flow.Articulation for this articulation.\n     *\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfa = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfa.setPosition(this.setPosition);\n        }\n        return vfa;\n    }\n}\narticulations.Articulation = Articulation;\n/**\n * base class for articulations that change the length of a note...\n *\n * @class LengthArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class LengthArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'length-articulation';\n    }\n}\narticulations.LengthArticulation = LengthArticulation;\n\n/**\n * base class for articulations that change the dynamic of a note...\n *\n * @class DynamicArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class DynamicArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'dynamic-articulation';\n    }\n}\narticulations.DynamicArticulation = DynamicArticulation;\n\n/**\n * base class for articulations that change the pitch of a note...\n *\n * @class PitchArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class PitchArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'pitch-articulation';\n    }\n}\narticulations.PitchArticulation = PitchArticulation;\n\n/**\n * base class for articulations that change the timbre of a note...\n *\n * @class TimbreArticulation\n * @memberof music21.articulations\n * @extends music21.articulations.Articulation\n */\nexport class TimbreArticulation extends Articulation {\n    constructor() {\n        super();\n        this.name = 'timbre-articulation';\n    }\n}\narticulations.TimbreArticulation = TimbreArticulation;\n\n/**\n * 50% louder than usual\n *\n * @class Accent\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n */\nexport class Accent extends DynamicArticulation {\n    constructor() {\n        super();\n        this.name = 'accent';\n        this.vexflowModifier = 'a>';\n        this.dynamicScale = 1.5;\n    }\n}\narticulations.Accent = Accent;\n\n/**\n * 100% louder than usual\n *\n * @class StrongAccent\n * @memberof music21.articulations\n * @extends music21.articulations.Accent\n */\nexport class StrongAccent extends Accent {\n    constructor() {\n        super();\n        this.name = 'strong accent';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 2.0;\n    }\n}\narticulations.StrongAccent = StrongAccent;\n\n/**\n * no playback for now.\n *\n * @class Staccato\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Staccato extends LengthArticulation {\n    constructor() {\n        super();\n        this.name = 'staccato';\n        this.vexflowModifier = 'a.';\n    }\n}\narticulations.Staccato = Staccato;\n\n/**\n * no playback for now.\n *\n * @class Staccatissimo\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Staccatissimo extends Staccato {\n    constructor() {\n        super();\n        this.name = 'staccatissimo';\n        this.vexflowModifier = 'av';\n    }\n}\narticulations.Staccatissimo = Staccatissimo;\n\n/**\n * no playback or display for now.\n *\n * @class Spiccato\n * @memberof music21.articulations\n * @extends music21.articulations.Staccato\n */\nexport class Spiccato extends Staccato {\n    constructor() {\n        super();\n        this.name = 'spiccato';\n        this.vexflowModifier = undefined;\n    }\n}\narticulations.Spiccato = Spiccato;\n\n/**\n * @class Marcato\n * @memberof music21.articulations\n * @extends music21.articulations.DynamicArticulation\n * @extends music21.articulations.LengthArticulation\n */\nexport class Marcato extends DynamicArticulation {\n    constructor() {\n        super();\n        common.mixin(LengthArticulation, this);\n        this.name = 'marcato';\n        this.vexflowModifier = 'a^';\n        this.dynamicScale = 1.7;\n    }\n}\narticulations.Marcato = Marcato;\n\n/**\n * @class Tenuto\n * @memberof music21.articulations\n * @extends music21.articulations.LengthArticulation\n */\nexport class Tenuto extends LengthArticulation {\n    constructor() {\n        super();\n        this.name = 'tenuto';\n        this.vexflowModifier = 'a-';\n    }\n}\narticulations.Tenuto = Tenuto;\n","import MIDI from 'MIDI';\n\nimport { common } from './common.js';\n\n/**\n * audioSearch module. See {@link music21.audioSearch} namespace\n *\n * @exports music21/audioSearch\n */\n/**\n * @namespace music21.audioSearch\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n */\n\nexport const audioSearch = {};\n// functions based on the prototype created by Chris Wilson's MIT License version\n// and on Jordi Bartolome Guillen's audioSearch module for music21\n\naudioSearch.fftSize = 2048;\n\naudioSearch.AudioContextCaller\n    = window.AudioContext || window.webkitAudioContext;\naudioSearch._audioContext = null;\naudioSearch.animationFrameCallbackId = null;\n\nObject.defineProperties(audioSearch, {\n    audioContext: {\n        get: () => {\n            if (audioSearch._audioContext !== null) {\n                return audioSearch._audioContext;\n            } else {\n                // AudioContext should be a singleton, but MIDI reports loaded before it is!\n                if (\n                    MIDI !== undefined\n                    && MIDI.WebAudio !== undefined\n                    && MIDI.WebAudio.getContext() !== undefined\n                ) {\n                    window.globalAudioContext = MIDI.WebAudio.getContext();\n                } else if (typeof window.globalAudioContext === 'undefined') {\n                    window.globalAudioContext = new audioSearch.AudioContextCaller();\n                }\n                audioSearch._audioContext = window.globalAudioContext;\n                return audioSearch._audioContext;\n            }\n        },\n        set: ac => {\n            audioSearch._audioContext = ac;\n        },\n    },\n});\n\n/**\n *\n * @function music21.audioSearch.getUserMedia\n * @memberof music21.audioSearch\n * @param {Object} dictionary - optional dictionary to fill\n * @param {function} callback - callback on success\n * @param {function} error - callback on error\n */\naudioSearch.getUserMedia = function getUserMedia(dictionary, callback, error) {\n    if (error === undefined) {\n        /* eslint no-alert: \"off\"*/\n        error = () => {\n            alert(\n                'navigator.getUserMedia either not defined (Safari, IE) or denied.'\n            );\n        };\n    }\n    if (callback === undefined) {\n        callback = mediaStream => {\n            audioSearch.userMediaStarted(mediaStream);\n        };\n    }\n    const n = navigator;\n    // need to polyfill navigator, or binding problems are hard...\n    n.getUserMedia\n        = n.getUserMedia\n        || n.webkitGetUserMedia\n        || n.mozGetUserMedia\n        || n.msGetUserMedia;\n\n    if (n.getUserMedia === undefined) {\n        error();\n    }\n    if (dictionary === undefined) {\n        dictionary = {\n            audio: {\n                mandatory: {},\n                optional: [],\n            },\n        };\n    }\n    n.getUserMedia(dictionary, callback, error);\n};\n\naudioSearch.sampleBuffer = null;\naudioSearch.currentAnalyser = null;\n\naudioSearch.userMediaStarted = function userMediaStarted(audioStream) {\n    /**\n     * This function which patches Safari requires some time to get started\n     * so we call it on object creation.\n     */\n    audioSearch.sampleBuffer = new Float32Array(audioSearch.fftSize / 2);\n    const mediaStreamSource = audioSearch.audioContext.createMediaStreamSource(\n        audioStream\n    );\n    const analyser = audioSearch.audioContext.createAnalyser();\n    analyser.fftSize = audioSearch.fftSize;\n    mediaStreamSource.connect(analyser);\n    audioSearch.currentAnalyser = analyser;\n    audioSearch.animateLoop();\n};\n\naudioSearch.minFrequency = 55;\naudioSearch.maxFrequency = 1050;\naudioSearch.animateLoop = function animateLoop(time) {\n    audioSearch.currentAnalyser.getFloatTimeDomainData(\n        audioSearch.sampleBuffer\n    );\n    // returns best frequency or -1\n    const frequencyDetected = audioSearch.autoCorrelate(\n        audioSearch.sampleBuffer,\n        audioSearch.audioContext.sampleRate,\n        audioSearch.minFrequency,\n        audioSearch.maxFrequency\n    );\n    const retValue = audioSearch.sampleCallback(frequencyDetected);\n    if (retValue !== -1) {\n        audioSearch.animationFrameCallbackId = window.requestAnimationFrame(\n            audioSearch.animateLoop\n        );\n    }\n};\n\naudioSearch.pitchSmoothingSize = 40;\naudioSearch.lastPitchClassesDetected = [];\naudioSearch.lastPitchesDetected = [];\naudioSearch.lastCentsDeviationsDetected = [];\n\naudioSearch.smoothPitchExtraction = function smoothPitchExtraction(frequency) {\n    if (frequency === -1) {\n        audioSearch.lastPitchClassesDetected.shift();\n        audioSearch.lastPitchesDetected.shift();\n        audioSearch.lastCentsDeviationsDetected.shift();\n    } else {\n        const [midiNum, centsOff] = audioSearch.midiNumDiffFromFrequency(\n            frequency\n        );\n        if (\n            audioSearch.lastPitchClassesDetected.length\n            > audioSearch.pitchSmoothingSize\n        ) {\n            audioSearch.lastPitchClassesDetected.shift();\n            audioSearch.lastPitchesDetected.shift();\n            audioSearch.lastCentsDeviationsDetected.shift();\n        }\n        audioSearch.lastPitchClassesDetected.push(midiNum % 12);\n        audioSearch.lastPitchesDetected.push(midiNum);\n        audioSearch.lastCentsDeviationsDetected.push(centsOff);\n    }\n    const mostCommonPitchClass = common.statisticalMode(\n        audioSearch.lastPitchClassesDetected\n    );\n    if (mostCommonPitchClass === null) {\n        return [-1, 0];\n    }\n    const pitchesMatchingClass = [];\n    const centsMatchingClass = [];\n    for (let i = 0; i < audioSearch.lastPitchClassesDetected.length; i++) {\n        if (audioSearch.lastPitchClassesDetected[i] === mostCommonPitchClass) {\n            pitchesMatchingClass.push(audioSearch.lastPitchesDetected[i]);\n            centsMatchingClass.push(audioSearch.lastCentsDeviationsDetected[i]);\n        }\n    }\n    const mostCommonPitch = common.statisticalMode(pitchesMatchingClass);\n\n    // find cents difference; weighing more recent samples more...\n    let totalSamplePoints = 0;\n    let totalSample = 0;\n    for (let j = 0; j < centsMatchingClass.length; j++) {\n        const weight = Math.pow(j, 2) + 1;\n        totalSample += weight * centsMatchingClass[j];\n        totalSamplePoints += weight;\n    }\n    const centsOff = Math.floor(totalSample / totalSamplePoints);\n    return [mostCommonPitch, centsOff];\n};\n\naudioSearch.sampleCallback = function sampleCallback(frequency) {\n    const [unused_midiNum, unused_centsOff] = audioSearch.smoothPitchExtraction(\n        frequency\n    );\n};\n\n// from Chris Wilson. Replace with Jordi's\naudioSearch.autoCorrelate = function autoCorrelate(\n    buf,\n    sampleRate,\n    minFrequency,\n    maxFrequency\n) {\n    const SIZE = buf.length;\n    const MAX_SAMPLES = Math.floor(SIZE / 2);\n    if (minFrequency === undefined) {\n        minFrequency = 0;\n    }\n    if (maxFrequency === undefined) {\n        maxFrequency = sampleRate;\n    }\n\n    let best_offset = -1;\n    let best_correlation = 0;\n    let rms = 0;\n    let foundGoodCorrelation = false;\n    const correlations = new Array(MAX_SAMPLES);\n\n    for (let i = 0; i < SIZE; i++) {\n        const val = buf[i];\n        rms += val * val;\n    }\n    rms = Math.sqrt(rms / SIZE);\n    if (rms < 0.01) {\n        return -1;\n    } // not enough signal\n\n    let lastCorrelation = 1;\n    for (let offset = 0; offset < MAX_SAMPLES; offset++) {\n        let correlation = 0;\n        const offsetFrequency = sampleRate / offset;\n        if (offsetFrequency < minFrequency) {\n            break;\n        }\n        if (offsetFrequency > maxFrequency) {\n            continue;\n        }\n\n        for (let i = 0; i < MAX_SAMPLES; i++) {\n            correlation += Math.abs(buf[i] - buf[i + offset]);\n        }\n        correlation = 1 - correlation / MAX_SAMPLES;\n        correlations[offset] = correlation; // store it, for the tweaking we need to do below.\n        if (correlation > 0.9 && correlation > lastCorrelation) {\n            foundGoodCorrelation = true;\n            if (correlation > best_correlation) {\n                best_correlation = correlation;\n                best_offset = offset;\n            }\n        } else if (foundGoodCorrelation) {\n            // short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.\n            // Now we need to tweak the offset - by interpolating between the values to the left and right of the\n            // best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -\n            // we need to do a curve fit on correlations[] around best_offset in order to better determine precise\n            // (anti-aliased) offset.\n\n            // we know best_offset >=1,\n            // since foundGoodCorrelation cannot go to true until the second pass (offset=1), and\n            // we can't drop into this clause until the following pass (else if).\n            const shift\n                = (correlations[best_offset + 1]\n                    - correlations[best_offset - 1])\n                / correlations[best_offset];\n            return sampleRate / (best_offset + 8 * shift);\n        }\n        lastCorrelation = correlation;\n    }\n    if (best_correlation > 0.01) {\n        // console.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\")\n        return sampleRate / best_offset;\n    }\n    return -1;\n    //  var best_frequency = sampleRate/best_offset;\n};\n\n/**\n *\n * @function midiNumDiffFromFrequency\n * @param {Number} frequency\n * @returns {Array<int>} [miniNumber, centsOff]\n */\naudioSearch.midiNumDiffFromFrequency = function midiNumDiffFromFrequency(\n    frequency\n) {\n    const midiNumFloat = 12 * (Math.log(frequency / 440) / Math.log(2)) + 69;\n    const midiNum = Math.round(midiNumFloat);\n    const centsOff = Math.round(100 * (midiNumFloat - midiNum));\n    return [midiNum, centsOff];\n};\n","import { audioSearch } from './audioSearch.js';\n\n/**\n * Adopted from Matt Diamond's recorder.js code MIT License\n */\nexport class Recorder {\n    constructor(cfg) {\n        const config = cfg || {};\n        this.bufferLen = config.bufferLen || 4096;\n        this.config = config;\n        this.recording = false;\n        this.currCallback = undefined;\n        this.audioContext = audioSearch.audioContext;\n        this.frequencyCanvasInfo = {\n            id: 'frequencyAnalyser',\n            width: undefined,\n            height: undefined,\n            canvasContext: undefined,\n            animationFrameID: undefined,\n        };\n        this.waveformCanvasInfo = {\n            id: 'waveformCanvas',\n            width: undefined,\n            height: undefined,\n            canvasContext: undefined,\n        };\n        this.analyserNode = undefined;\n    }\n\n    /**\n     * Start here -- polyfills navigator, runs getUserMedia and then sends to audioStreamConnected\n     */\n    initAudio() {\n        this.polyfillNavigator();\n        navigator.getUserMedia(\n            {\n                audio: {\n                    mandatory: {\n                        googEchoCancellation: 'false',\n                        googAutoGainControl: 'false',\n                        googNoiseSuppression: 'false',\n                        googHighpassFilter: 'false',\n                        // 'echoCancellation': false,\n                        // 'autoGainControl': false,\n                        // 'noiseSuppression': false,\n                        // 'highpassFilter': false,\n                    },\n                    optional: [],\n                },\n            },\n            s => this.audioStreamConnected(s),\n            error => {\n                console.log('Error getting audio -- try on google Chrome?');\n                console.log(error);\n            }\n        );\n    }\n\n    /**\n     * After the user has given permission to record, this method is called.\n     * It creates a gain point, and then connects the input source to the gain.\n     * It connects an analyserNode (fftSize 2048) to the gain.\n     *\n     * It creates a second gain of 0.0 connected to the destination, so that\n     * we're not hearing what we're playing in in an infinite loop (SUCKS to turn this off...)\n     *\n     * And it calls this.connectSource on the inputPoint so that\n     * we can do something with all these wonderful inputs.\n     */\n    audioStreamConnected(stream) {\n        const inputPoint = this.audioContext.createGain();\n\n        // Create an AudioNode from the stream.\n        const audioInput = this.audioContext.createMediaStreamSource(stream);\n        audioInput.connect(inputPoint);\n\n        const analyserNode = this.audioContext.createAnalyser();\n        analyserNode.fftSize = 2048;\n        this.analyserNode = analyserNode;\n        inputPoint.connect(analyserNode);\n\n        this.connectSource(inputPoint);\n\n        const zeroGain = this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n        inputPoint.connect(zeroGain);\n        zeroGain.connect(this.audioContext.destination);\n    }\n\n    /**\n     * Creates a worker to receive and process all the messages asychronously.\n     */\n    connectSource(source) {\n        this.context = source.context;\n        this.setNode();\n\n        // create a Worker with inline code...\n        const workerBlob = new Blob(['(', recorderWorkerJs, ')()'], {\n            type: 'application/javascript',\n        });\n        const workerURL = URL.createObjectURL(workerBlob);\n        this.worker = new Worker(workerURL);\n        /**\n         * When worker sends a message, we just send it to the currentCallback...\n         */\n        this.worker.onmessage = e => {\n            const blob = e.data;\n            this.currCallback(blob);\n        };\n        URL.revokeObjectURL(workerURL);\n\n        this.worker.postMessage({\n            command: 'init',\n            config: {\n                sampleRate: this.context.sampleRate,\n            },\n        });\n\n        /**\n         * Whenever the ScriptProcessorNode receives enough audio to process\n         * (i.e., this.bufferLen stereo samples; default 4096), then it calls onaudioprocess\n         * which is set up to send the event's .getChannelData to the WebWorker via a\n         * postMessage.\n         *\n         * The 'record' command sends no message back.\n         */\n        this.node.onaudioprocess = e => {\n            if (!this.recording) {\n                return;\n            }\n            this.worker.postMessage({\n                command: 'record',\n                buffer: [\n                    e.inputBuffer.getChannelData(0),\n                    e.inputBuffer.getChannelData(1),\n                ],\n            });\n        };\n\n        source.connect(this.node);\n\n        /**\n         * polyfill for Chrome error.\n         *\n         * if the ScriptProcessorNode (this.node) is not connected to an output\n         * the \"onaudioprocess\" event is not triggered in Chrome.\n         */\n        this.node.connect(this.context.destination);\n    }\n\n    /**\n     * Creates a ScriptProcessorNode (preferably) to allow for direct audio processing.\n     *\n     * Sets it to this.node and returns it.\n     */\n    setNode() {\n        const numInputChannels = 2;\n        const numOutputChannels = 2;\n        if (!this.context.createScriptProcessor) {\n            this.node = this.context.createJavaScriptNode(\n                this.bufferLen,\n                numInputChannels,\n                numOutputChannels\n            );\n        } else {\n            this.node = this.context.createScriptProcessor(\n                this.bufferLen,\n                numInputChannels,\n                numOutputChannels\n            );\n        }\n        return this.node;\n    }\n\n    /**\n     * Configure from another source...\n     */\n    configure(cfg) {\n        for (const prop in cfg) {\n            if (Object.hasOwnProperty.call(cfg, prop)) {\n                this.config[prop] = cfg[prop];\n            }\n        }\n    }\n\n    record() {\n        this.recording = true;\n    }\n    stop() {\n        this.recording = false;\n    }\n    clear() {\n        this.worker.postMessage({ command: 'clear' });\n    }\n\n    /**\n     * Directly get the buffers from the worker and then call cb.\n     */\n    getBuffers(cb) {\n        this.currCallback = cb || this.config.callback;\n        this.worker.postMessage({ command: 'getBuffers' });\n    }\n\n    /**\n     * call exportWAV or exportMonoWAV on the worker, then call cb or (if undefined) setupDownload.\n     */\n    exportWAV(cb, type, isMono) {\n        let command = 'exportWAV';\n        if (isMono === true) {\n            // default false\n            command = 'exportMonoWAV';\n        }\n        this.currCallback = cb || this.config.callback;\n        type = type || this.config.type || 'audio/wav';\n        if (!this.currCallback) {\n            this.currCallback = blob => {\n                this.setupDownload(\n                    blob,\n                    'myRecording' + Date.now().toString() + '.wav'\n                );\n            };\n        }\n        this.worker.postMessage({\n            command,\n            type,\n        });\n    }\n\n    exportMonoWAV(cb, type) {\n        this.exportWAV(cb, type, true);\n    }\n\n    setupDownload(blob, filename, elementId) {\n        elementId = elementId || 'save';\n        const url = (window.URL || window.webkitURL).createObjectURL(blob);\n        const link = document.getElementById(elementId);\n        link.href = url;\n        link.download = filename || 'output.wav';\n    }\n\n    /**\n     * Polyfills for getUserMedia (requestAnimationFrame polyfills not needed.)\n     * As of 2016 September, only Edge support unprefixed.\n     */\n    polyfillNavigator() {\n        if (!navigator.getUserMedia) {\n            navigator.getUserMedia\n                = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        }\n        if (window.AnalyserNode && !window.AnalyserNode.prototype.getFloatTimeDomainData) {\n            const uint8 = new Uint8Array(2048);\n            window.AnalyserNode.prototype.getFloatTimeDomainData = function getFloatTimeDomainData(array) {\n                this.getByteTimeDomainData(uint8);\n                const imax = array.length;\n                for (let i = 0; i < imax; i++) {\n                    array[i] = (uint8[i] - 128) * 0.0078125;\n                }\n            };\n        }\n    }\n\n    updateAnalysers(time) {\n        if (!this.frequencyCanvasInfo.canvasContext) {\n            const canvas = document.getElementById(this.frequencyCanvasInfo.id);\n            if (!canvas) {\n                return;\n            }\n            this.frequencyCanvasInfo.width = canvas.width;\n            this.frequencyCanvasInfo.height = canvas.height;\n            this.frequencyCanvasInfo.canvasContext = canvas.getContext('2d');\n        }\n\n        // analyser draw code here\n        const SPACING = 3;\n        const BAR_WIDTH = 1;\n        const numBars = Math.round(this.frequencyCanvasInfo.width / SPACING);\n        const freqByteData = new Uint8Array(\n            this.analyserNode.frequencyBinCount\n        );\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        const canvasContext = this.frequencyCanvasInfo.canvasContext;\n        canvasContext.clearRect(\n            0,\n            0,\n            this.frequencyCanvasInfo.width,\n            this.frequencyCanvasInfo.height\n        );\n        canvasContext.fillStyle = '#F6D565';\n        canvasContext.lineCap = 'round';\n        const multiplier = this.analyserNode.frequencyBinCount / numBars;\n\n        // Draw rectangle for each frequency bin.\n        for (let i = 0; i < numBars; ++i) {\n            let magnitude = 0;\n            const offset = Math.floor(i * multiplier);\n            for (let j = 0; j < multiplier; j++) {\n                magnitude += freqByteData[offset + j];\n            }\n            magnitude\n                = magnitude\n                * (this.frequencyCanvasInfo.height / 256)\n                / multiplier;\n            canvasContext.fillStyle\n                = 'hsl( ' + Math.round(i * 360 / numBars) + ', 100%, 50%)';\n            canvasContext.fillRect(\n                i * SPACING,\n                this.frequencyCanvasInfo.height,\n                BAR_WIDTH,\n                -1 * magnitude\n            );\n        }\n\n        this.frequencyCanvasInfo.animationFrameID = window.requestAnimationFrame(\n            t => this.updateAnalysers(t)\n        );\n    }\n\n    drawWaveformCanvas(buffers) {\n        const data = buffers[0]; // one track of stereo recording.\n        if (!this.waveformCanvasInfo.context) {\n            const canvas = document.getElementById(this.waveformCanvasInfo.id);\n            if (!canvas) {\n                return;\n            }\n            this.waveformCanvasInfo.width = canvas.width;\n            this.waveformCanvasInfo.height = canvas.height;\n            this.waveformCanvasInfo.context = canvas.getContext('2d');\n        }\n        const context = this.waveformCanvasInfo.context;\n        const step = Math.ceil(data.length / this.waveformCanvasInfo.width);\n        const amp = this.waveformCanvasInfo.height / 2;\n        context.fillStyle = 'silver';\n        context.clearRect(\n            0,\n            0,\n            this.waveformCanvasInfo.width,\n            this.waveformCanvasInfo.height\n        );\n        for (let i = 0; i < this.waveformCanvasInfo.width; i++) {\n            let min = 1.0;\n            let max = -1.0;\n            for (let j = 0; j < step; j++) {\n                const datum = data[i * step + j];\n                if (datum < min) {\n                    min = datum;\n                }\n                if (datum > max) {\n                    max = datum;\n                }\n            }\n            context.fillRect(\n                i,\n                (1 + min) * amp,\n                1,\n                Math.max(1, (max - min) * amp)\n            );\n        }\n    }\n\n    /**\n     * set this as a callback from getBuffers.  Returns the source so that a stop() command\n     * is possible.\n     */\n    playBuffers(buffers) {\n        const channels = 2;\n        const numFrames = buffers[0].length;\n        const audioBuffer = this.context.createBuffer(\n            channels,\n            numFrames,\n            this.context.sampleRate\n        );\n        for (let channel = 0; channel < channels; channel++) {\n            const thisChannelBuffer = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < numFrames; i++) {\n                thisChannelBuffer[i] = buffers[channel][i];\n            }\n        }\n        const source = this.context.createBufferSource();\n        source.buffer = audioBuffer;\n        source.connect(this.context.destination);\n        source.start();\n        return source;\n    }\n}\n\n/**\n * This code does NOT go through babel, so no arrow functions, let, const, etc.\n */\nconst recorderWorkerJs = `function recorderWorkerJs() {\n    /**\n     *\n     *   Rewritten from Matt Diamond's recorderWorker -- MIT License\n     */\n    RecorderWorker = function RecorderWorker(parentContext) {\n            this.parent = parentContext;\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n            this.sampleRate = undefined;\n    };\n    RecorderWorker.prototype.onmessage = function onmessage(e) {\n            switch (e.data.command) {\n            case 'init':\n                this.init(e.data.config);\n                break;\n            case 'record':\n                this.record(e.data.buffer);\n                break;\n            case 'exportWAV':\n                this.exportWAV(e.data.type);\n                break;\n            case 'exportMonoWAV':\n                this.exportMonoWAV(e.data.type);\n                break;\n            case 'getBuffers':\n                this.getBuffers();\n                break;\n            case 'clear':\n                this.clear();\n                break;\n            default:\n                break;\n            }\n   };\n   RecorderWorker.prototype.postMessage = function postMessage(msg) {\n            this.parent.postMessage(msg);\n   };\n\n   RecorderWorker.prototype.init = function init(config) {\n            this.sampleRate = config.sampleRate;\n   };\n\n   RecorderWorker.prototype.record = function record(inputBuffer) {\n            var inputBufferL = inputBuffer[0];\n            var inputBufferR = inputBuffer[1];\n            this.recBuffersL.push(inputBufferL);\n            this.recBuffersR.push(inputBufferR);\n            this.recLength += inputBufferL.length;\n   };\n\n   RecorderWorker.prototype.exportWAV = function exportWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var bufferR = this.mergeBuffers(this.recBuffersR);\n            var interleaved = this.interleave(bufferL, bufferR);\n            var dataview = this.encodeWAV(interleaved);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.exportMonoWAV = function exportMonoWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var dataview = this.encodeWAV(bufferL);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.mergeBuffers = function mergeBuffers(recBuffers) {\n            var result = new Float32Array(this.recLength);\n            var offset = 0;\n            for (var i = 0; i < recBuffers.length; i++) {\n                result.set(recBuffers[i], offset);\n                offset += recBuffers[i].length;\n            }\n            return result;\n    };\n\n    RecorderWorker.prototype.getBuffers = function getBuffers() {\n            var buffers = [];\n            buffers.push(this.mergeBuffers(this.recBuffersL));\n            buffers.push(this.mergeBuffers(this.recBuffersR));\n            this.postMessage(buffers);\n        };\n\n    RecorderWorker.prototype.clear = function clear() {\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n        }\n\n    RecorderWorker.prototype.interleave = function interleave(inputL, inputR) {\n            var combinedLength = inputL.length + inputR.length;\n            var result = new Float32Array(combinedLength);\n\n            var index = 0;\n            var inputIndex = 0;\n\n            while (index < combinedLength) {\n                result[index++] = inputL[inputIndex];\n                result[index++] = inputR[inputIndex];\n                inputIndex++;\n            }\n            return result;\n        }\n    RecorderWorker.prototype.encodeWAV = function encodeWAV(samples, mono) {\n            var buffer = new ArrayBuffer(44 + (samples.length * 2));\n            var view = new DataView(buffer);\n\n            /* RIFF identifier */\n            writeString(view, 0, 'RIFF');\n\n            /* file length */\n            view.setUint32(4, 32 + samples.length * 2, true);\n\n            /* RIFF type */\n            writeString(view, 8, 'WAVE');\n\n            /* format chunk identifier */\n            writeString(view, 12, 'fmt ');\n\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n\n            /* sample format (raw) */\n            view.setUint16(20, 1, true);\n\n            /* channel count */\n            view.setUint16(22, mono ? 1 : 2, true);\n\n            /* sample rate */\n            view.setUint32(24, this.sampleRate, true);\n\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.sampleRate * 4, true);\n\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, 4, true);\n\n            /* bits per sample */\n            view.setUint16(34, 16, true);\n\n            /* data chunk identifier */\n            writeString(view, 36, 'data');\n\n            /* data chunk length */\n            view.setUint32(40, samples.length * 2, true);\n\n            floatTo16BitPCM(view, 44, samples);\n\n            return view;\n        }\n\n    function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n            var s = Math.max(-1, Math.min(1, input[i]));\n            output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n\n    function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    var recordWorker = new RecorderWorker(this);\n    this.onmessage = (function mainOnMessage(e) { recordWorker.onmessage(e) }).bind(this);\n}`;\n\nexport const audioRecording = { Recorder };\nexport default audioRecording;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/bar -- Barline objects\n *\n * Copyright (c) 2013-19, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–19, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { Music21Exception } from './exceptions21.js';\n\nconst barTypeList = [\n    'regular', 'dotted', 'dashed', 'heavy', 'double', 'final',\n    'heavy-light', 'heavy-heavy', 'tick', 'short', 'none',\n];\nconst barTypeDict = {\n    'light-light': 'double',\n    'light-heavy': 'final', \n};\n\nconst reverseBarTypeDict = {\n    'double': 'light-light',\n    'final': 'light-heavy',\n};\n\nexport class BarException extends Music21Exception {}\n\nfunction typeToMusicXMLBarStyle(value) {\n    if (reverseBarTypeDict[value] !== undefined) {\n        return reverseBarTypeDict[value];\n    } else {\n        return value;\n    }\n}\n\nfunction standardizeBarType(value) {\n    if (value === undefined) {\n        return 'regular';\n    }\n    value = value.toLowerCase();\n\n    if (barTypeList.includes(value)) {\n        return value;\n    }\n    if (barTypeDict[value] !== undefined) {\n        return barTypeDict[value];\n    }\n    throw new BarException(`cannot process style: ${value}`);\n}\n\nexport class Barline extends base.Music21Object {\n    constructor(type, location) {\n        super();\n        this._type = undefined;\n        \n        this.type = type;\n        this.location = location; // left, right, middle, None\n    }\n    \n    get type() {\n        return this._type;\n    }\n    \n    set type(v) {\n        this._type = standardizeBarType(v);\n    }\n    \n    musicXMLBarStyle() {\n        return typeToMusicXMLBarStyle(this.type);\n    }\n}\n\nexport default Barline;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/beam -- Beams and Beam class\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { prebase } from './prebase.js';\nimport { duration } from './duration.js';\n\n/**\n * Module holding beam materials. See {@link music21.beam} namespace.\n *\n * @exports music21/beam\n */\n/**\n * {@link music21.beam.Beam} and {music21.beam.Beams} objects\n *\n * @namespace music21.beam\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/duration\n */\nexport const beam = {};\n\nbeam.validBeamTypes = {\n    start: true,\n    stop: true,\n    continue: true,\n    partial: true,\n};\n\nbeam.beamableDurationTypes = [\n    duration.typeFromNumDict[8],\n    duration.typeFromNumDict[16], duration.typeFromNumDict[32],\n    duration.typeFromNumDict[64], duration.typeFromNumDict[128],\n    duration.typeFromNumDict[256],    \n];\n\n\n/**\n * Object representing a single beam (e.g., a 16th note that is beamed needs two)\n *\n * @class Beam\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - \"start\", \"stop\", \"continue\", \"partial\"\n * @param {string} direction - only needed for partial beams: \"left\" or \"right\"\n * @property {int|undefined} number - which beam line does this refer to; 8th = 1, 16th = 2, etc.\n * @property {number|undefined} independentAngle - the angle of this beam if it is different than others (feathered beams)\n */\nexport class Beam extends prebase.ProtoM21Object {\n    constructor(type, direction) {\n        super();\n        this.type = type;\n        this.direction = direction;\n        this.independentAngle = undefined;\n        this.number = undefined;\n    }\n}\nbeam.Beam = Beam;\n/**\n * Object representing a collection of Beams\n *\n * @class Beams\n * @memberof music21.beam\n * @extends music21.prebase.ProtoM21Object\n * @property {Array<music21.beam.Beam>} beamsList - a list of Beam objects\n * @property {Boolean} [feathered=false] - is this a feathered beam.\n * @property {int} length - length of beamsList\n */\nexport class Beams extends prebase.ProtoM21Object {\n    static naiveBeams(srcList) {\n        const beamsList = [];\n        for (const el of srcList) {\n            if (!beam.beamableDurationTypes.includes(el.duration.type)) {\n                beamsList.push(undefined);\n            } else if (el.isRest) {\n                beamsList.push(undefined);\n            } else {\n                const b = new beam.Beams();\n                b.fill(el.duration.type);\n                beamsList.push(b);\n            }\n        }\n        return beamsList;\n    }\n    \n    static removeSandwichedUnbeamables(beamsList) {\n        let beamLast;\n        let beamNext;\n        for (let i = 0; i < beamsList.length; i++) {\n            if (i !== beamsList.length - 1) {\n                beamNext = beamsList[i + 1];\n            } else {\n                beamNext = undefined;\n            }\n            if (beamLast === undefined && beamNext === undefined) {\n                beamsList[i] = undefined;\n            }\n            beamLast = beamsList[i];\n        }\n        return beamsList;\n    }\n    \n    static sanitizePartialBeams(beamsList) {\n        for (let i = 0; i < beamsList.length; i++) {\n            if (beamsList[i] === undefined) {\n                continue;\n            }\n            const allTypes = beamsList[i].getTypes();\n            if (!allTypes.includes('start') \n                    && !allTypes.includes('stop')\n                    && !allTypes.includes('continue')) {\n                // nothing but partials;\n                beamsList[i] = undefined;\n                continue;\n            }\n            let hasStart = false;\n            let hasStop = false;\n            for (const b of beamsList[i].beamsList) {\n                if (b.type === 'start') {\n                    hasStart = true;\n                    continue;\n                }\n                if (b.type === 'stop') {\n                    hasStop = true;\n                    continue;\n                }\n                if (hasStart && b.type === 'partial' && b.direction === 'left') {\n                    b.direction = 'right';\n                } else if (hasStop && b.type === 'partial' && b.direction === 'right') {\n                    b.direction = 'left';\n                }\n            }\n        }\n        return beamsList;\n    }\n    \n    static mergeConnectingPartialBeams(beamsList) {\n        for (let i = 0; i < beamsList.length - 1; i++) {\n            const bThis = beamsList[i];\n            const bNext = beamsList[i + 1];\n            if (!bThis || !bNext) {\n                continue;\n            }\n            const bThisNum = bThis.getNumbers();\n            if (!bThisNum || bThisNum.length === 0) {\n                continue;\n            }\n            for (const thisNum of bThisNum) {\n                const thisBeam = bThis.getByNumber(thisNum);\n                if (thisBeam.type !== 'partial' || thisBeam.direction !== 'right') {\n                    continue;\n                }\n                if (!(bNext.getNumbers().includes(thisNum))) {\n                    continue;\n                }\n                const nextBeam = bNext.getByNumber(thisNum);\n                if (nextBeam.type === 'partial' || nextBeam.direction === 'right') {\n                    continue;\n                }\n                if (nextBeam.type === 'continue' || nextBeam.type === 'stop') {\n                    // should not happen.\n                    continue;\n                }\n                thisBeam.type = 'start';\n                thisBeam.direction = undefined;\n                if (nextBeam.type === 'partial') {\n                    nextBeam.type = 'stop';\n                } else if (nextBeam.type === 'start') {\n                    nextBeam.type = 'continue';\n                }\n                nextBeam.direction = undefined;\n            }\n        }\n        // now fix partial-lefts that follow stops:\n        for (let i = 1; i < beamsList.length; i++) {\n            const bThis = beamsList[i];\n            const bPrev = beamsList[i - 1];\n            if (!bThis || !bPrev) {\n                continue;\n            }\n            const bThisNum = bThis.getNumbers();\n            if (!bThisNum || bThisNum.length === 0) {\n                continue;\n            }\n            for (const thisNum of bThisNum) {\n                const thisBeam = bThis.getByNumber(thisNum);\n                if (thisBeam.type !== 'partial' || thisBeam.direction !== 'left') {\n                    continue;\n                }\n                if (!(bPrev.getNumbers().includes(thisNum))) {\n                    continue;\n                }\n                const prevBeam = bPrev.getByNumber(thisNum);\n                if (prevBeam.type !== 'stop') {\n                    continue;\n                }\n                thisBeam.type = 'stop';\n                thisBeam.direction = undefined;\n                prevBeam.type = 'continue';\n            }\n        }\n        return beamsList;\n    }\n    \n\n    constructor() {\n        super();\n        this.beamsList = [];\n        this.feathered = false;\n    }\n    get length() {\n        return this.beamsList.length;\n    }\n    /**\n     * Append a new {@link music21.beam.Beam} object to this Beams, automatically creating the Beam\n     *   object and incrementing the number count.\n     *\n     * @param {string} type - the type (passed to {@link music21.beam.Beam})\n     * @param {string} [direction=undefined] - the direction if type is \"partial\"\n     * @returns {music21.beam.Beam} newly appended object\n     */\n    append(type, direction) {\n        const obj = new beam.Beam(type, direction);\n        obj.number = this.beamsList.length + 1;\n        this.beamsList.push(obj);\n        return obj;\n    }\n    /**\n     * A quick way of setting the beams list for a particular duration, for\n            instance, fill(\"16th\") will clear the current list of beams in the\n            Beams object and add two beams.  fill(2) will do the same (though note\n            that that is an int, not a string).\n\n     * It does not do anything to the direction that the beams are going in,\n            or by default.  Either set type here or call setAll() on the Beams\n            object afterwards.\n\n     * Both \"eighth\" and \"8th\" work.  Adding more than six beams (i.e. things\n            like 512th notes) raises an error.\n\n     * @param {string|int} level - either a string like \"eighth\" or a number like 1 (=\"eighth\")\n     * @param {string} type - type to fill all beams to.\n     * @returns {this}\n     */\n    fill(level, type) {\n        this.beamsList = [];\n        let count = 1;\n        if (\n            level === 1\n            || level === '8th'\n            || level === duration.typeFromNumDict[8]\n        ) {\n            count = 1;\n        } else if (level === 2 || level === duration.typeFromNumDict[16]) {\n            count = 2;\n        } else if (level === 3 || level === duration.typeFromNumDict[32]) {\n            count = 3;\n        } else if (level === 4 || level === duration.typeFromNumDict[64]) {\n            count = 4;\n        } else if (level === 5 || level === duration.typeFromNumDict[128]) {\n            count = 5;\n        } else if (level === 6 || level === duration.typeFromNumDict[256]) {\n            count = 6;\n        } else {\n            throw new Music21Exception('cannot fill beams for level ' + level);\n        }\n        for (let i = 1; i <= count; i++) {\n            const obj = new beam.Beam();\n            obj.number = i;\n            this.beamsList.push(obj);\n        }\n        if (type !== undefined) {\n            this.setAll(type);\n        }\n        return this;\n    }\n    /**\n     * Get the beam with the given number or throw an exception.\n     *\n     * @param {int} number - the beam number to retrieve (usually one less than the position in `.beamsList`)\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getByNumber(number) {\n        if (!this.getNumbers().includes(number)) {\n            throw new Music21Exception('beam number error: ' + number);\n        }\n        for (const thisBeam of this.beamsList) {\n            if (thisBeam.number === number) {\n                return thisBeam;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get an Array of all the numbers for the beams\n     *\n     * @returns {Array<int>} all the numbers\n     */\n    getNumbers() {\n        const numbers = [];\n        for (const thisBeam of this.beamsList) {\n            numbers.push(thisBeam.number);\n        }\n        return numbers;\n    }\n    /**\n     * Returns the type + \"-\" + direction (if direction is defined)\n     * for the beam with the given number.\n     *\n     * @param {int} number\n     * @returns {music21.beam.Beam|undefined}\n     */\n    getTypeByNumber(number) {\n        const beamObj = this.getByNumber(number);\n        if (beamObj.direction === undefined) {\n            return beamObj.type;\n        } else {\n            const x = beamObj.type + '-' + beamObj.direction;\n            return x;\n        }\n    }\n    /**\n     * Get an Array of all the types for the beams\n     *\n     * @returns {Array<string>} all the types\n     */\n    getTypes() {\n        const types = [];\n        for (let i = 0; i < this.length; i++) {\n            types.push(this.beamsList[i].type);\n        }\n        return types;\n    }\n    /**\n     * Set all the {@link music21.beam.Beam} objects to a given type/direction\n     *\n     * @param {string} type - beam type\n     * @param {string} [direction] - beam direction\n     * @returns {this}\n     */\n    setAll(type, direction) {\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            const b = this.beamsList[i];\n            b.type = type;\n            b.direction = direction;\n        }\n        return this;\n    }\n    /**\n     * Set the {@link music21.beam.Beam} object specified by `number` to a given type/direction\n     *\n     * @param {int} number\n     * @param {string} type\n     * @param {string} [direction]\n     * @returns {this}\n     */\n    setByNumber(number, type, direction) {\n        if (direction === undefined) {\n            const splitit = type.split('-');\n            type = splitit[0];\n            direction = splitit[1]; // can be undefined...\n        }\n        if (beam.validBeamTypes[type] === undefined) {\n            throw new Music21Exception('invalid beam type: ' + type);\n        }\n        for (let i = 0; i < this.length; i++) {\n            if (this.beamsList[i].number === number) {\n                this.beamsList[i].type = type;\n                this.beamsList[i].direction = direction;\n            }\n        }\n        return this;\n    }\n}\nbeam.Beams = Beams;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/pitch -- pitch routines\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { prebase } from './prebase.js';\nimport { common } from './common.js';\n\n/**\n * pitch module.  See {@link music21.pitch} namespace\n *\n * @exports music21/pitch\n */\n/**\n * Pitch related objects and methods\n *\n * @namespace music21.pitch\n * @memberof music21\n * @requires music21/prebase\n */\nexport const pitch = {};\n/**\n * @class Accidental\n * @memberof music21.pitch\n * @param {string|number} accName - an accidental name\n * @property {number} alter\n * @property {string} displayType\n * @property {boolean|undefined} displayStatus\n * @extends music21.prebase.ProtoM21Object\n */\nexport class Accidental extends prebase.ProtoM21Object {\n    constructor(accName) {\n        super();\n        this._name = '';\n        /**\n         *\n         * @type {number}\n         * @private\n         */\n        this._alter = 0.0;\n        /**\n         *\n         * @type {string}\n         * @private\n         */\n        this._modifier = '';\n        /**\n         *\n         * @type {string}\n         * @private\n         */\n        this._unicodeModifier = '';\n        this.displayType = 'normal'; // \"normal\", \"always\" supported currently\n        this.displayStatus = undefined; // true, false, undefined\n        this.set(accName);\n    }\n    \n    stringInfo() {\n        return this.name;\n    }    \n    \n    \n    /**\n     * Sets a parameter of the accidental and updates name, alter, and modifier to suit.\n     *\n     * @param {number|string} accName - the name, number, or modifier to set\n     * @returns {undefined}\n     */\n    set(accName) {\n        if (accName !== undefined && accName.toLowerCase !== undefined) {\n            accName = accName.toLowerCase();\n        }\n\n        if (\n            accName === 'natural'\n            || accName === 'n'\n            || accName === 0\n            || accName === undefined\n        ) {\n            this._name = 'natural';\n            this._alter = 0.0;\n            this._modifier = '';\n            this._unicodeModifier = '♮';\n        } else if (accName === 'sharp' || accName === '#' || accName === 1) {\n            this._name = 'sharp';\n            this._alter = 1.0;\n            this._modifier = '#';\n            this._unicodeModifier = '♯';\n        } else if (\n            accName === 'flat'\n            || accName === '-'\n            || accName === 'b'\n            || accName === -1\n        ) {\n            this._name = 'flat';\n            this._alter = -1.0;\n            this._modifier = '-';\n            this._unicodeModifier = '♭';\n        } else if (\n            accName === 'double-flat'\n            || accName === '--'\n            || accName === -2\n        ) {\n            this._name = 'double-flat';\n            this._alter = -2.0;\n            this._modifier = '--';\n            this._unicodeModifier = '&#x1d12b;';\n        } else if (\n            accName === 'double-sharp'\n            || accName === '##'\n            || accName === 2\n        ) {\n            this._name = 'double-sharp';\n            this._alter = 2.0;\n            this._modifier = '##';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (\n            accName === 'triple-flat'\n            || accName === '---'\n            || accName === -3\n        ) {\n            this._name = 'triple-flat';\n            this._alter = -3.0;\n            this._modifier = '---';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (\n            accName === 'triple-sharp'\n            || accName === '###'\n            || accName === 3\n        ) {\n            this._name = 'triple-sharp';\n            this._alter = 3.0;\n            this._modifier = '###';\n            this._unicodeModifier = '&#x1d12a;';\n        } else if (\n            accName === 'quadruple-flat'\n            || accName === '----'\n            || accName === -4\n        ) {\n            this._name = 'quadruple-flat';\n            this._alter = -4.0;\n            this._modifier = '----';\n            this._unicodeModifier = '♭&#x1d12b;';\n        } else if (\n            accName === 'quadruple-sharp'\n            || accName === '####'\n            || accName === 4\n        ) {\n            this._name = 'quadruple-sharp';\n            this._alter = 4.0;\n            this._modifier = '####';\n            this._unicodeModifier = '&#x1d12a;';\n        } else {\n            throw new Music21Exception('Accidental is not supported: ' + accName);\n        }\n\n    }\n    /**\n     * Return or set the name of the accidental ('flat', 'sharp', 'natural', etc.);\n     *\n     * When set, updates alter and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} name\n     */\n    get name() {\n        return this._name;\n    }\n    set name(n) {\n        this.set(n);\n    }\n\n    /**\n     * Return or set the alter of the accidental\n     *\n     * When set, updates name and modifier.\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {number} alter\n     */\n    get alter() {\n        return this._alter;\n    }\n    set alter(alter) {\n        this.set(alter);\n    }\n    /**\n     * Return or set the modifier ('-', '#', '')\n     *\n     * When set, updates alter and name.\n\n     * @memberof music21.pitch.Accidental#\n     * @var {string} modifier\n     */\n    get modifier() {\n        return this._modifier;\n    }\n    set modifier(modifier) {\n        this.set(modifier);\n    }\n    /**\n     * Returns the modifier for vexflow ('b', '#', 'n')\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} vexflowModifier\n     * @readonly\n     */\n    get vexflowModifier() {\n        // todo -- rewrite with mapping.\n        const m = this.modifier;\n        if (m === '') {\n            return 'n';\n        } else if (m === '#') {\n            return '#';\n        } else if (m === '-') {\n            return 'b';\n        } else if (m === '##') {\n            return '##';\n        } else if (m === '--') {\n            return 'bb';\n        } else if (m === '###') {\n            return '###';\n        } else if (m === '---') {\n            return 'bbb';\n        } else {\n            throw new Music21Exception('Vexflow does not support: ' + m);\n        }\n    }\n    /**\n     * Returns the modifier in unicode or\n     * for double and triple accidentals, as a hex escape\n     *\n     * @memberof music21.pitch.Accidental#\n     * @var {string} unicodeModifier\n     * @readonly\n     */\n    get unicodeModifier() {\n        return this._unicodeModifier;\n    }\n}\npitch.Accidental = Accidental;\n\npitch.nameToMidi = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\npitch.nameToSteps = { C: 0, D: 1, E: 2, F: 3, G: 4, A: 5, B: 6 };\npitch.stepsToName = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\npitch.midiToName = [\n    'C',\n    'C#',\n    'D',\n    'E-',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'A-',\n    'A',\n    'B-',\n    'B',\n];\n\n/**\n * Pitch objects are found in {@link music21.note.Note} objects, and many other places.\n *\n * They do not have a {@link music21.duration.Duration} associated with them, so they\n * cannot be placed inside {@link music21.stream.Stream} objects.\n *\n * Valid pitch name formats are\n * - \"C\", \"D', etc. (\"B\" = American B; \"H\" is not allowed)\n * - \"C#\", \"C-\" (C-flat; do not use \"b\" for flat), \"C##\", \"C###\", \"C--\" etc.\n * - Octave may be specified after the name + accidental: \"C#4\" etc.\n * - Octave can be arbitrarily high (\"C10\") but only as low as \"C0\" because \"C-1\" would be interpreted as C-flat octave 1; shift octave later for very low notes.\n * - If octave is not specified, the system will usually use octave 4, but might adjust according to context. If you do not like this behavior, give an octave always.\n * - Microtones are not supported in music21j (they are in music21p)\n *\n * @class Pitch\n * @memberof music21.pitch\n * @param {string} pn - name of the pitch, with or without octave, see above.\n * @extends music21.prebase.ProtoM21Object\n * @property {music21.pitch.Accidental|undefined} accidental - link to an accidental\n * @property {number} diatonicNoteNum - diatonic number of the pitch, where 29 = C4, C#4, C-4, etc.; 30 = D-4, D4, D#4, etc. updates other properties.\n * @property {number} midi - midi number of the pitch (C4 = 60); readonly. See {@link music21.pitch.Pitch#ps} for setable version.\n * @property {string} name - letter name of pitch + accidental modifier; e.g., B-flat = 'B-'; changes automatically w/ step and accidental\n * @property {string} nameWithOctave - letter name of pitch + accidental modifier + octave; changes automatically w/ step, accidental, and octave\n * @property {number} octave - number for the octave, where middle C = C4, and octaves change between B and C; default 4\n * @property {number} ps - pitch space number, like midi number but floating point and w/ no restriction on range. C4 = 60.0\n * @property {string} step - letter name for the pitch (C-G, A, B), without accidental; default 'C'\n */\nexport class Pitch extends prebase.ProtoM21Object {\n    constructor(pn='C') {\n        super();\n        this._step = 'C';\n        this._octave = 4;\n        this._accidental = undefined;\n        this.spellingIsInferred = false;\n        \n        /* pn can be a nameWithOctave */\n        if (typeof pn === 'number') {\n            if (pn < 12) {\n                pn += 60; // pitchClass\n            }\n            this.ps = pn;\n        } else if (pn.match(/\\d+/)) {\n            this.nameWithOctave = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n\n    stringInfo() {\n        return this.nameWithOctave;\n    }    \n    \n    // N.B. cannot use transpose here, because of circular import.\n\n    get step() {\n        return this._step;\n    }\n    set step(s) {\n        if (s === '') {\n            throw new TypeError('All notes must have a step');\n        }\n        if (typeof s !== 'string') {\n            throw new TypeError('Steps must be strings');\n        }\n        s = s.toUpperCase();\n        if (!pitch.stepsToName.includes(s)) {\n            throw new TypeError(`${s} is not a valid step name.`);\n        }\n        this._step = s;\n        this.spellingIsInferred = false;\n    }\n    get octave() {\n        return this._octave;\n    }\n    set octave(o) {\n        this._octave = o;\n    }\n    get implicitOctave() {\n        const o = this._octave;\n        if (o === undefined) {\n            return 4; // TODO(msc): get from defaults.\n        } else {\n            return o;\n        }        \n    }\n    \n    get accidental() {\n        return this._accidental;\n    }\n    set accidental(a) {\n        if (typeof a !== 'object' && a !== undefined) {\n            a = new pitch.Accidental(a);\n        }\n        this._accidental = a;\n        this.spellingIsInferred = false;\n    }\n    get name() {\n        if (this.accidental === undefined) {\n            return this.step;\n        } else {\n            return this.step + this.accidental.modifier;\n        }\n    }\n    set name(nn) {\n        this.step = nn.slice(0, 1);\n        const tempAccidental = nn.slice(1);\n        if (tempAccidental) {\n            // not the empty string\n            this.accidental = tempAccidental; // converts automatically\n        } else {\n            this.accidental = undefined;\n        }\n    }\n    get nameWithOctave() {\n        return this.name + this.octave.toString();\n    }\n    set nameWithOctave(pn) {\n        const storedOctave = pn.match(/\\d+/);\n        if (storedOctave !== undefined) {\n            pn = pn.replace(/\\d+/, '');\n            this.octave = parseInt(storedOctave);\n            this.name = pn;\n        } else {\n            this.name = pn;\n        }\n    }\n    get pitchClass() {\n        return common.posMod(Math.round(this.ps), 12);\n    }\n    \n    get diatonicNoteNum() {\n        return this.octave * 7 + pitch.nameToSteps[this.step] + 1;\n    }\n    set diatonicNoteNum(newDNN) {\n        newDNN -= 1; // makes math easier        \n        this.octave = Math.floor(newDNN / 7);\n        const mod7DNN = common.posMod(Math.round(newDNN), 7);\n        this.step = pitch.stepsToName[mod7DNN];\n    }\n    get frequency() {\n        return 440 * Math.pow(2, (this.ps - 69) / 12);\n    }\n    get midi() {\n        return Math.floor(this.ps);\n    }\n    get ps() {\n        let accidentalAlter = 0;\n        if (this.accidental !== undefined) {\n            accidentalAlter = this.accidental.alter;\n        }\n        return (\n            (this.octave + 1) * 12\n            + pitch.nameToMidi[this.step]\n            + accidentalAlter\n        );\n    }\n    set ps(ps) {\n        this.name = pitch.midiToName[common.posMod(ps, 12)];\n        this.octave = Math.floor(ps / 12) - 1;\n        this.spellingIsInferred = true;\n    }\n\n    get unicodeName() {\n        if (this.accidental !== undefined) {\n            return this.step + this.accidental.unicodeModifier();\n        } else {\n            return this.step;\n        }\n    }\n    \n    get unicodeNameWithOctave() {\n        if (this.octave === undefined) {\n            return this.unicodeName;\n        } else {\n            return this.unicodeName + this.octave.toString();\n        }\n    }\n    \n    /**\n     * @param {boolean} inPlace\n     * @param {int} directionInt -- -1 = down, 1 = up\n     */\n    _getEnharmonicHelper(inPlace=false, directionInt) {\n        // differs from Python version because\n        // cannot import interval here.\n        let octaveStored = true;\n        if (this.octave === undefined) {\n            octaveStored = false;\n        }\n        const p = this.clone();\n        p.diatonicNoteNum += directionInt;\n        if (p.accidental === undefined) {\n            p.accidental = new Accidental(0);\n        }\n        while (p.ps % 12 !== this.ps % 12) { // octaveless\n            p.accidental.alter += -1 * directionInt;\n        }\n\n        if (!inPlace) {\n            return p;\n        }\n        this.step = p.step;\n        this.accidental = p.accidental;\n        if (p.microtone === undefined) {\n            this.microtone = p.microtone;\n        }\n        if (!octaveStored) {\n            this.octave = undefined;\n        } else {\n            this.octave = p.octave;\n        }\n        return p;\n    }\n\n    getHigherEnharmonic(inPlace=false) {\n        return this._getEnharmonicHelper(inPlace, 1);\n    }\n\n    getLowerEnharmonic(inPlace=false) {\n        return this._getEnharmonicHelper(inPlace, -1);\n    }\n    /* TODO: isEnharmonic, getEnharmonic, getAllCommonEnharmonics */\n\n    /**\n     * Returns the vexflow name for the pitch in the given clef.\n     *\n     * @memberof music21.pitch.Pitch#\n     * @param {music21.clef.Clef} clefObj - the active {@link music21.clef.Clef} object\n     * @returns {string} - representation in vexflow\n     */\n    vexflowName(clefObj) {\n        // returns a vexflow Key name for this pitch.\n        let tempPitch = this;\n        if (clefObj !== undefined) {\n            try {\n                tempPitch = clefObj.convertPitchToTreble(this);\n            } catch (e) {\n                console.log(e, clefObj);\n            }\n        }\n        let accidentalType = 'n';\n        if (this.accidental !== undefined) {\n            if ([0, -1, -2, 1, 2].includes(this.accidental.alter)) {\n                accidentalType = this.accidental.vexflowModifier;                \n            } else {\n                console.warn('unsupported accidental: ' + this.accidental);\n            }\n        }\n        const outName\n            = tempPitch.step + accidentalType + '/' + tempPitch.octave;\n        return outName;\n    }\n}\npitch.Pitch = Pitch;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/note -- Note, Rest, NotRest, GeneralNote\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as Vex from 'vexflow';\n\nimport { prebase } from './prebase.js';\nimport { base } from './base.js';\nimport { debug } from './debug.js';\nimport { pitch } from './pitch.js';\nimport { beam } from './beam.js';\nimport { common } from './common.js';\nimport { Music21Exception } from './exceptions21.js';\n\n/**\n * Module for note classes. See the namespace {@link music21.note}\n *\n * @requires music21/common\n * @requires music21/prebase\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/beam\n * @exports music21/note\n */\n/**\n * Namespace for notes (single pitch) or rests, and some things like Lyrics that go on notes.\n *\n * @namespace music21.note\n * @memberof music21\n * @property {string[]} noteheadTypeNames - an Array of allowable notehead names.\n * @property {string[]} stemDirectionNames - an Array of allowable stemDirection names.\n */\nexport const note = {};\n\nexport class NotRestException extends Music21Exception {\n    // no need\n}\nnote.NotRestException = NotRestException;\n\nnote.noteheadTypeNames = [\n    'arrow down',\n    'arrow up',\n    'back slashed',\n    'circle dot',\n    'circle-x',\n    'circled',\n    'cluster',\n    'cross',\n    'diamond',\n    'do',\n    'fa',\n    'inverted triangle',\n    'la',\n    'left triangle',\n    'mi',\n    'none',\n    'normal',\n    'other',\n    're',\n    'rectangle',\n    'slash',\n    'slashed',\n    'so',\n    'square',\n    'ti',\n    'triangle',\n    'x',\n];\n\nnote.stemDirectionNames = [\n    'double',\n    'down',\n    'noStem',\n    'none',\n    'unspecified',\n    'up',\n];\n\n/**\n * Class for a single Lyric attached to a {@link music21.note.GeneralNote}\n *\n * @class Lyric\n * @memberOf music21.note\n * @extends music21.prebase.ProtoM21Object\n * @param {string} text - the text of the lyric\n * @param {number} number=1 - the lyric number\n * @param {string} syllabic=undefined - placement of the syllable ('begin', 'middle', 'end', 'single'); undefined = interpret from text\n * @param {boolean} applyRaw=false - true = display the text exactly as it is or, false = use \"-\" etc. to determine syllabic\n * @param {string} identifier=undefined - identifier for the lyric.\n * @property {string} lyricConnector='-' - what to place between two lyrics that are syllabic.\n * @property {string} text - the text of the lyric syllable.\n * @property {string} syllabic - see above\n * @property {boolean} applyRaw - see above\n * @property {string} identifier - see above; gets .number if undefined\n * @property {number} number - see above\n * @property {string} rawText - text + any connectors\n */\nexport class Lyric extends prebase.ProtoM21Object {\n    constructor(text, number = 1, syllabic, applyRaw, identifier) {\n        super();\n        this.lyricConnector = '-'; // override to place something else between two notes...\n        this.text = text;\n        this._number = number;\n        this.syllabic = syllabic;\n        this.applyRaw = applyRaw || false;\n        this.setTextAndSyllabic(this.text, this.applyRaw);\n        this._identifier = identifier;\n        this.style = {\n            fillStyle: 'black',\n            strokeStyle: 'black',\n            fontFamily: 'Serif',\n            fontSize: 12,\n            fontWeight: '',\n        };\n    }\n    get identifier() {\n        return this._identifier || this._number;\n    }\n    set identifier(i) {\n        this._identifier = i;\n    }\n    // a property just to match m21p\n    get number() {\n        return this._number;\n    }\n    set number(n) {\n        this._number = n;\n    }\n\n    /**\n     * get rawText - gets the raw text.\n     *\n     * @return {string}  raw text\n     */\n    get rawText() {\n        if (this.syllabic === 'begin') {\n            return this.text + this.lyricConnector;\n        } else if (this.syllabic === 'middle') {\n            return this.lyricConnector + this.text + this.lyricConnector;\n        } else if (this.syllabic === 'end') {\n            return this.lyricConnector + this.text;\n        } else {\n            return this.text;\n        }\n    }\n    set rawText(t) {\n        this.setTextAndSyllabic(t, true);\n    }\n\n    /**\n     * setTextAndSyllabic - Given a setting for rawText and applyRaw,\n     *     sets the syllabic type for a lyric based on the rawText\n     *\n     * @param  {string} rawText text\n     * @param  {boolean} applyRaw = false if hyphens should not be applied\n     * @return {this}\n     */\n    setTextAndSyllabic(rawText, applyRaw = false) {\n        if (rawText === undefined) {\n            this.text = undefined;\n            return this;\n        }\n\n        if (\n            !applyRaw\n            && rawText.indexOf(this.lyricConnector) === 0\n            && rawText.slice(-1) === this.lyricConnector\n        ) {\n            this.text = rawText.slice(1, -1);\n            this.syllabic = 'middle';\n        } else if (!applyRaw && rawText.indexOf(this.lyricConnector) === 0) {\n            this.text = rawText.slice(1);\n            this.syllabic = 'end';\n        } else if (!applyRaw && rawText.slice(-1) === this.lyricConnector) {\n            this.text = rawText.slice(0, -1);\n            this.syllabic = 'begin';\n        } else {\n            this.text = rawText;\n            if (this.syllabic === undefined) {\n                this.syllabic = 'single';\n            }\n        }\n        return this;\n    }\n}\nnote.Lyric = Lyric;\n\n/* Notes and rests etc... */\n\n/**\n * Superclass for all Note values\n *\n * @class GeneralNote\n * @memberof music21.note\n * @extends music21.base.Music21Object\n * @param {(number|undefined)} [ql=1.0] - quarterLength of the note\n * @property {boolean} [isChord=false] - is this a chord\n * @property {number} quarterLength - shortcut to `.duration.quarterLength`\n * @property {Object} activeVexflowNote - most recent Vex.Flow.StaveNote object to be made from this note (could change); default, undefined\n * @property {Array<music21.expressions.Expression>} expressions - array of attached expressions\n * @property {Array<music21.articulations.Articulation>} articulations - array of attached articulations\n * @property {string} lyric - the text of the first {@link music21.note.Lyric} object; can also set one.\n * @property {Array<music21.note.Lyric>} lyrics - array of attached lyrics\n * @property {number} [volume=60] - how loud is this note, 0-127, before articulations\n * @property {number} midiVolume - how loud is this note, taking into account articulations\n * @property {music21.note.Tie|undefined} [tie=undefined] - a tie object\n */\nexport class GeneralNote extends base.Music21Object {\n    constructor(ql) {\n        super();\n        this.isChord = false;\n        if (ql !== undefined) {\n            this.duration.quarterLength = ql;\n        } else {\n            this.duration.quarterLength = 1.0;\n        }\n        this.volume = 60;\n        this.activeVexflowNote = undefined;\n        this.expressions = [];\n        this.articulations = [];\n        this.lyrics = [];\n        this.tie = undefined;\n        /* TODO: editorial objects, color, addLyric, insertLyric, hasLyrics */\n        /* Later: augmentOrDiminish, getGrace, */\n    }\n    get lyric() {\n        if (this.lyrics.length > 0) {\n            return this.lyrics[0].text;\n        } else {\n            return undefined;\n        }\n    }\n    set lyric(value) {\n        this.lyrics = [];\n        if (value !== undefined && value !== false) {\n            this.lyrics.push(new note.Lyric(value));\n        }\n    }\n    get midiVolume() {\n        let volume = this.volume;\n        if (volume === undefined) {\n            volume = 60;\n        }\n        if (this.articulations !== undefined) {\n            this.articulations.forEach(a => {\n                volume *= a.dynamicScale;\n                if (volume > 127) {\n                    volume = 127;\n                } else if (isNaN(volume)) {\n                    volume = 60;\n                }\n            });\n        }\n        volume = Math.floor(volume);\n        return volume;\n    }\n    /**\n     * Add a {@link music21.note.Lyric} object to the Note\n     *\n     * @param {string} text - text to be added\n     * @param {number} [lyricNumber] - integer specifying lyric (defaults to the current `.lyrics.length` + 1)\n     * @param {boolean} [applyRaw=false] - if `true`, do not parse the text for cluses about syllable placement.\n     * @param {string} [lyricIdentifier] - an optional identifier\n     */\n    addLyric(text, lyricNumber, applyRaw = false, lyricIdentifier) {\n        if (lyricNumber === undefined) {\n            const maxLyrics = this.lyrics.length + 1;\n            const newLyric = new note.Lyric(\n                text,\n                maxLyrics,\n                undefined,\n                applyRaw,\n                lyricIdentifier\n            );\n            this.lyrics.push(newLyric);\n        } else {\n            let foundLyric = false;\n            for (let i = 0; i < this.lyrics.length; i++) {\n                const thisLyric = this.lyrics[i];\n                if (thisLyric.number === lyricNumber) {\n                    thisLyric.text = text;\n                    foundLyric = true;\n                    break;\n                }\n            }\n            if (foundLyric === false) {\n                const newLyric = new note.Lyric(\n                    text,\n                    lyricNumber,\n                    undefined,\n                    applyRaw,\n                    lyricIdentifier\n                );\n                this.lyrics.push(newLyric);\n            }\n        }\n    }\n    /**\n     * Change stem direction according to clef. Does nothing for GeneralNote; overridden in subclasses.\n     *\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {undefined}\n     */\n    setStemDirectionFromClef(clef) {\n        return undefined;\n    }\n    getStemDirectionFromClef(clef) {\n        return undefined;\n    }\n    \n    /**\n     * Sets the vexflow accidentals (if any), the dots, and the stem direction\n     *\n     * @param {Vex.Flow.StaveNote} vfn - a Vex.Flow note\n     * @param {Object} options -- a set of Vex Flow options\n     */\n    vexflowAccidentalsAndDisplay(vfn, options) {\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (debug) {\n            console.log(this.stemDirection);\n        }\n        if (this.stemDirection === 'noStem') {\n            vfn.hasStem = () => false; // need to override...\n            // vfn.render_options.stem_height = 0;\n        } else {\n            // correct VexFlow stem length for notes far from the center line;\n            let staveDNNSpacing = 5;\n            if (options.stave) {\n                staveDNNSpacing = Math.floor(\n                    options.stave.options.spacing_between_lines_px / 2\n                );\n            }\n            if (options.clef !== undefined && this.pitch !== undefined) {\n                const midLine = options.clef.lowestLine + 4;\n                // console.log(midLine);\n                const absDNNfromCenter = Math.abs(\n                    this.pitch.diatonicNoteNum - midLine\n                );\n                const absOverOctave = absDNNfromCenter - 7;\n                // console.log(absOverOctave);\n                if (absOverOctave > 0 && vfn.getStemLength !== undefined) {\n                    const stemHeight\n                        = absOverOctave * staveDNNSpacing + vfn.getStemLength();\n                    vfn.setStemLength(stemHeight);\n                }\n            }\n        }\n    }\n    /**\n     * Play the current element as a MIDI note.\n     *\n     * @param {number} [tempo=120] - tempo in bpm\n     * @param {music21.base.Music21Object} [nextElement] - for determining the length to play in case of tied notes, etc.\n     * @param {Object} [options] - other options (currently just `{instrument: {@link music21.instrument.Instrument} }`)\n     * @returns {Number} - delay time in milliseconds until the next element (may be ignored)\n     */\n    playMidi(tempo=120, nextElement, options) {\n        // returns the number of milliseconds to the next element in\n        // case that can't be determined otherwise.\n        if (options === undefined) {\n            let inst;\n            if (this.activeSite !== undefined) {\n                inst = this.activeSite.instrument;\n            }\n            options = { instrument: inst };\n        }\n\n        const volume = this.midiVolume;\n        let channel = 0;\n        if (options.instrument !== undefined) {\n            channel = options.instrument.midiChannel;\n        }\n        const ql = this.duration.quarterLength;\n        const milliseconds = 60 * ql * 1000 / tempo;\n        let midNum;\n        if (this.isClassOrSubclass('Note')) {\n            // Note, not rest\n            midNum = this.pitch.midi;\n            let stopTime = milliseconds / 1000;\n            if (\n                nextElement !== undefined\n                && nextElement.isClassOrSubclass('Note')\n            ) {\n                if (nextElement.pitch.midi !== this.pitch.midi) {\n                    stopTime += 60 * 0.25 / tempo; // legato -- play 16th note longer\n                } else if (\n                    this.tie !== undefined\n                    && (this.tie.type === 'start' || this.tie.type === 'continue')\n                ) {\n                    stopTime += 60 * nextElement.duration.quarterLength / tempo;\n                    // this does not take into account 3 or more notes tied.\n                    // TODO: look ahead at next nexts, etc.\n                }\n            } else if (nextElement === undefined) {\n                // let last note ring an extra beat...\n                stopTime += 60 / tempo;\n            }\n            // console.log(stopTime);\n            // console.log(this.tie);\n            if (this.tie === undefined || this.tie.type === 'start') {\n                // console.log(volume);\n                try {\n                    MIDI.noteOn(channel, midNum, volume, 0);\n                    MIDI.noteOff(channel, midNum, stopTime);                    \n                } catch (e) {\n                    // do nothing -- might not have an output channel because of audio not connected\n                }\n            } // else { console.log ('not going to play ', this.nameWithOctave); }\n        } else if (this.isClassOrSubclass('Chord')) {\n            // TODO: Tied Chords.\n            for (let j = 0; j < this._notes.length; j++) {\n                midNum = this._notes[j].pitch.midi;\n                try {\n                    MIDI.noteOn(channel, midNum, volume, 0);\n                    MIDI.noteOff(channel, midNum, milliseconds / 1000);                    \n                } catch (e) {\n                    // do nothing -- might not have an output channel because of audio not connected                    \n                }\n            }\n        } // it's a note.Rest -- do nothing -- milliseconds takes care of it...\n        return milliseconds;\n    }\n}\nnote.GeneralNote = GeneralNote;\n\n/**\n * Specifies that a GeneralNote is not a rest (Unpitched, Note, Chord).\n *\n * @class NotRest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in quarter notes\n * @property {music21.beam.Beams} beams - a link to a beam object\n * @property {string} [notehead='normal'] - notehead type\n * @property {string} [noteheadFill='default'] - notehead fill (to be moved to style...)\n * @property {string|undefined} [noteheadColor=undefined] - notehead color\n * @property {boolean} [noteheadParenthesis=false] - put a parenthesis around the notehead?\n * @property {string|undefined} [stemDirection=undefined] - One of ['up','down','noStem', undefined] -- 'double' not supported\n */\nexport class NotRest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.notehead = 'normal';\n        this.noteheadFill = 'default';\n        this.noteheadColor = 'black';\n        this.noteheadParenthesis = false;\n        this.volume = undefined; // not a real object yet.\n        this.beams = new beam.Beams();\n        /* TODO: this.duration.linkage -- need durationUnits */\n        this._stemDirection = 'unspecified';\n        /* TODO: check notehead, noteheadFill, noteheadParentheses */\n    }\n    \n    get stemDirection() {\n        return this._stemDirection;\n    }\n    \n    set stemDirection(direction) {\n        if (direction === undefined) {\n            direction = 'unspecified';\n        } else if (direction === 'none') {\n            direction = 'noStem';\n        } else if (!note.stemDirectionNames.includes(direction)) {\n            throw new NotRestException(`not a valid stem direction name: ${direction}`);\n        }\n        this._stemDirection = direction; \n    }\n    \n}\nnote.NotRest = NotRest;\n\n/* ------- Note ----------- */\n/**\n * A very, very important class! music21.note.Note objects combine a {@link music21.pitch.Pitch}\n * object to describe pitch (highness/lowness) with a {@link music21.duration.Duration} object\n * that defines length, with additional features for drawing the Note, playing it back, etc.\n *\n * Together with {@link music21.stream.Stream} one of the two most important\n * classes in `music21`.\n *\n * See {@link music21.note.NotRest}, {@link music21.note.GeneralNote}, {@link music21.base.Music21Object}\n * and {@link music21.prebase.ProtoM21Object} (or in general, the **extends** list below) for other\n * things you can do with a `Note` object.\n *\n * Missing from music21p: `transpose(), fullName`.  Transpose cannot be added because of circular imports\n *\n * @class Note\n * @memberof music21.note\n * @extends music21.note.NotRest\n * @param {(string|music21.pitch.Pitch|undefined)} [nn='C4'] - pitch name (\"C\", \"D#\", \"E-\") w/ or w/o octave (\"C#4\"), or a pitch.Pitch object\n * @param {(number|undefined)} [ql=1.0] - length in quarter notes\n * @property {Boolean} [isNote=true] - is it a Note? Yes!\n * @property {Boolean} [isRest=false] - is it a Rest? No!\n * @property {music21.pitch.Pitch} pitch - the {@link music21.pitch.Pitch} associated with the Note.\n * @property {string} name - shortcut to `.pitch.name`\n * @property {string} nameWithOctave - shortcut to `.pitch.nameWithOctave`\n * @property {string} step - shortcut to `.pitch.step`\n * @property {number} octave - shortcut to `.pitch.octave`\n */\nexport class Note extends NotRest {\n    constructor(nn, ql) {\n        super(ql);\n        this.isNote = true; // for speed\n        this.isRest = false; // for speed\n        if (\n            nn !== undefined\n            && nn.isClassOrSubclass !== undefined\n            && nn.isClassOrSubclass('Pitch') === true\n        ) {\n            this.pitch = nn;\n        } else {\n            this.pitch = new pitch.Pitch(nn);\n        }\n    }\n    \n    stringInfo() {\n        return this.name;\n    }    \n    \n    get name() {\n        return this.pitch.name;\n    }\n    set name(nn) {\n        this.pitch.name = nn;\n    }\n    get nameWithOctave() {\n        return this.pitch.nameWithOctave;\n    }\n    set nameWithOctave(nn) {\n        this.pitch.nameWithOctave = nn;\n    }\n    get step() {\n        return this.pitch.step;\n    }\n    set step(nn) {\n        this.pitch.step = nn;\n    }\n    get octave() {\n        return this.pitch.octave;\n    }\n    set octave(nn) {\n        this.pitch.octave = nn;\n    }\n    \n    get pitches() {\n        return [this.pitch];\n    }\n    set pitches(value) {\n        this.pitch = value[0];\n        // TODO: raise NoteException on index error.\n    }\n    \n    \n    /* TODO: transpose, fullName */\n    \n    \n    /**\n     * Change stem direction according to clef.\n     *\n     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.\n     * @returns {music21.note.Note} Original object, for chaining methods\n     */\n    setStemDirectionFromClef(clef) {\n        if (clef !== undefined) {\n            this.stemDirection = this.getStemDirectionFromClef(clef);\n        }\n        return this;        \n    }\n    \n    /**\n     * Same as setStemDirectionFromClef, but do not set the note, just return it.\n     */\n    getStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return undefined;\n        }\n        const midLine = clef.lowestLine + 4;\n        const DNNfromCenter = this.pitch.diatonicNoteNum - midLine;\n        // console.log(DNNfromCenter, this.pitch.nameWithOctave);\n        if (DNNfromCenter >= 0) {\n            return 'down';\n        } else {\n            return 'up';\n        }\n    }\n    \n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this note.\n     *\n     * @param {Object} [options={}] - `{clef: {@link music21.clef.Clef} }`\n     * clef to set the stem direction of.\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const params = {};\n        common.merge(params, options);\n        const clef = params.clef;\n\n        let useStemDirection = this.stemDirection;\n        \n        // fixup stem direction -- must happen before Vex.Flow.Note is created...\n        if (\n            this.activeSite !== undefined\n            && this.activeSite.renderOptions.stemDirection !== undefined\n            && note.stemDirectionNames.includes(\n                this.activeSite.renderOptions.stemDirection\n            )\n        ) {\n            useStemDirection = this.activeSite.renderOptions.stemDirection;\n        } else if (\n            [undefined, 'unspecified'].includes(this.stemDirection)\n            && options.clef !== undefined\n        ) {\n            useStemDirection = this.getStemDirectionFromClef(options.clef);\n        }\n\n        if (this.duration === undefined) {\n            // console.log(this);\n            return undefined;\n        }\n        const vfd = this.duration.vexflowDuration;\n        if (vfd === undefined) {\n            return undefined;\n        }\n        const vexflowKey = this.pitch.vexflowName(clef);\n\n        // Not supported: Double;  None is done elsewhere?\n        const vfnStemDirection\n            = useStemDirection === 'down'\n                ? Vex.Flow.StaveNote.STEM_DOWN\n                : Vex.Flow.StaveNote.STEM_UP;\n\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [vexflowKey],\n            duration: vfd,\n            stem_direction: vfnStemDirection,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, params); // clean up stuff...\n        if (this.pitch.accidental !== undefined) {\n            if (\n                this.pitch.accidental.vexflowModifier !== 'n'\n                && this.pitch.accidental.displayStatus !== false\n            ) {\n                vfn.addAccidental(\n                    0,\n                    new Vex.Flow.Accidental(\n                        this.pitch.accidental.vexflowModifier\n                    )\n                );\n            } else if (\n                this.pitch.accidental.displayType === 'always'\n                || this.pitch.accidental.displayStatus === true\n            ) {\n                vfn.addAccidental(\n                    0,\n                    new Vex.Flow.Accidental(\n                        this.pitch.accidental.vexflowModifier\n                    )\n                );\n            }\n        }\n\n        if (this.articulations[0] !== undefined) {\n            for (let i = 0; i < this.articulations.length; i++) {\n                const art = this.articulations[i];\n                // 0 refers to the first pitch (for chords etc.)...\n                vfn.addArticulation(0, art.vexflow());\n            }\n        }\n        if (this.expressions[0] !== undefined) {\n            for (let j = 0; j < this.expressions.length; j++) {\n                const exp = this.expressions[j];\n                // 0 refers to the first pitch (for chords etc.)...\n                vfn.addArticulation(0, exp.vexflow());\n            }\n        }\n        if (this.noteheadColor !== undefined) {\n            vfn.setStyle({ fillStyle: this.noteheadColor, strokeStyle: this.noteheadColor });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Note = Note;\n\n/* ------ TODO: Unpitched ------ */\n\n/* ------ Rest ------ */\n\n/**\n * Represents a musical rest.\n *\n * @class Rest\n * @memberof music21.note\n * @extends music21.note.GeneralNote\n * @param {number} [ql=1.0] - length in number of quarterNotes\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=true]\n * @property {string} [name='rest']\n * @property {number} [lineShift=undefined] - number of lines to shift up or down from default\n * @property {string|undefined} [color='black'] - color of the rest\n */\nexport class Rest extends GeneralNote {\n    constructor(ql) {\n        super(ql);\n        this.isNote = false; // for speed\n        this.isRest = true; // for speed\n        this.name = 'rest'; // for note compatibility\n        this.lineShift = undefined;\n        this.color = 'black';\n    }\n    \n    stringInfo() {\n        return this.duration.quarterLength.toString();\n    }\n    \n    \n    /**\n     * Returns a `Vex.Flow.StaveNote` that approximates this rest.\n     * Corrects for bug in VexFlow that renders a whole rest too low.\n     *\n     * @param {Object} options -- vexflow options\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        let keyLine = 'b/4';\n        if (this.duration.type === 'whole') {\n            if (\n                this.activeSite !== undefined\n                && this.activeSite.renderOptions.staffLines !== 1\n            ) {\n                keyLine = 'd/5';\n            }\n        }\n        if (this.lineShift !== undefined) {\n            const p = new pitch.Pitch('B4');\n            let ls = this.lineShift;\n            if (this.duration.type === 'whole') {\n                ls += 2;\n            }\n            p.diatonicNoteNum += ls;\n            keyLine = p.vexflowName(undefined);\n        }\n\n        const vfn = new Vex.Flow.StaveNote({\n            keys: [keyLine],\n            duration: this.duration.vexflowDuration + 'r',\n        });\n        if (this.duration.dots > 0) {\n            for (let i = 0; i < this.duration.dots; i++) {\n                vfn.addDotToAll();\n            }\n        }\n        if (this.color !== undefined) {\n            vfn.setStyle({ fillStyle: this.color, strokeStyle: this.color });\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n}\nnote.Rest = Rest;\n\n/* ------ SpacerRest ------ */\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/interval -- Interval routines\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { note } from './note.js';\nimport { prebase } from './prebase.js';\nimport { pitch } from './pitch.js';\n\n/**\n * interval module. See {@link music21.interval} for namespace\n *\n * @exports music21/interval\n */\n/**\n * Interval related objects\n *\n * @namespace music21.interval\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/pitch\n */\nexport const interval = {};\n\n/**\n * Interval Directions as an Object/map\n *\n * @memberof music21.interval\n * @example\n * if (music21.interval.Direction.OBLIQUE >\n *     music21.interval.Direction.ASCENDING ) {\n *    console.log(music21.interval.Direction.DESCENDING);\n * }\n *\n */\ninterval.Direction = {\n    DESCENDING: -1,\n    OBLIQUE: 0,\n    ASCENDING: 1,\n};\n\n/**\n * N.B. a dict in music21p -- the indexes here let Direction call them + 1\n *\n * @memberof music21.interval\n * @example\n * console.log(music21.interval.IntervalDirectionTerms[music21l.interval.Direction.OBLIQUE + 1])\n * // \"Oblique\"\n */\ninterval.IntervalDirectionTerms = ['Descending', 'Oblique', 'Ascending'];\n\n/**\n * ordinals for music terms...\n *\n * @memberof music21.interval\n * @example\n * for (var i = 1; // N.B. 0 = undefined\n *      i < music21.interval.MusicOrdinals.length;\n *      i++) {\n *     console.log(i, music21.interval.MusicOrdinals[i]);\n * }\n * // 1, Unison\n * // 2, Second\n * // 3, Third\n * // ...\n * // 8, Octave\n * // ...\n * // 15, Double Octave\n */\ninterval.MusicOrdinals = [\n    undefined,\n    'Unison',\n    'Second',\n    'Third',\n    'Fourth',\n    'Fifth',\n    'Sixth',\n    'Seventh',\n    'Octave',\n    'Ninth',\n    'Tenth',\n    'Eleventh',\n    'Twelfth',\n    'Thirteenth',\n    'Fourteenth',\n    'Double Octave',\n];\n\n/**\n * Represents an interval such as unison, second, etc.\n *\n * Properties are demonstrated below.\n *\n * @class GenericInterval\n * @memberof music21.interval\n * @param {number} [gi=1] - generic interval (1 or higher, or -2 or lower)\n * @example\n * var gi = new music21.interval.GenericInterval(-14)\n * gi.value\n * // -14\n * gi.directed\n * // -14\n * gi.undirected\n * // 14\n * gi.direction == music21.interval.Direction.DESCENDING\n * // true\n * gi.isSkip\n * // true\n * gi.isStep\n * // false\n * gi.isDiatonicStep\n * // false  // augmented unisons are not diatonicSteps but can't tell yet..\n * gi.isUnison\n * // false\n * gi.simpledDirected\n * // -7\n * gi.simpleUndirected\n * // 7\n * gi.undirectedOctaves\n * // 1\n * gi.semiSimpleUndirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.semiSimpleDirected\n * // 7  -- semiSimple distinguishes between 8 and 1; that's all\n * gi.perfectable\n * // false\n * gi.niceName\n * // \"Fourteenth\"\n * gi.directedNiceName\n * // \"Descending Fourteenth\"\n * gi.simpleNiceName\n * // \"Seventh\"\n * gi.staffDistance\n * // -13\n * gi.mod7inversion\n * // 2  // sevenths invert to seconds\n *\n */\nexport class GenericInterval extends prebase.ProtoM21Object {\n    constructor(gi) {\n        super();\n        if (gi === undefined) {\n            gi = 1;\n        }\n        this.value = gi; // todo: convertGeneric() from python\n        this.directed = this.value;\n        this.undirected = Math.abs(this.value);\n\n        if (this.directed === 1) {\n            this.direction = interval.Direction.OBLIQUE;\n        } else if (this.directed < 0) {\n            this.direction = interval.Direction.DESCENDING;\n        } else if (this.directed > 1) {\n            this.direction = interval.Direction.ASCENDING;\n        }\n        // else (raise exception)\n\n        if (this.undirected > 2) {\n            this.isSkip = true;\n        } else {\n            this.isSkip = false;\n        }\n\n        if (this.undirected === 2) {\n            this.isDiatonicStep = true;\n        } else {\n            this.isDiatonicStep = false;\n        }\n\n        this.isStep = this.isDiatonicStep;\n\n        if (this.undirected === 1) {\n            this.isUnison = true;\n        } else {\n            this.isUnison = false;\n        }\n\n        let tempSteps = common.posMod(this.undirected, 7);\n        let tempOctaves = parseInt(this.undirected / 7);\n        if (tempSteps === 0) {\n            tempOctaves -= 1;\n            tempSteps = 7;\n        }\n        this.simpleUndirected = tempSteps;\n        this.undirectedOctaves = tempOctaves;\n        if (tempSteps === 1 && tempOctaves >= 1) {\n            this.semiSimpleUndirected = 8;\n        } else {\n            this.semiSimpleUndirected = this.simpleUndirected;\n        }\n\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.octaves = -1 * tempOctaves;\n            if (tempSteps !== 1) {\n                this.simpleDirected = -1 * tempSteps;\n            } else {\n                this.simpleDirected = 1; // no descending unisons...\n            }\n            this.semiSimpleDirected = -1 * this.semiSimpleUndirected;\n        } else {\n            this.octaves = tempOctaves;\n            this.simpleDirected = tempSteps;\n            this.semiSimpleDirected = this.semiSimpleUndirected;\n        }\n        if (\n            this.simpleUndirected === 1\n            || this.simpleUndirected === 4\n            || this.simpleUndirected === 5\n        ) {\n            this.perfectable = true;\n        } else {\n            this.perfectable = false;\n        }\n\n        if (this.undirected < interval.MusicOrdinals.length) {\n            this.niceName = interval.MusicOrdinals[this.undirected];\n        } else {\n            this.niceName = this.undirected.toString();\n        }\n\n        this.simpleNiceName = interval.MusicOrdinals[this.simpleUndirected];\n        this.semiSimpleNiceName\n            = interval.MusicOrdinals[this.semiSimpleUndirected];\n\n        if (Math.abs(this.directed) === 1) {\n            this.staffDistance = 0;\n        } else if (this.directed > 1) {\n            this.staffDistance = this.directed - 1;\n        } else if (this.directed < -1) {\n            this.staffDistance = this.directed + 1;\n        }\n        // else: raise IntervalException(\"Non-integer, -1, or 0 not permitted as a diatonic interval\")\n\n        // 2 -> 7; 3 -> 6; 8 -> 1 etc.\n        this.mod7inversion = 9 - this.semiSimpleUndirected;\n\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.mod7 = this.mod7inversion; // see chord.semitonesFromChordStep for usage...\n        } else {\n            this.mod7 = this.simpleDirected;\n        }\n    }\n\n    /**\n     * Returns a new GenericInterval which is the mod7inversion; 3rds (and 10ths etc.) to 6ths, etc.\n     *\n     * @returns {music21.interval.GenericInterval}\n     */\n    complement() {\n        return new interval.GenericInterval(this.mod7inversion);\n    }\n\n    /**\n     * Returns a new GenericInterval which has the opposite direction\n     * (descending becomes ascending, etc.)\n     *\n     * @returns {music21.interval.GenericInterval}\n     */\n    reverse() {\n        if (this.undirected === 1) {\n            return new interval.GenericInterval(1);\n        } else {\n            return new interval.GenericInterval(\n                this.undirected * (-1 * this.direction)\n            );\n        }\n    }\n    /**\n     * Given a specifier, return a new DiatonicInterval with this generic.\n     *\n     * @param {string|number} specifier - a specifier such as \"P\", \"m\", \"M\", \"A\", \"dd\" etc.\n     * @returns {music21.interval.DiatonicInterval}\n     */\n    getDiatonic(specifier) {\n        return new interval.DiatonicInterval(specifier, this);\n    }\n\n    /**\n     * Transpose a pitch by this generic interval, maintaining accidentals\n     *\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        const pitch2 = new pitch.Pitch();\n        pitch2.step = p.step;\n        pitch2.octave = p.octave;\n\n        const oldDiatonicNum = p.diatonicNoteNum;\n\n        const distanceToMove = this.staffDistance;\n\n        // if not reverse...\n        const newDiatonicNumber = oldDiatonicNum + distanceToMove;\n        const [newStep, newOctave] = interval.convertDiatonicNumberToStep(\n            newDiatonicNumber\n        );\n        pitch2.step = newStep;\n        pitch2.octave = newOctave;\n        if (p.accidental !== undefined) {\n            pitch2.accidental = new pitch.Accidental(p.accidental.name);\n        }\n        return pitch2;\n    }\n}\ninterval.GenericInterval = GenericInterval;\n\ninterval.IntervalSpecifiersEnum = {\n    PERFECT: 1,\n    MAJOR: 2,\n    MINOR: 3,\n    AUGMENTED: 4,\n    DIMINISHED: 5,\n    DBLAUG: 6,\n    DBLDIM: 7,\n    TRPAUG: 8,\n    TRPDIM: 9,\n    QUADAUG: 10,\n    QUADDIM: 11,\n};\n\ninterval.IntervalNiceSpecNames = [\n    'ERROR',\n    'Perfect',\n    'Major',\n    'Minor',\n    'Augmented',\n    'Diminished',\n    'Doubly-Augmented',\n    'Doubly-Diminished',\n    'Triply-Augmented',\n    'Triply-Diminished',\n    'Quadruply-Augmented',\n    'Quadruply-Diminished',\n];\ninterval.IntervalPrefixSpecs = [\n    undefined,\n    'P',\n    'M',\n    'm',\n    'A',\n    'd',\n    'AA',\n    'dd',\n    'AAA',\n    'ddd',\n    'AAAA',\n    'dddd',\n];\n\ninterval.IntervalOrderedPerfSpecs = [\n    'dddd',\n    'ddd',\n    'dd',\n    'd',\n    'P',\n    'A',\n    'AA',\n    'AAA',\n    'AAAA',\n];\n\ninterval.IntervalPerfSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.PERFECT,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalPerfOffset = 4;\n\ninterval.IntervalOrderedImperfSpecs = [\n    'dddd',\n    'ddd',\n    'dd',\n    'd',\n    'm',\n    'M',\n    'A',\n    'AA',\n    'AAA',\n    'AAAA',\n];\n\ninterval.IntervalSpecifiers = [\n    interval.IntervalSpecifiersEnum.QUADDMIN,\n    interval.IntervalSpecifiersEnum.TRPDIM,\n    interval.IntervalSpecifiersEnum.DBLDIM,\n    interval.IntervalSpecifiersEnum.DIMINISHED,\n    interval.IntervalSpecifiersEnum.MINOR,\n    interval.IntervalSpecifiersEnum.MAJOR,\n    interval.IntervalSpecifiersEnum.AUGMENTED,\n    interval.IntervalSpecifiersEnum.DBLAUG,\n    interval.IntervalSpecifiersEnum.TRPAUG,\n    interval.IntervalSpecifiersEnum.QUADAUG,\n];\ninterval.IntervalMajOffset = 5;\n\ninterval.IntervalSemitonesGeneric = {\n    1: 0,\n    2: 2,\n    3: 4,\n    4: 5,\n    5: 7,\n    6: 9,\n    7: 11,\n};\ninterval.IntervalAdjustPerfect = {\n    P: 0,\n    A: 1,\n    AA: 2,\n    AAA: 3,\n    AAAA: 4,\n    d: -1,\n    dd: -2,\n    ddd: -3,\n    dddd: -4,\n}; // offset from Perfect\n\ninterval.IntervalAdjustImperf = {\n    M: 0,\n    m: -1,\n    A: 1,\n    AA: 2,\n    AAA: 3,\n    AAAA: 4,\n    d: -2,\n    dd: -3,\n    ddd: -4,\n    dddd: -5,\n}; // offset from major\n\n/**\n * Represents a Diatonic interval.  See example for usage.\n *\n * @class DiatonicInterval\n * @memberof music21.interval\n * @param {string|number|undefined} [specifier='P'] - a specifier such as \"P\", \"d\", \"m\", \"M\" etc.\n * @param {music21.interval.GenericInterval|number} [generic=1] - a `GenericInterval`\n *              object or a number to be converted to one\n * @example\n * var di = new music21.interval.DiatonicInterval(\"M\", 10);\n * di.generic.isClassOrSubclass('GenericInterval');\n * // true\n * di.specifierAbbreviation;\n * // 'M'\n * di.name;\n * // 'M10'\n * di.direction == music21.interval.Direction.ASCENDING;\n * // true\n * di.niceName\n * // \"Major Tenth\"\n *\n * // See music21p for more possibilities.\n */\nexport class DiatonicInterval extends prebase.ProtoM21Object {\n    constructor(specifier, generic) {\n        super();\n\n        if (specifier === undefined) {\n            specifier = 'P';\n        }\n        if (generic === undefined) {\n            generic = new interval.GenericInterval(1);\n        } else if (typeof generic === 'number') {\n            generic = new interval.GenericInterval(generic);\n        }\n\n        this.name = '';\n        if (typeof specifier === 'number') {\n            this.specifier = specifier;\n        } else {\n            this.specifier = interval.IntervalPrefixSpecs.indexOf(specifier);\n            // TODO: convertSpecifier();\n        }\n        this.generic = generic;\n\n        if (\n            generic.undirected !== 1\n            || specifier === interval.IntervalSpecifiersEnum.PERFECT\n        ) {\n            this.direction = generic.direction;\n        } else if (\n            interval.IntervalPerfSpecifiers.indexOf(specifier)\n            <= interval.IntervalPerfSpecifiers.indexOf(\n                interval.IntervalSpecifiersEnum.DIMINISHED\n            )\n        ) {\n            // diminished unisons -- very controversial\n            this.direction = interval.Direction.DESCENDING;\n        } else {\n            this.direction = interval.Direction.ASCENDING;\n        }\n        const diatonicDirectionNiceName\n            = interval.IntervalDirectionTerms[this.direction + 1];\n        this.name\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.undirected.toString();\n        this.niceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.niceName;\n        this.simpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.simpleUndirected.toString();\n        this.simpleNiceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.simpleNiceName;\n        this.semiSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.semiSimpleUndirected.toString();\n        this.semiSimpleNiceName\n            = interval.IntervalNiceSpecNames[this.specifier]\n            + ' '\n            + generic.semiSimpleNiceName;\n        this.directedName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.directed.toString();\n        this.directedNiceName = diatonicDirectionNiceName + ' ' + this.niceName;\n        this.directedSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.simpleDirected.toString();\n        this.directedSimpleNiceName\n            = diatonicDirectionNiceName + ' ' + this.simpleNiceName;\n        this.directedSemiSimpleName\n            = interval.IntervalPrefixSpecs[this.specifier]\n            + generic.semiSimpleDirected.toString();\n        this.directedSemiSimpleNiceName\n            = diatonicDirectionNiceName + ' ' + this.semiSimpleNameName;\n        this.specificName = interval.IntervalNiceSpecNames[this.specifier];\n        this.perfectable = generic.perfectable;\n        this.isDiatonicStep = generic.isDiatonicStep;\n        this.isStep = generic.isStep;\n        this.isSkip = generic.isSkip;\n\n        // generate inversions\n        if (this.perfectable) {\n            this.orderedSpecifierIndex = interval.IntervalOrderedPerfSpecs.indexOf(\n                interval.IntervalPrefixSpecs[this.specifier]\n            );\n            this.invertedOrderedSpecIndex\n                = interval.IntervalOrderedPerfSpecs.length\n                - 1\n                - this.orderedSpecifierIndex;\n            this.invertedOrderedSpecifier\n                = interval.IntervalOrderedPerfSpecs[\n                    this.invertedOrderedSpecIndex\n                ];\n        } else {\n            this.orderedSpecifierIndex = interval.IntervalOrderedImperfSpecs.indexOf(\n                interval.IntervalPrefixSpecs[this.specifier]\n            );\n            this.invertedOrderedSpecIndex\n                = interval.IntervalOrderedImperfSpecs.length\n                - 1\n                - this.orderedSpecifierIndex;\n            this.invertedOrderedSpecifier\n                = interval.IntervalOrderedImperfSpecs[\n                    this.invertedOrderedSpecIndex\n                ];\n        }\n\n        this.mod7inversion\n            = this.invertedOrderedSpecifier + generic.mod7inversion.toString();\n        /* ( if (this.direction == interval.Direction.DESCENDING) {\n\t\t\tthis.mod7 = this.mod7inversion;\n\t\t} else {\n\t\t\tthis.mod7 = this.simpleName;\n\t\t} */\n\n        // TODO: reverse()\n        // TODO: property cents\n    }\n\n    /**\n     * Returns a ChromaticInterval object of the same size.\n     *\n     * @returns {music21.interval.ChromaticInterval}\n     */\n    getChromatic() {\n        const octaveOffset = Math.floor(\n            Math.abs(this.generic.staffDistance) / 7\n        );\n        const semitonesStart\n            = interval.IntervalSemitonesGeneric[this.generic.simpleUndirected];\n        const specName = interval.IntervalPrefixSpecs[this.specifier];\n\n        let semitonesAdjust = 0;\n        if (this.generic.perfectable) {\n            semitonesAdjust = interval.IntervalAdjustPerfect[specName];\n        } else {\n            semitonesAdjust = interval.IntervalAdjustImperf[specName];\n        }\n\n        let semitones = octaveOffset * 12 + semitonesStart + semitonesAdjust;\n\n        // direction should be same as original\n\n        if (this.generic.direction === interval.Direction.DESCENDING) {\n            semitones *= -1;\n        }\n        if (debug) {\n            console.log(\n                'DiatonicInterval.getChromatic -- octaveOffset: ' + octaveOffset\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitonesStart: '\n                    + semitonesStart\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- specName: ' + specName\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitonesAdjust: '\n                    + semitonesAdjust\n            );\n            console.log(\n                'DiatonicInterval.getChromatic -- semitones: ' + semitones\n            );\n        }\n        return new interval.ChromaticInterval(semitones);\n    }\n\n    transposePitch(p) {\n        const fullIntervalObject = new Interval(this, this.getChromatic());\n        return fullIntervalObject.transposePitch(p);\n    }\n\n    get specifierAbbreviation() {\n        return interval.IntervalPrefixSpecs[this.specifier];\n    }\n\n    get cents() {\n        return this.getChromatic().cents;\n    }\n}\ninterval.DiatonicInterval = DiatonicInterval;\n\n/**\n * @class ChromaticInterval\n * @memberof music21.interval\n * @param {number} value - number of semitones (positive or negative)\n * @property {number} cents\n * @property {number} value\n * @property {number} undirected - absolute value of value\n * @property {number} mod12 - reduction to one octave\n * @property {number} intervalClass - reduction to within a tritone (11 = 1, etc.)\n *\n */\nexport class ChromaticInterval extends prebase.ProtoM21Object {\n    constructor(value) {\n        super();\n\n        this.semitones = value;\n        this.cents = Math.round(value * 100.0, 5);\n        this.directed = value;\n        this.undirected = Math.abs(value);\n\n        if (this.directed === 0) {\n            this.direction = interval.Direction.OBLIQUE;\n        } else if (this.directed === this.undirected) {\n            this.direction = interval.Direction.ASCENDING;\n        } else {\n            this.direction = interval.Direction.DESCENDING;\n        }\n\n        this.mod12 = common.posMod(this.semitones, 12);\n        this.simpleUndirected = common.posMod(this.undirected, 12);\n        if (this.direction === interval.Direction.DESCENDING) {\n            this.simpleDirected = -1 * this.simpleUndirected;\n        } else {\n            this.simpleDirected = this.simpleUndirected;\n        }\n\n        this.intervalClass = this.mod12;\n        if (this.mod12 > 6) {\n            this.intervalClass = 12 - this.mod12;\n        }\n\n        if (this.undirected === 1) {\n            this.isChromaticStep = true;\n        } else {\n            this.isChromaticStep = false;\n        }\n    }\n    reverse() {\n        return new interval.ChromaticInterval(\n            this.undirected * (-1 * this.direction)\n        );\n    }\n\n    //  TODO: this.getDiatonic()\n\n    /**\n     * Transposes pitches but does not maintain accidentals, etc.\n     *\n     * @property {music21.pitch.Pitch} p - pitch to transpose\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p) {\n        let useImplicitOctave = false;\n        if (p.octave === undefined) {\n            // not yet implemented in m21j\n            useImplicitOctave = true;\n        }\n        const pps = p.ps;\n        const newPitch = new pitch.Pitch();\n        newPitch.ps = pps + this.semitones;\n        if (useImplicitOctave) {\n            newPitch.octave = undefined;\n        }\n        return newPitch;\n    }\n}\ninterval.ChromaticInterval = ChromaticInterval;\n\ninterval.IntervalStepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\n/**\n * @function music21.interval.convertDiatonicNumberToStep\n * @memberof music21.interval\n * @param {int} dn - diatonic number, where 29 = C4, C#4 etc.\n * @returns {Array} two element array of {string} stepName and {Int} octave\n */\ninterval.convertDiatonicNumberToStep = function convertDiatonicNumberToStep(\n    dn\n) {\n    let stepNumber;\n    let octave;\n    if (dn === 0) {\n        return ['B', -1];\n    } else if (dn > 0) {\n        octave = Math.floor((dn - 1) / 7);\n        stepNumber = dn - 1 - octave * 7;\n    } else {\n        // low notes... test, because js(floor) != py(int);\n        octave = Math.floor(dn / 7);\n        stepNumber = dn - 1 - (octave + 1) * 7;\n    }\n    const stepName = interval.IntervalStepNames[stepNumber];\n    return [stepName, octave];\n};\n\n/**\n * This is the main, powerful Interval class.\n *\n * Instantiate with either a string (\"M3\") or two {@link music21.pitch.Pitch} or two {@link music21.note.Note}\n *\n * See music21p instructions for usage.\n *\n * @class Interval\n * @memberof music21.interval\n * @example\n * var n1 = new music21.note.Note(\"C4\");\n * var n2 = new music21.note.Note(\"F#5\");\n * var iv = new music21.interval.Interval(n1, n2);\n * iv.isConsonant();\n * // false\n * iv.semitones;\n * // 18\n * iv.niceName\n * // \"Augmented Eleventh\"\n */\nexport class Interval extends prebase.ProtoM21Object {\n    constructor(...restArgs) {\n        super();\n        // todo: allow full range of ways of specifying as in m21p\n        let noteStart;\n        let noteEnd;\n        if (restArgs.length === 1) {\n            const arg0 = restArgs[0];\n            if (typeof arg0 === 'string') {\n                // simple...\n                const specifier = arg0.replace(/\\d+/, '').replace(/-/, '');\n                let generic = parseInt(arg0.replace(/\\D+/, ''));\n                if (arg0.includes('-')) {\n                    generic *= -1;\n                }\n                const gI = new interval.GenericInterval(generic);\n                const dI = new interval.DiatonicInterval(specifier, gI);\n                this.diatonic = dI;\n                this.chromatic = this.diatonic.getChromatic();\n            } else if (arg0.specifier !== undefined) {\n                // assume diatonic...\n                this.diatonic = arg0;\n                this.chromatic = this.diatonic.getChromatic();\n            } else {\n                console.error('cant parse string arguments to Interval yet');\n            }\n        } else if (restArgs.length === 2) {\n            if (\n                restArgs[0].pitch === undefined\n                && restArgs[0].diatonicNoteNum === undefined\n            ) {\n                this.diatonic = restArgs[0];\n                this.chromatic = restArgs[1];\n            } else {\n                let n1 = restArgs[0];\n                let n2 = restArgs[1];\n                if (n1.classes !== undefined && n1.classes.includes('Pitch')) {\n                    const p1 = n1;\n                    n1 = new note.Note();\n                    n1.pitch = p1;\n                }\n                if (n2.classes !== undefined && n2.classes.includes('Pitch')) {\n                    const p2 = n2;\n                    n2 = new note.Note();\n                    n2.pitch = p2;\n                }\n                const gInt = interval.notesToGeneric(n1, n2);\n                const cInt = interval.notesToChromatic(n1, n2);\n\n                this.diatonic = interval.intervalsToDiatonic(gInt, cInt);\n                this.chromatic = cInt;\n                \n                noteStart = n1;\n                noteEnd = n2;\n            }\n        }\n        this._noteStart = noteStart;\n        this._noteEnd = noteEnd;\n        this.reinit();\n    }\n    get complement() {\n        return new interval.Interval(this.diatonic.mod7inversion);\n    }\n    reinit() {\n        this.direction = this.chromatic.direction;\n        this.specifier = this.diatonic.specifier;\n        this.diatonicType = this.diatonic.specifier;\n        // this.specificName = this.diatonic.specificName;\n        this.generic = this.diatonic.generic;\n\n        this.name = this.diatonic.name;\n        this.niceName = this.diatonic.niceName;\n        this.simpleName = this.diatonic.simpleName;\n        this.simpleNiceName = this.diatonic.simpleNiceName;\n        this.semiSimpleName = this.diatonic.semiSimpleName;\n        this.semiSimpleNiceName = this.diatonic.semiSimpleNiceName;\n\n        this.directedName = this.diatonic.directedName;\n        this.directedNiceName = this.diatonic.directedNiceName;\n        this.directedSimpleName = this.diatonic.directedSimpleName;\n        this.directedSimpleNiceName = this.diatonic.directedSimpleNiceName;\n\n        // other names...\n        this.isDiatonicStep = this.diatonic.isDiatonicStep;\n\n        this.isChromaticStep = this.chromatic.isChromaticStep;\n        this.semitones = this.chromatic.semitones;\n        this.intervalClass = this.chromatic.intervalClass;\n        this.cents = this.chromatic.cents;\n        this.isStep = this.isChromaticStep || this.isDiatonicStep;\n        this.isSkip = this.diatonic.isSkip;\n    }\n\n    get noteStart() {\n        return this._noteStart;\n    }\n    \n    set noteStart(n) {\n        this._noteStart = n;\n        const p1 = n.pitch;\n        const p2 = this.transposePitch(p1);\n        this._noteEnd = n.clone();\n        this._noteEnd.pitch = p2;\n    }\n\n    get noteEnd() {\n        return this._noteEnd;\n    }\n    \n    set noteEnd(n) {\n        this._noteEnd = n;\n        const p1 = n.pitch;\n        const p2 = this.transposePitch(p1, true);\n        this._noteStart = n.clone();\n        this._noteStart.pitch = p2;\n    }\n\n    \n    /**\n     * @returns {Boolean}\n     */\n    isConsonant() {\n        const sn = this.simpleName;\n        const consonantNames = ['P5', 'm3', 'M3', 'm6', 'M6', 'P1'];\n        if (consonantNames.indexOf(sn) !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //  todo general: microtones\n    /**\n     * TODO: maxAccidental\n     * \n     * @param {music21.pitch.Pitch} p - pitch to transpose\n     * @param {Object} config - configuration\n     * @param {boolean} [config.reverse=false] -- reverse direction\n     * @param {number} [config.maxAccidental=4] -- maximum accidentals to retain (unused)\n     * @returns {music21.pitch.Pitch}\n     */\n    transposePitch(p, { reverse=false, maxAccidental=4 }={}) {\n        /*\n        var useImplicitOctave = false;\n        if (p.octave === undefined) {\n            useImplicitOctave = true;\n        }\n         */\n        const pitch2 = this.diatonic.generic.transposePitch(p);\n        pitch2.accidental = undefined;\n        // step and octave are right now, but not necessarily accidental\n        let halfStepsToFix;\n        if (!reverse) {\n            halfStepsToFix = this.chromatic.semitones - Math.floor(pitch2.ps - p.ps);\n        } else {\n            halfStepsToFix = (-1 * this.chromatic.semitones) - Math.floor(pitch2.ps - p.ps);\n        }\n        if (halfStepsToFix !== 0) {\n            pitch2.accidental = new pitch.Accidental(halfStepsToFix);\n        }\n        if (debug) {\n            console.log('Interval.transposePitch -- new step ' + pitch2.step);\n            console.log(\n                'Interval.transposePitch -- new octave ' + pitch2.octave\n            );\n            console.log(\n                'Interval.transposePitch -- fixing half steps for '\n                    + halfStepsToFix\n            );\n        }\n        return pitch2;\n    }\n}\ninterval.Interval = Interval;\n\ninterval.intervalFromGenericAndChromatic = function intervalFromGenericAndChromatic(\n    gInt,\n    cInt\n) {\n    if (typeof gInt === 'number') {\n        gInt = new GenericInterval(gInt);\n    }\n    if (typeof cInt === 'number') {\n        cInt = new ChromaticInterval(cInt);\n    }\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    const dInt = new DiatonicInterval(specifier, gInt);\n    return new Interval(dInt, cInt);\n};\n/**\n * Convert two notes or pitches to a GenericInterval;\n */\ninterval.notesToGeneric = function notesToGeneric(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    const staffDist = p2.diatonicNoteNum - p1.diatonicNoteNum;\n    const genDist = interval.convertStaffDistanceToInterval(staffDist);\n    return new interval.GenericInterval(genDist);\n};\n\ninterval.convertStaffDistanceToInterval = function convertStaffDistanceToInterval(\n    staffDist\n) {\n    if (staffDist === 0) {\n        return 1;\n    } else if (staffDist > 0) {\n        return staffDist + 1;\n    } else {\n        return staffDist - 1;\n    }\n};\n\ninterval.notesToChromatic = function notesToChromatic(n1, n2) {\n    let p1 = n1;\n    if (n1.pitch !== undefined) {\n        p1 = n1.pitch;\n    }\n    let p2 = n2;\n    if (n2.pitch !== undefined) {\n        p2 = n2.pitch;\n    }\n    return new interval.ChromaticInterval(p2.ps - p1.ps);\n};\n\ninterval.intervalsToDiatonic = function intervalsToDiatonic(gInt, cInt) {\n    const specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);\n    // todo -- convert specifier...\n    return new interval.DiatonicInterval(specifier, gInt);\n};\n\ninterval._getSpecifierFromGenericChromatic = function _getSpecifierFromGenericChromatic(\n    gInt,\n    cInt\n) {\n    const noteVals = [undefined, 0, 2, 4, 5, 7, 9, 11];\n    const normalSemis\n        = noteVals[gInt.simpleUndirected] + 12 * gInt.undirectedOctaves;\n    let theseSemis = 0;\n    if (\n        gInt.direction !== cInt.direction\n        && gInt.direction !== interval.Direction.OBLIQUE\n        && cInt.direction !== interval.Direction.OBLIQUE\n    ) {\n        // intervals like d2 and dd2 etc. (the last test doesn't matter, since -1*0 === 0, but in theory it should be there)\n        theseSemis = -1 * cInt.undirected;\n    } else if (gInt.undirected === 1) {\n        theseSemis = cInt.directed; // matters for unison\n    } else {\n        // all normal intervals\n        theseSemis = cInt.undirected;\n    }\n    const semisRounded = Math.round(theseSemis);\n    let specifier = '';\n    if (gInt.perfectable) {\n        specifier\n            = interval.IntervalPerfSpecifiers[\n                interval.IntervalPerfOffset + semisRounded - normalSemis\n            ];\n    } else {\n        specifier\n            = interval.IntervalSpecifiers[\n                interval.IntervalMajOffset + semisRounded - normalSemis\n            ];\n    }\n    return specifier;\n};\n","import common from './common.js';\n\nconst posMod = common.posMod;\n\nlet t1;\nlet t2;\nlet t3;\nlet t4;\nlet t5;\nlet t6;\nlet t7;\nlet t8;\nlet t9;\nlet t10;\nlet t11; \nlet t12;\nlet t13;\nlet t14;\nlet t15;\nlet t16;\nlet t17;\nlet t18;\nlet t19;\nlet t20;\nlet t21; \nlet t22;\nlet t23;\nlet t24;\nlet t25;\nlet t26;\nlet t27;\nlet t28;\nlet t29;\nlet t30;\nlet t31; \nlet t32;\nlet t33;\nlet t34;\nlet t35;\nlet t36;\nlet t37;\nlet t38;\n\nt1   = [[0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 11, 11, 11, 11], 0]; // 1-1\nconst monad = [undefined, t1];\n\nt1   = [[0, 1], [1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-1\nt2   = [[0, 2], [0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-2\nt3   = [[0, 3], [0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-3\nt4   = [[0, 4], [0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-4\nt5   = [[0, 5], [0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-5\nt6   = [[0, 6], [0, 0, 0, 0, 0, 1], [2, 2, 2, 2, 10, 10, 10], 0]; // 2-6\nconst diad = [undefined, t1, t2, t3, t4, t5, t6];\n\nt1   = [[0, 1, 2], [2, 1, 0, 0, 0, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-1\nt2   = [[0, 1, 3], [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-2\nt3   = [[0, 1, 4], [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-3\nt4   = [[0, 1, 5], [1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 5, 6, 5, 6], 0]; // 3-4\nt5   = [[0, 1, 6], [1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-5\nt6   = [[0, 2, 4], [0, 2, 0, 1, 0, 0], [1, 1, 1, 1, 7, 7, 7, 7], 0]; // 3-6\nt7   = [[0, 2, 5], [0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-7\nt8   = [[0, 2, 6], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-8\nt9   = [[0, 2, 7], [0, 1, 0, 0, 2, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-9\nt10 = [[0, 3, 6], [0, 0, 2, 0, 0, 1], [1, 1, 1, 1, 8, 8, 8, 8], 0]; // 3-10\nt11 = [[0, 3, 7], [0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-11\nt12 = [[0, 4, 8], [0, 0, 0, 3, 0, 0], [3, 3, 3, 3, 9, 9, 9, 9], 0]; // 3-12\nconst trichord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];\n\nt1   = [[0, 1, 2, 3], [3, 2, 1, 0, 0, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-1\nt2   = [[0, 1, 2, 4], [2, 2, 1, 1, 0, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-2\nt3   = [[0, 1, 3, 4], [2, 1, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-3\nt4   = [[0, 1, 2, 5], [2, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-4\nt5   = [[0, 1, 2, 6], [2, 1, 0, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-5\nt6   = [[0, 1, 2, 7], [2, 1, 0, 0, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-6\nt7   = [[0, 1, 4, 5], [2, 0, 1, 2, 1, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-7\nt8   = [[0, 1, 5, 6], [2, 0, 0, 1, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-8\nt9   = [[0, 1, 6, 7], [2, 0, 0, 0, 2, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-9\nt10 = [[0, 2, 3, 5], [1, 2, 2, 0, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-10\nt11 = [[0, 1, 3, 5], [1, 2, 1, 1, 1, 0], [1, 0, 1, 0, 1, 3, 1, 3], 0]; // 4-11\nt12 = [[0, 2, 3, 6], [1, 1, 2, 1, 0, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-12\nt13 = [[0, 1, 3, 6], [1, 1, 2, 0, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-13\nt14 = [[0, 2, 3, 7], [1, 1, 1, 1, 2, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-14\nt15 = [[0, 1, 4, 6], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 29]; // 4-15z\nt16 = [[0, 1, 5, 7], [1, 1, 0, 1, 2, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-16\nt17 = [[0, 3, 4, 7], [1, 0, 2, 2, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-17\nt18 = [[0, 1, 4, 7], [1, 0, 2, 1, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-18\nt19 = [[0, 1, 4, 8], [1, 0, 1, 3, 1, 0], [1, 0, 1, 0, 3, 5, 3, 5], 0]; // 4-19\nt20 = [[0, 1, 5, 8], [1, 0, 1, 2, 2, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-20\nt21 = [[0, 2, 4, 6], [0, 3, 0, 2, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-21\nt22 = [[0, 2, 4, 7], [0, 2, 1, 1, 2, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-22\nt23 = [[0, 2, 5, 7], [0, 2, 1, 0, 3, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-23\nt24 = [[0, 2, 4, 8], [0, 2, 0, 3, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-24\nt25 = [[0, 2, 6, 8], [0, 2, 0, 2, 0, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-25\nt26 = [[0, 3, 5, 8], [0, 1, 2, 1, 2, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-26\nt27 = [[0, 2, 5, 8], [0, 1, 2, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-27\nt28 = [[0, 3, 6, 9], [0, 0, 4, 0, 0, 2], [4, 4, 4, 4, 8, 8, 8, 8], 0]; // 4-28\nt29 = [[0, 1, 3, 7], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 15]; // 4-29z\nconst tetrachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];\n\n\nt1   = [[0, 1, 2, 3, 4], [4, 3, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-1\nt2   = [[0, 1, 2, 3, 5], [3, 3, 2, 1, 1, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-2\nt3   = [[0, 1, 2, 4, 5], [3, 2, 2, 2, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-3\nt4   = [[0, 1, 2, 3, 6], [3, 2, 2, 1, 1, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-4\nt5   = [[0, 1, 2, 3, 7], [3, 2, 1, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-5\nt6   = [[0, 1, 2, 5, 6], [3, 1, 1, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-6\nt7   = [[0, 1, 2, 6, 7], [3, 1, 0, 1, 3, 2], [1, 0, 0, 1, 2, 3, 3, 2], 0]; // 5-7\nt8   = [[0, 2, 3, 4, 6], [2, 3, 2, 2, 0, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-8\nt9   = [[0, 1, 2, 4, 6], [2, 3, 1, 2, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-9\nt10 = [[0, 1, 3, 4, 6], [2, 2, 3, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-10\nt11 = [[0, 2, 3, 4, 7], [2, 2, 2, 2, 2, 0], [1, 0, 1, 0, 1, 1, 1, 1], 0]; // 5-11\nt12 = [[0, 1, 3, 5, 6], [2, 2, 2, 1, 2, 1], [1, 1, 1, 1, 0, 0, 0, 0], [36]]; // 5-12\nt13 = [[0, 1, 2, 4, 8], [2, 2, 1, 3, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-13\nt14 = [[0, 1, 2, 5, 7], [2, 2, 1, 1, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-14\nt15 = [[0, 1, 2, 6, 8], [2, 2, 0, 2, 2, 2], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-15\nt16 = [[0, 1, 3, 4, 7], [2, 1, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-16\nt17 = [[0, 1, 3, 4, 8], [2, 1, 2, 3, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], [37]]; // 5-17\nt18 = [[0, 1, 4, 5, 7], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], [38]]; // 5-18\nt19 = [[0, 1, 3, 6, 7], [2, 1, 2, 1, 2, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-19\nt20 = [[0, 1, 3, 7, 8], [2, 1, 1, 2, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-20\nt21 = [[0, 1, 4, 5, 8], [2, 0, 2, 4, 2, 0], [1, 0, 1, 0, 3, 3, 3, 3], 0]; // 5-21\nt22 = [[0, 1, 4, 7, 8], [2, 0, 2, 3, 2, 1], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-22\nt23 = [[0, 2, 3, 5, 7], [1, 3, 2, 1, 3, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-23\nt24 = [[0, 1, 3, 5, 7], [1, 3, 1, 2, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-24\nt25 = [[0, 2, 3, 5, 8], [1, 2, 3, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-25\nt26 = [[0, 2, 4, 5, 8], [1, 2, 2, 3, 1, 1], [1, 0, 1, 0, 0, 2, 0, 2], 0]; // 5-26\nt27 = [[0, 1, 3, 5, 8], [1, 2, 2, 2, 3, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-27\nt28 = [[0, 2, 3, 6, 8], [1, 2, 2, 2, 1, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-28\nt29 = [[0, 1, 3, 6, 8], [1, 2, 2, 1, 3, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-29\nt30 = [[0, 1, 4, 6, 8], [1, 2, 1, 3, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-30\nt31 = [[0, 1, 3, 6, 9], [1, 1, 4, 1, 1, 2], [1, 0, 0, 1, 0, 3, 3, 0], 0]; // 5-31\nt32 = [[0, 1, 4, 6, 9], [1, 1, 3, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-32\nt33 = [[0, 2, 4, 6, 8], [0, 4, 0, 4, 0, 2], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 5-33\nt34 = [[0, 2, 4, 6, 9], [0, 3, 2, 2, 2, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-34\nt35 = [[0, 2, 4, 7, 9], [0, 3, 2, 1, 4, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-35\nt36 = [[0, 1, 2, 4, 7], [2, 2, 2, 1, 2, 1], [1, 0, 0, 1, 0, 1, 1, 0], 12]; // 5-36\nt37 = [[0, 3, 4, 5, 8], [2, 1, 2, 2, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], 17]; // 5-37\nt38 = [[0, 1, 2, 5, 8], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 18]; // 5-38\nconst pentachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38];\n\n\nt1   = [[0, 1, 2, 3, 4, 5], [5, 4, 3, 2, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-1  A\nt2   = [[0, 1, 2, 3, 4, 6], [4, 4, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-2\nt3   = [[0, 1, 2, 3, 5, 6], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 36]; // 6-3\nt4   = [[0, 1, 2, 4, 5, 6], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 6-4\nt5   = [[0, 1, 2, 3, 6, 7], [4, 2, 2, 2, 3, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-5\nt6   = [[0, 1, 2, 5, 6, 7], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 38]; // 6-6\nt7   = [[0, 1, 2, 6, 7, 8], [4, 2, 0, 2, 4, 3], [2, 2, 2, 2, 2, 2, 2, 2], 0]; // 6-7 B\nt8   = [[0, 2, 3, 4, 5, 7], [3, 4, 3, 2, 3, 0], [1, 1, 1, 1, 1, 1, 1, 1], 0]; // 6-8 D\nt9   = [[0, 1, 2, 3, 5, 7], [3, 4, 2, 2, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-9\nt10 = [[0, 1, 3, 4, 5, 7], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 39]; // 6-10\nt11 = [[0, 1, 2, 4, 5, 7], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 40]; // 6-11\nt12 = [[0, 1, 2, 4, 6, 7], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 41]; // 6-12\nt13 = [[0, 1, 3, 4, 6, 7], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 42]; // 6-13\nt14 = [[0, 1, 3, 4, 5, 8], [3, 2, 3, 4, 3, 0], [1, 0, 1, 0, 1, 0, 1, 0], 0]; // 6-14\nt15 = [[0, 1, 2, 4, 5, 8], [3, 2, 3, 4, 2, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-15\nt16 = [[0, 1, 4, 5, 6, 8], [3, 2, 2, 4, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-16\nt17 = [[0, 1, 2, 4, 7, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 43]; // 6-17\nt18 = [[0, 1, 2, 5, 7, 8], [3, 2, 2, 2, 4, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-18\nt19 = [[0, 1, 3, 4, 7, 8], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 44]; // 6-19\nt20 = [[0, 1, 4, 5, 8, 9], [3, 0, 3, 6, 3, 0], [3, 3, 3, 3, 3, 3, 3, 3], 0]; // 6-20 E\nt21 = [[0, 2, 3, 4, 6, 8], [2, 4, 2, 4, 1, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-21\nt22 = [[0, 1, 2, 4, 6, 8], [2, 4, 1, 4, 2, 2], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-22\nt23 = [[0, 2, 3, 5, 6, 8], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 45]; // 6-23\nt24 = [[0, 1, 3, 4, 6, 8], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 46]; // 6-24\nt25 = [[0, 1, 3, 5, 6, 8], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 47]; // 6-25\nt26 = [[0, 1, 3, 5, 7, 8], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 48]; // 6-26\nt27 = [[0, 1, 3, 4, 6, 9], [2, 2, 5, 2, 2, 2], [1, 0, 0, 1, 0, 1, 1, 0], 0]; // 6-27\nt28 = [[0, 1, 3, 5, 6, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 49]; // 6-28\nt29 = [[0, 1, 3, 6, 8, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 50]; // 6- d29\nt30 = [[0, 1, 3, 6, 7, 9], [2, 2, 4, 2, 2, 3], [2, 0, 0, 2, 0, 2, 2, 0], 0]; // 6-30\nt31 = [[0, 1, 3, 5, 8, 9], [2, 2, 3, 4, 3, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-31\nt32 = [[0, 2, 4, 5, 7, 9], [1, 4, 3, 2, 5, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-32 C\nt33 = [[0, 2, 3, 5, 7, 9], [1, 4, 3, 2, 4, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-33\nt34 = [[0, 1, 3, 5, 7, 9], [1, 4, 2, 4, 2, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-34\nt35 = [[0, 2, 4, 6, 8, 10], [0, 6, 0, 6, 0, 3], [6, 6, 6, 6, 6, 6, 6, 6], 0]; // 6-35 F\nt36 = [[0, 1, 2, 3, 4, 7], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 3]; // 6-36\nt37 = [[0, 1, 2, 3, 4, 8], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 4]; // 6-37\nt38 = [[0, 1, 2, 3, 7, 8], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 6]; // 6-38\nconst t39 = [[0, 2, 3, 4, 5, 8], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 10]; // 6-39\nconst t40 = [[0, 1, 2, 3, 5, 8], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 11]; // 6-40\nconst t41 = [[0, 1, 2, 3, 6, 8], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 6-41\nconst t42 = [[0, 1, 2, 3, 6, 9], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 13]; // 6-42\nconst t43 = [[0, 1, 2, 5, 6, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 17]; // 6-43\nconst t44 = [[0, 1, 2, 5, 6, 9], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 19]; // 6-44\nconst t45 = [[0, 2, 3, 4, 6, 9], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 23]; // 6-45\nconst t46 = [[0, 1, 2, 4, 6, 9], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 24]; // 6-46\nconst t47 = [[0, 1, 2, 4, 7, 9], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 25]; // 6-47\nconst t48 = [[0, 1, 2, 5, 7, 9], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 26]; // 6-48\nconst t49 = [[0, 1, 3, 4, 7, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 28]; // 6-49\nconst t50 = [[0, 1, 4, 6, 7, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 29]; // 6-50\nconst hexachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38, t39,\n    t40, t41, t42, t43, t44, t45, t46, t47, t48, t49,\n    t50];\n\n\nt1   = [[0, 1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-1\nt2   = [[0, 1, 2, 3, 4, 5, 7], [5, 5, 4, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-2\nt3   = [[0, 1, 2, 3, 4, 5, 8], [5, 4, 4, 4, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-3\nt4   = [[0, 1, 2, 3, 4, 6, 7], [5, 4, 4, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-4\nt5   = [[0, 1, 2, 3, 5, 6, 7], [5, 4, 3, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-5\nt6   = [[0, 1, 2, 3, 4, 7, 8], [5, 3, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-6\nt7   = [[0, 1, 2, 3, 6, 7, 8], [5, 3, 2, 3, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-7\nt8   = [[0, 2, 3, 4, 5, 6, 8], [4, 5, 4, 4, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-8\nt9   = [[0, 1, 2, 3, 4, 6, 8], [4, 5, 3, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-9\nt10 = [[0, 1, 2, 3, 4, 6, 9], [4, 4, 5, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-10\nt11 = [[0, 1, 3, 4, 5, 6, 8], [4, 4, 4, 4, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-11\nt12 = [[0, 1, 2, 3, 4, 7, 9], [4, 4, 4, 3, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 36]; // 7-12 z\nt13 = [[0, 1, 2, 4, 5, 6, 8], [4, 4, 3, 5, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-13\nt14 = [[0, 1, 2, 3, 5, 7, 8], [4, 4, 3, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-14\nt15 = [[0, 1, 2, 4, 6, 7, 8], [4, 4, 2, 4, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-15\nt16 = [[0, 1, 2, 3, 5, 6, 9], [4, 3, 5, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-16\nt17 = [[0, 1, 2, 4, 5, 6, 9], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 7-17 z\nt18 = [[0, 1, 2, 3, 5, 8, 9], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 38]; // 7-18 z\nt19 = [[0, 1, 2, 3, 6, 7, 9], [4, 3, 4, 3, 4, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-19\nt20 = [[0, 1, 2, 4, 7, 8, 9], [4, 3, 3, 4, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-20\nt21 = [[0, 1, 2, 4, 5, 8, 9], [4, 2, 4, 6, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-21\nt22 = [[0, 1, 2, 5, 6, 8, 9], [4, 2, 4, 5, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-22\nt23 = [[0, 2, 3, 4, 5, 7, 9], [3, 5, 4, 3, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-23\nt24 = [[0, 1, 2, 3, 5, 7, 9], [3, 5, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-24\nt25 = [[0, 2, 3, 4, 6, 7, 9], [3, 4, 5, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-25\nt26 = [[0, 1, 3, 4, 5, 7, 9], [3, 4, 4, 5, 3, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-26\nt27 = [[0, 1, 2, 4, 5, 7, 9], [3, 4, 4, 4, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-27\nt28 = [[0, 1, 3, 5, 6, 7, 9], [3, 4, 4, 4, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-28\nt29 = [[0, 1, 2, 4, 6, 7, 9], [3, 4, 4, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-29\nt30 = [[0, 1, 2, 4, 6, 8, 9], [3, 4, 3, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-30\nt31 = [[0, 1, 3, 4, 6, 7, 9], [3, 3, 6, 3, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-31\nt32 = [[0, 1, 3, 4, 6, 8, 9], [3, 3, 5, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-32\nt33 = [[0, 1, 2, 4, 6, 8, 10], [2, 6, 2, 6, 2, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-33\nt34 = [[0, 1, 3, 4, 6, 8, 10], [2, 5, 4, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-34\nt35 = [[0, 1, 3, 5, 6, 8, 10], [2, 5, 4, 3, 6, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-35\nt36 = [[0, 1, 2, 3, 5, 6, 8], [4, 4, 4, 3, 4, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 7-36 z\nt37 = [[0, 1, 3, 4, 5, 7, 8], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 17]; // 7-37 z\nt38 = [[0, 1, 2, 4, 5, 7, 8], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 18]; // 7-38 z\nconst septachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29,\n    t30, t31, t32, t33, t34, t35, t36, t37, t38];\n\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7],  [7, 6, 5, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 8],  [6, 6, 5, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 9],  [6, 5, 6, 5, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-3\nt4   = [[0, 1, 2, 3, 4, 5, 7, 8],  [6, 5, 5, 5, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-4\nt5   = [[0, 1, 2, 3, 4, 6, 7, 8],  [6, 5, 4, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-5\nt6   = [[0, 1, 2, 3, 5, 6, 7, 8],  [6, 5, 4, 4, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-6\nt7   = [[0, 1, 2, 3, 4, 5, 8, 9],  [6, 4, 5, 6, 5, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-7\nt8   = [[0, 1, 2, 3, 4, 7, 8, 9],  [6, 4, 4, 5, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-8\nt9   = [[0, 1, 2, 3, 6, 7, 8, 9],  [6, 4, 4, 4, 6, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-9\nt10 = [[0, 2, 3, 4, 5, 6, 7, 9],   [5, 6, 6, 4, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-10\nt11 = [[0, 1, 2, 3, 4, 5, 7, 9],   [5, 6, 5, 5, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-11\nt12 = [[0, 1, 3, 4, 5, 6, 7, 9],   [5, 5, 6, 5, 4, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-12\nt13 = [[0, 1, 2, 3, 4, 6, 7, 9],   [5, 5, 6, 4, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-13\nt14 = [[0, 1, 2, 4, 5, 6, 7, 9],   [5, 5, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-14\nt15 = [[0, 1, 2, 3, 4, 6, 8, 9],   [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 29]; // 8-15  zz\nt16 = [[0, 1, 2, 3, 5, 7, 8, 9],   [5, 5, 4, 5, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-16\nt17 = [[0, 1, 3, 4, 5, 6, 8, 9],   [5, 4, 6, 6, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-17\nt18 = [[0, 1, 2, 3, 5, 6, 8, 9],   [5, 4, 6, 5, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-18\nt19 = [[0, 1, 2, 4, 5, 6, 8, 9],   [5, 4, 5, 7, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-19\nt20 = [[0, 1, 2, 4, 5, 7, 8, 9],   [5, 4, 5, 6, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-20\nt21 = [[0, 1, 2, 3, 4, 6, 8, 10], [4, 7, 4, 6, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-21\nt22 = [[0, 1, 2, 3, 5, 6, 8, 10], [4, 6, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-22\nt23 = [[0, 1, 2, 3, 5, 7, 8, 10], [4, 6, 5, 4, 7, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-23\nt24 = [[0, 1, 2, 4, 5, 6, 8, 10], [4, 6, 4, 7, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-24\nt25 = [[0, 1, 2, 4, 6, 7, 8, 10], [4, 6, 4, 6, 4, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-25\nt26 = [[0, 1, 2, 4, 5, 7, 9, 10], [4, 5, 6, 5, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-26\nt27 = [[0, 1, 2, 4, 5, 7, 8, 10], [4, 5, 6, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-27\nt28 = [[0, 1, 3, 4, 6, 7, 9, 10], [4, 4, 8, 4, 4, 4], [4, 4, 4, 4, 0, 0, 0, 0], 0]; // 8-28\nt29 = [[0, 1, 2, 3, 5, 6, 7, 9],   [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 15]; // 8-29\nconst octachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9,\n    t10, t11, t12, t13, t14, t15, t16, t17, t18, t19,\n    t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8],  [8, 7, 6, 6, 6, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 7, 9],  [7, 7, 7, 6, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 8, 9],  [7, 6, 7, 7, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-3\nt4   = [[0, 1, 2, 3, 4, 5, 7, 8, 9],  [7, 6, 6, 7, 7, 3], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 9-4\nt5   = [[0, 1, 2, 3, 4, 6, 7, 8, 9],  [7, 6, 6, 6, 7, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-5\nt6   = [[0, 1, 2, 3, 4, 5, 6, 8, 10], [6, 8, 6, 7, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-6\nt7   = [[0, 1, 2, 3, 4, 5, 7, 8, 10], [6, 7, 7, 6, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-7\nt8   = [[0, 1, 2, 3, 4, 6, 7, 8, 10], [6, 7, 6, 7, 6, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-8\nt9   = [[0, 1, 2, 3, 5, 6, 7, 8, 10], [6, 7, 6, 6, 8, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-9\nt10 = [[0, 1, 2, 3, 4, 6, 7, 9, 10], [6, 6, 8, 6, 6, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-10\nt11 = [[0, 1, 2, 3, 5, 6, 7, 9, 10], [6, 6, 7, 7, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-11\nt12 = [[0, 1, 2, 4, 5, 6, 8, 9, 10], [6, 6, 6, 9, 6, 3], [3, 3, 3, 3, 0, 0, 0, 0], 0]; // 9-12\nconst nonachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],    [9, 8, 8, 8, 8, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-1\nt2   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10],  [8, 9, 8, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-2\nt3   = [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10],  [8, 8, 9, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-3\nt4   = [[0, 1, 2, 3, 4, 5, 6, 8, 9, 10],  [8, 8, 8, 9, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-4\nt5   = [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10],  [8, 8, 8, 8, 9, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-5\nt6   = [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10],  [8, 8, 8, 8, 8, 5], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 10-6\nconst decachord = [undefined, t1, t2, t3, t4, t5, t6];\n\nt1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [10, 10, 10, 10, 10, 5], [1, 1, 1, 1, 0, 0, 0, 0], 0];// 11-1\nconst undecachord = [undefined, t1];\n\nt1   = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 12, 12, 12, 12, 6], [12, 12, 12, 12, 0, 0, 0, 0], 0]; // 12-1\nconst dodecachord = [undefined, t1];\n\n\n// -------------------------------------------------------------------------------\nexport const FORTE = [undefined, monad, diad, trichord, tetrachord, pentachord, hexachord, septachord, octachord,\n    nonachord, decachord, undecachord, dodecachord];\n\n\n// to access the data for a single form, use:\n// forte   [size[tetra]] = 4\n//         [number[forte]] = 3\n//         [data[0=pitches, 1=ICV, 2=invariance vector [morris], 3 = Z-relation]]\n//         [element in list]\n//-------------------------------------------------------------------------------\n\n// cardinality 1\nconst card_1 ={ '1,0': [FORTE[1][1][0], // 1\n    FORTE[1][1][2], // var\n    FORTE[1][1][1], //icv\n],\n};\n// cardinality 2\nconst card_2 ={ '1,0': [FORTE[2][1][0], // 2\n    FORTE[2][1][2], // var\n    FORTE[2][1][1], //icv\n],\n    '2,0': [FORTE[2][2][0], // 3\n        FORTE[2][2][2], // var\n        FORTE[2][2][1], //icv\n    ],\n    '3,0': [FORTE[2][3][0], // 4\n        FORTE[2][3][2], // var\n        FORTE[2][3][1], //icv\n    ],\n    '4,0': [FORTE[2][4][0], // 5\n        FORTE[2][4][2], // var\n        FORTE[2][4][1], //icv\n    ],\n    '5,0': [FORTE[2][5][0], // 6\n        FORTE[2][5][2], // var\n        FORTE[2][5][1], //icv\n    ],\n    '6,0': [FORTE[2][6][0], // 7\n        FORTE[2][6][2], // var\n        FORTE[2][6][1], //icv\n    ],\n};\n// cardinality 3\nconst card_3 ={ '1,0': [FORTE[3][1][0], // 8\n    FORTE[3][1][2], // var\n    FORTE[3][1][1], //icv\n],\n    '2,1': [FORTE[3][2][0], // 9\n        FORTE[3][2][2], // var\n        FORTE[3][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3], // 10\n        FORTE[3][2][2], // var\n        FORTE[3][2][1], //icv\n    ],\n    '3,1': [FORTE[3][3][0], // 11\n        FORTE[3][3][2], // var\n        FORTE[3][3][1], //icv\n    ],\n    '3,-1': [[0, 3, 4], // 12\n        FORTE[3][3][2], // var\n        FORTE[3][3][1], //icv\n    ],\n    '4,1': [FORTE[3][4][0], // 13\n        FORTE[3][4][2], // var\n        FORTE[3][4][1], //icv\n    ],\n    '4,-1': [[0, 4, 5], // 14\n        FORTE[3][4][2], // var\n        FORTE[3][4][1], //icv\n    ],\n    '5,1': [FORTE[3][5][0], // 15\n        FORTE[3][5][2], // var\n        FORTE[3][5][1], //icv\n    ],\n    '5,-1': [[0, 5, 6], // 16\n        FORTE[3][5][2], // var\n        FORTE[3][5][1], //icv\n    ],\n    '6,0': [FORTE[3][6][0], // 17\n        FORTE[3][6][2], // var\n        FORTE[3][6][1], //icv\n    ],\n    '7,1': [FORTE[3][7][0], // 18\n        FORTE[3][7][2], // var\n        FORTE[3][7][1], //icv\n    ],\n    '7,-1': [[0, 3, 5], // 19\n        FORTE[3][7][2], // var\n        FORTE[3][7][1], //icv\n    ],\n    '8,1': [FORTE[3][8][0], // 20\n        FORTE[3][8][2], // var\n        FORTE[3][8][1], //icv\n    ],\n    '8,-1': [[0, 4, 6], // 21\n        FORTE[3][8][2], // var\n        FORTE[3][8][1], //icv\n    ],\n    '9,0': [FORTE[3][9][0], // 22\n        FORTE[3][9][2], // var\n        FORTE[3][9][1], //icv\n    ],\n    '10,0': [FORTE[3][10][0], // 23\n        FORTE[3][10][2], // var\n        FORTE[3][10][1], //icv\n    ],\n    '11,1': [FORTE[3][11][0], // 24\n        FORTE[3][11][2], // var\n        FORTE[3][11][1], //icv\n    ],\n    '11,-1': [[0, 4, 7], // 25\n        FORTE[3][11][2], // var\n        FORTE[3][11][1], //icv\n    ],\n    '12,0': [FORTE[3][12][0], // 26\n        FORTE[3][12][2], // var\n        FORTE[3][12][1], //icv\n    ],\n};\n// cardinality 4\nconst card_4 ={ '1,0': [FORTE[4][1][0], // 27\n    FORTE[4][1][2], // var\n    FORTE[4][1][1], //icv\n],\n    '2,1': [FORTE[4][2][0], // 28\n        FORTE[4][2][2], // var\n        FORTE[4][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4], // 29\n        FORTE[4][2][2], // var\n        FORTE[4][2][1], //icv\n    ],\n    '3,0': [FORTE[4][3][0], // 30\n        FORTE[4][3][2], // var\n        FORTE[4][3][1], //icv\n    ],\n    '4,1': [FORTE[4][4][0], // 31\n        FORTE[4][4][2], // var\n        FORTE[4][4][1], //icv\n    ],\n    '4,-1': [[0, 3, 4, 5], // 32\n        FORTE[4][4][2], // var\n        FORTE[4][4][1], //icv\n    ],\n    '5,1': [FORTE[4][5][0], // 33\n        FORTE[4][5][2], // var\n        FORTE[4][5][1], //icv\n    ],\n    '5,-1': [[0, 4, 5, 6], // 34\n        FORTE[4][5][2], // var\n        FORTE[4][5][1], //icv\n    ],\n    '6,0': [FORTE[4][6][0], // 35\n        FORTE[4][6][2], // var\n        FORTE[4][6][1], //icv\n    ],\n    '7,0': [FORTE[4][7][0], // 36\n        FORTE[4][7][2], // var\n        FORTE[4][7][1], //icv\n    ],\n    '8,0': [FORTE[4][8][0], // 37\n        FORTE[4][8][2], // var\n        FORTE[4][8][1], //icv\n    ],\n    '9,0': [FORTE[4][9][0], // 38\n        FORTE[4][9][2], // var\n        FORTE[4][9][1], //icv\n    ],\n    '10,0': [FORTE[4][10][0], // 39\n        FORTE[4][10][2], // var\n        FORTE[4][10][1], //icv\n    ],\n    '11,1': [FORTE[4][11][0], // 40\n        FORTE[4][11][2], // var\n        FORTE[4][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 4, 5], // 41\n        FORTE[4][11][2], // var\n        FORTE[4][11][1], //icv\n    ],\n    '12,1': [FORTE[4][12][0], // 42\n        FORTE[4][12][2], // var\n        FORTE[4][12][1], //icv\n    ],\n    '12,-1': [[0, 3, 4, 6], // 43\n        FORTE[4][12][2], // var\n        FORTE[4][12][1], //icv\n    ],\n    '13,1': [FORTE[4][13][0], // 44\n        FORTE[4][13][2], // var\n        FORTE[4][13][1], //icv\n    ],\n    '13,-1': [[0, 3, 5, 6], // 45\n        FORTE[4][13][2], // var\n        FORTE[4][13][1], //icv\n    ],\n    '14,1': [FORTE[4][14][0], // 46\n        FORTE[4][14][2], // var\n        FORTE[4][14][1], //icv\n    ],\n    '14,-1': [[0, 4, 5, 7], // 47\n        FORTE[4][14][2], // var\n        FORTE[4][14][1], //icv\n    ],\n    '15,1': [FORTE[4][15][0], // 48\n        FORTE[4][15][2], // var\n        FORTE[4][15][1], //icv\n    ],\n    '15,-1': [[0, 2, 5, 6], // 49\n        FORTE[4][15][2], // var\n        FORTE[4][15][1], //icv\n    ],\n    '16,1': [FORTE[4][16][0], // 50\n        FORTE[4][16][2], // var\n        FORTE[4][16][1], //icv\n    ],\n    '16,-1': [[0, 2, 6, 7], // 51\n        FORTE[4][16][2], // var\n        FORTE[4][16][1], //icv\n    ],\n    '17,0': [FORTE[4][17][0], // 52\n        FORTE[4][17][2], // var\n        FORTE[4][17][1], //icv\n    ],\n    '18,1': [FORTE[4][18][0], // 53\n        FORTE[4][18][2], // var\n        FORTE[4][18][1], //icv\n    ],\n    '18,-1': [[0, 3, 6, 7], // 54\n        FORTE[4][18][2], // var\n        FORTE[4][18][1], //icv\n    ],\n    '19,1': [FORTE[4][19][0], // 55\n        FORTE[4][19][2], // var\n        FORTE[4][19][1], //icv\n    ],\n    '19,-1': [[0, 4, 7, 8], // 56\n        FORTE[4][19][2], // var\n        FORTE[4][19][1], //icv\n    ],\n    '20,0': [FORTE[4][20][0], // 57\n        FORTE[4][20][2], // var\n        FORTE[4][20][1], //icv\n    ],\n    '21,0': [FORTE[4][21][0], // 58\n        FORTE[4][21][2], // var\n        FORTE[4][21][1], //icv\n    ],\n    '22,1': [FORTE[4][22][0], // 59\n        FORTE[4][22][2], // var\n        FORTE[4][22][1], //icv\n    ],\n    '22,-1': [[0, 3, 5, 7], // 60\n        FORTE[4][22][2], // var\n        FORTE[4][22][1], //icv\n    ],\n    '23,0': [FORTE[4][23][0], // 61\n        FORTE[4][23][2], // var\n        FORTE[4][23][1], //icv\n    ],\n    '24,0': [FORTE[4][24][0], // 62\n        FORTE[4][24][2], // var\n        FORTE[4][24][1], //icv\n    ],\n    '25,0': [FORTE[4][25][0], // 63\n        FORTE[4][25][2], // var\n        FORTE[4][25][1], //icv\n    ],\n    '26,0': [FORTE[4][26][0], // 64\n        FORTE[4][26][2], // var\n        FORTE[4][26][1], //icv\n    ],\n    '27,1': [FORTE[4][27][0], // 65\n        FORTE[4][27][2], // var\n        FORTE[4][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 6, 8], // 66\n        FORTE[4][27][2], // var\n        FORTE[4][27][1], //icv\n    ],\n    '28,0': [FORTE[4][28][0], // 67\n        FORTE[4][28][2], // var\n        FORTE[4][28][1], //icv\n    ],\n    '29,1': [FORTE[4][29][0], // 68\n        FORTE[4][29][2], // var\n        FORTE[4][29][1], //icv\n    ],\n    '29,-1': [[0, 4, 6, 7], // 69\n        FORTE[4][29][2], // var\n        FORTE[4][29][1], //icv\n    ],\n};\n// cardinality 5\nconst card_5 ={ '1,0': [FORTE[5][1][0], // 70\n    FORTE[5][1][2], // var\n    FORTE[5][1][1], //icv\n],\n    '2,1': [FORTE[5][2][0], // 71\n        FORTE[5][2][2], // var\n        FORTE[5][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5], // 72\n        FORTE[5][2][2], // var\n        FORTE[5][2][1], //icv\n    ],\n    '3,1': [FORTE[5][3][0], // 73\n        FORTE[5][3][2], // var\n        FORTE[5][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5], // 74\n        FORTE[5][3][2], // var\n        FORTE[5][3][1], //icv\n    ],\n    '4,1': [FORTE[5][4][0], // 75\n        FORTE[5][4][2], // var\n        FORTE[5][4][1], //icv\n    ],\n    '4,-1': [[0, 3, 4, 5, 6], // 76\n        FORTE[5][4][2], // var\n        FORTE[5][4][1], //icv\n    ],\n    '5,1': [FORTE[5][5][0], // 77\n        FORTE[5][5][2], // var\n        FORTE[5][5][1], //icv\n    ],\n    '5,-1': [[0, 4, 5, 6, 7], // 78\n        FORTE[5][5][2], // var\n        FORTE[5][5][1], //icv\n    ],\n    '6,1': [FORTE[5][6][0], // 79\n        FORTE[5][6][2], // var\n        FORTE[5][6][1], //icv\n    ],\n    '6,-1': [[0, 1, 4, 5, 6], // 80\n        FORTE[5][6][2], // var\n        FORTE[5][6][1], //icv\n    ],\n    '7,1': [FORTE[5][7][0], // 81\n        FORTE[5][7][2], // var\n        FORTE[5][7][1], //icv\n    ],\n    '7,-1': [[0, 1, 5, 6, 7], // 82\n        FORTE[5][7][2], // var\n        FORTE[5][7][1], //icv\n    ],\n    '8,0': [FORTE[5][8][0], // 83\n        FORTE[5][8][2], // var\n        FORTE[5][8][1], //icv\n    ],\n    '9,1': [FORTE[5][9][0], // 84\n        FORTE[5][9][2], // var\n        FORTE[5][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6], // 85\n        FORTE[5][9][2], // var\n        FORTE[5][9][1], //icv\n    ],\n    '10,1': [FORTE[5][10][0], // 86\n        FORTE[5][10][2], // var\n        FORTE[5][10][1], //icv\n    ],\n    '10,-1': [[0, 2, 3, 5, 6], // 87\n        FORTE[5][10][2], // var\n        FORTE[5][10][1], //icv\n    ],\n    '11,1': [FORTE[5][11][0], // 88\n        FORTE[5][11][2], // var\n        FORTE[5][11][1], //icv\n    ],\n    '11,-1': [[0, 3, 4, 5, 7], // 89\n        FORTE[5][11][2], // var\n        FORTE[5][11][1], //icv\n    ],\n    '12,0': [FORTE[5][12][0], // 90\n        FORTE[5][12][2], // var\n        FORTE[5][12][1], //icv\n    ],\n    '13,1': [FORTE[5][13][0], // 91\n        FORTE[5][13][2], // var\n        FORTE[5][13][1], //icv\n    ],\n    '13,-1': [[0, 4, 6, 7, 8], // 92\n        FORTE[5][13][2], // var\n        FORTE[5][13][1], //icv\n    ],\n    '14,1': [FORTE[5][14][0], // 93\n        FORTE[5][14][2], // var\n        FORTE[5][14][1], //icv\n    ],\n    '14,-1': [[0, 2, 5, 6, 7], // 94\n        FORTE[5][14][2], // var\n        FORTE[5][14][1], //icv\n    ],\n    '15,0': [FORTE[5][15][0], // 95\n        FORTE[5][15][2], // var\n        FORTE[5][15][1], //icv\n    ],\n    '16,1': [FORTE[5][16][0], // 96\n        FORTE[5][16][2], // var\n        FORTE[5][16][1], //icv\n    ],\n    '16,-1': [[0, 3, 4, 6, 7], // 97\n        FORTE[5][16][2], // var\n        FORTE[5][16][1], //icv\n    ],\n    '17,0': [FORTE[5][17][0], // 98\n        FORTE[5][17][2], // var\n        FORTE[5][17][1], //icv\n    ],\n    '18,1': [FORTE[5][18][0], // 99\n        FORTE[5][18][2], // var\n        FORTE[5][18][1], //icv\n    ],\n    '18,-1': [[0, 2, 3, 6, 7], // 100\n        FORTE[5][18][2], // var\n        FORTE[5][18][1], //icv\n    ],\n    '19,1': [FORTE[5][19][0], // 101\n        FORTE[5][19][2], // var\n        FORTE[5][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 4, 6, 7], // 102\n        FORTE[5][19][2], // var\n        FORTE[5][19][1], //icv\n    ],\n    '20,1': [FORTE[5][20][0], // 103\n        FORTE[5][20][2], // var\n        FORTE[5][20][1], //icv\n    ],\n    '20,-1': [[0, 1, 5, 7, 8], // 104\n        FORTE[5][20][2], // var\n        FORTE[5][20][1], //icv\n    ],\n    '21,1': [FORTE[5][21][0], // 105\n        FORTE[5][21][2], // var\n        FORTE[5][21][1], //icv\n    ],\n    '21,-1': [[0, 3, 4, 7, 8], // 106\n        FORTE[5][21][2], // var\n        FORTE[5][21][1], //icv\n    ],\n    '22,0': [FORTE[5][22][0], // 107\n        FORTE[5][22][2], // var\n        FORTE[5][22][1], //icv\n    ],\n    '23,1': [FORTE[5][23][0], // 108\n        FORTE[5][23][2], // var\n        FORTE[5][23][1], //icv\n    ],\n    '23,-1': [[0, 2, 4, 5, 7], // 109\n        FORTE[5][23][2], // var\n        FORTE[5][23][1], //icv\n    ],\n    '24,1': [FORTE[5][24][0], // 110\n        FORTE[5][24][2], // var\n        FORTE[5][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 6, 7], // 111\n        FORTE[5][24][2], // var\n        FORTE[5][24][1], //icv\n    ],\n    '25,1': [FORTE[5][25][0], // 112\n        FORTE[5][25][2], // var\n        FORTE[5][25][1], //icv\n    ],\n    '25,-1': [[0, 3, 5, 6, 8], // 113\n        FORTE[5][25][2], // var\n        FORTE[5][25][1], //icv\n    ],\n    '26,1': [FORTE[5][26][0], // 114\n        FORTE[5][26][2], // var\n        FORTE[5][26][1], //icv\n    ],\n    '26,-1': [[0, 3, 4, 6, 8], // 115\n        FORTE[5][26][2], // var\n        FORTE[5][26][1], //icv\n    ],\n    '27,1': [FORTE[5][27][0], // 116\n        FORTE[5][27][2], // var\n        FORTE[5][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 5, 7, 8], // 117\n        FORTE[5][27][2], // var\n        FORTE[5][27][1], //icv\n    ],\n    '28,1': [FORTE[5][28][0], // 118\n        FORTE[5][28][2], // var\n        FORTE[5][28][1], //icv\n    ],\n    '28,-1': [[0, 2, 5, 6, 8], // 119\n        FORTE[5][28][2], // var\n        FORTE[5][28][1], //icv\n    ],\n    '29,1': [FORTE[5][29][0], // 120\n        FORTE[5][29][2], // var\n        FORTE[5][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 5, 7, 8], // 121\n        FORTE[5][29][2], // var\n        FORTE[5][29][1], //icv\n    ],\n    '30,1': [FORTE[5][30][0], // 122\n        FORTE[5][30][2], // var\n        FORTE[5][30][1], //icv\n    ],\n    '30,-1': [[0, 2, 4, 7, 8], // 123\n        FORTE[5][30][2], // var\n        FORTE[5][30][1], //icv\n    ],\n    '31,1': [FORTE[5][31][0], // 124\n        FORTE[5][31][2], // var\n        FORTE[5][31][1], //icv\n    ],\n    '31,-1': [[0, 3, 6, 8, 9], // 125\n        FORTE[5][31][2], // var\n        FORTE[5][31][1], //icv\n    ],\n    '32,1': [FORTE[5][32][0], // 126\n        FORTE[5][32][2], // var\n        FORTE[5][32][1], //icv\n    ],\n    '32,-1': [[0, 3, 5, 8, 9], // 127\n        FORTE[5][32][2], // var\n        FORTE[5][32][1], //icv\n    ],\n    '33,0': [FORTE[5][33][0], // 128\n        FORTE[5][33][2], // var\n        FORTE[5][33][1], //icv\n    ],\n    '34,0': [FORTE[5][34][0], // 129\n        FORTE[5][34][2], // var\n        FORTE[5][34][1], //icv\n    ],\n    '35,0': [FORTE[5][35][0], // 130\n        FORTE[5][35][2], // var\n        FORTE[5][35][1], //icv\n    ],\n    '36,1': [FORTE[5][36][0], // 131\n        FORTE[5][36][2], // var\n        FORTE[5][36][1], //icv\n    ],\n    '36,-1': [[0, 3, 5, 6, 7], // 132\n        FORTE[5][36][2], // var\n        FORTE[5][36][1], //icv\n    ],\n    '37,0': [FORTE[5][37][0], // 133\n        FORTE[5][37][2], // var\n        FORTE[5][37][1], //icv\n    ],\n    '38,1': [FORTE[5][38][0], // 134\n        FORTE[5][38][2], // var\n        FORTE[5][38][1], //icv\n    ],\n    '38,-1': [[0, 3, 6, 7, 8], // 135\n        FORTE[5][38][2], // var\n        FORTE[5][38][1], //icv\n    ],\n};\n// cardinality 6\nconst card_6 ={ '1,0': [FORTE[6][1][0], // 136\n    FORTE[6][1][2], // var\n    FORTE[6][1][1], //icv\n],\n    '2,1': [FORTE[6][2][0], // 137\n        FORTE[6][2][2], // var\n        FORTE[6][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6], // 138\n        FORTE[6][2][2], // var\n        FORTE[6][2][1], //icv\n    ],\n    '3,1': [FORTE[6][3][0], // 139\n        FORTE[6][3][2], // var\n        FORTE[6][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5, 6], // 140\n        FORTE[6][3][2], // var\n        FORTE[6][3][1], //icv\n    ],\n    '4,0': [FORTE[6][4][0], // 141\n        FORTE[6][4][2], // var\n        FORTE[6][4][1], //icv\n    ],\n    '5,1': [FORTE[6][5][0], // 142\n        FORTE[6][5][2], // var\n        FORTE[6][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 4, 5, 6, 7], // 143\n        FORTE[6][5][2], // var\n        FORTE[6][5][1], //icv\n    ],\n    '6,0': [FORTE[6][6][0], // 144\n        FORTE[6][6][2], // var\n        FORTE[6][6][1], //icv\n    ],\n    '7,0': [FORTE[6][7][0], // 145\n        FORTE[6][7][2], // var\n        FORTE[6][7][1], //icv\n    ],\n    '8,0': [FORTE[6][8][0], // 146\n        FORTE[6][8][2], // var\n        FORTE[6][8][1], //icv\n    ],\n    '9,1': [FORTE[6][9][0], // 147\n        FORTE[6][9][2], // var\n        FORTE[6][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6, 7], // 148\n        FORTE[6][9][2], // var\n        FORTE[6][9][1], //icv\n    ],\n    '10,1': [FORTE[6][10][0], // 149\n        FORTE[6][10][2], // var\n        FORTE[6][10][1], //icv\n    ],\n    '10,-1': [[0, 2, 3, 4, 6, 7], // 150\n        FORTE[6][10][2], // var\n        FORTE[6][10][1], //icv\n    ],\n    '11,1': [FORTE[6][11][0], // 151\n        FORTE[6][11][2], // var\n        FORTE[6][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 3, 5, 6, 7], // 152\n        FORTE[6][11][2], // var\n        FORTE[6][11][1], //icv\n    ],\n    '12,1': [FORTE[6][12][0], // 153\n        FORTE[6][12][2], // var\n        FORTE[6][12][1], //icv\n    ],\n    '12,-1': [[0, 1, 3, 5, 6, 7], // 154\n        FORTE[6][12][2], // var\n        FORTE[6][12][1], //icv\n    ],\n    '13,0': [FORTE[6][13][0], // 155\n        FORTE[6][13][2], // var\n        FORTE[6][13][1], //icv\n    ],\n    '14,1': [FORTE[6][14][0], // 156\n        FORTE[6][14][2], // var\n        FORTE[6][14][1], //icv\n    ],\n    '14,-1': [[0, 3, 4, 5, 7, 8], // 157\n        FORTE[6][14][2], // var\n        FORTE[6][14][1], //icv\n    ],\n    '15,1': [FORTE[6][15][0], // 158\n        FORTE[6][15][2], // var\n        FORTE[6][15][1], //icv\n    ],\n    '15,-1': [[0, 3, 4, 6, 7, 8], // 159\n        FORTE[6][15][2], // var\n        FORTE[6][15][1], //icv\n    ],\n    '16,1': [FORTE[6][16][0], // 160\n        FORTE[6][16][2], // var\n        FORTE[6][16][1], //icv\n    ],\n    '16,-1': [[0, 2, 3, 4, 7, 8], // 161\n        FORTE[6][16][2], // var\n        FORTE[6][16][1], //icv\n    ],\n    '17,1': [FORTE[6][17][0], // 162\n        FORTE[6][17][2], // var\n        FORTE[6][17][1], //icv\n    ],\n    '17,-1': [[0, 1, 4, 6, 7, 8], // 163\n        FORTE[6][17][2], // var\n        FORTE[6][17][1], //icv\n    ],\n    '18,1': [FORTE[6][18][0], // 164\n        FORTE[6][18][2], // var\n        FORTE[6][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 3, 6, 7, 8], // 165\n        FORTE[6][18][2], // var\n        FORTE[6][18][1], //icv\n    ],\n    '19,1': [FORTE[6][19][0], // 166\n        FORTE[6][19][2], // var\n        FORTE[6][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 4, 5, 7, 8], // 167\n        FORTE[6][19][2], // var\n        FORTE[6][19][1], //icv\n    ],\n    '20,0': [FORTE[6][20][0], // 168\n        FORTE[6][20][2], // var\n        FORTE[6][20][1], //icv\n    ],\n    '21,1': [FORTE[6][21][0], // 169\n        FORTE[6][21][2], // var\n        FORTE[6][21][1], //icv\n    ],\n    '21,-1': [[0, 2, 4, 5, 6, 8], // 170\n        FORTE[6][21][2], // var\n        FORTE[6][21][1], //icv\n    ],\n    '22,1': [FORTE[6][22][0], // 171\n        FORTE[6][22][2], // var\n        FORTE[6][22][1], //icv\n    ],\n    '22,-1': [[0, 2, 4, 6, 7, 8], // 172\n        FORTE[6][22][2], // var\n        FORTE[6][22][1], //icv\n    ],\n    '23,0': [FORTE[6][23][0], // 173\n        FORTE[6][23][2], // var\n        FORTE[6][23][1], //icv\n    ],\n    '24,1': [FORTE[6][24][0], // 174\n        FORTE[6][24][2], // var\n        FORTE[6][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 5, 7, 8], // 175\n        FORTE[6][24][2], // var\n        FORTE[6][24][1], //icv\n    ],\n    '25,1': [FORTE[6][25][0], // 176\n        FORTE[6][25][2], // var\n        FORTE[6][25][1], //icv\n    ],\n    '25,-1': [[0, 2, 3, 5, 7, 8], // 177\n        FORTE[6][25][2], // var\n        FORTE[6][25][1], //icv\n    ],\n    '26,0': [FORTE[6][26][0], // 178\n        FORTE[6][26][2], // var\n        FORTE[6][26][1], //icv\n    ],\n    '27,1': [FORTE[6][27][0], // 179\n        FORTE[6][27][2], // var\n        FORTE[6][27][1], //icv\n    ],\n    '27,-1': [[0, 3, 5, 6, 8, 9], // 180\n        FORTE[6][27][2], // var\n        FORTE[6][27][1], //icv\n    ],\n    '28,0': [FORTE[6][28][0], // 181\n        FORTE[6][28][2], // var\n        FORTE[6][28][1], //icv\n    ],\n    '29,0': [FORTE[6][29][0], // 182\n        FORTE[6][29][2], // var\n        FORTE[6][29][1], //icv\n    ],\n    '30,1': [FORTE[6][30][0], // 183\n        FORTE[6][30][2], // var\n        FORTE[6][30][1], //icv\n    ],\n    '30,-1': [[0, 2, 3, 6, 8, 9], // 184\n        FORTE[6][30][2], // var\n        FORTE[6][30][1], //icv\n    ],\n    '31,1': [FORTE[6][31][0], // 185\n        FORTE[6][31][2], // var\n        FORTE[6][31][1], //icv\n    ],\n    '31,-1': [[0, 1, 4, 6, 8, 9], // 186\n        FORTE[6][31][2], // var\n        FORTE[6][31][1], //icv\n    ],\n    '32,0': [FORTE[6][32][0], // 187\n        FORTE[6][32][2], // var\n        FORTE[6][32][1], //icv\n    ],\n    '33,1': [FORTE[6][33][0], // 188\n        FORTE[6][33][2], // var\n        FORTE[6][33][1], //icv\n    ],\n    '33,-1': [[0, 2, 4, 6, 7, 9], // 189\n        FORTE[6][33][2], // var\n        FORTE[6][33][1], //icv\n    ],\n    '34,1': [FORTE[6][34][0], // 190\n        FORTE[6][34][2], // var\n        FORTE[6][34][1], //icv\n    ],\n    '34,-1': [[0, 2, 4, 6, 8, 9], // 191\n        FORTE[6][34][2], // var\n        FORTE[6][34][1], //icv\n    ],\n    '35,0': [FORTE[6][35][0], // 192\n        FORTE[6][35][2], // var\n        FORTE[6][35][1], //icv\n    ],\n    '36,1': [FORTE[6][36][0], // 193\n        FORTE[6][36][2], // var\n        FORTE[6][36][1], //icv\n    ],\n    '36,-1': [[0, 3, 4, 5, 6, 7], // 194\n        FORTE[6][36][2], // var\n        FORTE[6][36][1], //icv\n    ],\n    '37,0': [FORTE[6][37][0], // 195\n        FORTE[6][37][2], // var\n        FORTE[6][37][1], //icv\n    ],\n    '38,0': [FORTE[6][38][0], // 196\n        FORTE[6][38][2], // var\n        FORTE[6][38][1], //icv\n    ],\n    '39,1': [FORTE[6][39][0], // 197\n        FORTE[6][39][2], // var\n        FORTE[6][39][1], //icv\n    ],\n    '39,-1': [[0, 3, 4, 5, 6, 8], // 198\n        FORTE[6][39][2], // var\n        FORTE[6][39][1], //icv\n    ],\n    '40,1': [FORTE[6][40][0], // 199\n        FORTE[6][40][2], // var\n        FORTE[6][40][1], //icv\n    ],\n    '40,-1': [[0, 3, 5, 6, 7, 8], // 200\n        FORTE[6][40][2], // var\n        FORTE[6][40][1], //icv\n    ],\n    '41,1': [FORTE[6][41][0], // 201\n        FORTE[6][41][2], // var\n        FORTE[6][41][1], //icv\n    ],\n    '41,-1': [[0, 2, 5, 6, 7, 8], // 202\n        FORTE[6][41][2], // var\n        FORTE[6][41][1], //icv\n    ],\n    '42,0': [FORTE[6][42][0], // 203\n        FORTE[6][42][2], // var\n        FORTE[6][42][1], //icv\n    ],\n    '43,1': [FORTE[6][43][0], // 204\n        FORTE[6][43][2], // var\n        FORTE[6][43][1], //icv\n    ],\n    '43,-1': [[0, 2, 3, 6, 7, 8], // 205\n        FORTE[6][43][2], // var\n        FORTE[6][43][1], //icv\n    ],\n    '44,1': [FORTE[6][44][0], // 206\n        FORTE[6][44][2], // var\n        FORTE[6][44][1], //icv\n    ],\n    '44,-1': [[0, 3, 4, 7, 8, 9], // 207\n        FORTE[6][44][2], // var\n        FORTE[6][44][1], //icv\n    ],\n    '45,0': [FORTE[6][45][0], // 208\n        FORTE[6][45][2], // var\n        FORTE[6][45][1], //icv\n    ],\n    '46,1': [FORTE[6][46][0], // 209\n        FORTE[6][46][2], // var\n        FORTE[6][46][1], //icv\n    ],\n    '46,-1': [[0, 3, 5, 7, 8, 9], // 210\n        FORTE[6][46][2], // var\n        FORTE[6][46][1], //icv\n    ],\n    '47,1': [FORTE[6][47][0], // 211\n        FORTE[6][47][2], // var\n        FORTE[6][47][1], //icv\n    ],\n    '47,-1': [[0, 2, 5, 7, 8, 9], // 212\n        FORTE[6][47][2], // var\n        FORTE[6][47][1], //icv\n    ],\n    '48,0': [FORTE[6][48][0], // 213\n        FORTE[6][48][2], // var\n        FORTE[6][48][1], //icv\n    ],\n    '49,0': [FORTE[6][49][0], // 214\n        FORTE[6][49][2], // var\n        FORTE[6][49][1], //icv\n    ],\n    '50,0': [FORTE[6][50][0], // 215\n        FORTE[6][50][2], // var\n        FORTE[6][50][1], //icv\n    ],\n};\n// cardinality 7\nconst card_7 ={ '1,0': [FORTE[7][1][0], // 216\n    FORTE[7][1][2], // var\n    FORTE[7][1][1], //icv\n],\n    '2,1': [FORTE[7][2][0], // 217\n        FORTE[7][2][2], // var\n        FORTE[7][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7], // 218\n        FORTE[7][2][2], // var\n        FORTE[7][2][1], //icv\n    ],\n    '3,1': [FORTE[7][3][0], // 219\n        FORTE[7][3][2], // var\n        FORTE[7][3][1], //icv\n    ],\n    '3,-1': [[0, 3, 4, 5, 6, 7, 8], // 220\n        FORTE[7][3][2], // var\n        FORTE[7][3][1], //icv\n    ],\n    '4,1': [FORTE[7][4][0], // 221\n        FORTE[7][4][2], // var\n        FORTE[7][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 3, 4, 5, 6, 7], // 222\n        FORTE[7][4][2], // var\n        FORTE[7][4][1], //icv\n    ],\n    '5,1': [FORTE[7][5][0], // 223\n        FORTE[7][5][2], // var\n        FORTE[7][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 4, 5, 6, 7], // 224\n        FORTE[7][5][2], // var\n        FORTE[7][5][1], //icv\n    ],\n    '6,1': [FORTE[7][6][0], // 225\n        FORTE[7][6][2], // var\n        FORTE[7][6][1], //icv\n    ],\n    '6,-1': [[0, 1, 4, 5, 6, 7, 8], // 226\n        FORTE[7][6][2], // var\n        FORTE[7][6][1], //icv\n    ],\n    '7,1': [FORTE[7][7][0], // 227\n        FORTE[7][7][2], // var\n        FORTE[7][7][1], //icv\n    ],\n    '7,-1': [[0, 1, 2, 5, 6, 7, 8], // 228\n        FORTE[7][7][2], // var\n        FORTE[7][7][1], //icv\n    ],\n    '8,0': [FORTE[7][8][0], // 229\n        FORTE[7][8][2], // var\n        FORTE[7][8][1], //icv\n    ],\n    '9,1': [FORTE[7][9][0], // 230\n        FORTE[7][9][2], // var\n        FORTE[7][9][1], //icv\n    ],\n    '9,-1': [[0, 2, 4, 5, 6, 7, 8], // 231\n        FORTE[7][9][2], // var\n        FORTE[7][9][1], //icv\n    ],\n    '10,1': [FORTE[7][10][0], // 232\n        FORTE[7][10][2], // var\n        FORTE[7][10][1], //icv\n    ],\n    '10,-1': [[0, 3, 5, 6, 7, 8, 9], // 233\n        FORTE[7][10][2], // var\n        FORTE[7][10][1], //icv\n    ],\n    '11,1': [FORTE[7][11][0], // 234\n        FORTE[7][11][2], // var\n        FORTE[7][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 3, 4, 5, 7, 8], // 235\n        FORTE[7][11][2], // var\n        FORTE[7][11][1], //icv\n    ],\n    '12,0': [FORTE[7][12][0], // 236\n        FORTE[7][12][2], // var\n        FORTE[7][12][1], //icv\n    ],\n    '13,1': [FORTE[7][13][0], // 237\n        FORTE[7][13][2], // var\n        FORTE[7][13][1], //icv\n    ],\n    '13,-1': [[0, 2, 3, 4, 6, 7, 8], // 238\n        FORTE[7][13][2], // var\n        FORTE[7][13][1], //icv\n    ],\n    '14,1': [FORTE[7][14][0], // 239\n        FORTE[7][14][2], // var\n        FORTE[7][14][1], //icv\n    ],\n    '14,-1': [[0, 1, 3, 5, 6, 7, 8], // 240\n        FORTE[7][14][2], // var\n        FORTE[7][14][1], //icv\n    ],\n    '15,0': [FORTE[7][15][0], // 241\n        FORTE[7][15][2], // var\n        FORTE[7][15][1], //icv\n    ],\n    '16,1': [FORTE[7][16][0], // 242\n        FORTE[7][16][2], // var\n        FORTE[7][16][1], //icv\n    ],\n    '16,-1': [[0, 3, 4, 6, 7, 8, 9], // 243\n        FORTE[7][16][2], // var\n        FORTE[7][16][1], //icv\n    ],\n    '17,0': [FORTE[7][17][0], // 244\n        FORTE[7][17][2], // var\n        FORTE[7][17][1], //icv\n    ],\n    '18,1': [FORTE[7][18][0], // 245\n        FORTE[7][18][2], // var\n        FORTE[7][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 4, 6, 7, 8, 9], // 246\n        FORTE[7][18][2], // var\n        FORTE[7][18][1], //icv\n    ],\n    '19,1': [FORTE[7][19][0], // 247\n        FORTE[7][19][2], // var\n        FORTE[7][19][1], //icv\n    ],\n    '19,-1': [[0, 2, 3, 6, 7, 8, 9], // 248\n        FORTE[7][19][2], // var\n        FORTE[7][19][1], //icv\n    ],\n    '20,1': [FORTE[7][20][0], // 249\n        FORTE[7][20][2], // var\n        FORTE[7][20][1], //icv\n    ],\n    '20,-1': [[0, 1, 2, 5, 7, 8, 9], // 250\n        FORTE[7][20][2], // var\n        FORTE[7][20][1], //icv\n    ],\n    '21,1': [FORTE[7][21][0], // 251\n        FORTE[7][21][2], // var\n        FORTE[7][21][1], //icv\n    ],\n    '21,-1': [[0, 1, 4, 5, 7, 8, 9], // 252\n        FORTE[7][21][2], // var\n        FORTE[7][21][1], //icv\n    ],\n    '22,0': [FORTE[7][22][0], // 253\n        FORTE[7][22][2], // var\n        FORTE[7][22][1], //icv\n    ],\n    '23,1': [FORTE[7][23][0], // 254\n        FORTE[7][23][2], // var\n        FORTE[7][23][1], //icv\n    ],\n    '23,-1': [[0, 2, 4, 5, 6, 7, 9], // 255\n        FORTE[7][23][2], // var\n        FORTE[7][23][1], //icv\n    ],\n    '24,1': [FORTE[7][24][0], // 256\n        FORTE[7][24][2], // var\n        FORTE[7][24][1], //icv\n    ],\n    '24,-1': [[0, 2, 4, 6, 7, 8, 9], // 257\n        FORTE[7][24][2], // var\n        FORTE[7][24][1], //icv\n    ],\n    '25,1': [FORTE[7][25][0], // 258\n        FORTE[7][25][2], // var\n        FORTE[7][25][1], //icv\n    ],\n    '25,-1': [[0, 2, 3, 5, 6, 7, 9], // 259\n        FORTE[7][25][2], // var\n        FORTE[7][25][1], //icv\n    ],\n    '26,1': [FORTE[7][26][0], // 260\n        FORTE[7][26][2], // var\n        FORTE[7][26][1], //icv\n    ],\n    '26,-1': [[0, 2, 4, 5, 6, 8, 9], // 261\n        FORTE[7][26][2], // var\n        FORTE[7][26][1], //icv\n    ],\n    '27,1': [FORTE[7][27][0], // 262\n        FORTE[7][27][2], // var\n        FORTE[7][27][1], //icv\n    ],\n    '27,-1': [[0, 2, 4, 5, 7, 8, 9], // 263\n        FORTE[7][27][2], // var\n        FORTE[7][27][1], //icv\n    ],\n    '28,1': [FORTE[7][28][0], // 264\n        FORTE[7][28][2], // var\n        FORTE[7][28][1], //icv\n    ],\n    '28,-1': [[0, 2, 3, 4, 6, 8, 9], // 265\n        FORTE[7][28][2], // var\n        FORTE[7][28][1], //icv\n    ],\n    '29,1': [FORTE[7][29][0], // 266\n        FORTE[7][29][2], // var\n        FORTE[7][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 3, 5, 7, 8, 9], // 267\n        FORTE[7][29][2], // var\n        FORTE[7][29][1], //icv\n    ],\n    '30,1': [FORTE[7][30][0], // 268\n        FORTE[7][30][2], // var\n        FORTE[7][30][1], //icv\n    ],\n    '30,-1': [[0, 1, 3, 5, 7, 8, 9], // 269\n        FORTE[7][30][2], // var\n        FORTE[7][30][1], //icv\n    ],\n    '31,1': [FORTE[7][31][0], // 270\n        FORTE[7][31][2], // var\n        FORTE[7][31][1], //icv\n    ],\n    '31,-1': [[0, 2, 3, 5, 6, 8, 9], // 271\n        FORTE[7][31][2], // var\n        FORTE[7][31][1], //icv\n    ],\n    '32,1': [FORTE[7][32][0], // 272\n        FORTE[7][32][2], // var\n        FORTE[7][32][1], //icv\n    ],\n    '32,-1': [[0, 1, 3, 5, 6, 8, 9], // 273\n        FORTE[7][32][2], // var\n        FORTE[7][32][1], //icv\n    ],\n    '33,0': [FORTE[7][33][0], // 274\n        FORTE[7][33][2], // var\n        FORTE[7][33][1], //icv\n    ],\n    '34,0': [FORTE[7][34][0], // 275\n        FORTE[7][34][2], // var\n        FORTE[7][34][1], //icv\n    ],\n    '35,0': [FORTE[7][35][0], // 276\n        FORTE[7][35][2], // var\n        FORTE[7][35][1], //icv\n    ],\n    '36,1': [FORTE[7][36][0], // 277\n        FORTE[7][36][2], // var\n        FORTE[7][36][1], //icv\n    ],\n    '36,-1': [[0, 2, 3, 5, 6, 7, 8], // 278\n        FORTE[7][36][2], // var\n        FORTE[7][36][1], //icv\n    ],\n    '37,0': [FORTE[7][37][0], // 279\n        FORTE[7][37][2], // var\n        FORTE[7][37][1], //icv\n    ],\n    '38,1': [FORTE[7][38][0], // 280\n        FORTE[7][38][2], // var\n        FORTE[7][38][1], //icv\n    ],\n    '38,-1': [[0, 1, 3, 4, 6, 7, 8], // 281\n        FORTE[7][38][2], // var\n        FORTE[7][38][1], //icv\n    ],\n};\n// cardinality 8\nconst card_8 ={ '1,0': [FORTE[8][1][0], // 282\n    FORTE[8][1][2], // var\n    FORTE[8][1][1], //icv\n],\n    '2,1': [FORTE[8][2][0], // 283\n        FORTE[8][2][2], // var\n        FORTE[8][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8], // 284\n        FORTE[8][2][2], // var\n        FORTE[8][2][1], //icv\n    ],\n    '3,0': [FORTE[8][3][0], // 285\n        FORTE[8][3][2], // var\n        FORTE[8][3][1], //icv\n    ],\n    '4,1': [FORTE[8][4][0], // 286\n        FORTE[8][4][2], // var\n        FORTE[8][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 3, 4, 5, 6, 7, 8], // 287\n        FORTE[8][4][2], // var\n        FORTE[8][4][1], //icv\n    ],\n    '5,1': [FORTE[8][5][0], // 288\n        FORTE[8][5][2], // var\n        FORTE[8][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 4, 5, 6, 7, 8], // 289\n        FORTE[8][5][2], // var\n        FORTE[8][5][1], //icv\n    ],\n    '6,0': [FORTE[8][6][0], // 290\n        FORTE[8][6][2], // var\n        FORTE[8][6][1], //icv\n    ],\n    '7,0': [FORTE[8][7][0], // 291\n        FORTE[8][7][2], // var\n        FORTE[8][7][1], //icv\n    ],\n    '8,0': [FORTE[8][8][0], // 292\n        FORTE[8][8][2], // var\n        FORTE[8][8][1], //icv\n    ],\n    '9,0': [FORTE[8][9][0], // 293\n        FORTE[8][9][2], // var\n        FORTE[8][9][1], //icv\n    ],\n    '10,0': [FORTE[8][10][0], // 294\n        FORTE[8][10][2], // var\n        FORTE[8][10][1], //icv\n    ],\n    '11,1': [FORTE[8][11][0], // 295\n        FORTE[8][11][2], // var\n        FORTE[8][11][1], //icv\n    ],\n    '11,-1': [[0, 2, 4, 5, 6, 7, 8, 9], // 296\n        FORTE[8][11][2], // var\n        FORTE[8][11][1], //icv\n    ],\n    '12,1': [FORTE[8][12][0], // 297\n        FORTE[8][12][2], // var\n        FORTE[8][12][1], //icv\n    ],\n    '12,-1': [[0, 2, 3, 4, 5, 6, 8, 9], // 298\n        FORTE[8][12][2], // var\n        FORTE[8][12][1], //icv\n    ],\n    '13,1': [FORTE[8][13][0], // 299\n        FORTE[8][13][2], // var\n        FORTE[8][13][1], //icv\n    ],\n    '13,-1': [[0, 2, 3, 5, 6, 7, 8, 9], // 300\n        FORTE[8][13][2], // var\n        FORTE[8][13][1], //icv\n    ],\n    '14,1': [FORTE[8][14][0], // 301\n        FORTE[8][14][2], // var\n        FORTE[8][14][1], //icv\n    ],\n    '14,-1': [[0, 2, 3, 4, 5, 7, 8, 9], // 302\n        FORTE[8][14][2], // var\n        FORTE[8][14][1], //icv\n    ],\n    '15,1': [FORTE[8][15][0], // 303\n        FORTE[8][15][2], // var\n        FORTE[8][15][1], //icv\n    ],\n    '15,-1': [[0, 1, 3, 5, 6, 7, 8, 9], // 304\n        FORTE[8][15][2], // var\n        FORTE[8][15][1], //icv\n    ],\n    '16,1': [FORTE[8][16][0], // 305\n        FORTE[8][16][2], // var\n        FORTE[8][16][1], //icv\n    ],\n    '16,-1': [[0, 1, 2, 4, 6, 7, 8, 9], // 306\n        FORTE[8][16][2], // var\n        FORTE[8][16][1], //icv\n    ],\n    '17,0': [FORTE[8][17][0], // 307\n        FORTE[8][17][2], // var\n        FORTE[8][17][1], //icv\n    ],\n    '18,1': [FORTE[8][18][0], // 308\n        FORTE[8][18][2], // var\n        FORTE[8][18][1], //icv\n    ],\n    '18,-1': [[0, 1, 3, 4, 6, 7, 8, 9], // 309\n        FORTE[8][18][2], // var\n        FORTE[8][18][1], //icv\n    ],\n    '19,1': [FORTE[8][19][0], // 310\n        FORTE[8][19][2], // var\n        FORTE[8][19][1], //icv\n    ],\n    '19,-1': [[0, 1, 3, 4, 5, 7, 8, 9], // 311\n        FORTE[8][19][2], // var\n        FORTE[8][19][1], //icv\n    ],\n    '20,0': [FORTE[8][20][0], // 312\n        FORTE[8][20][2], // var\n        FORTE[8][20][1], //icv\n    ],\n    '21,0': [FORTE[8][21][0], // 313\n        FORTE[8][21][2], // var\n        FORTE[8][21][1], //icv\n    ],\n    '22,1': [FORTE[8][22][0], // 314\n        FORTE[8][22][2], // var\n        FORTE[8][22][1], //icv\n    ],\n    '22,-1': [[0, 2, 4, 5, 7, 8, 9, 10], // 315\n        FORTE[8][22][2], // var\n        FORTE[8][22][1], //icv\n    ],\n    '23,0': [FORTE[8][23][0], // 316\n        FORTE[8][23][2], // var\n        FORTE[8][23][1], //icv\n    ],\n    '24,0': [FORTE[8][24][0], // 317\n        FORTE[8][24][2], // var\n        FORTE[8][24][1], //icv\n    ],\n    '25,0': [FORTE[8][25][0], // 318\n        FORTE[8][25][2], // var\n        FORTE[8][25][1], //icv\n    ],\n    '26,0': [FORTE[8][26][0], // 319\n        FORTE[8][26][2], // var\n        FORTE[8][26][1], //icv\n    ],\n    '27,1': [FORTE[8][27][0], // 320\n        FORTE[8][27][2], // var\n        FORTE[8][27][1], //icv\n    ],\n    '27,-1': [[0, 2, 3, 5, 6, 8, 9, 10], // 321\n        FORTE[8][27][2], // var\n        FORTE[8][27][1], //icv\n    ],\n    '28,0': [FORTE[8][28][0], // 322\n        FORTE[8][28][2], // var\n        FORTE[8][28][1], //icv\n    ],\n    '29,1': [FORTE[8][29][0], // 323\n        FORTE[8][29][2], // var\n        FORTE[8][29][1], //icv\n    ],\n    '29,-1': [[0, 2, 3, 4, 6, 7, 8, 9], // 324\n        FORTE[8][29][2], // var\n        FORTE[8][29][1], //icv\n    ],\n};\n// cardinality 9\nconst card_9 ={ '1,0': [FORTE[9][1][0], // 325\n    FORTE[9][1][2], // var\n    FORTE[9][1][1], //icv\n],\n    '2,1': [FORTE[9][2][0], // 326\n        FORTE[9][2][2], // var\n        FORTE[9][2][1], //icv\n    ],\n    '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8, 9], // 327\n        FORTE[9][2][2], // var\n        FORTE[9][2][1], //icv\n    ],\n    '3,1': [FORTE[9][3][0], // 328\n        FORTE[9][3][2], // var\n        FORTE[9][3][1], //icv\n    ],\n    '3,-1': [[0, 1, 3, 4, 5, 6, 7, 8, 9], // 329\n        FORTE[9][3][2], // var\n        FORTE[9][3][1], //icv\n    ],\n    '4,1': [FORTE[9][4][0], // 330\n        FORTE[9][4][2], // var\n        FORTE[9][4][1], //icv\n    ],\n    '4,-1': [[0, 1, 2, 4, 5, 6, 7, 8, 9], // 331\n        FORTE[9][4][2], // var\n        FORTE[9][4][1], //icv\n    ],\n    '5,1': [FORTE[9][5][0], // 332\n        FORTE[9][5][2], // var\n        FORTE[9][5][1], //icv\n    ],\n    '5,-1': [[0, 1, 2, 3, 5, 6, 7, 8, 9], // 333\n        FORTE[9][5][2], // var\n        FORTE[9][5][1], //icv\n    ],\n    '6,0': [FORTE[9][6][0], // 334\n        FORTE[9][6][2], // var\n        FORTE[9][6][1], //icv\n    ],\n    '7,1': [FORTE[9][7][0], // 335\n        FORTE[9][7][2], // var\n        FORTE[9][7][1], //icv\n    ],\n    '7,-1': [[0, 2, 3, 5, 6, 7, 8, 9, 10], // 336\n        FORTE[9][7][2], // var\n        FORTE[9][7][1], //icv\n    ],\n    '8,1': [FORTE[9][8][0], // 337\n        FORTE[9][8][2], // var\n        FORTE[9][8][1], //icv\n    ],\n    '8,-1': [[0, 2, 3, 4, 6, 7, 8, 9, 10], // 338\n        FORTE[9][8][2], // var\n        FORTE[9][8][1], //icv\n    ],\n    '9,0': [FORTE[9][9][0], // 339\n        FORTE[9][9][2], // var\n        FORTE[9][9][1], //icv\n    ],\n    '10,0': [FORTE[9][10][0], // 340\n        FORTE[9][10][2], // var\n        FORTE[9][10][1], //icv\n    ],\n    '11,1': [FORTE[9][11][0], // 341\n        FORTE[9][11][2], // var\n        FORTE[9][11][1], //icv\n    ],\n    '11,-1': [[0, 1, 3, 4, 5, 7, 8, 9, 10], // 342\n        FORTE[9][11][2], // var\n        FORTE[9][11][1], //icv\n    ],\n    '12,0': [FORTE[9][12][0], // 343\n        FORTE[9][12][2], // var\n        FORTE[9][12][1], //icv\n    ],\n};\n// cardinality 10\nconst card_10 ={ '1,0': [FORTE[10][1][0], // 344\n    FORTE[10][1][2], // var\n    FORTE[10][1][1], //icv\n],\n    '2,0': [FORTE[10][2][0], // 345\n        FORTE[10][2][2], // var\n        FORTE[10][2][1], //icv\n    ],\n    '3,0': [FORTE[10][3][0], // 346\n        FORTE[10][3][2], // var\n        FORTE[10][3][1], //icv\n    ],\n    '4,0': [FORTE[10][4][0], // 347\n        FORTE[10][4][2], // var\n        FORTE[10][4][1], //icv\n    ],\n    '5,0': [FORTE[10][5][0], // 348\n        FORTE[10][5][2], // var\n        FORTE[10][5][1], //icv\n    ],\n    '6,0': [FORTE[10][6][0], // 349\n        FORTE[10][6][2], // var\n        FORTE[10][6][1], //icv\n    ],\n};\n// cardinality 11\nconst card_11 ={ '1,0': [FORTE[11][1][0], // 350\n    FORTE[11][1][2], // var\n    FORTE[11][1][1], //icv\n],\n};\n// cardinality 12\nconst card_12 ={ '1,0': [FORTE[12][1][0], // 351\n    FORTE[12][1][2], // var\n    FORTE[12][1][1], //icv\n],\n};\n\n//-------------------------------------------------------------------------------\nexport const SCDICT = { 1: card_1,\n    2: card_2,\n    3: card_3,\n    4: card_4,\n    5: card_5,\n    6: card_6,\n    7: card_7,\n    8: card_8,\n    9: card_9,\n    10: card_10,\n    11: card_11,\n    12: card_12,\n};\n\n//-------------------------------------------------------------------------------\n// thes dicts provide index max fr cardinality key\nexport const TNMAX = { 0: 1, 1: 1, 2: 6, 3: 19, 4: 43, 5: 66, 6: 80,\n    7: 66, 8: 43, 9: 19, 10: 6, 11: 1, 12: 1 };\nexport const TNIMAX = { 0: 1, 1: 1, 2: 6, 3: 12, 4: 29, 5: 38, 6: 50,\n    7: 38, 8: 29, 9: 12, 10: 6, 11: 1, 12: 1 };\n\n// used to find TnI index numbers under Tn classification\nexport const TNREF = {  '1,1,0': 1,\n    '2,1,0': 1,\n    '2,2,0': 2,\n    '2,3,0': 3,\n    '2,4,0': 4,\n    '2,5,0': 5,\n    '2,6,0': 6,\n    '3,1,0': 1,\n    '3,2,1': 2,\n    '3,2,-1': 3,\n    '3,3,1': 4,\n    '3,3,-1': 5,\n    '3,4,1': 6,\n    '3,4,-1': 7,\n    '3,5,1': 8,\n    '3,5,-1': 9,\n    '3,6,0': 10,\n    '3,7,1': 11,\n    '3,7,-1': 12,\n    '3,8,1': 13,\n    '3,8,-1': 14,\n    '3,9,0': 15,\n    '3,10,0': 16,\n    '3,11,1': 17,\n    '3,11,-1': 18,\n    '3,12,0': 19,\n    '4,1,0': 1,\n    '4,2,1': 2,\n    '4,2,-1': 3,\n    '4,3,0': 4,\n    '4,4,1': 5,\n    '4,4,-1': 6,\n    '4,5,1': 7,\n    '4,5,-1': 8,\n    '4,6,0': 9,\n    '4,7,0': 10,\n    '4,8,0': 11,\n    '4,9,0': 12,\n    '4,10,0': 13,\n    '4,11,1': 14,\n    '4,11,-1': 15,\n    '4,12,1': 16,\n    '4,12,-1': 17,\n    '4,13,1': 18,\n    '4,13,-1': 19,\n    '4,14,1': 20,\n    '4,14,-1': 21,\n    '4,15,1': 22,\n    '4,15,-1': 23,\n    '4,16,1': 24,\n    '4,16,-1': 25,\n    '4,17,0': 26,\n    '4,18,1': 27,\n    '4,18,-1': 28,\n    '4,19,1': 29,\n    '4,19,-1': 30,\n    '4,20,0': 31,\n    '4,21,0': 32,\n    '4,22,1': 33,\n    '4,22,-1': 34,\n    '4,23,0': 35,\n    '4,24,0': 36,\n    '4,25,0': 37,\n    '4,26,0': 38,\n    '4,27,1': 39,\n    '4,27,-1': 40,\n    '4,28,0': 41,\n    '4,29,1': 42,\n    '4,29,-1': 43,\n    '5,1,0': 1,\n    '5,2,1': 2,\n    '5,2,-1': 3,\n    '5,3,1': 4,\n    '5,3,-1': 5,\n    '5,4,1': 6,\n    '5,4,-1': 7,\n    '5,5,1': 8,\n    '5,5,-1': 9,\n    '5,6,1': 10,\n    '5,6,-1': 11,\n    '5,7,1': 12,\n    '5,7,-1': 13,\n    '5,8,0': 14,\n    '5,9,1': 15,\n    '5,9,-1': 16,\n    '5,10,1': 17,\n    '5,10,-1': 18,\n    '5,11,1': 19,\n    '5,11,-1': 20,\n    '5,12,0': 21,\n    '5,13,1': 22,\n    '5,13,-1': 23,\n    '5,14,1': 24,\n    '5,14,-1': 25,\n    '5,15,0': 26,\n    '5,16,1': 27,\n    '5,16,-1': 28,\n    '5,17,0': 29,\n    '5,18,1': 30,\n    '5,18,-1': 31,\n    '5,19,1': 32,\n    '5,19,-1': 33,\n    '5,20,1': 34,\n    '5,20,-1': 35,\n    '5,21,1': 36,\n    '5,21,-1': 37,\n    '5,22,0': 38,\n    '5,23,1': 39,\n    '5,23,-1': 40,\n    '5,24,1': 41,\n    '5,24,-1': 42,\n    '5,25,1': 43,\n    '5,25,-1': 44,\n    '5,26,1': 45,\n    '5,26,-1': 46,\n    '5,27,1': 47,\n    '5,27,-1': 48,\n    '5,28,1': 49,\n    '5,28,-1': 50,\n    '5,29,1': 51,\n    '5,29,-1': 52,\n    '5,30,1': 53,\n    '5,30,-1': 54,\n    '5,31,1': 55,\n    '5,31,-1': 56,\n    '5,32,1': 57,\n    '5,32,-1': 58,\n    '5,33,0': 59,\n    '5,34,0': 60,\n    '5,35,0': 61,\n    '5,36,1': 62,\n    '5,36,-1': 63,\n    '5,37,0': 64,\n    '5,38,1': 65,\n    '5,38,-1': 66,\n    '6,1,0': 1,\n    '6,2,1': 2,\n    '6,2,-1': 3,\n    '6,3,1': 4,\n    '6,3,-1': 5,\n    '6,4,0': 6,\n    '6,5,1': 7,\n    '6,5,-1': 8,\n    '6,6,0': 9,\n    '6,7,0': 10,\n    '6,8,0': 11,\n    '6,9,1': 12,\n    '6,9,-1': 13,\n    '6,10,1': 14,\n    '6,10,-1': 15,\n    '6,11,1': 16,\n    '6,11,-1': 17,\n    '6,12,1': 18,\n    '6,12,-1': 19,\n    '6,13,0': 20,\n    '6,14,1': 21,\n    '6,14,-1': 22,\n    '6,15,1': 23,\n    '6,15,-1': 24,\n    '6,16,1': 25,\n    '6,16,-1': 26,\n    '6,17,1': 27,\n    '6,17,-1': 28,\n    '6,18,1': 29,\n    '6,18,-1': 30,\n    '6,19,1': 31,\n    '6,19,-1': 32,\n    '6,20,0': 33,\n    '6,21,1': 34,\n    '6,21,-1': 35,\n    '6,22,1': 36,\n    '6,22,-1': 37,\n    '6,23,0': 38,\n    '6,24,1': 39,\n    '6,24,-1': 40,\n    '6,25,1': 41,\n    '6,25,-1': 42,\n    '6,26,0': 43,\n    '6,27,1': 44,\n    '6,27,-1': 45,\n    '6,28,0': 46,\n    '6,29,0': 47,\n    '6,30,1': 48,\n    '6,30,-1': 49,\n    '6,31,1': 50,\n    '6,31,-1': 51,\n    '6,32,0': 52,\n    '6,33,1': 53,\n    '6,33,-1': 54,\n    '6,34,1': 55,\n    '6,34,-1': 56,\n    '6,35,0': 57,\n    '6,36,1': 58,\n    '6,36,-1': 59,\n    '6,37,0': 60,\n    '6,38,0': 61,\n    '6,39,1': 62,\n    '6,39,-1': 63,\n    '6,40,1': 64,\n    '6,40,-1': 65,\n    '6,41,1': 66,\n    '6,41,-1': 67,\n    '6,42,0': 68,\n    '6,43,1': 69,\n    '6,43,-1': 70,\n    '6,44,1': 71,\n    '6,44,-1': 72,\n    '6,45,0': 73,\n    '6,46,1': 74,\n    '6,46,-1': 75,\n    '6,47,1': 76,\n    '6,47,-1': 77,\n    '6,48,0': 78,\n    '6,49,0': 79,\n    '6,50,0': 80,\n    '7,1,0': 1,\n    '7,2,1': 2,\n    '7,2,-1': 3,\n    '7,3,1': 4,\n    '7,3,-1': 5,\n    '7,4,1': 6,\n    '7,4,-1': 7,\n    '7,5,1': 8,\n    '7,5,-1': 9,\n    '7,6,1': 10,\n    '7,6,-1': 11,\n    '7,7,1': 12,\n    '7,7,-1': 13,\n    '7,8,0': 14,\n    '7,9,1': 15,\n    '7,9,-1': 16,\n    '7,10,1': 17,\n    '7,10,-1': 18,\n    '7,11,1': 19,\n    '7,11,-1': 20,\n    '7,12,0': 21,\n    '7,13,1': 22,\n    '7,13,-1': 23,\n    '7,14,1': 24,\n    '7,14,-1': 25,\n    '7,15,0': 26,\n    '7,16,1': 27,\n    '7,16,-1': 28,\n    '7,17,0': 29,\n    '7,18,1': 30,\n    '7,18,-1': 31,\n    '7,19,1': 32,\n    '7,19,-1': 33,\n    '7,20,1': 34,\n    '7,20,-1': 35,\n    '7,21,1': 36,\n    '7,21,-1': 37,\n    '7,22,0': 38,\n    '7,23,1': 39,\n    '7,23,-1': 40,\n    '7,24,1': 41,\n    '7,24,-1': 42,\n    '7,25,1': 43,\n    '7,25,-1': 44,\n    '7,26,1': 45,\n    '7,26,-1': 46,\n    '7,27,1': 47,\n    '7,27,-1': 48,\n    '7,28,1': 49,\n    '7,28,-1': 50,\n    '7,29,1': 51,\n    '7,29,-1': 52,\n    '7,30,1': 53,\n    '7,30,-1': 54,\n    '7,31,1': 55,\n    '7,31,-1': 56,\n    '7,32,1': 57,\n    '7,32,-1': 58,\n    '7,33,0': 59,\n    '7,34,0': 60,\n    '7,35,0': 61,\n    '7,36,1': 62,\n    '7,36,-1': 63,\n    '7,37,0': 64,\n    '7,38,1': 65,\n    '7,38,-1': 66,\n    '8,1,0': 1,\n    '8,2,1': 2,\n    '8,2,-1': 3,\n    '8,3,0': 4,\n    '8,4,1': 5,\n    '8,4,-1': 6,\n    '8,5,1': 7,\n    '8,5,-1': 8,\n    '8,6,0': 9,\n    '8,7,0': 10,\n    '8,8,0': 11,\n    '8,9,0': 12,\n    '8,10,0': 13,\n    '8,11,1': 14,\n    '8,11,-1': 15,\n    '8,12,1': 16,\n    '8,12,-1': 17,\n    '8,13,1': 18,\n    '8,13,-1': 19,\n    '8,14,1': 20,\n    '8,14,-1': 21,\n    '8,15,1': 22,\n    '8,15,-1': 23,\n    '8,16,1': 24,\n    '8,16,-1': 25,\n    '8,17,0': 26,\n    '8,18,1': 27,\n    '8,18,-1': 28,\n    '8,19,1': 29,\n    '8,19,-1': 30,\n    '8,20,0': 31,\n    '8,21,0': 32,\n    '8,22,1': 33,\n    '8,22,-1': 34,\n    '8,23,0': 35,\n    '8,24,0': 36,\n    '8,25,0': 37,\n    '8,26,0': 38,\n    '8,27,1': 39,\n    '8,27,-1': 40,\n    '8,28,0': 41,\n    '8,29,1': 42,\n    '8,29,-1': 43,\n    '9,1,0': 1,\n    '9,2,1': 2,\n    '9,2,-1': 3,\n    '9,3,1': 4,\n    '9,3,-1': 5,\n    '9,4,1': 6,\n    '9,4,-1': 7,\n    '9,5,1': 8,\n    '9,5,-1': 9,\n    '9,6,0': 10,\n    '9,7,1': 11,\n    '9,7,-1': 12,\n    '9,8,1': 13,\n    '9,8,-1': 14,\n    '9,9,0': 15,\n    '9,10,0': 16,\n    '9,11,1': 17,\n    '9,11,-1': 18,\n    '9,12,0': 19,\n    '10,1,0': 1,\n    '10,2,0': 2,\n    '10,3,0': 3,\n    '10,4,0': 4,\n    '10,5,0': 5,\n    '10,6,0': 6,\n    '11,1,0': 1,\n    '12,1,0': 1,\n};\n\n\n// -----------------------------------------------------------------||||||||||||--\n// reference dict stores name and citation references\n\n// names found from many sources, including:\n// http://solo1.home.mindspring.com/pcsets.htm\n// Larry Solomon, 1997, 2000\n// Larry Solomon's 'The List of Chords, Their Properties and Use in Analysis,'\n// in Interface, Journal of New Music Research , 1982, v11/2.\n// http://www.sweb.cz/vladimir_ladma/english/music/structs/mus_rot.htm\n// Vladimir Ladma, Czech Republic\n\n// some changes: unison prefered to monad\n\n\nexport const SCREF = {\n    '1,1,0': { 'name': ['unison', 'monad', 'singleton'] },\n    '2,1,0': { 'name': ['interval class 1', 'minor second', 'm2', \n        'half step', 'semitone'] },\n    '2,2,0': { 'name': ['interval class 2', 'major second', 'M2', \n        'whole step', 'whole tone'] },\n    '2,3,0': { 'name': ['interval class 3', 'minor third', 'm3'] },\n    '2,4,0': { 'name': ['interval class 4', 'major third', 'M3'] },\n    '2,5,0': { 'name': ['interval class 5', 'perfect fourth', 'P4'] },\n    '2,6,0': { 'name': ['tritone', 'diminished fifth', 'augmented fourth'] },\n    '3,1,0': { 'name': ['chromatic trimirror'] },\n    '3,2,1': { 'name': ['phrygian trichord'] },\n    '3,2,-1': { 'name': ['minor trichord'] },\n    '3,3,1': { 'name': ['major-minor trichord'] },\n    '3,3,-1': { 'name': ['major-minor trichord'] },\n    '3,4,1': { 'name': ['incomplete major-seventh chord'] },\n    '3,4,-1': { 'name': ['incomplete major-seventh chord'] },\n    '3,5,1': { 'name': ['tritone-fourth'] },\n    '3,5,-1': { 'name': ['tritone-fourth'] },\n    '3,6,0': { 'name': ['whole-tone trichord'] },\n    '3,7,1': { 'name': ['incomplete minor-seventh chord'] },\n    '3,7,-1': { 'name': ['incomplete dominant-seventh chord'] },\n    '3,8,1': { 'name': ['incomplete dominant-seventh chord', 'Italian augmented sixth chord'] },\n    '3,8,-1': { 'name': ['incomplete half-diminished seventh chord'] },\n    '3,9,0': { 'name': ['quartal trichord'] },\n    '3,10,0': { 'name': ['diminished triad'] },\n    '3,11,1': { 'name': ['minor triad'] },\n    '3,11,-1': { 'name': ['major triad'] },\n    '3,12,0': { 'name': ['augmented triad', 'equal 3-part octave division'] },\n    '4,1,0': { 'name': ['chromatic tetramirror', 'BACH'] },\n    '4,2,1': { 'name': ['major-second tetracluster'] },\n    '4,2,-1': { 'name': ['major-second tetracluster'] },\n    '4,3,0': { 'name': ['alternating tetramirror'] },\n    '4,4,1': { 'name': ['minor third tetracluster'] },\n    '4,4,-1': { 'name': ['minor third tetracluster'] },\n    '4,5,1': { 'name': ['major third tetracluster'] },\n    '4,5,-1': { 'name': ['major third testacluster'] },\n    '4,6,0': { 'name': ['perfect fourth tetramirror'] },\n    '4,7,0': { 'name': ['Arabian tetramirror'] },\n    '4,8,0': { 'name': ['double-fourth tetramirror'] },\n    '4,9,0': { 'name': ['double tritone tetramirror'] },\n    '4,10,0': { 'name': ['minor tetramirror'] },\n    '4,11,1': { 'name': ['phrygian tetrachord'] },\n    '4,11,-1': { 'name': ['lydian tetrachord', 'major tetrachord'] },\n    '4,12,1': { 'name': ['harmonic minor tetrachord'] },\n    '4,12,-1': { 'name': ['major-third diminished terachord'] },\n    '4,13,1': { 'name': ['minor-second diminished tetrachord'] },\n    '4,13,-1': { 'name': ['perfect-fourth diminished tetrachord'] },\n    '4,14,1': { 'name': ['major-second minor tetrachord'] },\n    '4,14,-1': { 'name': ['perfect-fourth major tetrachord'] },\n    '4,15,1': { 'name': ['all-interval tetrachord'] },\n    '4,15,-1': { 'name': ['all-interval tetrachord'] },\n    '4,16,1': { 'name': ['minor-second quartal tetrachord'] },\n    '4,16,-1': { 'name': ['tritone quartal tetrachord'] },\n    '4,17,0': { 'name': ['major-minor tetramirror'] },\n    '4,18,1': { 'name': ['major-diminished tetrachord'] },\n    '4,18,-1': { 'name': ['minor-diminished tetrachord'] },\n    '4,19,1': { 'name': ['minor-augmented tetrachord'] },\n    '4,19,-1': { 'name': ['augmented major tetrachord'] },\n    '4,20,0': { 'name': ['major seventh chord'] },\n    '4,21,0': { 'name': ['whole-tone tetramirror'] },\n    '4,22,1': { 'name': ['major-second major tetrachord'] },\n    '4,22,-1': { 'name': ['perfect-fourth minor tetrachord'] },\n    '4,23,0': { 'name': ['quartal tetramirror'] },\n    '4,24,0': { 'name': ['augmented seventh chord'] },\n    '4,25,0': { 'name': [\"Messiaen's truncated mode 6\", 'French augmented sixth chord'] },\n    '4,26,0': { 'name': ['minor seventh chord'] },\n    '4,27,1': { 'name': ['half-diminished seventh chord'] },\n    '4,27,-1': { 'name': ['dominant seventh chord',\n        'major minor seventh chord', 'German augmented sixth chord', 'Swiss augmented sixth chord'] },\n    '4,28,0': { 'name': ['diminished seventh chord', 'equal 4-part octave division'] },\n    '4,29,1': { 'name': ['all-interval tetrachord'] },\n    '4,29,-1': { 'name': ['all-interval tetrachord'] },\n    '5,1,0': { 'name': ['chromatic pentamirror'] },\n    '5,2,1': { 'name': ['major-second pentacluster'] },\n    '5,2,-1': { 'name': ['major-second pentacluster'] },\n    '5,3,1': { 'name': ['minor-second major pentachord'] },\n    '5,3,-1': { 'name': ['Spanish pentacluster'] },\n    '5,4,1': { 'name': ['blues pentacluster'] },\n    '5,4,-1': { 'name': ['minor-third pentacluster'] },\n    '5,5,1': { 'name': ['major-third pentacluster'] },\n    '5,5,-1': { 'name': ['major-third pentacluster'] },\n    '5,6,1': { 'name': ['Asian pentacluster', 'quasi raga Megharanji'] },\n    '5,6,-1': { 'name': ['Asian pentacluster'] },\n    '5,7,1': { 'name': ['double pentacluster', 'quasi raga Nabhomani '] },\n    '5,7,-1': { 'name': ['double pentacluster'] },\n    '5,8,0': { 'name': ['tritone-symmetric pentamirror'] },\n    '5,9,1': { 'name': ['tritone-expanding pentachord'] },\n    '5,9,-1': { 'name': ['tritone-contracting pentachord'] },\n    '5,10,1': { 'name': ['alternating pentachord'] },\n    '5,10,-1': { 'name': ['alternating pentachord'] },\n    '5,11,1': { 'name': ['center-cluster pentachord'] },\n    '5,11,-1': { 'name': ['center-cluster pentachord'] },\n    '5,12,0': { 'name': ['locrian pentachord'] },\n    '5,13,1': { 'name': ['augmented pentacluster'] },\n    '5,13,-1': { 'name': ['augmented pentacluster'] },\n    '5,14,1': { 'name': ['double-seconds triple-fourth pentachord'] },\n    '5,14,-1': { 'name': ['double-seconds triple-fourth pentachord'] },\n    '5,15,0': { 'name': ['asssymetric pentamirror'] },\n    '5,16,1': { 'name': ['major-minor-diminished pentachord'] },\n    '5,16,-1': { 'name': ['major-minor diminished pentachord'] },\n    '5,17,0': { 'name': ['minor-major ninth chord'] },\n    '5,18,1': { 'name': ['Roma [Gypsy] pentachord'] },\n    '5,18,-1': { 'name': ['Roma [Gypsy] pentachord'] },\n    '5,19,1': { 'name': ['Javanese pentachord'] },\n    '5,19,-1': { 'name': ['Balinese pentachord'] },\n    '5,20,1': { 'name': ['Balinese Pelog pentatonic', \n        'quasi raga Bhupala', 'quasi raga Bibhas'] },\n    '5,20,-1': { 'name': ['Hirajoshi pentatonic', 'Iwato', 'Sakura', 'quasi raga Saveri'] },\n    '5,21,1': { 'name': ['major-augmented ninth chord', 'Syrian pentatonic',\n        'quasi raga Megharanji'] },\n    '5,21,-1': { 'name': ['Lebanese pentachord', 'augmented-minor chord'] },\n    '5,22,0': { 'name': ['Persian pentamirror', 'quasi raga Ramkali'] },\n    '5,23,1': { 'name': ['dorian pentachord', 'minor pentachord'] },\n    '5,23,-1': { 'name': ['major pentachord'] },\n    '5,24,1': { 'name': ['phrygian pentachord'] },\n    '5,24,-1': { 'name': ['lydian pentachord'] },\n    '5,25,1': { 'name': ['diminished-major ninth chord'] },\n    '5,25,-1': { 'name': ['minor-diminished ninth chord'] },\n    '5,26,1': { 'name': ['diminished-augmented ninth chord'] },\n    '5,26,-1': { 'name': ['augmented-diminished ninth chord'] },\n    '5,27,1': { 'name': ['major-ninth chord'] },\n    '5,27,-1': { 'name': ['minor-ninth chord'] },\n    '5,28,1': { 'name': ['augmented-sixth pentachord'] },\n    '5,28,-1': { 'name': ['Javanese pentatonic', 'augmented-sixth pentachord'] },\n    '5,29,1': { 'name': ['Kumoi pentachord'] },\n    '5,29,-1': { 'name': ['Kumoi pentachord'] },\n    '5,30,1': { 'name': ['enigmatic pentachord'] },\n    '5,30,-1': { 'name': ['enigmatic pentachord', 'altered pentatonic'] },\n    '5,31,1': { 'name': ['diminished minor-ninth chord'] },\n    '5,31,-1': { 'name': ['flat-ninth pentachord', 'quasi raga Ranjaniraga'] },\n    '5,32,1': { 'name': ['Neapolitan pentachord'] },\n    '5,32,-1': { 'name': ['Neapolitan pentachord'] },\n    '5,33,0': { 'name': ['whole-tone pentachord'] },\n    '5,34,0': { 'name': ['dominant-ninth', 'major-minor', 'Prometheus pentamirror',\n        'dominant pentatonic'] },\n    '5,35,0': { 'name': ['major pentatonic', 'black-key scale', 'blues pentatonic',\n        'slendro', 'quartal pentamirror'] },\n    '5,36,1': { 'name': ['major-seventh pentacluster'] },\n    '5,36,-1': { 'name': ['minor-seventh pentacluster'] },\n    '5,37,0': { 'name': ['center-cluster pentamirror'] },\n    '5,38,1': { 'name': ['diminished pentacluster'] },\n    '5,38,-1': { 'name': ['diminished pentacluster'] },\n    '6,1,0': { 'name': ['A all combinatorial [P6, I11, RI5, RI11]', 'chromatic hexamirror',\n        'first-order all-combinatorial'] },\n    '6,2,1': { 'name': ['combinatorial I [I11]'] },\n    '6,2,-1': { 'name': ['combinatorial I [I1]'] },\n    '6,3,1': {},\n    '6,3,-1': {},\n    '6,4,0': { 'name': ['combinatorial RI [RI6]'] },\n    '6,5,1': { 'name': ['combinatorial I [I11]'] },\n    '6,5,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,6,0': { 'name': ['double cluster hexamirror'] },\n    '6,7,0': { 'name': ['B all combinatorial [P3, P9, I5, R6, R12, R8]', \n        \"Messiaen's mode 5\",\n        'second-order all combinatorial'] },\n    '6,8,0': { 'name': ['D all combinatorial [P6, I1, RI7]'] },\n    '6,9,1': { 'name': ['combinatorial I [I11]'] },\n    '6,9,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,10,1': {},\n    '6,10,-1': {},\n    '6,11,1': {},\n    '6,11,-1': {},\n    '6,12,1': {},\n    '6,12,-1': {},\n    '6,13,0': { 'name': ['alternating hexamirror', 'combinatorial I [I7]'] },\n    '6,14,1': { 'name': ['combinatorial P [P6]'] },\n    '6,14,-1': { 'name': ['combinatorial P [P6]'] },\n    '6,15,1': { 'name': ['combinatorial I [I11]'] },\n    '6,15,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,16,1': { 'name': ['combinatorial I [I3]'] },\n    '6,16,-1': { 'name': ['combinatorial I [I1]', 'quasi raga Megha'] },\n    '6,17,1': { 'name': ['all tri-chord hexachord'] },\n    '6,17,-1': { 'name': ['all tri-chord hexachord [inverted form]'] },\n    '6,18,1': { 'name': ['combinatorial I [I11]'] },\n    '6,18,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,19,1': {},\n    '6,19,-1': {},\n    '6,20,0': { 'name': \n    ['E all combinatorial [P2, P6, P10, I3, I7, R4, R8, RI1, RI5, RI9]',\n        \"Messiaen's truncated mode 3\", 'Genus tertium',\n        'third-order all combinatorial'] },\n    '6,21,1': { 'name': ['combinatorial I [I1]'] },\n    '6,21,-1': { 'name': ['combinatorial I [I3]'] },\n    '6,22,1': { 'name': ['combinatorial I [I11]'] },\n    '6,22,-1': { 'name': ['combinatorial I [I5]'] },\n    '6,23,0': { 'name': ['combinatorial RI [RI8]', 'super-locrian hexa mirror'] },\n    '6,24,1': {},\n    '6,24,-1': { 'name': ['melodic-minor hexachord'] },\n    '6,25,1': { 'name': ['locrian hexachord'] },\n    '6,25,-1': { 'name': ['minor hexachord'] },\n    '6,26,0': { 'name': ['phrygian hexamirror', 'combinatorial RI [RI8]'] },\n    '6,27,1': { 'name': ['combinatorial I [I11]'] },\n    '6,27,-1': { 'name': ['combinatorial I [I1]', 'pyramid hexachord'] },\n    '6,28,0': { 'name': ['double-phrygian heachord', 'combinatorial RI [RI6]'] },\n    '6,29,0': { 'name': ['combinatorial RI [RI9]'] },\n    '6,30,1': { 'name': [\"Messiaen's truncated mode 2\", 'minor-bitonal hexachord',\n        'combinatorial R [R6]', 'combinatorial I [I1, I7]'] },\n    '6,30,-1': { 'name': [\"Stravinsky's Petrouchka-chord\", \"Messiaen's truncated mode 2\",\n        'major-bitonal hexachord', 'combinatorial R [R6]',\n        'combinatorial I [I1, I7]'] },\n    '6,31,1': { 'name': ['combinatorial I [I7]'] },\n    '6,31,-1': { 'name': ['combinatorial I [I11]'] },\n    '6,32,0': { 'name': ['C all combinatorial [P6, I3, RI9]', 'Guidon/Arezzo',\n        'Arezzo major diatonic', 'major hexamirror', 'quartal hexamirror',\n        'first-order all combinatorial'] },\n    '6,33,1': { 'name': ['dorian hexachord', 'combinatorial I [I6]'] },\n    '6,33,-1': { 'name': ['dominant-eleventh', 'lydian hexachord', 'combinatorial I [I1]'] },\n    '6,34,1': { 'name': [\"Scriabin's Mystic-chord\", 'Prometheus hexachord',\n        'combinatorial I [I11]'] },\n    '6,34,-1': { 'name': ['augmented-eleventh', 'harmonic hexachord', \n        'combinatorial I [I7]'] },\n    '6,35,0': { 'name': ['whole tone scale', '6 equal part division',\n        'F all-combinatorial [P1, P3, P5, P7, P9, P11, I1, I3, I5, I7, '\n                              + 'I9, I11, R2, R4, R6, R8, R10, RI2, RI4, RI6, RI8, RI10]',\n        \"Messiaen's mode 1\", 'sixth-order all combinatorial'] },\n    '6,36,1': {},\n    '6,36,-1': {},\n    '6,37,0': { 'name': ['combinatorial RI [RI4]'] },\n    '6,38,0': { 'name': ['combinatorial RI [RI3]'] },\n    '6,39,1': {},\n    '6,39,-1': {},\n    '6,40,1': {},\n    '6,40,-1': {},\n    '6,41,1': {},\n    '6,41,-1': {},\n    '6,42,0': { 'name': ['combinatorial RI [RI3]'] },\n    '6,43,1': { 'name': ['complement of all tri-chord hexachord'] },\n    '6,43,-1': { 'name': ['complement of all-tri-chord hexachord [inverted form]'] },\n    '6,44,1': { 'name': ['Schoenberg Anagram hexachord'] },\n    '6,44,-1': { 'name': ['quasi raga Bauli'] },\n    '6,45,0': { 'name': ['combinatorial RI [RI6]'] },\n    '6,46,1': {},\n    '6,46,-1': {},\n    '6,47,1': {},\n    '6,47,-1': { 'name': ['blues scale'] },\n    '6,48,0': { 'name': ['combinatorial RI [RI2]'] },\n    '6,49,0': { 'name': ['combinatorial RI [RI4]', 'Prometheus Neapolitan mode'] },\n    '6,50,0': { 'name': ['combinatorial RI [RI1]'] },\n    '7,1,0': { 'name': ['chromatic heptamirror'] },\n    '7,2,1': {},\n    '7,2,-1': {},\n    '7,3,1': {},\n    '7,3,-1': {},\n    '7,4,1': {},\n    '7,4,-1': {},\n    '7,5,1': {},\n    '7,5,-1': {},\n    '7,6,1': {},\n    '7,6,-1': {},\n    '7,7,1': {},\n    '7,7,-1': {},\n    '7,8,0': {},\n    '7,9,1': {},\n    '7,9,-1': {},\n    '7,10,1': {},\n    '7,10,-1': {},\n    '7,11,1': {},\n    '7,11,-1': {},\n    '7,12,0': {},\n    '7,13,1': {},\n    '7,13,-1': {},\n    '7,14,1': {},\n    '7,14,-1': {},\n    '7,15,0': {},\n    '7,16,1': { 'name': [\"Debussy's heptatonic\"] },\n    '7,16,-1': {},\n    '7,17,0': {},\n    '7,18,1': {},\n    '7,18,-1': {},\n    '7,19,1': {},\n    '7,19,-1': {},\n    '7,20,1': { 'name': ['chromatic phrygian inverse'] },\n    '7,20,-1': { 'name': ['Greek chromatic', 'chromatic mixolydian', 'chromatic dorian',\n        'quasi raga Pantuvarali', 'mela Kanakangi'] },\n    '7,21,1': {},\n    '7,21,-1': { 'name': ['Gypsy [Roma] hexatonic'] },\n    '7,22,0': { 'name': ['double harmonic scale', 'Persian', 'major Gypsy [Roma]',\n        'Hungarian minor', 'double harmonic scale', 'Asian',\n        'quasi raga Mayamdavagaula'] },\n    '7,23,1': {},\n    '7,23,-1': { 'name': ['tritone major heptachord'] },\n    '7,24,1': {},\n    '7,24,-1': { 'name': ['mystic heptaachord', 'Enigmatic heptatonic'] },\n    '7,25,1': {},\n    '7,25,-1': {},\n    '7,26,1': {},\n    '7,26,-1': {},\n    '7,27,1': {},\n    '7,27,-1': { 'name': ['modified blues'] },\n    '7,28,1': {},\n    '7,28,-1': {},\n    '7,29,1': {},\n    '7,29,-1': {},\n    '7,30,1': { 'name': ['Neapolitan-minor mode'] },\n    '7,30,-1': {},\n    '7,31,1': { 'name': ['alternating heptachord', 'Hungarian major mode'] },\n    '7,31,-1': { 'name': ['diminished scale', 'alternating heptachord'] },\n    '7,32,1': { 'name': ['harmonic minor scale', 'Spanish Gypsy', 'mela Kiravani'] },\n    '7,32,-1': { 'name': ['harmonic major scale', 'harmonic minor inverse', 'mela Cakravana',\n        'quasi raga Ahir Bhairav'] },\n    '7,33,0': { 'name': ['Neapolitan-major mode', 'leading-whole-tone mode'] },\n    '7,34,0': { 'name': ['melodic minor ascending scale', 'jazz minor',\n        'augmented thirteenth heptamirror', 'harmonic/super-locrian'] },\n    '7,35,0': { 'name': ['major scale', 'major diatonic heptachord', 'natural minor scale',\n        'dominant thirteenth', 'locrian', 'phrygian', 'major inverse'] },\n    '7,36,1': {},\n    '7,36,-1': {},\n    '7,37,0': {},\n    '7,38,1': {},\n    '7,38,-1': {},\n    '8,1,0': { 'name': ['chromatic octamirror'] },\n    '8,2,1': {},\n    '8,2,-1': {},\n    '8,3,0': {},\n    '8,4,1': {},\n    '8,4,-1': {},\n    '8,5,1': {},\n    '8,5,-1': {},\n    '8,6,0': {},\n    '8,7,0': {},\n    '8,8,0': {},\n    '8,9,0': { 'name': [\"Messiaen's mode 4\"] },\n    '8,10,0': {},\n    '8,11,1': {},\n    '8,11,-1': { 'name': ['blues octatonic'] },\n    '8,12,1': {},\n    '8,12,-1': {},\n    '8,13,1': { 'name': ['blues octatonic'] },\n    '8,13,-1': {},\n    '8,14,1': {},\n    '8,14,-1': {},\n    '8,15,1': {},\n    '8,15,-1': {},\n    '8,16,1': {},\n    '8,16,-1': { 'name': ['enigmatic octachord'] },\n    '8,17,0': {},\n    '8,18,1': {},\n    '8,18,-1': {},\n    '8,19,1': {},\n    '8,19,-1': {},\n    '8,20,0': {},\n    '8,21,0': {},\n    '8,22,1': {},\n    '8,22,-1': { 'name': ['Spanish octatonic scale'] },\n    '8,23,0': { 'name': ['Greek', 'blues', 'quartal octachord', 'diatonic octad'] },\n    '8,24,0': {},\n    '8,25,0': { 'name': [\"Messiaen's mode 6\"] },\n    '8,26,0': { 'name': ['blues', 'Spanish phrygian'] },\n    '8,27,1': {},\n    '8,27,-1': {},\n    '8,28,0': { 'name': ['octatonic scale', \"Messiaen's mode 2\", \n        'alternating octatonic scale',\n        'diminished scale'] },\n    '8,29,1': {},\n    '8,29,-1': {},\n    '9,1,0': { 'name': ['chromatic nonamirror'] },\n    '9,2,1': {},\n    '9,2,-1': {},\n    '9,3,1': {},\n    '9,3,-1': {},\n    '9,4,1': {},\n    '9,4,-1': {},\n    '9,5,1': {},\n    '9,5,-1': {},\n    '9,6,0': {},\n    '9,7,1': { 'name': ['nonatonic blues'] },\n    '9,7,-1': {},\n    '9,8,1': {},\n    '9,8,-1': {},\n    '9,9,0': {},\n    '9,10,0': {},\n    '9,11,1': {},\n    '9,11,-1': { 'name': ['diminishing nonachord'] },\n    '9,12,0': { 'name': [\"Messiaen's mode 3\", 'Tsjerepnin'] },\n    '10,1,0': { 'name': ['chromatic decamirror'] },\n    '10,2,0': {},\n    '10,3,0': {},\n    '10,4,0': {},\n    '10,5,0': { 'name': ['major-minor mixed'] },\n    '10,6,0': { 'name': [\"Messiaen's mode 7\"] },\n    '11,1,0': { 'name': ['chromatic undecamirror'] },\n    '12,1,0': { 'name': ['aggregate', 'dodecachord', 'twelve-tone chromatic',\n        'chromatic scale', 'dodecamirror'] },\n};\n\nexport function forteIndexToInversionsAvailable(card, index) {\n    if (card < 1 || card > 12) {\n        throw new Error(`cardinality ${card} is not valid`);\n    }\n    if (index < 1 || index > TNMAX[card]) {\n        throw new Error(`index ${index} is invalid`);\n    }\n    // get morris invaraince vector\n    const morris = FORTE[card][index][2];\n    if (morris[1] > 0) { // second value stored inversion status\n        return [0];\n    } else {\n        return [-1, 1];\n    }\n}\n\nfunction _chordTableAddress(cardinality, forteClass, inversion, pcOriginal) {\n    return {\n        cardinality,\n        forteClass,\n        inversion,\n        pcOriginal,\n    };\n}\n\nfunction _validateAddress(address) {\n    if (address !== undefined && address.cardinality !== undefined) {\n        // got an object...\n        address = [address.cardinality, address.forteClass, address.inversion, address.pcOriginal];\n    }\n    \n    const [card, index] = address.slice(0, 2);\n    let inversion;\n    if (address.length >= 3 && address[2] !== undefined) {\n        inversion = address[2];\n    }\n    if (card < 1 || card > 13) {\n        throw new Error(`cardinality ${card} not valid`);\n    }\n    // using TN mode for all comparions\n    if (index < 1 || index > TNMAX[card]) {\n        throw new Error(`index ${index} not valid`);\n    }\n    const inversionsAvailable = forteIndexToInversionsAvailable(card, index);\n    if (inversion !== undefined) {\n        if (!inversionsAvailable.includes(inversion)) {\n            throw new Error(`inversion ${inversion} not valid`);\n        }\n    }\n    if (inversion === undefined) { // get a default inversion\n        if (inversionsAvailable.includes(0)) {\n            inversion = 0;\n        } else {\n            inversion = 1;\n        }\n    }\n    return [card, index, inversion];\n}\n\nexport function addressToTransposedNormalForm(address) {\n    const [card, index, inversion] = _validateAddress(address);\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][0];\n}\n\nexport function addressToPrimeForm(address) {\n    const [card, index, inversion] = _validateAddress(address.slice(0, 2));\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][0];\n}\n\nexport function addressToIntervalVector(address) {\n    const [card, index, inversion] = _validateAddress(address);\n    const i2 = String([index, inversion]);\n    return SCDICT[card][i2][2];\n}\n\nexport function intervalVectorToAddress(vector) {\n    const post = [];\n    for (let card = 1; card < 13; card++) {\n        let num = 0;\n        for (const sc of FORTE[card]) {\n            if (sc === undefined) {\n                num += 1;\n                continue; // first, used for spacing\n            }\n            // index 1 is vector\n            if (common.arrayEquals(sc[1], vector)) {\n                post.push(_chordTableAddress(card, num));\n            }\n            num += 1;\n        }\n    }\n    return post;\n}\n    \nexport function addressToZAddress(address) {\n    // noinspection JSUnusedLocalSymbols\n    const [card, index, unused_inversion] = _validateAddress(address);\n    const z = FORTE[card][index][3];\n    if (z === 0) {\n        return undefined;\n    } else {\n        let zReal = z;\n        if (Array.isArray(z)) {\n            zReal = z[0];\n        }\n        const zAddress = _validateAddress([card, zReal, undefined]);\n        return _chordTableAddress(zAddress[0], zAddress[1], zAddress[2]);\n    }\n}\n\nexport function addressToCommonNames(address) {\n    const addressNew = _validateAddress(address);\n    const refDict = SCREF[String(addressNew)];\n    return refDict.name;\n}\n\nexport function addressToForteName(address, classification='tn') {\n    const [card, index, inversion] = _validateAddress(address);\n    let iStr;\n    if (classification.toLowerCase() === 'tn') {\n        if (inversion === -1) {\n            iStr = 'B';\n        } else if (inversion === 1) {\n            iStr = 'A';\n        } else if (inversion === 0) {\n            iStr = '';\n        }\n    } else { // tni, ignore inversion\n        iStr = '';\n    }\n    return `${card}-${index}${iStr}`;\n}\n\nexport function seekChordTablesAddress(c) {\n    const pcSet = c.orderedPitchClasses;\n    if (!(pcSet.length)) {\n        throw new Error(\n            'cannot access chord tables address for Chord with no pitches'\n        );\n    } \n    const card = pcSet.length;\n    if (card === 1) { // its a singleton: return\n        return _chordTableAddress(1, 1, 0, pcSet[0]);\n    } else if (card === 12) { // its the aggregate\n        return _chordTableAddress(12, 1, 0, 0);\n    }\n    // go through each rotation of pcSet\n    const candidates = [];\n    for (let rot = 0; rot < card; rot++) {\n        const testSetOrig = pcSet.slice(rot);\n        for (let rotRemainder = 0; rotRemainder < rot; rotRemainder++) {\n            testSetOrig.push(pcSet[rotRemainder]);   \n        }\n        // transpose to lead with zero\n        const testSetOriginalPC = testSetOrig[0];\n        const testSet = [];\n        for (const x of testSetOrig) {\n            const zeroTransposed = posMod(x - testSetOriginalPC, 12);\n            testSet.push(zeroTransposed);\n        }\n        // create inversion; first take difference from 12 mod 12\n        const testSetInvert = [];\n        for (const x of testSet) {\n            testSetInvert.push(posMod(12 - x, 12));\n        }\n        testSetInvert.reverse(); // reverse order (first steps now last)\n        // transpose all steps (were last) to zero, mod 12\n        const testSetInvertOriginalPC = testSetInvert[0];        \n        for (let i = 0; i < testSetInvert.length; i++) {\n            testSetInvert[i] = posMod(testSetInvert[i] + (12 - testSetInvertOriginalPC), 12);\n        }\n        const candidateTuple = [testSet, testSetInvert, testSetOriginalPC];\n        candidates.push(candidateTuple);\n    }    \n    // compare sets to those in table\n    let match = false;\n    let matchedPCOriginal;\n    let index;\n    let inversion;\n\n    for (let indexCandidate = 0; indexCandidate < FORTE[card].length; indexCandidate++) {\n        const dataLine = FORTE[card][indexCandidate];\n        if (dataLine === undefined) {\n            continue; // spacer lines\n        }\n        const dataLinePcs = dataLine[0];\n        const inversionsAvailable = forteIndexToInversionsAvailable(card, indexCandidate);\n        for (const [candidate, candidateInversion, candidateOriginalPC] of candidates) {\n            if (common.arrayEquals(dataLinePcs, candidate)) {\n                index = indexCandidate;\n                if (inversionsAvailable.includes(0)) {\n                    inversion = 0;\n                } else {\n                    inversion = 1;\n                }\n                matchedPCOriginal = candidateOriginalPC;\n                match = true;\n                break;\n            } else if (common.arrayEquals(dataLinePcs, candidateInversion)) {\n                index = indexCandidate;\n                if (inversionsAvailable.includes(0)) {\n                    inversion = 0;\n                } else {\n                    inversion = -1;\n                }\n                matchedPCOriginal = candidateOriginalPC;\n                match = true;\n                break;\n            }\n        }\n    }\n    if (!match) {\n        throw new Error(`cannot find a chord table address for ${pcSet}`);\n    }\n    return _chordTableAddress(card, index, inversion, matchedPCOriginal);\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/chord -- Chord\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\n\nimport { Music21Exception } from './exceptions21.js';\nimport { interval } from './interval.js';\nimport { note } from './note.js';\nimport * as chordTables from './chordTables.js';\n\n/**\n * chord Module. See {@link music21.chord} namespace for more details.\n *\n * @exports music21/chord\n */\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @namespace music21.chord\n * @memberof music21\n * @requires music21/note\n */\nexport const chord = {};\n\n/**\n * Chord related objects (esp. {@link music21.chord.Chord}) and methods.\n *\n * @class Chord\n * @memberof music21.chord\n * @param {Array<string|music21.note.Note|music21.pitch.Pitch>} [notes] - an Array of strings\n * (see {@link music21.pitch.Pitch} for valid formats), note.Note, or pitch.Pitch objects.\n * @extends music21.note.NotRest\n * @property {number} length - the number of pitches in the Chord (readonly)\n * @property {music21.pitch.Pitch[]} pitches - an Array of Pitch objects in the chord. (Consider the Array read only and pass in a new Array to change)\n * @property {Boolean} [isChord=true]\n * @property {Boolean} [isNote=false]\n * @property {Boolean} [isRest=false]\n */\nexport class Chord extends note.NotRest {\n    constructor(notes) {\n        super();\n        if (typeof notes === 'undefined') {\n            notes = [];\n        } else if (typeof notes === 'string') {\n            notes = notes.split(/\\s+/);\n        }\n        this.isChord = true; // for speed\n        this.isNote = false; // for speed\n        this.isRest = false; // for speed\n\n        this._overrides = {};\n        this._cache = {};\n\n        this._notes = [];\n        /**\n         *\n         * @type {Object|undefined}\n         * @private\n         */\n        this._chordTablesAddress = undefined;\n        this._chordTablesAddressNeedsUpdating = true; // only update when needed\n\n        notes.forEach(x => this.add(x, false), this);\n        if (notes.length > 0\n            && notes[0].duration !== undefined\n            && notes[0].duration.quarterLength !== this.duration.quarterLength\n        ) {\n            this.duration = notes[0].duration;\n        }\n        this.sortPitches();\n    }\n    \n    stringInfo() {\n        const info = this.pitches.map(x => x.nameWithOctave);\n        return info.join(' ');\n    }\n    \n\n    get length() {\n        return this._notes.length;\n    }\n    get pitches() {\n        const tempPitches = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            tempPitches.push(this._notes[i].pitch);\n        }\n        return tempPitches;\n    }\n    set pitches(tempPitches) {\n        this._notes = [];\n        for (let i = 0; i < tempPitches.length; i++) {\n            let addNote;\n            if (typeof tempPitches[i] === 'string') {\n                addNote = new note.Note(tempPitches[i]);\n            } else if (tempPitches[i].isClassOrSubclass('Pitch')) {\n                addNote = new note.Note();\n                addNote.pitch = tempPitches[i];\n            } else if (tempPitches[i].isClassOrSubclass('Note')) {\n                addNote = tempPitches[i];\n            } else {\n                console.warn('bad pitch', tempPitches[i]);\n                throw new Music21Exception(\n                    'Cannot add pitch from ' + tempPitches[i]\n                );\n            }\n            this._notes.push(addNote);\n        }\n        this._cache = {};\n        this._overrides = {};\n    }\n    get orderedPitchClasses() {\n        const pcGroup = [];\n        for (const p of this.pitches) {\n            if (pcGroup.includes(p.pitchClass)) {\n                continue;\n            }\n            pcGroup.push(p.pitchClass);\n        }\n        pcGroup.sort((a, b) => a - b);\n        return pcGroup;\n    }\n\n    get chordTablesAddress() {\n        if (this._chordTablesAddressNeedsUpdating) {\n            this._chordTablesAddress = chordTables.seekChordTablesAddress(this);\n        }\n        this._chordTablesAddressNeedsUpdating = false;\n        return this._chordTablesAddress;\n    }\n\n    get commonName() {\n        // TODO: many more exemptions from music21p\n        const cta = this.chordTablesAddress;\n        const ctn = chordTables.addressToCommonNames(cta);\n        const forteClass = this.forteClass;\n        const enharmonicTests = {\n            '3-11A': () => this.isMinorTriad(),\n            '3-11B': () => this.isMajorTriad(),\n            '3-10': () => this.isDiminishedTriad(),\n            '3-12': () => this.isAugmentedTriad(),\n        };\n        if (enharmonicTests[forteClass] !== undefined) {\n            let out = ctn[0];\n            const test = enharmonicTests[forteClass];\n            if (!test()) {\n                out = 'enharmonic equivalent to ' + out;\n            }\n            return out;\n        }\n\n        if (ctn === undefined) {\n            return '';\n        } else {\n            return ctn[0];\n        }\n    }\n\n    get forteClass() {\n        return chordTables.addressToForteName(this.chordTablesAddress, 'tn');\n    }\n\n    get forteClassNumber() {\n        return this.chordTablesAddress.forteClass;\n    }\n\n    get forteClassTnI() {\n        return chordTables.addressToForteName(this.chordTablesAddress, 'tni');\n    }\n\n    get(i) {\n        if (typeof i === 'number') {\n            return this._notes[i];\n        } else {\n            return undefined; // TODO(msc): add other get methods.\n        }\n    }\n\n    * [Symbol.iterator]() {\n        for (let i = 0; i < this.length; i++) {\n            yield this.get(i);\n        }\n    }\n\n\n    areZRelations(other) {\n        const zRelationAddress = chordTables.addressToZAddress(this.chordTablesAddress);\n        if (zRelationAddress === undefined) {\n            return false;\n        }\n        for (const key of ['cardinality', 'forteClass', 'inversion']) {\n            if (other.chordTablesAddress[key] !== zRelationAddress[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    getZRelation() {\n        if (!this.hasZRelation) {\n            return undefined;\n        }\n        const chordTablesAddress = this.chordTablesAddress;\n        const v = chordTables.addressToIntervalVector(chordTablesAddress);\n        const addresses = chordTables.intervalVectorToAddress(v);\n        let other;\n        for (const thisAddress of addresses) {\n            if (thisAddress.forteClass !== chordTablesAddress.forteClass) {\n                other = thisAddress;\n            }\n        }\n        // other should always be defined;\n        const prime = chordTables.addressToTransposedNormalForm(other);\n        return new Chord(prime);\n    }\n\n    get hasZRelation() {\n        const post = chordTables.addressToZAddress(this.chordTablesAddress);\n        if (post !== undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    get intervalVector() {\n        return chordTables.addressToIntervalVector(this.chordTablesAddress);\n    }\n\n//    get intervalVectorString() {\n//\n//    }\n//\n//    static formatVectorString() {\n//        // needs pitch._convertPitchClassToStr\n//    }\n\n    setStemDirectionFromClef(clef) {\n        if (clef === undefined) {\n            return this;\n        } else {\n            const midLine = clef.lowestLine + 4;\n            // console.log(midLine, 'midLine');\n            let maxDNNfromCenter = 0;\n            const pA = this.pitches;\n            for (let i = 0; i < this.pitches.length; i++) {\n                const p = pA[i];\n                const DNNfromCenter = p.diatonicNoteNum - midLine;\n                // >= not > so that the highest pitch wins the tie and thus stem down.\n                if (Math.abs(DNNfromCenter) >= Math.abs(maxDNNfromCenter)) {\n                    maxDNNfromCenter = DNNfromCenter;\n                }\n            }\n            if (maxDNNfromCenter >= 0) {\n                this.stemDirection = 'down';\n            } else {\n                this.stemDirection = 'up';\n            }\n            return this;\n        }\n    }\n    /**\n     * Adds a note to the chord, sorting the note array\n     *\n     * @param {string|string[]|music21.note.Note[]|music21.pitch.Pitch[]} notes - the Note or Pitch to be added or a string defining a pitch.\n     * @param {boolean} runSort - Sort after running (default true)\n     * @returns {music21.chord.Chord} the original chord.\n     */\n    add(notes, runSort=true) {\n        if (!(notes instanceof Array)) {\n            notes = [notes];\n        }\n        for (let noteObj of notes) {\n            // takes in either a note or a pitch\n            if (typeof noteObj === 'string') {\n                noteObj = new note.Note(noteObj);\n            } else if (noteObj.isClassOrSubclass('Pitch')) {\n                const pitchObj = noteObj;\n                const noteObj2 = new note.Note();\n                noteObj2.pitch = pitchObj;\n                noteObj = noteObj2;\n            }\n            this._notes.push(noteObj);\n        }\n        // inefficient because sorts after each add, but safe and #(p) is small\n        if (runSort === true) {\n            this.sortPitches();\n        }\n        this._cache = {};\n        return this;\n    }\n\n    sortPitches() {\n        this._notes.sort((a, b) => a.pitch.ps - b.pitch.ps);\n    }\n\n    // TODO: add remove\n\n    /**\n     * Removes any pitches that appear more than once (in any octave), removing the higher ones, and returns a new Chord.\n     *\n     * @returns {music21.chord.Chord} A new Chord object with duplicate pitches removed.\n     */\n    removeDuplicatePitches() {\n        const stepsFound = [];\n        const nonDuplicatingPitches = [];\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (stepsFound.indexOf(p.step) === -1) {\n                stepsFound.push(p.step);\n                nonDuplicatingPitches.push(p);\n            }\n        }\n        const closedChord = new chord.Chord(nonDuplicatingPitches);\n        return closedChord;\n    }\n    /**\n     * Finds the Root of the chord.\n     *\n     * @param {music21.pitch.Pitch} [newroot]\n     * @returns {music21.pitch.Pitch} the root of the chord.\n     */\n    root(newroot) {\n        if (newroot !== undefined) {\n            this._overrides.root = newroot;\n            this._cache.root = newroot;\n            this._cache.inversion = undefined;\n        }\n\n        if (this._overrides.root !== undefined) {\n            return this._cache.root;\n        }\n\n        if (this._cache.root !== undefined) {\n            return this._cache.root;\n        }\n\n        const closedChord = this.removeDuplicatePitches();\n        /* var chordBass = closedChord.bass(); */\n        const closedPitches = closedChord.pitches;\n        if (closedPitches.length === 0) {\n            throw new Music21Exception('No notes in Chord!');\n        } else if (closedPitches.length === 1) {\n            return this.pitches[0];\n        }\n        // const indexOfPitchesWithPerfectlyStackedThirds = [];\n        const testSteps = [3, 5, 7, 2, 4, 6];\n        for (let i = 0; i < closedPitches.length; i++) {\n            const p = closedPitches[i];\n            const currentListOfThirds = [];\n            for (let tsIndex = 0; tsIndex < testSteps.length; tsIndex++) {\n                const chordStepPitch = closedChord.getChordStep(\n                    testSteps[tsIndex],\n                    p\n                );\n                if (chordStepPitch !== undefined) {\n                    // console.log(p.name + \" \" + testSteps[tsIndex].toString() + \" \" + chordStepPitch.name);\n                    currentListOfThirds.push(true);\n                } else {\n                    currentListOfThirds.push(false);\n                }\n            }\n            // console.log(currentListOfThirds);\n            let hasFalse = false;\n            for (let j = 0; j < closedPitches.length - 1; j++) {\n                if (currentListOfThirds[j] === false) {\n                    hasFalse = true;\n                }\n            }\n            if (hasFalse === false) {\n                // indexOfPitchesWithPerfectlyStackedThirds.push(i);\n                return closedChord.pitches[i]; // should do more, but fine...\n                // should test rootedness function, etc. 13ths. etc.\n            }\n        }\n        const newRoot = closedChord.pitches[0]; // fallback, just return the bass...\n        this._cache.root = newRoot;\n        return newRoot;\n    }\n    /**\n     * Returns the number of semitones above the root that a given chordstep is.\n     *\n     * For instance, in a G dominant 7th chord (G, B, D, F), would\n     * return 4 for chordStep=3, since the third of the chord (B) is four semitones above G.\n     *\n     * @param {number} chordStep - the step to find, e.g., 1, 2, 3, etc.\n     * @param {music21.pitch.Pitch} [testRoot] - the pitch to temporarily consider the root.\n     * @returns {number|undefined} Number of semitones above the root for this chord step or undefined if no pitch matches that chord step.\n     */\n    semitonesFromChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        const tempChordStep = this.getChordStep(chordStep, testRoot);\n        if (tempChordStep === undefined) {\n            return undefined;\n        } else {\n            let semitones = (tempChordStep.ps - testRoot.ps) % 12;\n            if (semitones < 0) {\n                semitones += 12;\n            }\n            return semitones;\n        }\n    }\n    /**\n     * Gets the lowest note (based on .ps not name) in the chord.\n     *\n     * @returns {music21.pitch.Pitch} bass pitch\n     */\n    bass() {\n        let lowest;\n        const pitches = this.pitches;\n        for (let i = 0; i < pitches.length; i++) {\n            const p = pitches[i];\n            if (lowest === undefined) {\n                lowest = p;\n            } else { // noinspection JSUnusedAssignment\n                if (p.ps < lowest.ps) {\n                    lowest = p;\n                }\n            }\n        }\n        return lowest;\n    }\n    /**\n     * Counts the number of non-duplicate pitch MIDI Numbers in the chord.\n     *\n     * Call after \"closedPosition()\" to get Forte style cardinality disregarding octave.\n     *\n     * @returns {number}\n     */\n    cardinality() {\n        const uniqueChord = this.removeDuplicatePitches();\n        return uniqueChord.pitches.length;\n    }\n\n    /**\n    *\n    * @returns {Boolean}\n    */\n    isMajorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @returns {Boolean}\n    */\n    isMinorTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @returns {Boolean}\n    */\n    isDiminishedTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 3 && fifthST === 6) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n    *\n    * @returns {Boolean}\n    */\n    isAugmentedTriad() {\n        if (this.cardinality() !== 3) {\n            return false;\n        }\n        const thirdST = this.semitonesFromChordStep(3);\n        const fifthST = this.semitonesFromChordStep(5);\n        if (thirdST === 4 && fifthST === 8) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    isDominantSeventh() {\n        return this.isSeventhOfType([0, 4, 7, 10]);\n    }\n\n    isDiminishedSeventh() {\n        return this.isSeventhOfType([0, 3, 6, 9]);\n    }\n\n    isSeventhOfType(intervalArray) {\n        if (intervalArray === undefined) {\n            throw new Music21Exception('intervalArray is required');\n        }\n        const third = this.third;\n        const fifth = this.fifth;\n        const seventh = this.seventh;\n\n        if (\n            third === undefined\n            || fifth === undefined\n            || seventh === undefined\n        ) {\n            return false;\n        }\n\n        const root = this.root();\n\n        for (const thisPitch of this.pitches) {\n            const thisInterval = new interval.Interval(root, thisPitch);\n            if (!intervalArray.includes(thisInterval.chromatic.mod12)) {\n                return false;\n            }\n//            // check if it doesn't have any other pitches, such as C E F- G Bb != Dominant Seventh\n//            if (!ignoreSpelling && !chordalNames.includes(thisPitch.name)) {\n//                return false;\n//            }\n        }\n        return true;\n\n\n    }\n\n\n    /**\n     * canBeDominantV - Returns true if the chord is a Major Triad or a Dominant Seventh\n     *\n     * @return {Boolean}\n     */\n    canBeDominantV() {\n        if (this.isMajorTriad() || this.isDominantSeventh()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns true if the chord is a major or minor triad\n     *\n     * @returns {Boolean}\n     */\n    canBeTonic() {\n        if (this.isMajorTriad() || this.isMinorTriad()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the inversion of the chord as a number (root-position = 0)\n     *\n     * Unlike music21 version, cannot set the inversion, yet.\n     *\n     * TODO: add.\n     *\n     * @returns {number}\n     */\n    inversion() {\n        const bass = this.bass();\n        const root = this.root();\n        const chordStepsToInversions = [1, 6, 4, 2, 7, 5, 3];\n        for (let i = 0; i < chordStepsToInversions.length; i++) {\n            const testNote = this.getChordStep(chordStepsToInversions[i], bass);\n            if (testNote !== undefined && testNote.name === root.name) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * @param {Object} options - a dictionary of options `{clef: {@music21.clef.Clef} }` is especially important\n     * @returns {Vex.Flow.StaveNote}\n     */\n    vexflowNote(options) {\n        const clef = options.clef;\n\n        const pitchKeys = [];\n        for (let i = 0; i < this._notes.length; i++) {\n            pitchKeys.push(this._notes[i].pitch.vexflowName(clef));\n        }\n        const vfn = new Vex.Flow.StaveNote({\n            keys: pitchKeys,\n            duration: this.duration.vexflowDuration,\n        });\n        this.vexflowAccidentalsAndDisplay(vfn, options); // clean up stuff...\n        for (let i = 0; i < this._notes.length; i++) {\n            const tn = this._notes[i];\n            if (tn.pitch.accidental !== undefined) {\n                if (\n                    tn.pitch.accidental.vexflowModifier !== 'n'\n                    && tn.pitch.accidental.displayStatus !== false\n                ) {\n                    vfn.addAccidental(\n                        i,\n                        new Vex.Flow.Accidental(\n                            tn.pitch.accidental.vexflowModifier\n                        )\n                    );\n                } else if (\n                    tn.pitch.accidental.displayType === 'always'\n                    || tn.pitch.accidental.displayStatus === true\n                ) {\n                    vfn.addAccidental(\n                        i,\n                        new Vex.Flow.Accidental(\n                            tn.pitch.accidental.vexflowModifier\n                        )\n                    );\n                }\n            }\n        }\n        this.activeVexflowNote = vfn;\n        return vfn;\n    }\n    /**\n     * Returns the Pitch object that is a Generic interval (2, 3, 4, etc., but not 9, 10, etc.) above\n     * the `.root()`\n     *\n     * In case there is more that one note with that designation (e.g., `[A-C-C#-E].getChordStep(3)`)\n     * the first one in `.pitches` is returned.\n     *\n     * @param {int} chordStep a positive integer representing the chord step\n     * @param {music21.pitch.Pitch} [testRoot] - the Pitch to use as a temporary root\n     * @returns {music21.pitch.Pitch|undefined}\n     */\n    getChordStep(chordStep, testRoot) {\n        if (testRoot === undefined) {\n            testRoot = this.root();\n        }\n        if (chordStep >= 8) {\n            chordStep %= 7;\n        }\n        const thisPitches = this.pitches;\n        const testRootDNN = testRoot.diatonicNoteNum;\n        for (let i = 0; i < thisPitches.length; i++) {\n            const thisPitch = thisPitches[i];\n            let thisInterval\n                = (thisPitch.diatonicNoteNum - testRootDNN + 1) % 7; // fast cludge\n            if (thisInterval <= 0) {\n                thisInterval += 7;\n            }\n            if (thisInterval === chordStep) {\n                return thisPitch;\n            }\n        }\n        return undefined;\n    }\n\n    get third() {\n        return this.getChordStep(3);\n    }\n    get fifth() {\n        return this.getChordStep(5);\n    }\n    get seventh() {\n        return this.getChordStep(7);\n    }\n}\nchord.Chord = Chord;\n\nchord.chordDefinitions = {\n    major: ['M3', 'm3'],\n    minor: ['m3', 'M3'],\n    diminished: ['m3', 'm3'],\n    augmented: ['M3', 'M3'],\n    'major-seventh': ['M3', 'm3', 'M3'],\n    'dominant-seventh': ['M3', 'm3', 'm3'],\n    'minor-seventh': ['m3', 'M3', 'm3'],\n    'diminished-seventh': ['m3', 'm3', 'm3'],\n    'half-diminished-seventh': ['m3', 'm3', 'M3'],\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/clef -- Clef objects\n *\n * Copyright (c) 2013-19, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–19, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { pitch } from './pitch.js';\n\n/**\n * Clef module, see {@link music21.clef} for namespace\n *\n * @exports music21/clef\n */\n/**\n * Clef related objects and properties\n *\n * @namespace music21.clef\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n */\nexport const clef = {};\n/*  music21.Clef\n\tmust be defined before Stream since Stream subclasses call new music21.Clef...\n */\n// TODO: Fix to newest Vexflow format...\nclef.lowestLines = {\n    treble: 31,\n    soprano: 29,\n    'mezzo-soprano': 27,\n    alto: 25,\n    tenor: 23,\n    bass: 19,\n    percussion: 31,\n};\n\nclef.nameToLine = {\n    treble: 2,\n    soprano: 1,\n    'mezzo-soprano': 2,\n    alto: 3,\n    tenor: 4,\n    bass: 4,\n    percussion: 3,\n};\n\nclef.nameToSign = {\n    treble: 'G',\n    soprano: 'C',\n    'mezzo-soprano': 'C',\n    alto: 'C',\n    tenor: 'C',\n    bass: 'F',\n    percussion: 'percussion',\n};\n\n/**\n * Clefname can be one of\n * \"treble\", \"bass\", \"soprano\", \"mezzo-soprano\", \"alto\", \"tenor\", \"percussion\"\n *\n * @class Clef\n * @memberof music21.clef\n * @extends music21.base.Music21Object\n * @param {string} name - clef name\n * @param {int} [octaveChange=0] - ottava\n * @property {string} [name]\n * @property {int} lowestLine - diatonicNoteNum (C4 = 29) for the lowest line (in a five-line staff)\n * @property {int} lowestLineTrebleOffset - difference between the first line of this staff and the first line in treble clef\n * @property {int} octaveChange\n */\nexport class Clef extends base.Music21Object {\n    constructor(name, octaveChange) {\n        super();\n        this.classSortOrder = 0;\n\n        this.sign = undefined;\n        this.line = 1;\n        if (name !== undefined) {\n            name = name.toLowerCase();\n            this.name = name;\n            this.lowestLine = clef.lowestLines[name];\n            this.sign = clef.nameToSign[name];\n            this.line = clef.nameToLine[name] || 1;\n            this.lowestLineTrebleOffset\n                = clef.lowestLines.treble - this.lowestLine;\n        } else {\n            this.name = undefined;\n            this.lowestLine = clef.lowestLines.treble;\n            this.lowestLineTrebleOffset = 0;\n        }\n        if (octaveChange === undefined) {\n            this.octaveChange = 0;\n        } else {\n            this.octaveChange = octaveChange;\n            this.lowestLine += 7 * octaveChange;\n            this.lowestLineTrebleOffset -= 7 * octaveChange;\n        }\n    }\n    \n    stringInfo() {\n        return '';\n    }\n    /**\n     * returns a new pitch object if the clef name is not Treble\n     * designed so it would look the same as it would in treble clef.\n     * for instance, bass-clef 2nd-space C# becomes treble clef 2nd-space A#\n     * used for Vex.Flow which requires all pitches to be input as if they\n     * are in treble clef.\n     *\n     * @param {music21.pitch.Pitch} p\n     * @returns {music21.pitch.Pitch} new pitch\n     */\n    convertPitchToTreble(p) {\n        if (this.lowestLine === undefined) {\n            console.log('no first line defined for clef', this.name, this);\n            return p; // error\n        }\n        const lowestLineDifference = this.lowestLineTrebleOffset;\n        const tempPitch = new pitch.Pitch(p.step);\n        tempPitch.octave = p.octave;\n        tempPitch.diatonicNoteNum += lowestLineDifference;\n        tempPitch.accidental = p.accidental;\n        return tempPitch;\n    }\n}\n\nclef.Clef = Clef;\n\n/**\n * A TrebleClef (same as new music21.clef.Clef('treble'))\n *\n * @class TrebleClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TrebleClef extends Clef {\n    constructor() {\n        super('treble');\n        this.sign = 'G';\n        this.line = 2;\n    }\n}\nclef.TrebleClef = TrebleClef;\n/**\n * A TrebleClef down an octave (same as new music21.clef.Clef('treble', -1))\n *\n * Unlike music21p, currently not a subclass of TrebleClef.\n *\n * @class Treble8vbClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vbClef extends Clef {\n    constructor() {\n        super('treble', -1);\n    }\n}\nclef.Treble8vbClef = Treble8vbClef;\n\n/**\n * A TrebleClef up an octave (same as new music21.clef.Clef('treble', 1))\n *\n * @class Treble8vaClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Treble8vaClef extends Clef {\n    constructor() {\n        super('treble', 1);\n    }\n}\nclef.Treble8vaClef = Treble8vaClef;\n\n/**\n * A BassClef (same as new music21.clef.Clef('bass'))\n *\n * @class BassClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class BassClef extends Clef {\n    constructor() {\n        super('bass');\n        this.sign = 'F';\n        this.line = 4;\n    }\n}\nclef.BassClef = BassClef;\n\n/**\n * A BassClef down an octave (same as new music21.clef.Clef('bass', -1))\n *\n * @class Bass8vbClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class Bass8vbClef extends Clef {\n    constructor() {\n        super('bass', -1);\n        this.sign = 'F';\n        this.line = 4;\n    }\n}\nclef.Bass8vbClef = Bass8vbClef;\n\n/**\n * An AltoClef (same as new music21.clef.Clef('alto'))\n *\n * @class AltoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class AltoClef extends Clef {\n    constructor() {\n        super('alto');\n        this.sign = 'C';\n        this.line = 3;\n    }\n}\nclef.AltoClef = AltoClef;\n\n/**\n * A Tenor Clef (same as new music21.clef.Clef('tenor'))\n *\n * @class TenorClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class TenorClef extends Clef {\n    constructor() {\n        super('tenor');\n        this.sign = 'C';\n        this.line = 4;\n    }\n}\nclef.TenorClef = TenorClef;\n/**\n * A Soprano Clef (same as new music21.clef.Clef('soprano'))\n *\n * @class SopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class SopranoClef extends Clef {\n    constructor() {\n        super('soprano');\n        this.sign = 'C';\n        this.line = 1;\n    }\n}\nclef.SopranoClef = SopranoClef;\n\n/**\n * A Mezzo-Soprano Clef (same as new music21.clef.Clef('mezzo-soprano'))\n *\n * @class MezzoSopranoClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class MezzoSopranoClef extends Clef {\n    constructor() {\n        super('mezzo-soprano');\n        this.sign = 'C';\n        this.line = 2;\n    }\n}\nclef.MezzoSopranoClef = MezzoSopranoClef;\n\n/**\n * A Percussion Clef (same as new music21.clef.Clef('percussion'))\n *\n * First line is treated as if it's treble clef. Not available as \"bestClef\"\n *\n * @class PercussionClef\n * @memberof music21.clef\n * @extends music21.clef.Clef\n */\nexport class PercussionClef extends Clef {\n    constructor() {\n        super('percussion');\n        this.sign = 'percussion';\n        this.line = 3;\n    }\n}\nclef.PercussionClef = PercussionClef;\n\n/**\n * Looks at the pitches in a Stream and returns the best clef\n * of Treble and Bass\n *\n * @function music21.clef.bestClef\n * @memberof music21.clef\n * @param {music21.stream.Stream} st\n * @param {Object} [options]\n * @param {boolean} [options.recurse=true]\n * @returns {music21.clef.Clef}\n */\nclef.bestClef = function bestClef(st, { recurse=true }={}) {\n    // console.log('calling flat on stream: ', st.elements.length, st.classes[st.classes.length - 1]);\n    let stFlat;\n    if (recurse) {\n        stFlat = st.flat;\n    } else {\n        stFlat = st;\n    }\n    let totalNotes = 0;\n    let totalPitch = 0.0;\n    for (let i = 0; i < stFlat.length; i++) {\n        const el = stFlat.get(i);\n        if (el.pitch !== undefined) {\n            totalNotes += 1;\n            totalPitch += el.pitch.diatonicNoteNum;\n        } else if (el.pitches !== undefined) {\n            for (let j = 0; j < el.pitches.length; j++) {\n                totalNotes += 1;\n                totalPitch += el.pitches[j].diatonicNoteNum;\n            }\n        }\n    }\n    let averageHeight;\n    if (totalNotes === 0) {\n        averageHeight = 29;\n    } else {\n        averageHeight = totalPitch / totalNotes;\n    }\n    // console.log('bestClef: average height', averageHeight);\n    if (averageHeight > 28) {\n        // 29 = c4\n        return new clef.TrebleClef();\n    } else {\n        return new clef.BassClef();\n    }\n};\n\nclef.clefFromString = function clefFromString(clefString, octaveShift) {\n    if (octaveShift === undefined) {\n        octaveShift = 0;\n    }\n    const xnStr = clefString.trim();\n    let thisType;\n    let lineNum;\n    if (xnStr.toLowerCase() === 'percussion') {\n        return new clef.PercussionClef(clefString, octaveShift);\n    } // todo: tab, none, jianpu\n\n    if (xnStr.length === 2) {\n        thisType = xnStr[0].toUpperCase();\n        lineNum = parseInt(xnStr[1]);\n    } else if (xnStr.length === 1) {\n        thisType = xnStr[0].toUpperCase();\n        if (thisType === 'G') {\n            lineNum = 2;\n        } else if (thisType === 'F') {\n            lineNum = 4;\n        } else if (thisType === 'C') {\n            lineNum = 3;\n        } else {\n            lineNum = 0;\n        }\n    } else if (xnStr.length > 2) {\n        // try to get any clef in the module\n        const searchLower = xnStr.toLowerCase();\n        for (const clefKey of Object.keys(clef)) { // TODO(msc): fix when we get rid of clef = {}\n            if (!clefKey.includes('Clef')) {\n                continue;\n            }\n            const clefLower = clefKey.toLowerCase();\n            const potentialClass = clef[clefKey];\n            if (typeof potentialClass !== 'function') {\n                continue;\n            }\n            if (clefLower !== searchLower && clefLower !== searchLower + 'clef') {\n                continue;\n            }\n            return new potentialClass();\n        }\n    }\n\n    const arrayEqual = (a, b) =>\n        a.length === b.length && a.every((el, ix) => el === b[ix]);\n\n    const params = [thisType, lineNum, octaveShift];\n    if (arrayEqual(params, ['G', 2, 0])) {\n        return new clef.TrebleClef();\n    } else if (arrayEqual(params, ['G', 2, -1])) {\n        return new clef.Treble8vbClef();\n    } else if (arrayEqual(params, ['G', 2, 1])) {\n        return new clef.Treble8vaClef();\n    } else if (arrayEqual(params, ['F', 4, 0])) {\n        return new clef.BassClef();\n    } else if (arrayEqual(params, ['F', 4, -1])) {\n        return new clef.Bass8vbClef();\n    } else if (arrayEqual(params, ['C', 3, 0])) {\n        return new clef.AltoClef();\n    } else if (arrayEqual(params, ['C', 4, 0])) {\n        return new clef.TenorClef();\n    } else {\n        return new clef.Clef(xnStr, octaveShift);\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/scale -- Scales\n *\n * Does not implement the full range of scales from music21p\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { interval } from './interval.js';\nimport { pitch } from './pitch.js';\n\nimport { Music21Exception } from './exceptions21.js';\n\n// const DIRECTION_BI = 'bi';\n// const DIRECTION_DESCENDING = 'descending';\n// const DIRECTION_ASCENDING = 'ascending';\n\n/**\n * Scale module. See {@link music21.scale} namespace\n *\n * @exports music21/scale\n */\n/**\n * Scale namespace.  Right now only supports very simple scales.\n *\n * @namespace music21.scale\n * @memberof music21\n * @requires music21/base\n * @requires music21/common\n * @requires music21/debug\n * @requires music21/interval\n * @requires music21/pitch\n */\nexport class Scale extends base.Music21Object {\n    constructor() {\n        super();\n        this.type = 'Scale';\n    }\n\n    get name() {\n        return this.type;\n    }\n\n    get isConcrete() {\n        return false;\n    }\n}\n\nexport class AbstractScale extends Scale {\n    constructor() {\n        super();\n        this._net = []; // simplified -- no IntervalNetwork, just list of intervals\n        this.tonicDegree = 1;\n        this.octaveDuplicating = true;\n        this.deterministic = true;\n        this._alteredDegrees = {};\n        this._oneOctaveRealizationCache = undefined;\n    }\n\n    equals(other) {\n        if (\n            common.arrayEquals(this.classes, other.classes)\n            && this.tonicDegree === other.tonicDegree\n            && common.arrayEquals(this._net, other._net)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    buildNetworkFromPitches(pitchList) {\n        const pitchListReal = [];\n        for (const p of pitchList) {\n            if (typeof p === 'string') {\n                pitchListReal.push(new pitch.Pitch(p));\n            } else if (p.classes.includes('Note')) {\n                pitchListReal.push(p.pitch);\n            } else {\n                pitchListReal.push(p);\n            }\n        }\n        pitchList = pitchListReal;\n\n        const pLast = pitchList[pitchList.length - 1];\n        if (pLast.name === pitchList[0]) {\n            const p = pitchList[0].clone();\n            if (pLast.ps > pitchList[0]) {\n                // ascending;\n                while (p.ps < pLast.ps) {\n                    p.octave += 1;\n                }\n            } else {\n                while (p.ps < pLast.ps) {\n                    p.octave += -1;\n                }\n            }\n            pitchList.push(p);\n        }\n\n        const intervalList = [];\n        for (let i = 0; i < pitchList.length - 1; i++) {\n            const thisInterval = new interval.Interval(\n                pitchList[i],\n                pitchList[i + 1]\n            );\n            intervalList.push(thisInterval);\n        }\n        this._net = intervalList;\n    }\n\n    getDegreeMaxUnique() {\n        return this._net.length;\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    getRealization(\n        pitchObj,\n        unused_stepOfPitch,\n        unused_minPitch,\n        unused_maxPitch,\n        unused_direction,\n        unused_reverse\n    ) {\n        // if (direction === undefined) {\n        //     direction = DIRECTION_ASCENDING;\n        // }\n        // if (stepOfPitch === undefined) {\n        //     stepOfPitch = 1;\n        // }\n        if (typeof pitchObj === 'string') {\n            pitchObj = new pitch.Pitch(pitchObj);\n        } else {\n            pitchObj = pitchObj.clone();\n        }\n        const post = [pitchObj];\n        for (const intV of this._net) {\n            pitchObj = intV.transposePitch(pitchObj);\n            post.push(pitchObj);\n        }\n        return post;\n    }\n\n    getPitchFromNodeDegree(pitchReference, unused_nodeName, nodeDegreeTarget) {\n        const zeroIndexDegree = nodeDegreeTarget - 1;\n        for (let i = 0; i < zeroIndexDegree; i++) {\n            const thisIntv = this._net[i % this._net.length];\n            pitchReference = thisIntv.transposePitch(pitchReference);\n        }\n        return pitchReference;\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    getRelativeNodeDegree(\n        pitchReference,\n        unused_nodeName,\n        pitchTarget,\n        unused_comparisonAttribute,\n        unused_direction\n    ) {\n        if (typeof pitchTarget === 'string') {\n            pitchTarget = new pitch.Pitch(pitchTarget);\n        }\n        let realizedPitches;\n        if (this._oneOctaveRealizationCache !== undefined) {\n            realizedPitches = this._oneOctaveRealizationCache;\n        } else {\n            realizedPitches = this.getRealization(pitchReference);\n            this._oneOctaveRealizationCache = realizedPitches;\n        }\n        const realizedNames = [];\n        for (const p of realizedPitches) {\n            realizedNames.push(p.name);\n        }\n        const realizedIndex = realizedNames.indexOf(pitchTarget.name);\n        if (realizedIndex === -1) {\n            return undefined;\n        } else {\n            return realizedIndex + 1;\n        }\n    }\n}\n\nexport class AbstractDiatonicScale extends AbstractScale {\n    /**\n     *\n     * @param {string} [mode]\n     * @property {string} type\n     * @property {number|undefined} tonicDegree\n     * @property {number|undefined} dominantDegree\n     * @property {boolean} octaveDuplicating\n     */\n    constructor(mode) {\n        super();\n        this.type = 'Abstract diatonic';\n        this.tonicDegree = undefined;\n        this.dominantDegree = undefined;\n        this.octaveDuplicating = true;\n        this._buildNetwork(mode);\n    }\n    _buildNetwork(mode) {\n        const srcList = ['M2', 'M2', 'm2', 'M2', 'M2', 'M2', 'm2'];\n        let intervalList;\n        this.tonicDegree = 1;\n        this.dominantDegree = 5;\n        if (['major', 'ionian', undefined].includes(mode)) {\n            intervalList = srcList;\n            this.relativeMajorDegree = 1;\n            this.relativeMinorDegree = 6;\n        } else if (['minor', 'aeolian'].includes(mode)) {\n            intervalList = srcList.slice(5, 7);\n            intervalList.push(...srcList.slice(0, 5));\n            this.relativeMajorDegree = 3;\n            this.relativeMinorDegree = 1;\n        }\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\nexport class AbstractHarmonicMinorScale extends AbstractScale {\n    constructor() {\n        super();\n        this.type = 'Abstract harmonic minor';\n        this.octaveDuplicating = true;\n        this._buildNetwork();\n    }\n    _buildNetwork() {\n        const intervalList = ['M2', 'm2', 'M2', 'M2', 'm2', 'A2', 'm2'];\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\n// temporary, until bidirectional scales are created\n// no need for descending, since minor takes care of that.\nexport class AbstractAscendingMelodicMinorScale extends AbstractScale {\n    constructor() {\n        super();\n        this.type = 'Abstract ascending melodic minor';\n        this.octaveDuplicating = true;\n        this._buildNetwork();\n    }\n    _buildNetwork() {\n        const intervalList = ['M2', 'm2', 'M2', 'M2', 'M2', 'M2', 'm2'];\n        this._net = [];\n        for (const intVStr of intervalList) {\n            this._net.push(new interval.Interval(intVStr));\n        }\n    }\n}\n\nexport class ConcreteScale extends Scale {\n    constructor(tonic) {\n        super();\n        if (typeof tonic === 'string') {\n            tonic = new pitch.Pitch(tonic);\n        }\n        this.tonic = tonic;\n        this.abstract = undefined;\n    }\n\n    // when adding functionality here, must also be added to key.Key.\n    get isConcrete() {\n        if (this.tonic !== undefined) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getTonic() {\n        return this.tonic;\n    }\n\n    // transpose\n    // tune\n    // No .romanNumeral function because of circular imports...\n    // romanNumeral(degree) {\n    //     return new roman.RomanNumeral(degree, this);\n    // }\n\n    // noinspection JSUnusedLocalSymbols\n    getPitches(unused_minPitch, unused_maxPitch, unused_direction) {\n        let pitchObj;\n        if (this.tonic === undefined) {\n            pitchObj = new pitch.Pitch('C4');\n        } else {\n            pitchObj = this.tonic;\n        }\n        return this.abstract.getRealization(pitchObj);\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    pitchFromDegree(\n        degree,\n        unused_minPitch,\n        unused_maxPitch,\n        unused_direction,\n        unused_equateTermini\n    ) {\n        return this.abstract.getPitchFromNodeDegree(\n            this.tonic,\n            this.abstract.tonicDegree,\n            degree\n        );\n    }\n\n    // noinspection JSUnusedLocalSymbols\n    getScaleDegreeFromPitch(\n        pitchTarget,\n        unused_direction,\n        unused_comparisonAttribute\n    ) {\n        return this.abstract.getRelativeNodeDegree(\n            this.tonic,\n            this.abstract.tonicDegree,\n            pitchTarget\n        );\n    }\n}\n\nexport class DiatonicScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.abstract = new AbstractDiatonicScale();\n        this.type = 'diatonic';\n    }\n}\n\nexport class MajorScale extends DiatonicScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'major';\n        this.abstract._buildNetwork(this.type);\n    }\n}\n\nexport class MinorScale extends DiatonicScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'minor';\n        this.abstract._buildNetwork(this.type);\n    }\n}\n\nexport class HarmonicMinorScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'harmonic minor';\n        this.abstract = new AbstractHarmonicMinorScale();\n    }\n}\n\nexport class AscendingMelodicMinorScale extends ConcreteScale {\n    constructor(tonic) {\n        super(tonic); // a.k.a. ^2 :-)\n        this.type = 'harmonic minor';\n        this.abstract = new AbstractAscendingMelodicMinorScale();\n    }\n}\n\n/**\n * Function, not class\n *\n * @function music21.scale.SimpleDiatonicScale\n * @param {music21.pitch.Pitch} tonic\n * @param {Array<string>} scaleSteps - an array of diatonic prefixes,\n *     generally 'M' (major) or 'm' (minor) describing the seconds.\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function SimpleDiatonicScale(tonic, scaleSteps) {\n    if (tonic === undefined) {\n        tonic = new pitch.Pitch('C4');\n    } else if (!(tonic instanceof pitch.Pitch)) {\n        throw new Music21Exception(\n            'Cannot make a scale not from '\n                + 'a music21.pitch.Pitch object: '\n                + tonic\n        );\n    }\n    if (scaleSteps === undefined) {\n        scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    }\n    const gi = new interval.GenericInterval(2);\n    const pitches = [tonic];\n    let lastPitch = tonic;\n    for (let i = 0; i < scaleSteps.length; i++) {\n        const di = new interval.DiatonicInterval(scaleSteps[i], gi);\n        const ii = new interval.Interval(di);\n        const newPitch = ii.transposePitch(lastPitch);\n        if (debug) {\n            console.log('ScaleSimpleMajor -- adding pitch: ' + newPitch.name);\n        }\n        pitches.push(newPitch);\n        lastPitch = newPitch;\n    }\n    return pitches;\n}\n\n/**\n * One octave of a major scale\n *\n * @function music21.scale.ScaleSimpleMajor\n * @param {music21.pitch.Pitch} tonic\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function ScaleSimpleMajor(tonic) {\n    const scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];\n    return SimpleDiatonicScale(tonic, scaleSteps);\n}\n\n/**\n * One octave of a minor scale\n *\n * @function music21.scale.ScaleSimpleMinor\n * @param {music21.pitch.Pitch} tonic\n * @param {string} [minorType='natural'] - 'harmonic', 'harmonic-minor',\n *     'melodic', 'melodic-minor', 'melodic-minor-ascending',\n *     'melodic-ascending' or other (=natural/melodic-descending)\n * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.\n */\nexport function ScaleSimpleMinor(tonic, minorType) {\n    const scaleSteps = ['M', 'm', 'M', 'M', 'm', 'M', 'M'];\n    if (typeof minorType === 'string') {\n        // \"harmonic minor\" -> \"harmonic-minor\"\n        minorType = minorType.replace(/\\s/g, '-');\n    }\n    if (minorType === 'harmonic' || minorType === 'harmonic-minor') {\n        scaleSteps[5] = 'A';\n        scaleSteps[6] = 'm';\n    } else if (\n        minorType === 'melodic'\n        || minorType === 'melodic-ascending'\n        || minorType === 'melodic-minor'\n        || minorType === 'melodic-minor-ascending'\n    ) {\n        scaleSteps[4] = 'M';\n        scaleSteps[6] = 'm';\n    }\n    return SimpleDiatonicScale(tonic, scaleSteps);\n}\n\nexport const scale = {\n    Scale,\n    AbstractScale,\n    AbstractDiatonicScale,\n    AbstractHarmonicMinorScale,\n    AbstractAscendingMelodicMinorScale,\n    ConcreteScale,\n    DiatonicScale,\n    MajorScale,\n    MinorScale,\n    HarmonicMinorScale,\n    AscendingMelodicMinorScale,\n\n    ScaleSimpleMinor,\n    ScaleSimpleMajor,\n    SimpleDiatonicScale,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/key -- KeySignature and Key objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { base } from './base.js';\n// import { common } from './common.js';\nimport { debug } from './debug.js';\nimport { interval } from './interval.js';\nimport { pitch } from './pitch.js';\nimport { scale } from './scale.js';\n\n/* key and keysignature module. See {@link music21.key} namespace for details\n *\n * @exports music21/key\n */\n/**\n * Key and KeySignature related objects and methods\n *\n * @namespace music21.key\n * @memberof music21\n * @requires music21/base\n * @requires music21/pitch\n * @requires music21/interval\n * @requires music21/scale\n */\nexport const key = {};\n\nkey.modeSharpsAlter = {\n    major: 0,\n    minor: -3,\n    dorian: -2,\n    phrygian: -4,\n    lydian: 1,\n    mixolydian: -1,\n    locrian: -5,\n};\n\nkey.convertKeyStringToMusic21KeyString = function convertKeyStringToMusic21KeyString(\n    textString\n) {\n    if (textString === 'bb') {\n        textString = 'b-';\n    } else if (textString === 'Bb') {\n        textString = 'B-';\n    } else if (textString.endsWith('b') && !textString.startsWith('b')) {\n        textString = textString.replace(/b$/, '-');\n    }\n    return textString;\n};\n\n/**\n * @class KeySignature\n * @memberof music21.key\n * @description Represents a key signature\n * @param {int} [sharps=0] -- the number of sharps (negative for flats)\n * @property {int} [sharps=0] -- number of sharps (negative for flats)\n * @property {string[]} flatMapping -- flat signatures 0-12 flats\n * @property {string[]} sharpMapping -- sharp signatures 0-12 sharps\n * @extends music21.base.Music21Object\n * @example\n * var ks = new music21.key.KeySignature(-3); //E-flat major or c minor\n * var s = new music21.stream.Stream();\n * s.keySignature = ks;\n * var n = new music21.note.Note('A-'); // A-flat\n * s.append(n);\n * s.appendNewDOM();\n */\nexport class KeySignature extends base.Music21Object {\n    constructor(sharps) {\n        super();\n        this.classSortOrder = 2;\n\n        this._sharps = sharps || 0; // if undefined\n\n        /**\n         * @type [pitch.Pitch[]]\n         */\n        this._alteredPitchesCache = undefined;\n\n        // 12 flats/sharps enough for now...\n        this.flatMapping = [\n            'C',\n            'F',\n            'B-',\n            'E-',\n            'A-',\n            'D-',\n            'G-',\n            'C-',\n            'F-',\n            'B--',\n            'E--',\n            'A--',\n            'D--',\n        ];\n        this.sharpMapping = [\n            'C',\n            'G',\n            'D',\n            'A',\n            'E',\n            'B',\n            'F#',\n            'C#',\n            'G#',\n            'D#',\n            'A#',\n            'E#',\n            'B#',\n        ];\n    }\n\n    /**\n     * @return string\n     */\n    stringInfo() {\n        if (this.sharps === 0) {\n            return 'of no sharps or flats';\n        } else if (this.sharps === -1) { \n            return 'of 1 flat';\n        } else if (this.sharps === 1) {\n            return 'of 1 sharp';            \n        } else if (this.sharps < 0) {\n            return `of ${Math.abs(this.sharps)} flats`;            \n        } else {\n            return `of ${this.sharps} sharps`;\n        }\n    }\n\n    /**\n     * @return int\n     */\n    get sharps() {\n        return this._sharps;\n    }\n    set sharps(s) {\n        this._alteredPitchesCache = [];\n        this._sharps = s;\n    }\n    /**\n     * Gives the width in pixels necessary to represent the key signature.\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {number} width\n     * @readonly\n     */\n    get width() {\n        if (this.sharps === 0) {\n            return 0;\n        } else {\n            // add 6 to add extra space after the KS...\n            return 12 * Math.abs(this.sharps) + 6;\n        }\n    }\n    /**\n     * An Array of Altered Pitches in KeySignature order (i.e., for flats, Bb, Eb, etc.)\n     *\n     * @memberof music21.key.KeySignature#\n     * @var {Array<music21.pitch.Pitch>} alteredPitches\n     * @readonly\n     * @example\n     * var ks = new music21.key.KeySignature(3)\n     * var ap = ks.alteredPitches\n     * var apName = [];\n     * for (var i = 0; i < ap.length; i++) {\n     *     apName.push(ap[i].name);\n     * }\n     * apName\n     * // [\"F#\", \"C#\", \"G#\"]\n     */\n    get alteredPitches() {\n        if (this._alteredPitchesCache !== undefined) {\n            return this._alteredPitchesCache;\n        }\n        let transStr = 'P5';\n        let startPitch = 'B';\n        if (this.sharps < 0) {\n            transStr = 'P4';\n            startPitch = 'F';\n        }\n        const transInterval = new interval.Interval(transStr);\n        const post = [];\n        let pKeep = new pitch.Pitch(startPitch);\n        for (let i = 0; i < Math.abs(this.sharps); i++) {\n            pKeep = transInterval.transposePitch(pKeep);\n            pKeep.octave = 4;\n            post.push(pKeep);\n        }\n        this._alteredPitchesCache = post;\n        return post;\n    }\n    /**\n     * Return the name of the major key with this many sharps\n     *\n     * @returns {(string|undefined)} name of key\n     * @example\n     * var ks = new music21.key.KeySignature(-3)\n     * ks.majorName()\n     * // \"E-\"\n     */\n    majorName() {\n        if (this.sharps >= 0) {\n            return this.sharpMapping[this.sharps];\n        } else {\n            return this.flatMapping[Math.abs(this.sharps)];\n        }\n    }\n    /**\n     * Return the name of the minor key with this many sharps\n     * @returns {(string|undefined)}\n     */\n    minorName() {\n        const tempSharps = this.sharps + 3;\n        if (tempSharps >= 0) {\n            return this.sharpMapping[tempSharps];\n        } else {\n            return this.flatMapping[Math.abs(tempSharps)];\n        }\n    }\n    /**\n     * returns the vexflow name (just the `majorName()` with \"b\" for \"-\") for\n     * the key signature.  Does not create the object.\n     *\n     * Deprecated.\n     *\n     * @returns {string}\n     */\n    vexflow() {\n        console.log('calling deprecated function KeySignature.vexflow');\n        const tempName = this.majorName();\n        return tempName.replace(/-/g, 'b');\n    }\n    /**\n     * Returns the accidental associated with a step in this key, or undefined if none.\n     *\n     * @param {string} step - a valid step name such as \"C\",\"D\", etc., but not \"C#\" etc.\n     * @returns {(music21.pitch.Accidental|undefined)}\n     */\n    accidentalByStep(step) {\n        const aps = this.alteredPitches;\n        for (let i = 0; i < aps.length; i++) {\n            if (aps[i].step === step) {\n                if (aps[i].accidental === undefined) {\n                    return undefined;\n                }\n                // make a new accidental;\n                return new pitch.Accidental(aps[i].accidental.alter);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Takes a pitch in C major and transposes it so that it has\n     * the same step position in the current key signature.\n     *\n     * @returns {music21.pitch.Pitch}\n     * @example\n     * var ks = new music21.key.KeySignature(-3)\n     * var p1 = new music21.pitch.Pitch('B')\n     * var p2 = ks.transposePitchFromC(p1)\n     * p2.name\n     * // \"D\"\n     * var p3 = new music21.pitch.Pitch('G-')\n     * var p4 = ks.transposePitchFromC(p3)\n     * p4.name\n     * // \"B--\"\n     */\n    transposePitchFromC(p) {\n        let transInterval;\n        let transTimes;\n        if (this.sharps === 0) {\n            return new pitch.Pitch(p.nameWithOctave);\n        } else if (this.sharps < 0) {\n            transTimes = Math.abs(this.sharps);\n            transInterval = new interval.Interval('P4');\n        } else {\n            transTimes = this.sharps;\n            transInterval = new interval.Interval('P5');\n        }\n        let newPitch = p;\n        for (let i = 0; i < transTimes; i++) {\n            newPitch = transInterval.transposePitch(newPitch);\n            if (i % 2 === 1) {\n                newPitch.octave -= 1;\n            }\n        }\n        return newPitch;\n    }\n}\nkey.KeySignature = KeySignature;\n\n/**\n * Create a Key object. Like a KeySignature but with ideas about Tonic, Dominant, etc.\n *\n * TODO: allow keyName to be a {@link music21.pitch.Pitch}\n * TODO: Scale mixin.\n *\n * @class Key\n * @memberof music21.key\n * @extends music21.key.KeySignature\n * @param {string} keyName -- a pitch name representing the key (w/ \"-\" for flat)\n * @param {string} [mode] -- if not given then the CASE of the keyName will be used (\"C\" => \"major\", \"c\" => \"minor\")\n */\nexport class Key extends KeySignature {\n    constructor(keyName, mode) {\n        if (keyName === undefined) {\n            keyName = 'C';\n        }\n        if (mode === undefined) {\n            const lowerCase = keyName.toLowerCase();\n            if (keyName === lowerCase) {\n                mode = 'minor';\n            } else {\n                mode = 'major';\n            }\n        }\n\n        const sharpsArray = 'A-- E-- B-- F- C- G- D- A- E- B- F C G D A E B F# C# G# D# A# E# B#'.split(\n            ' '\n        );\n        const sharpsIndex = sharpsArray.indexOf(keyName.toUpperCase());\n        if (sharpsIndex === -1) {\n            throw new Music21Exception('Cannot find the key for ' + keyName);\n        }\n        const modeShift = key.modeSharpsAlter[mode] || 0;\n        const sharps = sharpsIndex + modeShift - 11;\n        if (debug) {\n            console.log('Found sharps ' + sharps + ' for key: ' + keyName);\n        }\n        super(sharps);\n\n        this.tonic = new pitch.Pitch(keyName);\n        this.mode = mode;\n        this._scale = this.getScale();\n    }\n\n    stringInfo() {\n        return this.tonicPitchNameWithCase + ' ' + this.mode;\n    }\n    \n    get tonicPitchNameWithCase() {\n        let tonicName = this.tonic.name;\n        if (this.mode === 'major') {\n            tonicName = tonicName.toUpperCase();\n        } else if (this.mode === 'minor') {\n            tonicName = tonicName.toLowerCase();\n        }\n        return tonicName;\n    }\n    /**\n     * returns a {@link music21.scale.MajorScale} or {@link music21.scale.MinorScale}\n     * object from the pitch object.\n     *\n     * @param {string|undefined} [scaleType=this.mode] - the type of scale, or the mode.\n     * @returns {Object} A music21.scale.Scale subclass.\n     */\n    getScale(scaleType) {\n        if (scaleType === undefined) {\n            scaleType = this.mode;\n        }\n        const pitchObj = this.tonic;\n        if (scaleType === 'major') {\n            return new scale.MajorScale(pitchObj);\n        } else if (scaleType === 'minor') {\n            return new scale.MinorScale(pitchObj);\n        } else if (['harmonic minor', 'harmonic-minor'].includes(scaleType)) {\n            return new scale.HarmonicMinorScale(pitchObj);\n        } else if (['melodic minor', 'melodic-minor'].includes(scaleType)) {\n            return new scale.AscendingMelodicMinorScale(pitchObj);\n        } else {\n            return new scale.ConcreteScale(pitchObj);\n        }\n    }\n\n    // when scale.js adds functionality, it must be added here.\n    get isConcrete() {\n        return this._scale.isConcrete;\n    }\n    getPitches(...args) {\n        return this._scale.getPitches(...args);\n    }\n    pitchFromDegree(...args) {\n        return this._scale.pitchFromDegree(...args);\n    }\n    getScaleDegreeFromPitch(...args) {\n        return this._scale.getScaleDegreeFromPitch(...args);\n    }\n}\nkey.Key = Key;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/meter -- TimeSignature objects\n *\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as Vex from 'vexflow';\n\nimport { base } from './base.js';\nimport { beam } from './beam.js';\nimport { common } from './common.js';\nimport { duration } from './duration.js';\n\n/**\n * meter module. See {@link music21.meter} namespace for details.\n *\n * @exports music21/meter\n */\n\n/**\n * Meter and TimeSignature Classes (esp. {@link music21.meter.TimeSignature} ) and methods.\n *\n * @namespace music21.meter\n * @memberof music21\n * @requires music21/base\n * @requires music21/duration\n */\nexport const meter = {};\n\n/**\n * A MUCH simpler version of the music21p TimeSignature object.\n *\n * @class TimeSignature\n * @memberof music21.meter\n * @param {string} meterString - a string (\"4/4\", \"3/8\" etc.) to initialize the TimeSignature.\n * @property {int} [numerator=4]\n * @property {int} [denominator=4]\n * @property {Array<Array<int>>} beatGroups - groupings of beats; inner arrays are numerator, denominator\n * @property {string} ratioString - a string like \"4/4\"\n * @property {music21.duration.Duration} barDuration - a Duration object representing the expressed total length of the TimeSignature.\n */\nexport class TimeSignature extends base.Music21Object {\n    constructor(meterString) {\n        super();\n        this.classSortOrder = 4;\n        \n        this._numerator = 4;\n        this._denominator = 4;\n        this._beatGroups = [];\n        this._overwrittenBeatCount = undefined;\n        this._overwrittenBeatDuration = undefined;\n        if (typeof meterString === 'string') {\n            this.ratioString = meterString;\n        }\n    }\n    \n    stringInfo() {\n        return this.ratioString;\n    }\n    \n    get numerator() {\n        return this._numerator;\n    }\n    set numerator(s) {\n        this._numerator = s;\n    }\n    get denominator() {\n        return this._denominator;\n    }\n    set denominator(s) {\n        this._denominator = s;\n    }\n    get ratioString() {\n        return this.numerator.toString() + '/' + this.denominator.toString();\n    }\n    set ratioString(meterString) {\n        const meterList = meterString.split('/');\n        this.numerator = parseInt(meterList[0]);\n        this.denominator = parseInt(meterList[1]);\n        this._beatGroups = [];\n    }\n    get barDuration() {\n        const ql = 4.0 * this._numerator / this._denominator;\n        return new duration.Duration(ql);\n    }\n    get beatGroups() {\n        if (this._beatGroups.length === 0) {\n            this._beatGroups = this.computeBeatGroups();\n        }\n        return this._beatGroups;\n    }\n    set beatGroups(newGroups) {\n        this._beatGroups = newGroups;\n    }\n\n    /**\n     *  Get the beatCount from the numerator, assuming fast 6/8, etc.\n     *  unless .beatCount has been set manually.\n     */\n    get beatCount() {\n        if (this._overwrittenBeatCount !== undefined) {\n            return this._overwrittenBeatCount;\n        }\n        if (this.numerator > 3 && this.numerator % 3 === 0) {\n            return this.numerator / 3;\n        } else {\n            return this.numerator;\n        }\n    }\n    /**\n     *  Manually set the beatCount to an int.\n     */\n    set beatCount(overwrite) {\n        this._overwrittenBeatCount = overwrite;\n        return overwrite;\n    }\n\n    /**\n     * Gets a single duration.Duration object representing\n     * the length of a beat in this time signature (using beatCount)\n     * or, if set manually, it can return a list of Durations For\n     * asymmetrical meters.\n     */\n    get beatDuration() {\n        const dur = this.barDuration;\n        dur.quarterLength /= this.beatCount;\n        return dur;\n    }\n    /**\n     * Set beatDuration to a duration.Duration object or\n     * if the client can handle it, a list of Duration objects...\n     */\n    set beatDuration(overwrite) {\n        this._overwrittenBeatDuration = overwrite;\n    }\n\n    /**\n     * Compute the Beat Group according to this time signature.\n     *\n     * @returns {Array<Array<int>>} a list of numerator and denominators, find a list of beat groups.\n     */\n    computeBeatGroups() {\n        const tempBeatGroups = [];\n        let numBeats = this.numerator;\n        let beatValue = this.denominator;\n        if (beatValue < 8 && numBeats >= 5) {\n            const beatsToEighthNoteRatio = 8 / beatValue; // hopefully Int -- right Brian Ferneyhough?\n            beatValue = 8;\n            numBeats *= beatsToEighthNoteRatio;\n        }\n\n        if (beatValue >= 8) {\n            while (numBeats >= 5) {\n                tempBeatGroups.push([3, beatValue]);\n                numBeats -= 3;\n            }\n            if (numBeats === 4) {\n                tempBeatGroups.push([2, beatValue]);\n                tempBeatGroups.push([2, beatValue]);\n            } else if (numBeats > 0) {\n                tempBeatGroups.push([numBeats, beatValue]);\n            }\n        } else if (beatValue === 2) {\n            tempBeatGroups.push([1, 2]);\n        } else if (beatValue <= 1) {\n            tempBeatGroups.push([1, 1]);\n        } else {\n            // 4/4, 2/4, 3/4, standard stuff\n            tempBeatGroups.push([2, 8]);\n        }\n        return tempBeatGroups;\n    }\n\n    /**\n     * Return a span of [start, end] for the current beat/beam grouping\n     */\n    offsetToSpan(offset) {\n        const beatDuration = this.beatDuration.quarterLength;\n        const beatsFromStart = Math.floor(offset / beatDuration);\n        const start = beatsFromStart * beatDuration;\n        const end = start + beatDuration;\n        return [start, end];\n    }\n\n    /**\n     * @param {Iterable} srcStream - a stream of elements.\n     * @param {Object} options - an object with measureStartOffset\n     */\n    getBeams(srcStream, options) {\n        const params = { measureStartOffset: 0.0 };\n        common.merge(params, options);\n        const measureStartOffset = params.measureStartOffset;\n        let beamsList = beam.Beams.naiveBeams(srcStream);\n        beamsList = beam.Beams.removeSandwichedUnbeamables(beamsList);\n        const fixBeamsOneElementDepth = (i, el, depth) => {\n            const beams = beamsList[i];\n            if (!beams || beams === undefined) {\n                return;\n            }\n            const beamNumber = depth + 1;\n            if (!(beams.getNumbers().includes(beamNumber))) {\n                return;\n            }\n            const dur = el.duration;\n            const pos = el.offset + measureStartOffset;\n\n            const start = pos; // opFrac\n            const end = pos + dur.quarterLength; // opFrac;\n            const startNext = end;\n            const isLast = (i === srcStream.length - 1);\n            const isFirst = (i === 0);\n            let beamNext;\n            let beamPrevious;\n            if (!isFirst) {\n                beamPrevious = beamsList[i - 1];\n            }\n            if (!isLast) {\n                beamNext = beamsList[i + 1];\n            }\n            const [archetypeSpanStart, archetypeSpanEnd] = this.offsetToSpan(start);\n            let archetypeSpanNextStart = 0.0;\n            if (beamNext !== undefined) {\n                archetypeSpanNextStart = this.offsetToSpan(startNext)[0];\n            }\n            if (start === archetypeSpanStart && end === archetypeSpanEnd) {\n                beamsList[i] = undefined;\n                return;\n            }\n\n            let beamType;\n            if (isFirst) {\n                beamType = 'start';\n                if (beamNext === undefined || !(beamNext.getNumbers().includes(beamNumber))) {\n                    beamType = 'partial-right';\n                }\n            } else if (isLast) {\n                beamType = 'start';\n                if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {\n                    beamType = 'partial-left';\n                }\n            } else if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {\n                if (beamNumber === 1 && beamNext === undefined) {\n                    beamsList[i] = undefined;\n                    return;\n                } else if (beamNext === undefined && beamNumber > 1) {\n                    beamType = 'partial-left';\n                } else if (startNext >= archetypeSpanEnd) {\n                    beamType = 'partial-left';\n                } else if (beamNext === undefined || !(beamNext.getNumbers().includes(beamNumber))) {\n                    beamType = 'partial-right';\n                } else {\n                    beamType = 'start';\n                }\n            } else if (beamPrevious !== undefined\n                        && beamPrevious.getNumbers().includes(beamNumber)\n                        && ['stop', 'partial-left'].includes(beamPrevious.getTypeByNumber(beamNumber))\n                       ) {\n                if (beamNext !== undefined) {\n                    beamType = 'start';\n                } else {\n                    beamType = 'partial-left';\n                }\n            } else if (beamNext === undefined || !beamNext.getNumbers().includes(beamNumber)) {\n                beamType = 'stop';\n            } else if (startNext < archetypeSpanEnd) {\n                beamType = 'continue';\n            } else if (startNext >= archetypeSpanNextStart) {\n                beamType = 'stop';\n            } else {\n                console.warn('Cannot match beamType');\n                return;\n            }\n            beams.setByNumber(beamNumber, beamType);\n        };\n\n        for (let depth = 0; depth < beam.beamableDurationTypes.length; depth++) {\n            let i = 0;\n            for (const el of srcStream) {\n                fixBeamsOneElementDepth(i, el, depth);\n                i += 1;\n            }\n        }\n\n        beamsList = beam.Beams.sanitizePartialBeams(beamsList);\n        beamsList = beam.Beams.mergeConnectingPartialBeams(beamsList);\n        return beamsList;\n    }\n\n    /**\n     * Compute the Beat Group according to this time signature for VexFlow. For beaming.\n     *\n     * @param {Vex} Vex - a reference to the Vex object\n     * @returns {Array<Vex.Flow.Fraction>} a list of numerator and denominator groups, for VexFlow\n     */\n    vexflowBeatGroups() {\n        const tempBeatGroups = this.beatGroups;\n        // console.log(tempBeatGroups);\n        const vfBeatGroups = [];\n        for (let i = 0; i < tempBeatGroups.length; i++) {\n            const bg = tempBeatGroups[i];\n            vfBeatGroups.push(new Vex.Flow.Fraction(bg[0], bg[1]));\n        }\n        return vfBeatGroups;\n\n        //  if (numBeats % 3 == 0 && beatValue < 4) {\n        //  // 6/8, 3/8, 9/8, etc.\n        //  numBeats = numBeats / 3;\n        //  beatValue = beatValue / 3;\n        //  }\n    }\n}\n\nmeter.TimeSignature = TimeSignature;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/instrument -- instrument objects\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\n\n/**\n * Instrument module, see {@link music21.instrument}\n *\n * @exports music21/instrument\n */\n\n/**\n * Looking for the {@link music21.instrument.Instrument} object? :-)\n *\n * @namespace music21.instrument\n * @memberof music21\n * @requires music21/base\n */\nexport const instrument = {};\n\n/**\n * Represents an instrument.  instrumentNames are found in the ext/soundfonts directory\n *\n * See {@link music21.miditools} and esp. `loadSoundfont` for a way of loading soundfonts into\n * instruments.\n *\n * @class Instrument\n * @memberof music21.instrument\n * @param {string} instrumentName\n * @property {string|undefined} partId\n * @property {string|undefined} partName\n * @property {string|undefined} partAbbreviation\n * @property {string|undefined} instrumentId\n * @property {string|undefined} instrumentName\n * @property {string|undefined} instrumentAbbreviation\n * @property {int|undefined} midiProgram\n * @property {int|undefined} midiChannel\n * @property {int|undefined} lowestNote\n * @property {int|undefined} highestNote\n * @property {music21.interval.Interval|undefined} transposition\n * @property {Boolean} inGMPercMap=false\n * @property {string|undefined} soundfontFn\n * @property {string|undefined} oggSoundfont - url of oggSoundfont for this instrument\n * @property {string|undefined} mp3Soundfont - url of mp3Soundfont for this instrument\n */\nclass Instrument extends base.Music21Object {\n    constructor(instrumentName) {\n        super();\n        this.classSortOrder = -25;\n\n        this.partId = undefined;\n        this.partName = undefined;\n        this.partAbbreviation = undefined;\n\n        this.instrumentId = undefined;\n        this.instrumentName = instrumentName;\n        this.instrumentAbbreviation = undefined;\n        this.midiProgram = undefined;\n        this._midiChannel = undefined;\n\n        this.lowestNote = undefined;\n        this.highestNote = undefined;\n\n        this.transpostion = undefined;\n\n        this.inGMPercMap = false;\n        this.soundfontFn = undefined;\n\n        if (instrumentName !== undefined) {\n            instrument.find(instrumentName, this);\n        }\n    }\n    /**\n     * Assign an instrument to an unused midi channel.\n     *\n     * Will use the global list of used channels (`music21.instrument.Instrument.usedChannels`)\n     * if not given.  Assigns up to `music21.instrument.maxMidi` channels (16)\n     * Skips 10 unless this.inGMPercMap is true\n     *\n     * @param {int[]} [usedChannels]\n     * @returns {number|undefined}\n     */\n    autoAssignMidiChannel(usedChannels) {\n        if (usedChannels === undefined) {\n            usedChannels = instrument.usedChannels;\n        }\n        let startChannel = 0;\n        if (this.inGMPercMap) {\n            startChannel = 10;\n        }\n        for (let ch = startChannel; ch < instrument.maxMidi; ch++) {\n            if (ch % 16 === 10 && this.inGMPercMap !== true) {\n                continue; // skip 10 / percussion.\n            }\n            if (\n                usedChannels[ch] === undefined\n                || usedChannels[ch] === this.midiProgram\n            ) {\n                usedChannels[ch] = this.midiProgram;\n                this.midiChannel = ch;\n                return ch;\n            }\n        }\n        // TODO: no channels! throw exception!\n        return undefined;\n    }\n    get oggSoundfont() {\n        return this.soundfontFn + '-ogg.js';\n    }\n    get mp3Soundfont() {\n        return this.soundfontFn + '-mp3.js';\n    }\n    get midiChannel() {\n        if (this._midiChannel === undefined) {\n            this.autoAssignMidiChannel();\n        }\n        return this._midiChannel;\n    }\n    set midiChannel(ch) {\n        this._midiChannel = ch;\n    }\n}\ninstrument.Instrument = Instrument;\n\ninstrument.usedChannels = []; // differs from m21p -- stored midiProgram numbers\ninstrument.maxMidi = 16;\n\ninstrument.info = [\n    { fn: 'acoustic_grand_piano', name: 'Acoustic Grand Piano', midiNumber: 0 },\n    {\n        fn: 'bright_acoustic_piano',\n        name: 'Bright Acoustic Piano',\n        midiNumber: 1,\n    },\n    { fn: 'electric_grand_piano', name: 'Electric Grand Piano', midiNumber: 2 },\n    { fn: 'honkytonk_piano', name: 'Honky-tonk Piano', midiNumber: 3 },\n    { fn: 'electric_piano_1', name: 'Electric Piano 1', midiNumber: 4 },\n    { fn: 'electric_piano_2', name: 'Electric Piano 2', midiNumber: 5 },\n    { fn: 'harpsichord', name: 'Harpsichord', midiNumber: 6 },\n    { fn: 'clavinet', name: 'Clavinet', midiNumber: 7 },\n    { fn: 'celesta', name: 'Celesta', midiNumber: 8 },\n    { fn: 'glockenspiel', name: 'Glockenspiel', midiNumber: 9 },\n    { fn: 'music_box', name: 'Music Box', midiNumber: 10 },\n    { fn: 'vibraphone', name: 'Vibraphone', midiNumber: 11 },\n    { fn: 'marimba', name: 'Marimba', midiNumber: 12 },\n    { fn: 'xylophone', name: 'Xylophone', midiNumber: 13 },\n    { fn: 'tubular_bells', name: 'Tubular Bells', midiNumber: 14 },\n    { fn: 'dulcimer', name: 'Dulcimer', midiNumber: 15 },\n    { fn: 'drawbar_organ', name: 'Drawbar Organ', midiNumber: 16 },\n    { fn: 'percussive_organ', name: 'Percussive Organ', midiNumber: 17 },\n    { fn: 'rock_organ', name: 'Rock Organ', midiNumber: 18 },\n    { fn: 'church_organ', name: 'Church Organ', midiNumber: 19 },\n    { fn: 'reed_organ', name: 'Reed Organ', midiNumber: 20 },\n    { fn: 'accordion', name: 'Accordion', midiNumber: 21 },\n    { fn: 'harmonica', name: 'Harmonica', midiNumber: 22 },\n    { fn: 'tango_accordion', name: 'Tango Accordion', midiNumber: 23 },\n    {\n        fn: 'acoustic_guitar_nylon',\n        name: 'Acoustic Guitar (nylon)',\n        midiNumber: 24,\n    },\n    {\n        fn: 'acoustic_guitar_steel',\n        name: 'Acoustic Guitar (steel)',\n        midiNumber: 25,\n    },\n    {\n        fn: 'electric_guitar_jazz',\n        name: 'Electric Guitar (jazz)',\n        midiNumber: 26,\n    },\n    {\n        fn: 'electric_guitar_clean',\n        name: 'Electric Guitar (clean)',\n        midiNumber: 27,\n    },\n    {\n        fn: 'electric_guitar_muted',\n        name: 'Electric Guitar (muted)',\n        midiNumber: 28,\n    },\n    { fn: 'overdriven_guitar', name: 'Overdriven Guitar', midiNumber: 29 },\n    { fn: 'distortion_guitar', name: 'Distortion Guitar', midiNumber: 30 },\n    { fn: 'guitar_harmonics', name: 'Guitar Harmonics', midiNumber: 31 },\n    { fn: 'acoustic_bass', name: 'Acoustic Bass', midiNumber: 32 },\n    {\n        fn: 'electric_bass_finger',\n        name: 'Electric Bass (finger)',\n        midiNumber: 33,\n    },\n    { fn: 'electric_bass_pick', name: 'Electric Bass (pick)', midiNumber: 34 },\n    { fn: 'fretless_bass', name: 'Fretless Bass', midiNumber: 35 },\n    { fn: 'slap_bass_1', name: 'Slap Bass 1', midiNumber: 36 },\n    { fn: 'slap_bass_2', name: 'Slap Bass 2', midiNumber: 37 },\n    { fn: 'synth_bass_1', name: 'Synth Bass 1', midiNumber: 38 },\n    { fn: 'synth_bass_2', name: 'Synth Bass 2', midiNumber: 39 },\n    { fn: 'violin', name: 'Violin', midiNumber: 40 },\n    { fn: 'viola', name: 'Viola', midiNumber: 41 },\n    { fn: 'cello', name: 'Cello', midiNumber: 42 },\n    { fn: 'contrabass', name: 'Contrabass', midiNumber: 43 },\n    { fn: 'tremolo_strings', name: 'Tremolo Strings', midiNumber: 44 },\n    { fn: 'pizzicato_strings', name: 'Pizzicato Strings', midiNumber: 45 },\n    { fn: 'orchestral_harp', name: 'Orchestral Harp', midiNumber: 46 },\n    { fn: 'timpani', name: 'Timpani', midiNumber: 47 },\n    { fn: 'string_ensemble_1', name: 'String Ensemble 1', midiNumber: 48 },\n    { fn: 'string_ensemble_2', name: 'String Ensemble 2', midiNumber: 49 },\n    { fn: 'synth_strings_1', name: 'Synth Strings 1', midiNumber: 50 },\n    { fn: 'synth_strings_2', name: 'Synth Strings 2', midiNumber: 51 },\n    { fn: 'choir_aahs', name: 'Choir Aahs', midiNumber: 52 },\n    { fn: 'voice_oohs', name: 'Voice Oohs', midiNumber: 53 },\n    { fn: 'synth_choir', name: 'Synth Choir', midiNumber: 54 },\n    { fn: 'orchestra_hit', name: 'Orchestra Hit', midiNumber: 55 },\n    { fn: 'trumpet', name: 'Trumpet', midiNumber: 56 },\n    { fn: 'trombone', name: 'Trombone', midiNumber: 57 },\n    { fn: 'tuba', name: 'Tuba', midiNumber: 58 },\n    { fn: 'muted_trumpet', name: 'Muted Trumpet', midiNumber: 59 },\n    { fn: 'french_horn', name: 'French Horn', midiNumber: 60 },\n    { fn: 'brass_section', name: 'Brass Section', midiNumber: 61 },\n    { fn: 'synth_brass_1', name: 'Synth Brass 1', midiNumber: 62 },\n    { fn: 'synth_brass_2', name: 'Synth Brass 2', midiNumber: 63 },\n    { fn: 'soprano_sax', name: 'Soprano Sax', midiNumber: 64 },\n    { fn: 'alto_sax', name: 'Alto Sax', midiNumber: 65 },\n    { fn: 'tenor_sax', name: 'Tenor Sax', midiNumber: 66 },\n    { fn: 'baritone_sax', name: 'Baritone Sax', midiNumber: 67 },\n    { fn: 'oboe', name: 'Oboe', midiNumber: 68 },\n    { fn: 'english_horn', name: 'English Horn', midiNumber: 69 },\n    { fn: 'bassoon', name: 'Bassoon', midiNumber: 70 },\n    { fn: 'clarinet', name: 'Clarinet', midiNumber: 71 },\n    { fn: 'piccolo', name: 'Piccolo', midiNumber: 72 },\n    { fn: 'flute', name: 'Flute', midiNumber: 73 },\n    { fn: 'recorder', name: 'Recorder', midiNumber: 74 },\n    { fn: 'pan_flute', name: 'Pan Flute', midiNumber: 75 },\n    { fn: 'blown_bottle', name: 'Blown bottle', midiNumber: 76 },\n    { fn: 'shakuhachi', name: 'Shakuhachi', midiNumber: 77 },\n    { fn: 'whistle', name: 'Whistle', midiNumber: 78 },\n    { fn: 'ocarina', name: 'Ocarina', midiNumber: 79 },\n    { fn: 'lead_1_square', name: 'Lead 1 (square)', midiNumber: 80 },\n    { fn: 'lead_2_sawtooth', name: 'Lead 2 (sawtooth)', midiNumber: 81 },\n    { fn: 'lead_3_calliope', name: 'Lead 3 (calliope)', midiNumber: 82 },\n    { fn: 'lead_4_chiff', name: 'Lead 4 chiff', midiNumber: 83 },\n    { fn: 'lead_5_charang', name: 'Lead 5 (charang)', midiNumber: 84 },\n    { fn: 'lead_6_voice', name: 'Lead 6 (voice)', midiNumber: 85 },\n    { fn: 'lead_7_fifths', name: 'Lead 7 (fifths)', midiNumber: 86 },\n    { fn: 'lead_8_bass__lead', name: 'Lead 8 (bass + lead)', midiNumber: 87 },\n    { fn: 'pad_1_new_age', name: 'Pad 1 (new age)', midiNumber: 88 },\n    { fn: 'pad_2_warm', name: 'Pad 2 (warm)', midiNumber: 89 },\n    { fn: 'pad_3_polysynth', name: 'Pad 3 (polysynth)', midiNumber: 90 },\n    { fn: 'pad_4_choir', name: 'Pad 4 (choir)', midiNumber: 91 },\n    { fn: 'pad_5_bowed', name: 'Pad 5 (bowed)', midiNumber: 92 },\n    { fn: 'pad_6_metallic', name: 'Pad 6 (metallic)', midiNumber: 93 },\n    { fn: 'pad_7_halo', name: 'Pad 7 (halo)', midiNumber: 94 },\n    { fn: 'pad_8_sweep', name: 'Pad 8 (sweep)', midiNumber: 95 },\n    { fn: 'fx_1_rain', name: 'FX 1 (rain)', midiNumber: 96 },\n    { fn: 'fx_2_soundtrack', name: 'FX 2 (soundtrack)', midiNumber: 97 },\n    { fn: 'fx_3_crystal', name: 'FX 3 (crystal)', midiNumber: 98 },\n    { fn: 'fx_4_atmosphere', name: 'FX 4 (atmosphere)', midiNumber: 99 },\n    { fn: 'fx_5_brightness', name: 'FX 5 (brightness)', midiNumber: 100 },\n    { fn: 'fx_6_goblins', name: 'FX 6 (goblins)', midiNumber: 101 },\n    { fn: 'fx_7_echoes', name: 'FX 7 (echoes)', midiNumber: 102 },\n    { fn: 'fx_8_scifi', name: 'FX 8 (sci-fi)', midiNumber: 103 },\n    { fn: 'sitar', name: 'Sitar', midiNumber: 104 },\n    { fn: 'banjo', name: 'Banjo', midiNumber: 105 },\n    { fn: 'shamisen', name: 'Shamisen', midiNumber: 106 },\n    { fn: 'koto', name: 'Koto', midiNumber: 107 },\n    { fn: 'kalimba', name: 'Kalimba', midiNumber: 108 },\n    { fn: 'bagpipe', name: 'Bagpipe', midiNumber: 109 },\n    { fn: 'fiddle', name: 'Fiddle', midiNumber: 110 },\n    { fn: 'shanai', name: 'Shanai', midiNumber: 111 },\n    { fn: 'tinkle_bell', name: 'Tinkle Bell', midiNumber: 112 },\n    { fn: 'agogo', name: 'Agogo', midiNumber: 113 },\n    { fn: 'steel_drums', name: 'Steel Drums', midiNumber: 114 },\n    { fn: 'woodblock', name: 'Woodblock', midiNumber: 115 },\n    { fn: 'taiko_drum', name: 'Taiko Drum', midiNumber: 116 },\n    { fn: 'melodic_tom', name: 'Melodic Tom', midiNumber: 117 },\n    { fn: 'synth_drum', name: 'Synth Drum', midiNumber: 118 },\n    { fn: 'reverse_cymbal', name: 'Reverse Cymbal', midiNumber: 119 },\n    { fn: 'guitar_fret_noise', name: 'Guitar Fret Noise', midiNumber: 120 },\n    { fn: 'breath_noise', name: 'Breath Noise', midiNumber: 121 },\n    { fn: 'seashore', name: 'Seashore', midiNumber: 122 },\n    { fn: 'bird_tweet', name: 'Bird Tweet', midiNumber: 123 },\n    { fn: 'telephone_ring', name: 'Telephone Ring', midiNumber: 124 },\n    { fn: 'helicopter', name: 'Helicopter', midiNumber: 125 },\n    { fn: 'applause', name: 'Applause', midiNumber: 126 },\n    { fn: 'gunshot', name: 'Gunshot', midiNumber: 127 },\n];\n\n/**\n * Find information for a given instrument (by filename or name)\n * and load it into an instrument object.\n *\n * @function music21.instrument.find\n * @memberof music21.instrument\n * @param {string} fn - name or filename of instrument\n * @param {music21.instrument.Instrument} [inst] - instrument object to load into\n * @returns {music21.instrument.Instrument|undefined}\n */\ninstrument.find = function instrument_find(fn, inst) {\n    if (inst === undefined) {\n        inst = new instrument.Instrument();\n    }\n    for (let i = 0; i < instrument.info.length; i++) {\n        const info = instrument.info[i];\n        if (info.fn === fn || info.name === fn) {\n            inst.soundfontFn = info.fn;\n            inst.instrumentName = info.name;\n            inst.midiProgram = info.midiNumber;\n            return inst;\n        }\n    }\n    return undefined;\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/renderOptions -- an object that defines the render options for a Stream\n *\n * note: no parallel in music21p\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { common } from './common.js';\n/**\n * renderOptions module, see {@link music21.renderOptions}\n *\n * @exports music21/renderOptions\n */\n/**\n * Options for rendering a stream\n *\n * @namespace music21.renderOptions\n * @memberof music21\n */\nexport const renderOptions = {};\n\n/**\n * An object that contains information on rendering the current stream\n *\n * Found on every Stream as `.renderOptions`\n *\n * @class RenderOptions\n * @memberof music21.renderOptions\n */\nexport class RenderOptions {\n    constructor() {\n        const defaultOptions = {\n            displayClef: true,\n            displayTimeSignature: true,\n            displayKeySignature: true,\n\n            scaleFactor: { x: 0.7, y: 0.7 },\n\n            top: 0,\n            left: undefined,\n            width: undefined,\n            overriddenWidth: undefined,\n            height: undefined,\n            naiveHeight: 120,\n\n            systemIndex: 0,\n            partIndex: 0,\n            measureIndex: 0,\n\n            systemMeasureIndex: 0,\n            systemPadding: undefined,\n            naiveSystemPadding: 40,\n\n            stemDirection: undefined,\n\n            maxSystemWidth: undefined,\n            rightBarline: undefined,\n            staffLines: 5,\n            staffConnectors: ['single', 'brace'],\n            staffPadding: 60, // width...\n            events: {\n                click: 'play',\n                dblclick: undefined,\n                // resize\n            },\n            startNewSystem: false,\n            startNewPage: false,\n            showMeasureNumber: undefined,\n        };\n        common.merge(this, defaultOptions);\n    }\n}\nrenderOptions.RenderOptions = RenderOptions;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/vfShow -- Vexflow integration\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport * as $ from 'jquery';\nimport * as Vex from 'vexflow';\n\nimport { clef } from './clef.js';\nimport { debug } from './debug.js';\nimport { duration } from './duration.js';\n\nconst _clefSingleton = new clef.TrebleClef();\n\n/**\n * for rendering vexflow. Will eventually go to music21/converter/vexflow\n *\n * See {@link music21.vfShow} namespace for details\n *\n * @exports music21/vfShow\n */\n/**\n * Vexflow display related objects and methods.\n *\n * @namespace music21.vfShow\n * @memberof music21\n * @requires music21/common\n * @requires vexflow\n */\nexport const vfShow = {};\n\n/**\n * Represents a stack of objects that need to be rendered together.\n *\n * An intermediary state for showing created by {@link music21.vfShow.Renderer}.\n *\n * @class RenderStack\n * @memberof music21.vfShow\n * @property {Array<Vex.Flow.Voice>} voices - Vex.Flow.Voice objects\n * @property {Array<music21.stream.Stream>} streams - {@link music21.stream.Stream} objects\n * associated with the voices\n * @property {Array} textVoices - Vex.Flow.Voice objects for the text.\n */\nexport class RenderStack {\n    constructor() {\n        this.voices = [];\n        this.streams = [];\n        this.textVoices = [];\n        this.voiceToStreamMapping = new Map();\n    }\n    /**\n     * @returns {Array} this.voices and this.textVoices as one array\n     */\n    allTickables() {\n        const t = [];\n        t.push(...this.voices);\n        t.push(...this.textVoices);\n        return t;\n    }\n    /**\n     * @returns {Array<Array>} each array represents one staff....\n     * where this.voices and this.textVoices are all in that staff...\n     */\n    tickablesByStave() {\n        const tickablesByStave = []; // a list of lists of tickables being placed on the same Stave.\n        const knownStaves = []; // a list of Vex.Flow.Stave objects...\n\n        for (const t of this.allTickables()) {\n            const thisStaveIndex = knownStaves.indexOf(t.stave);\n            let currentStaveHolder;\n            if (thisStaveIndex === -1) {\n                knownStaves.push(t.stave);\n                currentStaveHolder = [];\n                tickablesByStave.push(currentStaveHolder);\n            } else {\n                currentStaveHolder = tickablesByStave[thisStaveIndex];\n            }\n            currentStaveHolder.push(t);\n        }\n        return tickablesByStave;\n    }\n}\nvfShow.RenderStack = RenderStack;\n\n/**\n * Renderer is a function that takes a stream, an\n * optional existing canvas or SVG element and a DOM\n * element where the canvas or SVG element should be placed\n * and renders the stream as Vexflow on the\n * canvas or svg element, placing it then in the where\n * DOM.\n *\n * \"s\" can be any type of Stream.\n *\n * \"div\" and \"where\" can be either a DOM\n * element or a jQuery object.\n *\n * @class Renderer\n * @memberof music21.vfShow\n * @param {music21.stream.Stream} s - main stream to render\n * @param {div} [div] - existing canvas or div-surroundingSVG element\n * @param {Node|jQuery} [where=document.body] - where to render the stream\n * @property {Vex.Flow.Renderer} vfRenderer - a Vex.Flow.Renderer to use\n * (will create if not existing)\n * @property {string} rendererType - canvas or svg\n * @property {Vex.Flow.Context} ctx - a Vex.Flow.Context (Canvas or SVG) to use.\n * @property {div} div - div-with-svg-or-canvas element\n * @property {jQuery} $div - jQuery div or canvas element\n * @property {jQuery} $where - jQuery element to render onto\n * @property {Vex.Flow.Formatter} activeFormatter - formatter\n * @property {Array<Vex.Flow.Beam>} beamGroups - beamGroups\n * @property {Array<Vex.Flow.StaveTie>} vfTies - ties as instances of Vex.Flow.StaveTie\n * @property {Array<number>} systemBreakOffsets - where to break the systems\n * @property {Array<Vex.Flow.Tuplet>} vfTuplets - tuplets represented in Vexflow\n * @property {Array<music21.vfShow.RenderStack>} stacks - array of RenderStack objects\n */\nexport class Renderer {\n    constructor(s, div, where) {\n        this.stream = s;\n        // this.streamType = s.classes[-1];\n        this.rendererType = 'svg';\n\n        this.div = undefined;\n        this.$div = undefined;\n        this.$where = undefined;\n        this.activeFormatter = undefined;\n        this._vfRenderer = undefined;\n        this._ctx = undefined;\n        this.beamGroups = [];\n        this.stacks = []; // an Array of RenderStacks: {voices: [Array of Vex.Flow.Voice objects],\n        //                                           streams: [Array of Streams, usually Measures]}\n        this.vfTies = [];\n        this.systemBreakOffsets = [];\n        this.vfTuplets = [];\n        // this.measureFormatters = [];\n        if (where !== undefined) {\n            if (where.jquery !== undefined) {\n                this.$where = where;\n            } else {\n                this.$where = $(where);\n            }\n        }\n        if (div !== undefined) {\n            if (div.jquery !== undefined) {\n                this.$div = div;\n                this.div = div[0];\n            } else {\n                this.div = div;\n                this.$div = $(div);\n            }\n        }\n    }\n\n    get vfRenderer() {\n        let backend;\n        if (this.rendererType === 'canvas') {\n            backend = Vex.Flow.Renderer.Backends.CANVAS;\n        } else {\n            backend = Vex.Flow.Renderer.Backends.SVG;\n        }\n\n        if (this._vfRenderer !== undefined) {\n            return this._vfRenderer;\n        } else {\n            this._vfRenderer = new Vex.Flow.Renderer(this.div, backend);\n            if (this.rendererType === 'svg') {\n                this._vfRenderer.resize(\n                    this.$div.attr('width'),\n                    this.$div.attr('height')\n                );\n            }\n            return this._vfRenderer;\n        }\n    }\n    set vfRenderer(vfr) {\n        this._vfRenderer = vfr;\n    }\n    get ctx() {\n        if (this._ctx !== undefined) {\n            return this._ctx;\n        } else {\n            this._ctx = this.vfRenderer.getContext();\n            if (\n                this.stream\n                && this.stream.renderOptions\n                && this.stream.renderOptions.scaleFactor.x\n                && this.stream.renderOptions.scaleFactor.y\n            ) {\n                this._ctx.scale(\n                    this.stream.renderOptions.scaleFactor.x,\n                    this.stream.renderOptions.scaleFactor.y\n                );\n            }\n            return this._ctx;\n        }\n    }\n    set ctx(ctx) {\n        this._ctx = ctx;\n    }\n    /**\n     *\n     * main function to render a Stream.\n     *\n     * if s is undefined, uses the stored Stream from\n     * the constructor object.\n     *\n     * @param {music21.stream.Stream} [s=this.stream]\n     */\n    render(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        let isScorelike = false;\n        let isPartlike = false;\n        const isFlat = s.isFlat;\n\n        if (s.isClassOrSubclass('Score')) {\n            isScorelike = true;\n        } else if (!isFlat && !s.get(0).isFlat) {\n            isScorelike = true;\n        } else if (!isFlat) {\n            isPartlike = true;\n        }\n        // requires organization Score -> Part -> Measure -> elements...\n        if (isScorelike) {\n            this.prepareScorelike(s);\n        } else if (isPartlike) {\n            this.preparePartlike(s);\n        } else {\n            this.prepareArrivedFlat(s);\n        }\n        this.formatMeasureStacks();\n        this.drawTies();\n        this.drawMeasureStacks();\n        this.drawBeamGroups();\n        this.drawTuplets();\n    }\n    /**\n     * Prepares a scorelike stream (i.e., one with parts or\n     * Streams that should be rendered vertically like parts)\n     * for rendering and adds Staff Connectors\n     *\n     * @param {music21.stream.Score} s - prepare a stream of parts (i.e., Score)\n     */\n    prepareScorelike(s) {\n        // console.log('prepareScorelike called');\n        //\n        const parts = s.parts;\n        for (const subStream of parts) {\n            this.preparePartlike(subStream);\n        }\n        this.addStaffConnectors(s);\n    }\n    /**\n     *\n     * Prepares a Partlike stream (that is one with Measures\n     * or substreams that should be considered like Measures)\n     * for rendering.\n     *\n     * @param {music21.stream.Part} p\n     */\n    preparePartlike(p) {\n        // console.log('preparePartlike called');\n        this.systemBreakOffsets = [];\n        const measureList = p.measures;\n        for (let i = 0; i < measureList.length; i++) {\n            const subStream = measureList.get(i);\n            if (subStream.renderOptions.startNewSystem) {\n                this.systemBreakOffsets.push(subStream.offset);\n            }\n            if (i === p.length - 1) {\n                subStream.renderOptions.rightBarline = 'end';\n            }\n            if (this.stacks[i] === undefined) {\n                this.stacks[i] = new vfShow.RenderStack();\n            }\n            this.prepareMeasure(subStream, this.stacks[i]);\n        }\n        this.prepareTies(p);\n    }\n    /**\n     *\n     * Prepares a score that arrived flat... sets up\n     * stacks and vfTies after calling prepareFlat\n     *\n     * @param {music21.stream.Stream} m - a flat stream (maybe a measure or voice)\n     */\n    prepareArrivedFlat(m) {\n        const stack = new vfShow.RenderStack();\n        this.prepareMeasure(m, stack);\n        this.stacks[0] = stack;\n        this.prepareTies(m);\n    }\n    /**\n     *\n     * Prepares a measure (w/ or w/o voices) or generic Stream -- makes accidentals,\n     * associates a Vex.Flow.Stave with the stream and\n     * returns a vexflow Voice object\n     *\n     * @param {music21.stream.Measure} m - a measure object (w or w/o voices)\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     */\n    prepareMeasure(m, stack) {\n        if (m.hasVoices === undefined || m.hasVoices() === false) {\n            this.prepareFlat(m, stack);\n        } else {\n            // get elements outside of voices;\n            const firstVoiceCopy = m.getElementsByClass('Voice').get(0).clone(false);\n            for (const el of m.getElementsNotOfClass('Voice')) {\n                firstVoiceCopy.insert(el.offset, el);\n            }\n            const rendOp = m.renderOptions; // get render options from Measure;\n            let stave;\n            for (const [i, voiceStream] of Array.from(m.getElementsByClass('Voice')).entries()) {\n                let voiceToRender = voiceStream;\n                if (i === 0) {\n                    voiceToRender = firstVoiceCopy;\n                }\n                stave = this.prepareFlat(voiceToRender, stack, stave, rendOp);\n                if (i === 0) {\n                    voiceStream.activeVFStave = voiceToRender.activeVFStave;\n                    voiceStream.storedVexflowStave = voiceToRender.activeVFStave;\n                }\n            }\n        }\n        return stack;\n    }\n    /**\n     * Main internal routine to prepare a flat stream\n     *\n     * @param {music21.stream.Stream} s - a flat stream object\n     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.\n     * @param {Vex.Flow.Stave} [optionalStave] - an optional existing stave.\n     * @param {Object} [optional_renderOp] - render options.\n     * Passed to {@link music21.vfShow.Renderer#renderStave}\n     * @returns {Vex.Flow.Stave} staff to return too\n     * (also changes the `stack` parameter and runs `makeNotation` on s)\n     */\n    prepareFlat(s, stack, optionalStave, optional_renderOp) {\n        s.makeNotation();\n        let stave;\n        if (optionalStave !== undefined) {\n            stave = optionalStave;\n        } else {\n            stave = this.renderStave(s, optional_renderOp);\n        }\n        s.activeVFStave = stave;\n        const vf_voice = this.getVoice(s, stave);\n        stack.voices.push(vf_voice);\n        stack.streams.push(s);\n        stack.voiceToStreamMapping.set(vf_voice, s);\n\n        if (s.hasLyrics()) {\n            stack.textVoices.push(this.getLyricVoice(s, stave));\n        }\n\n        return stave;\n    }\n    /**\n     * Render the Vex.Flow.Stave from a flat stream and draws it.\n     *\n     * Just draws the stave, not the notes, etc.\n     *\n     * @param {music21.stream.Stream} [m=this.stream] - a flat stream\n     * @param {Object} [optional_rendOp] - render options, passed\n     * to {@link music21.vfShow.Renderer#newStave} and {@link music21.vfShow.Renderer#setClefEtc}\n     * @returns {Vex.Flow.Stave} stave\n     */\n    renderStave(m, optional_rendOp) {\n        if (m === undefined) {\n            m = this.stream;\n        }\n        const ctx = this.ctx;\n        // stave will be passed in from Measure when we have Voices\n        const stave = this.newStave(m, optional_rendOp);\n\n        this.setClefEtc(m, stave, optional_rendOp);\n        stave.setContext(ctx);\n        stave.draw();\n        return stave;\n    }\n    /**\n     * Draws the Voices (music and text) from `this.stacks`\n     *\n     */\n    drawMeasureStacks() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.stacks.length; i++) {\n            const voices = this.stacks[i].allTickables();\n            for (let j = 0; j < voices.length; j++) {\n                const v = voices[j];\n                v.draw(ctx);\n            }\n        }\n    }\n    /**\n     * draws the tuplets.\n     *\n     */\n    drawTuplets() {\n        const ctx = this.ctx;\n        this.vfTuplets.forEach(vft => {\n            vft.setContext(ctx).draw();\n        });\n    }\n    /**\n     * draws the vfTies\n     *\n     */\n    drawTies() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.vfTies.length; i++) {\n            this.vfTies[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Finds all tied notes and creates the proper Vex.Flow.StaveTie objects in\n     * `this.vfTies`.\n     *\n     * @param {music21.stream.Part} p - a Part or similar object\n     */\n    prepareTies(p) {\n        const pf = p.flat.notesAndRests;\n        // console.log('newSystemsAt', this.systemBreakOffsets);\n        for (let i = 0; i < pf.length - 1; i++) {\n            const thisNote = pf.get(i);\n            if (thisNote.tie === undefined || thisNote.tie.type === 'stop') {\n                continue;\n            }\n            const nextNote = pf.get(i + 1);\n            let onSameSystem = true;\n            // this.systemBreakOffsets.length will be 0 for a flat score\n            for (let sbI = 0; sbI < this.systemBreakOffsets.length; sbI++) {\n                const thisSystemBreak = this.systemBreakOffsets[sbI];\n                if (\n                    thisNote.offset < thisSystemBreak\n                    && nextNote.offset >= thisSystemBreak\n                ) {\n                    onSameSystem = false;\n                    break;\n                }\n            }\n            if (onSameSystem) {\n                const vfTie = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                    last_indices: [0],\n                });\n                this.vfTies.push(vfTie);\n            } else {\n                // console.log('got me a tie across systemBreaks!');\n                const vfTie1 = new Vex.Flow.StaveTie({\n                    first_note: thisNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.vfTies.push(vfTie1);\n                const vfTie2 = new Vex.Flow.StaveTie({\n                    last_note: nextNote.activeVexflowNote,\n                    first_indices: [0],\n                });\n                this.vfTies.push(vfTie2);\n            }\n        }\n    }\n    /**\n     * Returns a Vex.Flow.Voice object with all the tickables (i.e., Notes, Voices, etc.)\n     *\n     * Does not draw it...\n     *\n     * @param {music21.stream.Stream} [s=this.stream] -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave - not optional (would never fly in Python...)\n     * @returns {Vex.Flow.Voice}\n     */\n    getVoice(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n\n        // gets a group of notes as a voice, but completely unformatted and not drawn.\n        const notes = this.vexflowNotes(s, stave);\n        const voice = this.vexflowVoice(s);\n        voice.setStave(stave);\n\n        voice.addTickables(notes);\n        return voice;\n    }\n    /**\n     * Returns a Vex.Flow.Voice with the lyrics set to render in the proper place.\n     *\n     * @param {music21.stream.Stream} s -- usually a Measure or Voice\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Vex.Flow.Voice}\n     */\n    getLyricVoice(s, stave) {\n        const textVoice = this.vexflowVoice(s);\n        const lyrics = this.vexflowLyrics(s, stave);\n        textVoice.setStave(stave);\n        textVoice.addTickables(lyrics);\n        return textVoice;\n    }\n    /**\n     * Aligns all of `this.stacks` (after they've been prepared) so they align properly.\n     *\n     */\n    formatMeasureStacks() {\n        // adds formats the voices, then adds the formatter information to every note in a voice...\n        for (let i = 0; i < this.stacks.length; i++) {\n            const stack = this.stacks[i];\n            const vf_voices = stack.voices;\n            const measuresOrVoices = stack.streams;\n            const formatter = this.formatVoiceGroup(stack);\n            for (let j = 0; j < measuresOrVoices.length; j++) {\n                const m = measuresOrVoices[j];\n                const v = vf_voices[j];\n                this.applyFormatterInformationToNotes(v.stave, m, formatter);\n            }\n        }\n    }\n    /**\n     * Formats a single voice group from a stack.\n     *\n     * @param {music21.vfShow.RenderStack} stack\n     * @param {Boolean} [autoBeam=measures[0].autoBeam]\n     * @returns {Vex.Flow.Formatter}\n     */\n    formatVoiceGroup(stack, autoBeam) {\n        // formats a group of voices to use the same formatter; returns the formatter\n        // if autoBeam is true then it will apply beams for each voice and put them in\n        // this.beamGroups;\n        const allTickables = stack.allTickables();\n        const vf_voices = stack.voices;\n        const measuresOrVoices = stack.streams;\n        if (autoBeam === undefined) {\n            autoBeam = measuresOrVoices[0].autoBeam;\n        }\n\n        const formatter = new Vex.Flow.Formatter();\n        // var minLength = formatter.preCalculateMinTotalWidth([voices]);\n        // console.log(minLength);\n        if (vf_voices.length === 0) {\n            return formatter;\n        }\n        let maxGlyphStart = 0; // find the stave with the farthest start point -- diff key sig, etc.\n        for (let i = 0; i < allTickables.length; i++) {\n            // console.log(voices[i], voices[i].stave, i);\n            if (allTickables[i].stave.getNoteStartX() > maxGlyphStart) {\n                maxGlyphStart = allTickables[i].stave.getNoteStartX();\n            }\n        }\n        for (let i = 0; i < allTickables.length; i++) {\n            allTickables[i].stave.setNoteStartX(maxGlyphStart); // corrected!\n        }\n        // TODO: should do the same for end_x -- for key sig changes, etc...\n\n        const stave = vf_voices[0].stave; // all staves should be same length, so does not matter;\n        const tickablesByStave = stack.tickablesByStave();\n        for (const staveTickables of tickablesByStave) {\n            formatter.joinVoices(staveTickables);\n        }\n        formatter.formatToStave(allTickables, stave);\n\n//        const vf_auto_stem = false;\n//        for (const voice of voices) {\n//            let activeBeamGroupNotes = [];\n//            for (let j = 0; j < voice.notes.length; j++) {\n//                const n = voice.notes[j];\n//                if (n.beams === undefined || !n.beams.getNumbers().includes(1)) {\n//                    continue;\n//                }\n//                const eighthNoteBeam = n.beams.getByNumber(1);\n//                if (eighthNoteBeam.type === 'start') {\n//                    activeBeamGroupNotes = [n];\n//                } else {\n//                    activeBeamGroupNotes.push(n);\n//                }\n//                if (eighthNoteBeam.type === 'stop') {\n//                    const vfBeam = new Vex.Flow.Beam(activeBeamGroupNotes, vf_auto_stem);\n//                    this.beamGroups.push(vfBeam);\n//                    activeBeamGroupNotes = []; // housekeeping, not really necessary...\n//                }\n//            }\n//        }\n\n        if (autoBeam) {\n            for (let i = 0; i < vf_voices.length; i++) {\n                // find beam groups -- n.b. this wipes out stemDirection. worth it usually...\n                const vf_voice = vf_voices[i];\n                const associatedStream = stack.voiceToStreamMapping.get(vf_voice);\n                let beatGroups;\n                if (\n                    associatedStream !== undefined\n                    && associatedStream.getSpecialContext('timeSignature') !== undefined\n                ) {\n                    beatGroups = associatedStream.getSpecialContext('timeSignature').vexflowBeatGroups(\n                        Vex\n                    );\n                    // TODO: getContextByClass...\n                    // console.log(beatGroups);\n                } else {\n                    beatGroups = [new Vex.Flow.Fraction(2, 8)]; // default beam groups\n                }\n                const beamGroups = Vex.Flow.Beam.applyAndGetBeams(\n                    vf_voice,\n                    undefined,\n                    beatGroups\n                );\n                this.beamGroups.push(...beamGroups);\n            }\n        }\n        return formatter;\n    }\n    /**\n     * Draws the beam groups.\n     *\n     */\n    drawBeamGroups() {\n        const ctx = this.ctx;\n        for (let i = 0; i < this.beamGroups.length; i++) {\n            this.beamGroups[i].setContext(ctx).draw();\n        }\n    }\n    /**\n     * Return a new Vex.Flow.Stave object, which represents\n     * a single MEASURE of notation in m21j\n     *\n     * @param {music21.stream.Stream} s\n     * @param {Object} [rendOp]\n     * @returns {Vex.Flow.Stave}\n     */\n    newStave(s, rendOp) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n        // measure level...\n        let width = rendOp.width;\n        if (width === undefined) {\n            width = s.estimateStaffLength() + rendOp.staffPadding;\n        }\n        let top = rendOp.top; // * rendOp.scaleFactor.y;\n        if (top === undefined) {\n            top = 0;\n        }\n        let left = rendOp.left;\n        if (left === undefined) {\n            left = 10;\n        }\n        // console.log('streamLength: ' + streamLength);\n        if (debug) {\n            console.log(\n                'creating new stave: left:'\n                    + left\n                    + ' top: '\n                    + top\n                    + ' width: '\n                    + width\n            );\n        }\n        const stave = new Vex.Flow.Stave(left, top, width);\n        return stave;\n    }\n    /**\n     * Sets the number of stafflines, puts the clef on the Stave,\n     * adds keySignature, timeSignature, and rightBarline\n     *\n     * @param {music21.stream.Stream} s\n     * @param {Vex.Flow.Stave} stave\n     * @param {Object} [rendOp=s.renderOptions] - a {@link music21.renderOptions.RenderOptions}\n     * object that might have\n     * `{showMeasureNumber: boolean, rightBarLine: string<{'single', 'double', 'end'}>}`\n     */\n    setClefEtc(s, stave, rendOp) {\n        if (rendOp === undefined) {\n            rendOp = s.renderOptions;\n        }\n\n\n        let sClef = s.getSpecialContext('clef')\n            || s.getContextByClass('Clef');\n\n        // this should not be necessary now that derivation is\n        // checked, but does not hurt.\n        if (sClef === undefined && s.length) {\n            // the clef context might be from something else in the stream...\n            const firstEl = s.get(0);\n            sClef = firstEl.getContextByClass('Clef');\n        }\n        // last resort\n        sClef = sClef || _clefSingleton;\n\n        this.setStafflines(s, stave);\n        if (rendOp.showMeasureNumber) {\n            stave.setMeasure(rendOp.measureIndex + 1);\n        }\n        if (rendOp.displayClef) {\n            let ottava;\n            const size = 'default';\n            if (sClef.octaveChange === 1) {\n                ottava = '8va';\n            } else if (sClef.octaveChange === -1) {\n                ottava = '8vb';\n            }\n            stave.addClef(sClef.name, size, ottava);\n        }\n        const context_ks = s.getSpecialContext('keySignature') || s.getContextByClass('KeySignature');\n        if (context_ks !== undefined && rendOp.displayKeySignature) {\n            const ksVFName = context_ks.majorName().replace(/-/g, 'b');\n            stave.addKeySignature(ksVFName);\n        }\n\n        const context_ts = s.getSpecialContext('timeSignature') || s.getContextByClass('TimeSignature');\n        if (context_ts !== undefined && rendOp.displayTimeSignature) {\n            stave.addTimeSignature(\n                context_ts.numerator.toString()\n                    + '/'\n                    + context_ts.denominator.toString()\n            );\n        }\n        if (rendOp.rightBarline !== undefined) {\n            const bl = rendOp.rightBarline;\n            const barlineMap = {\n                single: 'SINGLE',\n                double: 'DOUBLE',\n                end: 'END',\n            };\n            const vxBL = barlineMap[bl];\n            if (vxBL !== undefined) {\n                stave.setEndBarType(Vex.Flow.Barline.type[vxBL]);\n            }\n        }\n    }\n    /**\n     * Sets the number of stafflines properly for the Stave object.\n     *\n     * This method does not just set Vex.Flow.Stave#setNumLines() except\n     * if the number of lines is 0 or >=4, because the default in VexFlow is\n     * to show the bottom(top?), not middle, lines and that looks bad.\n     *\n     * @param {music21.stream.Stream} s - stream to get the `.staffLines`\n     * from `s.renderOptions` from -- should allow for overriding.\n     * @param {Vex.Flow.Stave} vexflowStave - stave to set the staff lines for.\n     */\n    setStafflines(s, vexflowStave) {\n        const rendOp = s.renderOptions;\n        if (rendOp.staffLines !== 5) {\n            if (rendOp.staffLines === 0) {\n                vexflowStave.setNumLines(0);\n            } else if (rendOp.staffLines === 1) {\n                // Vex.Flow.Stave.setNumLines hides all but the top line.\n                // this is better\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: false },\n                    { visible: true }, // show middle\n                    { visible: false },\n                    { visible: false },\n                ];\n            } else if (rendOp.staffLines === 2) {\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: false },\n                    { visible: true }, // show middle\n                    { visible: true },\n                    { visible: false },\n                ];\n            } else if (rendOp.staffLines === 3) {\n                vexflowStave.options.line_config = [\n                    { visible: false },\n                    { visible: true },\n                    { visible: true }, // show middle\n                    { visible: true },\n                    { visible: false },\n                ];\n            } else {\n                vexflowStave.setNumLines(rendOp.staffLines);\n            }\n        }\n    }\n    /**\n     * Gets the Vex.Flow.StaveNote objects from a Stream.\n     *\n     * Also changes `this.vfTuplets`.\n     *\n     * @param {music21.stream.Stream} [s=this.stream] - flat stream to find notes in\n     * @param {Vex.Flow.Stave} stave - Vex.Flow.Stave to render notes on to.\n     * @returns {Array<Vex.Flow.StaveNote>} notes to return\n     */\n    vexflowNotes(s, stave) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat stream, returns a list of voices...\n        const notes = [];\n        const vfTuplets = [];\n        let activeTuplet;\n        let activeTupletLength = 0.0;\n        let activeTupletVexflowNotes = [];\n        let sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef');\n        if (sClef === undefined && s.length) {\n            // TODO: follow Derivation...\n            const firstEl = s.get(0);\n            sClef = firstEl.getContextByClass('Clef');\n        }\n        if (sClef === undefined) {\n            sClef = _clefSingleton;\n        }\n\n        const options = { clef: sClef, stave };\n        for (const thisEl of s) {\n            if (\n                thisEl.isClassOrSubclass('GeneralNote')\n                && thisEl.duration !== undefined\n            ) {\n                // sets thisEl.activeVexflowNote -- may be overwritten but not so fast...\n                const vfn = thisEl.vexflowNote(options);\n                if (vfn === undefined) {\n                    console.error('Cannot create a vexflowNote from: ', thisEl);\n                    continue;\n                }\n                if (stave !== undefined) {\n                    vfn.setStave(stave);\n                }\n                notes.push(vfn);\n\n                // account for tuplets...\n                if (thisEl.duration.tuplets.length > 0) {\n                    // only support one tuplet per note -- like vexflow\n                    if (activeTuplet === undefined) {\n                        activeTuplet = thisEl.duration.tuplets[0];\n                    }\n                    activeTupletVexflowNotes.push(vfn);\n                    activeTupletLength += thisEl.duration.quarterLength;\n                    // console.log(activeTupletLength, activeTuplet.totalTupletLength());\n                    //\n                    // Add tuplet when complete.\n                    if (\n                        activeTupletLength\n                            >= activeTuplet.totalTupletLength()\n                        || Math.abs(\n                            activeTupletLength\n                                - activeTuplet.totalTupletLength()\n                        ) < 0.001\n                    ) {\n                        // console.log(activeTupletVexflowNotes);\n                        const tupletOptions = {\n                            num_notes: activeTuplet.numberNotesActual,\n                            notes_occupied: activeTuplet.numberNotesNormal,\n                        };\n                        // console.log('tupletOptions', tupletOptions);\n                        const vfTuplet = new Vex.Flow.Tuplet(\n                            activeTupletVexflowNotes,\n                            tupletOptions\n                        );\n                        if (activeTuplet.tupletNormalShow === 'ratio') {\n                            vfTuplet.setRatioed(true);\n                        }\n\n                        vfTuplets.push(vfTuplet);\n                        activeTupletLength = 0.0;\n                        activeTuplet = undefined;\n                        activeTupletVexflowNotes = [];\n                    }\n                }\n            }\n        }\n        if (activeTuplet !== undefined) {\n            console.warn('incomplete tuplet found in stream: ', s);\n        }\n        if (vfTuplets.length > 0) {\n            this.vfTuplets.push(...vfTuplets);\n        }\n        return notes;\n    }\n\n    /**\n     * Gets an Array of `Vex.Flow.TextNote` objects from any lyrics found in s\n     *\n     * @param {music21.stream.Stream} s - flat stream to search.\n     * @param {Vex.Flow.Stave} stave\n     * @returns {Array<Vex.Flow.TextNote>}\n     */\n    vexflowLyrics(s, stave) {\n        const getTextNote = (text, font, d, lyricObj) => {\n            // console.log(text, font, d);\n            const t1 = new Vex.Flow.TextNote({\n                text,\n                font,\n                duration: d.vexflowDuration,\n            })\n                .setLine(11)\n                .setStave(stave)\n                .setJustification(Vex.Flow.TextNote.Justification.LEFT);\n            if (lyricObj) {\n                t1.setStyle(lyricObj.style);\n            }\n            if (d.tuplets.length > 0) {\n                t1.applyTickMultiplier(d.tuplets[0].numberNotesNormal, d.tuplets[0].numberNotesActual);\n            }\n            return t1;\n        };\n\n        if (s === undefined) {\n            s = this.stream;\n        }\n        // runs on a flat, gapless, no-overlap stream, returns a list of TextNote objects...\n        const lyricsObjects = [];\n        for (const el of s) {\n            const lyricsArray = el.lyrics;\n            if (lyricsArray === undefined) {\n                continue;\n            }\n            let text;\n            let d = el.duration;\n            let addConnector = false;\n            let firstLyric;\n            const font = {\n                family: 'Serif',\n                size: 12,\n                weight: '',\n            };\n\n            if (lyricsArray.length === 0) {\n                text = '';\n            } else {\n                firstLyric = lyricsArray[0];\n                text = firstLyric.text;\n                if (text === undefined) {\n                    text = '';\n                }\n                if (\n                    firstLyric.syllabic === 'middle'\n                    || firstLyric.syllabic === 'begin'\n                ) {\n                    addConnector = ' ' + firstLyric.lyricConnector;\n                    const tempQl = el.duration.quarterLength / 2.0;\n                    d = new duration.Duration(tempQl);\n                }\n                if (firstLyric.style.fontFamily) {\n                    font.family = firstLyric.style.fontFamily;\n                }\n                if (firstLyric.style.fontSize) {\n                    font.size = firstLyric.style.fontSize;\n                }\n                if (firstLyric.style.fontWeight) {\n                    font.weight = firstLyric.style.fontWeight;\n                }\n            }\n            const t1 = getTextNote(text, font, d, firstLyric);\n            lyricsObjects.push(t1);\n            if (addConnector !== false) {\n                const connector = getTextNote(addConnector, font, d);\n                lyricsObjects.push(connector);\n            }\n        }\n        return lyricsObjects;\n    }\n    /**\n     * Creates a Vex.Flow.Voice of the appropriate length given a Stream.\n     *\n     * @param {music21.stream.Stream} s\n     * @returns {Vex.Flow.Voice}\n     */\n    vexflowVoice(s) {\n        const totalLength = s.duration.quarterLength;\n\n        let num1024 = Math.round(totalLength / (1 / 256));\n        let beatValue = 1024;\n\n        if (num1024 % 512 === 0) {\n            beatValue = 2;\n            num1024 /= 512;\n        } else if (num1024 % 256 === 0) {\n            beatValue = 4;\n            num1024 /= 256;\n        } else if (num1024 % 128 === 0) {\n            beatValue = 8;\n            num1024 /= 128;\n        } else if (num1024 % 64 === 0) {\n            beatValue = 16;\n            num1024 /= 64;\n        } else if (num1024 % 32 === 0) {\n            beatValue = 32;\n            num1024 /= 32;\n        } else if (num1024 % 16 === 0) {\n            beatValue = 64;\n            num1024 /= 16;\n        } else if (num1024 % 8 === 0) {\n            beatValue = 128;\n            num1024 /= 8;\n        } else if (num1024 % 4 === 0) {\n            beatValue = 256;\n            num1024 /= 4;\n        } else if (num1024 % 2 === 0) {\n            beatValue = 512;\n            num1024 /= 2;\n        }\n        // console.log('creating voice');\n        if (debug) {\n            console.log(\n                'New voice, num_beats: '\n                    + num1024.toString()\n                    + ' beat_value: '\n                    + beatValue.toString()\n            );\n        }\n        const vfv = new Vex.Flow.Voice({\n            num_beats: num1024,\n            beat_value: beatValue,\n            resolution: Vex.Flow.RESOLUTION,\n        });\n\n        // from vexflow/src/voice.js\n        //\n        // Modes allow the addition of ticks in three different ways:\n        //\n        // STRICT: This is the default. Ticks must fill the voice.\n        // SOFT:   Ticks can be added without restrictions.\n        // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n        //         tick length.\n        vfv.setMode(Vex.Flow.Voice.Mode.SOFT);\n        return vfv;\n    }\n    staffConnectorsMap(connectorType) {\n        const connectorMap = {\n            brace: Vex.Flow.StaveConnector.type.BRACE,\n            single: Vex.Flow.StaveConnector.type.SINGLE,\n            double: Vex.Flow.StaveConnector.type.DOUBLE,\n            bracket: Vex.Flow.StaveConnector.type.BRACKET,\n        };\n        return connectorMap[connectorType];\n    }\n\n    /**\n     * If a stream has parts (NOT CHECKED HERE) create and\n     * draw an appropriate Vex.Flow.StaveConnector\n     *\n     * @param {music21.stream.Score} s\n     */\n    addStaffConnectors(s) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const parts = s.parts;\n        const numParts = parts.length;\n        if (numParts < 2) {\n            return;\n        }\n\n        const firstPart = parts.get(0);\n        const lastPart = parts.get(-1);\n\n        const firstPartMeasures = firstPart.measures;\n        const lastPartMeasures = lastPart.measures;\n        const numMeasures = firstPartMeasures.length;\n\n        for (let mIndex = 0; mIndex < numMeasures; mIndex++) {\n            const thisPartMeasure = firstPartMeasures.get(mIndex);\n            const lastPartMeasure = lastPartMeasures.get(mIndex); // only needed once per system but\n            // good for symmetry.\n            if (thisPartMeasure.renderOptions.startNewSystem) {\n                let topVFStaff = thisPartMeasure.activeVFStave;\n                let bottomVFStaff = lastPartMeasure.activeVFStave;\n                if (topVFStaff === undefined) {\n                    if (!thisPartMeasure.isFlat) {\n                        const thisPartVoice = thisPartMeasure\n                            .getElementsByClass('Stream')\n                            .get(0);\n                        topVFStaff = thisPartVoice.activeVFStave;\n                        if (topVFStaff === undefined) {\n                            console.warn(\n                                'No active VexFlow Staves defined for at least one measure'\n                            );\n                            continue;\n                        }\n                    }\n                }\n                if (bottomVFStaff === undefined) {\n                    if (!lastPartMeasure.isFlat) {\n                        const lastPartVoice = lastPartMeasure\n                            .getElementsByClass('Stream')\n                            .get(0);\n                        bottomVFStaff = lastPartVoice.activeVFStave;\n                        if (bottomVFStaff === undefined) {\n                            console.warn(\n                                'No active VexFlow Staves defined for at least one measure'\n                            );\n                            continue;\n                        }\n                    }\n                }\n                for (\n                    let i = 0;\n                    i < s.renderOptions.staffConnectors.length;\n                    i++\n                ) {\n                    const sc = new Vex.Flow.StaveConnector(\n                        topVFStaff,\n                        bottomVFStaff\n                    );\n                    const scTypeM21 = s.renderOptions.staffConnectors[i];\n                    const scTypeVF = this.staffConnectorsMap(scTypeM21);\n                    sc.setType(scTypeVF);\n                    sc.setContext(this.ctx);\n                    sc.draw();\n                }\n            }\n        }\n    }\n\n    /**\n     * The process of putting a Stream onto a div affects each of the\n     * elements in the Stream by adding pieces of information to\n     * each {@link music21.base.Music21Object} -- see `applyFormatterInformationToNotes`\n     *\n     * You might want to remove this information; this routine does that.\n     *\n     * @param {music21.stream.Stream} s - can have parts, measures, etc.\n     * @param {boolean} [recursive=false]\n     */\n    removeFormatterInformation(s, recursive) {\n        s.storedVexflowStave = undefined;\n        for (const el of s) {\n            el.x = undefined;\n            el.y = undefined;\n            el.width = undefined;\n            el.systemIndex = undefined;\n            el.activeVexflowNote = undefined;\n            if (recursive && el.isClassOrSubclass('Stream')) {\n                this.removeFormatterInformation(el, recursive);\n            }\n        }\n    }\n\n    /**\n     * Adds the following pieces of information to each Note\n     *\n     * - el.x -- x location in pixels\n     * - el.y -- y location in pixels\n     * - el.width - width of element in pixels.\n     * - el.systemIndex -- which system is it on\n     * - el.activeVexflowNote - which Vex.Flow.StaveNote is it connected with.\n     *\n     * mad props to our friend Vladimir Viro for figuring this out! Visit http://peachnote.com/\n     *\n     * Also sets s.storedVexflowStave to stave.\n     *\n     * @param {Vex.Flow.Stave} stave\n     * @param {music21.stream.Stream} [s=this.stream]\n     * @param {Vex.Flow.Formatter} formatter\n     */\n    applyFormatterInformationToNotes(stave, s, formatter) {\n        if (s === undefined) {\n            s = this.stream;\n        }\n        const sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef') || _clefSingleton;\n        let noteOffsetLeft = 0;\n        // var staveHeight = 80;\n        if (stave !== undefined) {\n            noteOffsetLeft = stave.start_x + stave.glyph_start_x;\n            if (debug) {\n                console.log(\n                    'noteOffsetLeft: '\n                        + noteOffsetLeft\n                        + ' ; stave.start_x: '\n                        + stave.start_x\n                );\n                console.log('Bottom y: ' + stave.getBottomY());\n            }\n            // staveHeight = stave.height;\n        }\n\n        let nextTicks = 0;\n        for (const el of s) {\n            if (el.isClassOrSubclass('GeneralNote')) {\n                const vfn = el.activeVexflowNote;\n                if (vfn === undefined) {\n                    continue;\n                }\n                const nTicks = parseInt(vfn.ticks);\n                const formatterNote\n                    = formatter.tickContexts.map[String(nextTicks)];\n                nextTicks += nTicks;\n                el.x = vfn.getAbsoluteX();\n                // these are a bit hacky...\n                el.systemIndex = s.renderOptions.systemIndex;\n\n                // console.log(el.x + \" \" + formatterNote.x + \" \" + noteOffsetLeft);\n                if (formatterNote === undefined) {\n                    continue;\n                }\n\n                el.width = formatterNote.width;\n                if (el.pitch !== undefined) {\n                    // note only...\n                    el.y\n                        = stave.getBottomY()\n                        - (sClef.lowestLine - el.pitch.diatonicNoteNum)\n                            * stave.options.spacing_between_lines_px;\n                    // console.log('Note DNN: ' + el.pitch.diatonicNoteNum + \" ; y: \" + el.y);\n                }\n            }\n        }\n        if (debug) {\n            for (const n of s) {\n                if (n.pitch !== undefined) {\n                    console.log(\n                        n.pitch.diatonicNoteNum\n                            + ' '\n                            + n.x\n                            + ' '\n                            + (n.x + n.width)\n                    );\n                }\n            }\n        }\n        s.storedVexflowStave = stave;\n    }\n}\nvfShow.Renderer = Renderer;\n","import { clef } from '../clef.js';\nimport { common } from '../common.js';\nimport { Stream, Measure, Part, Score } from '../stream.js';\n\nimport { Music21Exception } from '../exceptions21.js';\n\nclass MusicXMLExportException extends Music21Exception {\n    \n}\n\nfunction typeToMusicXMLType(value) {\n    if (value === 'longa') {\n        return 'long';\n    } else if (value === '2048th') {\n        throw new MusicXMLExportException('Cannot convert \"2048th\" duration to MusicXML (too short).');\n    } else {\n        return value;\n    }\n}\n\nfunction normalizeColor(color) {\n    const colors = {\n        'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', \n        'aquamarine': '#7fffd4', 'azure': '#f0ffff',\n        'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000', \n        'blanchedalmond': '#ffebcd', 'blue': '#0000ff', 'blueviolet': '#8a2be2', \n        'brown': '#a52a2a', 'burlywood': '#deb887',\n        'cadetblue': '#5f9ea0', 'chartreuse': '#7fff00', 'chocolate': '#d2691e', \n        'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', \n        'crimson': '#dc143c', 'cyan': '#00ffff',\n        'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', \n        'darkgray': '#a9a9a9', 'darkgreen': '#006400', 'darkkhaki': '#bdb76b', \n        'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n        'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', \n        'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f', 'darkslateblue': '#483d8b', \n        'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n        'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', \n        'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n        'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', \n        'fuchsia': '#ff00ff',\n        'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', \n        'goldenrod': '#daa520', 'gray': '#808080', 'green': '#008000', \n        'greenyellow': '#adff2f',\n        'honeydew': '#f0fff0', 'hotpink': '#ff69b4',\n        'indianred ': '#cd5c5c', 'indigo': '#4b0082', 'ivory': '#fffff0', \n        'khaki': '#f0e68c',\n        'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', \n        'lemonchiffon': '#fffacd', 'lightblue': '#add8e6', 'lightcoral': '#f08080', \n        'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n        'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', \n        'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa', 'lightskyblue': '#87cefa', \n        'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n        'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', \n        'linen': '#faf0e6',\n        'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', \n        'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3', 'mediumpurple': '#9370d8', \n        'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n        'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', \n        'mediumvioletred': '#c71585', 'midnightblue': '#191970', 'mintcream': '#f5fffa', \n        'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5',\n        'navajowhite': '#ffdead', 'navy': '#000080',\n        'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', \n        'orange': '#ffa500', 'orangered': '#ff4500', 'orchid': '#da70d6',\n        'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', \n        'palevioletred': '#d87093', 'papayawhip': '#ffefd5', 'peachpuff': '#ffdab9', \n        'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', \n        'purple': '#800080',\n        'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', \n        'royalblue': '#4169e1',\n        'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', \n        'seagreen': '#2e8b57', 'seashell': '#fff5ee', 'sienna': '#a0522d', \n        'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', \n        'slategray': '#708090', 'snow': '#fffafa', 'springgreen': '#00ff7f', \n        'steelblue': '#4682b4',\n        'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', \n        'turquoise': '#40e0d0',\n        'violet': '#ee82ee',\n        'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5',\n        'yellow': '#ffff00', 'yellowgreen': '#9acd32',\n    };\n    if (color === undefined || color === '') {\n        return color;\n    } else if (!color.startsWith('#')) {\n        return colors[color].toUpperCase();\n    } else {\n        return color.toUpperCase();\n    }\n}\n\n\nconst _classMapping = [\n    'Score', 'Part', 'Measure', 'Voice', // 'Stream', \n    'GeneralNote', // 'Pitch', 'Duration', 'Dynamic', 'DiatonicScale', 'Scale',\n    // 'Music21Object',\n];\n\nexport class GeneralObjectExporter {\n    constructor(obj) {\n        this.generalObj = obj;\n    }\n    \n    parse(obj) {\n        if (obj === undefined) {\n            obj = this.generalObj;\n        }\n        const outObj = this.fromGeneralObj(obj);\n        return this.parseWellformedObject(outObj);\n    }\n    \n    parseWellformedObject(sc) {\n        const scoreExporter = new ScoreExporter(sc);\n        scoreExporter.parse();\n        return scoreExporter.asBytes();\n    }\n    \n    fromGeneralObj(obj) {\n        const classes = obj.classes;\n        let outObj;\n        for (const cM of _classMapping) {\n            if (classes.includes(cM)) {\n                const methName = 'from' + cM;\n                outObj = this[methName](obj);\n                break;\n            }\n        }        \n        if (outObj === undefined) {\n            throw new MusicXMLExportException(`Cannot translate the object ${obj} to a complete musicXML document; put it in a Stream first!`);\n        }\n        return outObj;\n    }\n    \n    fromScore(sc) {\n        const scOut = sc.makeNotation({ inPlace: false });\n        return scOut;\n    }\n    \n    fromPart(p) {\n        if (p.isFlat) {\n            p = p.makeMeasures();\n        }\n        const s = new Score();\n        s.insert(0, p);\n        // metadata...;\n        return this.fromScore(s);\n    }\n    \n    fromMeasure(m) {\n        const mCopy = m.makeNotation();\n        if (m.clef === undefined) {\n            mCopy.clef = clef.bestClef(mCopy, { recurse: true });\n        }\n        const p = new Part();\n        p.append(mCopy);\n        // TODO(msc): metadata;\n        return this.fromPart(p);\n    }\n    \n    fromVoice(v) {\n        const m = new Measure();\n        m.number = 1;\n        m.insert(0, v);\n        return this.fromMeasure(m);\n    }\n    \n    // TODO(msc): fromStream\n    // TODO(msc): fromDuration\n    // TODO(msc): fromDynamic\n    // TODO(msc): fromScale\n    // TODO(msc): fromDiatonicScale\n    // TODO(msc): fromMusic21Object\n    \n    fromGeneralNote(n) {\n        const nCopy = n.clone(true);\n        // makeTupletBrackets;\n        const out = new Measure();\n        out.number = 1;\n        out.append(nCopy);\n        \n        return this.fromMeasure(out);\n    }\n    \n    // TODO(msc): fromPitch\n}\n\nconst _musicxmlVersion = '3.0';\n\nexport class XMLExporterBase {\n    constructor() {\n        this.doc = document.implementation.createDocument('', '', null);\n        this.xmlRoot = undefined;\n    }\n    \n    asBytes({ noCopy=true }={}) {\n        let out = this.xmlHeader();\n        const oSerializer = new XMLSerializer();\n        out += oSerializer.serializeToString(this.xmlRoot);\n        return out;\n    }\n    \n    // no indentation :-(\n    \n    xmlHeader() {\n        return `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML ${_musicxmlVersion}  Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\">\n        `;\n    }\n    \n    /**\n     * Note: this is not a method in music21p, but it needs access to this.doc in music21j\n     */\n    _setTagTextFromAttribute(m21El, xmlEl, tag, attributeName, { transform, forceEmpty=false }={}) {\n        if (attributeName === undefined) {\n            attributeName = common.hyphenToCamelCase(tag);\n        }\n        \n        let value = m21El[attributeName];\n        if (transform !== undefined) {\n            value = transform(value);\n        }\n        if ((value === undefined || value === '') && !forceEmpty) {\n            return undefined;\n        }\n        const subElement = this.subElement(xmlEl, tag);\n        if (value !== undefined) {\n            subElement.innerHTML = value;\n        }\n        return subElement;\n    }\n    \n    seta(m21El, xmlEl, tag, options) {\n        return this._setTagTextFromAttribute(m21El, xmlEl, tag, options);\n    }\n    \n    _setAttributeFromAttribute(m21El, xmlEl, xmlAttributeName, { attributeName, transform }={}) {\n        if (attributeName === undefined) {\n            attributeName = common.hyphenToCamelCase(xmlAttributeName);\n        }\n        let value = m21El[attributeName];\n        if (value === undefined) {\n            return;\n        }\n        if (transform !== undefined) {\n            value = transform(value);\n        }\n        xmlEl.setAttribute(xmlAttributeName, value.toString());\n    }\n    \n    setb(m21El, xmlEl, xmlAttributeName, options) {\n        return this._setAttributeFromAttribute(m21El, xmlEl, xmlAttributeName, options);\n    }\n    // TODO(msc): _synchronizeIds;\n    _synchronizeIds(element, m21Object) {}\n    \n    addDividerComment(comment='') {\n        let commentLength = comment.length;\n        if (commentLength > 60) {\n            commentLength = 60;\n        }\n        const spacerLengthLow = Math.floor((60 - commentLength) / 2);\n        const spacerLengthHigh = Math.ceil((60 - commentLength) / 2);\n        const commentText = '='.repeat(spacerLengthLow) + ' ' + comment + ' ' + '='.repeat(spacerLengthHigh);\n        const divider = this.doc.createComment(commentText);\n        this.xmlRoot.appendChild(divider);\n    }\n    \n    // TODO(msc): dump\n    \n    /**\n     * Helper method since SubElement does not exist in javascript document.implementation\n     */\n    subElement(el, tag) {\n        const subElement = this.doc.createElement(tag);\n        el.appendChild(subElement);\n        return subElement;\n    }\n    \n    // TODO(msc): setStyleAttributes\n    // TODO(msc): setTextFormatting\n    // TODO(msc): setPrintStyleAlign\n    // TODO(msc): setPrintStyle\n    // TODO(msc): setPrintObject\n    setColor(mxObject, m21Object) {\n        if (m21Object.color !== undefined) {\n            mxObject.setAttribute('color', normalizeColor(m21Object.color));\n        } else if (m21Object.style !== undefined && m21Object.style.color !== undefined) {\n            mxObject.setAttribute('color', normalizeColor(m21Object.style.color));\n        }\n    }\n    \n    // TODO(msc): setFont\n    // TODO(msc): setPosition\n    // TODO(msc): setEditorial\n    setEditorial(mxEl, el) {\n        \n    }\n    \n    // TODO(msc): pageLayoutToXmlPrint\n    // TODO(msc): pageLayoutToXmlPageLayout\n    // TODO(msc): systemLayoutToXmlPrint\n    // TODO(msc): systemLayoutToXmlSystemLayout\n    // TODO(msc): staffLayoutToXmlStaffLayout\n    \n    accidentalToMx(a) {\n        // TODO(msc): v 3.0 and v3.1 accidentals; microtone;\n        let mxName;\n        if (a.name === 'double-flat') {\n            mxName = 'flat-flat';\n        } else {\n            mxName = a.name;\n            // check other accidentals here.\n        }\n        const mxAccidental = this.doc.createElement('accidental');\n        mxAccidental.innerHTML = mxName;\n        // TODO(msc): parentheses, bracket, setPrintStyle\n        return mxAccidental;\n    }    \n\n    getRandomId() {\n        // hack to get random ids.\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n        for (let i = 0; i < 6; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n}\n\nexport class ScoreExporter extends XMLExporterBase {\n    constructor(score) {\n        super();\n        if (score === undefined) {\n            this.stream = new Score();\n        } else {\n            this.stream = score;\n        }\n        this.xmlRoot = this.doc.createElement('score-partwise');\n        this.xmlRoot.setAttribute('version', _musicxmlVersion);\n        this.xmIdentification = undefined;\n        this.scoreMetadata = undefined;\n        this.spannerBundle = undefined;\n        this.meterStream = undefined;\n        this.scoreLayouts = undefined;\n        this.firstScoreLayout = undefined;\n        this.highestTime = 0.0;\n        this.refStreamOrTimeRange = [0.0, this.highestTime];\n        this.partExporterList = [];\n        this.instrumentList = [];\n        this.midiChannelList = [];\n        this.parts = [];\n    }\n    \n    parse() {\n        const s = this.stream;\n        if (s.length === 0) {\n            return this.emptyObject();\n        }\n        this.scorePreliminaries();\n        this.parsePartlikeScore(); // does not have parseFlatScore... \n        this.postPartProcess();\n        this.partExporterList = [];\n        return this.xmlRoot;\n    }\n    \n    emptyObject() {\n        // TODO(msc): do this.\n        return this.xmlRoot;\n    }\n    \n    scorePreliminaries() {\n        // this.setScoreLayouts();\n        // this.setMeterStream();\n        this.setPartsAndRefStream();\n        // this.textBoxes = ...;\n        this.highestTime = 0.0;\n        // spannerBundle\n    }\n    \n    setPartsAndRefStream() {\n        const s = this.stream;\n        const streamOfStreams = s.getElementsByClass('Stream');\n        for (const innerStream of streamOfStreams) {\n            // innerStream.transferOffsetToElements(); // only needed for appended Parts\n            const ht = innerStream.highestTime;\n            if (ht > this.highestTime) {\n                this.highestTime = ht;\n            }\n            this.refStreamOrTimeRange = [0.0, this.highestTime];\n        }\n        this.parts = streamOfStreams;\n    }\n    \n    // TODO(msc): setMeterStream\n    // TODO(msc): setScoreLayouts\n    \n    parsePartlikeScore() {\n        // makeRests\n        for (const innerStream of this.parts) {\n            const pp = new PartExporter(innerStream, { parent: this });\n            // spanner bundle.\n            pp.parse();\n            this.partExporterList.push(pp);\n        }\n    }\n    \n    // TODO(msc): parseFlatScore\n    \n    postPartProcess() {\n        this.setScoreHeader();\n        for (let i = 0; i < this.partExporterList.length; i++) {\n            const pex = this.partExporterList[i];\n            this.addDividerComment('Part ' + i.toString());\n            this.xmlRoot.appendChild(pex.xmlRoot);\n        }\n    }\n    \n    setScoreHeader() {\n        // const s = this.stream;\n        // scoreMeatadata\n        // titles\n        // identification\n        // setDefaults\n        // textBoxes\n        this.setPartList();\n    }\n    \n    // TODO(msc): textBoxToXmlCredit\n    // TODO(msc): setDefaults\n    // TODO(msc): addStyleToXmlDefaults\n    // TODO(msc): styleToXmlAppearance\n    \n    setPartList() {\n        // const spannerBundle = this.spannerBundle; // for now, always undefined;\n        const mxPartList = this.subElement(this.xmlRoot, 'part-list');\n        // staffGroups are non-existent\n        for (const pex of this.partExporterList) {\n            // const p = pex.stream;\n            const mxScorePart = pex.getXmlScorePart();\n            mxPartList.appendChild(mxScorePart);\n        }\n        return mxPartList;\n    }\n    // TODO(msc): staffGroupToXmlPartGroup;\n    // TODO(msc): setIdentification\n    // TODO(msc): metadataToMiscellaneous\n    // TODO(msc): setEncoding\n    // TODO(msc): getSupports\n    // TODO(msc): setTitles\n    // TODO(msc): contributorToXmlCreator    \n}\n\nexport class PartExporter extends XMLExporterBase {\n    constructor(partObj, { parent }={}) {\n        super();\n        this.stream = partObj;\n        this.parent = parent;\n        this.xmlRoot = this.doc.createElement('part');\n        if (parent === undefined) {\n            this.meterStream = new Stream();\n            this.refStreamOrTimeRange = [0.0, 0.0];\n            this.midiChannelList = [];\n        } else {\n            this.meterStream = parent.meterStream;\n            this.refStreamOrTimeRange = parent.refStreamOrTimeRange;\n            this.midiChannelList = parent.midiChannelList;\n        }\n        this.instrumentStream = undefined;\n        this.firstInstrumentObject = undefined;\n        \n        this.lastDivisions = undefined;\n        this.spannerBundle = partObj.spannerBundle;\n        this.xmlPartId = this.getRandomId(); // hacky\n    }\n    \n    parse() {\n        // this.instrumentSetup();\n        this.xmlRoot.setAttribute('id', this.xmlPartId);\n        const measureStream = this.stream.getElementsByClass('Stream');\n        // fixupNotation;\n        // setIdLocals on spannerBundle;\n        for (const m of measureStream) {\n            this.addDividerComment('Measure ' + m.number.toString());\n            const measureExporter = new MeasureExporter(m, { parent: this });\n            measureExporter.spannerBundle = this.spannerBundle;\n            const mxMeasure = measureExporter.parse();\n            this.xmlRoot.appendChild(mxMeasure);\n        }\n        return this.xmlRoot;\n    }\n        \n    // TODO(msc): instrumentSetup\n    // TODO(msc): fixupNotationFlat -- might be redundant\n    // TODO(msc): fixupNotationMeasured\n    \n    getXmlScorePart() {\n        // const part = this.stream;\n        const mxScorePart = this.doc.createElement('score-part');\n        mxScorePart.setAttribute('id', this.xmlPartId);\n        // partName\n        // partAbbreviation\n        // instrument\n        return mxScorePart;\n    }\n    // TODO(msc): instrumentToXmlScoreInstrument\n    // TODO(msc): instrumentToXmlMidiInstrument\n}\n\nconst _classesToMeasureMethods = [\n    ['Note', 'noteToXml'],\n    // NoChord\n    // ChordWithFretBoard\n    // ChordSymbol\n    ['Chord', 'chordToXml'],\n    ['Rest', 'restToXml'],\n    // Dynamic, Segno, Coda, MetronomeMark, MetricModulation,\n    // TextExpression, RepeatExpression, RehersalMark\n];\n\nconst _wrapAttributeMethodClasses = [\n    ['Clef', 'clefToXml'],\n    ['KeySignature', 'keySignatureToXml'],\n    ['TimeSignature', 'timeSignatureToXml'],\n];\n\nconst _ignoreOnParseClasses = ['LayoutBase', 'Barline'];\n\nconst divisionsPerQuarter = 32 * 3 * 3 * 5 * 7; // TODO(msc): create defaults.js\n\nexport class MeasureExporter extends XMLExporterBase {\n    constructor(measureObj, { parent }={}) {\n        super();\n        this.stream = measureObj;\n        this.parent = parent;\n        this.xmlRoot = this.doc.createElement('measure');\n        this.currentDivisions = divisionsPerQuarter;\n        this.transpositionInterval = undefined;\n        this.mxTranspose = undefined;\n        this.measureOffsetStart = 0.0;\n        this.offsetInMeasure = 0.0;\n        this.currentVoiceId = undefined;\n        \n        this.rbSpanners = [];\n        this.spannerBundle = parent.spannerBundle;\n        \n        this.objectSpannerBundle = this.spannerBundle;\n    }\n    \n    parse() {\n        // TODO(msc): setTranspose\n        // TODO(msc): setRbSpanners\n        this.setMxAttributes();\n        // TODO(msc): setMxPrint\n        this.setMxAttributesObjectForStartOfMeasure();\n        // TODO(msc): setLeftBarline\n        \n        // THE BIG ONE\n        this.mainElementsParse();\n        \n        // TODO(msc): setRightBarline\n        return this.xmlRoot;\n    }\n    \n    mainElementsParse() {\n        const m = this.stream;\n        if (!m.hasVoices()) {\n            this.parseFlatElements(m, { backupAfterwards: false });\n            return;\n        }\n        // TODO(msc): parse elements outside of Voices...needs getElementsNotOfClass\n        const allVoices = Array.from(m.voices);\n        for (const [i, v] of allVoices.entries()) {\n            let backupAfterwards = true;\n            if (i === allVoices.length - 1) {\n                backupAfterwards = false;\n            }\n            this.parseFlatElements(v, { backupAfterwards });\n        }        \n    }\n    \n    parseFlatElements(m, { backupAfterwards=false }={}) {\n        const root = this.xmlRoot;\n        const divisions = this.currentDivisions;\n        this.offsetInMeasure = 0.0;\n        let voiceId;\n        if (m.classes.includes('Voice')) {\n            voiceId = m.id;\n            if (voiceId === undefined) {\n                voiceId = this.getRandomId();\n            }\n        }\n        this.currentVoiceId = voiceId;\n        \n        for (const el of m) {\n            this.parseOneElement(el);\n        }\n        \n        if (backupAfterwards) {\n            const amountToBackup = Math.round(divisions * this.offsetInMeasure);\n            if (amountToBackup > 0) {\n                const mxBackup = this.doc.createElement('backup');\n                const mxDuration = this.subElement(mxBackup, 'duration');\n                mxDuration.innerHTML = amountToBackup.toString();\n                root.appendChild(mxBackup);\n            }\n        }\n        this.currentVoiceId = undefined;\n    }\n    \n    parseOneElement(obj) {\n        // const root = this.xmlRoot;\n        // spanners...\n        const classes = obj.classes;\n        if (classes.includes('GeneralNote')) {\n            this.offsetInMeasure += obj.duration.quarterLength;\n        }\n        // odd durations...\n        \n        let parsedObject = false;\n        \n        for (const [className, methName] of _classesToMeasureMethods) {\n            if (classes.includes(className)) {\n                this[methName](obj);\n                parsedObject = true;\n                break;\n            }\n        }\n        \n        for (const [className, methName] of _wrapAttributeMethodClasses) {\n            if (classes.includes(className)) {\n                const meth = o => this[methName](o);\n                this.wrapObjectInAttributes(obj, meth);\n                parsedObject = true;\n                break;\n            }\n        }\n        \n        // deal with skipped objects.\n        if (!parsedObject && !_ignoreOnParseClasses.includes(obj.classes[0])) {\n            console.warn('skipped object of class ' + obj.classes[0]);\n        }\n        \n        // postSpanners.\n    }\n    \n    // TODO(msc): prePostObjectSpanners\n    // TODO(msc): _spannerStartParameters\n    // TODO(msc): _spannerEndParameters\n    // TODO(msc): objectAttachedSpaners\n    \n    noteToXml(n, { noteIndexInChord=0, chordParent }={}) {\n        const addChordTag = (noteIndexInChord !== 0);\n        let chordOrN;\n        if (chordParent === undefined) {\n            chordOrN = n;\n        } else {\n            chordOrN = chordParent;\n        }\n        const mxNote = this.doc.createElement('note');\n        // setPrintStyle\n        // volumeInformation\n        this.setColor(mxNote, n);\n        // _synchronizeId;\n        const d = chordOrN.duration;\n        // grace;\n        // setColor chord\n        // setPrintObject\n        // hideObject\n        // articulation pizz:\n        if (addChordTag) {\n            this.subElement(mxNote, 'chord');\n        }\n        if (n.pitch !== undefined) {\n            const mxPitch = this.pitchToXml(n.pitch);\n            mxNote.appendChild(mxPitch);\n        } else {\n            this.subElement(mxNote, 'rest');\n        }\n        if (d.isGrace !== true) {\n            const mxDuration = this.durationXml(d);\n            mxNote.appendChild(mxDuration);\n        }\n        if (n.tie !== undefined) {\n            const mxTieList = this.tieToXmlTie(n.tie);\n            for (const t of mxTieList) {\n                mxNote.appendChild(t);\n            }\n        }\n        // instrument\n        this.setEditorial(mxNote, n);\n        if (this.currentVoiceId !== undefined) {\n            const mxVoice = this.subElement(mxNote, 'voice');\n            let vId;\n            if (typeof vId === 'number') {\n                vId = this.currentVoiceId + 1;\n            } else {\n                // not a number;\n                vId = this.currentVoiceId;\n            }\n            mxVoice.innerHTML = vId.toString();\n        }\n        \n        const mxType = this.subElement(mxNote, 'type');\n        mxType.innerHTML = typeToMusicXMLType(d.type);\n        // set styleAttributes\n        // set noteSize\n        for (let _ = 0; _ < d.dots; _++) {\n            this.subElement(mxNote, 'dot');\n        }\n        \n        // components.\n        if (n.pitch !== undefined \n                && n.pitch.accidental !== undefined \n                && n.pitch.accidental.displayStatus !== false) {\n            const mxAccidental = this.accidentalToMx(n.pitch.accidental);\n            mxNote.appendChild(mxAccidental);\n        }\n        if (d.tuplets.length > 0) {\n            // todo--nested tuplets;\n            const mxTimeModification = this.tupletToTimeModification(d.tuplets[0]);\n            mxNote.appendChild(mxTimeModification);\n        }\n        \n        let stemDirection;\n        if (!addChordTag \n                && ![undefined, 'unspecified'].includes(chordOrN.stemDirection)) {\n            stemDirection = chordOrN.stemDirection;\n        } else if (chordOrN !== n \n                && ![undefined, 'unspecified'].includes(n.stemDirection)) {\n            stemDirection = n.stemDirection;\n        }\n        if (stemDirection !== undefined) {\n            const mxStem = this.subElement(mxNote, 'stem');\n            let sdtext = stemDirection;\n            if (sdtext === 'noStem') {\n                sdtext = 'none';\n            }\n            mxStem.innerHTML = sdtext;\n            // TODO: stemStyle\n        }\n        \n        // dealWithNotehead\n        // beams\n        // staff\n        // notations\n        // tuplet display\n        // notations\n        if (!addChordTag) {\n            for (const lyricObj of chordOrN.lyrics) {\n                if (lyricObj.text === undefined) {\n                    continue;\n                }\n                const mxLyric = this.lyricToXml(lyricObj);\n                mxNote.appendChild(mxLyric);\n            }\n        }\n        \n        this.xmlRoot.appendChild(mxNote);\n        return mxNote;\n    }\n    \n    restToXml(r) {\n        return this.noteToXml(r);\n        // full measure\n        // display-step, display-octave, etc.\n    }\n    \n    chordToXml(c) {\n        const mxNoteList = [];\n        for (const [i, n] of Array.from(c).entries()) {\n            const mxNote = this.noteToXml(n, { noteIndexInChord: i, chordParent: c });\n            mxNoteList.push(mxNote);\n        }\n        return mxNoteList;\n    }\n    \n    durationXml(dur) {\n        const mxDuration = this.doc.createElement('duration');\n        mxDuration.innerHTML = Math.round(this.currentDivisions * dur.quarterLength).toString();\n        return mxDuration;\n    }\n    \n    pitchToXml(p) {\n        const mxPitch = this.doc.createElement('pitch');\n        this._setTagTextFromAttribute(p, mxPitch, 'step');\n        if (p.accidental !== undefined) {\n            const mxAlter = this.subElement(mxPitch, 'alter');\n            mxAlter.innerHTML = common.numToIntOrFloat(p.accidental.alter).toString();\n        }\n        this._setTagTextFromAttribute(p, mxPitch, 'octave', 'implicitOctave');\n        return mxPitch;\n    }\n    // TODO(msc): fretNoteToXml\n    // TODO(msc): fretBoardToXml\n    // TODO(msc): chordWithFretBoardToXml\n    \n    tupletToTimeModification(tup) {\n        const mxTimeModification = this.doc.createElement('time-modification');\n        this._setTagTextFromAttribute(tup, mxTimeModification, 'actual-notes', 'numberNotesActual');\n        this._setTagTextFromAttribute(tup, mxTimeModification, 'normal-notes', 'numberNotesNormal');\n        if (tup.durationNormal !== undefined) {\n            const mxNormalType = this.subElement(mxTimeModification, 'normal-type');\n            mxNormalType.innerHTML = typeToMusicXMLType(tup.durationNormal.type);\n            if (tup.durationNormal.dots > 0) {\n                for (let i = 0; i < tup.durationNormal.dots; i++) {\n                    this.subElement(mxTimeModification, 'normal-dot');\n                }\n            }\n        }\n        return mxTimeModification;\n    }\n    \n    // TODO(msc): dealWithNotehead\n    // TODO(msc): noteheadToXml\n    // TODO(msc): noteToNotations\n    \n    tieToXmlTie(t) {\n        const mxTieList = [];\n        let musicxmlTieType = t.type;\n        if (t.type === 'continue') {\n            musicxmlTieType = 'stop';\n        }\n        const mxTie = this.doc.createElement('tie');\n        mxTie.setAttribute('type', musicxmlTieType);\n        mxTieList.push(mxTie);\n        \n        if (t.type === 'continue') {\n            const mxTie = this.doc.createElement('tie');\n            mxTie.setAttribute('type', 'start');\n            mxTieList.push(mxTie);            \n        }\n        return mxTieList;\n    }\n    \n    // TODO(msc): tieToXmlTied -- needs notations\n    // TODO(msc): tupletToXmlTuplet\n    // TODO(msc): expressionToXml\n    // TODO(msc): articulationToXmlArticulation\n    // TODO(msc): setLineStyle\n    // TODO(msc): articulationToXmlTechnical\n    // TODO(msc): setHarmonic\n    // TODO(msc): noChordToXml\n    // TODO(msc): chordSymbolToXml\n    // TODO(msc): setOffsetOptional\n    // TODO(msc): placeInDirection\n    // TODO(msc): dynamicToXml\n    // TODO(msc): segnoToXml\n    // TODO(msc): codaToXml\n    // TODO(msc): tempoIndicationToXml\n    // TODO(msc): rehearsalMarkToXml\n    // TODO(msc): textExpressionToXml\n    \n    wrapObjectInAttributes(objectToWrap, methodToMx) {\n        if (this.offsetInMeasure === 0.0) {\n            return undefined;\n        }\n        \n        const mxAttributes = this.doc.createElement('attributes');\n        const mxObj = methodToMx(objectToWrap);\n        mxAttributes.appendChild(mxObj);\n        this.xmlRoot.appendChild(mxAttributes);\n        return mxAttributes;\n    }\n    \n    lyricToXml(l) {\n        const mxLyric = this.doc.createElement('lyric');\n        this._setTagTextFromAttribute(l, mxLyric, 'syllabic');\n        this._setTagTextFromAttribute(l, mxLyric, 'text', 'text', { forceEmpty: true });\n        if (l.identifier !== undefined) {\n            mxLyric.setAttribute('name', l.identifier.toString());\n        }\n\n        if (l.number !== undefined) {\n            mxLyric.setAttribute('number', l.number.toString());\n        } else if (l.identifier !== undefined) {\n            mxLyric.setAttribute('number', l.identifier.toString());\n        }\n        // setStyleAttributes\n        // setPrintObject\n        // setColor\n        // setPosition\n        return mxLyric;             \n    }\n    // TODO(msc): beamsToXml\n    // TODO(msc): beamToXml\n    // TODO(msc): setRightBarline\n    // TODO(msc): setLeftBarline\n    // TODO(msc): setBarline\n    // TODO(msc): barlineToXml\n    // TODO(msc): repeatToXml\n    \n    setMxAttributesObjectForStartOfMeasure() {\n        const m = this.stream;\n        const mxAttributes = this.doc.createElement('attributes');\n        let appendToRoot = false;\n        this.currentDivisions = divisionsPerQuarter;\n        if (this.parent === undefined || this.currentDivisions !== this.parent.lastDivisions) {\n            const mxDivisions = this.subElement(mxAttributes, 'divisions');\n            mxDivisions.innerHTML = this.currentDivisions.toString();\n            this.parent.lastDivisions = this.currentDivisions;\n            appendToRoot = true;\n        }\n        if (m.classes.includes('Measure')) {\n            if (m._keySignature !== undefined) {\n                mxAttributes.appendChild(this.keySignatureToXml(m._keySignature));\n                appendToRoot = true;\n            }\n            if (m._timeSignature !== undefined) {\n                mxAttributes.appendChild(this.timeSignatureToXml(m._timeSignature));\n                appendToRoot = true;\n            }\n            // todo SenzaMisura...\n            if (m._clef !== undefined) {\n                mxAttributes.appendChild(this.clefToXml(m._clef));\n                appendToRoot = true;\n            }\n        }\n        \n        // staffLayout\n        // transpositionInterval\n        // measureStyle\n        if (appendToRoot) {\n            this.xmlRoot.appendChild(mxAttributes);\n        }\n        return mxAttributes;\n    }\n    // TODO(msc): measureStyle\n    // TODO(msc): staffLayoutToXmlStaffDetails\n    \n    timeSignatureToXml(ts) {\n        const mxTime = this.doc.createElement('time');\n        // synchronizeIds\n        // senzaMisura\n        // summed denominators, compound etc.\n        const mxBeats = this.subElement(mxTime, 'beats');\n        mxBeats.innerHTML = ts.numerator.toString();\n        const mxBeatType = this.subElement(mxTime, 'beat-type');\n        mxBeatType.innerHTML = ts.denominator.toString();\n        // symbolizeDenominator\n        // separator\n        // style\n        return mxTime;\n    }\n    \n    keySignatureToXml(keyOrKeySignature) {\n        const mxKey = this.doc.createElement('key');\n        // synchronizeIds\n        // number\n        // printStyle, print-object\n        this.seta(keyOrKeySignature, mxKey, 'fifths', 'sharps');\n        if (keyOrKeySignature.mode !== undefined) {\n            this.seta(keyOrKeySignature, mxKey, 'mode');            \n        }\n        // non-traditional\n        // altered pitches\n        return mxKey;\n    }\n    \n    clefToXml(clefObj) {\n        const mxClef = this.doc.createElement('clef');\n        // printstyle\n        const sign = clefObj.sign || 'G';\n        const mxSign = this.subElement(mxClef, 'sign');\n        mxSign.innerHTML = sign;\n        this.seta(clefObj, mxClef, 'line');\n        if (clefObj.octaveChange !== undefined && clefObj.octaveChange !== 0) {\n            this.seta(clefObj, mxClef, 'clef-octave-change', 'octaveChange');\n        }\n        return mxClef;\n    }\n    \n    // intervalToXmlTranspose\n    // setMxPrint\n    // staffLayoutToXmlPrint\n    setMxAttributes() {\n        const m = this.stream;\n        this.xmlRoot.setAttribute('number', m.measureNumberWithSuffix());\n        // layoutWidth\n    }\n    \n    // setRbSpanners\n    // transpose\n}\n","// import common from '../common.js';\nimport { Music21Exception } from '../exceptions21.js';\n\nexport class FilterException extends Music21Exception {\n\n}\n\nclass _StopIteration {}\n\nexport const StopIterationSingleton = new _StopIteration();\n\nexport class StreamFilter {\n    static get derivationStr() {\n        return 'streamFilter';\n    }\n\n    reset() {}\n\n    call(item, iterator) {\n        return true;\n    }\n}\n\nexport class IsFilter extends StreamFilter {\n    static get derivationStr() {\n        return 'is';\n    }\n\n    constructor(target=[]) {\n        super();\n        if (!Array.isArray(target)) {\n            target = [target];\n        }\n        this.target = target;\n        this.numToFind = target.length;\n    }\n\n    reset() {\n        this.numToFind = this.target.length;\n    }\n\n    call(item, iterator) {\n        if (this.numToFind === 0) {\n            return StopIterationSingleton;\n        }\n        if (this.target.includes(item)) {\n            this.numToFind -= 1;\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport class IsNotFilter extends IsFilter {\n    static get derivationStr() {\n        return 'IsNot';\n    }\n\n    constructor(target) {\n        super(target);\n        this.numToFind = Number.MAX_SAFE_INTEGER;\n    }\n\n    reset() {}\n\n    call(item, iterator) {\n        const ret = super.call(item, iterator);\n        if (ret === StopIterationSingleton) {\n            return ret;\n        } else {\n            return !ret;\n        }\n    }\n}\n\n// TODO(msc): IdFilter\n\nexport class ClassFilter extends StreamFilter {\n    static get derivationStr() {\n        return 'getElementsByClass';\n    }\n\n    constructor(classList=[]) {\n        super();\n        if (!Array.isArray(classList)) {\n            classList = [classList];\n        }\n        this.classList = classList;\n    }\n    // TODO: __eq__\n\n    call(item, iterator) {\n        return item.isClassOrSubclass(this.classList);\n    }\n}\n\nexport class ClassNotFilter extends ClassFilter {\n    static get derivationStr() {\n        return 'getElementsNotOfClass';\n    }\n\n    call(item, iterator) {\n        return !(super.call(item, iterator));\n    }\n}\n\n// TODO: GroupFilter\n\nexport class OffsetFilter extends StreamFilter {\n    static get derivationStr() {\n        return 'getElementsByOffset';\n    }\n    \n    constructor(\n        offsetStart,\n        offsetEnd,\n        {\n            includeEndBoundary=true,\n            mustFinishInSpan=false,\n            mustBeginInSpan=true,\n            includeElementsThatEndAtStart=true,\n        }={}) {\n        super();\n        this.offsetStart = offsetStart;\n        this.offsetEnd = offsetEnd;\n        this.includeEndBoundary = includeEndBoundary;\n        this.mustFinishInSpan = mustFinishInSpan;\n        this.mustBeginInSpan = mustBeginInSpan;\n        this.includeElementsThatEndAtStart = includeElementsThatEndAtStart;\n\n        \n        this.zeroLengthSearch = false;\n        if (offsetEnd === undefined) {\n            self.offsetEnd = offsetStart;\n            this.zeroLengthSearch = true;\n        } else if (offsetEnd <= offsetStart) {\n            this.zeroLengthSearch = true;\n        }\n\n    \n    }\n    \n    call(item, iterator) {\n        return this.isElementOffsetInRange(item, item.offset);\n    }\n    \n    isElementOffsetInRange(e, offset) {\n        if (offset > this.offsetEnd) {\n            // anything that begins after the span is definitely out.\n            return false;\n        }\n        const dur = e.duration;\n        const elementEnd = offset + dur.quarterLength;\n        if (elementEnd < this.offsetStart) {\n            // anything that finishes before the span ends is definitely out\n            return false;\n        }\n\n        // some part of the element is at least touching some part of span.\n\n        let elementIsZeroLength = false;\n        if (dur.quarterLength === 0) {\n            elementIsZeroLength = true;\n        }\n        if (this.zeroLengthSearch && elementIsZeroLength) {\n            return true;\n        }\n\n        if (this.mustFinishInSpan) {\n            if (elementEnd > this.offsetEnd) {\n                return false;\n            }\n            if (!this.includeEndBoundary && offset === this.offsetEnd) {\n                return false;\n            }\n        }\n\n        if (this.mustBeginInSpan) {\n            if (offset < this.offsetStart) {\n                return false;\n            }\n            if (!this.includeEndBoundary && offset === this.offsetEnd) {\n                return false;\n            }\n        } else if (!elementIsZeroLength && elementEnd === this.offsetEnd && this.zeroLengthSearch) {\n            return false;\n        }\n\n        if (!this.includeEndBoundary && offset === this.offsetEnd) {\n            return false;\n        }\n        if (!this.includeElementsThatEndAtStart && elementEnd === this.offsetStart) {\n            return false;\n        }\n        return true;\n    }    \n}\n\n// TODO: OffsetFilter (high priority)\n// TODO: OffsetHierarchyFilter\n","// import common from '../common.js';\nimport { StreamException } from '../exceptions21.js';\nimport * as filters from './filters.js';\n\nconst StopIterationSingleton = filters.StopIterationSingleton;\n\nexport class StreamIteratorException extends StreamException {\n\n}\n\nexport class StreamIterator {\n    constructor(srcStream, {\n        filterList=[],\n        restoreActiveSites=true,\n        activeInformation=undefined,\n        ignoreSorting=false,\n    }={}) {\n        if (!ignoreSorting && !srcStream.isSorted && srcStream.autoSort) {\n            srcStream.sort();\n        }\n        this.srcStream = srcStream;\n        this.index = 0;\n\n        this.srcStreamElements = srcStream.elements;\n        this.streamLength = this.srcStreamElements.length;\n\n        this.iterSection = '_elements';\n\n        this.cleanupOnStop = false;\n        this.restoreActiveSites = restoreActiveSites;\n        this.overrideDerivation = undefined;\n        if (!Array.isArray(filterList)) {\n            filterList = [filterList];\n        }\n        this.filters = filterList;\n\n        /**\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        this._len = undefined;\n        /**\n         *\n         * @type {music21.base.Music21Object[]|undefined}\n         * @private\n         */\n        this._matchingElements = undefined;\n        this.sectionIndex = 0;  // no endElements yet...\n\n        if (activeInformation === undefined) {\n            this.activeInformation = {};\n            this.updateActiveInformation();\n        } else {\n            this.activeInformation = activeInformation;\n        }\n    }\n\n    * [Symbol.iterator]() {\n        this.reset();\n        while (this.index < this.streamLength) {\n            this.index += 1;\n            let e;\n            try {\n                e = this.srcStreamElements[this.index - 1];\n            } catch (exc) {\n                continue;\n            }\n            const matches = this.matchesFilters(e);\n            if (matches === false) {\n                continue;\n            }\n            if (matches === StopIterationSingleton) {\n                break;\n            }\n            if (this.restoreActiveSites) {\n                e.activeSite = this.srcStream;\n            }\n            this.updateActiveInformation();\n            yield e;\n        }\n        this.cleanup();\n    }\n\n    get(k) {\n        const fe = this.matchingElements();\n        if (k < 0) {\n            k = fe.length + k;\n        }\n        return fe[k];\n    }\n\n    get length() {\n        if (this._len !== undefined) {\n            return this._len;\n        }\n        this._len = this.matchingElements().length;\n        this.reset();\n        return this._len;\n    }\n\n    updateActiveInformation() {\n        const ai = this.activeInformation;\n        ai.stream = this.srcStream;\n        ai.index = this.index - 1;\n        ai.iterSection = this.iterSection;\n        ai.sectionIndex = this.sectionIndex;\n    }\n\n    reset() {\n        this.index = 0;\n        this.iterSection = '_elements';\n        this.updateActiveInformation();\n        for (const f of this.filters) {\n            if (f.reset !== undefined) {\n                f.reset();\n            }\n        }\n    }\n\n    resetCaches() {\n        this._len = undefined;\n        this._matchingElements = undefined;\n    }\n\n    cleanup() {\n        if (this.cleanupOnStop) {\n            this.reset();\n            this.srcStream = undefined;\n            this.srcStreamElements = [];\n        }\n    }\n\n    matchingElements() {\n        if (this._matchingElements !== undefined) {\n            return this._matchingElements;\n        }\n\n        const savedIndex = this.index;\n        const savedRestoreActiveSites = this.restoreActiveSites;\n        this.restoreActiveSites = true;\n\n        const me = []; // matching elements\n        for (const e of this) {\n            me.push(e);\n        }\n        this.reset();\n        this.index = savedIndex;\n        this.restoreActiveSites = savedRestoreActiveSites;\n        this._matchingElements = me;\n        return me;\n    }\n\n    matchesFilters(e) {\n        for (const f of this.filters) {\n            const ret = f.call(e, this);\n            if (ret === false) {\n                return false; // must === false;\n            }\n            if (ret === StopIterationSingleton) {\n                return ret;\n            }\n        }\n        return true;\n    }\n\n    stream() {\n        const ss = this.srcStream;\n        // let clearIsSorted = false;\n\n        const found = ss.clone(false);\n        found.elements = [];\n        // derivation;\n        const fe = this.matchingElements();\n        for (const e of fe) {\n            const o = ss.elementOffset(e, { stringReturns: true });\n            // try: getOffsetInHierarchy...\n            // string returns;\n            found.insert(o, e);\n        }\n        // if (fe.length) {\n        //     found.coreElementsChanged()\n        // }\n        return found;\n    }\n\n    get activeElementList() {\n        return this.activeInformation.stream[this.activeInformation.iterSection];\n    }\n\n    addFilter(newFilter) {\n        for (const f of this.filters) {\n            if (newFilter === f) {\n                return this; // will not work... because == overrides.\n            }\n        }\n        this.filters.push(newFilter);\n        this.resetCaches();\n        return this;\n    }\n\n    removeFilter(oldFilter) {\n        const index = this.filters.indexOf(oldFilter);\n        if (index !== -1) {\n            this.filters.splice(index, 1);\n        }\n        this.resetCaches();\n        return this;\n    }\n\n    // getElementById(elementId) {\n    //\n    // }\n\n    getElementsByClass(classFilterList) {\n        return this.addFilter(new filters.ClassFilter(classFilterList));\n    }\n\n    getElementsNotOfClass(classFilterList) {\n        return this.addFilter(new filters.ClassNotFilter(classFilterList));\n    }\n\n    // getElementsByGroup;\n    // getElementsByOffset;\n    getElementsByOffset(...args) {\n        return this.addFilter(new filters.OffsetFilter(...args));\n    }\n    \n\n    get notes() {\n        return this.addFilter(new filters.ClassFilter('NotRest'));\n    }\n\n    get notesAndRests() {\n        return this.addFilter(new filters.ClassFilter('GeneralNote'));\n    }\n\n    get parts() {\n        return this.addFilter(new filters.ClassFilter('Part'));\n    }\n\n    get spanners() {\n        return this.addFilter(new filters.ClassFilter('Spanner'));\n    }\n\n    get voices() {\n        return this.addFilter(new filters.ClassFilter('Voice'));\n    }\n}\n\nexport class OffsetIterator extends StreamIterator {\n    constructor(srcStream, options={}) {\n        super(srcStream, options);\n        this.nextToYield = [];\n        this.nextOffsetToYield = undefined;\n    }\n\n    * [Symbol.iterator]() {\n        this.reset();\n        this.sort();\n\n        while (this.index < this.streamLength) {            \n            this.index += 1;\n            let e;\n            try {\n                e = this.srcStreamElements[this.index - 1];\n            } catch (exc) {\n                continue;\n            }\n            const matches = this.matchesFilters(e);\n            if (matches === false) {\n                continue;\n            }\n            if (matches === StopIterationSingleton) {\n                break;\n            }\n            const yieldEls = [e];\n            const eOffset = this.elementOffset(e);\n            \n            for (let forwardIndex = this.index; forwardIndex < this.streamLength; forwardIndex++) {\n                let nextE;\n                try {\n                    nextE = this.srcStreamElements[this.index - 1];\n                } catch (exc) {\n                    continue;\n                }\n                const nextOffset = this.elementOffset(nextE);\n                if (nextOffset !== eOffset) {\n                    this.nextToYield = [nextE];\n                    this.nextOffsetToYield = nextOffset;\n                    break;\n                }\n                if (!this.matchesFilters(nextE)) {\n                    continue;\n                }\n                \n                yieldEls.push(e);\n                this.index = forwardIndex;\n            }\n            \n            if (this.restoreActiveSites) {\n                for (const el of yieldEls) {\n                    el.activeSite = this.srcStream;                    \n                }\n            }\n            this.updateActiveInformation();\n            yield yieldEls;\n        }\n        this.cleanup();\n    }\n    \n    reset() {\n        super.reset();\n        this.nextToYield = [];\n        this.nextOffsetToYield = undefined;        \n    }\n}\n\n\nexport class RecursiveIterator extends StreamIterator {\n    constructor(srcStream, {\n        filterList,\n        restoreActiveSites,\n        activeInformation,\n        streamsOnly=false,\n        includeSelf=false,\n        ignoreSorting,\n    }={}) {\n        super(srcStream, {\n            filterList,\n            restoreActiveSites,\n            activeInformation,\n            ignoreSorting,\n        });\n        this.returnSelf = includeSelf;\n        this.includeSelf = includeSelf;\n        this.ignoreSorting = ignoreSorting;\n        this.iteratorStartOffsetInHierarchy = 0.0;\n        if (streamsOnly) {\n            this.filters.push(new filters.ClassFilter('Stream'));\n        }\n        /**\n         *\n         * @type {RecursiveIterator|undefined}\n         */\n        this.childRecursiveIterator = undefined;\n    }\n\n    reset() {\n        this.returnSelf = this.includeSelf;\n        this.childRecursiveIterator = undefined;\n        this.activeInformation.lastYielded = undefined;\n        super.reset();\n    }\n\n    * [Symbol.iterator]() {\n        this.reset(); // in __iter__.\n\n        if (this.returnSelf && this.matchesFilters(this.srcStream)) {\n            this.activeInformation.stream = undefined;\n            this.activeInformation.index = -1;\n            this.activeInformation.lastYielded = this.srcStream;\n            this.returnSelf = false;\n            yield this.srcStream;\n        } else if (this.returnSelf) {\n            // did not match filters...\n            this.returnSelf = false;\n        }\n\n        while (this.index < this.streamLength) {\n            this.index += 1;\n            const e = this.srcStreamElements[this.index - 1];\n            if (e === undefined) {\n                // maybe can happen if elements changed.\n                continue;\n            }\n            if (this.matchesFilters(e)) {\n                if (this.restoreActiveSites) {\n                    e.activeSite = this.srcStream;\n                }\n                this.updateActiveInformation();\n                this.activeInformation.lastYielded = e;\n                yield e;\n            }\n\n            if (e.isStream) {\n                this.childRecursiveIterator = new RecursiveIterator(\n                    e,\n                    {\n                        restoreActiveSites: this.restoreActiveSites,\n                        filterList: this.filters, // shared list\n                        activeInformation: this.activeInformation, // shared\n                        includeSelf: false,\n                        ignoreSorting: this.ignoreSorting,\n                        // parentIterator: this,\n                        //\n                    }\n                );\n                const newStartOffset = (\n                    this.iteratorStartOffsetInHierarchy\n                    + this.srcStream.elementOffset(e)\n                );\n                this.childRecursiveIterator.iteratorStartOffsetInHierarchy = newStartOffset;\n                for (const e of this.childRecursiveIterator) {\n                    yield e;\n                }\n                this.childRecursiveIterator = undefined;\n            }\n        }\n        this.activeInformation.lastYielded = undefined;\n        this.cleanup();\n    }\n\n    matchingElements() {\n        // none of this may be necessary in JavaScript,\n        // but perhaps if called during iteration.\n        const savedRecursiveIterator = this.childRecursiveIterator;\n        const fe = super.matchingElements();\n        this.childRecursiveIterator = savedRecursiveIterator;\n        return fe;\n    }\n\n    /**\n     *   Returns a stack of RecursiveIterators at this point in the iteration.\n     *   Last is most recent.\n     *\n     *   @returns {RecursiveIterator[]}\n     */\n    iteratorStack() {\n        /**\n         *\n         * @type {RecursiveIterator[]}\n         */\n        const iterStack = [this];\n        let x  = this;\n        while (x.childRecursiveIterator !== undefined) {\n            x = x.childRecursiveIterator;\n            iterStack.push(x);\n        }\n        return iterStack;\n    }\n\n    /**\n     *   Returns a stack of Streams at this point.  Last is most recent.\n     */\n    streamStack() {\n        return this.iteratorStack().map(iter => iter.srcStream);\n    }\n\n    /**\n     *  Called on the current iterator, returns the current offset\n     *  in the hierarchy. or undefined if we are not currently iterating.\n     */\n    currentHierarchyOffset() {\n        const lastYield = this.activeInformation.lastYielded;\n        if (lastYield === undefined) {\n            return undefined;\n        }\n\n        const iteratorStack = this.iteratorStack();\n        const newestIterator = iteratorStack[iteratorStack.length - 1];\n        const lastStream = newestIterator.srcStream;\n        const lastStartOffset = newestIterator.iteratorStartOffsetInHierarchy;\n        if (lastYield === lastStream) {\n            return lastStartOffset;\n        } else {\n            return lastStartOffset + lastStream.elementOffset(lastYield);\n        }\n    }\n    // TODO(msc): getElementsByOffsetInHierarchy\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/stream -- Streams -- objects that hold other Music21Objects\n *\n * Does not implement the full features of music21p Streams by a long shot...\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006-17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport * as MIDI from 'MIDI';\n\nimport { Music21Exception } from './exceptions21.js';\n\nimport { base } from './base.js';\nimport { beam } from './beam.js';\nimport { clef } from './clef.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { duration } from './duration.js';\nimport { instrument } from './instrument.js';\nimport { meter } from './meter.js';\nimport { note } from './note.js';\nimport { pitch } from './pitch.js';\nimport { renderOptions } from './renderOptions.js';\nimport { vfShow } from './vfShow.js';\n\nimport { GeneralObjectExporter } from './musicxml/m21ToXml.js';\n\nimport * as filters from './stream/filters.js';\nimport * as iterator from './stream/iterator.js';\n\nexport { filters };\nexport { iterator };\n\n/**\n * powerful stream module, See {@link music21.stream} namespace\n * @exports music21/stream\n */\n/**\n * Streams are powerful music21 objects that hold Music21Object collections,\n * such as {@link music21.note.Note} or {@link music21.chord.Chord} objects.\n *\n * Understanding the {@link music21.stream.Stream} object is of fundamental\n * importance for using music21.  Definitely read the music21(python) tutorial\n * on using Streams before proceeding\n *\n * @namespace music21.stream\n * @memberof music21\n * @requires music21/base\n * @requires music21/renderOptions\n * @requires music21/clef\n * @requires music21/vfShow\n * @requires music21/duration\n * @requires music21/common\n * @requires music21/meter\n * @requires music21/pitch\n * @requires jquery\n */\nexport const stream = {\n    filters,\n    iterator,\n};\n\nclass StreamException extends Music21Exception {}\n\nstream.StreamException = StreamException;\n\nfunction _exportMusicXMLAsText(s) {\n    const gox = new GeneralObjectExporter(s);\n    return gox.parse();\n}\n\n/**\n * A generic Stream class -- a holder for other music21 objects\n * Will be subclassed into {@link music21.stream.Score},\n * {@link music21.stream.Part},\n * {@link music21.stream.Measure},\n * {@link music21.stream.Voice}, but most functions will be found here.\n *\n * @class Stream\n * @memberof music21.stream\n * @extends music21.base.Music21Object\n *\n * @property {music21.base.Music21Object[]} elements - the elements in the stream. DO NOT MODIFY individual components (consider it like a Python tuple)\n * @property {number} length - (readonly) the number of elements in the stream.\n * @property {music21.duration.Duration} duration - the total duration of the stream's elements\n * @property {number} highestTime -- the highest time point in the stream's elements\n * @property {music21.clef.Clef} clef - the clef for the Stream (if there is one; if there are multiple, then the first clef)\n * @property {music21.meter.TimeSignature} timeSignature - the first TimeSignature of the Stream\n * @property {music21.key.KeySignature} keySignature - the first KeySignature for the Stream\n * @property {music21.renderOptions.RenderOptions} renderOptions - an object specifying how to render the stream\n * @property {music21.stream.Stream} flat - (readonly) a flattened representation of the Stream\n * @property {music21.stream.Stream} notes - (readonly) the stream with only {@link music21.note.Note} and {@link music21.chord.Chord} objects included\n * @property {music21.stream.Stream} notesAndRests - (readonly) like notes but also with {@link music21.note.Rest} objects included\n * @property {music21.stream.Stream} parts - (readonly) a filter on the Stream to just get the parts (NON-recursive)\n * @property {music21.stream.Stream} measures - (readonly) a filter on the Stream to just get the measures (NON-recursive)\n * @property {number} tempo - tempo in beats per minute (will become more sophisticated later, but for now the whole stream has one tempo\n * @property {music21.instrument.Instrument|undefined} instrument - an instrument object associated with the stream (can be set with a string also, but will return an `Instrument` object)\n * @property {Boolean} autoBeam - whether the notes should be beamed automatically or not (will be moved to `renderOptions` soon)\n * @property {Vex.Flow.Stave|undefined} activeVFStave - the current Stave object for the Stream\n * @property {music21.vfShow.Renderer|undefined} activeVFRenderer - the current vfShow.Renderer object for the Stream\n * @property {int} [staffLines=5] - number of staff lines\n * @property {function|undefined} changedCallbackFunction - function to call when the Stream changes through a standard interface\n * @property {number} maxSystemWidth - confusing... should be in renderOptions\n */\nexport class Stream extends base.Music21Object {\n    constructor() {\n        super();\n        // class variables;\n        this.isStream = true;\n        this.isMeasure = false;\n        this.classSortOrder = -20;\n        this.recursionType = 'elementsFirst';\n\n        this._duration = undefined;\n\n        this._elements = [];\n        this._offsetDict = new WeakMap();\n\n        this.autoSort = true;\n        this.isSorted = true;\n        this.isFlat = true;\n\n        this._clef = undefined;\n        this.displayClef = undefined;\n\n        this._keySignature = undefined; // a music21.key.KeySignature object\n        this._timeSignature = undefined; // a music21.meter.TimeSignature object\n        this._instrument = undefined;\n\n        this._autoBeam = undefined;\n        this.activeVFStave = undefined;\n        this.activeVFRenderer = undefined;\n        this.renderOptions = new renderOptions.RenderOptions();\n        this._tempo = undefined;\n\n        this.staffLines = 5;\n\n        this._stopPlaying = false;\n        this._allowMultipleSimultaneousPlays = true; // not implemented yet.\n        this.changedCallbackFunction = undefined; // for editable svges\n        /**\n         * A function bound to the current stream that\n         * will changes the stream. Used in editableAccidentalDOM, among other places.\n         *\n         *      var can = s.appendNewDOM();\n         *      $(can).on('click', s.DOMChangerFunction);\n         *\n         * @param {Event} e\n         * @returns {music21.base.Music21Object|undefined} - returns whatever changedCallbackFunction does.\n         */\n        this.DOMChangerFunction = e => {\n            const canvasOrSVGElement = e.currentTarget;\n            const [clickedDiatonicNoteNum, foundNote] = this.findNoteForClick(\n                canvasOrSVGElement,\n                e\n            );\n            if (foundNote === undefined) {\n                if (debug) {\n                    console.log('No note found');\n                }\n                return undefined;\n            }\n            return this.noteChanged(\n                clickedDiatonicNoteNum,\n                foundNote,\n                canvasOrSVGElement\n            );\n        };\n    }\n    * [Symbol.iterator]() {\n        if (this.autoSort && !this.isSorted) {\n            this.sort();\n        }\n\n        for (let i = 0; i < this.length; i++) {\n            yield this.get(i);\n        }\n    }\n\n    forEach(callback, thisArg) {\n        if (thisArg !== undefined) {\n            callback = callback.bind(thisArg);\n        }\n        let i = 0;\n        for (const el of this) {\n            callback(el, i, this);\n            i += 1;\n        }\n    }\n\n\n    get duration() {\n        if (this._duration !== undefined) {\n            return this._duration;\n        }\n        return new duration.Duration(this.highestTime);\n    }\n    set duration(newDuration) {\n        this._duration = newDuration;\n    }\n    get highestTime() {\n        let highestTime = 0.0;\n        for (const el of this) {\n            let endTime = el.offset;\n            if (el.duration !== undefined) {\n                endTime += el.duration.quarterLength;\n            }\n            if (endTime > highestTime) {\n                highestTime = endTime;\n            }\n        }\n        return highestTime;\n    }\n\n    get semiFlat() {\n        return this._getFlatOrSemiFlat(true);\n    }\n\n    get flat() {\n        return this._getFlatOrSemiFlat(false);\n    }\n\n    _getFlatOrSemiFlat(retainContainers) {\n        const newSt = this.clone(false);\n        if (!this.isFlat) {\n            newSt.elements = [];\n            for (const el of this) {\n                if (el.isStream) {\n                    if (retainContainers) {\n                        newSt.append(el);\n                    }\n                    const offsetShift = this.elementOffset(el);\n                    // console.log('offsetShift', offsetShift, el.classes[el.classes.length -1]);\n                    const elFlat = el._getFlatOrSemiFlat(retainContainers);\n                    for (const elFlatElement of elFlat) {\n                        // offset should NOT be null because already in Stream\n                        const elFlatElementOffset = elFlat.elementOffset(elFlatElement);\n                        newSt.insert(elFlatElementOffset + offsetShift, elFlatElement);\n                    }\n                } else {\n                    newSt.insert(this.elementOffset(el), el);\n                }\n            }\n        }\n        if (!retainContainers) {\n            newSt.isFlat = true;\n            this.coreElementsChanged({ updateIsFlat: false });\n        } else {\n            this.coreElementsChanged();\n        }\n        return newSt;\n    }\n\n    get notes() {\n        return this.getElementsByClass(['Note', 'Chord']);\n    }\n    get notesAndRests() {\n        return this.getElementsByClass('GeneralNote');\n    }\n    get tempo() {\n        if (this._tempo === undefined && this.activeSite !== undefined) {\n            return this.activeSite.tempo;\n        } else if (this._tempo === undefined) {\n            return 150;\n        } else {\n            return this._tempo;\n        }\n    }\n    set tempo(newTempo) {\n        this._tempo = newTempo;\n    }\n    get instrument() {\n        if (this._instrument === undefined && this.activeSite !== undefined) {\n            return this.activeSite.instrument;\n        } else {\n            return this._instrument;\n        }\n    }\n    set instrument(newInstrument) {\n        if (typeof newInstrument === 'string') {\n            newInstrument = new instrument.Instrument(newInstrument);\n        }\n        this._instrument = newInstrument;\n    }\n\n    _specialContext(attr) {\n        const privAttr = '_' + attr;\n        if (this[privAttr] !== undefined) {\n            return this[privAttr];\n        }\n        // should be:\n        // const contextClef = this.getContextByClass('Clef');\n//        const context = this.getContextByClass('Stream', { getElementMethod: 'getElementBefore' });\n//        let contextObj;\n//        if (context !== undefined && context !== this) {\n//            contextObj = context[privAttr];\n//        }\n        for (const site of this.sites.yieldSites()) {\n            if (site === undefined) {\n                continue;\n            }\n            const contextObj = site._firstElementContext('attr') || site._specialContext('attr');\n            if (contextObj !== undefined) {\n                return contextObj;\n            }\n        }\n        return undefined;\n    }\n\n    _firstElementContext(attr) {\n        const firstElements = this\n            .getElementsByOffset(0.0)\n            .getElementsByClass(attr.charAt(0).toUpperCase() + attr.slice(1));\n        if (firstElements.length) {\n            return firstElements.get(0);\n        } else {\n            return undefined;\n        }\n    }\n\n    get clef() {\n        return this.getSpecialContext('clef', true);\n    }\n    set clef(newClef) {\n        const oldClef = this._firstElementContext('clef');\n        if (oldClef !== undefined) {\n            this.replace(oldClef, newClef);\n        } else {\n            this.insert(0.0, newClef);\n        }\n        this._clef = newClef;\n    }\n\n    get keySignature() {\n        return this.getSpecialContext('keySignature', true);\n    }\n    set keySignature(newKeySignature) {\n        const oldKS = this._firstElementContext('keySignature');\n        if (oldKS !== undefined) {\n            this.replace(oldKS, newKeySignature);\n        } else {\n            this.insert(0.0, newKeySignature);\n        }\n        this._keySignature = newKeySignature;\n    }\n\n    get timeSignature() {\n        return this.getSpecialContext('timeSignature', true);\n    }\n    set timeSignature(newTimeSignature) {\n        if (typeof newTimeSignature === 'string') {\n            newTimeSignature = new meter.TimeSignature(newTimeSignature);\n        }\n        const oldTS = this._firstElementContext('timeSignature');\n        if (oldTS !== undefined) {\n            this.replace(oldTS, newTimeSignature);\n        } else {\n            this.insert(0.0, newTimeSignature);\n        }\n        this._timeSignature = newTimeSignature;\n    }\n\n    get autoBeam() {\n        return this._specialContext('autoBeam');\n    }\n    set autoBeam(ab) {\n        this._autoBeam = ab;\n    }\n\n    get maxSystemWidth() {\n        let baseMaxSystemWidth = 750;\n        if (\n            this.renderOptions.maxSystemWidth === undefined\n            && this.activeSite !== undefined\n        ) {\n            baseMaxSystemWidth = this.activeSite.maxSystemWidth;\n        } else if (this.renderOptions.maxSystemWidth !== undefined) {\n            baseMaxSystemWidth = this.renderOptions.maxSystemWidth;\n        }\n        return baseMaxSystemWidth / this.renderOptions.scaleFactor.x;\n    }\n    set maxSystemWidth(newSW) {\n        this.renderOptions.maxSystemWidth\n            = newSW * this.renderOptions.scaleFactor.x;\n    }\n\n    get parts() {\n        return this.getElementsByClass('Part');\n    }\n    get measures() {\n        return this.getElementsByClass('Measure');\n    }\n    get voices() {\n        return this.getElementsByClass('Voice');\n    }\n\n    get length() {\n        return this._elements.length;\n    }\n    get elements() {\n        return this._elements;\n    }\n    set elements(newElements) {\n        let highestOffsetSoFar = 0.0;\n        this.clear();\n        const tempInsert = [];\n        let i;\n        let thisEl;\n        if (newElements.isStream === true) {\n            // iterate to set active site;\n            for (const unused of newElements) {} // eslint-disable-line no-empty\n            newElements = newElements.elements;\n        }\n\n        for (i = 0; i < newElements.length; i++) {\n            thisEl = newElements[i];\n            const thisElOffset = thisEl.offset;\n            if (thisElOffset === undefined || thisElOffset === highestOffsetSoFar) {\n                // append\n                this._elements.push(thisEl);\n                this.setElementOffset(thisEl, highestOffsetSoFar);\n                if (thisEl.duration === undefined) {\n                    console.error('No duration for ', thisEl, ' in ', this);\n                }\n                highestOffsetSoFar += thisEl.duration.quarterLength;\n            } else {\n                // append -- slow\n                tempInsert.push(thisEl);\n            }\n        }\n        // console.warn('end', highestOffsetSoFar, tempInsert);\n        for (i = 0; i < tempInsert.length; i++) {\n            thisEl = tempInsert[i];\n            this.insert(thisEl.offset, thisEl);\n        }\n        this.coreElementsChanged(); // would be called already if newElements != [];\n    }\n\n    /**\n     * getSpecialContext is a transitional replacement for\n     * .clef, .keySignature, .timeSignature that looks\n     * for context to get the appropriate element as ._clef, etc.\n     * as a way of making the older music21j attributes still work while\n     * transitioning to a more music21p-like approach.\n     *\n     * May be removed\n     */\n    getSpecialContext(context, warnOnCall=false) {\n        const first_el = this._firstElementContext(context);\n        if (first_el !== undefined) {\n            return first_el;\n        }\n        const special_context = this._specialContext(context);\n        if (special_context === undefined) {\n            return undefined;\n        }\n        if (warnOnCall) {\n            console.warn(`Calling special context ${context}!`);\n        }\n        return special_context;\n    }\n\n    clear() {\n        this._elements = [];\n        this._offsetDict = new WeakMap();\n        this.isFlat = true;\n        this.isSorted = true;\n    }\n\n    /* override protoM21Object.clone() */\n    clone(deep=true) {\n        const ret = Object.create(this.constructor.prototype);\n        for (const key in this) {\n            if ({}.hasOwnProperty.call(this, key) === false) {\n                continue;\n            }\n            if (key === '_activeSite') {\n                ret[key] = this[key];\n            } else if (key === 'renderOptions') {\n                ret[key] = common.merge({}, this[key]);\n            } else if (\n                deep !== true\n                && (key === '_elements')\n            ) {\n                ret[key] = this[key].slice(); // shallow copy...\n            } else if (deep !== true && key === '_offsetDict') {\n                ret._offsetDict = new WeakMap();\n                for (const el of this.elements) {\n                    ret._offsetDict.set(el, this._offsetDict.get(el));\n                }\n            } else if (\n                deep\n                && (key === '_elements' || key === '_offsetDict')\n            ) {\n                if (key === '_elements') {\n                    // console.log('got elements for deepcopy');\n                    ret.clear();\n                    for (let j = 0; j < this._elements.length; j++) {\n                        const el = this._elements[j];\n                        // console.log('cloning el: ', el.name);\n                        const elCopy = el.clone(deep);\n                        ret._elements[j] = elCopy;\n                        ret._offsetDict.set(elCopy, this._offsetDict.get(el));\n                        elCopy.activeSite = ret;\n                    }\n                }\n            } else if (\n                key === 'activeVexflowNote'\n                || key === 'storedVexflowstave'\n            ) {\n                // do nothing -- do not copy vexflowNotes -- permanent recursion\n            } else if (key in this._cloneCallbacks) {\n                if (this._cloneCallbacks[key] === true) {\n                    ret[key] = this[key];\n                } else if (this._cloneCallbacks[key] === false) {\n                    ret[key] = undefined;\n                } else {\n                    // call the cloneCallbacks function\n                    this._cloneCallbacks[key](key, ret, this);\n                }\n            } else if (\n                Object.getOwnPropertyDescriptor(this, key).get !== undefined\n                || Object.getOwnPropertyDescriptor(this, key).set !== undefined\n            ) {\n                // do nothing\n            } else if (typeof this[key] === 'function') {\n                // do nothing -- events might not be copied.\n            } else if (\n                this[key] !== null\n                && this[key] !== undefined\n                && this[key].isMusic21Object === true\n            ) {\n                // console.log('cloning...', key);\n                ret[key] = this[key].clone(deep);\n            } else {\n                ret[key] = this[key];\n            }\n        }\n        ret.coreElementsChanged();\n        return ret;\n    }\n\n    coreElementsChanged({\n        updateIsFlat=true,\n        clearIsSorted=true,\n        memo=undefined, // unused\n        keepIndex=false, // unused\n    }={}) {\n        if (clearIsSorted) {\n            this.isSorted = false;\n        }\n        if (updateIsFlat) {\n            this.isFlat = true;\n            for (const e of this._elements) {\n                if (e.isStream) {\n                    this.isFlat = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    recurse({\n        streamsOnly=false,\n        restoreActiveSites=true,\n        classFilter=undefined,\n        skipSelf=true,\n    }={}) {\n        const includeSelf = !skipSelf;\n        const ri = new iterator.RecursiveIterator(this,\n            {\n                streamsOnly,\n                restoreActiveSites,\n                includeSelf,\n            }\n        );\n        if (classFilter !== undefined) {\n            ri.addFilter(new filters.ClassFilter(classFilter));\n        }\n        return ri;\n    }\n\n    /**\n     * Add an element to the end of the stream, setting its `.offset` accordingly\n     *\n     * @param {music21.base.Music21Object|Array} elOrElList - element or list of elements to append\n     * @returns {this}\n     */\n    append(elOrElList) {\n        if (Array.isArray(elOrElList)) {\n            for (const el of elOrElList) {\n                this.append(el);\n            }\n            return this;\n        }\n\n        const el = elOrElList;\n        try {\n            if (\n                el.isClassOrSubclass !== undefined\n                && el.isClassOrSubclass('NotRest')\n            ) {\n                // set stem direction on output...;\n            }\n            const elOffset = this.highestTime;\n            this._elements.push(el);\n            this.setElementOffset(el, elOffset);\n            el.offset = elOffset;\n            el.sites.add(this);\n            el.activeSite = this; // would prefer weakref, but does not exist in JS.\n        } catch (err) {\n            console.error(\n                'Cannot append element ',\n                el,\n                ' to stream ',\n                this,\n                ' : ',\n                err\n            );\n        }\n        this.coreElementsChanged({ clearIsSorted: false });\n        return this;\n    }\n\n    sort() {\n        if (this.isSorted) {\n            return this;\n        }\n        this._elements.sort((a, b) => this._offsetDict.get(a) - this._offsetDict.get(b)\n            || a.priority - b.priority\n            || a.classSortOrder - b.classSortOrder\n        );\n        this.isSorted = true;\n        return this;\n    }\n\n    /**\n     * Add an element to the specified place in the stream, setting its `.offset` accordingly\n     *\n     * @param {number} offset - offset to place.\n     * @param {music21.base.Music21Object} el - element to append\n     * @param {Object} [config] -- configuration options\n     * @param {boolean} [config.ignoreSort=false] -- do not sort\n     * @param {boolean} [config.setActiveSite=true] -- set the active site for the inserted element.\n     * @returns {this}\n     */\n    insert(offset, el, { ignoreSort=false, setActiveSite=true }={}) {\n        if (el === undefined) {\n            throw new StreamException('Cannot insert without an element.');\n        }\n        try {\n            if (!ignoreSort) {\n                if (offset <= this.highestTime) {\n                    this.isSorted = false;\n                }\n            }\n            this._elements.push(el);\n            this.setElementOffset(el, offset);\n            el.sites.add(this);\n            if (setActiveSite) {\n                el.activeSite = this;\n            }\n            this.coreElementsChanged({ clearIsSorted: false });\n        } catch (err) {\n            console.error(\n                'Cannot insert element ',\n                el,\n                ' to stream ',\n                this,\n                ' : ',\n                err\n            );\n        }\n        return this;\n    }\n\n    /**\n     * Inserts a single element at offset, shifting elements at or after it begins\n     * later in the stream.\n     *\n     * In single argument form, assumes it is an element and takes the offset from the element.\n     *\n     * Unlike music21p, does not take a list of elements.  TODO(msc): add this.\n     *\n     * @param {number|music21.base.Music21Object} offset -- offset of the item to insert\n     * @param {music21.base.Music21Object} [elementOrNone] -- element.\n     * @return this\n     */\n    insertAndShift(offset, elementOrNone) {\n        let element;\n        if (elementOrNone === undefined) {\n            element = offset;\n            offset = element.offset;\n        } else {\n            element = elementOrNone;\n        }\n        const amountToShift = element.duration.quarterLength;\n\n        let shiftingOffsets = false;\n        for (let i = 0; i < this.length; i++) {\n            const existingEl = this._elements[i];\n            const existingElOffset = this.elementOffset(existingEl);\n            if (!shiftingOffsets && existingElOffset >= offset) {\n                shiftingOffsets = true;\n            }\n            if (shiftingOffsets) {\n                this.setElementOffset(existingEl, existingElOffset + amountToShift);\n            }\n        }\n        this.insert(offset, element);\n        return this;\n    }\n\n    /**\n     * Return the first matched index\n     */\n    index(el) {\n        if (!this.isSorted && this.autoSort) {\n            this.sort();\n        }\n        const index = this._elements.indexOf(el);\n        if (index === -1) {\n            // endElements\n            throw new StreamException(\n                `cannot find object (${el}) in Stream`\n                );\n        }\n        return index;\n    }\n\n    /**\n     * Remove and return the last element in the stream,\n     * or return undefined if the stream is empty\n     *\n     * @returns {music21.base.Music21Object|undefined} last element in the stream\n     */\n    pop() {\n        if (!this.isSorted && this.autoSort) {\n            this.sort();\n        }\n        // remove last element;\n        if (this.length > 0) {\n            const el = this.get(-1);\n            this._elements.pop();\n            this._offsetDict.delete(el);\n            el.sites.remove(this);\n            this.coreElementsChanged({ clearIsSorted: false });\n            return el;\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Remove an object from this Stream.  shiftOffsets and recurse do nothing.\n     */\n    remove(targetOrList,\n            {\n                shiftOffsets=false,\n                recurse=false,\n            } = {}) {\n        if (shiftOffsets === true) {\n            throw new StreamException('sorry cannot shiftOffsets yet');\n        }\n        if (recurse === true) {\n            throw new StreamException('sorry cannot recurse yet');\n        }\n\n        let targetList;\n        if (!Array.isArray(targetOrList)) {\n            targetList = [targetOrList];\n        } else {\n            targetList = targetOrList;\n        }\n//        if (targetList.length > 1) {\n//            sort targetList\n//        }\n        // let shiftDur = 0.0; // for shiftOffsets\n        let i = -1;\n        for (const target of targetList) {\n            i += 1;\n            let indexInStream;\n            try {\n                indexInStream = this.index(target);\n            } catch (err) {\n                if (err instanceof StreamException) {\n                    if (recurse) {\n                        // do something\n                    }\n                    continue;\n                }\n                throw err;\n            }\n\n            // const matchOffset = this._offsetDict[indexInStream];\n            // let match;\n            // handle _endElements\n            // let matchedEndElement = false;\n            // let baseElementCount = this._elements.length;\n            this._elements.splice(indexInStream, 1);\n            this._offsetDict.delete(target);\n            target.activeSite = undefined;\n            target.sites.remove(this);\n            // remove from sites if needed.\n\n//            if (shiftOffsets) {\n//                const matchDuration = target.duration.quarterLength;\n//                const shiftedRegionStart = matchOffset + matchDuration;\n//                shiftDur += matchDuration;\n//                let shiftedRegionEnd;\n//                if ((i + 1) < targetList.length) {\n//                    const nextElIndex = this.index(targetList[i + 1]);\n//                    const nextElOffset = this._offsetDict[nextElIndex];\n//                    shiftedRegionEnd = nextElOffset;\n//                } else {\n//                    shiftedRegionEnd = this.duration.quarterLength;\n//                }\n//                if (shiftDur !== 0.0) {\n//                    for (const e of this.getElementsByOffset(\n//                       shiftedRegionStart,\n//                       shiftedRegionEnd,\n//                       {\n//                           includeEndBoundary: false,\n//                           mustFinishInSpan: false,\n//                           mustBeginInSpan: false,\n//                       }\n//                    )) {\n//                        const elementOffset = this.elementOffset(e);\n//                        this.setElementOffset(e, elementOffset - shiftDur);\n//                    }\n//                }\n//            }\n        }\n        this.coreElementsChanged({ clearIsSorted: false });\n    }\n\n    /**\n     *  Given a `target` object, replace it with\n     *  the supplied `replacement` object.\n     *\n     *  `recurse` and `allDerived` do not currently work.\n     *\n     *  Does nothing if target cannot be found.\n     */\n    replace(target, replacement, {\n        recurse=false,\n        allDerivated=true,\n    } = {}) {\n        try {\n            this.index(target);\n        } catch (err) {\n            if (err instanceof StreamException) {\n                return;\n            } else {\n                throw err;\n            }\n        }\n        const targetOffset = this.elementOffset(target);\n        this.remove(target);\n        this.insert(targetOffset, replacement);\n        this.coreElementsChanged({ clearIsSorted: false });\n    }\n\n    /**\n     * Get the `index`th element from the Stream.  Equivalent to the\n     * music21p format of s[index] using __getitem__.  Can use negative indexing to get from the end.\n     *\n     * Once Proxy objects are supported by all operating systems for\n     *\n     * @param {int} index - can be -1, -2, to index from the end, like python\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    get(index) {\n        // substitute for Python stream __getitem__; supports -1 indexing, etc.\n        if (!this.isSorted) {\n            this.sort();\n        }\n\n        let el;\n        if (index === undefined || isNaN(index)) {\n            return undefined;\n        } else if (Math.abs(index) > this._elements.length) {\n            return undefined;\n        } else if (index === this._elements.length) {\n            return undefined;\n        } else if (index < 0) {\n            el = this._elements[this._elements.length + index];\n            el.activeSite = this;\n            return el;\n        } else {\n            el = this._elements[index];\n            el.activeSite = this;\n            return el;\n        }\n    }\n\n    /**\n     *\n     */\n    set(index, newEl) {\n        const replaceEl = this.get(index);\n        if (replaceEl === undefined) {\n            throw new StreamException(`Cannot set element at index ${index}.`);\n        }\n        this.replace(replaceEl, newEl);\n        return this;\n    }\n\n\n    setElementOffset(el, value, addElement=false) {\n        if (!this._elements.includes(el)) {\n            if (addElement) {\n                this.insert(value, el);\n                return;\n            } else {\n                throw new StreamException(\n                        'Cannot set the offset for elemenet '\n                            + el.toString()\n                            + ', not in Stream'\n                );\n            }\n        }\n        this._offsetDict.set(el, value);\n        el.activeSite = this;\n    }\n\n    elementOffset(element, stringReturns=false) {\n        if (!this._offsetDict.has(element)) {\n            throw new StreamException(\n                'An entry for this object ' + element.toString() + ' is not stored in this Stream.'\n            );\n        } else {\n            return this._offsetDict.get(element);\n        }\n    }\n\n    /*  --- ############# END ELEMENT FUNCTIONS ########## --- */\n\n    /**\n     * Takes a stream and places all of its elements into\n     * measures (:class:`~music21.stream.Measure` objects)\n     * based on the :class:`~music21.meter.TimeSignature` objects\n     * placed within\n     * the stream. If no TimeSignatures are found in the\n     * stream, a default of 4/4 is used.\n\n     * If `options.inPlace` is true, the original Stream is modified and lost\n     * if `options.inPlace` is False, this returns a modified deep copy.\n\n     * @param {Object} [options]\n     * @returns {music21.stream.Stream}\n     */\n    makeMeasures(options) {\n        const params = {\n            meterStream: undefined,\n            refStreamOrTimeRange: undefined,\n            searchContext: false,\n            innerBarline: undefined,\n            finalBarline: 'final',\n            bestClef: false,\n            inPlace: false,\n        };\n        common.merge(params, options);\n        let voiceCount;\n        if (this.hasVoices()) {\n            voiceCount = this.getElementsByClass('Voice').length;\n        } else {\n            voiceCount = 0;\n        }\n        // meterStream\n        const meterStream = this.getElementsByClass('TimeSignature');\n        if (meterStream.length === 0) {\n            meterStream.append(this.timeSignature);\n        }\n        // getContextByClass('Clef')\n        const clefObj = this.getSpecialContext('clef') || this.getContextByClass('Clef');\n        const offsetMap = this.offsetMap();\n        let oMax = 0;\n        for (let i = 0; i < offsetMap.length; i++) {\n            if (offsetMap[i].endTime > oMax) {\n                oMax = offsetMap[i].endTime;\n            }\n        }\n        // console.log('oMax: ', oMax);\n        const post = new this.constructor();\n        // derivation\n        let o = 0.0;\n        let measureCount = 0;\n        let lastTimeSignature;\n        let m;\n        let mStart;\n        while (measureCount === 0 || o < oMax) {\n            m = new stream.Measure();\n            m.number = measureCount + 1;\n            // var thisTimeSignature = meterStream.getElementAtOrBefore(o);\n            const thisTimeSignature = this.timeSignature;\n            if (thisTimeSignature === undefined) {\n                break;\n            }\n            const oneMeasureLength\n                = thisTimeSignature.barDuration.quarterLength;\n            if (oneMeasureLength === 0) {\n                // if for some reason we are advancing not at all, then get out!\n                break;\n            }\n            if (measureCount === 0) {\n                // simplified...\n            }\n            m.clef = clefObj;\n            m.timeSignature = thisTimeSignature.clone();\n\n            for (let voiceIndex = 0; voiceIndex < voiceCount; voiceIndex++) {\n                const v = new stream.Voice();\n                v.id = voiceIndex;\n                m.insert(0, v);\n            }\n            post.insert(o, m);\n            o += oneMeasureLength;\n            measureCount += 1;\n        }\n        for (let i = 0; i < offsetMap.length; i++) {\n            const ob = offsetMap[i];\n            const e = ob.element;\n            const start = ob.offset;\n            const voiceIndex = ob.voiceIndex;\n\n            // if 'Spanner' in e.classes;\n            lastTimeSignature = undefined;\n            for (let j = 0; j < post.length; j++) {\n                m = post.get(j); // nothing but measures...\n                const foundTS = m.getSpecialContext('timeSignature');\n                if (foundTS !== undefined) {\n                    lastTimeSignature = foundTS;\n                }\n                mStart = m.getOffsetBySite(post);\n                const mEnd\n                    = mStart + lastTimeSignature.barDuration.quarterLength;\n                if (start >= mStart && start < mEnd) {\n                    break;\n                }\n            }\n            // if not match, raise Exception;\n            const oNew = start - mStart;\n            if (m.clef === e) {\n                continue;\n            }\n            if (oNew === 0 && e.isClassOrSubclass('TimeSignature')) {\n                continue;\n            }\n            let insertStream = m;\n            if (voiceIndex !== undefined) {\n                insertStream = m.getElementsByClass('Voice').get(voiceIndex);\n            }\n            insertStream.insert(oNew, e);\n        }\n        // set barlines, etc.\n        if (params.inPlace !== true) {\n            return post;\n        } else {\n            this.elements = [];\n            // endElements\n            // elementsChanged;\n            for (const e of post) {\n                this.insert(e.offset, e);\n            }\n            return this; // javascript style;\n        }\n    }\n\n    containerInHierarchy(el, { setActiveSite=true }={}) {\n        const elSites = el.sites;\n        for (const s of this.recurse({\n            skipSelf: false,\n            streamOnly: true,\n            restoreActiveSites: false,\n        })) {\n            if (elSites.includes(s)) {\n                if (setActiveSite) {\n                    el.activeSite = s;\n                }\n                return s;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * chordify does not yet work...\n     */\n    chordify({\n        addTies=true,\n        addPartIdAsGroup=true,\n        removeRedundantPitches=true,\n        toSoundingPitch=true,\n    }={}) {\n        const workObj = this;\n        let templateStream;\n        if (this.hasPartLikeStreams()) {\n            templateStream = workObj.getElementsByClass('Stream').get(0);\n        } else {\n            templateStream = workObj;\n        }\n        const template = templateStream.template({\n            fillWithRests: false,\n            removeClasses: ['GeneralNote'],\n            retainVoices: false,\n        });\n        return template;\n    }\n\n    template({\n        fillWithRests=true,\n        removeClasses=[],\n        retainVoices=true,\n    }={}) {\n        const out = this.cloneEmpty('template');\n        const restInfo = {\n            offset: undefined,\n            endTime: undefined,\n        };\n        const optionalAddRest = function optionalAddRest() {\n            if (!fillWithRests) {\n                return;\n            }\n            if (restInfo.offset === undefined) {\n                return;\n            }\n            const restQL = restInfo.endTime - restInfo.offset;\n            const restObj = new note.Rest();\n            restObj.duration.quarterLength = restQL;\n            out.insert(restInfo.offset, restObj);\n            restInfo.offset = undefined;\n            restInfo.endTime = undefined;\n        };\n        for (const el of stream) {\n            if (el.isStream\n                    && (retainVoices || el.classes.includes('Voice'))) {\n                optionalAddRest();\n                const outEl = el.template({\n                    fillWithRests,\n                    removeClasses,\n                    retainVoices,\n                });\n                out.insert(el.offset, outEl);\n            }\n        }\n    }\n\n    cloneEmpty(derivationMethod) {\n        const returnObj = this.constructor();\n        // TODO(msc): derivation\n        returnObj.mergeAttributes(this);\n        return returnObj;\n    }\n\n    mergeAttributes(other) {\n        super.mergeAttributes(other);\n        for (const attr of [\n            'autoSort',\n            'isSorted',\n            'definesExplicitSystemBreaks',\n            'definesEExplicitPageeBreaks',\n            '_atSoundingPitch',\n            '_mutable',\n        ]) {\n            if (Object.prototype.hasOwnProperty.call(other, attr)) {\n                this[attr] = other[attr];\n            }\n        }\n    }\n\n\n    /**\n     * makeNotation does not do anything yet, but it is a placeholder\n     * so it can start to be called.\n     */\n    makeNotation({ inPlace=true }={}) {\n        let out;\n        if (inPlace) {\n            out = this;\n        } else {\n            out = this.clone(true);\n        }\n        this.makeAccidentals();\n        return out;\n    }\n\n\n    /**\n     * Return a new Stream or modify this stream\n     * to have beams.\n     *\n     * NOT yet being called March 2018\n     */\n    makeBeams(options) {\n        const params = { inPlace: false };\n        common.merge(params, options);\n        let returnObj = this;\n        if (!params.inPlace) {\n            returnObj = this.clone(true);\n        }\n        let mColl;\n        if (this.classes.includes('Measure')) {\n            mColl = [returnObj];\n        } else {\n            mColl = [];\n            for (const m of returnObj.getElementsByClass('Measure')) {\n                mColl.push(m);\n            }\n        }\n        let lastTimeSignature;\n        for (const m of mColl) {\n            if (m.timeSignature !== undefined) {\n                lastTimeSignature = m.timeSignature;\n            }\n            if (lastTimeSignature === undefined) {\n                throw new StreamException('Need a Time Signature to process beams');\n            }\n            // todo voices!\n            if (m.length <= 1) {\n                continue; // nothing to beam.\n            }\n            const noteStream = m.notesAndRests;\n            const durList = [];\n            for (const n of noteStream) {\n                durList.push(n.duration);\n            }\n            const durSum = durList.map(a => a.quarterLength).reduce((total, val) => total + val);\n            const barQL = lastTimeSignature.barDuration.quarterLength;\n            if (durSum > barQL) {\n                continue;\n            }\n            let offset = 0.0;\n            if (m.paddingLeft !== 0.0 && m.paddingLeft !== undefined) {\n                offset = m.paddingLeft;\n            } else if (noteStream.highestTime < barQL) {\n                offset = barQL - noteStream.highestTime;\n            }\n            const beamsList = lastTimeSignature.getBeams(noteStream, { measureStartOffset: offset });\n            for (let i = 0; i < noteStream.length; i++) {\n                const n = noteStream.get(i);\n                const thisBeams = beamsList[i];\n                if (thisBeams !== undefined) {\n                    n.beams = thisBeams;\n                } else {\n                    n.beams = new beam.Beams();\n                }\n            }\n        }\n\n        // returnObj.streamStatus.beams = true;\n        return returnObj;\n    }\n\n    /**\n     * Returns a boolean value showing if this\n     * Stream contains any Parts or Part-like\n     * sub-Streams.\n     *\n     * Will deal with Part-like sub-streams later\n     * for now just checks for real Part objects.\n     *\n     * Part-like sub-streams are Streams that\n     * contain Measures or Notes. And where no\n     * sub-stream begins at an offset besides zero.\n     */\n    hasPartLikeStreams() {\n        for (const el of this) {\n            if (el.classes.includes('Part')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Returns true if any note in the stream has lyrics, otherwise false\n     *\n     * @returns {Boolean}\n     */\n    hasLyrics() {\n        for (const el of this) {\n            if (el.lyric !== undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a list of OffsetMap objects\n     *\n     * @returns [music21.stream.OffsetMap]\n     */\n    offsetMap() {\n        const offsetMap = [];\n        let groups = [];\n        if (this.hasVoices()) {\n            $.each(this.getElementsByClass('Voice'), (i, v) => {\n                groups.push([v.flat, i]);\n            });\n        } else {\n            groups = [[this, undefined]];\n        }\n        for (let i = 0; i < groups.length; i++) {\n            const group = groups[i][0];\n            const voiceIndex = groups[i][1];\n            for (let j = 0; j < group.length; j++) {\n                const e = group.get(j);\n                const dur = e.duration.quarterLength;\n                const offset = group.elementOffset(e);\n                const endTime = offset + dur;\n                const thisOffsetMap = new stream.OffsetMap(\n                    e,\n                    offset,\n                    endTime,\n                    voiceIndex\n                );\n                offsetMap.push(thisOffsetMap);\n            }\n        }\n        return offsetMap;\n    }\n\n    get iter() {\n        return new iterator.StreamIterator(this);\n    }\n\n    /**\n     * Find all elements with a certain class; if an Array is given, then any\n     * matching class will work.\n     *\n     * @param {string[]|string} classList - a list of classes to find\n     * @returns {music21.stream.Stream}\n     */\n    getElementsByClass(classList) {\n        return this.iter.getElementsByClass(classList);\n    }\n\n    /**\n     * Find all elements NOT with a certain class; if an Array is given, then any\n     * matching class will work.\n     *\n     * @param {string[]|string} classList - a list of classes to find\n     * @returns {music21.stream.Stream}\n     */\n    getElementsNotOfClass(classList) {\n        return this.iter.getElementsNotOfClass(classList);\n    }\n\n//    getElementsByClass(classList) {\n//        const tempEls = [];\n//        for (const thisEl of this) {\n//            // console.warn(thisEl);\n//            if (thisEl.isClassOrSubclass === undefined) {\n//                console.error(\n//                    'what the hell is a ',\n//                    thisEl,\n//                    'doing in a Stream?'\n//                );\n//            } else if (thisEl.isClassOrSubclass(classList)) {\n//                tempEls.push(thisEl);\n//            }\n//        }\n//        const newSt = this.clone(false);\n//        newSt.elements = tempEls;\n//        return newSt;\n//    }\n\n    /**\n     * Returns a new stream [StreamIterator does not yet exist in music21j]\n     * containing all Music21Objects that are found at a certain offset or\n     * within a certain offset time range (given the offsetStart and\n     * (optional) offsetEnd values).\n     *\n     * See music21p documentation for the effect of various parameters.\n     */\n    getElementsByOffset(\n        offsetStart,\n        offsetEnd,\n        {\n            includeEndBoundary=true,\n            mustFinishInSpan=false,\n            mustBeginInSpan=true,\n            includeElementsThatEndAtStart=true,\n            classList=undefined,\n        }={}) {\n\n        let s;\n        if (classList !== undefined) {\n            s = this.iter.getElementsByClass(classList);\n        } else {\n            s = this.iter;\n        }\n        s.getElementsByOffset(offsetStart, offsetEnd, {\n            includeEndBoundary,\n            mustFinishInSpan,\n            mustBeginInSpan,\n            includeElementsThatEndAtStart,\n        });\n        return s;\n    }\n\n    /**\n     *  Given an element (from another Stream) returns the single element\n     *  in this Stream that is sounding while the given element starts.\n     *\n     *  If there are multiple elements sounding at the moment it is\n     *  attacked, the method returns the first element of the same class\n     *  as this element, if any. If no element\n     *  is of the same class, then the first element encountered is\n     *  returned. For more complex usages, use allPlayingWhileSounding.\n     *\n     *  Returns None if no elements fit the bill.\n     *\n     *  The optional elStream is the stream in which el is found.\n     *  If provided, el's offset\n     *  in that Stream is used.  Otherwise, the current offset in\n     *  el is used.  It is just\n     *  in case you are paranoid that el.offset might not be what\n     *  you want, because of some fancy manipulation of\n     *  el.activeSite\n     *\n     * @param {music21.base.Music21Object} el - object with an offset and class to search for.\n     * @param {music21.stream.Stream|undefined} elStream - a place to get el's offset from.\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    playingWhenAttacked(el, elStream) {\n        let elOffset;\n        if (elStream !== undefined) {\n            elOffset = el.getOffsetBySite(elStream);\n        } else {\n            elOffset = el.offset;\n        }\n\n        const otherElements = this.getElementsByOffset(elOffset, elOffset, { mustBeginInSpan: false });\n        if (otherElements.length === 0) {\n            return undefined;\n        } else if (otherElements.length === 1) {\n            return otherElements.get(0);\n        } else {\n            for (const thisEl of otherElements) {\n                if (el.constructor === thisEl.constructor) {\n                    return thisEl;\n                }\n            }\n            return otherElements.get(0);\n        }\n    }\n\n\n    /**\n     * Sets Pitch.accidental.displayStatus for every element with a\n     * pitch or pitches in the stream. If a natural needs to be displayed\n     * and the Pitch does not have an accidental object yet, adds one.\n     *\n     * Called automatically before appendDOM routines are called.\n     *\n     * @returns {this}\n     */\n    makeAccidentals() {\n        // cheap version of music21p method\n        const extendableStepList = {};\n        const stepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n        const ks = this.keySignature || this.getContextByClass('KeySignature');\n        for (const stepName of stepNames) {\n            let stepAlter = 0;\n            if (ks !== undefined) {\n                const tempAccidental = ks.accidentalByStep(\n                    stepName\n                );\n                if (tempAccidental !== undefined) {\n                    stepAlter = tempAccidental.alter;\n                    // console.log(stepAlter + \" \" + stepName);\n                }\n            }\n            extendableStepList[stepName] = stepAlter;\n        }\n        const lastOctaveStepList = [];\n        for (let i = 0; i < 10; i++) {\n            const tempOctaveStepDict = $.extend({}, extendableStepList);\n            lastOctaveStepList.push(tempOctaveStepDict);\n        }\n        const lastOctavelessStepDict = $.extend({}, extendableStepList); // probably unnecessary, but safe...\n\n        for (const el of this) {\n            if (el.pitch !== undefined) {\n                // note\n                const p = el.pitch;\n                const lastStepDict = lastOctaveStepList[p.octave];\n                this._makeAccidentalForOnePitch(\n                    p,\n                    lastStepDict,\n                    lastOctavelessStepDict\n                );\n            } else if (el._notes !== undefined) {\n                // chord\n                for (const chordNote of el._notes) {\n                    const p = chordNote.pitch;\n                    const lastStepDict = lastOctaveStepList[p.octave];\n                    this._makeAccidentalForOnePitch(\n                        p,\n                        lastStepDict,\n                        lastOctavelessStepDict\n                    );\n                }\n            }\n        }\n        return this;\n    }\n\n    //  returns pitch\n    _makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict) {\n        if (lastStepDict === undefined) {\n            // octave < 0 or > 10? -- error that appeared sometimes.\n            lastStepDict = {};\n        }\n        let newAlter;\n        if (p.accidental === undefined) {\n            newAlter = 0;\n        } else {\n            newAlter = p.accidental.alter;\n        }\n        // console.log(p.name + \" \" + lastStepDict[p.step].toString());\n        if (\n            lastStepDict[p.step] !== newAlter\n            || lastOctavelessStepDict[p.step] !== newAlter\n        ) {\n            if (p.accidental === undefined) {\n                p.accidental = new pitch.Accidental('natural');\n            }\n            p.accidental.displayStatus = true;\n            // console.log(\"setting displayStatus to true\");\n        } else if (\n            lastStepDict[p.step] === newAlter\n            && lastOctavelessStepDict[p.step] === newAlter\n        ) {\n            if (p.accidental !== undefined) {\n                p.accidental.displayStatus = false;\n            }\n            // console.log(\"setting displayStatus to false\");\n        }\n        lastStepDict[p.step] = newAlter;\n        lastOctavelessStepDict[p.step] = newAlter;\n        return p;\n    }\n\n    /**\n     * Sets the render options for any substreams (such as placing them\n     * in systems, etc.) DOES NOTHING for music21.stream.Stream, but is\n     * overridden in subclasses.\n     *\n     * @returns {this}\n     */\n    setSubstreamRenderOptions() {\n        /* does nothing for standard streams ... */\n        return this;\n    }\n    /**\n     * Resets all the RenderOptions back to defaults. Can run recursively\n     * and can also preserve the `RenderOptions.events` object.\n     *\n     * @param {Boolean} [recursive=false]\n     * @param {Boolean} [preserveEvents=false]\n     * @returns {this}\n     */\n    resetRenderOptions(recursive, preserveEvents) {\n        const oldEvents = this.renderOptions.events;\n        this.renderOptions = new renderOptions.RenderOptions();\n        if (preserveEvents) {\n            this.renderOptions.events = oldEvents;\n        }\n\n        if (recursive) {\n            for (const el of this) {\n                if (el.isClassOrSubclass('Stream')) {\n                    el.resetRenderOptions(recursive, preserveEvents);\n                }\n            }\n        }\n        return this;\n    }\n\n    //  * *********  VexFlow functionality\n\n    renderVexflowOnCanvas(canvasOrSVG) {\n        console.warn(\n            'renderVexflowOnCanvas is deprecated; call renderVexflow instead'\n        );\n        return this.renderVexflow(canvasOrSVG);\n    }\n\n    write(format='musicxml') {\n        return _exportMusicXMLAsText(this);\n    }\n\n\n    /**\n     * Uses {@link music21.vfShow.Renderer} to render Vexflow onto an\n     * existing canvas or SVG object.\n     *\n     * Runs `this.setRenderInteraction` on the canvas.\n     *\n     * Will be moved to vfShow eventually when converter objects are enabled...maybe.\n     *\n     * @param {Node|jQuery} canvasOrSVG - a canvas or the div surrounding an SVG object\n     * @returns {vfShow.Renderer}\n     */\n    renderVexflow(canvasOrSVG) {\n        if (canvasOrSVG.jquery) {\n            canvasOrSVG = canvasOrSVG[0];\n        }\n        const DOMContains = document.body.contains(canvasOrSVG);\n        if (!DOMContains) {\n            // temporarily add to DOM so Firefox can measure it...\n            document.body.appendChild(canvasOrSVG);\n        }\n\n        const tagName = canvasOrSVG.tagName.toLowerCase();\n\n        if (this.autoBeam === true) {\n            try {\n                this.makeBeams({ inPlace: true });\n            } catch (e) {\n                if (!e.toString().includes('Time Signature')) {\n                    throw e;\n                }\n            }\n        }\n        const vfr = new vfShow.Renderer(this, canvasOrSVG);\n        if (tagName === 'canvas') {\n            vfr.rendererType = 'canvas';\n        } else if (tagName === 'svg') {\n            vfr.rendererType = 'svg';\n        }\n        vfr.render();\n        this.setRenderInteraction(canvasOrSVG);\n        this.activeVFRenderer = vfr;\n        if (!DOMContains) {\n            // remove the adding to DOM so that Firefox could measure it...\n            document.body.removeChild(canvasOrSVG);\n        }\n\n        return vfr;\n    }\n\n    /**\n     * Estimate the stream height for the Stream.\n     *\n     * If there are systems they will be incorporated into the height unless `ignoreSystems` is `true`.\n     *\n     * @param {Boolean} [ignoreSystems=false]\n     * @returns {number} height in pixels\n     */\n    estimateStreamHeight(ignoreSystems) {\n        const staffHeight = this.renderOptions.naiveHeight;\n        let systemPadding = this.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = 0;\n        }\n        let numSystems;\n        if (this.isClassOrSubclass('Score')) {\n            const numParts = this.parts.length;\n            numSystems = this.numSystems();\n            if (numSystems === undefined || ignoreSystems) {\n                numSystems = 1;\n            }\n            let scoreHeight\n                = numSystems * staffHeight * numParts\n                + (numSystems - 1) * systemPadding;\n            if (numSystems > 1) {\n                // needs a little extra padding for some reason...\n                scoreHeight += systemPadding / 2;\n            }\n\n            // console.log('scoreHeight of ' + scoreHeight);\n            return scoreHeight;\n        } else if (this.isClassOrSubclass('Part')) {\n            numSystems = 1;\n            if (!ignoreSystems) {\n                numSystems = this.numSystems();\n            }\n            if (debug) {\n                console.log(\n                    'estimateStreamHeight for Part: numSystems ['\n                        + numSystems\n                        + '] * staffHeight ['\n                        + staffHeight\n                        + '] + (numSystems ['\n                        + numSystems\n                        + '] - 1) * systemPadding ['\n                        + systemPadding\n                        + '].'\n                );\n            }\n            return numSystems * staffHeight + (numSystems - 1) * systemPadding;\n        } else {\n            return staffHeight;\n        }\n    }\n\n    /**\n     * Estimates the length of the Stream in pixels.\n     *\n     * @returns {number} length in pixels\n     */\n    estimateStaffLength() {\n        let i;\n        let totalLength;\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (this.hasVoices()) {\n            let maxLength = 0;\n            for (const v of this) {\n                if (v.isClassOrSubclass('Stream')) {\n                    const thisLength\n                        = v.estimateStaffLength() + v.renderOptions.staffPadding;\n                    if (thisLength > maxLength) {\n                        maxLength = thisLength;\n                    }\n                }\n            }\n            return maxLength;\n        } else if (!this.isFlat) {\n            // part\n            totalLength = 0;\n            for (i = 0; i < this.length; i++) {\n                const m = this.get(i);\n                if (m.isClassOrSubclass('Stream')) {\n                    totalLength\n                        += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                    if (i !== 0 && m.renderOptions.startNewSystem === true) {\n                        break;\n                    }\n                }\n            }\n            return totalLength;\n        } else {\n            const rendOp = this.renderOptions;\n            totalLength = 30 * this.notesAndRests.length;\n            totalLength += rendOp.displayClef ? 30 : 0;\n            totalLength\n                += rendOp.displayKeySignature && this.getSpecialContext('keySignature')\n                    ? this.getSpecialContext('keySignature').width\n                    : 0;\n            totalLength += rendOp.displayTimeSignature ? 30 : 0;\n            // totalLength += rendOp.staffPadding;\n            return totalLength;\n        }\n    }\n\n    //  * ***** MIDI related routines...\n\n    /**\n     * Plays the Stream through the MIDI/sound playback (for now, only MIDI.js is supported)\n     *\n     * `options` can be an object containing:\n     * - instrument: {@link music21.instrument.Instrument} object (default, `this.instrument`)\n     * - tempo: number (default, `this.tempo`)\n     *\n     * @param {Object} [options] - object of playback options\n     * @returns {this}\n     */\n    playStream(options) {\n        const params = {\n            instrument: this.instrument,\n            tempo: this.tempo,\n            done: undefined,\n            startNote: undefined,\n        };\n        common.merge(params, options);\n        const startNoteIndex = params.startNote;\n        let currentNoteIndex = 0;\n        if (startNoteIndex !== undefined) {\n            currentNoteIndex = startNoteIndex;\n        }\n        const flatEls = this.flat.elements;\n        const lastNoteIndex = flatEls.length - 1;\n        this._stopPlaying = false;\n        const thisStream = this;\n\n        const playNext = function playNext(elements, params) {\n            if (currentNoteIndex <= lastNoteIndex && !thisStream._stopPlaying) {\n                const el = elements[currentNoteIndex];\n                let nextNote;\n                let playDuration;\n                if (currentNoteIndex < lastNoteIndex) {\n                    nextNote = elements[currentNoteIndex + 1];\n                    playDuration = nextNote.offset - el.offset;\n                } else {\n                    playDuration = el.duration.quarterLength;\n                }\n                const milliseconds = playDuration * 1000 * 60 / params.tempo;\n                if (debug) {\n                    console.log(\n                        'playing: ',\n                        el,\n                        playDuration,\n                        milliseconds,\n                        params.tempo\n                    );\n                }\n\n                if (el.playMidi !== undefined) {\n                    el.playMidi(params.tempo, nextNote, params);\n                }\n                currentNoteIndex += 1;\n                setTimeout(() => {\n                    playNext(elements, params);\n                }, milliseconds);\n            } else if (params && params.done) {\n                params.done.call();\n            }\n        };\n        playNext(flatEls, params);\n        return this;\n    }\n\n    /**\n     * Stops a stream from playing if it currently is.\n     *\n     * @returns {this}\n     */\n    stopPlayStream() {\n        // turns off all currently playing MIDI notes (on any stream) and stops playback.\n        this._stopPlaying = true;\n        for (let i = 0; i < 127; i++) {\n            MIDI.noteOff(0, i, 0);\n        }\n        return this;\n    }\n    /* ----------------------------------------------------------------------\n     *\n     *  SVG/Canvas DOM routines -- to be factored out eventually.\n     *\n     */\n\n    createNewCanvas(width, height, elementType='svg') {\n        console.warn('createNewCanvas is deprecated, use createNewDOM instead');\n        return this.createNewDOM(width, height, elementType);\n    }\n\n    /**\n     * Creates and returns a new `&lt;canvas&gt;` or `&lt;svg&gt;` object.\n     *\n     * Calls setSubstreamRenderOptions() first.\n     *\n     * Does not render on the DOM element.\n     *\n     * @param {number|string|undefined} width - will use `this.estimateStaffLength()` + `this.renderOptions.staffPadding` if not given\n     * @param {number|string|undefined} height - if undefined will use `this.renderOptions.height`. If still undefined, will use `this.estimateStreamHeight()`\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {jQuery} svg in jquery.\n     */\n    createNewDOM(width, height, elementType='svg') {\n        if (!this.isFlat) {\n            this.setSubstreamRenderOptions();\n        }\n\n        // we render SVG on a Div for Vexflow\n        let renderElementType = 'div';\n        if (elementType === 'canvas') {\n            renderElementType = 'canvas';\n        }\n\n        const $newCanvasOrDIV = $('<' + renderElementType + '/>');\n        $newCanvasOrDIV.addClass('streamHolding'); // .css('border', '1px red solid');\n        $newCanvasOrDIV.css('display', 'inline-block');\n\n        if (width !== undefined) {\n            if (typeof width === 'string') {\n                width = common.stripPx(width);\n            }\n            $newCanvasOrDIV.attr('width', width);\n        } else {\n            const computedWidth\n                = this.estimateStaffLength()\n                + this.renderOptions.staffPadding;\n            $newCanvasOrDIV.attr('width', computedWidth);\n        }\n        if (height !== undefined) {\n            $newCanvasOrDIV.attr('height', height);\n        } else {\n            let computedHeight;\n            if (this.renderOptions.height === undefined) {\n                computedHeight = this.estimateStreamHeight();\n                // console.log('computed Height estim: ' + computedHeight);\n            } else {\n                computedHeight = this.renderOptions.height;\n                // console.log('computed Height: ' + computedHeight);\n            }\n            $newCanvasOrDIV.attr(\n                'height',\n                computedHeight * this.renderOptions.scaleFactor.y\n            );\n        }\n        return $newCanvasOrDIV;\n    }\n\n    createPlayableCanvas(width, height, elementType = 'svg') {\n        console.warn(\n            'createPlayableCanvas is deprecated, use createPlayableDOM instead'\n        );\n        return this.createPlayableDOM(width, height, elementType);\n    }\n\n    /**\n     * Creates a rendered, playable svg where clicking plays it.\n     *\n     * Called from appendNewDOM() etc.\n     *\n     * @param {number|string|undefined} width\n     * @param {number|string|undefined} height\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {jQuery} canvas or svg\n     */\n    createPlayableDOM(width, height, elementType='svg') {\n        this.renderOptions.events.click = 'play';\n        return this.createDOM(width, height, elementType);\n    }\n\n    createCanvas(width, height, elementType='svg') {\n        console.warn('createCanvas is deprecated, use createDOM');\n        return this.createDOM(width, height, elementType);\n    }\n    /**\n     * Creates a new svg and renders vexflow on it\n     *\n     * @param {number|string|undefined} [width]\n     * @param {number|string|undefined} [height]\n     * @param {string} elementType - what type of element svg or canvas, default = svg\n     * @returns {jQuery} canvas or SVG\n     */\n    createDOM(width, height, elementType='svg') {\n        const $newSvg = this.createNewDOM(width, height, elementType);\n        // temporarily append the SVG to the document to fix a Firefox bug\n        // where nothing can be measured unless is it in the document.\n        this.renderVexflow($newSvg);\n        return $newSvg;\n    }\n\n    appendNewCanvas(appendElement, width, height, elementType='svg') {\n        console.warn('appendNewCanvas is deprecated, use appendNewDOM instead');\n        return this.appendNewDOM(appendElement, width, height, elementType);\n    }\n\n    /**\n     * Creates a new canvas, renders vexflow on it, and appends it to the DOM.\n     *\n     * @param {jQuery|Node} [appendElement=document.body] - where to place the svg\n     * @param {number|string} [width]\n     * @param {number|string} [height]\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {SVGAElement|Node} svg (not the jQueryDOMObject --\n     * this is a difference with other routines and should be fixed. TODO: FIX)\n     *\n     */\n    appendNewDOM(appendElement, width, height, elementType='svg') {\n        if (appendElement === undefined) {\n            appendElement = 'body';\n        }\n        let $appendElement = appendElement;\n        if (appendElement.jquery === undefined) {\n            $appendElement = $(appendElement);\n        }\n\n        //      if (width === undefined && this.renderOptions.maxSystemWidth === undefined) {\n        //      var $bodyElement = bodyElement;\n        //      if (bodyElement.jquery === undefined) {\n        //      $bodyElement = $(bodyElement);\n        //      }\n        //      width = $bodyElement.width();\n        //      };\n\n        const svgOrCanvasBlock = this.createDOM(width, height, elementType);\n        $appendElement.append(svgOrCanvasBlock);\n        return svgOrCanvasBlock[0];\n    }\n\n    replaceCanvas(where, preserveSvgSize, elementType = 'svg') {\n        console.warn('replaceCanvas is deprecated, use replaceDOM instead');\n        return this.replaceDOM(where, preserveSvgSize, elementType);\n    }\n\n    /**\n     * Replaces a particular Svg with a new rendering of one.\n     *\n     * Note that if 'where' is empty, will replace all svg elements on the page.\n     *\n     * @param {jQuery|Node} [where] - the canvas or SVG to replace or a container holding the canvas(es) to replace.\n     * @param {Boolean} [preserveSvgSize=false]\n     * @param {string} elementType - what type of element, default = svg\n     * @returns {jQuery} the svg\n     */\n    replaceDOM(where, preserveSvgSize, elementType='svg') {\n        // if called with no where, replaces all the svges on the page...\n        if (where === undefined) {\n            where = document.body;\n        }\n        let $where;\n        if (where.jquery === undefined) {\n            $where = $(where);\n        } else {\n            $where = where;\n            // where = $where[0];\n        }\n        let $oldSVGOrCanvas;\n\n        if ($where.hasClass('streamHolding')) {\n            $oldSVGOrCanvas = $where;\n        } else {\n            $oldSVGOrCanvas = $where.find('.streamHolding');\n        }\n        // TODO: Max Width!\n        if ($oldSVGOrCanvas.length === 0) {\n            throw new Music21Exception('No svg defined for replaceDOM!');\n        } else if ($oldSVGOrCanvas.length > 1) {\n            // change last svg...\n            // replacing each with svgBlock doesn't work\n            // anyhow, it just resizes the svg but doesn't\n            // draw.\n            $oldSVGOrCanvas = $($oldSVGOrCanvas[$oldSVGOrCanvas.length - 1]);\n        }\n\n        let svgBlock;\n        if (preserveSvgSize) {\n            const width = $oldSVGOrCanvas.width() || parseInt($oldSVGOrCanvas.attr('width'));\n            const height = $oldSVGOrCanvas.attr('height'); // height manipulates\n            svgBlock = this.createDOM(width, height, elementType);\n        } else {\n            svgBlock = this.createDOM(undefined, undefined, elementType);\n        }\n\n        $oldSVGOrCanvas.replaceWith(svgBlock);\n        return svgBlock;\n    }\n\n\n    /**\n     * Set the type of interaction on the svg based on\n     *    - Stream.renderOptions.events.click\n     *    - Stream.renderOptions.events.dblclick\n     *    - Stream.renderOptions.events.resize\n     *\n     * Currently the only options available for each are:\n     *    - 'play' (string)\n     *    - 'reflow' (string; only on event.resize)\n     *    - customFunction (will receive event as a first variable; should set up a way to\n     *                    find the original stream; var s = this; var f = function () { s...}\n     *                   )\n     *\n     * @param {Node} canvasOrDiv - canvas or the Div surrounding it.\n     * @returns {this}\n     */\n    setRenderInteraction(canvasOrDiv) {\n        let $svg = canvasOrDiv;\n        if (canvasOrDiv === undefined) {\n            return this;\n        } else if (canvasOrDiv.jquery === undefined) {\n            $svg = $(canvasOrDiv);\n        }\n        const playFunc = () => {\n            this.playStream();\n        };\n\n        $.each(\n            this.renderOptions.events,\n            $.proxy(function setRenderInteractionProxy(\n                eventType,\n                eventFunction\n            ) {\n                $svg.off(eventType);\n                if (\n                    typeof eventFunction === 'string'\n                    && eventFunction === 'play'\n                ) {\n                    $svg.on(eventType, playFunc);\n                } else if (\n                    typeof eventFunction === 'string'\n                    && eventType === 'resize'\n                    && eventFunction === 'reflow'\n                ) {\n                    this.windowReflowStart($svg);\n                } else if (eventFunction !== undefined) {\n                    $svg.on(eventType, eventFunction);\n                }\n            },\n            this)\n        );\n        return this;\n    }\n\n    /**\n     *\n     * Recursively search downward for the closest storedVexflowStave...\n     *\n     * @returns {Vex.Flow.Stave|undefined}\n     */\n    recursiveGetStoredVexflowStave() {\n        const storedVFStave = this.storedVexflowStave;\n        if (storedVFStave === undefined) {\n            if (this.isFlat) {\n                return undefined;\n            } else {\n                const subStreams = this.getElementsByClass('Stream');\n                const first_subStream = subStreams.get(0);\n                return first_subStream.recursiveGetStoredVexflowStave();\n            }\n        }\n        return storedVFStave;\n    }\n\n    getUnscaledXYforCanvas(svg, e) {\n        console.warn(\n            'getUnscaledXYforCanvas is deprecated, use getUnscaledXYforDOM instead'\n        );\n        return this.getUnscaledXYforDOM(svg, e);\n    }\n\n    /**\n     * Given a mouse click, or other event with .pageX and .pageY,\n     * find the x and y for the svg.\n     *\n     * @param {Node|SVGElement} svg - a canvas or SVG object\n     * @param {Event} e\n     * @returns {Array<number>} two-elements, [x, y] in pixels.\n     */\n    getUnscaledXYforDOM(svg, e) {\n        let offset = null;\n        if (svg === undefined) {\n            offset = { left: 0, top: 0 };\n        } else {\n            offset = $(svg).offset();\n        }\n        /*\n         * mouse event handler code from: http://diveintohtml5.org/canvas.html\n         */\n        let xClick;\n        let yClick;\n        if (e.pageX !== undefined && e.pageY !== undefined) {\n            xClick = e.pageX;\n            yClick = e.pageY;\n        } else {\n            xClick\n                = e.clientX\n                + document.body.scrollLeft\n                + document.documentElement.scrollLeft;\n            yClick\n                = e.clientY\n                + document.body.scrollTop\n                + document.documentElement.scrollTop;\n        }\n        const xPx = xClick - offset.left;\n        const yPx = yClick - offset.top;\n        return [xPx, yPx];\n    }\n\n    getScaledXYforCanvas(svg, e) {\n        console.warn(\n            'getScaledXYforCanvas is deprecated, use getScaledXYforDOM instead'\n        );\n        return this.getScaledXYforDOM(svg, e);\n    }\n\n    /**\n     * return a list of [scaledX, scaledY] for\n     * a svg element.\n     *\n     * xScaled refers to 1/scaleFactor.x -- for instance, scaleFactor.x = 0.7 (default)\n     * x of 1 gives 1.42857...\n     *\n     * @param {Node|SVGElement} svg -- a canvas or SVG object\n     * @param {Event} e\n     * @returns {Array<number>} [scaledX, scaledY]\n     */\n    getScaledXYforDOM(svg, e) {\n        const [xPx, yPx] = this.getUnscaledXYforDOM(svg, e);\n        const pixelScaling = this.renderOptions.scaleFactor;\n\n        const yPxScaled = yPx / pixelScaling.y;\n        const xPxScaled = xPx / pixelScaling.x;\n        return [xPxScaled, yPxScaled];\n    }\n    /**\n     *\n     * Given a Y position find the diatonicNoteNum that a note at that position would have.\n     *\n     * searches this.storedVexflowStave\n     *\n     * Y position must be offset from the start of the stave...\n     *\n     * @param {number} yPxScaled\n     * @returns {number}\n     */\n    diatonicNoteNumFromScaledY(yPxScaled) {\n        const storedVFStave = this.recursiveGetStoredVexflowStave();\n        if (storedVFStave === undefined) {\n            throw new StreamException('Could not find vexflowStave for getting size');\n        }\n\n        // for (var i = -10; i < 10; i++) {\n        //    console.log(\"line: \" + i + \" y: \" + storedVFStave.getYForLine(i));\n        // }\n        const thisClef = this.clef || this.getContextByClass('Clef');\n        const lowestLine = (thisClef !== undefined) ? thisClef.lowestLine : 31;\n\n        const lineSpacing = storedVFStave.options.spacing_between_lines_px;\n        const linesAboveStaff = storedVFStave.options.space_above_staff_ln;\n\n        const notesFromTop = yPxScaled * 2 / lineSpacing;\n        const notesAboveLowestLine\n            = (storedVFStave.options.num_lines - 1 + linesAboveStaff) * 2\n            - notesFromTop;\n        const clickedDiatonicNoteNum = lowestLine + Math.round(notesAboveLowestLine);\n        return clickedDiatonicNoteNum;\n    }\n\n    /**\n     * Returns the stream that is at X location xPxScaled and system systemIndex.\n     *\n     * Override in subclasses, always returns this; here.\n     *\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {this}\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        return this;\n    }\n\n    /**\n     *\n     * Return the note (or chord or rest) at pixel X (or within allowablePixels [default 10])\n     * of the note.\n     *\n     * systemIndex element is not used on bare Stream\n     *\n     * options can be a dictionary of: 'allowBackup' which gets the closest\n     * note within the window even if it's beyond allowablePixels (default: true)\n     * and 'backupMaximum' which specifies a maximum distance even for backup\n     * (default: 70);\n     *\n     * @param {number} xPxScaled\n     * @param {number} [allowablePixels=10]\n     * @param {number} [systemIndex]\n     * @param {Object} [options]\n     * @returns {music21.base.Music21Object|undefined}\n     */\n    noteElementFromScaledX(xPxScaled, allowablePixels, systemIndex, options) {\n        const params = {\n            allowBackup: true,\n            backupMaximum: 70,\n        };\n        common.merge(params, options);\n        let foundNote;\n        if (allowablePixels === undefined) {\n            allowablePixels = 10;\n        }\n        const subStream = this.getStreamFromScaledXandSystemIndex(\n            xPxScaled,\n            systemIndex\n        );\n        if (subStream === undefined) {\n            return undefined;\n        }\n        const backup = {\n            minDistanceSoFar: params.backupMaximum,\n            note: undefined,\n        }; // a backup in case we did not find within allowablePixels\n\n        for (const n of subStream.flat.notesAndRests) {\n            /* should also\n             * compensate for accidentals...\n             */\n            const leftDistance = Math.abs(n.x - xPxScaled);\n            const rightDistance = Math.abs(n.x + n.width - xPxScaled);\n            const minDistance = Math.min(leftDistance, rightDistance);\n\n            if (\n                leftDistance < allowablePixels\n                && rightDistance < allowablePixels\n            ) {\n                foundNote = n;\n                break; /* O(n); can be made O(log n) */\n            } else if (\n                leftDistance < params.backupMaximum\n                && rightDistance < params.backupMaximum\n                && minDistance < backup.minDistanceSoFar\n            ) {\n                backup.note = n;\n                backup.minDistanceSoFar = minDistance;\n            }\n        }\n        // console.log('note here is: ', foundNote);\n        if (params.allowBackup && foundNote === undefined) {\n            foundNote = backup.note;\n            // console.log('used backup: closest was: ', backup.minDistanceSoFar);\n        }\n        // console.log(foundNote);\n        return foundNote;\n    }\n\n    /**\n     * Given an event object, and an x and y location, returns a two-element array\n     * of the pitch.Pitch.diatonicNoteNum that was clicked (i.e., if C4 was clicked this\n     * will return 29; if D4 was clicked this will return 30) and the closest note in the\n     * stream that was clicked.\n     *\n     * Return a list of [diatonicNoteNum, closestXNote]\n     * for an event (e) called on the svg (svg)\n     *\n     * @param {Node|SVGElement} svg\n     * @param {Event} e\n     * @param {number} x\n     * @param {number} y\n     * @returns {Array} [diatonicNoteNum, closestXNote]\n     */\n    findNoteForClick(svg, e, x, y) {\n        if (x === undefined || y === undefined) {\n            [x, y] = this.getScaledXYforDOM(svg, e);\n        }\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(y);\n        const foundNote = this.noteElementFromScaledX(x);\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Change the pitch of a note given that it has been clicked and then\n     * call changedCallbackFunction\n     *\n     * To be removed...\n     *\n     * @param {number} clickedDiatonicNoteNum\n     * @param {music21.base.Music21Object} foundNote\n     * @param {Node} svg\n     * @returns {*} output of changedCallbackFunction\n     */\n    noteChanged(clickedDiatonicNoteNum, foundNote, svg) {\n        const n = foundNote;\n        const p = new pitch.Pitch('C');\n        p.diatonicNoteNum = clickedDiatonicNoteNum;\n        p.accidental = n.pitch.accidental;\n        n.pitch = p;\n        n.stemDirection = undefined;\n        this.activeNote = n;\n        const $newSvg = this.redrawDOM(svg);\n        const params = { foundNote: n, svg: $newSvg };\n        if (this.changedCallbackFunction !== undefined) {\n            return this.changedCallbackFunction(params);\n        } else {\n            return params;\n        }\n    }\n\n    redrawCanvas(svg) {\n        console.warn('redrawCanvas is deprecated, use redrawDOM instead');\n        return this.redrawDOM(svg);\n    }\n\n    /**\n     * Redraws an svgDiv, keeping the events of the previous svg.\n     *\n     * @param {Node} svg\n     * @returns {this}\n     */\n    redrawDOM(svg) {\n        // this.resetRenderOptions(true, true); // recursive, preserveEvents\n        if (!this.isFlat) {\n            this.setSubstreamRenderOptions();\n        }\n        const $svg = $(svg); // works even if svg is already $jquery\n        const $newSvg = this.createNewDOM(svg.width, svg.height);\n        this.renderVexflow($newSvg);\n        $svg.replaceWith($newSvg);\n        return $newSvg;\n    }\n\n    editableAccidentalCanvas(width, height) {\n        console.warn(\n            'editableAccidentalCanvas is deprecated, use editableAccidentalDOM instead'\n        );\n        return this.editableAccidentalDOM(width, height);\n    }\n\n    /**\n     * Renders a stream on svg with the ability to edit it and\n     * a toolbar that allows the accidentals to be edited.\n     *\n     * @param {number} [width]\n     * @param {number} [height]\n     * @returns {Node} the div tag around the svg.\n     */\n    editableAccidentalDOM(width, height) {\n        /*\n         * Create an editable svg with an accidental selection bar.\n         */\n        const d = $('<div/>')\n            .css('text-align', 'left')\n            .css('position', 'relative');\n\n        this.renderOptions.events.click = this.DOMChangerFunction;\n        const $svgDiv = this.createDOM(width, height);\n        const buttonDiv = this.getAccidentalToolbar(\n            undefined,\n            undefined,\n            $svgDiv\n        );\n        d.append(buttonDiv);\n        d.append($(\"<br clear='all'/>\"));\n        d.append($svgDiv);\n        return d;\n    }\n\n    /*\n     * SVG toolbars...\n     */\n\n    /**\n     *\n     * @param {int} minAccidental - alter of the min accidental (default -1)\n     * @param {int} maxAccidental - alter of the max accidental (default 1)\n     * @param {jQuery} $siblingSvg - svg to use for redrawing;\n     * @returns {jQuery} the accidental toolbar.\n     */\n    getAccidentalToolbar(minAccidental, maxAccidental, $siblingSvg) {\n        if (minAccidental === undefined) {\n            minAccidental = -1;\n        }\n        if (maxAccidental === undefined) {\n            maxAccidental = 1;\n        }\n        minAccidental = Math.round(minAccidental);\n        maxAccidental = Math.round(maxAccidental);\n\n        const addAccidental = (newAlter, clickEvent) => {\n            /*\n             * To be called on a button...\n             */\n            let $useSvg = $siblingSvg;\n            if ($useSvg === undefined) {\n                let $searchParent = $(clickEvent.target).parent();\n                let maxSearch = 99;\n                while (\n                    maxSearch > 0\n                    && $searchParent !== undefined\n                    && ($useSvg === undefined || $useSvg[0] === undefined)\n                ) {\n                    maxSearch -= 1;\n                    $useSvg = $searchParent.find('.streamHolding');\n                    $searchParent = $searchParent.parent();\n                }\n                if ($useSvg[0] === undefined) {\n                    console.log('Could not find a svg...');\n                    return;\n                }\n            }\n            if (this.activeNote !== undefined) {\n                const n = this.activeNote;\n                n.pitch.accidental = new pitch.Accidental(newAlter);\n                /* console.log(n.pitch.name); */\n                const $newSvg = this.redrawDOM($useSvg[0]);\n                if (this.changedCallbackFunction !== undefined) {\n                    this.changedCallbackFunction({\n                        foundNote: n,\n                        svg: $newSvg,\n                    });\n                }\n            }\n        };\n\n        const $buttonDiv = $('<div/>').attr(\n            'class',\n            'accidentalToolbar scoreToolbar'\n        );\n        for (let i = minAccidental; i <= maxAccidental; i++) {\n            const acc = new pitch.Accidental(i);\n            const $button = $(\n                '<button>' + acc.unicodeModifier + '</button>'\n            ).click(e => addAccidental(i, e));\n            if (Math.abs(i) > 1) {\n                $button.css('font-family', 'Bravura Text');\n                $button.css('font-size', '20px');\n            }\n            $buttonDiv.append($button);\n        }\n        return $buttonDiv;\n    }\n    /**\n     *\n     * @returns {jQuery} a Div containing two buttons -- play and stop\n     */\n    getPlayToolbar() {\n        const $buttonDiv = $('<div/>').attr(\n            'class',\n            'playToolbar scoreToolbar'\n        );\n        const $bPlay = $('<button>&#9658</button>');\n        $bPlay.click(() => {\n            this.playStream();\n        });\n        $buttonDiv.append($bPlay);\n        const $bStop = $('<button>&#9724</button>');\n        $bStop.click(() => {\n            this.stopPlayStream();\n        });\n        $buttonDiv.append($bStop);\n        return $buttonDiv;\n    }\n    //  reflow\n\n    /**\n     * Begins a series of bound events to the window that makes it\n     * so that on resizing the stream is redrawn and reflowed to the\n     * new size.\n     *\n     * @param {jQuery} jSvg\n     * @returns {this}\n     */\n    windowReflowStart(jSvg) {\n        // set up a bunch of windowReflow bindings that affect the svg.\n        const callingStream = this;\n        let jSvgNow = jSvg;\n        $(window).bind('resizeEnd', () => {\n            // do something, window hasn't changed size in 500ms\n            const jSvgParent = jSvgNow.parent();\n            const newWidth = jSvgParent.width();\n            const svgWidth = newWidth;\n            // console.log(svgWidth);\n            console.log('resizeEnd triggered', newWidth);\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.resetRenderOptions(true, true); // recursive, preserveEvents\n            // console.log(callingStream.renderOptions.events.click);\n            callingStream.maxSystemWidth = svgWidth - 40;\n            jSvgNow.remove();\n            const svgObj = callingStream.appendNewDOM(jSvgParent);\n            jSvgNow = $(svgObj);\n        });\n        $(window).resize(function resizeSvgTo() {\n            if (this.resizeTO) {\n                clearTimeout(this.resizeTO);\n            }\n            this.resizeTO = setTimeout(function resizeToTimeout() {\n                $(this).trigger('resizeEnd');\n            }, 200);\n        });\n        setTimeout(function triggerResizeOnCreateSvg() {\n            const $window = $(window);\n            const doResize = $window.data('triggerResizeOnCreateSvg');\n            if (doResize === undefined || doResize === true) {\n                $(this).trigger('resizeEnd');\n                $window.data('triggerResizeOnCreateSvg', false);\n            }\n        }, 1000);\n        return this;\n    }\n    /**\n     * Does this stream have a {@link music21.stream.Voice} inside it?\n     *\n     * @returns {Boolean}\n     */\n    hasVoices() {\n        for (const el of this) {\n            if (el.isClassOrSubclass('Voice')) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nstream.Stream = Stream;\n\n/**\n *\n * @class Voice\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Voice extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsFirst';\n    }\n}\nstream.Voice = Voice;\n\n/**\n * @class Measure\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Measure extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsFirst';\n        this.isMeasure = true;\n        this.number = 0; // measure number\n        this.numberSuffix = '';\n    }\n\n    stringInfo() {\n        return this.measureNumberWithSuffix() + ' offset=' + this.offset.toString();\n    }\n    \n    measureNumberWithSuffix() {\n        return this.number.toString() + this.numberSuffix;\n    }\n}\nstream.Measure = Measure;\n\n/**\n * Part -- specialized to handle Measures inside it\n *\n * @class Part\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Part extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'flatten';\n        this.systemHeight = this.renderOptions.naiveHeight;\n    }\n\n    /**\n     * How many systems does this Part have?\n     *\n     * Does not change any reflow information, so by default it's always 1.\n     *\n     * @returns {Number}\n     */\n    numSystems() {\n        let numSystems = 1;\n        const subStreams = this.getElementsByClass('Stream');\n        for (let i = 1; i < subStreams.length; i++) {\n            if (subStreams.get(i).renderOptions.startNewSystem) {\n                numSystems += 1;\n            }\n        }\n        return numSystems;\n    }\n\n    /**\n     * Find the width of every measure in the Part.\n     *\n     * @returns {Array<number>}\n     */\n    getMeasureWidths() {\n        /* call after setSubstreamRenderOptions */\n        const measureWidths = [];\n        for (const el of this) {\n            if (el.isClassOrSubclass('Measure')) {\n                const elRendOp = el.renderOptions;\n                measureWidths[elRendOp.measureIndex] = elRendOp.width;\n            }\n        }\n        /* console.log(measureWidths);\n         *\n         */\n        return measureWidths;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        if (!this.isFlat) {\n            // part with Measures underneath\n            let totalLength = 0;\n            let isFirst = true;\n            for (const m of this.getElementsByClass('Measure')) {\n                // this looks wrong, but actually seems to be right. moving it to\n                // after the break breaks things.\n                totalLength\n                    += m.estimateStaffLength() + m.renderOptions.staffPadding;\n                if (!isFirst && m.renderOptions.startNewSystem === true) {\n                    break;\n                }\n                isFirst = false;\n            }\n            return totalLength;\n        }\n        // no measures found in part... treat as measure\n        const tempM = new stream.Measure();\n        tempM.elements = this;\n        return tempM.estimateStaffLength();\n    }\n    /**\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     *\n     * @param {number} systemHeight\n     * @returns {Array}\n     */\n    fixSystemInformation(systemHeight) {\n        /*\n         * console.log('system height: ' + systemHeight);\n         */\n        if (systemHeight === undefined) {\n            systemHeight = this.systemHeight; /* part.show() called... */\n        } else if (debug) {\n            console.log('overridden systemHeight: ' + systemHeight);\n        }\n        const systemPadding\n            = this.renderOptions.systemPadding\n            || this.renderOptions.naiveSystemPadding;\n        const measureWidths = this.getMeasureWidths();\n        const maxSystemWidth = this.maxSystemWidth; /* of course fix! */\n        const systemCurrentWidths = [];\n        const systemBreakIndexes = [];\n        let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n        const startLeft = 20; /* TODO: make it obtained elsewhere */\n        let currentLeft = startLeft;\n        let i;\n        for (i = 0; i < measureWidths.length; i++) {\n            const currentRight = currentLeft + measureWidths[i];\n            /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n            if (currentRight > maxSystemWidth && lastSystemBreak !== i) {\n                systemBreakIndexes.push(i - 1);\n                systemCurrentWidths.push(currentLeft);\n\n                // console.log('setting new width at ' + currentLeft);\n                currentLeft = startLeft + measureWidths[i]; // 20 + this width;\n                lastSystemBreak = i;\n            } else {\n                currentLeft = currentRight;\n            }\n        }\n        // console.log(systemCurrentWidths);\n        // console.log(systemBreakIndexes);\n\n        let currentSystemIndex = 0;\n        let leftSubtract = 0;\n        let newLeftSubtract;\n        for (i = 0; i < this.length; i++) {\n            const m = this.get(i);\n            if (m.renderOptions === undefined) {\n                continue;\n            }\n            if (i === 0) {\n                m.renderOptions.startNewSystem = true;\n            }\n            currentLeft = m.renderOptions.left;\n\n            if (systemBreakIndexes.indexOf(i - 1) !== -1) {\n                /* first measure of new System */\n                const oldWidth = m.renderOptions.width;\n                const oldEstimate = m.estimateStaffLength() + m.renderOptions.staffPadding;\n                const offsetFromEstimate = oldWidth - oldEstimate;\n                // we look at the offset from the current estimate to see how much\n                // the staff length may have been adjusted to compensate for other\n                // parts with different lengths.\n\n                // but setting these options is bound to change something\n                m.renderOptions.displayClef = true;\n                m.renderOptions.displayKeySignature = true;\n                m.renderOptions.startNewSystem = true;\n\n                // so we get a new estimate.\n                const newEstimate = m.estimateStaffLength() + m.renderOptions.staffPadding;\n\n                // and adjust it for the change.\n                const newWidth = newEstimate + offsetFromEstimate;\n                m.renderOptions.width = newWidth;\n                leftSubtract = currentLeft - 20;\n                // after this one, we'll have a new left subtract...\n                newLeftSubtract = leftSubtract - (newWidth - oldWidth);\n\n                currentSystemIndex += 1;\n            } else if (i !== 0) {\n                m.renderOptions.startNewSystem = false;\n                m.renderOptions.displayClef = false; // check for changed clef first?\n                m.renderOptions.displayKeySignature = false; // check for changed KS first?\n            }\n            m.renderOptions.systemIndex = currentSystemIndex;\n            let currentSystemMultiplier;\n            if (currentSystemIndex >= systemCurrentWidths.length) {\n                /* last system... non-justified */\n                currentSystemMultiplier = 1;\n            } else {\n                const currentSystemWidth\n                    = systemCurrentWidths[currentSystemIndex];\n                currentSystemMultiplier = maxSystemWidth / currentSystemWidth;\n                // console.log('systemMultiplier: ' + currentSystemMultiplier + ' max: ' + maxSystemWidth + ' current: ' + currentSystemWidth);\n            }\n            /* might make a small gap? fix? */\n            const newLeft = currentLeft - leftSubtract;\n            if (newLeftSubtract !== undefined) {\n                leftSubtract = newLeftSubtract;\n                newLeftSubtract = undefined;\n            }\n            // console.log('M: ' + i + ' ; old left: ' + currentLeft + ' ; new Left: ' + newLeft);\n            m.renderOptions.left = Math.floor(\n                newLeft * currentSystemMultiplier\n            );\n            m.renderOptions.width = Math.floor(\n                m.renderOptions.width * currentSystemMultiplier\n            );\n            const newTop\n                = m.renderOptions.top\n                + currentSystemIndex * (systemHeight + systemPadding);\n            // console.log('M: ' + i + '; New top: ' + newTop + \" ; old Top: \" + m.renderOptions.top);\n            m.renderOptions.top = newTop;\n        }\n\n        return systemCurrentWidths;\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained measures\n     *\n     */\n    setSubstreamRenderOptions() {\n        let currentMeasureIndex = 0; /* 0 indexed for now */\n        let currentMeasureLeft = 20;\n        const rendOp = this.renderOptions;\n        let lastTimeSignature;\n        let lastKeySignature;\n        let lastClef;\n\n        for (const m of this.getElementsByClass('Measure')) {\n            const mRendOp = m.renderOptions;\n            mRendOp.measureIndex = currentMeasureIndex;\n            mRendOp.top = rendOp.top;\n            mRendOp.partIndex = rendOp.partIndex;\n            mRendOp.left = currentMeasureLeft;\n\n            if (currentMeasureIndex === 0) {\n                lastClef = m._clef;\n                lastTimeSignature = m._timeSignature;\n                lastKeySignature = m._keySignature;\n\n                mRendOp.displayClef = true;\n                mRendOp.displayKeySignature = true;\n                mRendOp.displayTimeSignature = true;\n            } else {\n                if (\n                    m._clef !== undefined\n                    && lastClef !== undefined\n                    && m._clef.name !== lastClef.name\n                ) {\n                    console.log(\n                        'changing clefs for ',\n                        mRendOp.measureIndex,\n                        ' from ',\n                        lastClef.name,\n                        ' to ',\n                        m._clef.name\n                    );\n                    lastClef = m._clef;\n                    mRendOp.displayClef = true;\n                } else {\n                    mRendOp.displayClef = false;\n                }\n\n                if (\n                    m._keySignature !== undefined\n                    && lastKeySignature !== undefined\n                    && m._keySignature.sharps !== lastKeySignature.sharps\n                ) {\n                    lastKeySignature = m._keySignature;\n                    mRendOp.displayKeySignature = true;\n                } else {\n                    mRendOp.displayKeySignature = false;\n                }\n\n                if (\n                    m._timeSignature !== undefined\n                    && lastTimeSignature !== undefined\n                    && m._timeSignature.ratioString\n                        !== lastTimeSignature.ratioString\n                ) {\n                    lastTimeSignature = m._timeSignature;\n                    mRendOp.displayTimeSignature = true;\n                } else {\n                    mRendOp.displayTimeSignature = false;\n                }\n            }\n            mRendOp.width\n                = m.estimateStaffLength() + mRendOp.staffPadding;\n            mRendOp.height = m.estimateStreamHeight();\n            currentMeasureLeft += mRendOp.width;\n            currentMeasureIndex += 1;\n        }\n        return this;\n    }\n\n    /**\n     * systemIndexAndScaledY - given a scaled Y, return the systemIndex\n     * and the scaledYRelativeToSystem\n     *\n     * @param  {number} y the scaled Y\n     * @return {number[]}  systemIndex, scaledYRelativeToSystem\n     */\n    systemIndexAndScaledY(y) {\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            systemPadding = this.renderOptions.naiveSystemPadding;\n        }\n        const systemIndex = Math.floor(y / (this.systemHeight + systemPadding));\n        const scaledYRelativeToSystem\n            = y - systemIndex * (this.systemHeight + systemPadding);\n        return [systemIndex, scaledYRelativeToSystem];\n    }\n\n    /**\n     * Overrides the default music21.stream.Stream#findNoteForClick\n     * by taking into account systems\n     *\n     * @param {Node} svg\n     * @param {Event} e\n     * @param {number} x\n     * @param {number} y\n     * @returns {Array} [clickedDiatonicNoteNum, foundNote]\n     */\n    findNoteForClick(svg, e, x, y) {\n        if (x === undefined || y === undefined) {\n            [x, y] = this.getScaledXYforDOM(svg, e);\n        }\n        // debug = true;\n        if (debug) {\n            console.log(\n                'this.estimateStreamHeight(): '\n                    + this.estimateStreamHeight()\n                    + ' / $(svg).height(): '\n                    + $(svg).height()\n            );\n        }\n        // TODO(msc) -- systemPadding was never used -- should it be?\n        // let systemPadding = this.renderOptions.systemPadding;\n        // if (systemPadding === undefined) {\n        //     systemPadding = this.renderOptions.naiveSystemPadding;\n        // }\n        const [systemIndex, scaledYRelativeToSystem] = this.systemIndexAndScaledY(y);\n        const clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(\n            scaledYRelativeToSystem\n        );\n\n        const foundNote = this.noteElementFromScaledX(\n            x,\n            undefined,\n            systemIndex\n        );\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * Returns the measure that is at X location xPxScaled and system systemIndex.\n     *\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream}\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        let gotMeasure;\n        const measures = this.measures;\n        for (const m of measures) {\n            const rendOp = m.renderOptions;\n            const left = rendOp.left;\n            const right = left + rendOp.width;\n            const top = rendOp.top;\n            const bottom = top + rendOp.height;\n            if (debug) {\n                console.log(\n                    'Searching for X:'\n                        + Math.round(xPxScaled)\n                        + ' in Measure '\n                        + ' with boundaries L:'\n                        + left\n                        + ' R:'\n                        + right\n                        + ' T: '\n                        + top\n                        + ' B: '\n                        + bottom\n                );\n            }\n            if (xPxScaled >= left && xPxScaled <= right) {\n                if (systemIndex === undefined) {\n                    gotMeasure = m;\n                    break;\n                } else if (rendOp.systemIndex === systemIndex) {\n                    gotMeasure = m;\n                    break;\n                }\n            }\n        }\n        return gotMeasure;\n    }\n}\nstream.Part = Part;\n\n/**\n * Scores with multiple parts\n *\n * @class Score\n * @memberof music21.stream\n * @extends music21.stream.Stream\n */\nexport class Score extends Stream {\n    constructor() {\n        super();\n        this.recursionType = 'elementsOnly';\n        this.measureWidths = [];\n        this.partSpacing = this.renderOptions.naiveHeight;\n    }\n\n    get clef() { // TODO: remove -- this is unlike m21p\n        const c = super.clef;\n        if (c === undefined) {\n            return new clef.TrebleClef();\n        } else {\n            return c;\n        }\n    }\n    set clef(newClef) {\n        super.clef = newClef;\n    }\n\n    get systemPadding() {\n        const numParts = this.parts.length;\n        let systemPadding = this.renderOptions.systemPadding;\n        if (systemPadding === undefined) {\n            if (numParts === 1) {\n                systemPadding = this.renderOptions.naiveSystemPadding; // fix to 0\n            } else {\n                systemPadding = this.renderOptions.naiveSystemPadding;\n            }\n        }\n        return systemPadding;\n    }\n\n    /**\n     * Returns the measure that is at X location xPxScaled and system systemIndex.\n     *\n     * Always returns the measure of the top part...\n     *\n     * @param {number} [xPxScaled]\n     * @param {number} [systemIndex]\n     * @returns {music21.stream.Stream} usually a Measure\n     *\n     */\n    getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {\n        const parts = this.parts;\n        return parts\n            .get(0)\n            .getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex);\n    }\n    /**\n     * overrides music21.stream.Stream#setSubstreamRenderOptions\n     *\n     * figures out the `.left` and `.top` attributes for all contained parts\n     *\n     * @returns {this} this\n     */\n    setSubstreamRenderOptions() {\n        let currentPartNumber = 0;\n        let currentPartTop = 0;\n        const partSpacing = this.partSpacing;\n        for (const p of this.parts) {\n            p.renderOptions.partIndex = currentPartNumber;\n            p.renderOptions.top = currentPartTop;\n            p.setSubstreamRenderOptions();\n            currentPartTop += partSpacing;\n            currentPartNumber += 1;\n        }\n        this.evenPartMeasureSpacing();\n        const ignoreNumSystems = true;\n        const currentScoreHeight = this.estimateStreamHeight(ignoreNumSystems);\n        for (const p of this.parts) {\n            p.fixSystemInformation(currentScoreHeight);\n        }\n        this.renderOptions.height = this.estimateStreamHeight();\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#estimateStaffLength\n     *\n     * @returns {number}\n     */\n    estimateStaffLength() {\n        // override\n        if (this.renderOptions.overriddenWidth !== undefined) {\n            // console.log(\"Overridden staff width: \" + this.renderOptions.overriddenWidth);\n            return this.renderOptions.overriddenWidth;\n        }\n        let maxWidth = -1;\n        for (const p of this.parts) {\n            const pWidth = p.estimateStaffLength();\n            if (pWidth > maxWidth) {\n                maxWidth = pWidth;\n            }\n        }\n        if (maxWidth > -1) {\n            return maxWidth;\n        }\n\n        // no parts found in score... use part...\n        console.log('no parts found in score');\n        const tempPart = new stream.Part();\n        tempPart.elements = this;\n        return tempPart.estimateStaffLength();\n    }\n\n    /* MIDI override */\n    /**\n     * Overrides the default music21.stream.Stream#playStream\n     *\n     * Works crappily -- just starts *n* midi players.\n     *\n     * Render scrollable score works better...\n     *\n     * @param {Object} params -- passed to each part\n     * @returns {this}\n     */\n    playStream(params) {\n        // play multiple parts in parallel...\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.playStream(params);\n            }\n        }\n        return this;\n    }\n    /**\n     * Overrides the default music21.stream.Stream#stopPlayScore()\n     *\n     * @returns {this}\n     */\n    stopPlayStream() {\n        for (const el of this) {\n            if (el.isClassOrSubclass('Part')) {\n                el.stopPlayStream();\n            }\n        }\n        return this;\n    }\n    /*\n     * Svg routines\n     */\n    /**\n     * call after setSubstreamRenderOptions\n     * gets the maximum measure width for each measure\n     * by getting the maximum for each measure of\n     * Part.getMeasureWidths();\n     *\n     * Does this work? I found a bug in this and fixed it that should have\n     * broken it!\n     *\n     * @returns Array<number>\n     */\n    getMaxMeasureWidths() {\n        const maxMeasureWidths = [];\n        const measureWidthsArrayOfArrays = [];\n        let i;\n        // TODO: Do not crash on not partlike...\n        for (const p of this.parts) {\n            measureWidthsArrayOfArrays.push(p.getMeasureWidths());\n        }\n        for (i = 0; i < measureWidthsArrayOfArrays[0].length; i++) {\n            let maxFound = 0;\n            for (let j = 0; j < this.length; j++) {\n                if (measureWidthsArrayOfArrays[j][i] > maxFound) {\n                    maxFound = measureWidthsArrayOfArrays[j][i];\n                }\n            }\n            maxMeasureWidths.push(maxFound);\n        }\n        // console.log(measureWidths);\n        return maxMeasureWidths;\n    }\n\n    /**\n     * systemIndexAndScaledY - given a scaled Y, return the systemIndex\n     * and the scaledYRelativeToSystem\n     *\n     * @param  {number} y the scaled Y\n     * @return Array<number>   systemIndex, scaledYRelativeToSystem\n     */\n    systemIndexAndScaledY(y) {\n        // TODO(msc) -- systemPadding was not being used; should it be?\n        // let systemPadding = this.renderOptions.systemPadding;\n        // if (systemPadding === undefined) {\n        //     systemPadding = this.renderOptions.naiveSystemPadding;\n        // }\n\n        const numParts = this.parts.length;\n        const systemHeight = numParts * this.partSpacing + this.systemPadding;\n        const systemIndex = Math.floor(y / systemHeight);\n        const scaledYRelativeToSystem = y - systemIndex * systemHeight;\n        return [systemIndex, scaledYRelativeToSystem];\n    }\n\n    /**\n     * Returns a list of [clickedDiatonicNoteNum, foundNote] for a\n     * click event, taking into account that the note will be in different\n     * Part objects (and different Systems) given the height and possibly different Systems.\n     *\n     * @param {Node} svg\n     * @param {Event} e\n     * @param {number} x\n     * @param {number} y\n     * @returns {Array} [diatonicNoteNum, m21Element]\n     */\n    findNoteForClick(svg, e, x, y) {\n        if (x === undefined || y === undefined) {\n            [x, y] = this.getScaledXYforDOM(svg, e);\n        }\n        const [systemIndex, scaledYFromSystemTop] = this.systemIndexAndScaledY(\n            y\n        );\n        const partIndex = Math.floor(scaledYFromSystemTop / this.partSpacing);\n        const scaledYinPart\n            = scaledYFromSystemTop - partIndex * this.partSpacing;\n        // console.log('systemIndex: ' + systemIndex + \" partIndex: \" + partIndex);\n        const rightPart = this.parts.get(partIndex);\n        if (rightPart === undefined) {\n            return [undefined, undefined]; // may be too low?\n        }\n\n        const clickedDiatonicNoteNum = rightPart.diatonicNoteNumFromScaledY(\n            scaledYinPart\n        );\n\n        const foundNote = rightPart.noteElementFromScaledX(\n            x,\n            undefined,\n            systemIndex\n        );\n        return [clickedDiatonicNoteNum, foundNote];\n    }\n\n    /**\n     * How many systems are there? Calls numSystems() on the first part.\n     *\n     * @returns {int}\n     */\n    numSystems() {\n        return this.getElementsByClass('Part')\n            .get(0)\n            .numSystems();\n    }\n\n    /**\n     * Fixes the part measure spacing for all parts.\n     *\n     * @param {Object} options\n     * @param {Boolean} [options.setLeft=true]\n     * @returns {this}\n     */\n    evenPartMeasureSpacing({ setLeft=true }={}) {\n        const measureStacks = [];\n        let currentPartNumber = 0;\n        const maxMeasureWidth = []; // the maximum measure width among all parts\n        let j;\n        for (const p of this.parts) {\n            const measureWidths = p.getMeasureWidths();\n            for (j = 0; j < measureWidths.length; j++) {\n                const thisMeasureWidth = measureWidths[j];\n                if (measureStacks[j] === undefined) {\n                    measureStacks[j] = [];\n                    maxMeasureWidth[j] = thisMeasureWidth;\n                } else if (thisMeasureWidth > maxMeasureWidth[j]) {\n                    maxMeasureWidth[j] = thisMeasureWidth;\n                }\n                measureStacks[j][currentPartNumber] = thisMeasureWidth;\n            }\n            currentPartNumber += 1;\n        }\n        let currentLeft = 20;\n        for (let i = 0; i < maxMeasureWidth.length; i++) {\n            const measureNewWidth = maxMeasureWidth[i];\n            for (const part of this.parts) {\n                const measure = part.getElementsByClass('Measure').get(i);\n                const rendOp = measure.renderOptions;\n                rendOp.width = measureNewWidth;\n                if (setLeft) {\n                    rendOp.left = currentLeft;\n                }\n            }\n            currentLeft += measureNewWidth;\n        }\n        return this;\n    }\n}\nstream.Score = Score;\n\n// small Class; a namedtuple in music21p\nexport class OffsetMap {\n    constructor(element, offset, endTime, voiceIndex) {\n        this.element = element;\n        this.offset = offset;\n        this.endTime = endTime;\n        this.voiceIndex = voiceIndex;\n    }\n}\nstream.OffsetMap = OffsetMap;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tie -- ties!\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport { prebase } from './prebase.js';\nimport { Music21Exception } from './exceptions21.js';\n\n/**\n * Simple tie module {@link music21.tie} namespace\n *\n * @exports music21/tie\n */\n\n/**\n * Tie namespace, just has the {@link music21.tie.Tie} object\n *\n * @namespace music21.tie\n * @memberof music21\n * @requires music21/prebase\n */\nexport const tie = {};\nconst VALID_TIE_TYPES = ['start', 'stop', 'continue', 'let-ring', 'continue-let-ring'];\n\n/**\n * Tie class. Found in {@link music21.note.GeneralNote} `.tie`.\n *\n * Does not support advanced music21p values `.to` and `.from`\n *\n * @class Tie\n * @memberof music21.tie\n * @extends music21.prebase.ProtoM21Object\n * @param {string} type - 'start', 'stop', 'continue', or 'let-ring'\n * @property {string} type - the tie type\n * @property {string} style - only supports 'normal' for now.\n * @property {string|undefined} placement - undefined = unknown or above/below.\n * (NB currently does nothing)\n */\nexport class Tie extends prebase.ProtoM21Object {\n    constructor(type='start') {\n        super();\n        this._type = undefined;\n        this.style = 'normal';\n        this.type = type;\n        this.placement = undefined;\n    }\n    \n    stringInfo() {\n        return this.type;\n    }\n    \n    get type() {\n        return this._type;\n    }\n    set type(newType) {\n        if (!VALID_TIE_TYPES.includes(newType)) {\n            throw new Music21Exception(\n                `Type must be one of ${VALID_TIE_TYPES}, not ${newType}`\n            );\n        }\n        this._type = newType;\n    }\n}\ntie.Tie = Tie;\n","import * as $ from 'jquery';\n\nimport { chord } from '../chord.js';\nimport { clef } from '../clef.js';\nimport { duration } from '../duration.js';\nimport { key } from '../key.js';\nimport { meter } from '../meter.js';\nimport { note } from '../note.js';\nimport { pitch } from '../pitch.js';\nimport { stream } from '../stream.js';\nimport { tie } from '../tie.js';\n\nconst DEFAULTS = {\n    divisionsPerQuarter: 32 * 3 * 3 * 5 * 7,\n};\n\nfunction hyphenToCamelCase(tag) {\n    return tag.replace(/-([a-z])/g, firstLetter =>\n        firstLetter[1].toUpperCase()\n    );\n}\n\nfunction seta(m21El, xmlEl, tag, attributeName, transform) {\n    const $matchEl = $(xmlEl).children(tag);\n    if (!$matchEl) {\n        return;\n    }\n    let value = $matchEl\n        .contents()\n        .eq(0)\n        .text();\n    if (value === undefined || value === '') {\n        return;\n    }\n    if (transform !== undefined) {\n        value = transform(value);\n    }\n    if (attributeName === undefined) {\n        attributeName = hyphenToCamelCase(tag);\n    }\n    m21El[attributeName] = value;\n}\n\nexport class ScoreParser {\n    constructor() {\n        this.xmlText = undefined;\n        this.xmlUrl = undefined;\n        this.$xmlRoot = undefined;\n        this.stream = new stream.Score();\n\n        this.definesExplicitSystemBreaks = false;\n        this.definesExplicitPageBreaks = false;\n\n        this.mxScorePartDict = {};\n        this.m21PartObjectsById = {};\n        this.partGroupList = [];\n        this.parts = [];\n\n        this.musicXmlVersion = '1.0';\n    }\n\n    scoreFromUrl(url) {\n        this.xmlUrl = url;\n        return $.get(url, {}, (xmlDoc, textStatus) =>\n            this.scoreFromDOMTree(xmlDoc)\n        );\n    }\n\n    scoreFromText(xmlText) {\n        this.xmlText = xmlText;\n        const xmlDoc = $.parseXML(xmlText);\n        return this.scoreFromDOMTree(xmlDoc);\n    }\n\n    scoreFromDOMTree(xmlDoc) {\n        this.$xmlRoot = $($(xmlDoc).children('score-partwise'));\n        this.xmlRootToScore(this.$xmlRoot, this.stream);\n        return this.stream;\n    }\n\n    xmlRootToScore($mxScore, inputM21) {\n        let s = inputM21;\n        if (inputM21 === undefined) {\n            s = new stream.Score();\n        }\n        // version\n        // defaults\n        // credit\n        this.parsePartList($mxScore);\n        for (const p of $mxScore.children('part')) {\n            const $p = $(p);\n            const partId = $p.attr('id');\n            // if (partId === undefined) {\n            //     partId = //something\n            // }\n            const $mxScorePart = this.mxScorePartDict[partId];\n            const part = this.xmlPartToPart($p, $mxScorePart);\n            if (part !== undefined) {\n                // partStreams are undefined\n                s.insert(0.0, part);\n                this.m21PartObjectsById[partId] = part;\n                this.parts.push(part);\n            }\n        }\n        // partGroups;\n        // spanners;\n        // definesExplicitSystemreaks, etc.\n        // sort\n        return s;\n    }\n\n    xmlPartToPart($mxPart, $mxScorePart) {\n        const parser = new PartParser($mxPart, $mxScorePart, this);\n        parser.parse();\n        // handle partStreams\n        return parser.stream;\n    }\n\n    parsePartList($mxScore) {\n        const mxPartList = $mxScore.children('part-list');\n        if (!mxPartList) {\n            return;\n        }\n        // const openPartGroups = [];\n        for (const partListElement of mxPartList) {\n            const $partListElement = $(partListElement);\n            const partId = $partListElement.attr('id');\n            this.mxScorePartDict[partId] = $partListElement;\n        }\n        // deal with part-groups\n    }\n}\n\nexport class PartParser {\n    constructor($mxPart, $mxScorePart, parent) {\n        this.$mxPart = $mxPart;\n        this.$mxScorePart = $mxScorePart;\n        // ignore parent for now\n        if ($mxPart !== undefined) {\n            this.partId = $mxPart.attr('id');\n            // ignore empty partId for now\n        }\n        // spannerBundles\n        this.stream = new stream.Part();\n        this.atSoundingPitch = true;\n        this.staffReferenceList = [];\n\n        this.lastTimeSignature = undefined;\n        this.lastMeasureWasShort = false;\n        this.lastMeasureOffset = 0.0;\n        this.lastClefs = {\n            0: new clef.TrebleClef(),\n        };\n        this.activeTuplets = [];\n        this.activeTuplets.length = 7;\n        this.activeTuplets.fill(undefined);\n\n        this.maxStaves = 1;\n        this.lastMeasureNumber = 0;\n        this.lastNumberSuffix = undefined;\n\n        this.multiMeasureRestsToCapture = 0;\n        this.activeMultimeasureRestSpanner = undefined;\n\n        this.activeInstrument = undefined;\n        this.firstMeasureParsed = false;\n        this.$activeAttributes = undefined;\n        this.lastDivisions = DEFAULTS.divisionsPerQuarter;\n\n        this.appendToScoreAfterParse = true;\n        this.lastMeasureParser = undefined;\n    }\n\n    parse() {\n        this.parseXmlScorePart();\n        this.parseMeasures();\n        // atSoundingPitch;\n        // spannerBundles\n        // partStaves;\n        this.stream.clef = this.lastClefs[0];\n    }\n\n    parseXmlScorePart() {\n        const part = this.stream;\n        const $mxScorePart = this.$mxScorePart;\n\n        seta(part, $mxScorePart, 'part-name'); // todo -- clean string\n        // remainder of part names\n        // instruments\n    }\n\n    parseMeasures() {\n        for (const mxMeasure of this.$mxPart.children('measure')) {\n            const $mxMeasure = $(mxMeasure);\n            this.xmlMeasureToMeasure($mxMeasure);\n        }\n        if (this.lastMeasureParser !== undefined) {\n            this.lastMeasureParser.parent = undefined; // gc.\n        }\n    }\n\n    xmlMeasureToMeasure($mxMeasure) {\n        const measureParser = new MeasureParser($mxMeasure, this);\n        measureParser.parse();\n        if (this.lastMeasureParser !== undefined) {\n            this.lastMeasureParser.parent = undefined; // gc.\n        }\n        this.lastMeasureParser = measureParser;\n        // max staves\n        // transposition\n        this.firstMeasureParsed = true;\n        // staffReferenceList\n\n        const m = measureParser.stream;\n        this.setLastMeasureInfo(m);\n        // fullMeasureRests\n\n        // TODO: offsets!!!\n        // this.stream.insert(this.lastMeasureOffset, m);\n        this.stream.append(m);\n\n        this.adjustTimeAttributesFromMeasure(m);\n    }\n\n    setLastMeasureInfo(m) {\n        if (m.number !== this.lastMeasureNumber) {\n            this.lastMeasureNumber = m.number;\n            this.lastNumberSuffix = m.numberSuffix;\n        }\n\n        if (m.timeSignature !== undefined) {\n            this.lastTimeSignature = m.timeSignature;\n        } else if (this.lastTimeSignature === undefined) {\n            this.lastTimeSignature = new meter.TimeSignature('4/4');\n        }\n    }\n\n    adjustTimeAttributesFromMeasure(m) {\n        const mHighestTime = m.highestTime;\n        // ignore incomplete measures.\n        const mOffsetShift = mHighestTime;\n        this.lastMeasureOffset += mOffsetShift;\n    }\n}\n\nexport class MeasureParser {\n    constructor($mxMeasure, parent) {\n        this.$mxMeasure = $mxMeasure;\n        this.$mxMeasureElements = [];\n\n        this.divisions = undefined;\n        this.parent = parent;\n\n        this.transposition = undefined;\n        // spannerBundles\n        this.staffReference = {};\n        // activeTuplets\n        this.useVoices = false;\n        this.voicesById = {};\n        this.voiceIndices = new Set();\n        this.staves = 1;\n        this.$activeAttributes = undefined;\n        this.attributesAreInternal = true;\n        this.measureNumber = undefined;\n        this.numberSuffix = undefined;\n\n        if (parent !== undefined) {\n            this.divisions = parent.lastDivisions;\n        } else {\n            this.divisions = DEFAULTS.divisionsPerQuarter;\n        }\n\n        this.staffLayoutObjects = [];\n        this.stream = new stream.Measure();\n\n        this.$mxNoteList = [];\n        this.$mxLyricList = [];\n        this.nLast = undefined;\n        this.chordVoice = undefined;\n        this.fullMeasureRest = false;\n        this.restAndNoteCount = {\n            rest: 0,\n            note: 0,\n        };\n        this.lastClefs = {\n            0: undefined,\n        };\n        this.parseIndex = 0;\n        this.offsetMeasureNote = 0.0;\n\n        // class attributes in m21p\n        this.attributeTagsToMethods = {\n            time: 'handleTimeSignature',\n            clef: 'handleClef',\n            key: 'handleKeySignature',\n            // 'staff-details': 'handleStaffDetails',\n            // 'measure-style': 'handleMeasureStyle',\n        };\n        this.musicDataMethods = {\n            note: 'xmlToNote',\n            // 'backup': 'xmlBackup',\n            // 'forward': 'xmlForward',\n            // 'direction': 'xmlDirection',\n            attributes: 'parseAttributesTag',\n            // 'harmony': 'xmlHarmony',\n            // 'figured-bass': undefined,\n            // 'sound': undefined,\n            // 'barline': 'xmlBarline',\n            // 'grouping': undefined,\n            // 'link': undefined,\n            // 'bookmark': undefined,\n\n            // Note: <print> is handled separately...\n        };\n    }\n\n    parse() {\n        // mxPrint\n        this.parseMeasureAttributes();\n        // updateVoiceInformation;\n\n        const children = this.$mxMeasure.children();\n        this.$mxMeasureElements = [];\n        for (const c of children) {\n            const $c = $(c);\n            this.$mxMeasureElements.push($c);\n        }\n\n        let i = 0;\n        for (const $mxObj of this.$mxMeasureElements) {\n            const tag = $mxObj[0].tagName;\n            this.parseIndex = i;\n            const methName = this.musicDataMethods[tag];\n            if (methName !== undefined) {\n                this[methName]($mxObj);\n            }\n            i += 1;\n        }\n        // useVoices\n        // fullMeasureRest\n    }\n\n    insertInMeasureOrVoice($mxObj, el) {\n        // TODO: offsets!\n        // this.stream.insert(this.offsetMeasureNote, el);\n        this.stream.append(el);\n    }\n\n    xmlToNote($mxNote) {\n        let nextNoteIsChord = false;\n        const $mxObjNext = this.$mxMeasureElements[this.parseIndex + 1];\n        if ($mxObjNext !== undefined) {\n            if (\n                $mxObjNext[0].tagName === 'note'\n                && $mxObjNext.children('chord').length > 0\n            ) {\n                nextNoteIsChord = true;\n            }\n        }\n        let isChord = false;\n        let isRest = false;\n\n        let offsetIncrement = 0.0;\n        if ($mxNote.children('rest').length > 0) {\n            isRest = true;\n        }\n        if ($mxNote.children('chord').length > 0) {\n            isChord = true;\n        }\n        if (nextNoteIsChord) {\n            isChord = true;\n        }\n\n        let n;\n\n        if (isChord) {\n            this.$mxNoteList.push($mxNote);\n            this.$mxLyricList.push(...$mxNote.children('lyric'));\n        } else if (!isChord && !isRest) {\n            // normal note\n            this.restAndNoteCount.note += 1;\n            n = this.xmlToSimpleNote($mxNote);\n        } else {\n            this.restAndNoteCount.rest += 1;\n            n = this.xmlToRest($mxNote);\n        }\n\n        if (!isChord) {\n            this.updateLyricsFromList(n, $mxNote.children('lyric'));\n            // add to staffReference\n            this.insertInMeasureOrVoice($mxNote, n);\n            offsetIncrement = n.duration.quarterLength;\n            this.nLast = n;\n        }\n\n        if (this.$mxNoteList.length && !nextNoteIsChord) {\n            const c = this.xmlToChord(this.$mxNoteList);\n            this.updateLyricsFromList(c, this.$mxLyricList);\n            // addToStaffRest;\n\n            // voices;\n            this.insertInMeasureOrVoice($mxNote, c);\n\n            this.$mxNoteList = [];\n            this.$mxLyricList = [];\n            offsetIncrement = c.duration.quarterLength;\n            this.nLast = c;\n        }\n\n        this.offsetMeasureNote += offsetIncrement;\n    }\n\n    xmlToChord($mxNoteList) {\n        const notes = [];\n        for (const $mxNote of $mxNoteList) {\n            const freeSpanners = false;\n            notes.push(this.xmlToSimpleNote($mxNote, freeSpanners));\n        }\n        const c = new chord.Chord(notes);\n        // move beams from first note;\n        // move articulations;\n        // move expressions;\n        // move spanners;\n\n        return c;\n    }\n\n    xmlToSimpleNote($mxNote, freeSpanners) {\n        const n = new note.Note();\n        this.xmlToPitch($mxNote, n.pitch);\n        // beams;\n        // stems;\n        // noteheads\n        return this.xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners);\n    }\n\n    // xmlToBeam\n    // xmlToBeams\n    // xmlNotehead\n\n    xmlToPitch($mxNote, inputM21) {\n        let p = inputM21;\n        if (inputM21 === undefined) {\n            p = new pitch.Pitch();\n        }\n\n        let $mxPitch;\n        if ($mxNote[0].tagName === 'pitch') {\n            $mxPitch = $mxNote;\n        } else {\n            $mxPitch = $($mxNote.children('pitch')[0]);\n            if ($mxPitch.length === 0) {\n                // whoops!\n                return p;\n            }\n        }\n\n        seta(p, $mxPitch, 'step');\n        seta(p, $mxPitch, 'octave', undefined, parseInt);\n        const $mxAlter = $mxPitch.children('alter');\n        let accAlter;\n        if ($mxAlter.length) {\n            accAlter = parseFloat($mxAlter.text().trim());\n        }\n\n        const $mxAccidental = $mxNote.children('accidental');\n        // dropping support for musescore 0.9 errors...\n        if ($mxAccidental.length) {\n            const accObj = this.xmlToAccidental($mxAccidental);\n            p.accidental = accObj;\n            p.accidental.displayStatus = true;\n            // independent accidental from alter\n        } else if (accAlter !== undefined && !isNaN(accAlter)) {\n            p.accidental = new pitch.Accidental(accAlter);\n            p.accidental.displayStatus = false;\n        }\n        return p;\n    }\n\n    xmlToAccidental($mxAccidental) {\n        const acc = new pitch.Accidental();\n        // to-do m21/musicxml accidental name differences;\n        let name = $($mxAccidental[0])\n            .text()\n            .trim()\n            .toLowerCase();\n        if (name === 'flat-flat') {\n            name = 'double-flat';\n        }\n\n        acc.set(name);\n\n        // set print style\n        // parentheses\n        // bracket\n        // editorial\n        return acc;\n    }\n\n    xmlToRest($mxRest) {\n        const r = new note.Rest();\n        // full measure rest\n        // apply multimeasure rest\n        // display-step, octave, etc.\n        return this.xmlNoteToGeneralNoteHelper(r, $mxRest);\n    }\n\n    xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners) {\n        if (freeSpanners === undefined) {\n            freeSpanners = true;\n        }\n        // spanners\n        // setPrintStyle\n        // print-object\n        // dynamics\n        // pizzacato\n        // grace\n        this.xmlToDuration($mxNote, n.duration);\n        // type styles\n        // color\n        // position\n        if ($mxNote.children('tie').length > 0) {\n            n.tie = this.xmlToTie($mxNote);\n        }\n        // grace\n        // notations\n        // editorial\n        return n;\n    }\n\n    xmlToDuration($mxNote, inputM21) {\n        let d = inputM21;\n        if (inputM21 === undefined) {\n            d = new duration.Duration();\n        }\n        const divisions = this.divisions;\n        const mxDuration = $mxNote.children('duration')[0];\n        let qLen = 0.0;\n\n        if (mxDuration) {\n            const noteDivisions = parseFloat(\n                $(mxDuration)\n                    .text()\n                    .trim()\n            );\n            qLen = noteDivisions / divisions;\n        }\n\n        const mxType = $mxNote.children('type')[0];\n        if (mxType) {\n            // long vs longa todo\n            const durationType = $(mxType)\n                .text()\n                .trim();\n            const numDots = $mxNote.children('dot').length;\n            // tuplets!!!! big to-do!\n            d.type = durationType;\n            d.dots = numDots;\n        } else {\n            d.quarterLength = qLen;\n        }\n\n        return d;\n    }\n\n    // xmlGraceToGrace\n    // xmlNotations\n    // xmlTechnicalToArticulation\n    // setHarmonic\n    // handleFingering\n    // xmlToArticulation\n    // xmlOrnamentToExpression\n    // xmlDirectionTypeToSpanners\n    // xmlNotationsToSpanners\n    // xmlToTremolo\n    // xmlOneSpanner\n\n    xmlToTie($mxNote) {\n        const t = new tie.Tie();\n        const allTies = $mxNote.children('tie');\n        if (allTies.length > 1) {\n            t.type = 'continue';\n        } else {\n            const $t0 = $(allTies[0]);\n            t.type = $t0.attr('type');\n        }\n        // style\n        return t;\n    }\n\n    // xmlToTuplets\n    updateLyricsFromList(n, lyricList) {\n        let currentLyricNumber = 1;\n        for (const mxLyric of lyricList) {\n            const lyricObj = this.xmlToLyric($(mxLyric));\n            if (lyricObj === undefined) {\n                continue;\n            }\n            if (lyricObj.number === 0) {\n                lyricObj.number = currentLyricNumber;\n            }\n            n.lyrics.push(lyricObj);\n            currentLyricNumber += 1;\n        }\n    }\n\n    xmlToLyric($mxLyric, inputM21) {\n        let l = inputM21;\n        if (inputM21 === undefined) {\n            l = new note.Lyric();\n        }\n        try {\n            l.text = $mxLyric.children('text').text().trim();\n        } catch (exc) {\n            return undefined; // sometimes there are empty lyrics.\n        }\n        let number = $mxLyric.attr('number');\n        try {\n            number = parseInt(number);\n            l.number = number;\n        } catch (exc) {\n            l.number = 0;\n            if (number !== undefined) {\n                l.identifier = number;\n            }\n        }\n        const identifier = $mxLyric.get('name');\n        if (identifier !== undefined) {\n            l.identifier = identifier;\n        }\n\n        const $mxSyllabic = $mxLyric.children('syllabic');\n        if ($mxSyllabic.length) {\n            l.syllabic = $mxSyllabic.text().trim();\n        }\n        // setStyleAttributes\n        // setColor\n        // setPosition\n        if (inputM21 === undefined) {\n            return l;\n        }\n        return undefined;\n    }\n\n\n    insertIntoMeasureOrVoice($mxElement, el) {\n        this.stream.insert(this.offsetMeasureNote, el);\n    }\n\n    parseMeasureAttributes() {\n        this.parseMeasureNumbers();\n        // width;\n    }\n\n    parseMeasureNumbers() {\n        const mNumRaw = this.$mxMeasure.attr('number');\n        const mNum = parseInt(mNumRaw); // no suffixes...\n        this.stream.number = mNum;\n        if (this.parent) {\n            this.parent.lastMeasureNumber = mNum;\n        }\n        this.measureNumber = mNum;\n    }\n\n    parseAttributesTag($mxAttributes) {\n        this.attributesAreInternal = false;\n        this.$activeAttributes = $mxAttributes;\n        for (const mxSub of $mxAttributes.children()) {\n            const tag = mxSub.tagName;\n            const $mxSub = $(mxSub);\n            const methName = this.attributeTagsToMethods[tag];\n            if (methName !== undefined) {\n                this[methName]($mxSub);\n            } else if (tag === 'staves') {\n                this.staves = parseInt($mxSub.text());\n            } else if (tag === 'divisions') {\n                this.divisions = parseFloat($mxSub.text());\n            }\n            // transpose;\n        }\n        if (this.parent !== undefined) {\n            this.parent.lastDivisions = this.divisions;\n            this.parent.$activeAttributes = this.$activeAttributes;\n        }\n    }\n    // xmlTransposeToInterval\n\n    handleTimeSignature($mxTime) {\n        const ts = this.xmlToTimeSignature($mxTime);\n        this.insertIntoMeasureOrVoice($mxTime, ts);\n    }\n\n    xmlToTimeSignature($mxTime) {\n        // senza-misura\n        // simple time signature only;\n        const numerator = $($mxTime.children('beats')[0])\n            .text()\n            .trim();\n        const denominator = $($mxTime.children('beat-type')[0])\n            .text()\n            .trim();\n        return new meter.TimeSignature(numerator + '/' + denominator);\n        // symbol\n    }\n\n    handleClef($mxClef) {\n        const clefObj = this.xmlToClef($mxClef);\n        this.stream.clef = clefObj;\n        this.insertIntoMeasureOrVoice($mxClef, clefObj);\n        this.lastClefs[0] = clefObj;\n//        if (this.parent !== undefined) {\n//            this.parent.lastClefs[0] = clefObj.clone(true);\n//        }\n    }\n\n    xmlToClef($mxClef) {\n        const sign = $($mxClef.children('sign')[0])\n            .text()\n            .trim();\n        // TODO: percussion, etc.\n        const line = $($mxClef.children('line')[0])\n            .text()\n            .trim();\n\n        let clefOctaveChange = 0;\n        const $coc = $mxClef.children('clef-octave-change');\n        if ($coc.length > 0) {\n            clefOctaveChange = parseInt(\n                $($coc[0])\n                    .text()\n                    .trim()\n            );\n        }\n        return clef.clefFromString(sign + line, clefOctaveChange);\n    }\n\n    handleKeySignature($mxKey) {\n        const keySig = this.xmlToKeySignature($mxKey);\n        this.insertIntoMeasureOrVoice($mxKey, keySig);\n    }\n\n    xmlToKeySignature($mxKey) {\n        const ks = new key.KeySignature();\n        seta(ks, $mxKey, 'fifths', 'sharps', parseInt);\n        // mode!\n        // non-standard and key-octaves\n        ks._alteredPitchesCache = undefined; // TODO: remove private access...\n        return ks;\n    }\n}\n\nconst musicxml = {\n    ScoreParser,\n    PartParser,\n    MeasureParser,\n};\n\nexport default musicxml;\n","import { ScoreParser as MusicXMLScoreParser } from './musicxml/xmlToM21.js';\n\nexport function parse(txt) {\n    const sp = new MusicXMLScoreParser();\n    return sp.scoreFromText(txt);\n}\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/dynamics -- Dynamics\n *\n * note that Vex.Flow does not support Dynamics yet and we do not support MIDI dynamics,\n *  so currently of limited value...\n *\n * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { base } from './base.js';\n\n/**\n * dynamics Module. See {@link music21.dynamics} for namespace\n *\n * @exports music21/dynamics\n */\n/**\n * Dynamics related objects.\n *\n * N.B. Firefox completely ignores dyanmics on playback!\n *\n * Currently do not export to Vexflow.  :-(\n *\n * @namespace music21.dynamics\n * @memberof music21\n * @requires music21/base\n */\nexport const dynamics = {};\ndynamics.shortNames = [\n    'pppppp',\n    'ppppp',\n    'pppp',\n    'ppp',\n    'pp',\n    'p',\n    'mp',\n    'mf',\n    'f',\n    'fp',\n    'sf',\n    'ff',\n    'fff',\n    'ffff',\n    'fffff',\n    'ffffff',\n];\ndynamics.longNames = {\n    ppp: ['pianississimo'],\n    pp: ['pianissimo'],\n    p: ['piano'],\n    mp: ['mezzopiano'],\n    mf: ['mezzoforte'],\n    f: ['forte'],\n    fp: ['fortepiano'],\n    sf: ['sforzando'],\n    ff: ['fortissimo'],\n    fff: ['fortississimo'],\n};\ndynamics.englishNames = {\n    ppp: ['extremely soft'],\n    pp: ['very soft'],\n    p: ['soft'],\n    mp: ['moderately soft'],\n    mf: ['moderately loud'],\n    f: ['loud'],\n    ff: ['very loud'],\n    fff: ['extremely loud'],\n};\ndynamics.dynamicStrToScalar = {\n    None: [0.5], // default value\n    n: [0.0],\n    pppp: [0.1],\n    ppp: [0.15],\n    pp: [0.25],\n    p: [0.35],\n    mp: [0.45],\n    mf: [0.55],\n    f: [0.7],\n    fp: [0.75],\n    sf: [0.85],\n    ff: [0.85],\n    fff: [0.9],\n    ffff: [0.95],\n};\n\n/**\n * A representation of a dynamic.\n *\n * @class Dynamic\n * @memberof music21.dynamics\n * @extends music21.base.Music21Object\n * @param {number|string} value - either a number between 0 and 1 or a dynamic mark such as \"ff\" or \"mp\"\n * @property {string|undefined} value - a name such as \"pp\" etc.\n * @property {string|undefined} longName - a longer name such as \"pianissimo\"\n * @property {string|undefined} englishName - a name such as \"very soft\"\n * @property {number} volumeScalar - a number between 0 and 1.\n */\nexport class Dynamic extends base.Music21Object {\n    constructor(value) {\n        super();\n        /**\n         *\n         * @type {string|undefined}\n         * @private\n         */\n        this._value = undefined;\n        /**\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        this._volumeScalar = undefined;\n        this.longName = undefined;\n        this.englishName = undefined;\n        this.value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (typeof value !== 'string') {\n            // assume number\n            this._volumeScalar = value;\n            if (value <= 0) {\n                this._value = 'n';\n            } else if (value < 0.11) {\n                this._value = 'pppp';\n            } else if (value < 0.16) {\n                this._value = 'ppp';\n            } else if (value < 0.26) {\n                this._value = 'pp';\n            } else if (value < 0.36) {\n                this._value = 'p';\n            } else if (value < 0.5) {\n                this._value = 'mp';\n            } else if (value < 0.65) {\n                this._value = 'mf';\n            } else if (value < 0.8) {\n                this._value = 'f';\n            } else if (value < 0.9) {\n                this._value = 'ff';\n            } else {\n                this._value = 'fff';\n            }\n        } else {\n            this._value = value;\n            this._volumeScalar = undefined;\n        }\n        if (this._value in dynamics.longNames) {\n            this.longName = dynamics.longNames[this._value][0];\n        } else {\n            this.longName = undefined;\n        }\n        if (this._value in dynamics.englishNames) {\n            this.englishName = dynamics.englishNames[this._value][0];\n        } else {\n            this.englishName = undefined;\n        }\n    }\n    get volumeScalar() {\n        if (this._volumeScalar !== undefined) {\n            return this._volumeScalar;\n        } else if (this._value in dynamics.dynamicStrToScalar) {\n            return dynamics.dynamicStrToScalar[this._value][0];\n        } else {\n            return undefined;\n        }\n    }\n    set volumeScalar(value) {\n        if (typeof value === 'number' && value <= 1 && value >= 0) {\n            this._volumeScalar = value;\n        }\n    }\n}\ndynamics.Dynamic = Dynamic;\n","import * as Vex from 'vexflow';\n\nimport { base } from './base.js';\n/**\n * Expressions module.  See {@link music21.expressions}\n *\n * @exports music21/expressions\n */\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @namespace music21.expressions\n * @memberof music21\n * @requires music21/expressions\n */\nexport const expressions = {};\n\n/**\n * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...\n *\n * @class Expression\n * @memberof music21.expressions\n * @extends music21.base.Music21Object\n * @property {string} name\n * @property {string} vexflowModifier\n * @property {int} setPosition\n */\nexport class Expression extends base.Music21Object {\n    constructor() {\n        super();\n        this.name = 'expression';\n        this.vexflowModifier = '';\n        this.setPosition = undefined;\n    }\n    /**\n     * Renders this Expression as a Vex.Flow.Articulation\n     *\n     * (this is not right for all cases)\n     *\n     * @returns {Vex.Flow.Articulation}\n     */\n    vexflow() {\n        const vfe = new Vex.Flow.Articulation(this.vexflowModifier);\n        if (this.setPosition) {\n            vfe.setPosition(this.setPosition);\n        }\n        return vfe;\n    }\n}\nexpressions.Expression = Expression;\n\n/**\n * A fermata...\n *\n * @class Fermata\n * @memberof music21.expressions\n * @extends music21.expressions.Expression\n */\nexport class Fermata extends Expression {\n    constructor() {\n        super();\n        this.name = 'fermata';\n        this.vexflowModifier = 'a@a';\n        this.setPosition = 3;\n    }\n}\nexpressions.Fermata = Fermata;\n","import { pitch } from './pitch.js';\n\nconst shorthandNotation = {\n    '': [5, 3],\n    '5': [5, 3],\n    '6': [6, 3],\n    '7': [7, 5, 3],\n    '9': [9, 7, 5, 3],\n    '11': [11, 9, 7, 5, 3],\n    '13': [13, 11, 9, 7, 5, 3],\n    '6,5': [6, 5, 3],\n    '4,3': [6, 4, 3],\n    '4,2': [6, 4, 2],\n    '2': [6, 4, 2],\n};\n/**\n * In music21p is in figuredBass.notation -- eventually to be moved there.\n */\n\nclass Notation {\n    /**\n     *\n     * @param {string} [notationColumn='']\n     * @property {string[]} figureStrings\n     * @property {int[]} origNumbers\n     * @property {int[]} numbers\n     * @property {string[]} modifierStrings\n     * @property {Modifier[]} modifiers\n     * @property {Figure[]} figures\n     */\n    constructor(notationColumn='') {\n        this.notationColumn = notationColumn;\n        this.figureStrings = undefined;\n        this.origNumbers = undefined;\n        this.origModStrings = undefined;\n        this.numbers = undefined;\n        this.modifierStrings = undefined;\n        this._parseNotationColumn();\n        this._translateToLonghand();\n\n        this.modifiers = undefined;\n        this.figures = undefined;\n        this._getModifiers();\n        this._getFigures();\n    }\n\n    /**\n     * _parseNotationColumn - Given a notation column below a pitch, defines both this.numbers\n     *    and this.modifierStrings, which provide the intervals above the\n     *    bass and (if necessary) how to modify the corresponding pitches\n     *    accordingly.\n     *\n     * @return {undefined}\n     */\n\n    _parseNotationColumn() {\n        const nc = this.notationColumn;\n        const figures = nc.split(/,/);\n        const numbers = [];\n        const modifierStrings = [];\n        const figureStrings = [];\n\n        for (let figure of figures) {\n            figure = figure.trim();\n            figureStrings.push(figure);\n            let numberString = '';\n            let modifierString = '';\n            for (const c of figure) {\n                if (c.match(/\\d/)) {\n                    numberString += c;\n                } else {\n                    modifierString += c;\n                }\n            }\n            let number;\n            if (numberString !== '') {\n                number = parseInt(numberString);\n            }\n            numbers.push(number);\n            if (modifierString === '') {\n                modifierString = undefined;\n            }\n            modifierStrings.push(modifierString);\n        }\n        this.origNumbers = numbers;\n        this.numbers = numbers;\n        this.modifierStrings = modifierStrings;\n        this.figureStrings = figureStrings;\n    }\n\n    _translateToLonghand() {\n        let oldNumbers = this.numbers;\n        let newNumbers = oldNumbers;\n        const oldModifierStrings = this.modifierStrings;\n        let newModifierStrings = oldModifierStrings;\n        const oldNumbersString = oldNumbers.toString();\n\n        if (shorthandNotation[oldNumbersString] !== undefined) {\n            newNumbers = shorthandNotation[oldNumbersString];\n            newModifierStrings = [];\n            const temp = [];\n            for (const number of oldNumbers) {\n                if (number === undefined) {\n                    temp.push(3);\n                } else {\n                    temp.push(number);\n                }\n            }\n            oldNumbers = temp;\n\n            for (const number of newNumbers) {\n                let newModifierString;\n                if (oldNumbers.includes(number)) {\n                    const modifierStringIndex = oldNumbers.indexOf(number);\n                    newModifierString = oldModifierStrings[modifierStringIndex];\n                }\n                newModifierStrings.push(newModifierString);\n            }\n        } else {\n            const temp = [];\n            for (const number of oldNumbers) {\n                if (number === undefined) {\n                    temp.push(3);\n                } else {\n                    temp.push(number);\n                }\n            }\n            newNumbers = temp;\n        }\n        this.numbers = newNumbers;\n        this.modifierStrings = newModifierStrings;\n    }\n\n    _getModifiers() {\n        const modifiers = [];\n        for (let i = 0; i < this.numbers.length; i++) {\n            const modifierString = this.modifierStrings[i];\n            const modifier = new Modifier(modifierString);\n            modifiers.push(modifier);\n        }\n        this.modifiers = modifiers;\n    }\n\n    _getFigures() {\n        const figures = [];\n        for (let i = 0; i < this.numbers.length; i++) {\n            const number = this.numbers[i];\n            const modifierString = this.modifierStrings[i];\n            const figure = new Figure(number, modifierString);\n            figures.push(figure);\n        }\n        this.figures = figures;\n    }\n}\n\nclass Figure {\n    constructor(number, modifierString) {\n        this.number = number;\n        this.modifierString = modifierString;\n        this.modifier = new Modifier(modifierString);\n    }\n}\n\nconst specialModifiers = {\n    '+': '#',\n    '/': '-',\n    '\\\\': '#',\n    b: '-',\n    bb: '--',\n    bbb: '---',\n    bbbb: '-----',\n    '++': '##',\n    '+++': '###',\n    '++++': '####',\n};\n\nclass Modifier {\n    constructor(modifierString) {\n        this.modifierString = modifierString;\n        this.accidental = this._toAccidental();\n    }\n\n    _toAccidental() {\n        let modStr = this.modifierString;\n        if (modStr === undefined || modStr === '') {\n            return undefined;\n        }\n        const a = new pitch.Accidental();\n        if (specialModifiers[modStr] !== undefined) {\n            modStr = specialModifiers[modStr];\n        }\n        a.set(modStr);\n        return a;\n    }\n\n    modifyPitchName(pitchNameToAlter) {\n        const pitchToAlter = new pitch.Pitch(pitchNameToAlter);\n        this.modifyPitch(pitchToAlter, true);\n        return pitchToAlter.name;\n    }\n\n    modifyPitch(pitchToAlter, inPlace) {\n        if (inPlace !== true) {\n            pitchToAlter = pitchToAlter.clone();\n        }\n\n        if (this.accidental === undefined) {\n            return pitchToAlter;\n        }\n\n        if (\n            this.accidental.alter === 0.0\n            || pitchToAlter.accidental === undefined\n        ) {\n            pitchToAlter.accidental = this.accidental.clone();\n        } else {\n            const newAccidental = new pitch.Accidental();\n            const newAlter\n                = pitchToAlter.accidental.alter + this.accidental.alter;\n            newAccidental.set(newAlter);\n            pitchToAlter.accidental = newAccidental;\n        }\n        return pitchToAlter;\n    }\n}\n\nexport const figuredBass = {\n    Notation,\n    Figure,\n    Modifier,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/fromPython -- Conversion from music21p jsonpickle streams\n *\n * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab\n *\n * usage:\n *\n * in python:\n *\n * s = corpus.parse('bwv66.6')\n * stringRepresentingM21JsonPickle = s.freezeStream('jsonpickle')\n *\n * in js:\n *\n * pyConv = new music21.fromPython.Converter();\n * s = pyConv.run(stringRepresentingM21JsonPickle);\n *\n *\n */\nimport * as jsonpickle from 'jsonpickle';\n\nconst jp = jsonpickle;\n/**\n * fromPython module -- see {@link music21.fromPython}\n */\nconst unpickler = jp.unpickler;\n\n/**\n * Converter for taking a Python-encoded jsonpickle music21p stream\n * and loading it into music21j\n *\n * Very very alpha.  See music21(p).vexflow modules to see how it works.\n *\n * Requires Cuthbert's jsonpickle.js port (included in music21j)\n *\n * @namespace music21.fromPython\n * @extends music21\n * @requires jsonpickle\n */\nexport const fromPython = {};\n\n/**\n *\n * @class Converter\n * @memberof music21.fromPython\n * @property {boolean} debug\n * @property {Array<string>} knownUnparsables - list of classes that cannot be parsed\n * @property {Object} handlers - object mapping string names of classes to a set of\n * function calls to perform when restoring or post-restoring.\n * (too complicated to explain; read the code)\n */\nexport class Converter {\n    constructor() {\n        this.debug = true;\n        this.knownUnparsables = [\n            'music21.spanner.Line',\n            'music21.instrument.Instrument',\n            'music21.layout.StaffGroup',\n            'music21.layout.StaffLayout',\n            'music21.layout.SystemLayout',\n            'music21.layout.PageLayout',\n            'music21.expressions.TextExpression',\n            'music21.bar.Barline', // Soon...\n            'music21.tempo.MetronomeMark', // should be possible\n            'music21.metadata.Metadata', // Soon...\n        ];\n        this.handlers = {\n            'music21.duration.Duration': {\n                post_restore: d => {\n                    d.quarterLength = d._qtrLength;\n                    return d;\n                },\n            },\n            'music21.meter.TimeSignature': {\n                post_restore: ts => {\n                    ts._numerator = ts.displaySequence._numerator;\n                    ts._denominator = ts.displaySequence._denominator;\n                    return ts;\n                },\n            },\n            'music21.stream.Part': {\n                post_restore: p => {\n                    this.currentPart = p;\n                    this.lastClef = undefined;\n                    this.lastKeySignature = undefined;\n                    this.lastTimeSignature = undefined;\n                    this.streamPostRestore(p);\n                    return p;\n                },\n            },\n            // TODO: all inherit somehow, through _classes or better, prototype...\n            'music21.stream.Score': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Stream': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Measure': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n            'music21.stream.Voice': {\n                post_restore: this.streamPostRestore.bind(this),\n            },\n        };\n        this.currentPart = undefined;\n        this.lastClef = undefined;\n        this.lastKeySignature = undefined;\n        this.lastTimeSignature = undefined;\n    }\n\n    /**\n     * Fixes up some references that cannot be unpacked from jsonpickle.\n     *\n     * @param {music21.stream.Stream} s - stream after unpacking from jsonpickle\n     * @returns {music21.stream.Stream}\n     */\n    streamPostRestore(s) {\n        const st = s._storedElementOffsetTuples;\n\n        s._clef = this.lastClef;\n        s._keySignature = this.lastKeySignature;\n        s._timeSignature = this.lastTimeSignature;\n        for (let i = 0; i < st.length; i++) {\n            const el = st[i][0];\n            el.offset = st[i][1];\n            let classList = el.classes;\n            if (classList === undefined) {\n                console.warn('M21object without classes: ', el);\n                console.warn('Javascript classes are: ', el._py_class);\n                classList = [];\n            }\n            let streamPart = this.currentPart;\n            if (streamPart === undefined) {\n                streamPart = s; // possibly a Stream constructed from .measures()\n            }\n\n            let appendEl = true;\n            let insertAtStart = false;\n\n            for (let j = 0; j < classList.length; j++) {\n                const thisClass = classList[j];\n                for (let kn = 0; kn < this.knownUnparsables.length; kn++) {\n                    const unparsable = this.knownUnparsables[kn];\n                    if (unparsable.indexOf(thisClass) !== -1) {\n                        appendEl = false;\n                    }\n                }\n                if (thisClass === 'TimeSignature') {\n                    // console.log(\"Got timeSignature\", streamPart, newM21pObj, storedElement);\n                    s._timeSignature = el;\n                    this.lastTimeSignature = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.timeSignature === undefined\n                    ) {\n                        streamPart.timeSignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Clef') {\n                    s._clef = el;\n                    this.lastClef = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.clef === undefined\n                    ) {\n                        streamPart.clef = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'KeySignature') {\n                    s._keySignature = el;\n                    this.lastKeySignature = el;\n                    if (\n                        streamPart !== undefined\n                        && streamPart.keySignature === undefined\n                    ) {\n                        streamPart.keySignature = el;\n                    }\n                    appendEl = false;\n                } else if (thisClass === 'Part') {\n                    appendEl = false;\n                    insertAtStart = true;\n                }\n            }\n\n            if (appendEl) {\n                s.append(el); // all but clef, ts, ks\n            } else if (insertAtStart) {\n                s.insert(0, el); // Part\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Run the main decoder\n     *\n     * @param {string} jss - stream encoded as JSON\n     * @returns {music21.stream.Stream}\n     */\n    run(jss) {\n        const outStruct = unpickler.decode(jss, this.handlers);\n        return outStruct.stream;\n    }\n}\nfromPython.Converter = Converter;\n","import { chord } from './chord.js';\nimport { key } from './key.js';\n\nclass Harmony extends chord.Chord {\n    constructor(figure, keywords) {\n        if (keywords === undefined) {\n            keywords = {};\n        }\n\n        super();\n        this._writeAsChord = false;\n        this._roman = undefined;\n        this.chordStepModifications = [];\n        this._degreesList = [];\n\n        /**\n         *\n         * @type {music21.key.Key|undefined}\n         * @private\n         */\n        this._key = undefined;\n        // this._updateBasedOnXMLInput(keywords);\n        this._figure = figure;\n        if (keywords.parseFigure !== false && this._figure !== undefined) {\n            this._parseFigure();\n        }\n        if (\n            this._overrides.bass === undefined\n            && this._overrides.root !== undefined\n        ) {\n            this.bass(this._overrides.root);\n        }\n        if (\n            (keywords.updatePitches && this._figure !== undefined)\n            || this._overrides.root !== undefined\n            || this._overrides.bass !== undefined\n        ) {\n            this._updatePitches();\n        }\n        // this._updateBasedOnXMLInput(keywords);\n        if (\n            keywords.parseFigure !== false\n            && this._figure !== undefined\n            && this._figure.indexOf('sus') !== -1\n            && this._figure.indexOf('sus2') === -1\n        ) {\n            this.root(this.bass());\n        }\n    }\n    _parseFigure() {}\n\n    _updatePitches() {}\n\n    get figure() {\n        if (this._figure === undefined) {\n            return this.findFigure();\n        } else {\n            return this._figure;\n        }\n    }\n    set figure(newFigure) {\n        this._figure = newFigure;\n        if (this._figure !== undefined) {\n            this._parseFigure();\n            this._updatePitches();\n        }\n    }\n\n    get key() {\n        return this._key;\n    }\n    set key(keyOrScale) {\n        if (typeof keyOrScale === 'string') {\n            this._key = new key.Key(keyOrScale);\n        } else {\n            this._key = keyOrScale;\n            this._roman = undefined;\n        }\n    }\n\n    findFigure() {}\n}\n\nexport const harmony = {\n    Harmony,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/miditools -- A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * Copyright (c) 2014-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n * @author Michael Scott Cuthbert\n */\nimport * as $ from 'jquery';\nimport * as eventjs from 'eventjs'; // drag handler...\nimport * as MIDI from 'MIDI';\n\nimport { chord } from './chord.js';\nimport { common } from './common.js';\nimport { debug } from './debug.js';\nimport { instrument } from './instrument.js';\nimport { note } from './note.js';\n\n/**\n * A collection of tools for midi. See the namespace {@link music21.miditools}\n *\n * @exports music21/miditools\n */\n/**\n * Module that holds **music21** tools for connecting with MIDI.js and somewhat with the\n * events from the Jazz plugin or the WebMIDI protocol.\n *\n * @namespace music21.miditools\n * @memberof music21\n */\nexport const miditools = {};\n\n/**\n * Number of octaves to transpose all incoming midi signals\n *\n * @type {number}\n * @default 0\n */\nmiditools.transposeOctave = 0;\n/**\n * @class Event\n * @memberof music21.miditools\n * @param {number} t - timing information\n * @param {number} a - midi data 1 (N.B. a >> 4 = midiCommand )\n * @param {number} b - midi data 2\n * @param {number} c - midi data 3\n */\nexport class Event {\n    constructor(t, a, b, c) {\n        this.timing = t;\n        this.data1 = a;\n        this.data2 = b;\n        this.data3 = c;\n        this.midiCommand = a >> 4;\n\n        this.noteOff = this.midiCommand === 8;\n        this.noteOn = this.midiCommand === 9;\n\n        this.midiNote = undefined;\n        if (this.noteOn || this.noteOff) {\n            this.midiNote = this.data2 + 12 * miditools.transposeOctave;\n            this.velocity = this.data3;\n        }\n    }\n    /**\n     * Calls MIDI.noteOn or MIDI.noteOff for the note\n     * represented by the Event (if appropriate)\n     *\n     * @returns {undefined}\n     */\n    sendToMIDIjs() {\n        if (MIDI !== undefined && MIDI.noteOn !== undefined) {\n            // noteOn check because does not exist if no audio context\n            // or soundfont has been loaded, such as if a play event\n            // is triggered before soundfont has been loaded.\n            if (this.noteOn) {\n                MIDI.noteOn(0, this.midiNote, this.velocity, 0);\n            } else if (this.noteOff) {\n                MIDI.noteOff(0, this.midiNote, 0);\n            }\n        } else {\n            console.warn('could not playback note because no MIDIout defined');\n        }\n    }\n    /**\n     * Makes a {@link music21.note.Note} object from the event's midiNote number.\n     *\n     * @returns {music21.note.Note} - the {@link music21.note.Note} object represented by Event.midiNote\n     */\n    music21Note() {\n        const m21n = new note.Note();\n        m21n.pitch.ps = this.midiNote;\n        return m21n;\n    }\n}\nmiditools.Event = Event;\n\n/**\n * How long to wait in milliseconds before deciding that a note belongs to another chord. Default 100ms\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.maxDelay = 100; // in ms\n/**\n * At what time (in ms since Epoch) the chord started.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.heldChordTime = 0;\n/**\n * An Array (or undefined) of currently held chords that have not been sent out yet.\n *\n * @memberof music21.miditools\n * @type {Array|undefined}\n */\nmiditools.heldChordNotes = undefined;\n\n/**\n * When, in MS since Jan 1, 1970, was the last {@link music21.note.Note} played.\n * Defaults to the time that the module was loaded.\n *\n * @memberof music21.miditools\n * @type {number}\n */\nmiditools.timeOfLastNote = Date.now(); // in ms\n\nmiditools._baseTempo = 60;\n/**\n * Assign (or query) a Metronome object to run all timing information.\n *\n * @memberof music21.miditools\n * @type {music21.tempo.Metronome}\n */\nmiditools.metronome = undefined;\n\nObject.defineProperties(miditools, {\n    tempo: {\n        enumerable: true,\n        get() {\n            if (this.metronome === undefined) {\n                return this._baseTempo;\n            } else {\n                return this.metronome.tempo;\n            }\n        },\n        set(t) {\n            if (this.metronome === undefined) {\n                this._baseTempo = t;\n            } else {\n                this.metronome.tempo = t;\n            }\n        },\n    },\n});\n\n/* --------- chords ------------- */\n/**\n *  Clears chords that are older than miditools.heldChordTime\n *\n *  Runs a setTimeout on itself.\n *  Calls miditools.sendOutChord\n *\n *  @memberof music21.miditools\n */\nmiditools.clearOldChords = function clearOldChords() {\n    // clear out notes that may be a chord...\n    const nowInMs = Date.now(); // in ms\n    if (miditools.heldChordTime + miditools.maxDelay < nowInMs) {\n        miditools.heldChordTime = nowInMs;\n        if (miditools.heldChordNotes !== undefined) {\n            // console.log('to send out chords');\n            miditools.sendOutChord(miditools.heldChordNotes);\n            miditools.heldChordNotes = undefined;\n        }\n    }\n    setTimeout(miditools.clearOldChords, miditools.maxDelay);\n};\n/**\n *  Take a series of jEvent noteOn objects and convert them to a single Chord object\n *  so long as they are all sounded within miditools.maxDelay milliseconds of each other.\n *  this method stores notes in miditools.heldChordNotes (Array).\n *\n *  @param {music21.miditools.Event} jEvent\n *  @memberof music21.miditools\n *  @returns undefined\n */\nmiditools.makeChords = function makeChords(jEvent) {\n    // jEvent is a miditools.Event object\n    if (jEvent.noteOn) {\n        const m21n = jEvent.music21Note();\n        if (miditools.heldChordNotes === undefined) {\n            miditools.heldChordNotes = [m21n];\n        } else {\n            for (let i = 0; i < miditools.heldChordNotes.length; i++) {\n                const foundNote = miditools.heldChordNotes[i];\n                if (foundNote.pitch.ps === m21n.pitch.ps) {\n                    return; // no duplicates\n                }\n            }\n            miditools.heldChordNotes.push(m21n);\n        }\n    }\n};\n\n/**\n * The last Note or Chord to be sent out from miditools.  This is an important semi-global\n * attribute, since the last element may need to be quantized by quantizeLastNote() to\n * determine its length, since the note may need to be placed into a staff before its total\n * length can be determined.\n *\n * @memberof music21.miditools\n * @type {music21.chord.Chord|music21.note.Note|undefined}\n */\nmiditools.lastElement = undefined;\n\n/**\n * Take the list of Notes and makes a chord out of it, if appropriate and call\n * {@link music21.miditools.callBacks.sendOutChord} callback with the Chord or Note as a parameter.\n *\n * @memberof music21.miditools\n * @param {Array<music21.note.Note>} chordNoteList - an Array of {@link music21.note.Note} objects\n * @returns {(music21.note.Note|music21.chord.Chord|undefined)} A {@link music21.chord.Chord} object,\n * most likely, but maybe a {@link music21.note.Note} object)\n */\nmiditools.sendOutChord = function sendOutChord(chordNoteList) {\n    let appendObject;\n    if (chordNoteList.length > 1) {\n        // console.log(chordNoteList[0].name, chordNoteList[1].name);\n        appendObject = new chord.Chord(chordNoteList);\n    } else if (chordNoteList.length === 1) {\n        appendObject = chordNoteList[0]; // note object\n    } else {\n        return undefined;\n    }\n    appendObject.stemDirection = 'noStem';\n    miditools.quantizeLastNote();\n    miditools.lastElement = appendObject;\n    if (miditools.callBacks.sendOutChord !== undefined) {\n        miditools.callBacks.sendOutChord(appendObject);\n    }\n    return appendObject;\n};\n\n/* ----------- callbacks --------- */\n// TODO: all callbacks (incl. raw, sendOutChord) should be able to be a function or an array of functions\n\n/**\n* callBacks is an object with three keys:\n*\n* - raw: function (t, a, b,c) to call when any midievent arrives. Default: `function (t, a, b, c) { return new miditools.Event(t, a, b, c); }`\n* - general: function ( miditools.Event() ) to call when an Event object has been created. Default: `[miditools.sendToMIDIjs, miditools.quantizeLastNote]`\n* - sendOutChord: function (array_of_note.Note_objects) to call when a sufficient time has passed to build a chord from input. Default: empty function.\n*\n* At present, only \"general\" can take an Array of event listening functions, but I hope to change that for sendOutChord also.\n*\n* \"general\" is usually the callback list to play around with.\n*\n* @memberof music21.miditools\n*/\nmiditools.callBacks = {\n    raw: (t, a, b, c) => new miditools.Event(t, a, b, c),\n    general: [miditools.sendToMIDIjs, miditools.quantizeLastNote],\n    sendOutChord: arrayOfNotes => {},\n};\n\n/**\n * Quantizes the lastElement (passed in) or music21.miditools.lastElement.\n *\n * @memberof music21.miditools\n * @param {music21.note.GeneralNote} lastElement - A {@link music21.note.Note} to be quantized\n * @returns {music21.note.GeneralNote} The same {@link music21.note.Note} object passed in with\n * duration quantized\n */\nmiditools.quantizeLastNote = function quantizeLastNote(lastElement) {\n    if (lastElement === undefined) {\n        lastElement = this.lastElement;\n        if (lastElement === undefined) {\n            return undefined;\n        }\n    }\n    lastElement.stemDirection = undefined;\n    const nowInMS = Date.now();\n    const msSinceLastNote = nowInMS - this.timeOfLastNote;\n    this.timeOfLastNote = nowInMS;\n    const normalQuarterNoteLength = 1000 * 60 / this.tempo;\n    const numQuarterNotes = msSinceLastNote / normalQuarterNoteLength;\n    let roundedQuarterLength = Math.round(4 * numQuarterNotes) / 4;\n    if (roundedQuarterLength >= 4) {\n        roundedQuarterLength = 4;\n    } else if (roundedQuarterLength >= 3) {\n        roundedQuarterLength = 3;\n    } else if (roundedQuarterLength > 2) {\n        roundedQuarterLength = 2;\n    } else if (roundedQuarterLength === 1.25) {\n        roundedQuarterLength = 1;\n    } else if (roundedQuarterLength === 0.75) {\n        roundedQuarterLength = 0.5;\n    } else if (roundedQuarterLength === 0) {\n        roundedQuarterLength = 0.125;\n    }\n    lastElement.duration.quarterLength = roundedQuarterLength;\n    return lastElement;\n};\n\n/* ----------- callbacks --------- */\n/**\n * Callback to midiEvent.sendToMIDIjs.\n *\n * @memberof music21.miditools\n * @param {music21.miditools.Event} midiEvent - event to send out.\n * @returns undefined\n */\nmiditools.sendToMIDIjs = midiEvent => {\n    midiEvent.sendToMIDIjs();\n};\n\n/* ------------ MIDI.js ----------- */\n\n/**\n * a mapping of soundfont text names to true, false, or \"loading\".\n *\n * @memberof music21.miditools\n * @type {Object}\n */\nmiditools.loadedSoundfonts = {};\n\n/**\n * Called after a soundfont has been loaded. The callback is better to be specified elsewhere\n * rather than overriding this important method.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n */\nmiditools.postLoadCallback = function postLoadCallback(soundfont, callback) {\n    // this should be bound to MIDI\n    if (debug) {\n        console.log('soundfont loaded about to execute callback.');\n        console.log(\n            'first playing two notes very softly -- seems to flush the buffer.'\n        );\n    }\n    $('.loadingSoundfont').remove();\n\n    const isFirefox = typeof InstallTrigger !== 'undefined'; // Firefox 1.0+\n    const isAudioTag = MIDI.technology === 'HTML Audio Tag';\n    const instrumentObj = instrument.find(soundfont);\n    if (instrumentObj !== undefined) {\n        MIDI.programChange(\n            instrumentObj.midiChannel,\n            instrumentObj.midiProgram\n        );\n        if (debug) {\n            console.log(\n                soundfont + ' (' + instrumentObj.midiProgram + ') loaded on ',\n                instrumentObj.midiChannel\n            );\n        }\n        if (isFirefox === false && isAudioTag === false) {\n            // Firefox ignores sound volume! so don't play! \n            // as does IE and others using HTML audio tag.\n            const channel = instrumentObj.midiChannel;\n            MIDI.noteOn(channel, 36, 1, 0);    // if no notes have been played before then\n            MIDI.noteOff(channel, 36, 1, 0.1); // the second note to be played is always\n            MIDI.noteOn(channel, 48, 1, 0.2);  // very clipped (on Safari at least)\n            MIDI.noteOff(channel, 48, 1, 0.3); // this helps a lot.\n            MIDI.noteOn(channel, 60, 1, 0.3);  // chrome needs three notes?\n            MIDI.noteOff(channel, 60, 1, 0.4);\n        }\n    }\n    if (callback !== undefined) {\n        callback(instrumentObj);\n    }\n    miditools.loadedSoundfonts[soundfont] = true;\n};\n\n/**\n * method to load soundfonts while waiting for other processes that need them\n * to load first.\n *\n * @memberof music21.miditools\n * @param {String} soundfont The name of the soundfont that was just loaded\n * @param {function} callback A function to be called after the soundfont is loaded.\n * @example\n * s = new music21.stream.Stream();\n * music21.miditools.loadSoundfont(\n *     'clarinet',\n *     function(i) {\n *         console.log('instrument object', i, 'loaded');\n *         s.instrument = i;\n * });\n */\nmiditools.loadSoundfont = function loadSoundfont(soundfont, callback) {\n    if (miditools.loadedSoundfonts[soundfont] === true) {\n        // this soundfont has already been loaded once, so just call the callback.\n        if (callback !== undefined) {\n            const instrumentObj = instrument.find(soundfont);\n            callback(instrumentObj);\n        }\n    } else if (miditools.loadedSoundfonts[soundfont] === 'loading') {\n        // we are still waiting for this instrument to load, so\n        // wait for it before calling callback.\n        const waitThenCall = () => {\n            if (miditools.loadedSoundfonts[soundfont] === true) {\n                if (debug) {\n                    console.log(\n                        'other process has finished loading; calling callback'\n                    );\n                }\n                if (callback !== undefined) {\n                    const instrumentObj = instrument.find(soundfont);\n                    callback(instrumentObj);\n                }\n            } else {\n                if (debug) {\n                    console.log('waiting for other process load');\n                }\n                setTimeout(waitThenCall, 100);\n            }\n        };\n        waitThenCall();\n    } else {\n        // soundfont we have not seen before:\n        // set its status to loading and then load it.\n        miditools.loadedSoundfonts[soundfont] = 'loading';\n        if (debug) {\n            console.log('waiting for document ready');\n        }\n        $(document).ready(() => {\n            if (debug) {\n                console.log('document ready, waiting to load soundfont');\n            }\n            $(document.body).append(\n                $(\n                    \"<div class='loadingSoundfont'><b>Loading MIDI Instrument</b>: \"\n                        + 'audio will begin when this message disappears.</div>'\n                )\n            );\n            MIDI.loadPlugin({\n                soundfontUrl: common.urls.soundfontUrl,\n                instrument: soundfont,\n                onsuccess: miditools.postLoadCallback.bind(\n                    MIDI,\n                    soundfont,\n                    callback\n                ),\n            });\n        });\n    }\n};\n\n/**\n * MidiPlayer -- an embedded midi player including the ability to create a\n * playback device.\n *\n * @class MidiPlayer\n * @memberOf music21.miditools\n * @property {number} speed - playback speed scaling (1=default).\n * @property {JQueryDOMObject|undefined} $playDiv - div holding the player,\n */\nexport class MidiPlayer {\n    constructor() {\n        this.player = new MIDI.Players.PlayInstance();\n        this.speed = 1.0;\n        this.$playDiv = undefined;\n    }\n    /**\n     * @param where\n     * @returns DOMElement\n     */\n    addPlayer(where) {\n        let $where = where;\n        if (where === undefined) {\n            where = document.body;\n        }\n        if (where.jquery === undefined) {\n            $where = $(where);\n        }\n        const $playDiv = $('<div class=\"midiPlayer\">');\n        const $controls = $('<div class=\"positionControls\">');\n        const $playPause = $(\n            '<input type=\"image\" src=\"'\n                + this.playPng()\n                + '\" align=\"absmiddle\" value=\"play\" class=\"playPause\">'\n        );\n        const $stop = $(\n            '<input type=\"image\" src=\"'\n                + this.stopPng()\n                + '\" align=\"absmiddle\" value=\"stop\" class=\"stopButton\">'\n        );\n\n        $playPause.on('click', this.pausePlayStop.bind(this));\n        $stop.on('click', this.stopButton.bind(this));\n        $controls.append($playPause);\n        $controls.append($stop);\n        $playDiv.append($controls);\n\n        const $time = $('<div class=\"timeControls\">');\n        const $timePlayed = $('<span class=\"timePlayed\">0:00</span>');\n        const $capsule = $(\n            '<span class=\"capsule\"><span class=\"cursor\"></span></span>'\n        );\n        const $timeRemaining = $('<span class=\"timeRemaining\">-0:00</span>');\n        $time.append($timePlayed);\n        $time.append($capsule);\n        $time.append($timeRemaining);\n        $playDiv.append($time);\n\n        $where.append($playDiv);\n        this.$playDiv = $playDiv;\n        return $playDiv;\n    }\n\n    stopButton() {\n        this.pausePlayStop('yes');\n    }\n\n    playPng() {\n        return common.urls.midiPlayer + '/play.png';\n    }\n    pausePng() {\n        return common.urls.midiPlayer + '/pause.png';\n    }\n    stopPng() {\n        return common.urls.midiPlayer + '/stop.png';\n    }\n\n    pausePlayStop(stop) {\n        let d;\n        if (this.$playDiv === undefined) {\n            d = { src: 'doesnt matter' };\n        } else {\n            d = this.$playDiv.find('.playPause')[0];\n        }\n        if (stop === 'yes') {\n            this.player.stop();\n            d.src = this.playPng();\n        } else if (this.player.playing || stop === 'pause') {\n            d.src = this.playPng();\n            this.player.pause(true);\n        } else {\n            d.src = this.pausePng();\n            this.player.resume();\n        }\n    }\n\n    base64Load(b64data) {\n        const player = this.player;\n        player.timeWarp = this.speed;\n\n        const m21midiplayer = this;\n        miditools.loadSoundfont('acoustic_grand_piano', () => {\n            player.loadFile(\n                b64data,\n                () => {\n                    // success\n                    m21midiplayer.fileLoaded();\n                },\n                undefined, // loading\n                e => {\n                    // failure\n                    console.log(e);\n                }\n            );\n        });\n    }\n\n    songFinished() {\n        this.pausePlayStop('yes');\n    }\n\n    fileLoaded() {\n        this.updatePlaying();\n    }\n\n    startAndUpdate() {\n        this.player.start();\n        this.updatePlaying();\n    }\n\n    updatePlaying() {\n        const self = this;\n        const player = this.player;\n        if (this.$playDiv === undefined) {\n            return;\n        }\n        const $d = this.$playDiv;\n        // update the timestamp\n        const timePlayed = $d.find('.timePlayed')[0];\n        const timeRemaining = $d.find('.timeRemaining')[0];\n        const timeCursor = $d.find('.cursor')[0];\n        const $capsule = $d.find('.capsule');\n        //\n        eventjs.add($capsule[0], 'drag', (event, self) => {\n            eventjs.cancel(event);\n            const player = this.player;\n            player.currentTime = self.x / 420 * player.endTime;\n            if (player.currentTime < 0) {\n                player.currentTime = 0;\n            }\n            if (player.currentTime > player.endTime) {\n                player.currentTime = player.endTime;\n            }\n            if (self.state === 'down') {\n                this.pausePlayStop('pause');\n            } else if (self.state === 'up') {\n                this.pausePlayStop('play');\n            }\n        });\n        //\n        function timeFormatting(n) {\n            const minutes = (n / 60) >> 0;\n            let seconds = String((n - minutes * 60) >> 0);\n            if (seconds.length === 1) {\n                seconds = '0' + seconds;\n            }\n            return minutes + ':' + seconds;\n        }\n\n        player.setAnimation(data => {\n            const percent = data.now / data.end;\n            const now = data.now >> 0; // where we are now\n            const end = data.end >> 0; // end of song\n            if (now === end) {\n                // go to next song\n                self.songFinished();\n            }\n            // display the information to the user\n            timeCursor.style.width = percent * 100 + '%';\n            timePlayed.innerHTML = timeFormatting(now);\n            timeRemaining.innerHTML = '-' + timeFormatting(end - now);\n        });\n    }\n}\nmiditools.MidiPlayer = MidiPlayer;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/keyboard -- PianoKeyboard rendering and display objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\n// Minimum usage:\n\n// var kd = document.getElementById('keyboardDiv');\n// k = new music21.keyboard.Keyboard();\n// k.appendKeyboard(kd, 6, 57); // 88 key keyboard\n\n// configurable:\n// k.scaleFactor = 1.2;  // default 1\n// k.whiteKeyWidth = 40; // default 23\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { common } from './common.js';\nimport { miditools } from './miditools.js';\nimport { pitch } from './pitch.js';\n\n/**\n * Keyboard module, see {@link music21.keyboard} namespace\n *\n * @exports music21/keyboard\n */\n/**\n * keyboard namespace -- tools for creating an onscreen keyboard and interacting with it.\n *\n * @namespace music21.keyboard\n * @memberof music21\n * @requires music21/pitch\n * @requires music21/common\n * @requires music21/miditools\n * @requires jquery\n * @requires MIDI\n */\nexport const keyboard = {};\n/**\n * Represents a single Key\n *\n * @class Key\n * @memberof music21.keyboard\n * @property {Array<function>} callbacks - called when key is clicked/selected\n * @property {number} [scaleFactor=1]\n * @property {music21.keyboard.Keyboard|undefined} parent\n * @property {int} id - midinumber associated with the key.\n * @property {music21.pitch.Pitch|undefined} pitchObj\n * @property {DOMObject|undefined} svgObj - SVG representing the drawing of the key\n * @property {DOMObject|undefined} noteNameSvgObj - SVG representing the note name drawn on the key\n * @property {string} keyStyle='' - css style information for the key\n * @property {string} keyClass='' - css class information for the key (\"keyboardkey\" + this is the class)\n * @property {number} width - width of key\n * @property {number} height - height of key\n */\nexport class Key {\n    constructor() {\n        this.classes = ['Key']; // name conflict with key.Key\n        this.callbacks = [];\n        this.scaleFactor = 1;\n        this.parent = undefined;\n        this.id = 0;\n        this.width = 23;\n        this.height = 120;\n        this.pitchObj = undefined;\n        this.svgObj = undefined;\n        this.noteNameSvgObj = undefined;\n        this.keyStyle = '';\n        this.keyClass = '';\n    }\n    /**\n     * Gets an SVG object for the key\n     *\n     * @param {number} startX - X position in pixels from left of keyboard to draw key at\n     * @returns {DOMObject} a SVG rectangle for the key\n     */\n    makeKey(startX) {\n        const keyattrs = {\n            style: this.keyStyle,\n            x: startX,\n            y: 0,\n            class: 'keyboardkey ' + this.keyClass,\n            id: this.id,\n            width: this.width * this.scaleFactor,\n            height: this.height * this.scaleFactor,\n            rx: 3,\n            ry: 3,\n        };\n        const keyDOM = common.makeSVGright('rect', keyattrs);\n        for (const x in this.callbacks) {\n            if ({}.hasOwnProperty.call(this.callbacks, x)) {\n                keyDOM.addEventListener(x, this.callbacks[x], false);\n            }\n        }\n        this.svgObj = keyDOM;\n        return keyDOM;\n    }\n    /**\n     * Adds a circle (red) on the key (to mark middle C etc.)\n     *\n     * @method music21.keyboard.Key#addCircle\n     * @param {string} [strokeColor='red']\n     * @returns {DOMObject}\n     */\n    addCircle(strokeColor) {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return undefined;\n        }\n        if (strokeColor === undefined) {\n            strokeColor = 'red';\n        }\n        const x = parseInt(this.svgObj.getAttribute('x'));\n        const cx = x + this.parent.scaleFactor * this.width / 2;\n        // console.log('cx', cx);\n        const keyattrs = {\n            stroke: strokeColor,\n            'stroke-width': 3,\n            fill: 'none',\n            cx,\n            cy: (this.height - 10) * this.parent.scaleFactor,\n            class: 'keyboardkeyannotation',\n            r: this.width * this.parent.scaleFactor / 4,\n        };\n\n        const circleDom = common.makeSVGright('circle', keyattrs);\n        this.parent.svgObj.appendChild(circleDom);\n        // console.log(circleDom);\n        return circleDom;\n    }\n    /**\n     * Adds the note name on the key\n     *\n     * @method music21.keyboard.Key#addNoteName\n     * @param {Boolean} [labelOctaves=false] - use octave numbers too?\n     * @returns {DOMObject}\n     */\n    addNoteName(labelOctaves) {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return this;\n        }\n        if (this.id === 0 && this.pitchObj === undefined) {\n            return this;\n        } else if (this.pitchObj === undefined) {\n            this.pitchObj = new pitch.Pitch();\n            this.pitchObj.ps = this.id;\n        }\n        if (\n            this.pitchObj.accidental !== undefined\n            && this.pitchObj.accidental.alter !== 0\n        ) {\n            return this;\n        }\n        let x = parseInt(this.svgObj.getAttribute('x'));\n        let idStr = this.pitchObj.name;\n        let fontSize = 14;\n        if (labelOctaves === true) {\n            idStr = this.pitchObj.nameWithOctave;\n            fontSize = 12;\n            x -= 2;\n        }\n        fontSize = Math.floor(fontSize * parent.scaleFactor);\n\n        let textfill = 'white';\n        if (this.keyClass === 'whitekey') {\n            textfill = 'black';\n        }\n        const textattrs = {\n            fill: textfill,\n            x: x + this.parent.scaleFactor * (this.width / 2 - 5),\n            y: this.parent.scaleFactor * (this.height - 20),\n            class: 'keyboardkeyname',\n            'font-size': fontSize,\n        };\n\n        const textDom = common.makeSVGright('text', textattrs);\n        const textNode = document.createTextNode(idStr);\n        textDom.appendChild(textNode);\n        this.noteNameSvgObj = textDom; // store for removing...\n        this.parent.svgObj.appendChild(textDom);\n        return this;\n    }\n    /**\n     * Removes the note name from the key (if exists)\n     *\n     * @method music21.keyboard.Key#removeNoteName\n     * @returns {undefined}\n     */\n    removeNoteName() {\n        if (\n            this.svgObj === undefined\n            || this.parent === undefined\n            || this.parent.svgObj === undefined\n        ) {\n            return;\n        }\n        if (this.noteNameSvgObj === undefined) {\n            return;\n        }\n        if (this.noteNameSvgObj.parentNode === this.parent.svgObj) {\n            this.parent.svgObj.removeChild(this.noteNameSvgObj);\n        }\n        this.noteNameSvgObj = undefined;\n    }\n}\nkeyboard.Key = Key;\n\n/**\n * Defaults for a WhiteKey (width, height, keyStyle, keyClass)\n *\n * @class WhiteKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class WhiteKey extends Key {\n    constructor() {\n        super();\n        this.width = 23;\n        this.height = 120;\n        this.keyStyle = 'fill:#fffff6;stroke:black';\n        this.keyClass = 'whitekey';\n    }\n}\nkeyboard.WhiteKey = WhiteKey;\n/**\n * Defaults for a BlackKey (width, height, keyStyle, keyClass)\n *\n * @class BlackKey\n * @memberof music21.keyboard\n * @extends music21.keyboard.Key\n */\nexport class BlackKey extends Key {\n    constructor() {\n        super();\n        this.width = 13;\n        this.height = 80;\n        this.keyStyle = 'fill:black;stroke:black';\n        this.keyClass = 'blackkey';\n    }\n}\n\nkeyboard.BlackKey = BlackKey;\n\n/**\n * A Class representing a whole Keyboard full of keys.\n *\n * @class Keyboard\n * @memberof music21.keyboard\n * @property {number} whiteKeyWidth - default 23\n * @property {number} scaleFactor - default 1\n * @property {Object} keyObjects - a mapping of id to {@link music21.keyboard.Key} objects\n * @property {DOMObject} svgObj - the SVG object of the keyboard\n * @property {Boolean} markC - default true\n * @property {Boolean} showNames - default false\n * @property {Boolean} showOctaves - default false\n * @property {string} startPitch - default \"C3\"\n * @property {string} endPitch - default \"C5\"\n * @property {Boolean} hideable - default false -- add a way to hide and show keyboard\n * @property {Boolean} scrollable - default false -- add scroll bars to change octave\n */\nexport class Keyboard {\n    constructor() {\n        this.whiteKeyWidth = 23;\n        this._defaultWhiteKeyWidth = 23;\n        this._defaultBlackKeyWidth = 13;\n        this.scaleFactor = 1;\n        this.height = 120; // does nothing right now...\n        this.keyObjects = {};\n        this.svgObj = undefined;\n\n        this.markC = true;\n        this.showNames = false;\n        this.showOctaves = false;\n\n        this.startPitch = 'C3';\n        this.endPitch = 'C5';\n        this._startDNN = undefined;\n        this._endDNN = undefined;\n\n        this.hideable = false;\n        this.scrollable = false;\n        /**\n         * An object of callbacks on events.\n         *\n         * default:\n         *\n         * - click: this.clickHandler\n         *\n         * @name callbacks\n         * @type {Object}\n         * @memberof music21.keyboard.Keyboard#\n         */\n        this.callbacks = {\n            click: (keyClicked) => this.clickHandler(keyClicked),\n        };\n        //   more accurate offsets from http://www.mathpages.com/home/kmath043.htm\n        this.sharpOffsets = {\n            0: 14.3333,\n            1: 18.6666,\n            3: 13.25,\n            4: 16.25,\n            5: 19.75,\n        };\n    }\n    /**\n     * Redraws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#redrawSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    redrawSVG() {\n        if (this.svgObj === undefined) {\n            return undefined;\n        }\n        const oldSVG = this.svgObj;\n        const svgParent = oldSVG.parentNode;\n        this.keyObjects = {};\n        const svgDOM = this.createSVG();\n        svgParent.replaceChild(svgDOM, oldSVG);\n        return svgDOM;\n    }\n    /**\n     * Appends a keyboard to the `where` parameter\n     *\n     * @method music21.keyboard.Keyboard#appendKeyboard\n     * @param {JQueryDOMObject|DOMObject} [where]\n     * @returns {music21.keyboard.Keyboard} this\n     */\n    appendKeyboard(where) {\n        if (where === undefined) {\n            where = document.body;\n        } else if (where.jquery !== undefined) {\n            where = where[0];\n        }\n\n        let svgDOM = this.createSVG();\n\n        if (this.scrollable) {\n            svgDOM = this.wrapScrollable(svgDOM)[0];\n        }\n\n        if (this.hideable) {\n            // make it so the keyboard can be shown or hidden...\n            this.appendHideableKeyboard(where, svgDOM);\n        } else {\n            where.appendChild(svgDOM); // svg must use appendChild, not append.\n        }\n        return this;\n    }\n    /**\n     * Handle a click on a given SVG object\n     *\n     * @method music21.keyboard.Keyboard#clickHandler\n     * @param {DOMObject} keyRect - the dom object with the keyboard.\n     */\n    clickHandler(keyRect) {\n        // to-do : integrate with jazzHighlight...\n        const id = keyRect.id;\n        const thisKeyObject = this.keyObjects[id];\n        if (thisKeyObject === undefined) {\n            return; // not on keyboard;\n        }\n        const storedStyle = thisKeyObject.keyStyle;\n        let fillColor = '#c0c000';\n        if (thisKeyObject.keyClass === 'whitekey') {\n            fillColor = 'yellow';\n        }\n        keyRect.setAttribute('style', 'fill:' + fillColor + ';stroke:black');\n        miditools.loadSoundfont('acoustic_grand_piano', i => {\n            MIDI.noteOn(i.midiChannel, id, 100, 0);\n            MIDI.noteOff(i.midiChannel, id, 500);\n        });\n        setTimeout(() => {\n            keyRect.setAttribute('style', storedStyle);\n        }, 500);\n    }\n\n    /**\n     * Draws the SVG associated with this Keyboard\n     *\n     * @method music21.keyboard.Keyboard#createSVG\n     * @returns {DOMObject} new svgDOM\n     */\n    createSVG() {\n        // DNN = pitch.diatonicNoteNum;\n        // this._endDNN = final key note. I.e., the last note to be included, not the first note not included.\n        // 6, 57 gives a standard 88-key keyboard;\n        if (this._startDNN === undefined) {\n            if (typeof this.startPitch === 'string') {\n                const tempP = new pitch.Pitch(this.startPitch);\n                this._startDNN = tempP.diatonicNoteNum;\n            } else {\n                this._startDNN = this.startPitch;\n            }\n        }\n\n        if (this._endDNN === undefined) {\n            if (typeof this.endPitch === 'string') {\n                const tempP = new pitch.Pitch(this.endPitch);\n                this._endDNN = tempP.diatonicNoteNum;\n            } else {\n                this._endDNN = this.endPitch;\n            }\n        }\n\n        let currentIndex = (this._startDNN - 1) % 7; // C = 0\n        const keyboardDiatonicLength = 1 + this._endDNN - this._startDNN;\n        const totalWidth\n            = this.whiteKeyWidth * this.scaleFactor * keyboardDiatonicLength;\n        const height = 120 * this.scaleFactor;\n        const heightString = height.toString() + 'px';\n\n        const svgDOM = common.makeSVGright('svg', {\n            'xml:space': 'preserve',\n            height: heightString,\n            width: totalWidth.toString() + 'px',\n            class: 'keyboardSVG',\n        });\n        const movingPitch = new pitch.Pitch('C4');\n        const blackKeys = [];\n        const thisKeyboardObject = this;\n\n        for (let wki = 0; wki < keyboardDiatonicLength; wki++) {\n            movingPitch.diatonicNoteNum = this._startDNN + wki;\n            const wk = new keyboard.WhiteKey();\n            wk.id = movingPitch.midi;\n            wk.parent = this;\n            this.keyObjects[movingPitch.midi] = wk;\n            wk.scaleFactor = this.scaleFactor;\n            wk.width = this.whiteKeyWidth;\n            wk.callbacks.click = function whitekeyCallbacksClick() {\n                thisKeyboardObject.callbacks.click(this);\n            };\n\n            const wkSVG = wk.makeKey(\n                this.whiteKeyWidth * this.scaleFactor * wki\n            );\n            svgDOM.appendChild(wkSVG);\n\n            if (\n                (currentIndex === 0\n                    || currentIndex === 1\n                    || currentIndex === 3\n                    || currentIndex === 4\n                    || currentIndex === 5)\n                && wki !== keyboardDiatonicLength - 1\n            ) {\n                // create but do not append blackkey to the right of whitekey\n                const bk = new keyboard.BlackKey();\n                bk.id = movingPitch.midi + 1;\n                this.keyObjects[movingPitch.midi + 1] = bk;\n                bk.parent = this;\n\n                bk.scaleFactor = this.scaleFactor;\n                bk.width\n                    = this._defaultBlackKeyWidth\n                    * this.whiteKeyWidth\n                    / this._defaultWhiteKeyWidth;\n                bk.callbacks.click = function blackKeyClicksCallback() {\n                    thisKeyboardObject.callbacks.click(this);\n                };\n\n                let offsetFromWhiteKey = this.sharpOffsets[currentIndex];\n                offsetFromWhiteKey\n                    *= this.whiteKeyWidth\n                    / this._defaultWhiteKeyWidth\n                    * this.scaleFactor;\n                const bkSVG = bk.makeKey(\n                    this.whiteKeyWidth * this.scaleFactor * wki\n                        + offsetFromWhiteKey\n                );\n                blackKeys.push(bkSVG);\n            }\n            currentIndex += 1;\n            currentIndex %= 7;\n        }\n        // append blackkeys later since they overlap white keys;\n        for (let bki = 0; bki < blackKeys.length; bki++) {\n            svgDOM.appendChild(blackKeys[bki]);\n        }\n\n        this.svgObj = svgDOM;\n        if (this.markC) {\n            this.markMiddleC();\n        }\n        if (this.showNames) {\n            this.markNoteNames(this.showOctaves);\n        }\n\n        return svgDOM;\n    }\n\n    /**\n     * Puts a circle on middle c.\n     *\n     * @method music21.keyboard.Keyboard#markMiddleC\n     * @param {string} [strokeColor='red']\n     */\n    markMiddleC(strokeColor) {\n        const midC = this.keyObjects[60];\n        if (midC !== undefined) {\n            midC.addCircle('red');\n        }\n    }\n    /**\n     * Puts note names on every white key.\n     *\n     * @method music21.keyboard.Keyboard#markNoteNames\n     * @param {Boolean} [labelOctaves=false]\n     */\n    markNoteNames(labelOctaves) {\n        this.removeNoteNames(); // in case...\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.addNoteName(labelOctaves);\n            }\n        }\n    }\n\n    /**\n     * Remove note names on the keys, if they exist\n     *\n     * @method music21.keyboard.Keyboard#removeNoteNames\n     */\n    removeNoteNames() {\n        for (const midi in this.keyObjects) {\n            if ({}.hasOwnProperty.call(this.keyObjects, midi)) {\n                const keyObj = this.keyObjects[midi];\n                keyObj.removeNoteName();\n            }\n        }\n    }\n\n    /**\n     * Wraps the SVG object inside a scrollable set of buttons\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * scrollable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#wrapScrollable\n     * @param {DOMObject} svgDOM\n     * @returns {JQueryDOMObject}\n     */\n    wrapScrollable(svgDOM) {\n        const $wrapper = $(\n            \"<div class='keyboardScrollableWrapper'></div>\"\n        ).css({\n            display: 'inline-block',\n        });\n        const $bDown = $(\"<button class='keyboardOctaveDown'>&lt;&lt;</button>\")\n            .css({\n                'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n            })\n            .bind('click', () => {\n                miditools.transposeOctave -= 1;\n                this._startDNN -= 7;\n                this._endDNN -= 7;\n                this.redrawSVG();\n            });\n        const $bUp = $(\"<button class='keyboardOctaveUp'>&gt;&gt;</button>\")\n            .css({\n                'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px',\n            })\n            .bind('click', () => {\n                miditools.transposeOctave += 1;\n                this._startDNN += 7;\n                this._endDNN += 7;\n                this.redrawSVG();\n            });\n        const $kWrapper = $(\n            \"<div style='display:inline-block; vertical-align: middle' class='keyboardScrollableInnerDiv'></div>\"\n        );\n        $kWrapper[0].appendChild(svgDOM);\n        $wrapper.append($bDown);\n        $wrapper.append($kWrapper);\n        $wrapper.append($bUp);\n        return $wrapper;\n    }\n    /**\n     * Puts a hideable keyboard inside a Div with the proper controls.\n     *\n     * Do not call this directly, just use createSVG after changing the\n     * hideable property on the keyboard to True.\n     *\n     * @method music21.keyboard.Keyboard#appendHideableKeyboard\n     * @param {DOMObject} where\n     * @param {DOMObject} keyboardSVG\n     */\n    appendHideableKeyboard(where, keyboardSVG) {\n        const $container = $(\"<div class='keyboardHideableContainer'/>\");\n        const $bInside = $(\"<div class='keyboardToggleInside'>↥</div>\").css({\n            display: 'inline-block',\n            'padding-top': '40px',\n            'font-size': '40px',\n        });\n        const $b = $(\"<div class='keyboardToggleOutside'/>\").css({\n            display: 'inline-block',\n            'vertical-align': 'top',\n            background: 'white',\n        });\n        $b.append($bInside);\n        $b.data(\n            'defaultDisplay',\n            $container.find('.keyboardSVG').css('display')\n        );\n        $b.data('state', 'down');\n        $b.click(keyboard.triggerToggleShow);\n        const $explain = $(\n            \"<div class='keyboardExplain'>Show keyboard</div>\"\n        ).css({\n            display: 'none',\n            'background-color': 'white',\n            padding: '10px 10px 10px 10px',\n            'font-size': '12pt',\n        });\n        $b.append($explain);\n        $container.append($b);\n        $container[0].appendChild(keyboardSVG); // svg must use appendChild, not append.\n        $(where).append($container);\n        return $container;\n    }\n}\n\n/**\n * triggerToggleShow -- event for keyboard is shown or hidden.\n *\n * @function music21.keyboard.triggerToggleShow\n * @param {Event} e\n */\nkeyboard.triggerToggleShow = function triggerToggleShow(e) {\n    // \"this\" refers to the object clicked\n    // e -- event is not used.\n    const $t = $(this);\n    const state = $t.data('state');\n    const $parent = $t.parent();\n    let $k = $parent.find('.keyboardScrollableWrapper');\n    if ($k.length === 0) {\n        // not scrollable\n        $k = $parent.find('.keyboardSVG');\n    }\n    const $bInside = $t.find('.keyboardToggleInside');\n    const $explain = $parent.find('.keyboardExplain');\n    if (state === 'up') {\n        $bInside.text('↥');\n        $bInside.css('padding-top', '40px');\n        $explain.css('display', 'none');\n        let dd = $t.data('defaultDisplay');\n        if (dd === undefined) {\n            dd = 'inline';\n        }\n        $k.css('display', dd);\n        $t.data('state', 'down');\n    } else {\n        $k.css('display', 'none');\n        $explain.css('display', 'inline-block');\n        $bInside.text('↧');\n        $bInside.css('padding-top', '10px');\n        $t.data('state', 'up');\n    }\n};\n\n/**\n * highlight the keyboard stored in \"this\" appropriately\n *\n * @function music21.keyboard.jazzHighlight\n * @param {Event} e\n * @example\n * var midiCallbacksPlay = [music21.miditools.makeChords,\n *                          music21.miditools.sendToMIDIjs,\n *                          music21.keyboard.jazzHighlight.bind(k)];\n */\nkeyboard.jazzHighlight = function jazzHighlight(e) {\n    // e is a miditools.event object -- call with this = keyboard.Keyboard object via bind...\n    if (e === undefined) {\n        return;\n    }\n    if (e.noteOn) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            let intensityRGB = '';\n            let normalizedVelocity = (e.velocity + 25) / 127;\n            if (normalizedVelocity > 1) {\n                normalizedVelocity = 1.0;\n            }\n\n            if (keyObj.keyClass === 'whitekey') {\n                const intensity = normalizedVelocity.toString();\n                intensityRGB = 'rgba(255, 255, 0, ' + intensity + ')';\n            } else {\n                const intensity = Math.floor(\n                    normalizedVelocity * 255\n                ).toString();\n                intensityRGB = 'rgb(' + intensity + ',' + intensity + ',0)';\n                // console.log(intensityRGB);\n            }\n            svgObj.setAttribute(\n                'style',\n                'fill:' + intensityRGB + ';stroke:black'\n            );\n        }\n    } else if (e.noteOff) {\n        const midiNote = e.midiNote;\n        if (this.keyObjects[midiNote] !== undefined) {\n            const keyObj = this.keyObjects[midiNote];\n            const svgObj = keyObj.svgObj;\n            svgObj.setAttribute('style', keyObj.keyStyle);\n        }\n    }\n}; // call this with a bind(keyboard.Keyboard object)...\n\nkeyboard.Keyboard = Keyboard;\n","// future -- rewrite of Score and Part to Page, System, SystemPart\n// not currently used\n// import * as $ from 'jquery';\n//\n// import { base } from './base.js';\n// import { renderOptions } from './renderOptions.js';\nimport { stream } from './stream.js';\n// import { common } from './common.js';\n/**\n * \n * THIS IS CURRENTLY UNUSUED\n * Does not work yet, so not documented\n *\n */\nexport const layout = {};\nlayout.makeLayoutFromScore = function makeLayoutFromScore(\n    score,\n    containerWidth\n) {\n    /*\n     * Divide a part up into systems and fix the measure\n     * widths so that they are all even.\n     *\n     * Note that this is done on the part level even though\n     * the measure widths need to be consistent across parts.\n     *\n     * This is possible because the system is deterministic and\n     * will come to the same result for each part.  Opportunity\n     * for making more efficient through this...\n     */\n    // var systemHeight = score.systemHeight; /* part.show() called... */\n    // var systemPadding = score.systemPadding;\n    const parts = score.parts;\n    // console.log(parts);\n    const numParts = parts.length;\n    const partZero = parts.get(0);\n    const numMeasures = partZero.getElementsByClass('Measure').length;\n\n    const measureWidths = partZero.getMeasureWidths();\n    const maxSystemWidth\n        = containerWidth || score.maxSystemWidth; /* of course fix! */\n\n    const layoutScore = new layout.LayoutScore();\n    const currentPage = new layout.Page(); // to-do multiple pages...\n    currentPage.measureStart = 1;\n    currentPage.measureEnd = numMeasures;\n\n    layoutScore.insert(0, currentPage);\n\n    let currentSystem = new layout.System();\n    let currentSystemNumber = 1;\n    currentSystem.measureStart = 1;\n    let currentStaves = [];\n\n    const staffMaker = (staffHolder, numParts, measureStart) => {\n        for (let pNum = 0; pNum < numParts; pNum++) {\n            const staff = new layout.Staff();\n            staff.measureStart = measureStart;\n            staff.staffNumber = pNum + 1;\n            staffHolder.push(staff);\n        }\n    };\n    staffMaker(currentStaves, numParts, 1);\n\n    const systemCurrentWidths = [];\n    const systemBreakIndexes = [];\n    let lastSystemBreak = 0; /* needed to ensure each line has at least one measure */\n    const startLeft = 20; /* TODO: make it obtained elsewhere */\n    let currentLeft = startLeft;\n    // let currentSystemTop = 0;\n    // var partTopOffsets = [];\n    // const ignoreSystemsInCalculatingScoreHeight = true;\n    // const systemHeight = score.estimateStreamHeight(ignoreSystemsInCalculatingScoreHeight);\n\n    for (let i = 0; i < measureWidths.length; i++) {\n        const currentRight = currentLeft + measureWidths[i];\n        /* console.log(\"left: \" + currentLeft + \" ; right: \" + currentRight + \" ; m: \" + i); */\n        if (currentRight > maxSystemWidth && lastSystemBreak !== i) {\n            // new system...\n            for (let j = 0; j < currentStaves.length; j++) {\n                currentStaves.measureEnd = i;\n                currentSystem.insert(0, currentStaves[j]);\n            }\n            currentStaves = [];\n            staffMaker(currentStaves, numParts, i + 1);\n            // currentSystemTop += systemHeight;\n            currentSystem.measureEnd = i;\n            currentPage.insert(0, currentSystem);\n            currentSystemNumber += 1;\n            currentSystem = new layout.System();\n            currentSystem.measureStart = i + 1;\n            currentSystem.systemNumber = currentSystemNumber;\n\n            systemBreakIndexes.push(i - 1);\n            systemCurrentWidths.push(currentLeft);\n            console.log(\n                'setting new width at ' + currentLeft + ' measure ' + i\n            );\n            currentLeft = startLeft + measureWidths[i];\n            lastSystemBreak = i;\n        } else {\n            currentLeft = currentRight;\n        }\n        for (let pNum = 0; pNum < currentStaves.length; pNum++) {\n            currentStaves[pNum].append(parts[pNum].get(i));\n        }\n    }\n    for (let j = 0; j < currentStaves.length; j++) {\n        currentStaves.measureEnd = measureWidths.length - 1;\n        currentSystem.insert(0, currentStaves[j]);\n    }\n    currentPage.insert(0, currentSystem);\n    return layoutScore;\n};\n\nexport class LayoutScore extends stream.Score {\n    constructor() {\n        super();\n        this.scoreLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = 0;\n        this.left = 0;\n    }\n    get pages() {\n        return this.getElementsByClass('Page');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n    // /**\n    //  * return a tuple of (top, bottom) for a staff, specified by a given pageId,\n    //  * systemId, and staffId in PIXELS.\n    //\n    //  * @param pageId\n    //  * @param systemId\n    //  * @param staffId\n    //  * @param units -- \"pixels\" or \"tenths\" (not supported)\n    //  */\n    //\n    // getPositionForStaff(pageId, systemId, staffId, units) {\n    //     units = units || 'pixels';\n    // }\n}\nlayout.LayoutScore = LayoutScore;\n\n/**\n * All music must currently be on page 1.\n */\nexport class Page extends stream.Score {\n    constructor() {\n        super();\n        this.pageNumber = 1;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this.systemStart = undefined;\n        this.systemEnd = undefined;\n        this.pageLayout = undefined;\n    }\n    get systems() {\n        return this.getElementsByClass('System');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.Page = Page;\n\nexport class System extends stream.Score {\n    constructor() {\n        super();\n        this.systemNumber = 1;\n        this.systemLayout = undefined;\n        this.measureStart = undefined;\n        this.measureEnd = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.top = undefined;\n        this.left = undefined;\n    }\n    get staves() {\n        return this.getElementsByClass('Staff');\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\nlayout.System = System;\n\nexport class Staff extends stream.Part {\n    constructor() {\n        super();\n        this.staffNumber = 1;\n        this.optimized = 0;\n        this.top = undefined;\n        this.left = undefined;\n        this._width = undefined;\n        this.height = undefined;\n        this.inheritedHeight = undefined;\n        this.staffLayout = undefined;\n    }\n    get width() {\n        if (this._width) {\n            return this._width;\n        } else if (this.activeSite) {\n            return this.activeSite.width;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nlayout.Staff = Staff;\n","import * as m21ToXml from './musicxml/m21ToXml.js';\nimport * as xmlToM21 from './musicxml/xmlToM21.js';\n\nexport { m21ToXml, xmlToM21 };\n\nexport const musicxml = {\n    m21ToXml,\n    xmlToM21,\n};\n\nexport default musicxml;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/roman -- roman.RomanNumberal -- Chord subclass\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport { Music21Exception } from './exceptions21.js';\n\nimport { chord } from './chord.js';\nimport { common } from './common.js';\n// import { debug } from './debug.js';\nimport { figuredBass } from './figuredBass.js';\nimport { harmony } from './harmony.js';\nimport { interval } from './interval.js';\nimport { key } from './key.js';\nimport { pitch } from './pitch.js';\nimport { scale } from './scale.js';\n/**\n * Roman numeral module. See {@link music21.roman} namespace\n *\n * @exports music21/roman\n */\n/**\n * music21.roman -- namespace for dealing with RomanNumeral analysis.\n *\n * @namespace music21.roman\n * @memberof music21\n * @requires music21/chord\n * @requires music21/common\n * @requires music21/figuredBass\n * @requires music21/harmony\n * @requires music21/key\n * @requires music21/pitch\n * @requires music21/interval\n */\nexport const roman = {};\n\nroman.figureShorthands = {\n    '53': '',\n    '3': '',\n    '63': '6',\n    '753': '7',\n    '75': '7', // controversial perhaps\n    '73': '7', // controversial perhaps\n    '9753': '9',\n    '975': '9', // controversial perhaps\n    '953': '9', // controversial perhaps\n    '97': '9', // controversial perhaps\n    '95': '9', // controversial perhaps\n    '93': '9', // controversial perhaps\n    '653': '65',\n    '6b53': '6b5',\n    '643': '43',\n    '642': '42',\n    bb7b5b3: 'o7',\n    bb7b53: 'o7',\n    // '6b5bb3': 'o65',\n    b7b5b3: '/o7',\n};\n\n// noinspection SpellCheckingInspection\nroman.functionalityScores = {\n    I: 100,\n    i: 90,\n    V7: 80,\n    V: 70,\n    V65: 68,\n    I6: 65,\n    V6: 63,\n    V43: 61,\n    I64: 60,\n    IV: 59,\n    i6: 58,\n    viio7: 57,\n    V42: 55,\n    viio65: 53,\n    viio6: 52,\n    '#viio65': 51,\n    ii: 50,\n    '#viio6': 49,\n    ii65: 48,\n    ii43: 47,\n    ii42: 46,\n    IV6: 45,\n    ii6: 43,\n    VI: 42,\n    '#VI': 41,\n    vi: 40,\n    viio: 39,\n    '#viio': 39,\n    iio: 37, // common in Minor\n    iio42: 36,\n    bII6: 35, // Neapolitan\n    iio43: 32,\n    iio65: 31,\n    '#vio': 28,\n    '#vio6': 28,\n    III: 22,\n    v: 20,\n    VII: 19,\n    VII7: 18,\n    IV65: 17,\n    IV7: 16,\n    iii: 15,\n    iii6: 12,\n    vi6: 10,\n};\n\n/**\n * expandShortHand - expand a string of numbers into an array\n *\n * N.B. this is NOT where abbreviations get expanded\n *\n * @memberof music21.roman\n * @param  {string} shorthand string of a figure w/o roman to parse\n * @return {Array<string>}           array of shorthands\n */\n\nroman.expandShortHand = function expandShortHand(shorthand) {\n    shorthand = shorthand.replace('/', '');\n    if (shorthand.match(/[b-]$/)) {\n        shorthand += '3';\n    }\n    shorthand = shorthand.replace('11', 'x');\n    shorthand = shorthand.replace('13', 'y');\n    shorthand = shorthand.replace('15', 'z');\n    const rx = new RegExp('#*-*b*o*[1-9xyz]', 'g');\n    let shorthandGroups = [];\n    let match = rx.exec(shorthand);\n    while (match !== null) {\n        shorthandGroups.push(match[0]);\n        match = rx.exec(shorthand);\n    }\n    if (shorthandGroups.length === 1 && shorthandGroups[0].endsWith('3')) {\n        shorthandGroups = ['5', shorthandGroups[0]];\n    }\n    const shGroupOut = [];\n    for (let sh of shorthandGroups) {\n        sh = sh.replace('x', '11');\n        sh = sh.replace('y', '13');\n        sh = sh.replace('z', '15');\n        shGroupOut.push(sh);\n    }\n    return shGroupOut;\n};\n\n/**\n * correctSuffixForChordQuality - Correct a given inversionString suffix given a\n *     chord of various qualities.\n *\n * @memberof music21.roman\n * @param  {music21.chord.Chord} chordObj\n * @param  {string} inversionString a string like '6' to fix.\n * @return {string}           corrected inversionString\n  */\n\nroman.correctSuffixForChordQuality = function correctSuffixForChordQuality(\n    chordObj,\n    inversionString\n) {\n    const fifthType = chordObj.semitonesFromChordStep(5);\n    let qualityName = '';\n    if (fifthType === 6) {\n        qualityName = 'o';\n    } else if (fifthType === 8) {\n        qualityName = '+';\n    }\n\n    if (\n        inversionString !== undefined\n        && (inversionString.startsWith('o') || inversionString.startsWith('/o'))\n    ) {\n        if (qualityName === 'o') {\n            // don't call viio7, viioo7.\n            qualityName = '';\n        }\n    }\n\n    const seventhType = chordObj.semitonesFromChordStep(7);\n    if (seventhType !== undefined && fifthType === 6) {\n        // there is a seventh and this is a diminished 5\n        if (seventhType === 10 && qualityName === 'o') {\n            qualityName = '/o';\n        } else if (seventhType !== 9) {\n            // do something for very odd chords built on diminished triad.\n        }\n    }\n    return qualityName + inversionString;\n};\n\n/**\n * maps an index number to a roman numeral in lowercase\n *\n * @memberof music21.roman\n * @example\n * music21.roman.romanToNumber[4]\n * // 'iv'\n */\nroman.romanToNumber = [undefined, 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];\n\n/**\n * Represents a RomanNumeral.  By default, capital Roman Numerals are\n * major chords; lowercase are minor.\n *\n * @class RomanNumeral\n * @memberof music21.roman\n * @extends music21.chord.Chord\n * @param {string} figure - the roman numeral as a string, e.g., 'IV', 'viio', 'V7'\n * @param {string|music21.key.Key} [keyStr='C']\n * @property {Array<music21.pitch.Pitch>} scale - (readonly) returns the scale associated with the roman numeral\n * @property {music21.key.Key} key - the key associated with the RomanNumeral (not allowed to be undefined yet)\n * @property {string} figure - the figure as passed in\n * @property {string} degreeName - the name associated with the scale degree, such as \"mediant\" etc., scale 7 will be \"leading tone\" or \"subtonic\" appropriately\n * @property {int} scaleDegree\n * @property {string|undefined} impliedQuality - \"major\", \"minor\", \"diminished\", \"augmented\"\n * @property {music21.roman.RomanNumeral|undefined} secondaryRomanNumeral\n * @property {music21.key.Key|undefined} secondaryRomanNumeralKey\n * @property {string|undefined} frontAlterationString\n * @property {music21.interval.Interval|undefined} frontAlterationTransposeInterval\n * @property {music21.pitch.Accidental|undefined} frontAlterationAccidental\n * @property {string|undefined} romanNumeralAlone\n * @property {scale.Scale|boolean|undefined} impliedScale\n * @property {music21.interval.Interval|undefined} scaleOffset\n * @property {Array<music21.pitch.Pitch>} pitches - RomanNumerals are Chord objects, so .pitches will work for them also.\n */\nexport class RomanNumeral extends harmony.Harmony {\n    constructor(figure='', keyStr, keywords) {\n        const params = { updatePitches: false, parseFigure: false };\n        common.merge(params, keywords);\n        super(figure, params);\n        this._parsingComplete = false;\n\n        // not yet used...\n        this.primaryFigure = undefined;\n        this.secondaryRomanNumeral = undefined;\n        this.secondaryRomanNumeralKey = undefined;\n\n        this.pivotChord = undefined;\n        this.scaleCardinality = 7;\n        this._figure = undefined;\n\n        this.caseMatters = true;\n        if (typeof figure === 'number') {\n            this.caseMatters = false;\n        }\n\n        this.scaleDegree = undefined;\n        this.frontAlterationString = undefined;\n        this.frontAlterationTransposeInterval = undefined;\n        this.frontAlterationAccidental = undefined;\n        this.romanNumeralAlone = undefined;\n\n        this.impliedQuality = undefined;\n        this.impliedScale = undefined;\n        this.scaleOffset = undefined;\n        this.useImpliedScale = false;\n        this.bracketedAlterations = [];\n        this.omittedSteps = [];\n        this.followsKeyChange = false;\n        this._functionalityScore = undefined;\n\n        /**\n         *\n         * @type {music21.key.Key|music21.scale.Scale|undefined}\n         * @private\n         */\n        this._scale = undefined; // the Key or Scale\n\n        this.figure = figure;\n        this.key = keyStr;\n\n        // to remove...\n        this.numbers = '';\n\n        if (figure !== '') {\n            this._parseFigure();\n            this._parsingComplete = true;\n            this._updatePitches();\n        }\n    }\n\n    stringInfo() {\n        return this.figure + ' in ' + this.key.stringInfo();\n    }    \n\n    _parseFigure() {\n        let workingFigure;\n        let useScale = this.impliedScale;\n        if (!this.useImpliedScale) {\n            useScale = this.key;\n        }\n        [workingFigure, useScale] = this._correctForSecondaryRomanNumeral(\n            useScale\n        );\n        \n        if (workingFigure === 'Cad64') {\n            if (useScale.mode === 'minor') {\n                workingFigure = 'i64';\n            } else {\n                workingFigure = 'I64';\n            }\n        }\n\n        this.primaryFigure = workingFigure;\n\n        workingFigure = this._parseOmittedSteps(workingFigure);\n        workingFigure = this._parseBracketedAlterations(workingFigure);\n        workingFigure = workingFigure.replace(/^N6/, 'bII6');\n        workingFigure = workingFigure.replace(/^N/, 'bII6');\n        workingFigure = this._parseFrontAlterations(workingFigure);\n        [workingFigure, useScale] = this._parseRNAloneAmidstAug6(\n            workingFigure,\n            useScale\n        );\n        workingFigure = this._setImpliedQualityFromString(workingFigure);\n\n        this._tempRoot = useScale.pitchFromDegree(this.scaleDegree);\n        this._fixMinorVIandVII(useScale);\n        const expandedFigure = roman.expandShortHand(workingFigure);\n        this.figuresNotationObj = new figuredBass.Notation(\n            expandedFigure.toString()\n        );\n\n        const numbersArr = workingFigure.match(/\\d+/);\n        if (numbersArr != null) {\n            // noinspection JSUnusedAssignment\n            workingFigure = workingFigure.replace(/\\d+/, '');\n            this.numbers = parseInt(numbersArr[0]);\n        }\n    }\n\n    _parseFrontAlterations(workingFigure) {\n        let frontAlterationString = '';\n        let frontAlterationTransposeInterval;\n        let frontAlterationAccidental;\n        const _alterationRegex = new RegExp('^(b+|-+|#+)');\n        const match = _alterationRegex.exec(workingFigure);\n        if (match != null) {\n            const group = match[1];\n            let alteration = group.length;\n            if (group[0] === 'b' || group[0] === '-') {\n                alteration *= -1;\n            }\n            frontAlterationTransposeInterval = interval.intervalFromGenericAndChromatic(\n                1,\n                alteration\n            );\n            frontAlterationAccidental = new pitch.Accidental(alteration);\n            frontAlterationString = group;\n            workingFigure = workingFigure.replace(_alterationRegex, '');\n        }\n        this.frontAlterationString = frontAlterationString;\n        this.frontAlterationTransposeInterval = frontAlterationTransposeInterval;\n        this.frontAlterationAccidental = frontAlterationAccidental;\n        return workingFigure;\n    }\n\n    _correctBracketedPitches() {\n        for (const innerAlteration of this.bracketedAlterations) {\n            const [alterNotation, chordStep] = innerAlteration;\n            const alterPitch = this.getChordStep(chordStep);\n            if (alterPitch === undefined) {\n                continue;\n            }\n            const newAccidental = new pitch.Accidental(alterNotation);\n            if (alterPitch.accidental === undefined) {\n                alterPitch.accidental = newAccidental;\n            } else {\n                alterPitch.accidental.set(\n                    alterPitch.accidental.alter + newAccidental.alter\n                );\n            }\n        }\n    }\n\n    _setImpliedQualityFromString(workingFigure) {\n        let impliedQuality = '';\n        if (workingFigure.startsWith('o')) {\n            impliedQuality = 'diminished';\n            workingFigure = workingFigure.replace(/^o/, '');\n        } else if (workingFigure.startsWith('/o')) {\n            impliedQuality = 'half-diminished';\n            workingFigure = workingFigure.replace(/^\\/o/, '');\n        } else if (workingFigure.startsWith('+')) {\n            impliedQuality = 'augmented';\n            workingFigure = workingFigure.replace(/^\\+/, '');\n        } else if (workingFigure.endsWith('d7')) {\n            impliedQuality = 'dominant-seventh';\n            workingFigure = workingFigure.replace(/d7$/, '7');\n        } else if (\n            this.caseMatters\n            && this.romanNumeralAlone.toUpperCase() === this.romanNumeralAlone\n        ) {\n            impliedQuality = 'major';\n        } else if (\n            this.caseMatters\n            && this.romanNumeralAlone.toLowerCase() === this.romanNumeralAlone\n        ) {\n            impliedQuality = 'minor';\n        }\n        this.impliedQuality = impliedQuality;\n        return workingFigure;\n    }\n\n    _fixMinorVIandVII(useScale) {\n        if (useScale.mode !== 'minor') {\n            return;\n        }\n        if (!this.caseMatters) {\n            return;\n        }\n        if (this.scaleDegree !== 6 && this.scaleDegree !== 7) {\n            return;\n        }\n        if (\n            !['minor', 'diminished', 'half-diminished'].includes(\n                this.impliedQuality\n            )\n        ) {\n            return;\n        }\n\n        const fati = this.frontAlterationTransposeInterval;\n        if (fati !== undefined) {\n            const newFati = interval.add([fati, new interval.Interval('A1')]);\n            this.frontAlterationTransposeInterval = newFati;\n            this.frontAlterationAccidental.alter\n                = this.frontAlterationAccidental.alter + 1;\n        } else {\n            this.frontAlterationTransposeInterval = new interval.Interval('A1');\n            this.frontAlterationAccidental = new pitch.Accidental(1);\n        }\n\n        this._tempRoot = this.frontAlterationTransposeInterval.transposePitch(\n            this._tempRoot\n        );\n    }\n\n    _parseRNAloneAmidstAug6(workingFigure, useScale) {\n        let romanNumeralAlone = '';\n        const _romanNumeralAloneRegex = new RegExp(\n            '(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2}|N)'\n        );\n        const _augmentedSixthRegex = new RegExp('(It|Ger|Fr|Sw)');\n        const rm = _romanNumeralAloneRegex.exec(workingFigure);\n        const a6match = _augmentedSixthRegex.exec(workingFigure);\n        if (rm === null && a6match === null) {\n            throw new Music21Exception(\n                `No roman numeral found in ${workingFigure}`\n            );\n        }\n        if (a6match !== null) {\n            if (useScale.mode === 'major') {\n                useScale = new key.Key(useScale.tonic.name, 'minor');\n                this.impliedScale = useScale;\n                this.useImpliedScale = true;\n            }\n            romanNumeralAlone = a6match[1];\n            if (['It', 'Ger'].includes(romanNumeralAlone)) {\n                this.scaleDegree = 4;\n            } else {\n                this.scaleDegree = 2;\n            }\n            workingFigure = workingFigure.replace(_augmentedSixthRegex, '');\n            this.romanNumeralAlone = romanNumeralAlone;\n            if (romanNumeralAlone !== 'Fr') {\n                this.bracketedAlterations.push(['#', 1]);\n            }\n            if (romanNumeralAlone === 'Fr' || romanNumeralAlone === 'Sw') {\n                this.bracketedAlterations.push(['#', 3]);\n            }\n        } else {\n            romanNumeralAlone = rm[1];\n            this.scaleDegree = common.fromRoman(romanNumeralAlone);\n            workingFigure = workingFigure.replace(_romanNumeralAloneRegex, '');\n            this.romanNumeralAlone = romanNumeralAlone;\n        }\n        return [workingFigure, useScale];\n    }\n\n    /**\n     * get romanNumeral - return either romanNumeralAlone (II) or with frontAlterationAccidental (#II)\n     *\n     * @return {string}  new romanNumeral;\n     */\n\n    get romanNumeral() {\n        if (this.frontAlterationAccidental === undefined) {\n            return this.romanNumeralAlone;\n        } else {\n            return (\n                this.frontAlterationAccidental.modifier + this.romanNumeralAlone\n            );\n        }\n    }\n\n    get scale() {\n        if (this._scale !== undefined) {\n            return this._scale;\n        } else {\n            this._scale = this.key.getScale();\n            return this._scale;\n        }\n    }\n    get key() {\n        return this._scale;\n    }\n    set key(keyOrScale) {\n        if (typeof keyOrScale === 'string') {\n            this._scale = new key.Key(keyOrScale);\n        } else if (typeof keyOrScale === 'undefined') {\n            this._scale = new key.Key('C');\n        } else {\n            this._scale = keyOrScale;\n        }\n        if (keyOrScale === undefined) {\n            this.useImpliedScale = true;\n            this.impliedScale = new scale.MajorScale('C');\n        } else {\n            this.useImpliedScale = false;\n            this.impliedScale = false;\n        }\n        if (this._parsingComplete) {\n            this._updatePitches();\n        }\n    }\n\n    get figure() {\n        return this._figure;\n    }\n    set figure(newFigure) {\n        this._figure = newFigure;\n        if (this._parsingComplete) {\n            this._parseFigure();\n            this._updatePitches();\n        }\n    }\n\n    get figureAndKey() {\n        let tonicName = this.key.tonic.name;\n        let mode = '';\n        if (this.key.mode !== undefined) {\n            mode = ' ' + this.key.mode;\n        }\n\n        if (mode === ' minor') {\n            tonicName = tonicName.toLowerCase();\n        } else if (mode === ' major') {\n            tonicName = tonicName.toUpperCase();\n        }\n        return this.figure + ' in ' + tonicName + mode;\n    }\n\n    get degreeName() {\n        if (this.scaleDegree < 7) {\n            return [\n                undefined,\n                'Tonic',\n                'Supertonic',\n                'Mediant',\n                'Subdominant',\n                'Dominant',\n                'Submediant',\n            ][this.scaleDegree];\n        } else {\n            const tonicPitch = this.key.tonic;\n            let diffRootToTonic = (tonicPitch.ps - this.root().ps) % 12;\n            if (diffRootToTonic < 0) {\n                diffRootToTonic += 12;\n            }\n            if (diffRootToTonic === 1) {\n                return 'Leading-tone';\n            } else {\n                return 'Subtonic';\n            }\n        }\n    }\n\n    /**\n     * Update the .pitches array.  Called at instantiation, but not automatically afterwards.\n     *\n     */\n    _updatePitches() {\n        let useScale;\n        if (this.secondaryRomanNumeralKey !== undefined) {\n            useScale = this.secondaryRomanNumeralKey;\n        } else if (!this.useImpliedScale) {\n            useScale = this.key;\n        } else {\n            useScale = this.impliedScale;\n        }\n\n        this.scaleCardinality = 7; // simple speedup;\n        const bassScaleDegree = this.bassScaleDegreeFromNotation(\n            this.figuresNotationObj\n        );\n        const bassPitch = useScale.pitchFromDegree(\n            bassScaleDegree,\n            'ascending'\n        );\n        const pitches = [bassPitch];\n        let lastPitch = bassPitch;\n        const numberNotes = this.figuresNotationObj.numbers.length;\n\n        for (let j = 0; j < numberNotes; j++) {\n            const i = numberNotes - j - 1;\n            const thisScaleDegree\n                = bassScaleDegree + this.figuresNotationObj.numbers[i] - 1;\n            const newPitch = useScale.pitchFromDegree(\n                thisScaleDegree,\n                'ascending'\n            );\n            const pitchName = this.figuresNotationObj.modifiers[\n                i\n            ].modifyPitchName(newPitch.name);\n            const newNewPitch = new pitch.Pitch(pitchName);\n            newNewPitch.octave = newPitch.octave;\n            if (newNewPitch.ps < lastPitch.ps) {\n                newNewPitch.octave += 1;\n            }\n            pitches.push(newNewPitch);\n            lastPitch = newNewPitch;\n        }\n        if (this.frontAlterationTransposeInterval !== undefined) {\n            const newPitches = [];\n            for (const thisPitch of pitches) {\n                const newPitch = this.frontAlterationTransposeInterval.transposePitch(\n                    thisPitch\n                );\n                newPitches.push(newPitch);\n            }\n            this.pitches = newPitches;\n        } else {\n            this.pitches = pitches;\n        }\n\n        this._matchAccidentalsToQuality(this.impliedQuality);\n\n        this.scaleOffset = this.frontAlterationTransposeInterval;\n\n        if (this.omittedSteps.length) {\n            const omittedPitches = [];\n            for (const thisCS of this.omittedSteps) {\n                const p = this.getChordStep(thisCS);\n                if (p !== undefined) {\n                    omittedPitches.push(p.name);\n                }\n            }\n            const newPitches = [];\n            for (const thisPitch of pitches) {\n                if (!omittedPitches.includes(thisPitch.name)) {\n                    newPitches.push(thisPitch);\n                }\n            }\n            this.pitches = newPitches;\n            // do something...\n        }\n        this._correctBracketedPitches();\n    }\n\n    bassScaleDegreeFromNotation(notationObject) {\n        const c = new pitch.Pitch('C3');\n        const cDNN = c.diatonicNoteNum; // always 22\n        const pitches = [c];\n        for (const i of notationObject.numbers) {\n            const distanceToMove = i - 1;\n            const newDiatonicNumber = cDNN + distanceToMove;\n            const [newStep, newOctave] = interval.convertDiatonicNumberToStep(\n                newDiatonicNumber\n            );\n            const newPitch = new pitch.Pitch('C3');\n            newPitch.step = newStep;\n            newPitch.octave = newOctave;\n            pitches.push(newPitch);\n        }\n        const tempChord = new chord.Chord(pitches);\n        const rootDNN = tempChord.root().diatonicNoteNum;\n        const staffDistanceFromBassToRoot = rootDNN - cDNN;\n        let bassSD = common.posMod(\n            this.scaleDegree - staffDistanceFromBassToRoot,\n            7\n        );\n        if (bassSD === 0) {\n            bassSD = 7;\n        }\n        return bassSD;\n    }\n\n    _matchAccidentalsToQuality(impliedQuality) {\n        const correctSemitones = this._findSemitoneSizeForQuality(\n            impliedQuality\n        );\n        const chordStepsToExamine = [3, 5, 7];\n        for (let i = 0; i < chordStepsToExamine.length; i++) {\n            const thisChordStep = chordStepsToExamine[i];\n            const thisCorrect = correctSemitones[i];\n            const thisSemis = this.semitonesFromChordStep(thisChordStep);\n            if (thisCorrect === undefined) {\n                continue;\n            }\n            if (thisSemis === undefined) {\n                continue;\n            }\n            if (thisSemis === thisCorrect) {\n                continue;\n            }\n\n            let correctedSemis = thisCorrect - thisSemis;\n            if (correctedSemis >= 6) {\n                correctedSemis = -1 * (12 - correctedSemis);\n            } else if (correctedSemis <= -6) {\n                correctedSemis += 12;\n            }\n\n            const faultyPitch = this.getChordStep(thisChordStep);\n            // TODO: check for faultyPitch is undefined\n\n            if (faultyPitch.accidental === undefined) {\n                faultyPitch.accidental = new pitch.Accidental(correctedSemis);\n            } else {\n                const acc = faultyPitch.accidental;\n                correctedSemis += acc.alter;\n                if (correctedSemis >= 6) {\n                    correctedSemis = -1 * (12 - correctedSemis);\n                } else if (correctedSemis <= -6) {\n                    correctedSemis += 12;\n                }\n                acc.set(correctedSemis);\n            }\n        }\n    }\n\n    _correctForSecondaryRomanNumeral(useScale, figure) {\n        if (figure === undefined) {\n            figure = this._figure;\n        }\n        let workingFigure = figure;\n        const rx = new RegExp('(.*?)/([#a-np-zA-NP-Z].*)');\n        const match = rx.exec(figure);\n        if (match !== null) {\n            const primaryFigure = match[1];\n            const secondaryFigure = match[2];\n            const secondaryRomanNumeral = new RomanNumeral(\n                secondaryFigure,\n                useScale,\n                this.caseMatters\n            );\n            this.secondaryRomanNumeral = secondaryRomanNumeral;\n            let secondaryMode;\n            if (secondaryRomanNumeral.quality === 'minor') {\n                secondaryMode = 'minor';\n            } else if (secondaryRomanNumeral.quality === 'major') {\n                secondaryMode = 'minor';\n            } else if (secondaryRomanNumeral.semitonesFromChordStep(3) === 3) {\n                secondaryMode = 'minor';\n            } else {\n                secondaryMode = 'major';\n            }\n            this.secondaryRomanNumeralKey = new key.Key(\n                secondaryRomanNumeral.root().name,\n                secondaryMode\n            );\n            useScale = this.secondaryRomanNumeralKey;\n            workingFigure = primaryFigure;\n        }\n        return [workingFigure, useScale];\n    }\n\n    _parseOmittedSteps(workingFigure) {\n        const omittedSteps = [];\n        const rx = new RegExp(/\\[no(\\d+)]s*/);\n        let match = rx.exec(workingFigure);\n        while (match !== null) {\n            let thisStep = match[1];\n            thisStep = parseInt(thisStep);\n            thisStep = thisStep % 7 || 7;\n            omittedSteps.push(thisStep);\n            workingFigure = workingFigure.replace(rx, '');\n            match = rx.exec(workingFigure);\n        }\n        this.omittedSteps = omittedSteps;\n        return workingFigure;\n    }\n\n    _parseBracketedAlterations(workingFigure) {\n        const bracketedAlterations = this.bracketedAlterations;\n        const rx = new RegExp(/\\[(b+|-+|#+)(\\d+)]/);\n        let match = rx.exec(workingFigure);\n        while (match !== null) {\n            const matchAlteration = match[1];\n            const matchDegree = parseInt(match[2]);\n            bracketedAlterations.push([matchAlteration, matchDegree]);\n            workingFigure = workingFigure.replace(rx, '');\n            match = rx.exec(workingFigure);\n        }\n        return workingFigure;\n    }\n\n    _findSemitoneSizeForQuality(impliedQuality) {\n        let correctSemitones;\n        if (impliedQuality === 'major') {\n            correctSemitones = [4, 7];\n        } else if (impliedQuality === 'minor') {\n            correctSemitones = [3, 7];\n        } else if (impliedQuality === 'diminished') {\n            correctSemitones = [3, 6, 9];\n        } else if (impliedQuality === 'half-diminished') {\n            correctSemitones = [3, 6, 10];\n        } else if (impliedQuality === 'augmented') {\n            correctSemitones = [4, 8];\n        } else if (impliedQuality === 'dominant-seventh') {\n            correctSemitones = [4, 7, 10];\n        } else {\n            correctSemitones = [];\n        }\n\n        return correctSemitones;\n    }\n\n    /**\n     * Gives a string display.  Note that since inversion is not yet supported\n     * it needs to be given separately.\n     *\n     * Inverting 7th chords does not work.\n     *\n     * @param {string} displayType - ['roman', 'bassName', 'nameOnly', other]\n     * @param {int} [inversion=0]\n     * @returns {string}\n     */\n    asString(displayType, inversion) {\n        const keyObj = this.key;\n        const tonicName = keyObj.tonic.name;\n        const mode = keyObj.mode;\n\n        // specifying inversion is for backwards compatibility only.\n        if (inversion === undefined) {\n            inversion = this.inversion();\n        }\n        let inversionName = '';\n        if (inversion === 1) {\n            if (displayType === 'roman') {\n                inversionName = '6';\n            } else {\n                inversionName = ' (first inversion)';\n            }\n        } else if (inversion === 2) {\n            if (displayType === 'roman') {\n                inversionName = '64';\n            } else {\n                inversionName = ' (second inversion)';\n            }\n        }\n        let fullChordName;\n        let connector = ' in ';\n        let suffix = '';\n        if (displayType === 'roman') {\n            fullChordName = this.figure;\n            fullChordName = fullChordName.replace('/o', 'ø');\n        } else if (displayType === 'nameOnly') {\n            // use only with only choice being tonicName\n            fullChordName = '';\n            connector = '';\n            suffix = ' triad';\n        } else if (displayType === 'bassName') {\n            fullChordName = this.bass().name.replace(/-/, 'b');\n        } else {\n            // \"default\" or \"degreeName\" submediant, etc...\n            fullChordName = this.degreeName;\n            if (this.numbers !== undefined) {\n                fullChordName += ' ' + this.numbers.toString();\n            }            \n        }\n        let tonicDisplay = tonicName.replace(/-/, 'b');\n        if (mode === 'minor') {\n            tonicDisplay = tonicDisplay.toLowerCase();\n        }\n        const chordStr = fullChordName\n            + inversionName\n            + connector\n            + tonicDisplay\n            + ' '\n            + mode\n            + suffix;\n        return chordStr;\n    }\n}\nroman.RomanNumeral = RomanNumeral;\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/tempo -- tempo and (not in music21p) metronome objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as MIDI from 'MIDI';\nimport * as $ from 'jquery';\n\nimport { prebase } from './prebase.js';\n\n/* a Music21Object in m21p; the overhead is too high here to follow ... */\n/**\n * tempo module, see {@link music21.tempo}\n *\n * @exports music21/tempo\n */\n/**\n * tempo namespace\n *\n * @namespace music21.tempo\n * @memberof music21\n * @requires music21/prebase\n * @requires music21/base\n * @requires MIDI\n * @property {number} [baseTempo=60] - basic tempo\n */\nexport const tempo = {};\n\n// noinspection JSNonASCIINames,NonAsciiCharacters\n/**\n * Object mapping names to tempo values\n *\n * @name music21.tempo.defaultTempoValues\n * @memberof music21.tempo\n * @example\n * music21.tempo.defaultTempoValues.grave\n * // 40\n */\ntempo.defaultTempoValues = {\n    larghissimo: 16,\n    largamente: 32,\n    grave: 40,\n    'molto adagio': 40,\n    largo: 46,\n    lento: 52,\n    adagio: 56,\n    slow: 56,\n    langsam: 56,\n    larghetto: 60,\n    adagietto: 66,\n    andante: 72,\n    andantino: 80,\n    'andante moderato': 83,\n    maestoso: 88,\n    moderato: 92,\n    moderate: 92,\n    allegretto: 108,\n    animato: 120,\n    'allegro moderato': 128,\n    allegro: 132,\n    fast: 132,\n    schnell: 132,\n    allegrissimo: 140,\n    'molto allegro': 144,\n    'très vite': 144,\n    vivace: 160,\n    vivacissimo: 168,\n    presto: 184,\n    prestissimo: 208,\n};\n\ntempo.baseTempo = 60;\n\n/* --------- metronome ---------- */\n/**\n *\n * @class Metronome\n * @memberof music21.tempo\n * @extends music21.prebase.ProtoM21Object\n * @param {number} [tempo=music21.tempo.baseTempo] - the tempo of the metronome to start\n * @property {number} tempo\n * @property {int} [numBeatsPerMeasure=4]\n * @property {number} [minTempo=10]\n * @property {number} [maxTempo=600]\n * @property {bool} [flash=false] - flash the tempo\n * @property {bool} [silent=false] - play silently\n * @property {int} beat - current beat number\n * @property {int} chirpTimeout - an index of a timeout object for chirping\n */\nexport class Metronome extends prebase.ProtoM21Object {\n    constructor(tempoInt) {\n        super();\n        this._tempo = 60; // overridden by music21.tempo.baseTempo;\n        if (tempoInt === undefined) {\n            this.tempo = tempo.baseTempo;\n        } else {\n            this.tempo = tempoInt;\n        }\n        this.numBeatsPerMeasure = 4;\n        this.minTempo = 10;\n        this.maxTempo = 600;\n        this.beat = this.numBeatsPerMeasure;\n        this.chirpTimeout = undefined;\n        this.silent = false;\n        this.flash = false;\n        this.tempoRanges = [0, 40, 60, 72, 120, 144, 240, 999];\n        this.tempoIncreases = [0, 1, 2, 3, 4, 6, 8, 15, 100];\n    }\n    get tempo() {\n        return this._tempo;\n    }\n    set tempo(t) {\n        this._tempo = t;\n        if (this._tempo > this.maxTempo) {\n            this._tempo = this.maxTempo;\n        } else if (this._tempo < this.minTempo) {\n            this._tempo = this.minTempo;\n        }\n    }\n    get beatLength() {\n        return 60.0 / this.tempo;\n    }\n    _silentFlash(flashColor) {\n        this.$metronomeDiv\n            .find('.metroFlash')\n            .css('background-color', flashColor)\n            .fadeOut(this.beatLength * 1000 / 4, function silentFadeOut() {\n                $(this)\n                    .css('background-color', '#ffffff')\n                    .fadeIn(1);\n            });\n    }\n\n    /**\n     * Play a note (a higher one on the downbeat) and start the metronome chirping.\n     */\n    chirp() {\n        this.beat += 1;\n        if (this.beat > this.numBeatsPerMeasure) {\n            this.beat = 1;\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 96, 100, 0);\n                MIDI.noteOff(0, 96, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#0000f0');\n            }\n        } else {\n            if (this.silent !== true) {\n                MIDI.noteOn(0, 84, 70, 0);\n                MIDI.noteOff(0, 84, 0.1);\n            }\n            if (this.flash === true) {\n                this._silentFlash('#ff0000');\n            }\n        }\n        const that = this;\n        this.chirpTimeout = setTimeout(() => {\n            that.chirp();\n        }, 1000 * 60 / this.tempo);\n    }\n\n    /**\n     * Stop the metronome from chirping.\n     */\n    stopChirp() {\n        if (this.chirpTimeout !== undefined) {\n            clearTimeout(this.chirpTimeout);\n            this.chirpTimeout = undefined;\n        }\n    }\n\n    /**\n     * Increase the metronome tempo one \"click\".\n     *\n     * Value changes depending on the current tempo.  Uses standard metronome guidelines.\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @param {int} [n=1 - number of clicks to the right\n     * @returns {number} new tempo\n     */\n    increaseSpeed(n=1) {\n        // increase by one metronome 'click' for every n\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            for (let tr = 0; tr < this.tempoRanges.length; tr++) {\n                const tempoExtreme = this.tempoRanges[tr];\n                const tempoIncrease = this.tempoIncreases[tr];\n                if (t < tempoExtreme) {\n                    t += tempoIncrease;\n                    t = tempoIncrease * Math.round(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n        return this.tempo;\n    }\n\n    /**\n     * Decrease the metronome tempo one \"click\"\n     *\n     * To change the tempo, just set this.tempo = n\n     *\n     * @param {int} [n=1] - number of clicks to the left\n     * @returns {number} new tempo\n     */\n    decreaseSpeed(n=1) {\n        for (let i = 0; i < n; i++) {\n            let t = this.tempo;\n            const trL = this.tempoRanges.length;\n            for (let tr = 1; tr <= trL; tr++) {\n                const tempoExtreme = this.tempoRanges[trL - tr];\n                const tempoIncrease = this.tempoIncreases[trL - tr + 1];\n                if (t > tempoExtreme) {\n                    t -= tempoIncrease;\n                    t = tempoIncrease * Math.floor(t / tempoIncrease);\n                    break;\n                }\n            }\n            // console.log(t);\n            this.tempo = t;\n        }\n    }\n\n    /**\n     * add a Metronome interface onto the DOM at where\n     *\n     * @param {jQuery|Node} [where='body']\n     * @returns {jQuery} - a div holding the metronome.\n     */\n    addDiv(where) {\n        let jWhere;\n        if (where !== undefined && where.jquery !== undefined) {\n            jWhere = where;\n        } else if (where !== undefined) {\n            jWhere = $(where);\n        } else {\n            jWhere = $('body');\n        }\n        const metroThis = this;\n        const tempoHolder = $(\n            '<span class=\"tempoHolder\">' + this.tempo.toString() + '</span>'\n        );\n        tempoHolder.css({\n            'font-size': '24px',\n            'padding-left': '10px',\n            'padding-right': '10px',\n        });\n        const newDiv = $('<div class=\"metronomeRendered\"></div>');\n        newDiv.append(tempoHolder);\n\n        const b1 = $('<button>start</button>');\n        b1.on('click', () => {\n            metroThis.chirp();\n        });\n        const b2 = $('<button>stop</button>');\n        b2.on('click', () => {\n            metroThis.stopChirp();\n        });\n        newDiv.prepend(b2);\n        newDiv.prepend(b1);\n        const b3 = $('<button>up</button>');\n        b3.on('click', function increaseSpeedButton() {\n            metroThis.increaseSpeed();\n            $(this)\n                .prevAll('.tempoHolder')\n                .html(metroThis.tempo.toString());\n        });\n        const b4 = $('<button>down</button>');\n        b4.on('click', function decreaseSpeedButton() {\n            metroThis.decreaseSpeed();\n            $(this)\n                .prevAll('.tempoHolder')\n                .html(metroThis.tempo.toString());\n        });\n        newDiv.append(b3);\n        newDiv.append(b4);\n        const $flash = $(\n            '<span class=\"metroFlash\">'\n                + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>'\n        );\n        $flash.css('margin-left', '40px');\n        $flash.css('height', '40px');\n\n        newDiv.append($flash);\n\n        jWhere.append(newDiv);\n\n        this.$metronomeDiv = newDiv;\n        return newDiv;\n    }\n}\ntempo.Metronome = Metronome;\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/tinyNotation -- TinyNotation implementation\n *\n * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\n\nimport { clef } from './clef.js';\nimport { duration } from './duration.js';\nimport { pitch } from './pitch.js';\nimport { note } from './note.js';\nimport { meter } from './meter.js';\nimport { stream } from './stream.js';\nimport { tie } from './tie.js';\n\n/**\n * TinyNotation module, see {@link music21.tinyNotation} namespace\n *\n * @exports music21/tinyNotation\n */\n/**\n * @namespace music21.tinyNotation\n * @memberof music21\n * @requires music21/base\n * @requires music21/clef\n * @requires music21/duration\n * @requires music21/pitch\n * @requires music21/note\n * @requires music21/meter\n * @requires music21/stream\n * @requires music21/tie\n */\nexport const tinyNotation = {};\n\n/**\n * Regular expressions object\n *\n * @memberof music21.tinyNotation\n */\ntinyNotation.regularExpressions = {\n    REST: /r/,\n    OCTAVE2: /([A-G])[A-G]+/,\n    OCTAVE3: /([A-G])/,\n    OCTAVE5: /([a-g])('+)/,\n    OCTAVE4: /([a-g])/,\n    EDSHARP: /\\((#+)\\)/,\n    EDFLAT: /\\((-+)\\)/,\n    EDNAT: /\\(n\\)/,\n    SHARP: /^[A-Ga-g]+'*(#+)/, // simple notation finds\n    FLAT: /^[A-Ga-g]+'*(-+)/, //   double accidentals too\n    NAT: /^[A-Ga-g]+'*n/, // explicit naturals\n    TYPE: /(\\d+)/,\n    TIE: /.~/, // not preceding ties\n    PRECTIE: /~/, // front ties\n    ID_EL: /=([A-Za-z0-9]*)/,\n    LYRIC: /_(.*)/,\n    DOT: /\\.+/,\n    TIMESIG: /(\\d+)\\/(\\d+)/,\n\n    PARTBREAK: /partBreak/, // nonstandard...fix later...\n\n    TRIP: /trip{/,\n    QUAD: /quad{/,\n    ENDBRAC: /}$/,\n};\n/**\n * Function, not class.\n *\n * Converts a TinyNotation String into a music21 Stream\n *\n * See music21p for examples of what can go into tinynotation. It's an\n * adaptation of Lilypond format, by design Extremely simple!\n *\n * @memberof music21.tinyNotation\n * @param {string} textIn - a valid tinyNotation string\n * @returns {music21.stream.Part|music21.stream.Measure} - a Stream or Part object (if multiple measures)\n * @example\n * var t = \"3/4 c4 B8 c d4 e2.\";\n * var p = music21.tinyNotation.TinyNotation(t);\n * p.duration.quarterLength;\n * // 6.0\n */\ntinyNotation.TinyNotation = function TinyNotation(textIn) {\n    textIn = textIn.trim();\n    const tokens = textIn.split(' ');\n\n    let optionalScore;\n\n    let p = new stream.Part();\n    let m = new stream.Measure();\n    m.number = 1;\n    let currentTSBarDuration = 4.0;\n    let lastDurationQL = 1.0;\n    const storedDict = {\n        lastNoteTied: false,\n        inTrip: false,\n        inQuad: false,\n        endTupletAfterNote: false,\n    };\n    const tnre = tinyNotation.regularExpressions; // faster typing\n    let measureNumber = 1;\n    for (let i = 0; i < tokens.length; i++) {\n        // check at first so that a full measure but not over full\n        // gets returned as a stream.Measure object.\n        if ((m.duration.quarterLength >= currentTSBarDuration)\n            || (Math.abs(m.duration.quarterLength - currentTSBarDuration) < 0.0001)) {\n            p.append(m);\n            measureNumber += 1;\n            m = new stream.Measure();\n            m.number = measureNumber;\n        }\n\n        let token = tokens[i];\n        let noteObj;\n        let lyric;\n        if (tnre.PARTBREAK.exec(token)) {\n            if (m.length > 0) {\n                p.append(m);\n                m = new stream.Measure();\n            }\n            if (optionalScore === undefined) {\n                optionalScore = new stream.Score();\n            }\n            optionalScore.insert(0, p);\n            p = new stream.Part();\n\n            storedDict.lastNoteTied = false;\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n\n            continue;\n        }\n\n        if (tnre.TRIP.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inTrip = true;\n        }\n        if (tnre.QUAD.exec(token)) {\n            token = token.slice(5); // cut...\n            storedDict.inQuad = true;\n        }\n        if (tnre.ENDBRAC.exec(token)) {\n            token = token.slice(0, -1); // cut...\n            storedDict.endTupletAfterNote = true;\n        }\n\n        // Modifiers\n        if (tnre.LYRIC.exec(token)) {\n            [token, lyric] = token.split('_');\n        }\n\n        if (tnre.TIMESIG.exec(token)) {\n            const MATCH = tnre.TIMESIG.exec(token);\n            const ts = new meter.TimeSignature();\n            ts.numerator = parseInt(MATCH[1]);\n            ts.denominator = parseInt(MATCH[2]);\n            m.timeSignature = ts;\n            currentTSBarDuration = ts.barDuration.quarterLength;\n            // console.log(currentTSBarDuration);\n            continue;\n        } else if (tnre.REST.exec(token)) {\n            noteObj = new note.Rest(lastDurationQL);\n        } else if (tnre.OCTAVE2.exec(token)) {\n            const MATCH = tnre.OCTAVE2.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 4 - MATCH[0].length;\n        } else if (tnre.OCTAVE3.exec(token)) {\n            const MATCH = tnre.OCTAVE3.exec(token);\n            noteObj = new note.Note(MATCH[1], lastDurationQL);\n            noteObj.pitch.octave = 3;\n        } else if (tnre.OCTAVE5.exec(token)) {\n            // must match octave 5 before 4\n            const MATCH = tnre.OCTAVE5.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 3 + MATCH[0].length;\n        } else if (tnre.OCTAVE4.exec(token)) {\n            const MATCH = tnre.OCTAVE4.exec(token);\n            noteObj = new note.Note(MATCH[1].toUpperCase(), lastDurationQL);\n            noteObj.pitch.octave = 4;\n        }\n\n        if (noteObj === undefined) {\n            continue;\n        }\n\n        if (lyric !== undefined) {\n            noteObj.lyric = lyric;\n        }\n\n        if (tnre.TIE.exec(token)) {\n            noteObj.tie = new tie.Tie('start');\n            if (storedDict.lastNoteTied) {\n                noteObj.tie.type = 'continue';\n            }\n            storedDict.lastNoteTied = true;\n        } else if (storedDict.lastNoteTied) {\n            noteObj.tie = new tie.Tie('stop');\n            storedDict.lastNoteTied = false;\n        }\n        if (tnre.SHARP.exec(token)) {\n            const MATCH = tnre.SHARP.exec(token); // sharp\n            noteObj.pitch.accidental = new pitch.Accidental(MATCH[1].length);\n        } else if (tnre.FLAT.exec(token)) {\n            const MATCH = tnre.FLAT.exec(token); // sharp\n            noteObj.pitch.accidental = new pitch.Accidental(-1 * MATCH[1].length);\n        } else if (tnre.NAT.exec(token)) {\n            noteObj.pitch.accidental = new pitch.Accidental('natural');\n            noteObj.pitch.accidental.displayType = 'always';\n        }\n        let MATCH = tnre.TYPE.exec(token);\n        if (MATCH) {\n            const durationType = parseInt(MATCH[0]);\n            noteObj.duration.quarterLength = 4.0 / durationType;\n        }\n        MATCH = tnre.DOT.exec(token);\n        if (MATCH) {\n            const numDots = MATCH[0].length;\n            const multiplier = 1 + (1 - Math.pow(0.5, numDots));\n            noteObj.duration.quarterLength *= multiplier;\n        }\n        lastDurationQL = noteObj.duration.quarterLength;\n        // do before appending tuplets\n\n        if (storedDict.inTrip) {\n            // console.log(noteObj.duration.quarterLength);\n            noteObj.duration.appendTuplet(\n                new duration.Tuplet(3, 2, noteObj.duration.quarterLength)\n            );\n        }\n        if (storedDict.inQuad) {\n            noteObj.duration.appendTuplet(\n                new duration.Tuplet(4, 3, noteObj.duration.quarterLength)\n            );\n        }\n        if (storedDict.endTupletAfterNote) {\n            storedDict.inTrip = false;\n            storedDict.inQuad = false;\n            storedDict.endTupletAfterNote = false;\n        }\n        m.append(noteObj);\n    }\n\n    if (m.length > 0) {\n        p.append(m);\n    }\n\n    let returnObject;\n\n    if (optionalScore !== undefined) {\n        if (p.length > 0) {\n            optionalScore.append(p);\n        }\n        for (let i = 0; i < optionalScore.length; i++) {\n            const innerPart = optionalScore.get(i);\n            innerPart.clef = clef.bestClef(innerPart);\n            innerPart.getElementsByClass('Measure').get(0).clef = innerPart.clef;\n        }\n        returnObject = optionalScore;\n    } else {\n        p.clef = clef.bestClef(p);\n        p.getElementsByClass('Measure').get(0).clef = p.clef;\n        returnObject = p;\n    }\n    return returnObject;\n};\n\n// render notation divs in HTML\n/**\n * Render all the TinyNotation classes in the DOM as notation\n *\n * Called automatically when music21 is loaded.\n *\n * @memberof music21.tinyNotation\n * @param {string} classTypes - a JQuery selector to find elements to replace.\n * @param {Node|jQuery} [selector]\n */\ntinyNotation.renderNotationDivs = function renderNotationDivs(\n    classTypes,\n    selector\n) {\n    if (classTypes === undefined) {\n        classTypes = '.music21.tinyNotation';\n    }\n    let allRender = [];\n    if (selector === undefined) {\n        allRender = $(classTypes);\n    } else {\n        if (selector.jquery === undefined) {\n            selector = $(selector);\n        }\n        allRender = selector.find(classTypes);\n    }\n    for (let i = 0; i < allRender.length; i++) {\n        const thisTN = allRender[i];\n        const $thisTN = $(thisTN);\n        let thisTNContents;\n        if ($thisTN.attr('tinynotationcontents') !== undefined) {\n            thisTNContents = $thisTN.attr('tinynotationcontents');\n        } else if (thisTN.textContent !== undefined) {\n            thisTNContents = thisTN.textContent;\n            thisTNContents = thisTNContents.replace(/s+/g, ' '); // no line-breaks, etc.\n        }\n\n        if (\n            String.prototype.trim !== undefined\n            && thisTNContents !== undefined\n        ) {\n            thisTNContents = thisTNContents.trim(); // remove leading, trailing whitespace\n        }\n        if (thisTNContents) {\n            const st = tinyNotation.TinyNotation(thisTNContents);\n            if ($thisTN.hasClass('noPlayback')) {\n                st.renderOptions.events.click = undefined;\n            }\n            const newSVG = st.createDOM();\n\n            $thisTN.attr('tinynotationcontents', thisTNContents);\n            $thisTN.empty();\n            $thisTN.data('stream', st);\n            $thisTN.append(newSVG);\n            // console.log(thisTNContents);\n        }\n    }\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21 features.\n * music21/voiceLeading -- voiceLeading objects\n *\n * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21, Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab\n *\n */\n\nimport { interval } from './interval.js';\nimport { key } from './key.js';\nimport { note } from './note.js';\n\nimport { Music21Object } from './base.js';\n\nconst intervalCache = [];\n\nconst MotionType = {\n    antiParallel: 'Anti-Parallel',\n    contrary: 'Contrary',\n    noMotion: 'No Motion',\n    oblique: 'Oblique',\n    parallel: 'Parallel',\n    similar: 'Similar',\n};\n\nclass VoiceLeadingQuartet extends Music21Object {\n    constructor(v1n1, v1n2, v2n1, v2n2, analyticKey) {\n        super();\n        if (!intervalCache.length) {\n            intervalCache.push(new interval.Interval('P1'));\n            intervalCache.push(new interval.Interval('P5'));\n            intervalCache.push(new interval.Interval('P8'));\n        }\n        this.unison = intervalCache[0];\n        this.fifth = intervalCache[1];\n        this.octave = intervalCache[2];\n\n        this._v1n1 = undefined;\n        this._v1n2 = undefined;\n        this._v2n1 = undefined;\n        this._v2n2 = undefined;\n\n        this.v1n1 = v1n1;\n        this.v1n2 = v1n2;\n        this.v2n1 = v2n1;\n        this.v2n2 = v2n2;\n\n        this.vIntervals = [];\n        this.hIntervals = [];\n\n        this._key = undefined;\n        if (analyticKey !== undefined) {\n            this.key = analyticKey;\n        }\n        if (\n            v1n1 !== undefined\n            && v1n2 !== undefined\n            && v2n1 !== undefined\n            && v2n2 !== undefined\n        ) {\n            this._findIntervals();\n        }\n    }\n\n    _setVoiceNote(value, which) {\n        if (value === undefined) {\n            this[which] = value;\n        } else if (typeof value === 'string') {\n            this[which] = new note.Note(value);\n        } else if (value.classes.includes('Note')) {\n            this[which] = value;\n        } else {\n            const n = new note.Note(value.nameWithOctave);\n            n.duration.quarterLength = 0.0;\n            this[which] = n;\n        }\n    }\n\n    get v1n1() {\n        return this._v1n1;\n    }\n    set v1n1(value) {\n        this._setVoiceNote(value, '_v1n1');\n    }\n    get v1n2() {\n        return this._v1n2;\n    }\n    set v1n2(value) {\n        this._setVoiceNote(value, '_v1n2');\n    }\n    get v2n1() {\n        return this._v2n1;\n    }\n    set v2n1(value) {\n        this._setVoiceNote(value, '_v2n1');\n    }\n    get v2n2() {\n        return this._v2n2;\n    }\n    set v2n2(value) {\n        this._setVoiceNote(value, '_v2n2');\n    }\n\n    get key() {\n        return this._key;\n    }\n    set key(keyValue) {\n        if (typeof keyValue === 'string') {\n            keyValue = new key.Key(\n                key.convertKeyStringToMusic21KeyString(keyValue)\n            );\n        }\n        this._key = keyValue;\n    }\n\n    _findIntervals() {\n        this.vIntervals.push(new interval.Interval(this.v1n1, this.v2n1));\n        this.vIntervals.push(new interval.Interval(this.v1n2, this.v2n2));\n        this.hIntervals.push(new interval.Interval(this.v1n1, this.v1n2));\n        this.hIntervals.push(new interval.Interval(this.v2n1, this.v2n2));\n    }\n\n    motionType() {\n        if (this.obliqueMotion()) {\n            return MotionType.oblique;\n        } else if (this.parallelMotion()) {\n            return MotionType.parallel;\n        } else if (this.similarMotion()) {\n            return MotionType.similar;\n        } else if (this.contraryMotion()) {\n            return MotionType.contrary;\n        } else if (this.antiParallelMotion()) {\n            return MotionType.antiParallel;\n        } else if (this.noMotion()) {\n            return MotionType.noMotion;\n        }\n        return undefined;\n    }\n\n    noMotion() {\n        for (const iV of this.hIntervals) {\n            if (iV.name !== 'P1') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    obliqueMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n\n        for (const iH of this.hIntervals) {\n            if (iH.name === 'P1') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    similarMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n\n        if (this.hIntervals[0].direction === this.hIntervals[1].direction) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelMotion(requiredInterval) {\n        if (!this.similarMotion()) {\n            return false;\n        }\n        if (\n            this.vIntervals[0].directedSimpleName\n            !== this.vIntervals[1].directedSimpleName\n        ) {\n            return false;\n        }\n        if (requiredInterval === undefined) {\n            return true;\n        }\n        if (typeof requiredInterval === 'string') {\n            requiredInterval = new interval.Interval(requiredInterval);\n        }\n        if (this.vIntervals[0].simpleName === requiredInterval.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    contraryMotion() {\n        if (this.noMotion()) {\n            return false;\n        }\n        if (this.obliqueMotion()) {\n            return false;\n        }\n        if (this.hIntervals[0].direction === this.hIntervals[1].direction) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    outwardContraryMotion() {\n        return (\n            this.contraryMotion()\n            && this.hIntervals[0].direction === interval.Direction.ASCENDING\n        );\n    }\n\n    inwardContraryMotion() {\n        return (\n            this.contraryMotion()\n            && this.hIntervals[0].direction === interval.Direction.DESCENDING\n        );\n    }\n\n    antiParallelMotion(simpleName) {\n        if (!this.contraryMotion()) {\n            return false;\n        }\n        if (this.vIntervals[0].simpleName !== this.vIntervals[1].simpleName) {\n            return false;\n        }\n        if (simpleName === undefined) {\n            return true;\n        }\n        if (typeof simpleName === 'string') {\n            if (this.vIntervals[0].simpleName === simpleName) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (this.vIntervals[0].simpleName === simpleName.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelInterval(thisInterval) {\n        if (!(this.parallelMotion() || this.antiParallelMotion())) {\n            return false;\n        }\n        if (typeof thisInterval === 'string') {\n            thisInterval = new interval.Interval(thisInterval);\n        }\n\n        if (this.vIntervals[0].semiSimpleName === thisInterval.semiSimpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    parallelFifth() {\n        return this.parallelInterval(this.fifth);\n    }\n\n    parallelOctave() {\n        return this.parallelInterval(this.octave);\n    }\n\n    parallelUnison() {\n        return this.parallelInterval(this.unison);\n    }\n\n    parallelUnisonOrOctave() {\n        return this.parallelUnison() || this.parallelOctave();\n    }\n\n    hiddenInterval(thisInterval) {\n        if (this.parallelMotion()) {\n            return false;\n        }\n        if (!this.similarMotion()) {\n            return false;\n        }\n\n        if (typeof thisInterval === 'string') {\n            thisInterval = new interval.Interval(thisInterval);\n        }\n        if (this.vIntervals[1].simpleName === thisInterval.simpleName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    hiddenFifth() {\n        return this.hiddenInterval(this.fifth);\n    }\n\n    hiddenOctave() {\n        return this.hiddenInterval(this.octave);\n    }\n\n    // True if either note in voice 1 is lower than the corresponding voice 2 note\n    voiceCrossing() {\n        return (\n            this.v1n1.pitch.ps < this.v2n1.pitch.ps\n            || this.v1n2.pitch.ps < this.v2n2.pitch.ps\n        );\n    }\n\n    voiceOverlap() {\n        return (\n            this.v1n2.pitch.ps < this.v2n1.pitch.ps\n            || this.v2n2.pitch.ps > this.v1n1.pitch.ps\n        );\n    }\n\n    /**\n     * isProperResolution - Checks whether the voice-leading quartet resolves correctly according to standard\n     *         counterpoint rules. If the first harmony is dissonant (d5, A4, or m7) it checks\n     *         that these are correctly resolved. If the first harmony is consonant, True is returned.\n     *\n     *         The key parameter should be specified to check for motion in the bass from specific\n     *         note degrees. If it is not set, then no checking for scale degrees takes place.\n     *\n     *         Diminished Fifth: in by contrary motion to a third, with 7 resolving up to 1 in the bass\n     *         Augmented Fourth: out by contrary motion to a sixth, with chordal seventh resolving\n     *         down to a third in the bass.\n     *         Minor Seventh: Resolves to a third with a leap form 5 to 1 in the bass\n     *\n     * @return {boolean}  true if proper or rules do not apply; false if improper\n     */\n\n    isProperResolution() {\n        if (this.noMotion()) {\n            return true;\n        }\n        let scale;\n        let n1degree;\n        let n2degree;\n        if (this.key !== undefined) {\n            scale = this.key.getScale();\n            n1degree = scale.getScaleDegreeFromPitch(this.v2n1);\n            n2degree = scale.getScaleDegreeFromPitch(this.v2n2);\n        }\n\n        // catches case of #7 in minor\n        if (\n            this.key !== undefined\n            && this.key.mode === 'minor'\n            && (n1degree === undefined || n2degree === undefined)\n        ) {\n            const scale2 = this.key.getScale('melodic-minor'); // gets ascending form\n            if (n1degree === undefined) {\n                n1degree = scale2.getScaleDegreeFromPitch(this.v2n1);\n            }\n            if (n2degree === undefined) {\n                n2degree = scale2.getScaleDegreeFromPitch(this.v2n2);\n            }\n        }\n\n        const firstHarmony = this.vIntervals[0].simpleName;\n        const secondHarmony = this.vIntervals[1].generic.simpleUndirected;\n\n        if (firstHarmony === 'P4') {\n            if (this.v1n1.pitch.ps >= this.v1n2.pitch.ps) {\n                return true;\n            } else {\n                return false;\n            }\n        } else if (firstHarmony === 'd5') {\n            if (scale !== undefined && n1degree !== 7) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 1) {\n                return false;\n            }\n            return this.inwardContraryMotion() && secondHarmony === 3;\n        } else if (firstHarmony === 'A4') {\n            if (scale !== undefined && n1degree !== 4) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 3) {\n                return false;\n            }\n            return this.outwardContraryMotion() && secondHarmony === 6;\n        } else if (firstHarmony === 'm7') {\n            if (scale !== undefined && n1degree !== 5) {\n                return true;\n            }\n            if (scale !== undefined && n2degree !== 1) {\n                return false;\n            }\n            return secondHarmony === 3;\n        } else {\n            return true;\n        }\n    }\n}\n\nexport const voiceLeading = {\n    VoiceLeadingQuartet,\n};\n","/**\n * music21j -- Javascript reimplementation of Core music21p features.\n * music21/webmidi -- webmidi or wrapper around the Jazz Plugin\n *\n * For non webmidi --  Uses the cross-platform, cross-browser plugin from\n * http://jazz-soft.net/doc/Jazz-Plugin/Plugin.html\n * P.S. by the standards of divinity of most major religions, Sema Kachalo is a god.\n *\n * Copyright (c) 2014-18, Michael Scott Cuthbert and cuthbertLab\n * Based on music21 (=music21p), Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab\n *\n */\nimport * as $ from 'jquery';\nimport { debug } from './debug.js';\nimport { common } from './common.js';\nimport { miditools } from './miditools.js';\n\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * See {@link music21.webmidi}\n *\n * @exports music21/webmidi\n */\n/**\n * webmidi -- for connecting with external midi devices\n *\n * Uses either the webmidi API or the Jazz plugin\n *\n * @namespace music21.webmidi\n * @memberof music21\n * @requires music21/miditools\n * @requires jquery\n * @property {JazzObject|undefined} storedPlugin - reference to the Jazz object from the plugin; cached from `createPlugin`.\n * @property {string} selectedJazzInterface - the currently connected interface (note that we can only use one right now)\n */\nexport const webmidi = {};\n\nwebmidi.selectedOutputPort = undefined;\nwebmidi.selectedInputPort = undefined;\n\nwebmidi.access = undefined;\nwebmidi.$selectDiv = undefined;\n\nwebmidi.jazzDownloadUrl = 'http://jazz-soft.net/download/Jazz-Plugin/';\nwebmidi.storedPlugin = undefined;\nwebmidi.selectedJazzInterface = undefined; // not the same as \"\" etc. uses last selected interface by default.\n\n/**\n * Called by Jazz MIDI plugin when an event arrives.\n *\n * Shim to convert the data into WebMIDI API format and then call the WebMIDI API midiInArrived\n *\n * See the MIDI spec for information on parameters\n *\n * @memberof music21.webmidi\n * @param {byte} t - timing information\n * @param {byte} a - data 1\n * @param {byte} b - data 2\n * @param {byte} c - data 3\n */\nwebmidi.jazzMidiInArrived = function jazzMidiInArrived(t, a, b, c) {\n    const webmidiEvent = {\n        timestamp: t,\n        data: [a, b, c],\n    };\n    return webmidi.midiInArrived(webmidiEvent);\n};\n\n/**\n * Called directly when a MIDI event arrives from the WebMIDI API, or via a Shim (jazzMidiInArrived)\n * when MIDI information comes from JazzMIDI\n *\n * Calls the 'raw' and 'general callbacks when a raw midi event (four bytes)\n * arrives.\n *\n * See the MIDI spec for information on the contents of the three parameters.\n *\n * midiMessageEvent should be an object with two keys: timeStamp (int) and data (array of three int values)\n *\n * @memberof music21.webmidi\n * @param {Object} midiMessageEvent - midi Information\n */\nwebmidi.midiInArrived = function midiInArrived(midiMessageEvent) {\n    const t = midiMessageEvent.timeStamp;\n    const a = midiMessageEvent.data[0];\n    const b = midiMessageEvent.data[1];\n    const c = midiMessageEvent.data[2];\n    const eventObject = miditools.callBacks.raw(t, a, b, c);\n    if (miditools.callBacks.general instanceof Array) {\n        return miditools.callBacks.general.forEach((el, index, array) => {\n            el(eventObject);\n        });\n    } else if (miditools.callBacks.general !== undefined) {\n        return miditools.callBacks.general(eventObject);\n    } else {\n        return undefined;\n    }\n};\n\n/**\n * Create a hidden tiny, &lt;object&gt; tag in the DOM with the\n * proper classid (`CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90`) to\n * load the Jazz plugin.\n *\n * It will return the plugin if it can or undefined if it cannot. Caches it in webmidi.storedPlugin.\n *\n * @function music21.webmidi.createPlugin\n * @param {Node} [appendElement=document.body] - where to place this hidden object (does not really matter)\n * @param {Boolean} [override=false] - if this method has been called successfully before return the storedPlugin unless override is true.\n * @returns {Jazz|undefined} Jazz MIDI plugin object\n */\nwebmidi.createPlugin = function createPlugin(appendElement, override) {\n    if (webmidi.storedPlugin && override !== true) {\n        return webmidi.storedPlugin;\n    }\n    if (typeof appendElement === 'undefined') {\n        appendElement = $('body')[0];\n    }\n    const obj = document.createElement('object');\n    obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\n    if (!obj.isJazz) {\n        obj.type = 'audio/x-jazz';\n    }\n    obj.style.visibility = 'hidden';\n    obj.style.width = '0px';\n    obj.style.height = '0px';\n    appendElement.appendChild(obj);\n\n    if (obj.isJazz) {\n        webmidi.storedPlugin = obj;\n        return obj;\n    } else {\n        appendElement.removeChild(obj);\n        console.error(\n            'Cannot use jazz plugin; install at ' + webmidi.jazzDownloadUrl\n        );\n        return undefined;\n    }\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * @function music21.webmidi.createJazzSelector\n * @param {jQuery|Node} [$newSelect=document.body] - object to append the select to\n * @param {Object} [options] - see createSelector for details\n * @returns {Node|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createJazzSelector = function createJazzSelector($newSelect, options) {\n    const params = {};\n    common.merge(params, options);\n\n    const Jazz = webmidi.createPlugin();\n    if (Jazz === undefined) {\n        return undefined;\n    }\n\n    $newSelect.change(() => {\n        const selectedInput = $('#midiInSelect option:selected').text();\n        if (selectedInput !== 'None selected') {\n            webmidi.selectedJazzInterface = Jazz.MidiInOpen(\n                selectedInput,\n                webmidi.jazzMidiInArrived\n            );\n        } else {\n            Jazz.MidiInClose();\n        }\n        if (debug) {\n            console.log(\n                'current input changed to: ' + webmidi.selectedInterface\n            );\n        }\n    });\n    const midiOptions = Jazz.MidiInList();\n    const noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    $newSelect.append(noneAppendOption);\n\n    let anySelected = false;\n    const allAppendOptions = [];\n    for (let i = 0; i < midiOptions.length; i++) {\n        const $appendOption = $(\n            \"<option value='\"\n                + midiOptions[i]\n                + \"'>\"\n                + midiOptions[i]\n                + '</option>'\n        );\n        if (midiOptions[i] === webmidi.selectedJazzInterface) {\n            $appendOption.attr('selected', true);\n            anySelected = true;\n        }\n        allAppendOptions.push($appendOption);\n        // console.log(appendOption);\n        $newSelect.append($appendOption);\n    }\n    if (anySelected === false && midiOptions.length > 0) {\n        $newSelect.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n        webmidi.selectedJazzInterface = Jazz.MidiInOpen(\n            midiOptions[0],\n            webmidi.jazzMidiInArrived\n        );\n        anySelected = true;\n    } else {\n        noneAppendOption.attr('selected', true);\n    }\n    if (params.onsuccess !== undefined) {\n        params.onsuccess();\n    }\n    if (anySelected === true && params.oninputsuccess !== undefined) {\n        params.oninputsuccess();\n    } else if (anySelected === false && params.oninputempty !== undefined) {\n        params.oninputempty();\n    }\n    return $newSelect;\n};\n\n/**\n * Function to be called if the webmidi-api selection changes. (not jazz)\n *\n */\nwebmidi.selectionChanged = function selectionChanged() {\n    const selectedInput = webmidi.$select.val();\n    if (selectedInput === webmidi.selectedInputPort) {\n        return false;\n    }\n    const storedStateChange = webmidi.access.onstatechange; // port.close() fires onstatechange, so turn off for a moment.\n    webmidi.access.onstatechange = () => {};\n    if (debug) {\n        console.log('current input changed to: ' + selectedInput);\n    }\n    webmidi.selectedInputPort = selectedInput;\n\n    webmidi.access.inputs.forEach(port => {\n        if (port.name === selectedInput) {\n            port.onmidimessage = webmidi.midiInArrived;\n        } else {\n            port.close();\n        }\n    });\n    webmidi.access.onstatechange = storedStateChange;\n    return false;\n};\n\n/**\n * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz\n *\n * The options object has several parameters:\n *\n * {bool} autoupdate -- should this auto update?\n * {function} onsuccess -- function to call on all successful port queries\n * {function} oninputsuccess -- function to call if successful and at least one input device is found\n * {function} oninputempty -- function to call if successful but no input devices are found.\n * {bool} existingMidiSelect -- is there already a select tag for MIDI?\n *\n * @function music21.webmidi.createSelector\n * @param {jQuery|Node} [$midiSelectDiv=$('body')] - object to append the select to\n * @param {Object} [options] - see above.\n * @returns {Node|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.\n */\nwebmidi.createSelector = function createSelector($midiSelectDiv, options) {\n    const params = {\n        autoUpdate: true,\n        existingMidiSelect: false,\n    };\n    common.merge(params, options);\n\n    if (typeof $midiSelectDiv === 'undefined') {\n        $midiSelectDiv = $('body');\n    }\n    if ($midiSelectDiv.jquery === undefined) {\n        $midiSelectDiv = $($midiSelectDiv);\n    }\n    let $newSelect;\n    const foundMidiSelects = $midiSelectDiv.find('select#midiInSelect');\n    if (foundMidiSelects.length > 0) {\n        $newSelect = foundMidiSelects[0];\n        params.existingMidiSelect = true;\n    } else {\n        $newSelect = $('<select>').attr('id', 'midiInSelect');\n        $midiSelectDiv.append($newSelect);\n    }\n    webmidi.$select = $newSelect;\n\n    if (navigator.requestMIDIAccess === undefined) {\n        webmidi.createJazzSelector($newSelect, params);\n    } else {\n        if (params.existingMidiSelect !== true) {\n            $newSelect.change(webmidi.selectionChanged);\n        }\n        navigator.requestMIDIAccess().then(\n            access => {\n                webmidi.access = access;\n                webmidi.populateSelect();\n                if (params.autoUpdate) {\n                    access.onstatechange = webmidi.populateSelect;\n                }\n                webmidi.$select.change();\n                if (params.onsuccess !== undefined) {\n                    params.onsuccess();\n                }\n                if (\n                    webmidi.selectedInputPort !== 'None'\n                    && params.oninputsuccess !== undefined\n                ) {\n                    params.oninputsuccess();\n                } else if (\n                    webmidi.selectedInputPort === 'None'\n                    && params.oninputempty !== undefined\n                ) {\n                    params.oninputempty();\n                }\n            },\n            e => {\n                $midiSelectDiv.html(e.message);\n            }\n        );\n    }\n    miditools.clearOldChords(); // starts the chord checking process.\n    return $newSelect;\n};\n\nwebmidi.populateSelect = function populateSelect() {\n    const inputs = webmidi.access.inputs;\n    webmidi.$select.empty();\n\n    const $noneAppendOption = $(\"<option value='None'>None selected</option>\");\n    webmidi.$select.append($noneAppendOption);\n\n    const allAppendOptions = [];\n    const midiOptions = [];\n    let i = 0;\n    inputs.forEach(port => {\n        const $appendOption = $(\n            \"<option value='\" + port.name + \"'>\" + port.name + '</option>'\n        );\n        allAppendOptions.push($appendOption);\n        midiOptions.push(port.name);\n        // console.log(appendOption);\n        webmidi.$select.append($appendOption);\n        i += 1;\n    });\n\n    if (allAppendOptions.length > 0) {\n        webmidi.$select.val(midiOptions[0]);\n        allAppendOptions[0].attr('selected', true);\n    } else {\n        $noneAppendOption.attr('selected', true);\n    }\n    webmidi.$select.change();\n};\n\n// this allows for the deprecated webmidi.callBacks to still work for now.\nwebmidi.callBacks = miditools.callBacks;\n\n/**\n * Example smallest usage of the webmidi toolkit.  see testHTML/midiInRequire.html\n\n<html>\n<head>\n    <title>MIDI In/Jazz Test for Music21j</title>\n    <!-- for MSIE 10 on Windows 8 -->\n    <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n    <script data-main=\"../src/music21.js\" src=\"../ext/require/require.js\"></script>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n\n    <script>\n    var s = \"\";\n    function displayStream(me) {\n        me.sendToMIDIjs();\n        if (me.noteOn) {\n            var m21n = me.music21Note();\n            if (s.length > 7) {\n                s.elements = s.elements.slice(1)\n            }\n            s.append(m21n);\n            var $svgDiv = $(\"#svgDiv\");\n            $svgDiv.empty();\n            var svgDiv = s.appendNewDOM($svgDiv);\n        }\n    }\n\n    require(['music21'], function () {\n        s = new music21.stream.Stream();\n        music21.webmidi.createSelector($(\"#putMidiSelectHere\"));\n        music21.miditools.callBacks.general = displayStream;\n    });\n\n\n    </script>\n</head>\n<body>\n<div>\nMIDI Input: <div id=\"putMidiSelectHere\" />\n</div>\n<div id=\"svgDiv\">\n</div>\n</body>\n</html>\n **/\n","// order below doesn't matter, but good to give a sense\n// of what will be needed by almost everyone, and then\n// alphabetical.\nimport * as exceptions21 from './music21/exceptions21.js';\nimport { debug } from './music21/debug.js';\nimport { common } from './music21/common.js';\nimport { prebase } from './music21/prebase.js';\nimport { base } from './music21/base.js';\n\nimport { articulations } from './music21/articulations.js';\nimport { audioRecording } from './music21/audioRecording.js';\nimport { audioSearch } from './music21/audioSearch.js';\nimport * as bar from './music21/bar.js';\nimport { beam } from './music21/beam.js';\nimport { chord } from './music21/chord.js';\nimport * as chordTables from './music21/chordTables.js';\nimport { clef } from './music21/clef.js';\nimport * as converter from './music21/converter.js';\nimport * as derivation from './music21/derivation.js';\nimport { duration } from './music21/duration.js';\nimport { dynamics } from './music21/dynamics.js';\nimport { expressions } from './music21/expressions.js';\nimport { figuredBass } from './music21/figuredBass.js';\nimport { fromPython } from './music21/fromPython.js';\nimport { harmony } from './music21/harmony.js';\nimport { instrument } from './music21/instrument.js';\nimport { interval } from './music21/interval.js';\nimport { key } from './music21/key.js';\nimport { keyboard } from './music21/keyboard.js';\nimport { layout } from './music21/layout.js';\nimport { meter } from './music21/meter.js';\nimport { miditools } from './music21/miditools.js';\nimport { musicxml } from './music21/musicxml.js';\nimport { note } from './music21/note.js';\nimport { pitch } from './music21/pitch.js';\nimport { renderOptions } from './music21/renderOptions.js';\nimport { roman } from './music21/roman.js';\nimport { scale } from './music21/scale.js';\nimport * as sites from './music21/sites.js';\nimport { stream } from './music21/stream.js';\nimport { tempo } from './music21/tempo.js';\nimport { tie } from './music21/tie.js';\nimport { tinyNotation } from './music21/tinyNotation.js';\nimport { voiceLeading } from './music21/voiceLeading.js';\nimport { vfShow } from './music21/vfShow.js';\nimport { webmidi } from './music21/webmidi.js';\n\nconst music21 = {\n    common,\n    debug,\n    prebase,\n    base,\n\n    articulations,\n    audioRecording,\n    audioSearch,\n    bar,\n    beam,\n    chord,\n    chordTables,\n    clef,\n    converter,\n    derivation,\n    dynamics,\n    duration,\n    exceptions21,\n    expressions,\n    figuredBass,\n    fromPython,\n    harmony,\n    instrument,\n    interval,\n    key,\n    keyboard,\n    layout,\n    meter,\n    miditools,\n    musicxml,\n    note,\n    pitch,\n    renderOptions,\n    roman,\n    scale,\n    sites,\n    stream,\n    tempo,\n    tie,\n    tinyNotation,\n    voiceLeading,\n    vfShow,\n    webmidi,\n};\n\nmusic21.Music21Object = base.Music21Object;\n\nexport default music21;\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.articulations.Articulation', assert => {\n        const acc = new music21.articulations.Accent();\n        assert.equal(acc.name, 'accent', 'matching names for accent');\n        const ten = new music21.articulations.Tenuto();\n        assert.equal(ten.name, 'tenuto', 'matching names for tenuto');\n        const n = new music21.note.Note('C');\n        n.articulations.push(acc);\n        n.articulations.push(ten);\n        assert.equal(n.articulations[0].name, 'accent', 'accent in array');\n        assert.equal(n.articulations[1].name, 'tenuto', 'tenuto in array');\n    });\n\n    QUnit.test('music21.articulations.Articulation display', assert => {\n        // Marcato is a pseudo multiple inheritance\n        const marc = new music21.articulations.Marcato();\n        assert.equal(marc.name, 'marcato', 'matching names for marcato');\n        const n = new music21.note.Note('D#5');\n        n.articulations.push(marc);\n        const nBoring = new music21.note.Note('D#5');\n\n        const measure = new music21.stream.Measure();\n        measure.append(n);\n        measure.append(nBoring);\n        measure.append(nBoring.clone());\n        measure.append(n.clone());\n        measure.appendNewDOM();\n        assert.ok(true, 'something worked');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.base.Music21Object', assert => {\n        const m21o = new music21.base.Music21Object();\n        assert.equal(m21o.classSortOrder, 20);\n        assert.ok(m21o.duration instanceof music21.duration.Duration);\n        assert.deepEqual(m21o.classes, [\n            'Music21Object',\n            'ProtoM21Object',\n            'object',\n        ]);\n        assert.ok(m21o.sites instanceof music21.sites.Sites);\n        assert.ok(m21o.isMusic21Object);\n        assert.notOk(m21o.isStream);\n        assert.equal(m21o.priority, 0, 'priority is 0');\n        assert.equal(m21o.quarterLength, 0.0, 'default duration is 0.0');\n        m21o.quarterLength = 2.0;\n        assert.equal(m21o.quarterLength, 2.0);\n\n        const st = new music21.stream.Measure();\n        st.insert(3.0, m21o);\n        assert.equal(m21o.offset, 3.0);\n        assert.equal(m21o.getOffsetBySite(st), 3.0);\n        \n        const st2 = new music21.stream.Measure();\n        st2.insert(5.0, m21o);\n        assert.equal(m21o.offset, 5.0, 'after insert at 5, offset should be 5.');\n        \n        assert.strictEqual(m21o.activeSite, st2);\n        assert.equal(m21o.getOffsetBySite(st), 3.0, 'offset of site st should be 3');\n        \n        assert.equal(m21o.getOffsetBySite(st2), 5.0);\n        m21o.setOffsetBySite(st2, 5.5);\n        assert.equal(m21o.getOffsetBySite(st2), 5.5);\n    });\n    QUnit.test('music21.base.Music21Object Contexts', assert => {\n        const m21o = new music21.base.Music21Object();\n        const m = new music21.stream.Measure();\n        const p = new music21.stream.Part();\n        const sc = new music21.stream.Score();\n        m.insert(3.0, m21o);\n        p.insert(1.0, m);\n        sc.insert(0.0, p);\n        assert.strictEqual(\n            m21o.getContextByClass('Measure'),\n            m,\n            'get context by class Measure'\n        );\n        assert.strictEqual(\n            m21o.getContextByClass('Part'),\n            p,\n            'get context by class Part'\n        );\n        assert.strictEqual(\n            m21o.getContextByClass('Score'),\n            sc,\n            'get context by class Score'\n        );\n\n        const contextS = Array.from(m21o.contextSites());\n        assert.equal(contextS.length, 3);\n        assert.deepEqual(\n            contextS[0],\n            [m, 3, 'elementsFirst'],\n            'first site is m'\n        );\n        assert.deepEqual(contextS[1], [p, 4, 'flatten'], 'second site is p');\n        assert.deepEqual(\n            contextS[2],\n            [sc, 4.0, 'elementsOnly'],\n            'third site is sc'\n        );\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.beam.Beams', assert => {\n        const a = new music21.beam.Beams();\n        a.fill('16th');\n        a.setAll('start');\n        assert.equal(a.getTypes()[0], 'start');\n        assert.equal(a.getTypes()[1], 'start');\n\n        const b = new music21.beam.Beams();\n        b.fill('16th');\n        b.setAll('start');\n        b.setByNumber(1, 'continue');\n        assert.equal(b.beamsList[0].type, 'continue');\n        b.setByNumber(2, 'stop');\n        assert.equal(b.beamsList[1].type, 'stop');\n        b.setByNumber(2, 'partial-right');\n        assert.equal(b.beamsList[1].type, 'partial');\n        assert.equal(b.beamsList[1].direction, 'right');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.chord.Chord', assert => {\n        let c = new music21.chord.Chord(['C5', 'E5', 'G5']);\n\n        assert.equal(c.length, 3, 'Checking length of Chord');\n        assert.ok(c.isMajorTriad(), 'C E G should be a major triad');\n        assert.equal(\n            c.isMinorTriad(),\n            false,\n            'C E G should not be minor triad'\n        );\n        assert.equal(c.canBeTonic(), true, 'C E G can be a tonic');\n\n        // string construction\n        c = new music21.chord.Chord('C5 E5 G5');\n        assert.equal(c.length, 3, 'Checking length of Chord');\n        assert.ok(c.isMajorTriad(), 'test chord construction from string');\n\n        c = new music21.chord.Chord(['B', 'G', 'D', 'F']);\n        assert.ok(c.isDominantSeventh());\n        \n        // test is sorted:\n        c = new music21.chord.Chord('C5 E4 G3');\n        const pitches = c.pitches;\n        assert.equal(pitches[0].nameWithOctave, 'G3');\n        assert.equal(pitches[2].nameWithOctave, 'C5');\n        \n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.clef.Clef', assert => {\n        const c1 = new music21.clef.Clef();\n        assert.ok(c1.isClassOrSubclass('Clef'), 'clef is a Clef');\n\n        const ac = new music21.clef.AltoClef();\n        assert.equal(ac.lowestLine, 25, 'first line set');\n        const n = new music21.note.Note('C#4');\n        n.setStemDirectionFromClef(ac);\n        assert.equal(n.stemDirection, 'down', 'stem direction set');\n        n.pitch.diatonicNoteNum -= 1;\n        n.setStemDirectionFromClef(ac);\n        assert.equal(n.stemDirection, 'up', 'stem direction set');\n        n.pitch.diatonicNoteNum += 1;\n        const p2 = ac.convertPitchToTreble(n.pitch);\n        assert.equal(p2.nameWithOctave, 'B#4', 'converted to treble');\n    });\n    QUnit.test('music21.clef.Clef 8va', assert => {\n        const ac = new music21.clef.Treble8vaClef();\n        assert.equal(ac.lowestLine, 38, 'first line set');\n        const n = new music21.note.Note('C#5');\n        n.setStemDirectionFromClef(ac);\n        assert.equal(n.stemDirection, 'up', 'stem direction set');\n        const p2 = ac.convertPitchToTreble(n.pitch);\n        assert.equal(p2.nameWithOctave, 'C#4', 'converted to treble');\n        const s = new music21.stream.Stream();\n        s.clef = ac;\n        s.append(n);\n        s.appendNewDOM($('body'));\n    });\n    QUnit.test('music21.clef clefFromString', assert => {\n        const tc = music21.clef.clefFromString('treble');\n        assert.ok(tc.isClassOrSubclass('TrebleClef'), 'tc is TrebleClef');\n        const tc2 = music21.clef.clefFromString('treble8va');\n        assert.ok(tc2.isClassOrSubclass('Treble8vaClef'), 'tc2 is Treble8vaClef');\n        const bc = music21.clef.clefFromString('F4');\n        assert.ok(bc.isClassOrSubclass('BassClef'), 'bc is BassClef');    \n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nconst common = music21.common;\n\nexport default function tests() {\n    QUnit.test('music21.common.posMod', assert => {\n        assert.equal(common.posMod(8, 7), 1, 'positive posMod passed');\n        assert.equal(common.posMod(-1, 7), 6, 'negative posMod passed');\n        assert.equal(common.posMod(-15, 7), 6, 'big negative posMod passed');\n    });\n\n    QUnit.test('music21.common.fromRoman', assert => {\n        assert.equal(common.fromRoman('I'), 1, 'first roman passed');\n        assert.equal(common.fromRoman('LX'), 60, 'LX roman passed');\n        assert.equal(common.fromRoman('XC'), 90, 'XC subtraction roman passed');\n        assert.equal(\n            common.fromRoman('xc'),\n            90,\n            'lowercase subtraction roman passed'\n        );\n        assert.equal(common.fromRoman('VIII'), 8, 'max RN passed');\n        assert.equal(common.fromRoman('MCDLXXXIX'), 1489, 'big roman passed');\n    });\n\n    QUnit.test('music21.common.toRoman', assert => {\n        assert.equal(common.toRoman(1), 'I', 'first roman passed');\n        assert.equal(common.toRoman(2), 'II', '2 passed');\n        assert.equal(common.toRoman(7), 'VII', '7 passed');\n        assert.equal(common.toRoman(1999), 'MCMXCIX', '1999 passed');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.duration.Duration 0', assert => {\n        const d = new music21.duration.Duration(0.0);\n        assert.equal(d.type, 'zero', 'got zero');\n        assert.equal(d.dots, 0, 'got no dots');\n        assert.equal(d.quarterLength, 0.0, 'got 0.0');\n    });\n\n    QUnit.test('music21.duration.Duration', assert => {\n        const d = new music21.duration.Duration(1.0);\n        assert.equal(d.type, 'quarter', 'got quarter note from 1.0');\n        assert.equal(d.dots, 0, 'got no dots');\n        assert.equal(d.quarterLength, 1.0, 'got 1.0 from 1.0');\n        assert.equal(d.vexflowDuration, 'q', 'vexflow q');\n        d.type = 'half';\n        assert.equal(d.type, 'half', 'got half note from half');\n        assert.equal(d.dots, 0, 'got no dots');\n        assert.equal(d.quarterLength, 2.0, 'got 2.0 from half');\n        assert.equal(d.vexflowDuration, 'h', 'vexflow h');\n        d.quarterLength = 6.0;\n        assert.equal(d.type, 'whole');\n        assert.equal(d.dots, 1, 'got one dot from 6.0');\n        assert.equal(d.quarterLength, 6.0, 'got 6.0');\n        assert.equal(d.vexflowDuration, 'wd', 'vexflow duration wd');\n\n        d.quarterLength = 7.75;\n        assert.equal(d.type, 'whole');\n        assert.equal(d.dots, 4, 'got four dots from 7.75');\n    });\n\n    QUnit.test('music21.duration.Tuplet', assert => {\n        const d = new music21.duration.Duration(0.5);\n        const t = new music21.duration.Tuplet(5, 4);        \n        assert.equal(t.tupletMultiplier(), 0.8, 'tuplet multiplier');\n        d.appendTuplet(t);\n        assert.equal(t.frozen, true, 'tuplet is frozen');\n        assert.equal(d._tuplets[0], t, 'tuplet appended');\n        assert.equal(d.quarterLength, 0.4, 'quarterLength Updated');\n\n        const d2 = new music21.duration.Duration(1 / 3);\n        assert.equal(d2.type, 'eighth', 'got eighth note from 1/3');\n        assert.equal(d2.dots, 0, 'got no dots');\n        assert.equal(d2.quarterLength, 1 / 3, 'got 1/3 from 1/3');\n        const t2 = d2.tuplets[0];\n        assert.equal(t2.numberNotesActual, 3, '3/2 tuplet');\n        assert.equal(t2.numberNotesNormal, 2, '3/2 tuplet');\n        assert.equal(t2.durationActual.quarterLength, 0.5);\n        assert.equal(t2.tupletMultiplier(), 2 / 3, '2/3 tuplet multiplier');\n        assert.equal(t2.totalTupletLength(), 1.0, 'total tuplet == 1.0');\n\n        const s = new music21.stream.Stream();\n        s.timeSignature = new music21.meter.TimeSignature('2/2');\n        for (let i = 0; i < 6; i++) {\n            const n1 = new music21.note.Note('C4');\n            n1.duration.quarterLength = 2 / 3;\n            if (i % 3 === 0) {\n                n1.articulations.push(new music21.articulations.Accent());\n            }\n            s.append(n1);\n        }\n        s.appendNewDOM();\n        assert.ok(true, 'quarter note triplets displayed');\n\n        const m6 = new music21.stream.Measure();\n        m6.renderOptions.staffLines = 1;\n        m6.timeSignature = new music21.meter.TimeSignature('2/4');\n        const n6 = new music21.note.Note('B4');\n        n6.duration.quarterLength = 2 / 3;\n        n6.duration.tuplets[0].durationNormal.type = 'eighth';\n        n6.duration.tuplets[0].tupletNormalShow = 'ratio';\n\n        const n7 = new music21.note.Note('B4');\n        n7.duration.quarterLength = 1 / 3;\n        n7.duration.tuplets[0].tupletNormalShow = 'ratio';\n\n        m6.append(n6);\n        m6.append(n7);\n        m6.append(n7.clone());\n        const n6clone = n6.clone();\n        m6.append(n6clone);\n        m6.appendNewDOM();\n        assert.ok(true, 'tuplets beginning with different type than original');\n        assert.equal(\n            n6.duration.tuplets[0] !== n6clone.duration.tuplets[0],\n            true,\n            'tuplet should not be the same object after clone'\n        );\n    });\n    QUnit.test('music21.duration.Tuplet multiple parts', assert => {\n        const s2 = new music21.stream.Measure();\n        s2.timeSignature = new music21.meter.TimeSignature('3/2');\n        const na1 = new music21.note.Note('F4');\n        const na2 = new music21.note.Note('E4');\n        s2.append(na1);\n        s2.append(na2);\n        for (let i = 0; i < 10; i++) {\n            const n1 = new music21.note.Note('F4');\n            n1.pitch.diatonicNoteNum += i;\n            n1.duration.quarterLength = 2 / 5;\n            n1.duration.tuplets[0].tupletNormalShow = 'ratio';\n            if (i % 5 === 0) {\n                n1.articulations.push(new music21.articulations.Accent());\n            }\n            s2.append(n1);\n        }\n        const s3 = new music21.stream.Measure();\n        s3.timeSignature = new music21.meter.TimeSignature('3/2');\n        s3.append(new music21.note.Note('B5', 6.0));\n        const p = new music21.stream.Part();\n        p.append(s2);\n        p.append(s3);\n\n        const m4 = new music21.stream.Measure();\n        m4.timeSignature = new music21.meter.TimeSignature('3/2');\n        m4.append(new music21.note.Note('B3', 6.0));\n        const m5 = new music21.stream.Measure();\n        m5.timeSignature = new music21.meter.TimeSignature('3/2');\n        m5.append(new music21.note.Note('B3', 6.0));\n        const p2 = new music21.stream.Part();\n        p2.append(m4);\n        p2.append(m5);\n\n        const sc = new music21.stream.Score();\n        sc.insert(0, p);\n        sc.insert(0, p2);\n        sc.appendNewDOM();\n        assert.ok(true, '5:4 tuplets in 3/2 with multiple parts');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.dynamics.Dynamic', assert => {\n        let dynamic = new music21.dynamics.Dynamic('pp');\n        assert.equal(dynamic.value, 'pp', 'matching dynamic');\n\n        dynamic = new music21.dynamics.Dynamic(0.98);\n        assert.equal(dynamic.value, 'fff', 'number conversion successful');\n        assert.equal(dynamic.volumeScalar, 0.98, 'correct volume');\n        assert.equal(dynamic.longName, 'fortississimo', 'matching long name');\n        assert.equal(\n            dynamic.englishName,\n            'extremely loud',\n            'matching english names'\n        );\n\n        dynamic = new music21.dynamics.Dynamic('other');\n        assert.equal(dynamic.value, 'other', 'record non standard dynamic');\n        assert.equal(\n            dynamic.longName,\n            undefined,\n            'no long name for non standard dynamic'\n        );\n        assert.equal(\n            dynamic.englishName,\n            undefined,\n            'no english name for non standard dynamic'\n        );\n\n        dynamic.value = 0.18;\n        assert.equal(dynamic.value, 'pp', 'change in dynamic');\n        assert.equal(dynamic.volumeScalar, 0.18, 'change in volume');\n\n        dynamic.value = 'other';\n        assert.equal(dynamic.value, 'other', 'change to non standard');\n        assert.equal(\n            dynamic.longName,\n            undefined,\n            'change to non standard dynamic'\n        );\n        assert.equal(\n            dynamic.englishName,\n            undefined,\n            'change to non standard dynamic'\n        );\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nconst figuredBass = music21.figuredBass;\n\nexport default function tests() {\n    QUnit.test('music21.figuredBass.Notation', assert => {\n        const n1 = new figuredBass.Notation('4+,2');\n        assert.equal(n1.notationColumn, '4+,2');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nconst interval = music21.interval;\nconst Interval = music21.interval.Interval;\n\nexport default function tests() {\n    QUnit.test('music21.interval.intervalFromGenericAndChromatic', assert => {\n        let i;\n        i = interval.intervalFromGenericAndChromatic(2, 2);\n        assert.equal(i.name, 'M2');\n    });\n    QUnit.test('music21.interval.Interval', assert => {\n        let i;\n        i = new Interval('P5');\n        assert.equal(i.name, 'P5', 'name passed');\n        assert.equal(i.niceName, 'Perfect Fifth', 'nice name passed');\n        assert.equal(i.generic.simpleDirected, 5);\n    });\n    QUnit.test('music21.interval.DiatonicInterval', assert => {\n        let i;\n        i = new interval.DiatonicInterval('P', 5);\n        assert.equal(i.specifier, 1);\n        assert.equal(i.specifierAbbreviation, 'P');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.key.convertKeyStringToMusic21KeyString', assert => {\n        const conv = music21.key.convertKeyStringToMusic21KeyString;\n        assert.equal(conv('A'), 'A', 'normal string passed');\n        assert.equal(conv('a-'), 'a-', 'normal string passed');\n        assert.equal(conv('Bb'), 'B-', 'Bb passed');\n        assert.equal(conv('bb'), 'b-', 'bb passed');\n        assert.equal(conv('b'), 'b', 'b minor passed');\n        assert.equal(conv('B'), 'B', 'B major passed');\n        assert.equal(conv('Eb'), 'E-', 'E- major passed');\n    });\n\n    QUnit.test('music21.key.Key', assert => {\n        const testSharps = [\n            // sharps, mode, given name, given mode\n            [0, 'minor', 'a'],\n            [0, 'major', 'C'],\n            [0, 'major'],\n            [6, 'major', 'F#'],\n            [3, 'minor', 'f#'],\n            [6, 'major', 'f#', 'major'],\n            [-2, 'major', 'B-'],\n            [-5, 'minor', 'b-'],\n        ];\n        for (let i = 0; i < testSharps.length; i++) {\n            const thisTest = testSharps[i];\n            const expectedSharps = thisTest[0];\n            const expectedMode = thisTest[1];\n            const givenKeyName = thisTest[2];\n            const givenMode = thisTest[3];\n            const k = new music21.key.Key(givenKeyName, givenMode);\n            const foundSharps = k.sharps;\n            const foundMode = k.mode;\n            assert.equal(\n                foundSharps,\n                expectedSharps,\n                'Test sharps: ' + givenKeyName + ' (mode: ' + givenMode + ') '\n            );\n            assert.equal(\n                foundMode,\n                expectedMode,\n                'Test mode: ' + givenKeyName + ' (mode: ' + givenMode + ') '\n            );\n        }\n\n        const k = new music21.key.Key('f#');\n        let s = k.getScale().getPitches();\n        assert.equal(s[2].nameWithOctave, 'A4', 'test minor scale');\n        assert.equal(s[6].nameWithOctave, 'E5');\n        s = k.getScale('major').getPitches();\n        assert.equal(s[2].nameWithOctave, 'A#4', 'test major scale');\n        assert.equal(s[6].nameWithOctave, 'E#5');\n        s = k.getScale('harmonic minor').getPitches();\n        assert.equal(s[2].nameWithOctave, 'A4', 'test harmonic minor scale');\n        assert.equal(s[5].nameWithOctave, 'D5');\n        assert.equal(s[6].nameWithOctave, 'E#5');\n\n        assert.equal(k.width, 42, 'checking width');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.meter.TimeSignature', assert => {\n        const m = new music21.meter.TimeSignature('4/4');\n\n        assert.equal(m.ratioString, '4/4', 'ratioString matches');\n        assert.equal(m.barDuration.quarterLength, 4.0, 'bar lasts 4.0 ql');\n        assert.deepEqual(m.beatGroups, [[2, 8]], 'beatGroups check out');\n        assert.equal(m.beatCount, 4, 'beat count is 4');\n        assert.equal(\n            m.beatDuration.type,\n            'quarter',\n            'beatDuration type is quarter'\n        );\n        assert.equal(m.beatDuration.dots, 0, 'beatDuration has not dots');\n    });\n\n    QUnit.test('music21.meter.TimeSignature beams', assert => {\n        const m = new music21.meter.TimeSignature('4/4');\n        const [start, end] = m.offsetToSpan(3.2);\n        assert.equal(start, 3.0, 'beat starts at 3');\n        assert.equal(end, 4.0, 'beat ends at 4');\n      \n    });\n    \n    QUnit.test('music21.meter.TimeSignature compound', assert => {\n        const m = new music21.meter.TimeSignature('6/8');\n\n        assert.equal(m.ratioString, '6/8', 'ratioString matches');\n        assert.equal(m.barDuration.quarterLength, 3.0, 'bar lasts 3.0 ql');\n        assert.deepEqual(\n            m.beatGroups,\n            [[3, 8], [3, 8]],\n            'beatGroups check out'\n        );\n        assert.equal(m.beatCount, 2, 'beat count is 2');\n        assert.equal(\n            m.beatDuration.type,\n            'quarter',\n            'beatDuration type is quarter'\n        );\n        assert.equal(m.beatDuration.dots, 1, 'beatDuration has dot');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.note.Note', assert => {\n        const n = new music21.note.Note('D#5');\n\n        assert.equal(n.pitch.name, 'D#', 'Pitch Name set to D#');\n        assert.equal(n.pitch.step, 'D', 'Pitch Step set to D');\n        assert.equal(n.pitch.octave, 5, 'Pitch octave set to 5');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.pitch.Accidental', assert => {\n        const a = new music21.pitch.Accidental('-');\n        assert.equal(a.alter, -1.0, 'flat alter passed');\n        assert.equal(a.name, 'flat', 'flat name passed');\n        a.name = 'sharp';\n        assert.equal(a.alter, 1.0, 'flat alter passed');\n        assert.equal(a.name, 'sharp', 'flat name passed');\n\n        const b = new music21.pitch.Accidental('b');\n        assert.equal(b.alter, -1.0, 'flat alter passed');\n        assert.equal(b.name, 'flat', 'flat name passed');\n    });\n\n    QUnit.test('music21.pitch.Pitch', assert => {\n        const p = new music21.pitch.Pitch('D#5');\n        assert.equal(p.name, 'D#', 'Pitch Name set to D#');\n        assert.equal(p.step, 'D', 'Pitch Step set to D');\n        assert.equal(p.octave, 5, 'Pitch octave set to 5');\n        assert.equal(p.nameWithOctave, 'D#5', 'Name with octave');\n        const c = new music21.clef.AltoClef();\n        const vfn = p.vexflowName(c);\n        assert.equal(vfn, 'C#/6', 'Vexflow name set');\n    });\n\n    QUnit.test('music21.pitch.Pitch enharmonics', assert => {\n        const es = new music21.pitch.Pitch('E-5');\n        const dis = es.getLowerEnharmonic();\n        assert.equal(es.name, 'E-', 'Original Pitch Name unchanged');\n        assert.equal(dis.name, 'D#', 'Pitch Name set to D#');\n        assert.equal(dis.step, 'D', 'Pitch Step set to D');\n        assert.equal(dis.octave, 5, 'Pitch octave set to 5');\n\n        // inPlace\n        dis.getHigherEnharmonic(true); // inPlace\n        assert.equal(dis.nameWithOctave, es.nameWithOctave);\n\n        const cDblSharp = new music21.pitch.Pitch('C##5');\n        const dNatural = cDblSharp.getHigherEnharmonic();\n        assert.equal(cDblSharp.ps, dNatural.ps);\n        assert.equal(dNatural.name, 'D', 'C## higher is D');\n        assert.equal(dNatural.octave, 5, 'Octave is 5');\n        const bTripleSharp = cDblSharp.getLowerEnharmonic();\n        assert.equal(cDblSharp.ps, bTripleSharp.ps);\n        assert.equal(bTripleSharp.octave, 4, 'Octave is 4 [B###]');\n\n        const cDblFlat = new music21.pitch.Pitch('C--5');\n        const bFlat = cDblFlat.getLowerEnharmonic();\n        assert.equal(cDblFlat.ps, bFlat.ps);\n\n\n        // once octaveless pitches exist...\n//        const octaveless = new music21.pitch.Pitch('C');\n//        const bsharp = octaveless.getLowerEnharmonic();\n//        assert.equal(octaveless.octave, undefined, 'octave should be undefined');\n//        assert.equal(bsharp.octave, undefined, 'octave should be undefined');\n//        assert.equal(bsharp.name, 'B#');\n\n    });\n\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.prebase.ProtoM21Object classes', assert => {\n        const n = new music21.note.Note();\n        assert.deepEqual(n.classes, [\n            'Note',\n            'NotRest',\n            'GeneralNote',\n            'Music21Object',\n            'ProtoM21Object',\n            'object',\n        ]);\n        assert.ok(n.isClassOrSubclass('Note'));\n        assert.ok(n.isClassOrSubclass('GeneralNote'));\n        assert.notOk(n.isClassOrSubclass('Rest'));\n    });\n    QUnit.test('clone', assert => {\n        const n = new music21.note.Note('D4');\n        const n2 = n.clone();\n        n.pitch.octave = 5;\n        assert.equal(n2.pitch.octave, 4);\n        const n3 = n.clone(false);\n        n.pitch.octave = 6;\n        assert.equal(n3.pitch.octave, 6);\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.roman.expandShortHand', assert => {\n        let outGroups;\n        outGroups = music21.roman.expandShortHand('64');\n        assert.equal(outGroups.length, 2);\n        assert.equal(outGroups[0], 6);\n        assert.equal(outGroups[1], 4);\n\n        outGroups = music21.roman.expandShortHand('973');\n        assert.equal(outGroups.toString(), '9,7,3');\n\n        outGroups = music21.roman.expandShortHand('11b3');\n        assert.equal(outGroups.toString(), '11,b3');\n\n        outGroups = music21.roman.expandShortHand('b13#9-6');\n        assert.equal(outGroups.toString(), 'b13,#9,-6');\n\n        outGroups = music21.roman.expandShortHand('-');\n        assert.equal(outGroups.toString(), '5,-3');\n\n        outGroups = music21.roman.expandShortHand('6/4');\n        assert.equal(outGroups.toString(), '6,4');\n\n        // no shorthand expansion here\n        outGroups = music21.roman.expandShortHand('7');\n        assert.equal(outGroups.toString(), '7');\n\n        outGroups = music21.roman.expandShortHand('4/3');\n        assert.equal(outGroups.toString(), '4,3');\n\n        outGroups = music21.roman.expandShortHand('6');\n        assert.equal(outGroups.toString(), '6');\n    });\n    QUnit.test('music21.roman.correctSuffixForChordQuality', assert => {\n        let c;\n        c = new music21.chord.Chord('E3 C4 G4');\n        assert.equal(music21.roman.correctSuffixForChordQuality(c, '6'), '6');\n        c = new music21.chord.Chord('E3 C4 G-4');\n        assert.equal(music21.roman.correctSuffixForChordQuality(c, '6'), 'o6');\n    });\n    QUnit.test('music21.roman.RomanNumeral', assert => {\n        const t1 = 'IV';\n        let rn1 = new music21.roman.RomanNumeral(t1, 'F');\n        assert.equal(rn1.scaleDegree, 4, 'test scale dgree of F IV');\n        const rnKey = rn1.key;\n        assert.equal(rnKey.tonic.name, 'F', 'test scale is F');\n        assert.equal(rn1.root().name, 'B-', 'test root of F IV');\n        assert.equal(rn1.impliedQuality, 'major', 'test quality is major');\n        assert.equal(rn1.pitches.length, 3, 'should be three pitches');\n        assert.equal(rn1.pitches[0].name, 'B-', 'test pitches[0] == B-');\n        assert.equal(rn1.pitches[1].name, 'D', 'test pitches[1] == D');\n        assert.equal(rn1.pitches[2].name, 'F', 'test pitches[2] == F');\n        assert.equal(rn1.figureAndKey, 'IV in F major');\n        assert.equal(rn1.degreeName, 'Subdominant', 'test is Subdominant');\n\n        let t2;\n        t2 = 'viio7';\n        assert.equal(t2, 'viio7', 'beginning viio7 test');\n        rn1 = new music21.roman.RomanNumeral(t2, 'a');\n        assert.equal(rn1.scaleDegree, 7, 'test scale dgree of A viio7');\n        assert.equal(rn1.root().name, 'G#', 'test root name == G#');\n        assert.equal(rn1.impliedQuality, 'diminished', 'implied quality');\n        assert.equal(rn1.pitches[0].name, 'G#', 'test viio7 pitches[0] == G#');\n        assert.equal(rn1.pitches[1].name, 'B', 'test viio7 pitches[1] == B');\n        assert.equal(rn1.pitches[2].name, 'D', 'test viio7 pitches[2] == D');\n        assert.equal(rn1.pitches[3].name, 'F', 'test viio7 pitches[3] == F');\n        assert.equal(rn1.degreeName, 'Leading-tone', 'test is Leading-tone');\n        assert.equal(rn1.figureAndKey, 'viio7 in a minor');\n\n        t2 = 'V7';\n        rn1 = new music21.roman.RomanNumeral(t2, 'a');\n        assert.equal(rn1.scaleDegree, 5, 'test scale dgree of a V7');\n        assert.equal(rn1.romanNumeralAlone, 'V', 'test romanNumeralAlone');\n        assert.equal(rn1.root().name, 'E', 'root name is E');\n        assert.equal(rn1.impliedQuality, 'major', 'implied quality major');\n        assert.equal(rn1.pitches[0].name, 'E', 'test pitches[0] == E');\n        assert.equal(rn1.pitches[1].name, 'G#', 'test pitches[1] == G#');\n        assert.equal(rn1.pitches[2].name, 'B', 'test pitches[2] == B');\n        assert.equal(rn1.pitches[3].name, 'D', 'test pitches[3] == D');\n        assert.equal(rn1.degreeName, 'Dominant', 'test is Dominant');\n\n        t2 = 'VII';\n        rn1 = new music21.roman.RomanNumeral(t2, 'f#');\n        assert.equal(rn1.scaleDegree, 7, 'test scale dgree of a VII');\n        assert.equal(rn1.root().name, 'E', 'root name is E');\n        assert.equal(rn1.impliedQuality, 'major', 'implied quality major');\n        assert.equal(rn1.pitches[0].name, 'E', 'test pitches[0] == E');\n        assert.equal(rn1.pitches[1].name, 'G#', 'test pitches[1] == G#');\n        assert.equal(rn1.pitches[2].name, 'B', 'test pitches[2] == B');\n        assert.equal(rn1.degreeName, 'Subtonic', 'test is Subtonic');\n\n        t2 = '#IV';\n        rn1 = new music21.roman.RomanNumeral(t2, 'F');\n        assert.equal(rn1.scaleDegree, 4, 'test scale dgree of F #IV');\n        assert.equal(rn1.root().name, 'B', 'test root of F #IV');\n        assert.equal(rn1.impliedQuality, 'major', 'test quality is major');\n        assert.equal(rn1.pitches.length, 3, 'should be three pitches');\n        assert.equal(rn1.pitches[0].name, 'B', 'test pitches[0] == B');\n        assert.equal(rn1.pitches[1].name, 'D#', 'test pitches[1] == D#');\n        assert.equal(rn1.pitches[2].name, 'F#', 'test pitches[2] == F#');\n        assert.equal(rn1.figureAndKey, '#IV in F major');\n        assert.equal(rn1.degreeName, 'Subdominant', 'test is Subdominant');\n\n        rn1 = new music21.roman.RomanNumeral('Cad64', 'c');\n        assert.equal(rn1.scaleDegree, 1, 'test scale dgree of Cad64');\n        assert.equal(rn1.root().name, 'C', 'test root of Cad64');\n        assert.equal(rn1.bass().name, 'G', 'test bass of Cad64');\n        assert.equal(rn1.third.name, 'E-', 'test third of Cad64');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - inversions', assert => {\n        const t1 = 'IV6';\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral(t1, 'F');\n        assert.equal(rn1.scaleDegree, 4, 'test scale dgree of F IV6');\n        const rnKey = rn1.key;\n        assert.equal(rnKey.tonic.name, 'F', 'test scale is F');\n        assert.equal(rn1.root().name, 'B-', 'test root of F IV6');\n        assert.equal(rn1.bass().name, 'D', 'test bass of F IV6');\n        assert.equal(rn1.impliedQuality, 'major', 'test quality is major');\n        assert.equal(rn1.pitches[0].name, 'D', 'test pitches[0] == D');\n        assert.ok(rn1.pitches.map(p => p.name).includes('B-'), 'B- in pitches');\n        assert.ok(rn1.pitches.map(p => p.name).includes('F'), 'F in pitches');\n        assert.equal(rn1.degreeName, 'Subdominant', 'test is Subdominant');\n\n        let t2 = 'V43';\n        rn1 = new music21.roman.RomanNumeral(t2, 'a');\n        assert.equal(rn1.scaleDegree, 5, 'test scale dgree of a V43');\n        assert.equal(rn1.romanNumeralAlone, 'V', 'test romanNumeralAlone');\n        assert.equal(rn1.root().name, 'E', 'root name is E');\n        assert.equal(rn1.bass().name, 'B', 'bass name is B');\n        assert.equal(rn1.impliedQuality, 'major', 'implied quality major');\n        assert.equal(rn1.pitches[0].name, 'B', 'test pitches[0] == B');\n        assert.equal(rn1.pitches[1].name, 'D', 'test pitches[1] == D');\n        assert.equal(rn1.pitches[2].name, 'E', 'test pitches[2] == E');\n        assert.equal(rn1.pitches[3].name, 'G#', 'test pitches[3] == G#');\n        assert.equal(rn1.degreeName, 'Dominant', 'test is Dominant');\n\n        t2 = 'ii/o65';\n        rn1 = new music21.roman.RomanNumeral(t2, 'g');\n        assert.equal(rn1.scaleDegree, 2, 'test scale dgree of a ii/o65');\n        assert.equal(\n            rn1.romanNumeralAlone,\n            'ii',\n            'test romanNumeralAlone is ii'\n        );\n        assert.equal(rn1.root().name, 'A', 'root name is A');\n        assert.equal(rn1.bass().name, 'C', 'bass name is C');\n        assert.equal(\n            rn1.impliedQuality,\n            'half-diminished',\n            'implied quality half-diminished'\n        );\n        assert.equal(rn1.pitches[0].name, 'C', 'test ii/o65 pitches[0] == C');\n        assert.equal(rn1.pitches[1].name, 'E-', 'test ii/o65 pitches[1] == E-');\n        assert.equal(rn1.pitches[2].name, 'G', 'test ii/o65 pitches[2] == G');\n        assert.equal(rn1.pitches[3].name, 'A', 'test ii/o65 pitches[3] == A');\n        assert.equal(rn1.degreeName, 'Supertonic', 'test is Supertonic');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - front alterations', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('#II', 'C');\n        assert.equal(rn1.root().name, 'D#', 'root name is D#');\n        assert.equal(rn1.bass().name, 'D#', 'bass name is D#');\n        assert.equal(rn1.pitches[1].name, 'F##', 'next pitch is F##');\n        assert.equal(rn1.pitches[2].name, 'A#', 'last pitch is A#');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - neapolitan', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('N6', 'C');\n        assert.equal(rn1.root().name, 'D-', 'root name is D-');\n        assert.equal(rn1.bass().name, 'F', 'bass name is F');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - omittedSteps', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('V7[no5][no3]', 'C');\n        assert.equal(rn1.omittedSteps[0], 5, '5 is omitted');\n        assert.equal(rn1.omittedSteps[1], 3, '3 is omitted');\n        assert.equal(rn1.root().name, 'G', '#1 root name is G');\n        assert.equal(rn1.pitches.length, 2, '#1 length is 2');\n        assert.equal(rn1.pitches[0].name, 'G');\n        assert.equal(rn1.pitches[1].name, 'F');\n\n        rn1 = new music21.roman.RomanNumeral('V13[no11][no9][no7]', 'C');\n        assert.equal(rn1.omittedSteps[0], 4, '4 =11 is omitted');\n        assert.equal(rn1.omittedSteps[1], 2, '2 =9 is omitted');\n        assert.equal(rn1.omittedSteps[2], 7, '7 is omitted');\n        // root of 13th is undefined...\n        // assert.equal(rn1.root().name, 'G', 'root is G');\n        assert.equal(rn1.bass().name, 'G', 'bass is G');\n        assert.equal(rn1.pitches.length, 4, '#2 length is 4');\n        assert.equal(rn1.pitches[0].name, 'G', 'first pitch is G');\n        assert.equal(rn1.pitches[1].name, 'B');\n        assert.equal(rn1.pitches[2].name, 'D');\n        assert.equal(rn1.pitches[3].name, 'E');\n    });\n\n    QUnit.test('music21.roman.RomanNumeral - bracketedAlterations', assert => {\n        let rn1;\n        rn1 = new music21.roman.RomanNumeral('V7[#5][b3]', 'C');\n        assert.deepEqual(\n            rn1.bracketedAlterations[0],\n            ['#', 5],\n            `5 is sharped: ${rn1.bracketedAlterations[0]}`\n        );\n        assert.deepEqual(\n            rn1.bracketedAlterations[1],\n            ['b', 3],\n            `3 is flattened:  ${rn1.bracketedAlterations[1]}`\n        );\n        assert.equal(rn1.root().name, 'G', '#1 root name is G');\n        assert.equal(rn1.pitches.length, 4, '#1 length is 3');\n        assert.equal(rn1.third.name, 'B-', 'third is B-');\n        assert.equal(rn1.fifth.name, 'D#', 'fifth is D#');\n    });\n\n    QUnit.test(\n        'music21.roman.RomanNumeral - vio, VI, vii, VII in minor',\n        assert => {\n            let rn1;\n            rn1 = new music21.roman.RomanNumeral('vio', 'c');\n            assert.equal(rn1.root().name, 'A', 'root name is A');\n            assert.equal(rn1.fifth.name, 'E-', 'fifth name is E-');\n\n            rn1 = new music21.roman.RomanNumeral('vi', 'c');\n            assert.equal(rn1.root().name, 'A', 'root name is A');\n            assert.equal(rn1.fifth.name, 'E', 'fifth name is E');\n\n            rn1 = new music21.roman.RomanNumeral('VI', 'c');\n            assert.equal(rn1.root().name, 'A-', 'root name is A-');\n            assert.equal(rn1.fifth.name, 'E-', 'fifth name is E-');\n\n            rn1 = new music21.roman.RomanNumeral('viio', 'c');\n            assert.equal(rn1.root().name, 'B', 'root name is B');\n            assert.equal(rn1.fifth.name, 'F', 'fifth name is F');\n\n            rn1 = new music21.roman.RomanNumeral('vii', 'c');\n            assert.equal(rn1.root().name, 'B', 'root name is B');\n            assert.equal(rn1.fifth.name, 'F#', 'fifth name is F#');\n\n            rn1 = new music21.roman.RomanNumeral('VII', 'c');\n            assert.equal(rn1.root().name, 'B-', 'root name is B-');\n            assert.equal(rn1.fifth.name, 'F', 'fifth name is F');\n        }\n    );\n\n    QUnit.test(\n        'music21.roman.RomanNumeral - secondary roman numerals',\n        assert => {\n            let rn1;\n            rn1 = new music21.roman.RomanNumeral('V/V', 'C');\n            assert.equal(rn1.root().name, 'D', 'root name is D');\n            assert.equal(rn1.bass().name, 'D', 'bass name is D');\n            assert.equal(rn1.pitches[1].name, 'F#', 'third is F#');\n\n            rn1 = new music21.roman.RomanNumeral('V65/V', 'C');\n            assert.equal(rn1.root().name, 'D', 'root name is F#');\n            assert.equal(rn1.bass().name, 'F#', 'bass name is F#');\n\n            rn1 = new music21.roman.RomanNumeral('V65/IV', 'C');\n            assert.equal(rn1.figure, 'V65/IV', 'figure is unchanged');\n            assert.equal(\n                rn1.secondaryRomanNumeral.figure,\n                'IV',\n                'secondary to IV'\n            );\n            assert.equal(rn1.secondaryRomanNumeralKey.tonic.name, 'F');\n            assert.equal(rn1.root().name, 'C', 'root name is C');\n            assert.equal(rn1.bass().name, 'E', 'bass name is E');\n            assert.equal(rn1.seventh.name, 'B-', 'seventh is B-');\n\n            rn1 = new music21.roman.RomanNumeral('V7/V/V', 'B-');\n            assert.equal(rn1.root().name, 'G');\n            assert.equal(rn1.third.name, 'B');\n            assert.equal(rn1.secondaryRomanNumeral.figure, 'V/V');\n            assert.equal(\n                rn1.secondaryRomanNumeral.secondaryRomanNumeral.figure,\n                'V'\n            );\n        }\n    );\n\n    QUnit.test('music21.roman.RomanNumeral - augmented6ths', assert => {\n        let k = new music21.key.Key('a');\n        const p = rn => {\n            const rn1 = new music21.roman.RomanNumeral(rn, k);\n            let x = '';\n            for (const pi of rn1.pitches) {\n                x += pi.nameWithOctave + ' ';\n            }\n            return x.trim();\n        };\n        const empty = new music21.roman.RomanNumeral();\n        const out = empty._parseRNAloneAmidstAug6(\n            'It6',\n            new music21.key.Key('C')\n        );\n        assert.equal(empty.useImpliedScale, true);\n        assert.equal(out[0], '6');\n        assert.equal(out[1].mode, 'minor');\n        assert.equal(empty.scaleDegree, 4);\n        assert.deepEqual(empty.bracketedAlterations[0], ['#', 1]);\n\n        assert.equal(p('V'), 'E5 G#5 B5');\n        assert.equal(p('It6'), 'F5 A5 D#6');\n        assert.equal(p('Ger65'), 'F5 A5 C6 D#6');\n        assert.equal(p('Ger6/5'), 'F5 A5 C6 D#6');\n        assert.equal(p('Fr43'), 'F5 A5 B5 D#6');\n        assert.equal(p('Fr4/3'), 'F5 A5 B5 D#6');\n        assert.equal(p('Sw43'), 'F5 A5 B#5 D#6');\n\n        k = new music21.key.Key('A');\n        assert.equal(p('V'), 'E5 G#5 B5');\n        assert.equal(p('It6'), 'F5 A5 D#6');\n        assert.equal(p('Ger65'), 'F5 A5 C6 D#6');\n        assert.equal(p('Ger6/5'), 'F5 A5 C6 D#6');\n        assert.equal(p('Fr43'), 'F5 A5 B5 D#6');\n        assert.equal(p('Fr4/3'), 'F5 A5 B5 D#6');\n        assert.equal(p('Sw43'), 'F5 A5 B#5 D#6');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.scale.Scale', assert => {\n        const sc = new music21.scale.Scale();\n        assert.ok(sc.classes.includes('Scale'));\n    });\n    QUnit.test('music21.scale.AbstractDiatonicScale', assert => {\n        const sc = new music21.scale.AbstractDiatonicScale('major');\n        const net = sc._net;\n        assert.equal(net.length, 7);\n        assert.equal(net[0].name, 'M2');\n        const p = new music21.pitch.Pitch('A-');\n        const pitches = sc.getRealization(p);\n        assert.equal(pitches.length, 8);\n        assert.equal(pitches[3].name, 'D-');\n        assert.equal(sc.getPitchFromNodeDegree(p, undefined, 4).name, 'D-');\n    });\n\n    QUnit.test('music21.scale.MajorScale', assert => {\n        const sc = new music21.scale.MajorScale('F');\n        assert.equal(sc.tonic.name, 'F');\n        const pitches = sc.getPitches();\n        assert.equal(pitches[0].name, 'F');\n        assert.equal(pitches[1].name, 'G');\n        assert.equal(pitches[2].name, 'A');\n        assert.equal(pitches[3].name, 'B-');\n        assert.equal(pitches[4].name, 'C');\n        assert.equal(pitches[5].name, 'D');\n        assert.equal(pitches[6].name, 'E');\n        assert.equal(pitches[7].name, 'F');\n        assert.equal(sc.pitchFromDegree(5).name, 'C');\n        assert.equal(sc.getScaleDegreeFromPitch('B-'), 4);\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.sites.SiteRef', assert => {\n        const sr = new music21.sites.SiteRef();\n        assert.ok(!sr.isDead);\n        assert.equal(\n            sr.site,\n            undefined,\n            'SiteRef should start undefined'\n        );\n        const st = new music21.stream.Measure();\n        sr.site = st;\n        sr.classString = st.classes[0];\n        assert.equal(sr.site, st);\n        assert.equal(sr.classString, 'Measure');\n    });\n\n    QUnit.test('music21.sites.Sites', assert => {\n        const s = new music21.sites.Sites();\n        assert.equal(s.length, 1, 'empty sites has length 1');\n        const st = new music21.stream.Measure();\n        st.number = 12;\n        s.add(st);\n        assert.equal(s.length, 2, 'should have two sites now');\n        assert.ok(s.includes(st));\n        const first = s._keysByTime()[0];\n        assert.equal(first, music21.sites.getId(st));\n\n        let af;\n        af = Array.from(s.yieldSites(false, st));\n        assert.equal(af.length, 2);\n        assert.strictEqual(af[0], st);\n        af = Array.from(s.yieldSites(false, st, true));\n        assert.equal(af.length, 1);\n        assert.strictEqual(af[0], st);\n\n        const mNum = s.getAttrByName('number');\n        assert.equal(mNum, 12, 'measure number should be 12');\n\n        assert.strictEqual(s.getObjByClass('Measure'), st);\n        assert.strictEqual(s.getObjByClass('Stream'), st);\n        assert.notOk(s.getObjByClass('Score'));\n\n        s.clear();\n        assert.equal(s.length, 1);\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.stream.Stream', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        s.append(new music21.note.Note('D#5'));\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.append(n);\n        assert.equal(s.length, 3, 'Simple stream length');\n        \n        // test iteration.\n        for (const n of s) {\n            const oct = n.pitch.octave;\n            assert.equal(oct, 5, 'all notes are octave 5');\n        }\n    });\n    QUnit.test('music21.stream.Stream clone', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        s.append(new music21.note.Note('D#5'));\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.insert(5.0, n);\n        const t = s.clone(true);     \n        assert.equal(t.length, s.length);\n        for (let i = 0; i < t.length; i++) {\n            const tEl = t.get(i);\n            const sEl = s.get(i);\n            assert.equal(tEl.offset, sEl.offset);\n            assert.equal(tEl.pitch.name, sEl.pitch.name);\n        }\n    });    \n    \n    \n    QUnit.test('music21.stream.Stream iterate and forEach', assert => {        \n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        s.append(new music21.note.Note('D#5'));\n        const names = [];\n        const indexes = [];\n        const lengths = [];        \n        s.forEach((el, i, stream) => {\n            names.push(el.name);\n            indexes.push(i);\n            lengths.push(stream.length);\n        });\n        assert.deepEqual(names, ['C#', 'D#']);\n        assert.deepEqual(indexes, [0, 1]);\n        assert.deepEqual(lengths, [2, 2]);        \n    });\n    \n    QUnit.test('music21.stream.Stream remove, index, replace, set', assert => {\n        const s = new music21.stream.Stream();\n        const cs = new music21.note.Note('C#5');\n        s.append(cs);\n        const d = new music21.note.Note('D#5');\n        s.append(d); \n        const n = new music21.note.Note('F5'); \n        s.append(n);\n        const lastN = new music21.note.Note('G5');\n        s.append(lastN);\n        \n        assert.equal(s.index(d), 1, 'index of d is 1');\n        assert.equal(s.index(n), 2, 'index of n is 2');\n        assert.equal(s.length, 4, 'stream length is 4');\n        \n        s.remove(n);\n        assert.equal(s.index(d), 1, 'index of d is still 1');\n        assert.equal(s.length, 3, 'stream length is 3');\n        assert.throws(() => { s.index(n) }, /cannot find/, 'n is no longer in s');\n\n        assert.equal(d.offset, 1.0, 'd offset is 1.0');\n        const r = new music21.note.Rest();\n        assert.equal(r.offset, 0.0, 'naiveOffset should be 0.0'); \n        \n        s.replace(d, r);\n        assert.equal(d.offset, 0.0, 'offset of d should now be 0.0');\n        assert.equal(r.offset, 1.0, 'offset of r should be d-old offset of 1');\n        assert.equal(s.index(r), 1, 'index of r in s should be 1');\n        assert.throws(() => { s.index(d) }, /cannot find/, 'd is no longer in s');        \n        \n        const r2 = new music21.note.Rest();\n        r2.offset = 10; // ignored\n        s.set(0, r2);\n        assert.deepEqual(s.get(0), r2);\n        assert.equal(s.get(0).offset, 0.0, 'offset is now position in stream.'); \n        assert.throws(() => { cs.getOffsetBySite(s) }, /not stored/, 'cs is no longer in s');        \n    });\n\n    QUnit.test('music21.stream.Stream.elements from stream', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        const d = new music21.note.Note('D#5');\n        s.insert(10, d);\n        const t = new music21.stream.Stream();\n        t.elements = s;\n        assert.deepEqual(t.get(1), d, 't[1] is d');\n        assert.equal(t.get(1).offset, 10, 'd offset retained');\n    });    \n    \n    QUnit.test('music21.stream.Stream.duration', assert => {\n        const s = new music21.stream.Stream();\n        assert.equal(s.duration.quarterLength, 0, 'EmptyString QuarterLength');\n\n        s.append(new music21.note.Note('C#5'));\n        assert.equal(s.duration.quarterLength, 1.0, '1 quarter QuarterLength');\n\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.append(n);\n        assert.equal(s.highestTime, 3.0);\n        assert.equal(s.duration.quarterLength, 3.0, '3 quarter QuarterLength');\n\n        s.duration = new music21.duration.Duration(3.0);\n        s.append(new music21.note.Note('D#5'));\n        assert.equal(\n            s.duration.quarterLength,\n            3.0,\n            'overridden duration -- remains'\n        );\n\n        const sc = new music21.stream.Score();\n        const p1 = new music21.stream.Part();\n        const p2 = new music21.stream.Part();\n        const m1 = new music21.stream.Measure();\n        const m2 = new music21.stream.Measure();\n        const n11 = new music21.note.Note();\n        const n12 = new music21.note.Note();\n        n12.duration.type = 'half';\n        const n13 = new music21.note.Note();\n        n13.duration.type = 'eighth'; // incomplete measure\n        m1.append(n11);\n        m1.append(n12);\n        m1.append(n13);\n        const n21 = new music21.note.Note();\n        n21.duration.type = 'whole';\n        m2.append(n21);\n        p1.append(m1);\n        p2.append(m2);\n        sc.insert(0, p1);\n        sc.insert(0, p2);\n        assert.equal(\n            sc.duration.quarterLength,\n            4.0,\n            'duration of streams with nested parts'\n        );\n        assert.equal(\n            sc.flat.duration.quarterLength,\n            4.0,\n            'duration of flat stream with overlapping notes'\n        );\n        n21.duration.type = 'half';\n        assert.equal(\n            sc.duration.quarterLength,\n            3.5,\n            'new music21.duration with nested parts'\n        );\n        assert.equal(\n            sc.flat.duration.quarterLength,\n            3.5,\n            'new music21.duration of flat stream'\n        );\n    });\n\n    QUnit.test('music21.stream.Stream.append', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C4'));\n        assert.equal(s.length, 1);\n\n        const s2 = new music21.stream.Stream();\n        const n1 = new music21.note.Note('C#4');\n        const n2 = new music21.note.Note('D4');\n        const n3 = new music21.note.Note('D#4');\n        n3.duration.type = 'half';\n        const l = [n1, n2, n3];\n        s2.append(l);\n        assert.equal(s2.length, 3);\n        assert.equal(s2.duration.quarterLength, 4.0);\n    });\n    \n    QUnit.test('music21.stream.Stream.insert and offsets', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        const n3 = new music21.note.Note('E5');\n        s.insert(2.0, n3);\n        \n        let n2 = new music21.note.Note('D#5');\n        s.insert(1.0, n2);\n        \n        assert.equal(s.get(0).name, 'C#');\n        assert.equal(s.get(1).name, 'D#');\n        assert.equal(s.get(2).name, 'E');\n        assert.equal(s.get(0).offset, 0.0);\n        assert.equal(s.get(1).offset, 1.0);\n        assert.equal(s.get(2).offset, 2.0);\n        \n        \n        const p = new music21.stream.Part();\n        const m1 = new music21.stream.Measure();\n        const n1 = new music21.note.Note('C#');\n        n1.duration.type = 'whole';\n        m1.append(n1);\n        \n        const m2 = new music21.stream.Measure();\n        n2 = new music21.note.Note('D#'); \n        n2.duration.type = 'whole'; \n        m2.append(n2);\n        p.append(m1);\n        p.append(m2);\n        \n        assert.equal(p.get(0).get(0).offset, 0.0);\n        assert.notOk(p.isFlat, 'part has substreams');\n        const pf = p.flat;\n        assert.equal(pf.get(0).offset, 0.0); \n        assert.equal(pf.get(1).offset, 4.0); \n        assert.ok(pf.isFlat, 'flat has no substremes');\n        \n        const pf2 = p.flat; // repeated calls do not change\n        assert.ok(pf2.isFlat, 'flat has no substremes');\n        assert.equal(\n            pf2.get(0).offset,\n            0.0,\n            'repeated calls do not change offset 1'\n        );\n        assert.equal(\n            pf2.get(1).offset,\n            4.0,\n            'repeated calls do not change offset 2'\n        );\n        const pf3 = pf2.flat;\n        assert.equal(\n            pf3.get(1).offset,\n            4.0,\n            '.flat.flat does not change offset'\n        );\n    });\n\n    QUnit.test('music21.stream.Stream insertAndShift', assert => {\n        const s = new music21.stream.Stream();\n        s.insert(0, new music21.note.Note('C4'));\n        s.insert(1, new music21.note.Note('E4'));\n        s.insert(2, new music21.note.Note('F4'));\n        s.insertAndShift(1, new music21.note.Note('D4'));\n        const outListNames = [];\n        const outListOffsets = [];\n        for (const n of s) {\n            outListNames.push(n.name);\n            outListOffsets.push(n.offset);\n        }\n        assert.equal(outListNames[0], 'C');\n        assert.equal(outListOffsets[0], 0.0);\n        assert.equal(outListNames[1], 'D');\n        assert.equal(outListOffsets[1], 1.0);\n        assert.equal(outListNames[2], 'E');\n        assert.equal(outListOffsets[2], 2.0);\n        assert.equal(outListNames[3], 'F');\n        assert.equal(outListOffsets[3], 3.0);\n    });\n\n    QUnit.test('music21.stream.Stream.DOM', assert => {\n        const s = new music21.stream.Stream();\n        s.append(new music21.note.Note('C#5'));\n        s.append(new music21.note.Note('D#5'));\n        const n = new music21.note.Note('F5');\n        n.duration.type = 'half';\n        s.append(n);\n        const c = s.createNewDOM(100, 50);\n        assert.equal(c.attr('width'), 100, 'stored width matches');\n        assert.equal(c.attr('height'), 50, 'stored height matches');\n    });\n\n    QUnit.test('music21.stream.Stream.getElementsByClass', assert => {\n        const s = new music21.stream.Stream();\n        const n1 = new music21.note.Note('C#5');\n        const n2 = new music21.note.Note('D#5');\n        const r = new music21.note.Rest();\n        const tc = new music21.clef.TrebleClef();\n        s.append(tc);\n        s.append(n1);\n        s.append(r);\n        s.append(n2);\n        let c = s.getElementsByClass('Note');\n        assert.equal(c.length, 2, 'got two notes');\n        assert.equal(c.get(0), n1, 'n1 first');\n        assert.equal(c.get(1), n2, 'n2 second');\n        c = s.getElementsByClass('Clef');\n        assert.equal(c.length, 1, 'got clef from subclass');\n        c = s.getElementsByClass(['Note', 'TrebleClef']);\n        assert.equal(c.length, 3, 'got multiple classes');\n        c = s.getElementsByClass('GeneralNote');\n        assert.equal(c.length, 3, 'got multiple subclasses');\n    });\n    QUnit.test('music21.stream.offsetMap', assert => {\n        const n = new music21.note.Note('G3');\n        const o = new music21.note.Note('A3');\n        const s = new music21.stream.Measure();\n        s.insert(0, n);\n        s.insert(0.5, o);\n        const om = s.offsetMap();\n        assert.equal(om.length, 2, 'offsetMap should have length 2');\n        const omn = om[0];\n        const omo = om[1];\n        assert.equal(omn.element, n, 'omn element should be n');\n        assert.equal(omn.offset, 0.0, 'omn offset should be 0');\n        assert.equal(omn.endTime, 1.0, 'omn endTime should be 1.0');\n        assert.equal(\n            omn.voiceIndex,\n            undefined,\n            'omn voiceIndex should be undefined'\n        );\n        assert.equal(omo.element, o, 'omo element should be o');\n        assert.equal(omo.offset, 0.5, 'omo offset should be 0.5');\n        assert.equal(omo.endTime, 1.5, 'omo endTime should be 1.5');\n    });\n    QUnit.test('music21.stream.Stream appendNewDOM ', assert => {\n        const n = new music21.note.Note('G3');\n        const s = new music21.stream.Measure();\n        s.append(n);\n        s.appendNewDOM(document.body);\n        assert.equal(s.length, 1, 'ensure that should have one note');\n        const n1 = new music21.note.Note('G3');\n        const s1 = new music21.stream.Measure();\n        s1.append(n1);\n        const n2 = new music21.note.Note('G3');\n        s1.append(n2);\n        const n3 = new music21.note.Note('G3');\n        s1.append(n3);\n        const n4 = new music21.note.Note('G3');\n        s1.append(n4);\n        const div1 = s1.editableAccidentalDOM();\n        $(document.body).append(div1);\n    });\n    QUnit.test('music21.stream.Stream makeAccidentals ', assert => {\n        const n = new music21.note.Note('G#3');\n        const n2 = new music21.note.Note('G#3');\n        const n3 = new music21.note.Note('C#4');\n        const c = new music21.chord.Chord(['C3', 'E-3', 'G3', 'G4']);\n        const ks = new music21.key.KeySignature(2);\n        const s = new music21.stream.Measure();        \n        s.keySignature = ks;\n        s.append([n, n2, n3, c]);\n        s.makeAccidentals();\n        assert.ok(n.pitch.accidental.displayStatus);\n        assert.notOk(n2.pitch.accidental.displayStatus);\n        assert.notOk(n3.pitch.accidental.displayStatus);\n        assert.ok(c._notes[0].pitch.accidental);\n        assert.ok(c._notes[0].pitch.accidental.displayStatus);\n        assert.ok(c._notes[1].pitch.accidental.displayStatus);\n        assert.ok(c._notes[2].pitch.accidental.displayStatus);\n        assert.notOk(c._notes[3].pitch.accidental); // perhaps should exist?\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.tie.Tie', assert => {\n        const t = new music21.tie.Tie('start');\n        assert.equal(t.type, 'start', 'Tie type is start');\n    });\n}\n","import * as QUnit from 'qunit';\nimport music21 from '../../src/loadModules';\n\nexport default function tests() {\n    QUnit.test('music21.voiceLeading.VoiceLeadingQuartet', assert => {\n        const VLQ = music21.voiceLeading.VoiceLeadingQuartet;\n        const sc = new VLQ();\n        assert.ok(sc.classes.includes('VoiceLeadingQuartet'));\n        const N = music21.note.Note;\n        const v1n1 = new N('C4');\n        const v1n2 = new N('B3');\n        const v2n1 = new N('F3');\n        let v2n2 = new N('E3');\n        const vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n        assert.equal(vlq1.vIntervals[0].name, 'P5');\n        assert.equal(vlq1.vIntervals[1].name, 'P5');\n        assert.equal(vlq1.hIntervals[0].name, 'm2');\n        assert.equal(vlq1.hIntervals[1].name, 'm2');\n        assert.ok(!vlq1.noMotion(), 'not no motion');\n        assert.ok(!vlq1.obliqueMotion());\n        assert.ok(vlq1.similarMotion());\n        assert.ok(vlq1.parallelMotion());\n        assert.ok(vlq1.parallelMotion('P5'));\n        assert.ok(vlq1.parallelInterval('P5'));\n        assert.ok(vlq1.parallelFifth());\n        assert.ok(!vlq1.parallelOctave());\n        v2n2 = new N('A3');\n        const vlq2 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n        assert.equal(vlq2.vIntervals[1].name, 'M2');\n        assert.equal(vlq2.hIntervals[1].name, 'M3');\n        assert.ok(!vlq2.similarMotion(), 'not similar motion');\n        assert.ok(vlq2.contraryMotion(), 'contrary motion');\n        assert.ok(vlq2.inwardContraryMotion(), 'inward contrary motion');\n        assert.ok(!vlq2.outwardContraryMotion(), 'not outward contrary motion');\n\n        const vlq3 = new VLQ('C4', 'D4', 'A3', 'F3');\n        assert.ok(vlq3.contraryMotion(), 'contrary motion set w/ strings');\n    });\n    QUnit.test(\n        'music21.voiceLeading.VoiceLeadingQuartet proper resolution',\n        assert => {\n            const VLQ = music21.voiceLeading.VoiceLeadingQuartet;\n            const sc = new VLQ();\n            assert.ok(sc.classes.includes('VoiceLeadingQuartet'));\n            const N = music21.note.Note;\n            let v1n1 = new N('B-4');\n            let v1n2 = new N('A4');\n            let v2n1 = new N('E4');\n            let v2n2 = new N('F4');\n            let vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(vlq1.isProperResolution(), 'd5 resolves inward');\n            v2n2 = new N('D4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(!vlq1.isProperResolution(), 'd5 resolves outward');\n            vlq1.key = 'B-';\n            assert.ok(\n                vlq1.isProperResolution(),\n                'not on scale degrees that need resolution'\n            );\n            v1n1 = new N('E5');\n            v1n2 = new N('F5');\n            v2n1 = new N('B-4');\n            v2n2 = new N('A4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(vlq1.isProperResolution(), 'A4 resolves outward');\n            v2n2 = new N('D4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(!vlq1.isProperResolution(), 'A4 resolves inward');\n            vlq1.key = 'B-';\n            assert.ok(\n                vlq1.isProperResolution(),\n                'not on scale degrees that need resolution'\n            );\n            v1n1 = new N('B-4');\n            v1n2 = new N('A4');\n            v2n1 = new N('C4');\n            v2n2 = new N('F4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(vlq1.isProperResolution(), 'm7 resolves inward');\n            // v2n2 = new N('F3');\n            // vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            // Ryan believes that this is ok now...\n            // assert.ok(!vlq1.isProperResolution(), 'm7 with similar motion');\n\n            v2n2 = new N('F#4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            vlq1.key = 'B-';\n            assert.ok(\n                vlq1.isProperResolution(),\n                'm7 not on scale degrees that need resolution'\n            );\n            vlq1.key = 'F';\n            assert.ok(\n                !vlq1.isProperResolution(),\n                'm7 on scale degrees that need resolution'\n            );\n\n            v1n1 = new N('F5');\n            v1n2 = new N('G5');\n            v2n1 = new N('C4');\n            v2n2 = new N('C4');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(\n                !vlq1.isProperResolution(),\n                'P4 must move down or remain constant'\n            );\n            v1n2 = new N('E5');\n            vlq1 = new VLQ(v1n1, v1n2, v2n1, v2n2);\n            assert.ok(\n                vlq1.isProperResolution(),\n                'P4 moves down: ' + vlq1.v1n1.ps + vlq1.v1n2.ps\n            );\n        }\n    );\n}\n","import articulations from './moduleTests/articulations.js';\nimport base from './moduleTests/base.js';\nimport beam from './moduleTests/beam.js';\nimport chord from './moduleTests/chord.js';\nimport clef from './moduleTests/clef.js';\nimport common from './moduleTests/common.js';\nimport duration from './moduleTests/duration.js';\nimport dynamics from './moduleTests/dynamics.js';\nimport figuredBass from './moduleTests/figuredBass.js';\nimport interval from './moduleTests/interval.js';\nimport key from './moduleTests/key.js';\nimport meter from './moduleTests/meter.js';\nimport note from './moduleTests/note.js';\nimport pitch from './moduleTests/pitch.js';\nimport prebase from './moduleTests/prebase.js';\nimport roman from './moduleTests/roman.js';\nimport scale from './moduleTests/scale.js';\nimport sites from './moduleTests/sites.js';\nimport stream from './moduleTests/stream.js';\nimport tie from './moduleTests/tie.js';\nimport voiceLeading from './moduleTests/voiceLeading.js';\n\nconst allTests = {\n    articulations,\n    base,\n    beam,\n    chord,\n    clef,\n    common,\n    duration,\n    dynamics,\n    figuredBass,\n    interval,\n    key,\n    meter,\n    note,\n    pitch,\n    prebase,\n    roman,\n    scale,\n    sites,\n    stream,\n    tie,\n    voiceLeading,\n};\nif (typeof window !== undefined) {\n    window.allTests = allTests;\n}\nexport default allTests;\n"],"names":["ExtendableError","message","name","constructor","Error","captureStackTrace","stack","Music21Exception","StreamException","debug","common","merge","mergeRecursive","destination","source","undefined","p","hasOwnProperty","call","Object","e","range","common_range","start","stop","step","count","Math","ceil","Array","apply","map","i","mixin","common_mixin","OtherParent","thisClassOrObject","proto","getPrototypeOf","classProto","key","keys","aggregation","baseClass","mixins","base","args","forEach","copyProps","target","getOwnPropertyNames","concat","getOwnPropertySymbols","prop","match","defineProperty","getOwnPropertyDescriptor","prototype","posMod","a","b","statisticalMode","length","modeMap","maxEl","maxCount","el","fromRoman","num","inputRoman","toUpperCase","subtractionValues","nums","ints","places","c","includes","value","indexOf","nextValue","push","summation","n","toRoman","result","floor","repeat","makeSVGright","tag","attrs","document","createElementNS","k","setAttribute","ordinalAbbreviation","plural","post","valueHundreths","valueMod","rationalize","ql","epsilon","maxDenominator","abs","round","numerator","denominator","stripPx","str","pxIndex","slice","parseInt","urlParam","replace","regex","RegExp","results","exec","location","search","decodeURIComponent","arrayEquals","a1","a2","_singletonCounter","SingletonCounter","setWindowVisibilityWatcher","callback","hidden","addEventListener","windowFocusChanged","onfocusin","onfocusout","window","onpageshow","onpagehide","onfocus","onblur","evt","v","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","event","callbackState","type","initialState","visibilityState","initialStateEvent","urls","css","webResources","midiPlayer","soundfontUrl","hyphenToCamelCase","usrStr","all","numToIntOrFloat","intVal","prebase","ProtoM21Object","_storedClasses","isProtoM21Object","isMusic21Object","_cloneCallbacks","deep","memo","babelHelpers.extends","create","ret","WeakMap","get","set","babelHelpers.typeof","m21Obj","clonedVersion","has","clone","TypeError","console","log","testClass","classes","si","stringInfo","classList","thisConstructor","maxLinks","Derivation","client","method","origin","newThing","derivation","derivationChain","from","chain","duration","typeFromNumDict","quarterTypeIndex","ordinalTypeFromNum","vexflowDurationArray","Duration","_quarterLength","_dots","_durationNumber","_type","_tuplets","quarterLength","cloneCallbacksTupletFunction","toString","tupletKey","obj","newTuplets","newTuplet","typeNumber","powerOfTwo","pow","dotsNum","dotMultiplier","durationMultiplier","undottedQuarterLength","dottedMultiplier","unTupletedQl","tupletCorrectedQl","tuplet","tupletMultiplier","_findDots","tupletRatio","ratioRat","t","Tuplet","appendTuplet","skipUpdateQl","frozen","updateQlFromFeatures","numDots","updateFeaturesFromQl","typeIn","vd","dots","numberNotesActual","numberNotesNormal","durationActual","durationNormal","bracket","placement","tupletActualShow","tupletNormalShow","actual","normal","lengthActual","totalTupletLength","numActual","numNormal","ordStr","SitesException","SiteRef","isDead","classString","globalSiteIndex","siteIndex","site","_NoneSiteRef","GLOBAL_SITE_STATE_DICT","getId","newId","Sites","siteDict","Map","_siteIndex","_lastID","checkSite","unused_key","siteRef","newFirst","keyVal","sort","reverse","innerList","idKey","updateNotAdd","tempSiteRef","delete","sortByCreationTime","priorityTarget","excludeNone","keyRepository","_keysByTime","priorityId","splice","pop","yieldSites","attrName","className","options","params","callerFirst","getElementMethod","objs","classNameIsStr","objId","getContextByClass","size","Music21Object","keywords","classSortOrder","_activeSite","_naiveOffset","_duration","_derivation","_priority","id","sites","groups","isStream","Music21Object_cloneCallbacks_activeSite","keyName","newObj","self","Music21Music21Object_cloneCallbacks_derivation","newDerivation","Music21Object_cloneCallbacks_sites","id16","other","stringReturns","elementOffset","setElementOffset","getOffsetBySite","contextSites","csSite","csOffset","unused_csRecursionType","payloadExtractor","useSite","flatten","positionStart","lastElement","thisElement","_elements","indexOffset","matchClass","isClassOrSubclass","activeSite","potentialElement","returnSortTuples","searchType","contextEl","offsetAppend","followDerivation","recursionType","sortByCreationType","topLevel","siteObj","offsetInStream","newOffset","positionInStream","newParams","topLevelInner","inStreamPos","recurType","inStreamOffset","derivatedObject","derivedSite","derivedOffset","derivedRecurseType","offsetAdjustedCsTuple","_activeSiteStoredOffset","number","m","getObjByClass","newDuration","articulations","Articulation","vexflowModifier","setPosition","dynamicScale","lengthScale","vfa","Vex","Flow","LengthArticulation","DynamicArticulation","PitchArticulation","TimbreArticulation","Accent","StrongAccent","Staccato","Staccatissimo","Spiccato","Marcato","Tenuto","audioSearch","fftSize","AudioContextCaller","AudioContext","webkitAudioContext","_audioContext","animationFrameCallbackId","defineProperties","audioContext","MIDI","WebAudio","getContext","globalAudioContext","ac","getUserMedia","dictionary","error","alert","userMediaStarted","mediaStream","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","audio","mandatory","optional","sampleBuffer","currentAnalyser","audioStream","Float32Array","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","connect","animateLoop","minFrequency","maxFrequency","time","getFloatTimeDomainData","frequencyDetected","autoCorrelate","sampleRate","retValue","sampleCallback","requestAnimationFrame","pitchSmoothingSize","lastPitchClassesDetected","lastPitchesDetected","lastCentsDeviationsDetected","smoothPitchExtraction","frequency","shift","midiNumDiffFromFrequency","midiNum","centsOff","mostCommonPitchClass","pitchesMatchingClass","centsMatchingClass","mostCommonPitch","totalSamplePoints","totalSample","j","weight","unused_midiNum","unused_centsOff","buf","SIZE","MAX_SAMPLES","best_offset","best_correlation","rms","foundGoodCorrelation","correlations","val","sqrt","lastCorrelation","offset","correlation","offsetFrequency","midiNumFloat","Recorder","cfg","config","bufferLen","recording","currCallback","frequencyCanvasInfo","width","height","canvasContext","animationFrameID","waveformCanvasInfo","analyserNode","polyfillNavigator","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","audioStreamConnected","s","stream","inputPoint","createGain","audioInput","connectSource","zeroGain","gain","context","setNode","workerBlob","Blob","recorderWorkerJs","workerURL","URL","createObjectURL","worker","Worker","onmessage","blob","data","revokeObjectURL","postMessage","command","node","onaudioprocess","buffer","inputBuffer","getChannelData","numInputChannels","numOutputChannels","createScriptProcessor","createJavaScriptNode","cb","isMono","setupDownload","Date","now","exportWAV","filename","elementId","url","webkitURL","link","getElementById","href","download","AnalyserNode","uint8","Uint8Array","array","getByteTimeDomainData","imax","canvas","SPACING","BAR_WIDTH","numBars","freqByteData","frequencyBinCount","getByteFrequencyData","clearRect","fillStyle","lineCap","multiplier","magnitude","fillRect","updateAnalysers","buffers","amp","min","max","datum","channels","numFrames","audioBuffer","createBuffer","channel","thisChannelBuffer","createBufferSource","audioRecording","barTypeList","barTypeDict","reverseBarTypeDict","BarException","typeToMusicXMLBarStyle","standardizeBarType","toLowerCase","Barline","beam","validBeamTypes","continue","partial","beamableDurationTypes","Beam","direction","independentAngle","Beams","srcList","beamsList","isRest","fill","beamLast","beamNext","allTypes","getTypes","hasStart","hasStop","bThis","bNext","bThisNum","getNumbers","thisNum","thisBeam","getByNumber","nextBeam","bPrev","prevBeam","feathered","level","setAll","numbers","beamObj","x","types","splitit","split","pitch","Accidental","accName","_name","_alter","_modifier","_unicodeModifier","displayType","displayStatus","alter","modifier","nameToMidi","C","D","E","F","G","A","B","nameToSteps","stepsToName","midiToName","Pitch","pn","_step","_octave","_accidental","spellingIsInferred","ps","nameWithOctave","inPlace","directionInt","octaveStored","octave","diatonicNoteNum","accidental","microtone","_getEnharmonicHelper","clefObj","tempPitch","convertPitchToTreble","accidentalType","warn","outName","o","nn","tempAccidental","storedOctave","newDNN","mod7DNN","accidentalAlter","unicodeModifier","unicodeName","note","NotRestException","noteheadTypeNames","stemDirectionNames","Lyric","text","syllabic","applyRaw","identifier","lyricConnector","_number","setTextAndSyllabic","_identifier","style","strokeStyle","fontFamily","fontSize","fontWeight","rawText","GeneralNote","isChord","volume","activeVexflowNote","expressions","lyrics","tie","lyricNumber","lyricIdentifier","maxLyrics","newLyric","foundLyric","thisLyric","clef","vfn","addDotToAll","stemDirection","hasStem","staveDNNSpacing","stave","spacing_between_lines_px","midLine","lowestLine","absDNNfromCenter","absOverOctave","getStemLength","stemHeight","setStemLength","tempo","nextElement","inst","instrument","midiVolume","midiChannel","milliseconds","midNum","midi","stopTime","noteOn","noteOff","_notes","isNaN","NotRest","notehead","noteheadFill","noteheadColor","noteheadParenthesis","beams","_stemDirection","Note","isNote","getStemDirectionFromClef","DNNfromCenter","useStemDirection","renderOptions","vfd","vexflowDuration","vexflowKey","vexflowName","vfnStemDirection","StaveNote","STEM_DOWN","STEM_UP","stem_direction","vexflowAccidentalsAndDisplay","addAccidental","art","addArticulation","vexflow","exp","setStyle","Rest","lineShift","color","keyLine","staffLines","ls","interval","Direction","DESCENDING","OBLIQUE","ASCENDING","IntervalDirectionTerms","MusicOrdinals","GenericInterval","gi","directed","undirected","isSkip","isDiatonicStep","isStep","isUnison","tempSteps","tempOctaves","simpleUndirected","undirectedOctaves","semiSimpleUndirected","octaves","simpleDirected","semiSimpleDirected","perfectable","niceName","simpleNiceName","semiSimpleNiceName","staffDistance","mod7inversion","mod7","specifier","DiatonicInterval","pitch2","oldDiatonicNum","distanceToMove","newDiatonicNumber","convertDiatonicNumberToStep","newStep","newOctave","IntervalSpecifiersEnum","PERFECT","MAJOR","MINOR","AUGMENTED","DIMINISHED","DBLAUG","DBLDIM","TRPAUG","TRPDIM","QUADAUG","QUADDIM","IntervalNiceSpecNames","IntervalPrefixSpecs","IntervalOrderedPerfSpecs","IntervalPerfSpecifiers","QUADDMIN","IntervalPerfOffset","IntervalOrderedImperfSpecs","IntervalSpecifiers","IntervalMajOffset","IntervalSemitonesGeneric","IntervalAdjustPerfect","P","AA","AAA","AAAA","d","dd","ddd","dddd","IntervalAdjustImperf","M","generic","diatonicDirectionNiceName","simpleName","semiSimpleName","directedName","directedNiceName","directedSimpleName","directedSimpleNiceName","directedSemiSimpleName","directedSemiSimpleNiceName","semiSimpleNameName","specificName","orderedSpecifierIndex","invertedOrderedSpecIndex","invertedOrderedSpecifier","octaveOffset","semitonesStart","specName","semitonesAdjust","semitones","ChromaticInterval","fullIntervalObject","Interval","getChromatic","transposePitch","cents","mod12","intervalClass","isChromaticStep","useImplicitOctave","pps","newPitch","IntervalStepNames","dn","stepNumber","stepName","noteStart","noteEnd","restArgs","arg0","gI","dI","diatonic","chromatic","n1","n2","p1","p2","gInt","notesToGeneric","cInt","notesToChromatic","intervalsToDiatonic","_noteStart","_noteEnd","reinit","diatonicType","sn","consonantNames","maxAccidental","halfStepsToFix","intervalFromGenericAndChromatic","_getSpecifierFromGenericChromatic","dInt","staffDist","genDist","convertStaffDistanceToInterval","noteVals","normalSemis","theseSemis","semisRounded","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","monad","diad","trichord","tetrachord","pentachord","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50","hexachord","septachord","octachord","nonachord","decachord","undecachord","dodecachord","FORTE","card_1","card_2","card_3","card_4","card_5","card_6","card_7","card_8","card_9","card_10","card_11","card_12","SCDICT","TNMAX","TNIMAX","TNREF","SCREF","forteIndexToInversionsAvailable","card","index","morris","_chordTableAddress","cardinality","forteClass","inversion","pcOriginal","_validateAddress","address","inversionsAvailable","addressToTransposedNormalForm","i2","String","addressToPrimeForm","addressToIntervalVector","intervalVectorToAddress","vector","sc","addressToZAddress","unused_inversion","z","zReal","isArray","zAddress","addressToCommonNames","addressNew","refDict","addressToForteName","classification","iStr","seekChordTablesAddress","pcSet","orderedPitchClasses","candidates","rot","testSetOrig","rotRemainder","testSetOriginalPC","testSet","zeroTransposed","testSetInvert","testSetInvertOriginalPC","candidateTuple","matchedPCOriginal","indexCandidate","dataLine","dataLinePcs","candidate","candidateInversion","candidateOriginalPC","chord","Chord","notes","_overrides","_cache","_chordTablesAddress","_chordTablesAddressNeedsUpdating","add","sortPitches","info","pitches","join","Symbol","iterator","zRelationAddress","chordTables","chordTablesAddress","hasZRelation","addresses","thisAddress","prime","maxDNNfromCenter","pA","runSort","noteObj","pitchObj","noteObj2","stepsFound","nonDuplicatingPitches","closedChord","newroot","root","removeDuplicatePitches","closedPitches","testSteps","currentListOfThirds","tsIndex","chordStepPitch","getChordStep","hasFalse","newRoot","chordStep","testRoot","tempChordStep","lowest","uniqueChord","thirdST","semitonesFromChordStep","fifthST","isSeventhOfType","intervalArray","third","fifth","seventh","thisPitch","thisInterval","isMajorTriad","isDominantSeventh","isMinorTriad","bass","chordStepsToInversions","testNote","pitchKeys","tn","thisPitches","testRootDNN","tempPitches","addNote","pcGroup","pitchClass","cta","ctn","enharmonicTests","isDiminishedTriad","isAugmentedTriad","out","test","chordDefinitions","major","minor","diminished","augmented","lowestLines","treble","soprano","alto","tenor","percussion","nameToLine","nameToSign","Clef","octaveChange","sign","line","lowestLineTrebleOffset","lowestLineDifference","TrebleClef","Treble8vbClef","Treble8vaClef","BassClef","Bass8vbClef","AltoClef","TenorClef","SopranoClef","MezzoSopranoClef","PercussionClef","bestClef","st","recurse","stFlat","flat","totalNotes","totalPitch","averageHeight","clefFromString","clefString","octaveShift","xnStr","trim","thisType","lineNum","searchLower","clefKey","clefLower","potentialClass","arrayEqual","every","ix","Scale","AbstractScale","_net","tonicDegree","octaveDuplicating","deterministic","_alteredDegrees","_oneOctaveRealizationCache","pitchList","pitchListReal","pLast","intervalList","unused_stepOfPitch","unused_minPitch","unused_maxPitch","unused_direction","unused_reverse","intV","pitchReference","unused_nodeName","nodeDegreeTarget","zeroIndexDegree","thisIntv","pitchTarget","unused_comparisonAttribute","realizedPitches","getRealization","realizedNames","realizedIndex","AbstractDiatonicScale","mode","dominantDegree","_buildNetwork","relativeMajorDegree","relativeMinorDegree","intVStr","AbstractHarmonicMinorScale","AbstractAscendingMelodicMinorScale","ConcreteScale","tonic","abstract","degree","unused_equateTermini","getPitchFromNodeDegree","getRelativeNodeDegree","DiatonicScale","MajorScale","MinorScale","HarmonicMinorScale","AscendingMelodicMinorScale","SimpleDiatonicScale","scaleSteps","lastPitch","di","ii","ScaleSimpleMajor","ScaleSimpleMinor","minorType","scale","modeSharpsAlter","dorian","phrygian","lydian","mixolydian","locrian","convertKeyStringToMusic21KeyString","textString","endsWith","startsWith","KeySignature","sharps","_sharps","_alteredPitchesCache","flatMapping","sharpMapping","tempSharps","tempName","majorName","aps","alteredPitches","transInterval","transTimes","transStr","startPitch","pKeep","Key","lowerCase","sharpsArray","sharpsIndex","modeShift","_scale","getScale","tonicPitchNameWithCase","scaleType","getPitches","pitchFromDegree","getScaleDegreeFromPitch","tonicName","isConcrete","meter","TimeSignature","meterString","_numerator","_denominator","_beatGroups","_overwrittenBeatCount","_overwrittenBeatDuration","ratioString","tempBeatGroups","numBeats","beatValue","beatsToEighthNoteRatio","beatDuration","beatsFromStart","end","srcStream","measureStartOffset","naiveBeams","removeSandwichedUnbeamables","fixBeamsOneElementDepth","depth","beamNumber","dur","pos","startNext","isLast","isFirst","beamPrevious","offsetToSpan","archetypeSpanStart","archetypeSpanEnd","archetypeSpanNextStart","beamType","getTypeByNumber","setByNumber","sanitizePartialBeams","mergeConnectingPartialBeams","beatGroups","vfBeatGroups","bg","Fraction","meterList","computeBeatGroups","newGroups","overwrite","barDuration","beatCount","Instrument","instrumentName","partId","partName","partAbbreviation","instrumentId","instrumentAbbreviation","midiProgram","_midiChannel","lowestNote","highestNote","transpostion","inGMPercMap","soundfontFn","find","usedChannels","startChannel","ch","maxMidi","autoAssignMidiChannel","fn","midiNumber","instrument_find","RenderOptions","defaultOptions","displayClef","displayTimeSignature","displayKeySignature","scaleFactor","y","top","left","overriddenWidth","naiveHeight","systemIndex","partIndex","measureIndex","systemMeasureIndex","systemPadding","naiveSystemPadding","maxSystemWidth","rightBarline","staffConnectors","staffPadding","events","click","dblclick","startNewSystem","startNewPage","showMeasureNumber","_clefSingleton","vfShow","RenderStack","voices","streams","textVoices","voiceToStreamMapping","tickablesByStave","knownStaves","allTickables","thisStaveIndex","currentStaveHolder","Renderer","div","where","rendererType","$div","$where","activeFormatter","_vfRenderer","_ctx","beamGroups","stacks","vfTies","systemBreakOffsets","vfTuplets","jquery","$","isScorelike","isPartlike","isFlat","prepareScorelike","preparePartlike","prepareArrivedFlat","formatMeasureStacks","drawTies","drawMeasureStacks","drawBeamGroups","drawTuplets","parts","subStream","addStaffConnectors","measureList","measures","prepareMeasure","prepareTies","hasVoices","prepareFlat","firstVoiceCopy","getElementsByClass","getElementsNotOfClass","insert","rendOp","entries","voiceStream","voiceToRender","activeVFStave","storedVexflowStave","optionalStave","optional_renderOp","makeNotation","renderStave","vf_voice","getVoice","hasLyrics","getLyricVoice","optional_rendOp","ctx","newStave","setClefEtc","setContext","draw","vft","pf","notesAndRests","thisNote","nextNote","onSameSystem","sbI","thisSystemBreak","vfTie","StaveTie","first_note","last_note","first_indices","last_indices","vfTie1","vfTie2","vexflowNotes","voice","vexflowVoice","setStave","addTickables","textVoice","vexflowLyrics","vf_voices","measuresOrVoices","formatter","formatVoiceGroup","applyFormatterInformationToNotes","autoBeam","Formatter","maxGlyphStart","getNoteStartX","setNoteStartX","staveTickables","joinVoices","formatToStave","associatedStream","getSpecialContext","vexflowBeatGroups","applyAndGetBeams","estimateStaffLength","Stave","sClef","firstEl","setStafflines","setMeasure","ottava","addClef","context_ks","ksVFName","addKeySignature","context_ts","addTimeSignature","bl","barlineMap","single","double","vxBL","setEndBarType","vexflowStave","setNumLines","line_config","visible","activeTuplet","activeTupletLength","activeTupletVexflowNotes","thisEl","vexflowNote","tuplets","tupletOptions","num_notes","notes_occupied","vfTuplet","setRatioed","getTextNote","font","lyricObj","TextNote","setLine","setJustification","Justification","LEFT","applyTickMultiplier","lyricsObjects","lyricsArray","addConnector","firstLyric","family","tempQl","connector","totalLength","num1024","vfv","Voice","num_beats","beat_value","resolution","RESOLUTION","setMode","Mode","SOFT","connectorType","connectorMap","brace","StaveConnector","BRACE","SINGLE","DOUBLE","BRACKET","numParts","firstPart","lastPart","firstPartMeasures","lastPartMeasures","numMeasures","mIndex","thisPartMeasure","lastPartMeasure","topVFStaff","bottomVFStaff","thisPartVoice","lastPartVoice","scTypeM21","scTypeVF","staffConnectorsMap","setType","recursive","removeFormatterInformation","noteOffsetLeft","start_x","glyph_start_x","getBottomY","nextTicks","nTicks","ticks","formatterNote","tickContexts","getAbsoluteX","backend","Backends","CANVAS","SVG","resize","attr","vfr","vfRenderer","MusicXMLExportException","typeToMusicXMLType","normalizeColor","colors","_classMapping","GeneralObjectExporter","generalObj","outObj","fromGeneralObj","parseWellformedObject","scoreExporter","ScoreExporter","parse","asBytes","cM","methName","scOut","makeMeasures","Score","fromScore","mCopy","Part","append","fromPart","Measure","fromMeasure","nCopy","_musicxmlVersion","XMLExporterBase","doc","implementation","createDocument","xmlRoot","noCopy","xmlHeader","oSerializer","XMLSerializer","serializeToString","m21El","xmlEl","attributeName","transform","forceEmpty","subElement","innerHTML","_setTagTextFromAttribute","xmlAttributeName","_setAttributeFromAttribute","element","m21Object","comment","commentLength","spacerLengthLow","spacerLengthHigh","commentText","divider","createComment","appendChild","createElement","mxObject","mxEl","mxName","mxAccidental","possible","charAt","random","score","xmIdentification","scoreMetadata","spannerBundle","meterStream","scoreLayouts","firstScoreLayout","highestTime","refStreamOrTimeRange","partExporterList","instrumentList","midiChannelList","emptyObject","scorePreliminaries","parsePartlikeScore","postPartProcess","setPartsAndRefStream","streamOfStreams","innerStream","ht","pp","PartExporter","parent","setScoreHeader","pex","addDividerComment","setPartList","mxPartList","mxScorePart","getXmlScorePart","partObj","Stream","instrumentStream","firstInstrumentObject","lastDivisions","xmlPartId","getRandomId","measureStream","measureExporter","MeasureExporter","mxMeasure","_classesToMeasureMethods","_wrapAttributeMethodClasses","_ignoreOnParseClasses","divisionsPerQuarter","measureObj","currentDivisions","transpositionInterval","mxTranspose","measureOffsetStart","offsetInMeasure","currentVoiceId","rbSpanners","objectSpannerBundle","setMxAttributes","setMxAttributesObjectForStartOfMeasure","mainElementsParse","parseFlatElements","backupAfterwards","allVoices","divisions","voiceId","parseOneElement","amountToBackup","mxBackup","mxDuration","parsedObject","meth","wrapObjectInAttributes","noteIndexInChord","chordParent","addChordTag","chordOrN","mxNote","setColor","mxPitch","pitchToXml","isGrace","durationXml","mxTieList","tieToXmlTie","setEditorial","mxVoice","vId","mxType","_","accidentalToMx","mxTimeModification","tupletToTimeModification","mxStem","sdtext","mxLyric","lyricToXml","r","noteToXml","mxNoteList","mxAlter","tup","mxNormalType","musicxmlTieType","mxTie","objectToWrap","methodToMx","mxAttributes","mxObj","l","appendToRoot","mxDivisions","_keySignature","keySignatureToXml","_timeSignature","timeSignatureToXml","_clef","clefToXml","ts","mxTime","mxBeats","mxBeatType","keyOrKeySignature","mxKey","seta","mxClef","mxSign","measureNumberWithSuffix","FilterException","_StopIteration","StopIterationSingleton","StreamFilter","item","IsFilter","numToFind","IsNotFilter","Number","MAX_SAFE_INTEGER","ClassFilter","ClassNotFilter","OffsetFilter","offsetStart","offsetEnd","includeEndBoundary","mustFinishInSpan","mustBeginInSpan","includeElementsThatEndAtStart","zeroLengthSearch","isElementOffsetInRange","elementEnd","elementIsZeroLength","filters","StreamIteratorException","StreamIterator","filterList","restoreActiveSites","activeInformation","ignoreSorting","isSorted","autoSort","srcStreamElements","elements","streamLength","iterSection","cleanupOnStop","overrideDerivation","_len","_matchingElements","sectionIndex","updateActiveInformation","reset","matches","matchesFilters","cleanup","fe","matchingElements","ai","f","savedIndex","savedRestoreActiveSites","me","ss","found","newFilter","resetCaches","oldFilter","classFilterList","addFilter","OffsetIterator","nextToYield","nextOffsetToYield","yieldEls","eOffset","forwardIndex","nextE","nextOffset","RecursiveIterator","streamsOnly","includeSelf","returnSelf","iteratorStartOffsetInHierarchy","childRecursiveIterator","lastYielded","newStartOffset","savedRecursiveIterator","iterStack","iteratorStack","iter","lastYield","newestIterator","lastStream","lastStartOffset","_exportMusicXMLAsText","gox","isMeasure","_offsetDict","_instrument","_autoBeam","activeVFRenderer","_tempo","_stopPlaying","_allowMultipleSimultaneousPlays","changedCallbackFunction","DOMChangerFunction","canvasOrSVGElement","currentTarget","findNoteForClick","clickedDiatonicNoteNum","foundNote","noteChanged","thisArg","bind","retainContainers","newSt","offsetShift","elFlat","_getFlatOrSemiFlat","elFlatElement","elFlatElementOffset","coreElementsChanged","updateIsFlat","privAttr","contextObj","_firstElementContext","_specialContext","firstElements","getElementsByOffset","warnOnCall","first_el","special_context","clear","elCopy","clearIsSorted","keepIndex","classFilter","skipSelf","ri","elOrElList","elOffset","err","priority","ignoreSort","setActiveSite","elementOrNone","amountToShift","shiftingOffsets","existingEl","existingElOffset","remove","targetOrList","shiftOffsets","targetList","indexInStream","replacement","allDerivated","targetOffset","newEl","replaceEl","addElement","searchContext","innerBarline","finalBarline","voiceCount","timeSignature","offsetMap","oMax","endTime","measureCount","lastTimeSignature","mStart","thisTimeSignature","oneMeasureLength","voiceIndex","ob","foundTS","mEnd","oNew","insertStream","elSites","streamOnly","addTies","addPartIdAsGroup","removeRedundantPitches","toSoundingPitch","workObj","templateStream","hasPartLikeStreams","template","fillWithRests","removeClasses","retainVoices","cloneEmpty","restInfo","optionalAddRest","restQL","restObj","outEl","derivationMethod","returnObj","mergeAttributes","makeAccidentals","mColl","noteStream","durList","durSum","reduce","total","barQL","paddingLeft","getBeams","thisBeams","lyric","each","group","thisOffsetMap","OffsetMap","elStream","otherElements","extendableStepList","stepNames","ks","keySignature","stepAlter","accidentalByStep","lastOctaveStepList","tempOctaveStepDict","extend","lastOctavelessStepDict","lastStepDict","_makeAccidentalForOnePitch","chordNote","newAlter","preserveEvents","oldEvents","resetRenderOptions","canvasOrSVG","renderVexflow","format","DOMContains","body","contains","tagName","makeBeams","render","setRenderInteraction","removeChild","ignoreSystems","staffHeight","numSystems","scoreHeight","maxLength","thisLength","done","startNote","startNoteIndex","currentNoteIndex","flatEls","lastNoteIndex","thisStream","playNext","playDuration","playMidi","setTimeout","elementType","createNewDOM","setSubstreamRenderOptions","renderElementType","$newCanvasOrDIV","addClass","computedWidth","computedHeight","estimateStreamHeight","createPlayableDOM","createDOM","$newSvg","appendElement","appendNewDOM","$appendElement","svgOrCanvasBlock","preserveSvgSize","replaceDOM","$oldSVGOrCanvas","hasClass","svgBlock","replaceWith","canvasOrDiv","$svg","playFunc","playStream","proxy","setRenderInteractionProxy","eventType","eventFunction","off","on","windowReflowStart","storedVFStave","subStreams","first_subStream","recursiveGetStoredVexflowStave","svg","getUnscaledXYforDOM","xClick","yClick","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","xPx","yPx","getScaledXYforDOM","pixelScaling","yPxScaled","xPxScaled","thisClef","lineSpacing","linesAboveStaff","space_above_staff_ln","notesFromTop","notesAboveLowestLine","num_lines","allowablePixels","allowBackup","backupMaximum","getStreamFromScaledXandSystemIndex","backup","minDistanceSoFar","leftDistance","rightDistance","minDistance","diatonicNoteNumFromScaledY","noteElementFromScaledX","activeNote","redrawDOM","editableAccidentalDOM","$svgDiv","buttonDiv","getAccidentalToolbar","minAccidental","$siblingSvg","clickEvent","$useSvg","$searchParent","maxSearch","$buttonDiv","acc","$button","$bPlay","$bStop","stopPlayStream","jSvg","callingStream","jSvgNow","jSvgParent","newWidth","svgWidth","svgObj","resizeSvgTo","resizeTO","clearTimeout","resizeToTimeout","trigger","triggerResizeOnCreateSvg","$window","doResize","newTempo","newInstrument","newClef","oldClef","newKeySignature","oldKS","newTimeSignature","oldTS","ab","baseMaxSystemWidth","newSW","newElements","highestOffsetSoFar","tempInsert","unused","thisElOffset","numberSuffix","systemHeight","measureWidths","elRendOp","tempM","getMeasureWidths","systemCurrentWidths","systemBreakIndexes","lastSystemBreak","startLeft","currentLeft","currentRight","currentSystemIndex","leftSubtract","newLeftSubtract","oldWidth","oldEstimate","offsetFromEstimate","newEstimate","currentSystemMultiplier","currentSystemWidth","newLeft","newTop","currentMeasureIndex","currentMeasureLeft","lastKeySignature","lastClef","mRendOp","scaledYRelativeToSystem","systemIndexAndScaledY","gotMeasure","right","bottom","partSpacing","currentPartNumber","currentPartTop","evenPartMeasureSpacing","ignoreNumSystems","currentScoreHeight","fixSystemInformation","maxWidth","pWidth","tempPart","maxMeasureWidths","measureWidthsArrayOfArrays","maxFound","scaledYFromSystemTop","scaledYinPart","rightPart","setLeft","measureStacks","maxMeasureWidth","thisMeasureWidth","measureNewWidth","part","measure","VALID_TIE_TYPES","Tie","newType","DEFAULTS","firstLetter","$matchEl","children","contents","eq","ScoreParser","xmlText","xmlUrl","$xmlRoot","definesExplicitSystemBreaks","definesExplicitPageBreaks","mxScorePartDict","m21PartObjectsById","partGroupList","musicXmlVersion","xmlDoc","textStatus","scoreFromDOMTree","parseXML","xmlRootToScore","$mxScore","inputM21","parsePartList","$p","$mxScorePart","xmlPartToPart","$mxPart","parser","PartParser","partListElement","$partListElement","atSoundingPitch","staffReferenceList","lastMeasureWasShort","lastMeasureOffset","lastClefs","activeTuplets","maxStaves","lastMeasureNumber","lastNumberSuffix","multiMeasureRestsToCapture","activeMultimeasureRestSpanner","activeInstrument","firstMeasureParsed","$activeAttributes","appendToScoreAfterParse","lastMeasureParser","parseXmlScorePart","parseMeasures","$mxMeasure","xmlMeasureToMeasure","measureParser","MeasureParser","setLastMeasureInfo","adjustTimeAttributesFromMeasure","mHighestTime","mOffsetShift","$mxMeasureElements","transposition","staffReference","useVoices","voicesById","voiceIndices","Set","staves","attributesAreInternal","measureNumber","staffLayoutObjects","$mxNoteList","$mxLyricList","nLast","chordVoice","fullMeasureRest","restAndNoteCount","rest","parseIndex","offsetMeasureNote","attributeTagsToMethods","musicDataMethods","attributes","parseMeasureAttributes","$c","$mxObj","$mxNote","nextNoteIsChord","$mxObjNext","offsetIncrement","xmlToSimpleNote","xmlToRest","updateLyricsFromList","insertInMeasureOrVoice","xmlToChord","freeSpanners","xmlToPitch","xmlNoteToGeneralNoteHelper","$mxPitch","$mxAlter","accAlter","parseFloat","$mxAccidental","accObj","xmlToAccidental","$mxRest","xmlToDuration","xmlToTie","qLen","noteDivisions","durationType","allTies","$t0","lyricList","currentLyricNumber","xmlToLyric","$mxLyric","exc","$mxSyllabic","$mxElement","parseMeasureNumbers","mNumRaw","mNum","$mxAttributes","mxSub","$mxSub","$mxTime","xmlToTimeSignature","insertIntoMeasureOrVoice","$mxClef","xmlToClef","clefOctaveChange","$coc","$mxKey","keySig","xmlToKeySignature","musicxml","txt","sp","MusicXMLScoreParser","scoreFromText","dynamics","shortNames","longNames","ppp","mp","mf","fp","sf","ff","fff","englishNames","dynamicStrToScalar","None","pppp","ffff","Dynamic","_value","_volumeScalar","longName","englishName","Expression","vfe","Fermata","shorthandNotation","Notation","notationColumn","figureStrings","origNumbers","origModStrings","modifierStrings","_parseNotationColumn","_translateToLonghand","modifiers","figures","_getModifiers","_getFigures","nc","figure","numberString","modifierString","oldNumbers","newNumbers","oldModifierStrings","newModifierStrings","oldNumbersString","temp","newModifierString","modifierStringIndex","Modifier","Figure","specialModifiers","bb","bbb","bbbb","_toAccidental","modStr","pitchNameToAlter","pitchToAlter","modifyPitch","newAccidental","figuredBass","jp","jsonpickle","unpickler","fromPython","Converter","knownUnparsables","handlers","post_restore","_qtrLength","displaySequence","currentPart","streamPostRestore","_storedElementOffsetTuples","_py_class","streamPart","appendEl","insertAtStart","thisClass","kn","unparsable","jss","outStruct","decode","Harmony","_writeAsChord","_roman","chordStepModifications","_degreesList","_key","_figure","parseFigure","_parseFigure","updatePitches","_updatePitches","findFigure","newFigure","keyOrScale","harmony","miditools","transposeOctave","Event","timing","data1","data2","data3","midiCommand","midiNote","velocity","m21n","maxDelay","heldChordTime","heldChordNotes","timeOfLastNote","_baseTempo","metronome","enumerable","clearOldChords","nowInMs","sendOutChord","makeChords","jEvent","music21Note","chordNoteList","appendObject","quantizeLastNote","callBacks","raw","general","sendToMIDIjs","nowInMS","msSinceLastNote","normalQuarterNoteLength","numQuarterNotes","roundedQuarterLength","midiEvent","loadedSoundfonts","postLoadCallback","soundfont","isFirefox","InstallTrigger","isAudioTag","technology","instrumentObj","programChange","loadSoundfont","waitThenCall","ready","loadPlugin","onsuccess","MidiPlayer","player","Players","PlayInstance","speed","$playDiv","$controls","$playPause","playPng","$stop","stopPng","pausePlayStop","stopButton","$time","$timePlayed","$capsule","$timeRemaining","src","playing","pause","pausePng","resume","b64data","timeWarp","m21midiplayer","loadFile","fileLoaded","updatePlaying","$d","timePlayed","timeRemaining","timeCursor","eventjs","cancel","currentTime","state","timeFormatting","minutes","seconds","setAnimation","percent","songFinished","keyboard","callbacks","noteNameSvgObj","keyStyle","keyClass","startX","keyattrs","class","rx","ry","keyDOM","strokeColor","getAttribute","cx","stroke","cy","circleDom","labelOctaves","idStr","textfill","textattrs","textDom","textNode","createTextNode","parentNode","WhiteKey","BlackKey","Keyboard","whiteKeyWidth","_defaultWhiteKeyWidth","_defaultBlackKeyWidth","keyObjects","markC","showNames","showOctaves","endPitch","_startDNN","_endDNN","hideable","scrollable","keyClicked","clickHandler","sharpOffsets","oldSVG","svgParent","svgDOM","createSVG","replaceChild","wrapScrollable","appendHideableKeyboard","keyRect","thisKeyObject","storedStyle","fillColor","tempP","currentIndex","keyboardDiatonicLength","totalWidth","heightString","movingPitch","blackKeys","thisKeyboardObject","wki","wk","whitekeyCallbacksClick","wkSVG","makeKey","bk","blackKeyClicksCallback","offsetFromWhiteKey","bkSVG","bki","markMiddleC","markNoteNames","midC","addCircle","removeNoteNames","keyObj","addNoteName","removeNoteName","$wrapper","display","$bDown","redrawSVG","$bUp","$kWrapper","keyboardSVG","$container","$bInside","$b","background","triggerToggleShow","$explain","padding","$t","$parent","$k","jazzHighlight","intensityRGB","normalizedVelocity","intensity","layout","makeLayoutFromScore","containerWidth","partZero","layoutScore","LayoutScore","currentPage","Page","measureStart","measureEnd","currentSystem","System","currentSystemNumber","currentStaves","staffMaker","staffHolder","pNum","staff","Staff","staffNumber","systemNumber","scoreLayout","_width","pageNumber","systemStart","systemEnd","pageLayout","systemLayout","optimized","inheritedHeight","staffLayout","m21ToXml","xmlToM21","roman","figureShorthands","bb7b5b3","bb7b53","b7b5b3","functionalityScores","I","V7","V","V65","I6","V6","V43","I64","IV","i6","viio7","V42","viio65","viio6","ii65","ii43","ii42","IV6","ii6","VI","vi","viio","iio","iio42","bII6","iio43","iio65","III","VII","VII7","IV65","IV7","iii","iii6","vi6","expandShortHand","shorthand","shorthandGroups","shGroupOut","sh","correctSuffixForChordQuality","chordObj","inversionString","fifthType","qualityName","seventhType","romanToNumber","RomanNumeral","keyStr","_parsingComplete","primaryFigure","secondaryRomanNumeral","secondaryRomanNumeralKey","pivotChord","scaleCardinality","caseMatters","scaleDegree","frontAlterationString","frontAlterationTransposeInterval","frontAlterationAccidental","romanNumeralAlone","impliedQuality","impliedScale","scaleOffset","useImpliedScale","bracketedAlterations","omittedSteps","followsKeyChange","_functionalityScore","workingFigure","useScale","_correctForSecondaryRomanNumeral","_parseOmittedSteps","_parseBracketedAlterations","_parseFrontAlterations","_parseRNAloneAmidstAug6","_setImpliedQualityFromString","_tempRoot","_fixMinorVIandVII","expandedFigure","figuresNotationObj","numbersArr","_alterationRegex","alteration","innerAlteration","alterNotation","alterPitch","fati","newFati","_romanNumeralAloneRegex","_augmentedSixthRegex","rm","a6match","bassScaleDegree","bassScaleDegreeFromNotation","bassPitch","numberNotes","thisScaleDegree","pitchName","modifyPitchName","newNewPitch","newPitches","_matchAccidentalsToQuality","omittedPitches","thisCS","_correctBracketedPitches","notationObject","cDNN","tempChord","rootDNN","staffDistanceFromBassToRoot","bassSD","correctSemitones","_findSemitoneSizeForQuality","chordStepsToExamine","thisChordStep","thisCorrect","thisSemis","correctedSemis","faultyPitch","secondaryFigure","secondaryMode","quality","thisStep","matchAlteration","matchDegree","inversionName","fullChordName","suffix","degreeName","tonicDisplay","chordStr","tonicPitch","diffRootToTonic","defaultTempoValues","larghissimo","largamente","grave","largo","lento","adagio","slow","langsam","larghetto","adagietto","andante","andantino","maestoso","moderato","moderate","allegretto","animato","allegro","fast","schnell","allegrissimo","vivace","vivacissimo","presto","prestissimo","baseTempo","Metronome","tempoInt","numBeatsPerMeasure","minTempo","maxTempo","beat","chirpTimeout","silent","flash","tempoRanges","tempoIncreases","flashColor","$metronomeDiv","fadeOut","beatLength","silentFadeOut","fadeIn","_silentFlash","that","chirp","tr","tempoExtreme","tempoIncrease","trL","jWhere","metroThis","tempoHolder","newDiv","b1","b2","stopChirp","prepend","b3","increaseSpeedButton","increaseSpeed","prevAll","html","b4","decreaseSpeedButton","decreaseSpeed","$flash","tinyNotation","regularExpressions","REST","OCTAVE2","OCTAVE3","OCTAVE5","OCTAVE4","EDSHARP","EDFLAT","EDNAT","SHARP","FLAT","NAT","TYPE","TIE","PRECTIE","ID_EL","LYRIC","DOT","TIMESIG","PARTBREAK","TRIP","QUAD","ENDBRAC","TinyNotation","textIn","tokens","optionalScore","currentTSBarDuration","lastDurationQL","storedDict","lastNoteTied","inTrip","inQuad","endTupletAfterNote","tnre","token","MATCH","returnObject","innerPart","renderNotationDivs","classTypes","selector","allRender","thisTN","$thisTN","thisTNContents","textContent","newSVG","empty","intervalCache","MotionType","antiParallel","contrary","noMotion","oblique","parallel","similar","VoiceLeadingQuartet","v1n1","v1n2","v2n1","v2n2","analyticKey","unison","_v1n1","_v1n2","_v2n1","_v2n2","vIntervals","hIntervals","_findIntervals","which","obliqueMotion","parallelMotion","similarMotion","contraryMotion","antiParallelMotion","iV","iH","requiredInterval","parallelInterval","parallelUnison","parallelOctave","hiddenInterval","n1degree","n2degree","scale2","firstHarmony","secondHarmony","inwardContraryMotion","outwardContraryMotion","_setVoiceNote","keyValue","voiceLeading","webmidi","selectedOutputPort","selectedInputPort","access","$selectDiv","jazzDownloadUrl","storedPlugin","selectedJazzInterface","jazzMidiInArrived","webmidiEvent","timestamp","midiInArrived","midiMessageEvent","timeStamp","eventObject","createPlugin","override","classid","isJazz","visibility","createJazzSelector","$newSelect","Jazz","change","selectedInput","MidiInOpen","MidiInClose","selectedInterface","midiOptions","MidiInList","noneAppendOption","anySelected","allAppendOptions","$appendOption","oninputsuccess","oninputempty","selectionChanged","$select","storedStateChange","onstatechange","inputs","port","onmidimessage","close","createSelector","$midiSelectDiv","autoUpdate","existingMidiSelect","foundMidiSelects","requestMIDIAccess","then","populateSelect","$noneAppendOption","music21","bar","converter","exceptions21","tests","QUnit","assert","equal","ten","marc","nBoring","ok","m21o","deepEqual","notOk","st2","strictEqual","setOffsetBySite","contextS","canBeTonic","c1","setStemDirectionFromClef","tc","tc2","bc","d2","m6","n6","n7","n6clone","s2","na1","na2","s3","m4","m5","dynamic","volumeScalar","specifierAbbreviation","conv","testSharps","thisTest","expectedSharps","expectedMode","givenKeyName","givenMode","foundSharps","foundMode","es","dis","getLowerEnharmonic","getHigherEnharmonic","cDblSharp","dNatural","bTripleSharp","cDblFlat","bFlat","n3","outGroups","rn1","rnKey","figureAndKey","rn","pi","net","sr","first","af","getAttrByName","oct","tEl","sEl","names","indexes","lengths","cs","lastN","throws","r2","m1","m2","n11","n12","n13","n21","pf2","pf3","insertAndShift","outListNames","outListOffsets","om","omn","omo","s1","n4","div1","VLQ","N","vlq1","parallelFifth","vlq2","vlq3","isProperResolution","allTests"],"mappings":"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"}