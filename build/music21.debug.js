(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Music21"] = factory();
	else
		root["Music21"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 48);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return common; });
/* unused harmony export SingletonCounter */
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * common functions
 *
 * @exports music21/common
 */

/**
 * functions that are useful everywhere...
 *
 * @namespace music21.common
 * @memberof music21
 */
var common = {};
/**
 * concept borrowed from Vex.Flow.Merge, though here the source can be undefined;
 * http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically
 * recursive parts used in .clone()
 *
 * @function music21.common.merge
 * @param {Object} destination - object to have attributes placed into
 * @param {Object} source - object to take attributes from.
 * @memberof music21.common
 * @returns {Object} destination
 */

common.merge = function mergeRecursive(destination, source) {
  if (source === undefined || source === null) {
    return destination;
  }

  for (var p in source) {
    if (!{}.hasOwnProperty.call(source, p)) {
      continue;
    }

    try {
      // Property in destination object set; update its value.
      if (source[p] && source[p].constructor === Object) {
        destination[p] = mergeRecursive(destination[p], source[p]);
      } else {
        destination[p] = source[p];
      }
    } catch (e) {
      // Property in destination object not set; create it and set its value.
      destination[p] = source[p];
    }
  }

  return destination;
};

common.range = function common_range(start, stop, step) {
  if (step === undefined) {
    step = 1;
  }

  if (stop === undefined) {
    stop = start;
    start = 0;
  }

  var count = Math.ceil((stop - start) / step);
  return Array.apply(0, Array(count)).map(function (e, i) {
    return i * step + start;
  });
};
/**
 * Mix in another class into this class -- a simple form of multiple inheritance.
 * See articulations.Marcato for an example.
 *
 */


common.mixin = function common_mixin(OtherParent, thisClassOrObject) {
  var proto = Object.getPrototypeOf(OtherParent);
  var classProto = Object.getPrototypeOf(thisClassOrObject);

  while (proto) {
    for (var key in Object.keys(proto)) {
      if (!{}.hasOwnProperty.call(proto, key)) {
        continue;
      }

      if (!(key in classProto)) {
        classProto[key] = proto[key];
      }
    }

    proto = Object.getPrototypeOf(proto);
  }
};
/**
 * Aggregation -- closer to true multiple inheritance -- prefers last class's functions.  See
 * https://stackoverflow.com/questions/29879267/es6-class-multiple-inheritance
 *
 *  not currently used...
 */


common.aggregation = function (baseClass) {
  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    mixins[_key - 1] = arguments[_key];
  }

  var base =
  /*#__PURE__*/
  function (_baseClass) {
    _inherits(base, _baseClass);

    function base() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, base);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(base)).call.apply(_getPrototypeOf2, [this].concat(args)));
      mixins.forEach(function (mixin) {
        copyProps(_assertThisInitialized(_this), new mixin());
      });
      return _this;
    }

    return base;
  }(baseClass);

  var copyProps = function copyProps(target, source) {
    // this function copies all properties and symbols, filtering out some special ones
    // noinspection JSUnresolvedFunction
    Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source)).forEach(function (prop) {
      if (!prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/)) {
        Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));
      }
    });
  };

  mixins.forEach(function (mixin) {
    // outside constructor() to allow aggregation(A,B,C).staticFunction() to be called etc.
    copyProps(base.prototype, mixin.prototype);
    copyProps(base, mixin);
  });
  return base;
};
/**
 * posMod - return a modulo value that is not negative
 *
 * @param  {int} a value
 * @param  {int} b modulo
 * @return {int}   a mod b between 0 and b - 1
 */


common.posMod = function posMod(a, b) {
  if (a === undefined || b === undefined) {
    throw new Error('Modulo needs two numbers');
  }

  return (a % b + b) % b;
};
/**
 *
 * Returns the statistical mode (most commonly appearing element)
 * in a.
 *
 * In case of tie, returns the first element to reach the maximum
 * number of occurrences.
 *
 * @function music21.common.statisticalMode
 * @param {Array<*>} a - an array to analyze
 * @returns {Object} element with the highest frequency in a
 */


common.statisticalMode = function statisticalMode(a) {
  if (a.length === 0) {
    return null;
  }

  var modeMap = {};
  var maxEl = a[0];
  var maxCount = 1;

  for (var i = 0; i < a.length; i++) {
    var el = a[i];

    if (modeMap[el] == null) {
      modeMap[el] = 0;
    }

    modeMap[el] += 1;

    if (modeMap[el] > maxCount) {
      maxEl = el;
      maxCount = modeMap[el];
    }
  }

  return maxEl;
};
/**
 * fromRoman - Convert a Roman numeral (upper or lower) to an int.
 *
 * @param  {string} num roman numeral representation of a number
 * @return {int}     integer value of roman numeral;
 */


common.fromRoman = function fromRoman(num) {
  var inputRoman = num.toUpperCase();
  var subtractionValues = [1, 10, 100];
  var nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I'];
  var ints = [1000, 500, 100, 50, 10, 5, 1];
  var places = [];
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = inputRoman[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _c = _step.value;

      if (!nums.includes(_c)) {
        throw new Error('Value is not a valid roman numeral: ' + inputRoman);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"] != null) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  for (var i = 0; i < inputRoman.length; i++) {
    var c = inputRoman[i];
    var value = ints[nums.indexOf(c)];

    if (i < inputRoman.length - 1) {
      var nextValue = ints[nums.indexOf(inputRoman[i + 1])];

      if (nextValue > value && subtractionValues.includes(value)) {
        value *= -1;
      }
    }

    places.push(value);
  }

  var summation = 0;

  for (var _i = 0, _places = places; _i < _places.length; _i++) {
    var n = _places[_i];
    summation += n;
  }

  return summation;
};
/**
 * toRoman - Convert a number from 1 to 3999 to a roman numeral
 *
 * @param  {int} num number to convert
 * @return {string}     as roman numeral
 */


common.toRoman = function toRoman(num) {
  if (typeof num !== 'number') {
    throw new Error('expected integer, got ' + _typeof(num));
  }

  if (num < 0 || num > 4000) {
    throw new Error('Argument must be between 1 and 3999');
  }

  var ints = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];
  var nums = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'];
  var result = '';

  for (var i = 0; i < ints.length; i++) {
    var count = Math.floor(num / ints[i]);
    result += nums[i].repeat(count);
    num -= ints[i] * count;
  }

  return result;
};
/**
 * Creates an SVGElement of an SVG figure using the correct `document.createElementNS` call.
 *
 * @function music21.common.makeSVGright
 * @param {string} [tag='svg'] - a tag, such as 'rect', 'circle', 'text', or 'svg'
 * @param {Object} [attrs] - attributes to pass to the tag.
 * @memberof music21.common
 * @returns {SVGElement}
 */


common.makeSVGright = function makeSVGright() {
  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'svg';
  var attrs = arguments.length > 1 ? arguments[1] : undefined;

  // see http://stackoverflow.com/questions/3642035/jquerys-append-not-working-with-svg-element
  // normal JQuery does not work.
  if (attrs === undefined) {
    attrs = {};
  }

  var el = document.createElementNS('http://www.w3.org/2000/svg', tag);

  for (var k in attrs) {
    if (!{}.hasOwnProperty.call(attrs, k)) {
      continue;
    }

    el.setAttribute(k, attrs[k]);
  }

  return el;
};
/**
 * Take a number such as 32 and return a string such as "nd"
 * (for "32nd") etc.
 *
 * @function music21.common.ordinalAbbreviation
 * @param {int} value
 * @param {Boolean} [plural=false] - make plural (note that "21st" plural is "21st")
 * @return {string}
 */


common.ordinalAbbreviation = function ordinalAbbreviation(value, plural) {
  var post = '';
  var valueHundreths = value % 100;

  if (valueHundreths === 11 || valueHundreths === 12 || valueHundreths === 13) {
    post = 'th';
  } else {
    var valueMod = value % 10;

    if (valueMod === 1) {
      post = 'st';
    } else if (valueMod === 2) {
      post = 'nd';
    } else if (valueMod === 3) {
      post = 'rd';
    } else {
      post = 'th';
    }
  }

  if (post !== 'st' && plural) {
    post += 's';
  }

  return post;
};
/**
 * Find a rational number approximation of this floating point.
 *
 * @function music21.common.rationalize
 * @param {number} ql - number to rationalize
 * @param {number} [epsilon=0.001] - how close to get
 * @param {int} [maxDenominator=50] - maximum denominator
 * @returns {object|undefined} {'numerator: numerator, 'denominator': denominator}
 */


common.rationalize = function rationalize(ql, epsilon, maxDenominator) {
  epsilon = epsilon || 0.001;
  maxDenominator = maxDenominator || 50;

  for (var i = 2; i < maxDenominator; i++) {
    if (Math.abs(ql * i - Math.round(ql * i)) < epsilon) {
      var numerator = Math.round(ql * i);
      var denominator = i;
      return {
        numerator: numerator,
        denominator: denominator
      };
    }
  }

  return undefined;
};
/**
 * Change something that could be a string or number and might
 * end with "px" to a number.
 *
 * "400px" -> 400
 *
 * @function music21.common.stripPx
 * @param {number|string} str -- string that might have 'px' at the end or not
 * @returns {number} a number to use
 */


common.stripPx = function stripPx(str) {
  if (typeof str === 'string') {
    var pxIndex = str.indexOf('px');
    str = str.slice(0, pxIndex);
    return parseInt(str);
  } else {
    return str;
  }
};
/**
 * Find name in the query string (?name=value) and return value.
 *
 * @function music21.common.urlParam
 * @param {string} name - url parameter to find
 * @returns {string} may be "" if empty.
 */


common.urlParam = function urlParam(name) {
  name = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
  var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
  var results = regex.exec(location.search);
  return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
};

common.arrayEquals = function arrayEquals(a1, a2) {
  if (a1.length !== a2.length) {
    return false;
  }

  for (var i = 0; i < a1.length; i++) {
    if (a1[i] instanceof Array && a2[i] instanceof Array) {
      if (!arrayEquals(a1[i], a2[i])) {
        return false;
      }
    } else if (a1[i] !== a2[i]) {
      return false;
    }
  }

  return true;
};

var _singletonCounter = {};
_singletonCounter.value = 0;
var SingletonCounter =
/*#__PURE__*/
function () {
  function SingletonCounter() {
    _classCallCheck(this, SingletonCounter);
  }

  _createClass(SingletonCounter, [{
    key: "call",
    value: function call() {
      var post = _singletonCounter.value;
      _singletonCounter.value += 1;
      return post;
    }
  }]);

  return SingletonCounter;
}();
common.SingletonCounter = SingletonCounter;
/**
 * runs a callback with either "visible" or "hidden" as the argument anytime the
 * window or document state changes.
 *
 * Depending on the browser, may be called multiple times with the same argument
 * for a single event.  For instance, Safari calls once on losing focus completely
 * but twice for a tab change.
 *
 * @function music21.common.setWindowVisibilityWatcher
 * @param {function} callback
 */

common.setWindowVisibilityWatcher = function setWindowVisibilityWatcher(callback) {
  var hidden = 'hidden'; // Standards:

  if (hidden in document) {
    document.addEventListener('visibilitychange', windowFocusChanged);
  } else if ('mozHidden' in document) {
    hidden = 'mozHidden';
    document.addEventListener('mozvisibilitychange', windowFocusChanged);
  } else if ('webkitHidden' in document) {
    hidden = 'webkitHidden';
    document.addEventListener('webkitvisibilitychange', windowFocusChanged);
  } else if ('msHidden' in document) {
    hidden = 'msHidden';
    document.addEventListener('msvisibilitychange', windowFocusChanged);
  } else if ('onfocusin' in document) {
    // IE 9 and lower:
    document.onfocusin = windowFocusChanged;
    document.onfocusout = windowFocusChanged;
  } // Also catch window... -- get two calls for a tab shift, but one for window losing focus
  // noinspection AssignmentResultUsedJS


  window.onpageshow = window.onpagehide = window.onfocus = window.onblur = windowFocusChanged;

  function windowFocusChanged(evt) {
    var v = 'visible';
    var h = 'hidden';
    var evtMap = {
      focus: v,
      focusin: v,
      pageshow: v,
      blur: h,
      focusout: h,
      pagehide: h
    }; // noinspection JSDeprecatedSymbols

    evt = evt || window.event;
    var callbackState = '';

    if (evt.type in evtMap) {
      callbackState = evtMap[evt.type];
    } else {
      callbackState = this[hidden] ? 'hidden' : 'visible';
    }

    callback(callbackState, evt);
  } // set the initial state


  var initialState = document.visibilityState === 'visible' ? 'focus' : 'blur';
  var initialStateEvent = {
    type: initialState
  };
  windowFocusChanged(initialStateEvent);
};

common.urls = {
  css: '/css',
  webResources: '/webResources',
  midiPlayer: '/webResources/midiPlayer',
  soundfontUrl: '/src/ext/soundfonts/FluidR3_GM/'
};

common.hyphenToCamelCase = function hyphenToCamelCase(usrStr) {
  return usrStr.replace(/-([a-zA-Z])/, function (all, match) {
    return match.toUpperCase();
  });
};

common.numToIntOrFloat = function numToIntOrFloat(value) {
  var intVal = Math.round(value);

  if (Math.abs(value - intVal) < 0.000001) {
    return intVal;
  } else {
    return value;
  }
};

/* harmony default export */ __webpack_exports__["b"] = (common);

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Music21Exception", function() { return Music21Exception; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StreamException", function() { return StreamException; });
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// not working properly...
var ExtendableError =
/*#__PURE__*/
function (_Error) {
  _inherits(ExtendableError, _Error);

  function ExtendableError(message) {
    var _this;

    _classCallCheck(this, ExtendableError);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExtendableError).call(this, message));
    _this.name = _this.constructor.name;
    _this.message = message;

    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);
    } else {
      _this.stack = new Error(message).stack;
    }

    return _this;
  }

  return ExtendableError;
}(_wrapNativeSuper(Error));

var Music21Exception =
/*#__PURE__*/
function (_ExtendableError) {
  _inherits(Music21Exception, _ExtendableError);

  function Music21Exception() {
    _classCallCheck(this, Music21Exception);

    return _possibleConstructorReturn(this, _getPrototypeOf(Music21Exception).apply(this, arguments));
  }

  return Music21Exception;
}(ExtendableError);
var StreamException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(StreamException, _Music21Exception);

  function StreamException() {
    _classCallCheck(this, StreamException);

    return _possibleConstructorReturn(this, _getPrototypeOf(StreamException).apply(this, arguments));
  }

  return StreamException;
}(Music21Exception);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return base; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Music21Object; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__derivation_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__duration_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sites_js__ = __webpack_require__(28);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/base -- objects in base in music21p routines
 *
 * does not load the other modules, music21/moduleLoader.js does that.
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab
 *
 */





/**
 * module for Music21Objects, see {@link music21.base}
 *
 * @requires music21/common
 * @requires music21/duration
 * @requires music21/prebase
 * @requires music21/sites
 * @exports music21/base
 */

/**
 * Module for Music21Objects.  Does not load other modules, see {@link music21.moduleLoader}
 * for this functionality.
 *
 * @namespace music21.base
 * @memberof music21
 */

var base = {};
/**
 * Base class for any object that can be placed in a {@link music21.stream.Stream}.
 *
 * @class Music21Object
 * @memberof music21.base
 * @extends music21.prebase.ProtoM21Object
 * @property {Object} activeSite - hardlink to a {@link music21.stream.Stream} containing the element.
 * @property {number} classSortOrder - Default sort order for this class (default 20; override in other classes). Lower numbered objects will sort before other objects in the staff if priority and offset are the same.
 * @property {music21.duration.Duration} duration - the duration (object) for the element. (can be set with a quarterLength also)
 * @property {Array} groups - An Array of strings representing group (equivalent to css classes) to assign to the object. (default [])
 * @property {boolean} isMusic21Object - true
 * @property {boolean} isStream - false
 * @property {number} offset - offset from the beginning of the stream (in quarterLength)
 * @property {number} priority - The priority (lower = earlier or more left) for elements at the same offset. (default 0)
 */

var Music21Object =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Music21Object, _prebase$ProtoM21Obje);

  function Music21Object(keywords) {
    var _this;

    _classCallCheck(this, Music21Object);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Music21Object).call(this));
    _this.classSortOrder = 20; // default;

    _this._activeSite = undefined;
    _this._naiveOffset = 0; // this._derivation = undefined;
    // this._style = undefined;
    // this._editorial = undefined;

    _this._duration = new __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].Duration();
    _this._derivation = undefined; // avoid making extra objects...

    _this._priority = 0; // default;

    _this.id = __WEBPACK_IMPORTED_MODULE_4__sites_js__["getId"](_assertThisInitialized(_this));
    _this.groups = []; // groups

    _this.sites = new __WEBPACK_IMPORTED_MODULE_4__sites_js__["Sites"]();
    _this.isMusic21Object = true;
    _this.isStream = false;
    _this.groups = []; // custom object in m21p
    // beat, measureNumber, etc.
    // lots to do...
    // noinspection JSUnusedLocalSymbols

    _this._cloneCallbacks._activeSite = function Music21Object_cloneCallbacks_activeSite(keyName, newObj, self) {
      newObj[keyName] = undefined;
    };

    _this._cloneCallbacks._derivation = function Music21Music21Object_cloneCallbacks_derivation(keyName, newObj, self) {
      var newDerivation = new __WEBPACK_IMPORTED_MODULE_1__derivation_js__["Derivation"](newObj);
      newDerivation.origin = self;
      newDerivation.method = 'clone';
      newObj[keyName] = newDerivation;
    }; // noinspection JSUnusedLocalSymbols


    _this._cloneCallbacks.sites = function Music21Object_cloneCallbacks_sites(keyName, newObj, self) {
      newObj[keyName] = new __WEBPACK_IMPORTED_MODULE_4__sites_js__["Sites"]();
    };

    return _this;
  }

  _createClass(Music21Object, [{
    key: "stringInfo",
    value: function stringInfo() {
      var id16 = this.id;

      if (typeof id16 === 'number') {
        id16 = id16.toString(16);

        while (id16.length < 4) {
          id16 = '0' + id16;
        }

        id16 = '0x' + id16;
      }

      return id16;
    }
  }, {
    key: "mergeAttributes",
    value: function mergeAttributes(other) {
      // id;
      this.groups = other.groups.slice();
    }
    /**
     * Return the offset of this element in a given site -- use .offset if you are sure that
     * site === activeSite.
     *
     * Raises an Error if not in site.
     *
     * Does not change activeSite or .offset
     *
     * @param {music21.stream.Stream} site
     * @param {boolean} [stringReturns=false] -- allow strings to be returned
     * @returns Number|undefined
     */

  }, {
    key: "getOffsetBySite",
    value: function getOffsetBySite(site) {
      var stringReturns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (site === undefined) {
        return this._naiveOffset;
      }

      return site.elementOffset(this, stringReturns);
    }
    /**
     * setOffsetBySite - sets the offset for a given Stream
     *
     * @param  {music21.stream.Stream} site  Stream object
     * @param  {number} value offset
     */

  }, {
    key: "setOffsetBySite",
    value: function setOffsetBySite(site, value) {
      if (site !== undefined) {
        site.setElementOffset(this, value);
      } else {
        this._naiveOffset = value;
      }
    }
    /**
     * For an element which may not be in site, but might be in a Stream
     * in site (or further in streams), find the cumulative offset of the
     * clement in that site.
     *
     * See also music21.stream.iterator.RecursiveIterator.currentHierarchyOffset for
     * a method that is about 10x faster when running through a recursed stream.
     *
     * @param {music21.stream.Stream} site
     * @returns Number|undefined
     */

  }, {
    key: "getOffsetInHierarchy",
    value: function getOffsetInHierarchy(site) {
      try {
        return this.getOffsetBySite(site);
      } catch (e) {} // eslint-disable-line no-empty


      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.contextSites()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step$value = _slicedToArray(_step.value, 3),
              csSite = _step$value[0],
              csOffset = _step$value[1],
              unused_csRecursionType = _step$value[2];

          if (csSite === site) {
            return csOffset;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      throw new Error("Element ".concat(this, " is not in hierarchy of ").concat(site));
    } // ---------- Contexts -------------

  }, {
    key: "getContextByClass",
    value: function getContextByClass(className, options) {
      var payloadExtractor = function payloadExtractor(useSite, flatten, positionStart, getElementMethod, classList) {
        // this should all be done as a tree...
        // do not use .flat or .semiFlat so as not
        // to create new sites.
        // VERY HACKY...
        var lastElement;

        for (var i = 0; i < useSite.length; i++) {
          var thisElement = useSite._elements[i];
          var indexOffset = useSite.elementOffset(thisElement);
          var matchClass = thisElement.isClassOrSubclass(classList);

          if (flatten === false && !matchClass) {
            continue;
          } else if (!thisElement.isStream && !matchClass) {
            continue;
          } // is a stream or an element of the appropriate class...
          // first check normal elements


          if (getElementMethod.includes('Before') && indexOffset >= positionStart) {
            if (getElementMethod.includes('At') && lastElement === undefined) {
              lastElement = thisElement;

              try {
                lastElement.activeSite = useSite;
              } catch (e) {// do nothing... should not happen.
              }
            } else if (lastElement !== undefined && lastElement.isClassOrSubclass(classList)) {
              return lastElement;
            } else if (matchClass) {
              return thisElement;
            }
          } else {
            lastElement = thisElement;
          }

          if (getElementMethod.includes('After') && indexOffset > positionStart && matchClass) {
            return thisElement;
          } // now check stream... already filtered out flatten == false;


          if (thisElement.isStream) {
            var potentialElement = payloadExtractor(thisElement, flatten, positionStart + indexOffset, getElementMethod, classList);

            if (potentialElement !== undefined) {
              return potentialElement;
            }
          }
        }

        if (lastElement !== undefined && lastElement.isClassOrSubclass(classList)) {
          return lastElement;
        } else {
          return undefined;
        }
      };

      var params = {
        getElementMethod: 'getElementAtOrBefore',
        sortByCreationTime: false
      };
      __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].merge(params, options);
      var getElementMethod = params.getElementMethod;
      var sortByCreationTime = params.sortByCreationTime;

      if (className !== undefined && !(className instanceof Array)) {
        className = [className];
      }

      if (getElementMethod.includes('At') && this.isClassOrSubclass(className)) {
        return this;
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.contextSites({
          returnSortTuples: true,
          sortByCreationTime: sortByCreationTime
        })[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _step2$value = _slicedToArray(_step2.value, 3),
              site = _step2$value[0],
              positionStart = _step2$value[1],
              searchType = _step2$value[2];

          if (getElementMethod.includes('At') && site.isClassOrSubclass(className)) {
            return site;
          }

          if (searchType === 'elementsOnly' || searchType === 'elementsFirst') {
            var contextEl = payloadExtractor(site, false, positionStart, getElementMethod, className);

            if (contextEl !== undefined) {
              try {
                contextEl.activeSite = site;
              } catch (e) {// do nothing.
              }

              return contextEl;
            }
          } else if (searchType !== 'elementsOnly') {
            if (getElementMethod.includes('After') && (className === undefined || site.isClassOrSubclass(className))) {
              if (!getElementMethod.includes('NotSelf') && this !== site) {
                return site;
              }
            }

            var _contextEl = payloadExtractor(site, 'semiFlat', positionStart, getElementMethod, className);

            if (_contextEl !== undefined) {
              try {
                _contextEl.activeSite = site;
              } catch (e) {// do nothing.
              }

              return _contextEl;
            }

            if (getElementMethod.includes('Before') && (className === undefined || site.isClassOrSubclass(className))) {
              if (!getElementMethod.includes('NotSelf') || this !== site) {
                return site;
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return undefined;
    }
  }, {
    key: "contextSites",
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function contextSites(options) {
      var params, memo, recursionType, topLevel, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, siteObj, offsetInStream, newOffset, positionInStream, _recursionType, newParams, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, _step6$value, topLevelInner, inStreamPos, recurType, inStreamOffset, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, derivatedObject, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _step5$value, derivedSite, derivedOffset, derivedRecurseType, offsetAdjustedCsTuple;

      return regeneratorRuntime.wrap(function contextSites$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              params = {
                callerFirst: undefined,
                memo: [],
                offsetAppend: 0.0,
                sortByCreationTime: false,
                priorityTarget: undefined,
                returnSortTuples: false,
                followDerivation: true
              };
              __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].merge(params, options);
              memo = params.memo;

              if (!(params.callerFirst === undefined)) {
                _context.next = 10;
                break;
              }

              params.callerFirst = this;

              if (!(this.isStream && !(this in memo))) {
                _context.next = 9;
                break;
              }

              recursionType = this.recursionType;
              _context.next = 9;
              return [this, 0.0, recursionType];

            case 9:
              memo.push(this);

            case 10:
              if (params.priorityTarget === undefined && !params.sortByCreationType) {
                params.priorityTarget = this.activeSite;
              }

              topLevel = this;
              _iteratorNormalCompletion3 = true;
              _didIteratorError3 = false;
              _iteratorError3 = undefined;
              _context.prev = 15;
              _iterator3 = this.sites.yieldSites(params.sortByCreationTime, params.priorityTarget, true // excludeNone
              )[Symbol.iterator]();

            case 17:
              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                _context.next = 63;
                break;
              }

              siteObj = _step3.value;

              if (!memo.includes(siteObj)) {
                _context.next = 21;
                break;
              }

              return _context.abrupt("continue", 60);

            case 21:
              if (!siteObj.classes.includes('SpannerStorage')) {
                _context.next = 23;
                break;
              }

              return _context.abrupt("continue", 60);

            case 23:
              // let offset = this.getOffsetBySite(siteObj);
              // followDerivation;
              offsetInStream = siteObj.elementOffset(this);
              newOffset = offsetInStream + params.offsetAppend;
              positionInStream = newOffset;
              _recursionType = siteObj.recursionType;
              _context.next = 29;
              return [siteObj, positionInStream, _recursionType];

            case 29:
              memo.push(siteObj);
              newParams = {
                callerFirst: params.callerFirst,
                memo: memo,
                offsetAppend: positionInStream,
                // .offset
                returnSortTuples: true,
                // always!
                sortByCreationTime: params.sortByCreationTime
              };
              _iteratorNormalCompletion6 = true;
              _didIteratorError6 = false;
              _iteratorError6 = undefined;
              _context.prev = 34;
              _iterator6 = siteObj.contextSites(newParams)[Symbol.iterator]();

            case 36:
              if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {
                _context.next = 46;
                break;
              }

              _step6$value = _slicedToArray(_step6.value, 3), topLevelInner = _step6$value[0], inStreamPos = _step6$value[1], recurType = _step6$value[2];
              inStreamOffset = inStreamPos; // .offset;
              // const hypotheticalPosition = inStreamOffset; // more complex w/ sortTuples

              if (memo.includes(topLevelInner)) {
                _context.next = 43;
                break;
              }

              _context.next = 42;
              return [topLevelInner, inStreamOffset, recurType];

            case 42:
              memo.push(topLevelInner);

            case 43:
              _iteratorNormalCompletion6 = true;
              _context.next = 36;
              break;

            case 46:
              _context.next = 52;
              break;

            case 48:
              _context.prev = 48;
              _context.t0 = _context["catch"](34);
              _didIteratorError6 = true;
              _iteratorError6 = _context.t0;

            case 52:
              _context.prev = 52;
              _context.prev = 53;

              if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
                _iterator6["return"]();
              }

            case 55:
              _context.prev = 55;

              if (!_didIteratorError6) {
                _context.next = 58;
                break;
              }

              throw _iteratorError6;

            case 58:
              return _context.finish(55);

            case 59:
              return _context.finish(52);

            case 60:
              _iteratorNormalCompletion3 = true;
              _context.next = 17;
              break;

            case 63:
              _context.next = 69;
              break;

            case 65:
              _context.prev = 65;
              _context.t1 = _context["catch"](15);
              _didIteratorError3 = true;
              _iteratorError3 = _context.t1;

            case 69:
              _context.prev = 69;
              _context.prev = 70;

              if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
                _iterator3["return"]();
              }

            case 72:
              _context.prev = 72;

              if (!_didIteratorError3) {
                _context.next = 75;
                break;
              }

              throw _iteratorError3;

            case 75:
              return _context.finish(72);

            case 76:
              return _context.finish(69);

            case 77:
              if (!params.followDerivation) {
                _context.next = 129;
                break;
              }

              _iteratorNormalCompletion4 = true;
              _didIteratorError4 = false;
              _iteratorError4 = undefined;
              _context.prev = 81;
              _iterator4 = topLevel.derivation.chain()[Symbol.iterator]();

            case 83:
              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {
                _context.next = 115;
                break;
              }

              derivatedObject = _step4.value;
              _iteratorNormalCompletion5 = true;
              _didIteratorError5 = false;
              _iteratorError5 = undefined;
              _context.prev = 88;
              _iterator5 = derivatedObject.contextSites({
                callerFirst: undefined,
                memo: memo,
                offsetAppend: 0.0,
                returnSortTuples: true,
                sortByCreationTime: params.sortByCreationTime
              })[Symbol.iterator]();

            case 90:
              if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {
                _context.next = 98;
                break;
              }

              _step5$value = _slicedToArray(_step5.value, 3), derivedSite = _step5$value[0], derivedOffset = _step5$value[1], derivedRecurseType = _step5$value[2];
              offsetAdjustedCsTuple = [derivedSite, derivedOffset + params.offsetAppend, derivedRecurseType];
              _context.next = 95;
              return offsetAdjustedCsTuple;

            case 95:
              _iteratorNormalCompletion5 = true;
              _context.next = 90;
              break;

            case 98:
              _context.next = 104;
              break;

            case 100:
              _context.prev = 100;
              _context.t2 = _context["catch"](88);
              _didIteratorError5 = true;
              _iteratorError5 = _context.t2;

            case 104:
              _context.prev = 104;
              _context.prev = 105;

              if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
                _iterator5["return"]();
              }

            case 107:
              _context.prev = 107;

              if (!_didIteratorError5) {
                _context.next = 110;
                break;
              }

              throw _iteratorError5;

            case 110:
              return _context.finish(107);

            case 111:
              return _context.finish(104);

            case 112:
              _iteratorNormalCompletion4 = true;
              _context.next = 83;
              break;

            case 115:
              _context.next = 121;
              break;

            case 117:
              _context.prev = 117;
              _context.t3 = _context["catch"](81);
              _didIteratorError4 = true;
              _iteratorError4 = _context.t3;

            case 121:
              _context.prev = 121;
              _context.prev = 122;

              if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
                _iterator4["return"]();
              }

            case 124:
              _context.prev = 124;

              if (!_didIteratorError4) {
                _context.next = 127;
                break;
              }

              throw _iteratorError4;

            case 127:
              return _context.finish(124);

            case 128:
              return _context.finish(121);

            case 129:
            case "end":
              return _context.stop();
          }
        }
      }, contextSites, this, [[15, 65, 69, 77], [34, 48, 52, 60], [53,, 55, 59], [70,, 72, 76], [81, 117, 121, 129], [88, 100, 104, 112], [105,, 107, 111], [122,, 124, 128]]);
    })
  }, {
    key: "activeSite",
    get: function get() {
      return this._activeSite;
    },
    set: function set(site) {
      if (site === undefined) {
        this._activeSite = undefined;
        this._activeSiteStoredOffset = undefined;
      } else {
        try {
          site.elementOffset(this);
        } catch (e) {
          throw new __WEBPACK_IMPORTED_MODULE_4__sites_js__["SitesException"]('activeSite cannot be set for an object not in the stream');
        }

        this._activeSite = site;
      }
    }
  }, {
    key: "derivation",
    get: function get() {
      if (this._derivation === undefined) {
        this._derivation = new __WEBPACK_IMPORTED_MODULE_1__derivation_js__["Derivation"](this);
      }

      return this._derivation;
    },
    set: function set(newDerivation) {
      this._derivation = newDerivation;
    }
  }, {
    key: "measureNumber",
    get: function get() {
      if (this.activeSite !== undefined && this.activeSite.classes.includes('Measure')) {
        return this.activeSite.number;
      } else {
        var m = this.sites.getObjByClass('Measure');

        if (m !== undefined) {
          return m.number;
        } else {
          return undefined;
        }
      }
    }
  }, {
    key: "offset",
    get: function get() {
      if (this.activeSite === undefined) {
        return this._naiveOffset;
      } else {
        return this.activeSite.elementOffset(this);
      }
    },
    set: function set(newOffset) {
      if (this.activeSite === undefined) {
        this._naiveOffset = newOffset;
      } else {
        this.activeSite.setElementOffset(this, newOffset);
      }
    }
  }, {
    key: "priority",
    get: function get() {
      return this._priority;
    },
    set: function set(p) {
      this._priority = p;
    }
  }, {
    key: "duration",
    get: function get() {
      return this._duration;
    },
    set: function set(newDuration) {
      if (_typeof(newDuration) === 'object') {
        this._duration = newDuration; // common errors below...
      } else if (typeof newDuration === 'number') {
        this._duration.quarterLength = newDuration;
      } else if (typeof newDuration === 'string') {
        this._duration.type = newDuration;
      }
    }
  }, {
    key: "quarterLength",
    get: function get() {
      return this.duration.quarterLength;
    },
    set: function set(ql) {
      this.duration.quarterLength = ql;
    }
  }]);

  return Music21Object;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
base.Music21Object = Music21Object;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return pitch; });
/* unused harmony export Accidental */
/* unused harmony export Pitch */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_js__ = __webpack_require__(0);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21 features.
 * music21/pitch -- pitch routines
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */



/**
 * pitch module.  See {@link music21.pitch} namespace
 *
 * @exports music21/pitch
 */

/**
 * Pitch related objects and methods
 *
 * @namespace music21.pitch
 * @memberof music21
 * @requires music21/prebase
 */

var pitch = {};
/**
 * @class Accidental
 * @memberof music21.pitch
 * @param {string|number} accName - an accidental name
 * @property {number} alter
 * @property {string} displayType
 * @property {boolean|undefined} displayStatus
 * @extends music21.prebase.ProtoM21Object
 */

var Accidental =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Accidental, _prebase$ProtoM21Obje);

  function Accidental(accName) {
    var _this;

    _classCallCheck(this, Accidental);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Accidental).call(this));
    _this._name = '';
    /**
     *
     * @type {number}
     * @private
     */

    _this._alter = 0.0;
    /**
     *
     * @type {string}
     * @private
     */

    _this._modifier = '';
    /**
     *
     * @type {string}
     * @private
     */

    _this._unicodeModifier = '';
    _this.displayType = 'normal'; // "normal", "always" supported currently

    _this.displayStatus = undefined; // true, false, undefined

    _this.set(accName);

    return _this;
  }

  _createClass(Accidental, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.name;
    }
    /**
     * Sets a parameter of the accidental and updates name, alter, and modifier to suit.
     *
     * @param {number|string} accName - the name, number, or modifier to set
     * @returns {undefined}
     */

  }, {
    key: "set",
    value: function set(accName) {
      if (accName !== undefined && accName.toLowerCase !== undefined) {
        accName = accName.toLowerCase();
      }

      if (accName === 'natural' || accName === 'n' || accName === 0 || accName === undefined) {
        this._name = 'natural';
        this._alter = 0.0;
        this._modifier = '';
        this._unicodeModifier = '♮';
      } else if (accName === 'sharp' || accName === '#' || accName === 1) {
        this._name = 'sharp';
        this._alter = 1.0;
        this._modifier = '#';
        this._unicodeModifier = '♯';
      } else if (accName === 'flat' || accName === '-' || accName === 'b' || accName === -1) {
        this._name = 'flat';
        this._alter = -1.0;
        this._modifier = '-';
        this._unicodeModifier = '♭';
      } else if (accName === 'double-flat' || accName === '--' || accName === -2) {
        this._name = 'double-flat';
        this._alter = -2.0;
        this._modifier = '--';
        this._unicodeModifier = '&#x1d12b;';
      } else if (accName === 'double-sharp' || accName === '##' || accName === 2) {
        this._name = 'double-sharp';
        this._alter = 2.0;
        this._modifier = '##';
        this._unicodeModifier = '&#x1d12a;';
      } else if (accName === 'triple-flat' || accName === '---' || accName === -3) {
        this._name = 'triple-flat';
        this._alter = -3.0;
        this._modifier = '---';
        this._unicodeModifier = '♭&#x1d12b;';
      } else if (accName === 'triple-sharp' || accName === '###' || accName === 3) {
        this._name = 'triple-sharp';
        this._alter = 3.0;
        this._modifier = '###';
        this._unicodeModifier = '&#x1d12a;';
      } else if (accName === 'quadruple-flat' || accName === '----' || accName === -4) {
        this._name = 'quadruple-flat';
        this._alter = -4.0;
        this._modifier = '----';
        this._unicodeModifier = '♭&#x1d12b;';
      } else if (accName === 'quadruple-sharp' || accName === '####' || accName === 4) {
        this._name = 'quadruple-sharp';
        this._alter = 4.0;
        this._modifier = '####';
        this._unicodeModifier = '&#x1d12a;';
      } else {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('Accidental is not supported: ' + accName);
      }
    }
    /**
     * Return or set the name of the accidental ('flat', 'sharp', 'natural', etc.);
     *
     * When set, updates alter and modifier.
     *
     * @memberof music21.pitch.Accidental#
     * @var {string} name
     */

  }, {
    key: "name",
    get: function get() {
      return this._name;
    },
    set: function set(n) {
      this.set(n);
    }
    /**
     * Return or set the alter of the accidental
     *
     * When set, updates name and modifier.
     *
     * @memberof music21.pitch.Accidental#
     * @var {number} alter
     */

  }, {
    key: "alter",
    get: function get() {
      return this._alter;
    },
    set: function set(alter) {
      this.set(alter);
    }
    /**
     * Return or set the modifier ('-', '#', '')
     *
     * When set, updates alter and name.
      * @memberof music21.pitch.Accidental#
     * @var {string} modifier
     */

  }, {
    key: "modifier",
    get: function get() {
      return this._modifier;
    },
    set: function set(modifier) {
      this.set(modifier);
    }
    /**
     * Returns the modifier for vexflow ('b', '#', 'n')
     *
     * @memberof music21.pitch.Accidental#
     * @var {string} vexflowModifier
     * @readonly
     */

  }, {
    key: "vexflowModifier",
    get: function get() {
      // todo -- rewrite with mapping.
      var m = this.modifier;

      if (m === '') {
        return 'n';
      } else if (m === '#') {
        return '#';
      } else if (m === '-') {
        return 'b';
      } else if (m === '##') {
        return '##';
      } else if (m === '--') {
        return 'bb';
      } else if (m === '###') {
        return '###';
      } else if (m === '---') {
        return 'bbb';
      } else {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('Vexflow does not support: ' + m);
      }
    }
    /**
     * Returns the modifier in unicode or
     * for double and triple accidentals, as a hex escape
     *
     * @memberof music21.pitch.Accidental#
     * @var {string} unicodeModifier
     * @readonly
     */

  }, {
    key: "unicodeModifier",
    get: function get() {
      return this._unicodeModifier;
    }
  }]);

  return Accidental;
}(__WEBPACK_IMPORTED_MODULE_1__prebase_js__["a" /* prebase */].ProtoM21Object);
pitch.Accidental = Accidental;
pitch.nameToMidi = {
  C: 0,
  D: 2,
  E: 4,
  F: 5,
  G: 7,
  A: 9,
  B: 11
};
pitch.nameToSteps = {
  C: 0,
  D: 1,
  E: 2,
  F: 3,
  G: 4,
  A: 5,
  B: 6
};
pitch.stepsToName = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];
pitch.midiToName = ['C', 'C#', 'D', 'E-', 'E', 'F', 'F#', 'G', 'A-', 'A', 'B-', 'B'];
/**
 * Pitch objects are found in {@link music21.note.Note} objects, and many other places.
 *
 * They do not have a {@link music21.duration.Duration} associated with them, so they
 * cannot be placed inside {@link music21.stream.Stream} objects.
 *
 * Valid pitch name formats are
 * - "C", "D', etc. ("B" = American B; "H" is not allowed)
 * - "C#", "C-" (C-flat; do not use "b" for flat), "C##", "C###", "C--" etc.
 * - Octave may be specified after the name + accidental: "C#4" etc.
 * - Octave can be arbitrarily high ("C10") but only as low as "C0" because "C-1" would be interpreted as C-flat octave 1; shift octave later for very low notes.
 * - If octave is not specified, the system will usually use octave 4, but might adjust according to context. If you do not like this behavior, give an octave always.
 * - Microtones are not supported in music21j (they are in music21p)
 *
 * @class Pitch
 * @memberof music21.pitch
 * @param {string} pn - name of the pitch, with or without octave, see above.
 * @extends music21.prebase.ProtoM21Object
 * @property {music21.pitch.Accidental|undefined} accidental - link to an accidental
 * @property {number} diatonicNoteNum - diatonic number of the pitch, where 29 = C4, C#4, C-4, etc.; 30 = D-4, D4, D#4, etc. updates other properties.
 * @property {number} midi - midi number of the pitch (C4 = 60); readonly. See {@link music21.pitch.Pitch#ps} for setable version.
 * @property {string} name - letter name of pitch + accidental modifier; e.g., B-flat = 'B-'; changes automatically w/ step and accidental
 * @property {string} nameWithOctave - letter name of pitch + accidental modifier + octave; changes automatically w/ step, accidental, and octave
 * @property {number} octave - number for the octave, where middle C = C4, and octaves change between B and C; default 4
 * @property {number} ps - pitch space number, like midi number but floating point and w/ no restriction on range. C4 = 60.0
 * @property {string} step - letter name for the pitch (C-G, A, B), without accidental; default 'C'
 */

var Pitch =
/*#__PURE__*/
function (_prebase$ProtoM21Obje2) {
  _inherits(Pitch, _prebase$ProtoM21Obje2);

  function Pitch() {
    var _this2;

    var pn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'C';

    _classCallCheck(this, Pitch);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Pitch).call(this));
    _this2._step = 'C';
    _this2._octave = 4;
    _this2._accidental = undefined;
    _this2.spellingIsInferred = false;
    /* pn can be a nameWithOctave */

    if (typeof pn === 'number') {
      if (pn < 12) {
        pn += 60; // pitchClass
      }

      _this2.ps = pn;
    } else if (pn.match(/\d+/)) {
      _this2.nameWithOctave = pn;
    } else {
      _this2.name = pn;
    }

    return _this2;
  }

  _createClass(Pitch, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.nameWithOctave;
    } // N.B. cannot use transpose here, because of circular import.

  }, {
    key: "_getEnharmonicHelper",

    /**
     * @param {boolean} inPlace
     * @param {int} directionInt -- -1 = down, 1 = up
     */
    value: function _getEnharmonicHelper() {
      var inPlace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var directionInt = arguments.length > 1 ? arguments[1] : undefined;
      // differs from Python version because
      // cannot import interval here.
      var octaveStored = true;

      if (this.octave === undefined) {
        octaveStored = false;
      }

      var p = this.clone();
      p.diatonicNoteNum += directionInt;

      if (p.accidental === undefined) {
        p.accidental = new Accidental(0);
      }

      while (p.ps % 12 !== this.ps % 12) {
        // octaveless
        p.accidental.alter += -1 * directionInt;
      }

      if (!inPlace) {
        return p;
      }

      this.step = p.step;
      this.accidental = p.accidental;

      if (p.microtone === undefined) {
        this.microtone = p.microtone;
      }

      if (!octaveStored) {
        this.octave = undefined;
      } else {
        this.octave = p.octave;
      }

      return p;
    }
  }, {
    key: "getHigherEnharmonic",
    value: function getHigherEnharmonic() {
      var inPlace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      return this._getEnharmonicHelper(inPlace, 1);
    }
  }, {
    key: "getLowerEnharmonic",
    value: function getLowerEnharmonic() {
      var inPlace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      return this._getEnharmonicHelper(inPlace, -1);
    }
    /* TODO: isEnharmonic, getEnharmonic, getAllCommonEnharmonics */

    /**
     * Returns the vexflow name for the pitch in the given clef.
     *
     * @memberof music21.pitch.Pitch#
     * @param {music21.clef.Clef} clefObj - the active {@link music21.clef.Clef} object
     * @returns {string} - representation in vexflow
     */

  }, {
    key: "vexflowName",
    value: function vexflowName(clefObj) {
      // returns a vexflow Key name for this pitch.
      var tempPitch = this;

      if (clefObj !== undefined) {
        try {
          tempPitch = clefObj.convertPitchToTreble(this);
        } catch (e) {
          console.log(e, clefObj);
        }
      }

      var accidentalType = 'n';

      if (this.accidental !== undefined) {
        if ([0, -1, -2, 1, 2].includes(this.accidental.alter)) {
          accidentalType = this.accidental.vexflowModifier;
        } else {
          console.warn('unsupported accidental: ' + this.accidental);
        }
      }

      var outName = tempPitch.step + accidentalType + '/' + tempPitch.octave;
      return outName;
    }
  }, {
    key: "step",
    get: function get() {
      return this._step;
    },
    set: function set(s) {
      if (s === '') {
        throw new TypeError('All notes must have a step');
      }

      if (typeof s !== 'string') {
        throw new TypeError('Steps must be strings');
      }

      s = s.toUpperCase();

      if (!pitch.stepsToName.includes(s)) {
        throw new TypeError("".concat(s, " is not a valid step name."));
      }

      this._step = s;
      this.spellingIsInferred = false;
    }
  }, {
    key: "octave",
    get: function get() {
      return this._octave;
    },
    set: function set(o) {
      this._octave = o;
    }
  }, {
    key: "implicitOctave",
    get: function get() {
      var o = this._octave;

      if (o === undefined) {
        return 4; // TODO(msc): get from defaults.
      } else {
        return o;
      }
    }
  }, {
    key: "accidental",
    get: function get() {
      return this._accidental;
    },
    set: function set(a) {
      if (_typeof(a) !== 'object' && a !== undefined) {
        a = new pitch.Accidental(a);
      }

      this._accidental = a;
      this.spellingIsInferred = false;
    }
  }, {
    key: "name",
    get: function get() {
      if (this.accidental === undefined) {
        return this.step;
      } else {
        return this.step + this.accidental.modifier;
      }
    },
    set: function set(nn) {
      this.step = nn.slice(0, 1);
      var tempAccidental = nn.slice(1);

      if (tempAccidental) {
        // not the empty string
        this.accidental = tempAccidental; // converts automatically
      } else {
        this.accidental = undefined;
      }
    }
  }, {
    key: "nameWithOctave",
    get: function get() {
      return this.name + this.octave.toString();
    },
    set: function set(pn) {
      var storedOctave = pn.match(/\d+/);

      if (storedOctave !== undefined) {
        pn = pn.replace(/\d+/, '');
        this.octave = parseInt(storedOctave);
        this.name = pn;
      } else {
        this.name = pn;
      }
    }
  }, {
    key: "pitchClass",
    get: function get() {
      return __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].posMod(Math.round(this.ps), 12);
    }
  }, {
    key: "diatonicNoteNum",
    get: function get() {
      return this.octave * 7 + pitch.nameToSteps[this.step] + 1;
    },
    set: function set(newDNN) {
      newDNN -= 1; // makes math easier        

      this.octave = Math.floor(newDNN / 7);
      var mod7DNN = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].posMod(Math.round(newDNN), 7);
      this.step = pitch.stepsToName[mod7DNN];
    }
  }, {
    key: "frequency",
    get: function get() {
      return 440 * Math.pow(2, (this.ps - 69) / 12);
    }
  }, {
    key: "midi",
    get: function get() {
      return Math.floor(this.ps);
    }
  }, {
    key: "ps",
    get: function get() {
      var accidentalAlter = 0;

      if (this.accidental !== undefined) {
        accidentalAlter = this.accidental.alter;
      }

      return (this.octave + 1) * 12 + pitch.nameToMidi[this.step] + accidentalAlter;
    },
    set: function set(ps) {
      this.name = pitch.midiToName[__WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].posMod(ps, 12)];
      this.octave = Math.floor(ps / 12) - 1;
      this.spellingIsInferred = true;
    }
  }, {
    key: "unicodeName",
    get: function get() {
      if (this.accidental !== undefined) {
        return this.step + this.accidental.unicodeModifier();
      } else {
        return this.step;
      }
    }
  }, {
    key: "unicodeNameWithOctave",
    get: function get() {
      if (this.octave === undefined) {
        return this.unicodeName;
      } else {
        return this.unicodeName + this.octave.toString();
      }
    }
  }]);

  return Pitch;
}(__WEBPACK_IMPORTED_MODULE_1__prebase_js__["a" /* prebase */].ProtoM21Object);
pitch.Pitch = Pitch;

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return debug; });
var debug = false;

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return prebase; });
/* unused harmony export ProtoM21Object */
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * module for things that all music21-created objects, not just objects that can live in
 * Stream.elements should inherit. See the {@link music21.prebase} namespace.
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 *
 * @exports music21/prebase
 */

/**
 * module for things that all music21-created objects, not just objects that can live in
 * Stream.elements should inherit
 *
 * @namespace music21.prebase
 * @memberof music21
 */
var prebase = {};
/**
 * Class for pseudo-m21 objects to inherit from. The most important attributes that nearly
 * everything in music21 should inherit from are given below.
 *
 * @class ProtoM21Object
 * @memberof music21.prebase
 * @property {Array<string>} classes - An Array of strings of classes that the object belongs to (default ['ProtoM21Object'])
 * @property {Boolean} isProtoM21Object - Does this object descend from {@link music21.prebase.ProtoM21Object}: obviously true.
 * @property {Boolean} isMusic21Object - Does this object descend from {@link music21.base.Music21Object}; default false.
 */

var ProtoM21Object =
/*#__PURE__*/
function () {
  function ProtoM21Object() {
    _classCallCheck(this, ProtoM21Object);

    /**
     *
     * @type {[string[]]}
     * @private
     */
    this._storedClasses = undefined;
    this.isProtoM21Object = true;
    this.isMusic21Object = false;
    this._cloneCallbacks = {};
  }

  _createClass(ProtoM21Object, [{
    key: "clone",

    /**
     * Makes (as much as possible) a complete duplicate copy of the object called with .clone()
     *
     * Works similarly to Python's copy.deepcopy().
     *
     * Every ProtoM21Object has a `._cloneCallbacks` object which maps `{attribute: callbackFunction}`
     * to handle custom clone cases.  See, for instance, {@link music21.base.Music21Object} which
     * uses a custom callback to NOT clone the `.activeSite` attribute.
     *
     * @returns {music21.prebase.ProtoM21Object}
     * @example
     * var n1 = new music21.note.Note("C#");
     * n1.duration.quarterLength = 4;
     * var n2 = n1.clone();
     * n2.duration.quarterLength == 4; // true
     * n2 === n1; // false
     */
    value: function clone() {
      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var memo = arguments.length > 1 ? arguments[1] : undefined;

      if (!deep) {
        return _extends(Object.create(Object.getPrototypeOf(this)), this);
      }

      var ret = new this.constructor();

      if (memo === undefined) {
        memo = new WeakMap();
      } // todo: do Arrays work?


      for (var key in this) {
        // not that we ONLY copy the keys in Ret -- it's easier that way.
        if ({}.hasOwnProperty.call(this, key) === false) {
          continue;
        }

        if (key in this._cloneCallbacks) {
          if (this._cloneCallbacks[key] === true) {
            ret[key] = this[key];
          } else if (this._cloneCallbacks[key] === false) {
            ret[key] = undefined;
          } else {
            // call the cloneCallbacks function
            this._cloneCallbacks[key](key, ret, this);
          }
        } else if (Object.getOwnPropertyDescriptor(this, key).get !== undefined || Object.getOwnPropertyDescriptor(this, key).set !== undefined) {// do nothing
        } else if (typeof this[key] === 'function') {// do nothing -- events might not be copied.
        } else if (_typeof(this[key]) === 'object' && this[key] !== null && this[key].isProtoM21Object) {
          // console.log('cloning ', key);
          var m21Obj = this[key];
          var clonedVersion = void 0;

          if (memo.has(m21Obj)) {
            clonedVersion = memo.get(m21Obj);
          } else {
            clonedVersion = this[key].clone(deep, memo);
          }

          ret[key] = clonedVersion;
        } else {
          try {
            ret[key] = this[key]; // music21.common.merge(ret[key], this[key]); // not really necessary?
          } catch (e) {
            if (e instanceof TypeError) {
              console.log('typeError:', e, key); // do nothing
            } else {
              throw e;
            }
          }
        }
      }

      return ret;
    }
    /**
     * Check to see if an object is of this class or subclass.
     *
     * @param {(string|string[])} testClass - a class or Array of classes to test
     * @returns {Boolean}
     * @example
     * var n = new music21.note.Note();
     * n.isClassOrSubclass('Note'); // true
     * n.isClassOrSubclass('Music21Object'); // true
     * n.isClassOrSubclass(['Duration', 'NotRest']); // true // NotRest
     */

  }, {
    key: "isClassOrSubclass",
    value: function isClassOrSubclass(testClass) {
      if (testClass instanceof Array === false) {
        testClass = [testClass];
      }

      for (var i = 0; i < testClass.length; i++) {
        if (this.classes.includes(testClass[i])) {
          return true;
        }
      }

      return false;
    }
  }, {
    key: "toString",
    value: function toString() {
      var si = this.stringInfo();

      if (si !== '') {
        si = ' ' + si;
      }

      return "<".concat(this.classes[0]).concat(si, ">");
    }
  }, {
    key: "stringInfo",
    value: function stringInfo() {
      return '';
    }
  }, {
    key: "classes",
    get: function get() {
      if (this._storedClasses !== undefined) {
        return this._storedClasses;
      }

      var classList = [];
      var thisConstructor = this.constructor;
      var maxLinks = 20;

      while (thisConstructor !== null && thisConstructor !== undefined && maxLinks) {
        maxLinks -= 1;

        if (thisConstructor.name === '') {
          break;
        }

        classList.push(thisConstructor.name);
        thisConstructor = Object.getPrototypeOf(thisConstructor);
      }

      classList.push('object');
      this._storedClasses = classList;
      return classList;
    }
  }]);

  return ProtoM21Object;
}();
prebase.ProtoM21Object = ProtoM21Object;

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return duration; });
/* unused harmony export Duration */
/* unused harmony export Tuplet */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__prebase_js__ = __webpack_require__(5);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21 features.
 * music21/duration -- duration routines
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21, Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab
 *
 */




/**
 * Duration module. See {@link music21.duration}
 *
 * @requires music21/common
 * @requires music21/prebase
 * @exports music21/duration
 */

/**
 * Module that holds **music21** classes and
 * tools for dealing with durations, especially
 * the {@link music21.duration.Duration} class.
 *
 * @namespace music21.duration
 * @memberof music21
 */

var duration = {};
/**
 * Object mapping int to name, as in `{1: 'whole'}` etc.
 *
 * @memberof music21.duration
 * @type {Object}
 */

duration.typeFromNumDict = {
  1: 'whole',
  2: 'half',
  4: 'quarter',
  8: 'eighth',
  16: '16th',
  32: '32nd',
  64: '64th',
  128: '128th',
  256: '256th',
  512: '512th',
  1024: '1024th',
  0: 'zero',
  '0.5': 'breve',
  '0.25': 'longa',
  '0.125': 'maxima',
  '0.0625': 'duplex-maxima'
};
duration.quarterTypeIndex = 6; // where is quarter in the following array.

duration.ordinalTypeFromNum = ['duplex-maxima', 'maxima', 'longa', 'breve', 'whole', 'half', 'quarter', 'eighth', '16th', '32nd', '64th', '128th', '256th', '512th', '1024th'];
duration.vexflowDurationArray = [undefined, undefined, undefined, undefined, 'w', 'h', 'q', '8', '16', '32', undefined, undefined, undefined, undefined, undefined];
/**
 * Duration object; found as the `.duration` attribute on {@link music21.base.Music21Object} instances
 * such as {@link music21.note.Note}
 *
 * @class Duration
 * @memberof music21.duration
 * @extends music21.prebase.ProtoM21Object
 * @param {(number|undefined)} ql - quarterLength (default 1.0)
 */

var Duration =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Duration, _prebase$ProtoM21Obje);

  function Duration(ql) {
    var _this;

    _classCallCheck(this, Duration);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Duration).call(this));
    _this._quarterLength = 0.0;
    _this._dots = 0;
    _this._durationNumber = undefined;
    _this._type = 'zero';
    _this._tuplets = [];

    if (typeof ql === 'string') {
      _this.type = ql;
    } else if (ql !== undefined) {
      _this.quarterLength = ql;
    }

    _this._cloneCallbacks._tuplets = _this.cloneCallbacksTupletFunction;
    return _this;
  }

  _createClass(Duration, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.quarterLength.toString();
    }
    /**
     * Read or sets the number of dots on the duration.
     *
     * Updates the quarterLength
     *
     * @type Number
     * @instance
     * @default 0
     * @example
     * var d = new music21.duration.Duration(2);
     * d.dots === 0; // true
     * d.dots = 1;
     * d.quarterLength == 3; // true;
     */

  }, {
    key: "cloneCallbacksTupletFunction",
    value: function cloneCallbacksTupletFunction(tupletKey, ret, obj) {
      // make sure that tuplets clone properly
      var newTuplets = [];

      for (var i = 0; i < obj[tupletKey].length; i++) {
        var newTuplet = obj[tupletKey][i].clone(); // console.log('cloning tuplets', obj[tupletKey][i], newTuplet);

        newTuplets.push(newTuplet);
      }

      ret[tupletKey] = newTuplets;
    }
  }, {
    key: "_findDots",
    value: function _findDots(ql) {
      if (ql === 0) {
        return 0;
      } // zero length stream probably;


      var typeNumber = duration.ordinalTypeFromNum.indexOf(this._type);
      var powerOfTwo = Math.pow(2, duration.quarterTypeIndex - typeNumber); // alert(undottedQL * 1.5 + " " + ql)
      // console.log('find dots called on ql: ', ql, typeNumber, powerOfTwo);

      for (var dotsNum = 0; dotsNum <= 4; dotsNum++) {
        var dotMultiplier = (Math.pow(2, dotsNum) - 1.0) / Math.pow(2, dotsNum);
        var durationMultiplier = 1 + dotMultiplier;

        if (Math.abs(powerOfTwo * durationMultiplier - ql) < 0.0001) {
          return dotsNum;
        }
      }

      if (__WEBPACK_IMPORTED_MODULE_2__debug_js__["a" /* debug */]) {
        console.log('no dots available for ql; probably a tuplet', ql);
      }

      return 0;
    }
  }, {
    key: "updateQlFromFeatures",
    value: function updateQlFromFeatures() {
      var typeNumber = duration.ordinalTypeFromNum.indexOf(this._type); // must be set property

      var undottedQuarterLength = Math.pow(2, duration.quarterTypeIndex - typeNumber);
      var dottedMultiplier = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);
      var unTupletedQl = undottedQuarterLength * dottedMultiplier;
      var tupletCorrectedQl = unTupletedQl;

      this._tuplets.forEach(function (tuplet) {
        tupletCorrectedQl *= tuplet.tupletMultiplier();
      });

      this._quarterLength = tupletCorrectedQl;
    }
  }, {
    key: "updateFeaturesFromQl",
    value: function updateFeaturesFromQl() {
      var ql = this._quarterLength;
      this._tuplets = [];

      if (ql === 0) {
        this._type = 'zero';
        this._dots = 0;
        return;
      }

      var powerOfTwo = Math.floor(Math.log(ql + 0.00001) / Math.log(2));
      var typeNumber = duration.quarterTypeIndex - powerOfTwo;
      this._type = duration.ordinalTypeFromNum[typeNumber]; // console.log(this._findDots);

      this._dots = this._findDots(ql);
      var undottedQuarterLength = Math.pow(2, duration.quarterTypeIndex - typeNumber);
      var dottedMultiplier = 1 + (Math.pow(2, this._dots) - 1) / Math.pow(2, this._dots);
      var unTupletedQl = undottedQuarterLength * dottedMultiplier;

      if (unTupletedQl !== ql && ql !== 0) {
        typeNumber -= 1;
        this._type = duration.ordinalTypeFromNum[typeNumber]; // increase type: eighth to quarter etc.

        unTupletedQl *= 2;
        var tupletRatio = ql / unTupletedQl;
        var ratioRat = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].rationalize(tupletRatio);

        if (ratioRat === undefined) {// probably a Stream with a length that is inexpressable;
        } else {
          var t = new duration.Tuplet(ratioRat.denominator, ratioRat.numerator, new duration.Duration(unTupletedQl));
          this.appendTuplet(t, true); // skipUpdateQl
        } // console.log(ratioRat, ql, unTupletedQl);

      }
    }
    /**
     * Add a tuplet to music21j
     *
     * @param {music21.duration.Tuplet} newTuplet - tuplet to add to `.tuplets`
     * @param {boolean} [skipUpdateQl=false] - update the quarterLength afterwards?
     */

  }, {
    key: "appendTuplet",
    value: function appendTuplet(newTuplet, skipUpdateQl) {
      newTuplet.frozen = true;

      this._tuplets.push(newTuplet);

      if (skipUpdateQl !== true) {
        this.updateQlFromFeatures();
      }
    }
  }, {
    key: "dots",
    get: function get() {
      return this._dots;
    },
    set: function set(numDots) {
      this._dots = numDots;
      this.updateQlFromFeatures();
    }
    /**
     * Read or sets the quarterLength of the Duration
     *
     * Updates the type, dots, tuplets(?)
     *
     * @type Number
     * @instance
     * @default 1.0
     * @example
     * var d = new music21.duration.Duration(2);
     * d.quarterLength == 2.0; // true;
     * d.quarterLength = 1.75;
     * d.dots == 2; // true
     * d.type == 'quarter'; // true
     */

  }, {
    key: "quarterLength",
    get: function get() {
      return this._quarterLength;
    },
    set: function set(ql) {
      if (ql === undefined) {
        ql = 1.0;
      }

      this._quarterLength = ql;
      this.updateFeaturesFromQl();
    }
    /**
     * Read or sets the type of the duration.
     *
     * Updates the quarterLength
     *
     * @type String
     * @instance
     * @default 'quarter'
     * @example
     * var d = new music21.duration.Duration(2);
     * d.type == 'half; // true
     * d.type = 'breve';
     * d.quarterLength == 8.0; // true
     * d.dots = 1;
     * d.type = 'quarter'; // will not change dots
     * d.quarterLength == 1.5; // true
     */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(typeIn) {
      var typeNumber = duration.ordinalTypeFromNum.indexOf(typeIn);

      if (typeNumber === -1) {
        console.log('invalid type ' + typeIn);
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('invalid type ' + typeIn);
      }

      this._type = typeIn;
      this.updateQlFromFeatures();
    }
    /**
     * Reads the tuplet Array for the duration.
     *
     * The tuplet array should be considered Read Only.
     * Use {@link music21.duration.Duration#appendTuplet} to
     * add a tuplet (no way to remove yet)
     *
     * @type Array<music21.duration.Tuplet>
     * @instance
     * @default []
     */

  }, {
    key: "tuplets",
    get: function get() {
      return this._tuplets;
    }
    /**
     * Read-only: the duration expressed for VexFlow
     *
     * @type String
     * @instance
     * @default 'd'
     * @example
     * var d = new music21.duration.Duration(2);
     * d.vexflowDuration == 'h'; // true;
     * d.dots = 2;
     * d.vexflowDuration == 'hdd'; // true;
     */

  }, {
    key: "vexflowDuration",
    get: function get() {
      var typeNumber = duration.ordinalTypeFromNum.indexOf(this.type);
      var vd = duration.vexflowDurationArray[typeNumber];

      if (this.dots > 0) {
        for (var i = 0; i < this.dots; i++) {
          vd += 'd'; // vexflow does not handle double dots .. or does it???
        }
      }

      return vd;
    }
  }]);

  return Duration;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
duration.Duration = Duration;
/**
 * Represents a Tuplet; found in {@link music21.duration.Duration#tuplets}
 *
 * @class Tuplet
 * @memberof music21.duration
 * @extends music21.prebase.ProtoM21Object
 * @param {number} numberNotesActual - numerator of the tuplet, default 3
 * @param {number} numberNotesNormal - denominator of the tuplet, default 2
 * @param {(music21.duration.Duration|number)} durationActual - duration or quarterLength of duration type, default music21.duration.Duration(0.5)
 * @param {(music21.duration.Duration|number)} durationNormal - unused; see music21p for description
 */

var Tuplet =
/*#__PURE__*/
function (_prebase$ProtoM21Obje2) {
  _inherits(Tuplet, _prebase$ProtoM21Obje2);

  function Tuplet(numberNotesActual, numberNotesNormal, durationActual, durationNormal) {
    var _this2;

    _classCallCheck(this, Tuplet);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Tuplet).call(this));
    _this2.numberNotesActual = numberNotesActual || 3;
    _this2.numberNotesNormal = numberNotesNormal || 2;
    _this2.durationActual = durationActual || new duration.Duration(0.5);

    if (typeof _this2.durationActual === 'number') {
      _this2.durationActual = new duration.Duration(_this2.durationActual);
    }

    _this2.durationNormal = durationNormal || _this2.durationActual;
    _this2.frozen = false;
    _this2.type = undefined;
    /**
     * Show a bracket above the tuplet
     *
     * @memberof music21.duration.Tuplet#
     * @member {Boolean} bracket
     * @default true
     */

    _this2.bracket = true;
    /**
     * Bracket placement. Options are `above` or `below`.
     *
     * @memberof music21.duration.Tuplet#
     * @member {String} placement
     * @default 'above'
     */

    _this2.placement = 'above';
    /**
     * What to show above the Tuplet. Options are `number`, `type`, or (string) `none`.
     *
     * @memberof music21.duration.Tuplet#
     * @member {String} tupletActualShow
     * @default 'number'
     */

    _this2.tupletActualShow = 'number';
    _this2.tupletNormalShow = undefined; // undefined, 'ratio' for ratios, 'type' for ratioed notes (does not work)

    return _this2;
  }
  /**
   * A nice name for the tuplet.
   *
   * @type String
   * @instance
   * @readonly
   */


  _createClass(Tuplet, [{
    key: "setDurationType",

    /**
     * Set both durationActual and durationNormal for the tuplet.
     *
     * @param {string} type - a duration type, such as `half`, `quarter`
     * @returns {music21.duration.Duration} A converted {@link music21.duration.Duration} matching `type`
     */
    value: function setDurationType(type) {
      if (this.frozen === true) {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('A frozen tuplet (or one attached to a duration) is immutable');
      }

      this.durationActual = new duration.Duration(type);
      this.durationNormal = this.durationActual;
      return this.durationActual;
    }
    /**
     * Sets the tuplet ratio.
     *
     * @param {Number} actual - number of notes in actual (e.g., 3)
     * @param {Number} normal - number of notes in normal (e.g., 2)
     * @returns {undefined}
     */

  }, {
    key: "setRatio",
    value: function setRatio(actual, normal) {
      if (this.frozen === true) {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('A frozen tuplet (or one attached to a duration) is immutable');
      }

      this.numberNotesActual = actual || 3;
      this.numberNotesNormal = normal || 2;
    }
    /**
     * Get the quarterLength corresponding to the total length that
     * the completed tuplet (i.e., 3 notes in a triplet) would occupy.
     *
     * @returns {Number} A quarter length.
     */

  }, {
    key: "totalTupletLength",
    value: function totalTupletLength() {
      return this.numberNotesNormal * this.durationNormal.quarterLength;
    }
    /**
     * The amount by which each quarter length is multiplied to get
     * the tuplet. For instance, in a normal triplet, this is 0.666
     *
     * @returns {Number} A float of the multiplier
     */

  }, {
    key: "tupletMultiplier",
    value: function tupletMultiplier() {
      var lengthActual = this.durationActual.quarterLength;
      return this.totalTupletLength() / (this.numberNotesActual * lengthActual);
    }
  }, {
    key: "fullName",
    get: function get() {
      // actual is what is presented to viewer
      var numActual = this.numberNotesActual;
      var numNormal = this.numberNotesNormal;

      if (numActual === 3 && numNormal === 2) {
        return 'Triplet';
      } else if (numActual === 5 && (numNormal === 4 || numNormal === 2)) {
        return 'Quintuplet';
      } else if (numActual === 6 && numNormal === 4) {
        return 'Sextuplet';
      }

      var ordStr = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].ordinalAbbreviation(numNormal, true); // plural

      return 'Tuplet of ' + numActual.toString() + '/' + numNormal.toString() + ordStr;
    }
  }]);

  return Tuplet;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
duration.Tuplet = Tuplet;

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return note; });
/* unused harmony export NotRestException */
/* unused harmony export Lyric */
/* unused harmony export GeneralNote */
/* unused harmony export NotRest */
/* unused harmony export Note */
/* unused harmony export Rest */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vexflow__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__beam_js__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__exceptions21_js__ = __webpack_require__(1);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/note -- Note, Rest, NotRest, GeneralNote
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */









/**
 * Module for note classes. See the namespace {@link music21.note}
 *
 * @requires music21/common
 * @requires music21/prebase
 * @requires music21/base
 * @requires music21/pitch
 * @requires music21/beam
 * @exports music21/note
 */

/**
 * Namespace for notes (single pitch) or rests, and some things like Lyrics that go on notes.
 *
 * @namespace music21.note
 * @memberof music21
 * @property {string[]} noteheadTypeNames - an Array of allowable notehead names.
 * @property {string[]} stemDirectionNames - an Array of allowable stemDirection names.
 */

var note = {};
var NotRestException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(NotRestException, _Music21Exception);

  function NotRestException() {
    _classCallCheck(this, NotRestException);

    return _possibleConstructorReturn(this, _getPrototypeOf(NotRestException).apply(this, arguments));
  }

  return NotRestException;
}(__WEBPACK_IMPORTED_MODULE_8__exceptions21_js__["Music21Exception"]);
note.NotRestException = NotRestException;
note.noteheadTypeNames = ['arrow down', 'arrow up', 'back slashed', 'circle dot', 'circle-x', 'circled', 'cluster', 'cross', 'diamond', 'do', 'fa', 'inverted triangle', 'la', 'left triangle', 'mi', 'none', 'normal', 'other', 're', 'rectangle', 'slash', 'slashed', 'so', 'square', 'ti', 'triangle', 'x'];
note.stemDirectionNames = ['double', 'down', 'noStem', 'none', 'unspecified', 'up'];
/**
 * Class for a single Lyric attached to a {@link music21.note.GeneralNote}
 *
 * @class Lyric
 * @memberOf music21.note
 * @extends music21.prebase.ProtoM21Object
 * @param {string} text - the text of the lyric
 * @param {number} number=1 - the lyric number
 * @param {string} syllabic=undefined - placement of the syllable ('begin', 'middle', 'end', 'single'); undefined = interpret from text
 * @param {boolean} applyRaw=false - true = display the text exactly as it is or, false = use "-" etc. to determine syllabic
 * @param {string} identifier=undefined - identifier for the lyric.
 * @property {string} lyricConnector='-' - what to place between two lyrics that are syllabic.
 * @property {string} text - the text of the lyric syllable.
 * @property {string} syllabic - see above
 * @property {boolean} applyRaw - see above
 * @property {string} identifier - see above; gets .number if undefined
 * @property {number} number - see above
 * @property {string} rawText - text + any connectors
 */

var Lyric =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Lyric, _prebase$ProtoM21Obje);

  function Lyric(text) {
    var _this;

    var number = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var syllabic = arguments.length > 2 ? arguments[2] : undefined;
    var applyRaw = arguments.length > 3 ? arguments[3] : undefined;
    var identifier = arguments.length > 4 ? arguments[4] : undefined;

    _classCallCheck(this, Lyric);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Lyric).call(this));
    _this.lyricConnector = '-'; // override to place something else between two notes...

    _this.text = text;
    _this._number = number;
    _this.syllabic = syllabic;
    _this.applyRaw = applyRaw || false;

    _this.setTextAndSyllabic(_this.text, _this.applyRaw);

    _this._identifier = identifier;
    _this.style = {
      fillStyle: 'black',
      strokeStyle: 'black',
      fontFamily: 'Serif',
      fontSize: 12,
      fontWeight: ''
    };
    return _this;
  }

  _createClass(Lyric, [{
    key: "setTextAndSyllabic",

    /**
     * setTextAndSyllabic - Given a setting for rawText and applyRaw,
     *     sets the syllabic type for a lyric based on the rawText
     *
     * @param  {string} rawText text
     * @param  {boolean} applyRaw = false if hyphens should not be applied
     * @return {this}
     */
    value: function setTextAndSyllabic(rawText) {
      var applyRaw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (rawText === undefined) {
        this.text = undefined;
        return this;
      }

      if (!applyRaw && rawText.indexOf(this.lyricConnector) === 0 && rawText.slice(-1) === this.lyricConnector) {
        this.text = rawText.slice(1, -1);
        this.syllabic = 'middle';
      } else if (!applyRaw && rawText.indexOf(this.lyricConnector) === 0) {
        this.text = rawText.slice(1);
        this.syllabic = 'end';
      } else if (!applyRaw && rawText.slice(-1) === this.lyricConnector) {
        this.text = rawText.slice(0, -1);
        this.syllabic = 'begin';
      } else {
        this.text = rawText;

        if (this.syllabic === undefined) {
          this.syllabic = 'single';
        }
      }

      return this;
    }
  }, {
    key: "identifier",
    get: function get() {
      return this._identifier || this._number;
    },
    set: function set(i) {
      this._identifier = i;
    } // a property just to match m21p

  }, {
    key: "number",
    get: function get() {
      return this._number;
    },
    set: function set(n) {
      this._number = n;
    }
    /**
     * get rawText - gets the raw text.
     *
     * @return {string}  raw text
     */

  }, {
    key: "rawText",
    get: function get() {
      if (this.syllabic === 'begin') {
        return this.text + this.lyricConnector;
      } else if (this.syllabic === 'middle') {
        return this.lyricConnector + this.text + this.lyricConnector;
      } else if (this.syllabic === 'end') {
        return this.lyricConnector + this.text;
      } else {
        return this.text;
      }
    },
    set: function set(t) {
      this.setTextAndSyllabic(t, true);
    }
  }]);

  return Lyric;
}(__WEBPACK_IMPORTED_MODULE_2__prebase_js__["a" /* prebase */].ProtoM21Object);
note.Lyric = Lyric;
/* Notes and rests etc... */

/**
 * Superclass for all Note values
 *
 * @class GeneralNote
 * @memberof music21.note
 * @extends music21.base.Music21Object
 * @param {(number|undefined)} [ql=1.0] - quarterLength of the note
 * @property {boolean} [isChord=false] - is this a chord
 * @property {number} quarterLength - shortcut to `.duration.quarterLength`
 * @property {Object} activeVexflowNote - most recent Vex.Flow.StaveNote object to be made from this note (could change); default, undefined
 * @property {Array<music21.expressions.Expression>} expressions - array of attached expressions
 * @property {Array<music21.articulations.Articulation>} articulations - array of attached articulations
 * @property {string} lyric - the text of the first {@link music21.note.Lyric} object; can also set one.
 * @property {Array<music21.note.Lyric>} lyrics - array of attached lyrics
 * @property {number} [volume=60] - how loud is this note, 0-127, before articulations
 * @property {number} midiVolume - how loud is this note, taking into account articulations
 * @property {music21.note.Tie|undefined} [tie=undefined] - a tie object
 */

var GeneralNote =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(GeneralNote, _base$Music21Object);

  function GeneralNote(ql) {
    var _this2;

    _classCallCheck(this, GeneralNote);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(GeneralNote).call(this));
    _this2.isChord = false;

    if (ql !== undefined) {
      _this2.duration.quarterLength = ql;
    } else {
      _this2.duration.quarterLength = 1.0;
    }

    _this2.volume = 60;
    _this2.activeVexflowNote = undefined;
    _this2.expressions = [];
    _this2.articulations = [];
    _this2.lyrics = [];
    _this2.tie = undefined;
    /* TODO: editorial objects, color, addLyric, insertLyric, hasLyrics */

    /* Later: augmentOrDiminish, getGrace, */

    return _this2;
  }

  _createClass(GeneralNote, [{
    key: "addLyric",

    /**
     * Add a {@link music21.note.Lyric} object to the Note
     *
     * @param {string} text - text to be added
     * @param {number} [lyricNumber] - integer specifying lyric (defaults to the current `.lyrics.length` + 1)
     * @param {boolean} [applyRaw=false] - if `true`, do not parse the text for cluses about syllable placement.
     * @param {string} [lyricIdentifier] - an optional identifier
     */
    value: function addLyric(text, lyricNumber) {
      var applyRaw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var lyricIdentifier = arguments.length > 3 ? arguments[3] : undefined;

      if (lyricNumber === undefined) {
        var maxLyrics = this.lyrics.length + 1;
        var newLyric = new note.Lyric(text, maxLyrics, undefined, applyRaw, lyricIdentifier);
        this.lyrics.push(newLyric);
      } else {
        var foundLyric = false;

        for (var i = 0; i < this.lyrics.length; i++) {
          var thisLyric = this.lyrics[i];

          if (thisLyric.number === lyricNumber) {
            thisLyric.text = text;
            foundLyric = true;
            break;
          }
        }

        if (foundLyric === false) {
          var _newLyric = new note.Lyric(text, lyricNumber, undefined, applyRaw, lyricIdentifier);

          this.lyrics.push(_newLyric);
        }
      }
    }
    /**
     * Change stem direction according to clef. Does nothing for GeneralNote; overridden in subclasses.
     *
     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.
     * @returns {undefined}
     */

  }, {
    key: "setStemDirectionFromClef",
    value: function setStemDirectionFromClef(clef) {
      return undefined;
    }
  }, {
    key: "getStemDirectionFromClef",
    value: function getStemDirectionFromClef(clef) {
      return undefined;
    }
    /**
     * Sets the vexflow accidentals (if any), the dots, and the stem direction
     *
     * @param {Vex.Flow.StaveNote} vfn - a Vex.Flow note
     * @param {Object} options -- a set of Vex Flow options
     */

  }, {
    key: "vexflowAccidentalsAndDisplay",
    value: function vexflowAccidentalsAndDisplay(vfn, options) {
      if (this.duration.dots > 0) {
        for (var i = 0; i < this.duration.dots; i++) {
          vfn.addDotToAll();
        }
      }

      if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
        console.log(this.stemDirection);
      }

      if (this.stemDirection === 'noStem') {
        vfn.hasStem = function () {
          return false;
        }; // need to override...
        // vfn.render_options.stem_height = 0;

      } else {
        // correct VexFlow stem length for notes far from the center line;
        var staveDNNSpacing = 5;

        if (options.stave) {
          staveDNNSpacing = Math.floor(options.stave.options.spacing_between_lines_px / 2);
        }

        if (options.clef !== undefined && this.pitch !== undefined) {
          var midLine = options.clef.lowestLine + 4; // console.log(midLine);

          var absDNNfromCenter = Math.abs(this.pitch.diatonicNoteNum - midLine);
          var absOverOctave = absDNNfromCenter - 7; // console.log(absOverOctave);

          if (absOverOctave > 0 && vfn.getStemLength !== undefined) {
            var stemHeight = absOverOctave * staveDNNSpacing + vfn.getStemLength();
            vfn.setStemLength(stemHeight);
          }
        }
      }
    }
    /**
     * Play the current element as a MIDI note.
     *
     * @param {number} [tempo=120] - tempo in bpm
     * @param {music21.base.Music21Object} [nextElement] - for determining the length to play in case of tied notes, etc.
     * @param {Object} [options] - other options (currently just `{instrument: {@link music21.instrument.Instrument} }`)
     * @returns {Number} - delay time in milliseconds until the next element (may be ignored)
     */

  }, {
    key: "playMidi",
    value: function playMidi() {
      var tempo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 120;
      var nextElement = arguments.length > 1 ? arguments[1] : undefined;
      var options = arguments.length > 2 ? arguments[2] : undefined;

      // returns the number of milliseconds to the next element in
      // case that can't be determined otherwise.
      if (options === undefined) {
        var inst;

        if (this.activeSite !== undefined) {
          inst = this.activeSite.instrument;
        }

        options = {
          instrument: inst
        };
      }

      var volume = this.midiVolume;
      var channel = 0;

      if (options.instrument !== undefined) {
        channel = options.instrument.midiChannel;
      }

      var ql = this.duration.quarterLength;
      var milliseconds = 60 * ql * 1000 / tempo;
      var midNum;

      if (this.isClassOrSubclass('Note')) {
        // Note, not rest
        midNum = this.pitch.midi;
        var stopTime = milliseconds / 1000;

        if (nextElement !== undefined && nextElement.isClassOrSubclass('Note')) {
          if (nextElement.pitch.midi !== this.pitch.midi) {
            stopTime += 60 * 0.25 / tempo; // legato -- play 16th note longer
          } else if (this.tie !== undefined && (this.tie.type === 'start' || this.tie.type === 'continue')) {
            stopTime += 60 * nextElement.duration.quarterLength / tempo; // this does not take into account 3 or more notes tied.
            // TODO: look ahead at next nexts, etc.
          }
        } else if (nextElement === undefined) {
          // let last note ring an extra beat...
          stopTime += 60 / tempo;
        } // console.log(stopTime);
        // console.log(this.tie);


        if (this.tie === undefined || this.tie.type === 'start') {
          // console.log(volume);
          try {
            __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](channel, midNum, volume, 0);
            __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](channel, midNum, stopTime);
          } catch (e) {// do nothing -- might not have an output channel because of audio not connected
          }
        } // else { console.log ('not going to play ', this.nameWithOctave); }

      } else if (this.isClassOrSubclass('Chord')) {
        // TODO: Tied Chords.
        for (var j = 0; j < this._notes.length; j++) {
          midNum = this._notes[j].pitch.midi;

          try {
            __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](channel, midNum, volume, 0);
            __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](channel, midNum, milliseconds / 1000);
          } catch (e) {// do nothing -- might not have an output channel because of audio not connected                    
          }
        }
      } // it's a note.Rest -- do nothing -- milliseconds takes care of it...


      return milliseconds;
    }
  }, {
    key: "lyric",
    get: function get() {
      if (this.lyrics.length > 0) {
        return this.lyrics[0].text;
      } else {
        return undefined;
      }
    },
    set: function set(value) {
      this.lyrics = [];

      if (value !== undefined && value !== false) {
        this.lyrics.push(new note.Lyric(value));
      }
    }
  }, {
    key: "midiVolume",
    get: function get() {
      var volume = this.volume;

      if (volume === undefined) {
        volume = 60;
      }

      if (this.articulations !== undefined) {
        this.articulations.forEach(function (a) {
          volume *= a.dynamicScale;

          if (volume > 127) {
            volume = 127;
          } else if (isNaN(volume)) {
            volume = 60;
          }
        });
      }

      volume = Math.floor(volume);
      return volume;
    }
  }]);

  return GeneralNote;
}(__WEBPACK_IMPORTED_MODULE_3__base_js__["a" /* base */].Music21Object);
note.GeneralNote = GeneralNote;
/**
 * Specifies that a GeneralNote is not a rest (Unpitched, Note, Chord).
 *
 * @class NotRest
 * @memberof music21.note
 * @extends music21.note.GeneralNote
 * @param {number} [ql=1.0] - length in quarter notes
 * @property {music21.beam.Beams} beams - a link to a beam object
 * @property {string} [notehead='normal'] - notehead type
 * @property {string} [noteheadFill='default'] - notehead fill (to be moved to style...)
 * @property {string|undefined} [noteheadColor=undefined] - notehead color
 * @property {boolean} [noteheadParenthesis=false] - put a parenthesis around the notehead?
 * @property {string|undefined} [stemDirection=undefined] - One of ['up','down','noStem', undefined] -- 'double' not supported
 */

var NotRest =
/*#__PURE__*/
function (_GeneralNote) {
  _inherits(NotRest, _GeneralNote);

  function NotRest(ql) {
    var _this3;

    _classCallCheck(this, NotRest);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(NotRest).call(this, ql));
    _this3.notehead = 'normal';
    _this3.noteheadFill = 'default';
    _this3.noteheadColor = 'black';
    _this3.noteheadParenthesis = false;
    _this3.volume = undefined; // not a real object yet.

    _this3.beams = new __WEBPACK_IMPORTED_MODULE_6__beam_js__["a" /* beam */].Beams();
    /* TODO: this.duration.linkage -- need durationUnits */

    _this3._stemDirection = 'unspecified';
    /* TODO: check notehead, noteheadFill, noteheadParentheses */

    return _this3;
  }

  _createClass(NotRest, [{
    key: "stemDirection",
    get: function get() {
      return this._stemDirection;
    },
    set: function set(direction) {
      if (direction === undefined) {
        direction = 'unspecified';
      } else if (direction === 'none') {
        direction = 'noStem';
      } else if (!note.stemDirectionNames.includes(direction)) {
        throw new NotRestException("not a valid stem direction name: ".concat(direction));
      }

      this._stemDirection = direction;
    }
  }]);

  return NotRest;
}(GeneralNote);
note.NotRest = NotRest;
/* ------- Note ----------- */

/**
 * A very, very important class! music21.note.Note objects combine a {@link music21.pitch.Pitch}
 * object to describe pitch (highness/lowness) with a {@link music21.duration.Duration} object
 * that defines length, with additional features for drawing the Note, playing it back, etc.
 *
 * Together with {@link music21.stream.Stream} one of the two most important
 * classes in `music21`.
 *
 * See {@link music21.note.NotRest}, {@link music21.note.GeneralNote}, {@link music21.base.Music21Object}
 * and {@link music21.prebase.ProtoM21Object} (or in general, the **extends** list below) for other
 * things you can do with a `Note` object.
 *
 * Missing from music21p: `transpose(), fullName`.  Transpose cannot be added because of circular imports
 *
 * @class Note
 * @memberof music21.note
 * @extends music21.note.NotRest
 * @param {(string|music21.pitch.Pitch|undefined)} [nn='C4'] - pitch name ("C", "D#", "E-") w/ or w/o octave ("C#4"), or a pitch.Pitch object
 * @param {(number|undefined)} [ql=1.0] - length in quarter notes
 * @property {Boolean} [isNote=true] - is it a Note? Yes!
 * @property {Boolean} [isRest=false] - is it a Rest? No!
 * @property {music21.pitch.Pitch} pitch - the {@link music21.pitch.Pitch} associated with the Note.
 * @property {string} name - shortcut to `.pitch.name`
 * @property {string} nameWithOctave - shortcut to `.pitch.nameWithOctave`
 * @property {string} step - shortcut to `.pitch.step`
 * @property {number} octave - shortcut to `.pitch.octave`
 */

var Note =
/*#__PURE__*/
function (_NotRest) {
  _inherits(Note, _NotRest);

  function Note(nn, ql) {
    var _this4;

    _classCallCheck(this, Note);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Note).call(this, ql));
    _this4.isNote = true; // for speed

    _this4.isRest = false; // for speed

    if (nn !== undefined && nn.isClassOrSubclass !== undefined && nn.isClassOrSubclass('Pitch') === true) {
      _this4.pitch = nn;
    } else {
      _this4.pitch = new __WEBPACK_IMPORTED_MODULE_5__pitch_js__["a" /* pitch */].Pitch(nn);
    }

    return _this4;
  }

  _createClass(Note, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.name;
    }
  }, {
    key: "setStemDirectionFromClef",

    /* TODO: transpose, fullName */

    /**
     * Change stem direction according to clef.
     *
     * @param {music21.clef.Clef} [clef] - clef to set the stem direction of.
     * @returns {music21.note.Note} Original object, for chaining methods
     */
    value: function setStemDirectionFromClef(clef) {
      if (clef !== undefined) {
        this.stemDirection = this.getStemDirectionFromClef(clef);
      }

      return this;
    }
    /**
     * Same as setStemDirectionFromClef, but do not set the note, just return it.
     */

  }, {
    key: "getStemDirectionFromClef",
    value: function getStemDirectionFromClef(clef) {
      if (clef === undefined) {
        return undefined;
      }

      var midLine = clef.lowestLine + 4;
      var DNNfromCenter = this.pitch.diatonicNoteNum - midLine; // console.log(DNNfromCenter, this.pitch.nameWithOctave);

      if (DNNfromCenter >= 0) {
        return 'down';
      } else {
        return 'up';
      }
    }
    /**
     * Returns a `Vex.Flow.StaveNote` that approximates this note.
     *
     * @param {Object} [options={}] - `{clef: {@link music21.clef.Clef} }`
     * clef to set the stem direction of.
     * @returns {Vex.Flow.StaveNote}
     */

  }, {
    key: "vexflowNote",
    value: function vexflowNote(options) {
      var params = {};
      __WEBPACK_IMPORTED_MODULE_7__common_js__["a" /* common */].merge(params, options);
      var clef = params.clef;
      var useStemDirection = this.stemDirection; // fixup stem direction -- must happen before Vex.Flow.Note is created...

      if (this.activeSite !== undefined && this.activeSite.renderOptions.stemDirection !== undefined && note.stemDirectionNames.includes(this.activeSite.renderOptions.stemDirection)) {
        useStemDirection = this.activeSite.renderOptions.stemDirection;
      } else if ([undefined, 'unspecified'].includes(this.stemDirection) && options.clef !== undefined) {
        useStemDirection = this.getStemDirectionFromClef(options.clef);
      }

      if (this.duration === undefined) {
        // console.log(this);
        return undefined;
      }

      var vfd = this.duration.vexflowDuration;

      if (vfd === undefined) {
        return undefined;
      }

      var vexflowKey = this.pitch.vexflowName(clef); // Not supported: Double;  None is done elsewhere?

      var vfnStemDirection = useStemDirection === 'down' ? __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].StaveNote.STEM_DOWN : __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].StaveNote.STEM_UP;
      var vfn = new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].StaveNote({
        keys: [vexflowKey],
        duration: vfd,
        stem_direction: vfnStemDirection
      });
      this.vexflowAccidentalsAndDisplay(vfn, params); // clean up stuff...

      if (this.pitch.accidental !== undefined) {
        if (this.pitch.accidental.vexflowModifier !== 'n' && this.pitch.accidental.displayStatus !== false) {
          vfn.addAccidental(0, new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Accidental(this.pitch.accidental.vexflowModifier));
        } else if (this.pitch.accidental.displayType === 'always' || this.pitch.accidental.displayStatus === true) {
          vfn.addAccidental(0, new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Accidental(this.pitch.accidental.vexflowModifier));
        }
      }

      if (this.articulations[0] !== undefined) {
        for (var i = 0; i < this.articulations.length; i++) {
          var art = this.articulations[i]; // 0 refers to the first pitch (for chords etc.)...

          vfn.addArticulation(0, art.vexflow());
        }
      }

      if (this.expressions[0] !== undefined) {
        for (var j = 0; j < this.expressions.length; j++) {
          var exp = this.expressions[j]; // 0 refers to the first pitch (for chords etc.)...

          vfn.addArticulation(0, exp.vexflow());
        }
      }

      if (this.noteheadColor !== undefined) {
        vfn.setStyle({
          fillStyle: this.noteheadColor,
          strokeStyle: this.noteheadColor
        });
      }

      this.activeVexflowNote = vfn;
      return vfn;
    }
  }, {
    key: "name",
    get: function get() {
      return this.pitch.name;
    },
    set: function set(nn) {
      this.pitch.name = nn;
    }
  }, {
    key: "nameWithOctave",
    get: function get() {
      return this.pitch.nameWithOctave;
    },
    set: function set(nn) {
      this.pitch.nameWithOctave = nn;
    }
  }, {
    key: "step",
    get: function get() {
      return this.pitch.step;
    },
    set: function set(nn) {
      this.pitch.step = nn;
    }
  }, {
    key: "octave",
    get: function get() {
      return this.pitch.octave;
    },
    set: function set(nn) {
      this.pitch.octave = nn;
    }
  }, {
    key: "pitches",
    get: function get() {
      return [this.pitch];
    },
    set: function set(value) {
      this.pitch = value[0]; // TODO: raise NoteException on index error.
    }
  }]);

  return Note;
}(NotRest);
note.Note = Note;
/* ------ TODO: Unpitched ------ */

/* ------ Rest ------ */

/**
 * Represents a musical rest.
 *
 * @class Rest
 * @memberof music21.note
 * @extends music21.note.GeneralNote
 * @param {number} [ql=1.0] - length in number of quarterNotes
 * @property {Boolean} [isNote=false]
 * @property {Boolean} [isRest=true]
 * @property {string} [name='rest']
 * @property {number} [lineShift=undefined] - number of lines to shift up or down from default
 * @property {string|undefined} [color='black'] - color of the rest
 */

var Rest =
/*#__PURE__*/
function (_GeneralNote2) {
  _inherits(Rest, _GeneralNote2);

  function Rest(ql) {
    var _this5;

    _classCallCheck(this, Rest);

    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(Rest).call(this, ql));
    _this5.isNote = false; // for speed

    _this5.isRest = true; // for speed

    _this5.name = 'rest'; // for note compatibility

    _this5.lineShift = undefined;
    _this5.color = 'black';
    return _this5;
  }

  _createClass(Rest, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.duration.quarterLength.toString();
    }
    /**
     * Returns a `Vex.Flow.StaveNote` that approximates this rest.
     * Corrects for bug in VexFlow that renders a whole rest too low.
     *
     * @param {Object} options -- vexflow options
     * @returns {Vex.Flow.StaveNote}
     */

  }, {
    key: "vexflowNote",
    value: function vexflowNote(options) {
      var keyLine = 'b/4';

      if (this.duration.type === 'whole') {
        if (this.activeSite !== undefined && this.activeSite.renderOptions.staffLines !== 1) {
          keyLine = 'd/5';
        }
      }

      if (this.lineShift !== undefined) {
        var p = new __WEBPACK_IMPORTED_MODULE_5__pitch_js__["a" /* pitch */].Pitch('B4');
        var ls = this.lineShift;

        if (this.duration.type === 'whole') {
          ls += 2;
        }

        p.diatonicNoteNum += ls;
        keyLine = p.vexflowName(undefined);
      }

      var vfn = new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].StaveNote({
        keys: [keyLine],
        duration: this.duration.vexflowDuration + 'r'
      });

      if (this.duration.dots > 0) {
        for (var i = 0; i < this.duration.dots; i++) {
          vfn.addDotToAll();
        }
      }

      if (this.color !== undefined) {
        vfn.setStyle({
          fillStyle: this.color,
          strokeStyle: this.color
        });
      }

      this.activeVexflowNote = vfn;
      return vfn;
    }
  }]);

  return Rest;
}(GeneralNote);
note.Rest = Rest;
/* ------ SpacerRest ------ */

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.4.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2019-05-01T21:04Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};




	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.4.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a global context
	globalEval: function( code, options ) {
		DOMEval( code, { nonce: options && options.nonce } );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.4
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2019-04-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) &&

				// Support: IE 8 only
				// Exclude object elements
				(nodeType !== 1 || context.nodeName.toLowerCase() !== "object") ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 && rdescend.test( selector ) ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = (elem.ownerDocument || elem).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( typeof elem.contentDocument !== "undefined" ) {
			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								} );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	// Support: IE 9-11 only
	// Also use offsetWidth/offsetHeight for when box sizing is unreliable
	// We use getClientRects() to check for hidden/disconnected.
	// In those cases, the computed value can be trusted to be border-box
	if ( ( !support.boxSizingReliable() && isBorderBox ||
		val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = Date.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url, options ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
		return jQuery;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return clef; });
/* unused harmony export Clef */
/* unused harmony export TrebleClef */
/* unused harmony export Treble8vbClef */
/* unused harmony export Treble8vaClef */
/* unused harmony export BassClef */
/* unused harmony export Bass8vbClef */
/* unused harmony export AltoClef */
/* unused harmony export TenorClef */
/* unused harmony export SopranoClef */
/* unused harmony export MezzoSopranoClef */
/* unused harmony export PercussionClef */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pitch_js__ = __webpack_require__(3);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/clef -- Clef objects
 *
 * Copyright (c) 2013-19, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–19, Michael Scott Cuthbert and cuthbertLab
 *
 */


/**
 * Clef module, see {@link music21.clef} for namespace
 *
 * @exports music21/clef
 */

/**
 * Clef related objects and properties
 *
 * @namespace music21.clef
 * @memberof music21
 * @requires music21/base
 * @requires music21/pitch
 */

var clef = {};
/*  music21.Clef
	must be defined before Stream since Stream subclasses call new music21.Clef...
 */
// TODO: Fix to newest Vexflow format...

clef.lowestLines = {
  treble: 31,
  soprano: 29,
  'mezzo-soprano': 27,
  alto: 25,
  tenor: 23,
  bass: 19,
  percussion: 31
};
clef.nameToLine = {
  treble: 2,
  soprano: 1,
  'mezzo-soprano': 2,
  alto: 3,
  tenor: 4,
  bass: 4,
  percussion: 3
};
clef.nameToSign = {
  treble: 'G',
  soprano: 'C',
  'mezzo-soprano': 'C',
  alto: 'C',
  tenor: 'C',
  bass: 'F',
  percussion: 'percussion'
};
/**
 * Clefname can be one of
 * "treble", "bass", "soprano", "mezzo-soprano", "alto", "tenor", "percussion"
 *
 * @class Clef
 * @memberof music21.clef
 * @extends music21.base.Music21Object
 * @param {string} name - clef name
 * @param {int} [octaveChange=0] - ottava
 * @property {string} [name]
 * @property {int} lowestLine - diatonicNoteNum (C4 = 29) for the lowest line (in a five-line staff)
 * @property {int} lowestLineTrebleOffset - difference between the first line of this staff and the first line in treble clef
 * @property {int} octaveChange
 */

var Clef =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Clef, _base$Music21Object);

  function Clef(name, octaveChange) {
    var _this;

    _classCallCheck(this, Clef);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clef).call(this));
    _this.classSortOrder = 0;
    _this.sign = undefined;
    _this.line = 1;

    if (name !== undefined) {
      name = name.toLowerCase();
      _this.name = name;
      _this.lowestLine = clef.lowestLines[name];
      _this.sign = clef.nameToSign[name];
      _this.line = clef.nameToLine[name] || 1;
      _this.lowestLineTrebleOffset = clef.lowestLines.treble - _this.lowestLine;
    } else {
      _this.name = undefined;
      _this.lowestLine = clef.lowestLines.treble;
      _this.lowestLineTrebleOffset = 0;
    }

    if (octaveChange === undefined) {
      _this.octaveChange = 0;
    } else {
      _this.octaveChange = octaveChange;
      _this.lowestLine += 7 * octaveChange;
      _this.lowestLineTrebleOffset -= 7 * octaveChange;
    }

    return _this;
  }

  _createClass(Clef, [{
    key: "stringInfo",
    value: function stringInfo() {
      return '';
    }
    /**
     * returns a new pitch object if the clef name is not Treble
     * designed so it would look the same as it would in treble clef.
     * for instance, bass-clef 2nd-space C# becomes treble clef 2nd-space A#
     * used for Vex.Flow which requires all pitches to be input as if they
     * are in treble clef.
     *
     * @param {music21.pitch.Pitch} p
     * @returns {music21.pitch.Pitch} new pitch
     */

  }, {
    key: "convertPitchToTreble",
    value: function convertPitchToTreble(p) {
      if (this.lowestLine === undefined) {
        console.log('no first line defined for clef', this.name, this);
        return p; // error
      }

      var lowestLineDifference = this.lowestLineTrebleOffset;
      var tempPitch = new __WEBPACK_IMPORTED_MODULE_1__pitch_js__["a" /* pitch */].Pitch(p.step);
      tempPitch.octave = p.octave;
      tempPitch.diatonicNoteNum += lowestLineDifference;
      tempPitch.accidental = p.accidental;
      return tempPitch;
    }
  }]);

  return Clef;
}(__WEBPACK_IMPORTED_MODULE_0__base_js__["a" /* base */].Music21Object);
clef.Clef = Clef;
/**
 * A TrebleClef (same as new music21.clef.Clef('treble'))
 *
 * @class TrebleClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var TrebleClef =
/*#__PURE__*/
function (_Clef) {
  _inherits(TrebleClef, _Clef);

  function TrebleClef() {
    var _this2;

    _classCallCheck(this, TrebleClef);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(TrebleClef).call(this, 'treble'));
    _this2.sign = 'G';
    _this2.line = 2;
    return _this2;
  }

  return TrebleClef;
}(Clef);
clef.TrebleClef = TrebleClef;
/**
 * A TrebleClef down an octave (same as new music21.clef.Clef('treble', -1))
 *
 * Unlike music21p, currently not a subclass of TrebleClef.
 *
 * @class Treble8vbClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var Treble8vbClef =
/*#__PURE__*/
function (_Clef2) {
  _inherits(Treble8vbClef, _Clef2);

  function Treble8vbClef() {
    _classCallCheck(this, Treble8vbClef);

    return _possibleConstructorReturn(this, _getPrototypeOf(Treble8vbClef).call(this, 'treble', -1));
  }

  return Treble8vbClef;
}(Clef);
clef.Treble8vbClef = Treble8vbClef;
/**
 * A TrebleClef up an octave (same as new music21.clef.Clef('treble', 1))
 *
 * @class Treble8vaClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var Treble8vaClef =
/*#__PURE__*/
function (_Clef3) {
  _inherits(Treble8vaClef, _Clef3);

  function Treble8vaClef() {
    _classCallCheck(this, Treble8vaClef);

    return _possibleConstructorReturn(this, _getPrototypeOf(Treble8vaClef).call(this, 'treble', 1));
  }

  return Treble8vaClef;
}(Clef);
clef.Treble8vaClef = Treble8vaClef;
/**
 * A BassClef (same as new music21.clef.Clef('bass'))
 *
 * @class BassClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var BassClef =
/*#__PURE__*/
function (_Clef4) {
  _inherits(BassClef, _Clef4);

  function BassClef() {
    var _this3;

    _classCallCheck(this, BassClef);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(BassClef).call(this, 'bass'));
    _this3.sign = 'F';
    _this3.line = 4;
    return _this3;
  }

  return BassClef;
}(Clef);
clef.BassClef = BassClef;
/**
 * A BassClef down an octave (same as new music21.clef.Clef('bass', -1))
 *
 * @class Bass8vbClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var Bass8vbClef =
/*#__PURE__*/
function (_Clef5) {
  _inherits(Bass8vbClef, _Clef5);

  function Bass8vbClef() {
    var _this4;

    _classCallCheck(this, Bass8vbClef);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Bass8vbClef).call(this, 'bass', -1));
    _this4.sign = 'F';
    _this4.line = 4;
    return _this4;
  }

  return Bass8vbClef;
}(Clef);
clef.Bass8vbClef = Bass8vbClef;
/**
 * An AltoClef (same as new music21.clef.Clef('alto'))
 *
 * @class AltoClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var AltoClef =
/*#__PURE__*/
function (_Clef6) {
  _inherits(AltoClef, _Clef6);

  function AltoClef() {
    var _this5;

    _classCallCheck(this, AltoClef);

    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(AltoClef).call(this, 'alto'));
    _this5.sign = 'C';
    _this5.line = 3;
    return _this5;
  }

  return AltoClef;
}(Clef);
clef.AltoClef = AltoClef;
/**
 * A Tenor Clef (same as new music21.clef.Clef('tenor'))
 *
 * @class TenorClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var TenorClef =
/*#__PURE__*/
function (_Clef7) {
  _inherits(TenorClef, _Clef7);

  function TenorClef() {
    var _this6;

    _classCallCheck(this, TenorClef);

    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(TenorClef).call(this, 'tenor'));
    _this6.sign = 'C';
    _this6.line = 4;
    return _this6;
  }

  return TenorClef;
}(Clef);
clef.TenorClef = TenorClef;
/**
 * A Soprano Clef (same as new music21.clef.Clef('soprano'))
 *
 * @class SopranoClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var SopranoClef =
/*#__PURE__*/
function (_Clef8) {
  _inherits(SopranoClef, _Clef8);

  function SopranoClef() {
    var _this7;

    _classCallCheck(this, SopranoClef);

    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(SopranoClef).call(this, 'soprano'));
    _this7.sign = 'C';
    _this7.line = 1;
    return _this7;
  }

  return SopranoClef;
}(Clef);
clef.SopranoClef = SopranoClef;
/**
 * A Mezzo-Soprano Clef (same as new music21.clef.Clef('mezzo-soprano'))
 *
 * @class MezzoSopranoClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var MezzoSopranoClef =
/*#__PURE__*/
function (_Clef9) {
  _inherits(MezzoSopranoClef, _Clef9);

  function MezzoSopranoClef() {
    var _this8;

    _classCallCheck(this, MezzoSopranoClef);

    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(MezzoSopranoClef).call(this, 'mezzo-soprano'));
    _this8.sign = 'C';
    _this8.line = 2;
    return _this8;
  }

  return MezzoSopranoClef;
}(Clef);
clef.MezzoSopranoClef = MezzoSopranoClef;
/**
 * A Percussion Clef (same as new music21.clef.Clef('percussion'))
 *
 * First line is treated as if it's treble clef. Not available as "bestClef"
 *
 * @class PercussionClef
 * @memberof music21.clef
 * @extends music21.clef.Clef
 */

var PercussionClef =
/*#__PURE__*/
function (_Clef10) {
  _inherits(PercussionClef, _Clef10);

  function PercussionClef() {
    var _this9;

    _classCallCheck(this, PercussionClef);

    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(PercussionClef).call(this, 'percussion'));
    _this9.sign = 'percussion';
    _this9.line = 3;
    return _this9;
  }

  return PercussionClef;
}(Clef);
clef.PercussionClef = PercussionClef;
/**
 * Looks at the pitches in a Stream and returns the best clef
 * of Treble and Bass
 *
 * @function music21.clef.bestClef
 * @memberof music21.clef
 * @param {music21.stream.Stream} st
 * @param {Object} [options]
 * @param {boolean} [options.recurse=true]
 * @returns {music21.clef.Clef}
 */

clef.bestClef = function bestClef(st) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$recurse = _ref.recurse,
      recurse = _ref$recurse === void 0 ? true : _ref$recurse;

  // console.log('calling flat on stream: ', st.elements.length, st.classes[st.classes.length - 1]);
  var stFlat;

  if (recurse) {
    stFlat = st.flat;
  } else {
    stFlat = st;
  }

  var totalNotes = 0;
  var totalPitch = 0.0;

  for (var i = 0; i < stFlat.length; i++) {
    var el = stFlat.get(i);

    if (el.pitch !== undefined) {
      totalNotes += 1;
      totalPitch += el.pitch.diatonicNoteNum;
    } else if (el.pitches !== undefined) {
      for (var j = 0; j < el.pitches.length; j++) {
        totalNotes += 1;
        totalPitch += el.pitches[j].diatonicNoteNum;
      }
    }
  }

  var averageHeight;

  if (totalNotes === 0) {
    averageHeight = 29;
  } else {
    averageHeight = totalPitch / totalNotes;
  } // console.log('bestClef: average height', averageHeight);


  if (averageHeight > 28) {
    // 29 = c4
    return new clef.TrebleClef();
  } else {
    return new clef.BassClef();
  }
};

clef.clefFromString = function clefFromString(clefString, octaveShift) {
  if (octaveShift === undefined) {
    octaveShift = 0;
  }

  var xnStr = clefString.trim();
  var thisType;
  var lineNum;

  if (xnStr.toLowerCase() === 'percussion') {
    return new clef.PercussionClef(clefString, octaveShift);
  } // todo: tab, none, jianpu


  if (xnStr.length === 2) {
    thisType = xnStr[0].toUpperCase();
    lineNum = parseInt(xnStr[1]);
  } else if (xnStr.length === 1) {
    thisType = xnStr[0].toUpperCase();

    if (thisType === 'G') {
      lineNum = 2;
    } else if (thisType === 'F') {
      lineNum = 4;
    } else if (thisType === 'C') {
      lineNum = 3;
    } else {
      lineNum = 0;
    }
  } else if (xnStr.length > 2) {
    // try to get any clef in the module
    var searchLower = xnStr.toLowerCase();

    for (var _i = 0, _Object$keys = Object.keys(clef); _i < _Object$keys.length; _i++) {
      var clefKey = _Object$keys[_i];

      // TODO(msc): fix when we get rid of clef = {}
      if (!clefKey.includes('Clef')) {
        continue;
      }

      var clefLower = clefKey.toLowerCase();
      var potentialClass = clef[clefKey];

      if (typeof potentialClass !== 'function') {
        continue;
      }

      if (clefLower !== searchLower && clefLower !== searchLower + 'clef') {
        continue;
      }

      return new potentialClass();
    }
  }

  var arrayEqual = function arrayEqual(a, b) {
    return a.length === b.length && a.every(function (el, ix) {
      return el === b[ix];
    });
  };

  var params = [thisType, lineNum, octaveShift];

  if (arrayEqual(params, ['G', 2, 0])) {
    return new clef.TrebleClef();
  } else if (arrayEqual(params, ['G', 2, -1])) {
    return new clef.Treble8vbClef();
  } else if (arrayEqual(params, ['G', 2, 1])) {
    return new clef.Treble8vaClef();
  } else if (arrayEqual(params, ['F', 4, 0])) {
    return new clef.BassClef();
  } else if (arrayEqual(params, ['F', 4, -1])) {
    return new clef.Bass8vbClef();
  } else if (arrayEqual(params, ['C', 3, 0])) {
    return new clef.AltoClef();
  } else if (arrayEqual(params, ['C', 4, 0])) {
    return new clef.TenorClef();
  } else {
    return new clef.Clef(xnStr, octaveShift);
  }
};

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return interval; });
/* unused harmony export GenericInterval */
/* unused harmony export DiatonicInterval */
/* unused harmony export ChromaticInterval */
/* unused harmony export Interval */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pitch_js__ = __webpack_require__(3);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/interval -- Interval routines
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006-18, Michael Scott Cuthbert and cuthbertLab
 *
 */





/**
 * interval module. See {@link music21.interval} for namespace
 *
 * @exports music21/interval
 */

/**
 * Interval related objects
 *
 * @namespace music21.interval
 * @memberof music21
 * @requires music21/prebase
 * @requires music21/pitch
 */

var interval = {};
/**
 * Interval Directions as an Object/map
 *
 * @memberof music21.interval
 * @example
 * if (music21.interval.Direction.OBLIQUE >
 *     music21.interval.Direction.ASCENDING ) {
 *    console.log(music21.interval.Direction.DESCENDING);
 * }
 *
 */

interval.Direction = {
  DESCENDING: -1,
  OBLIQUE: 0,
  ASCENDING: 1
};
/**
 * N.B. a dict in music21p -- the indexes here let Direction call them + 1
 *
 * @memberof music21.interval
 * @example
 * console.log(music21.interval.IntervalDirectionTerms[music21l.interval.Direction.OBLIQUE + 1])
 * // "Oblique"
 */

interval.IntervalDirectionTerms = ['Descending', 'Oblique', 'Ascending'];
/**
 * ordinals for music terms...
 *
 * @memberof music21.interval
 * @example
 * for (var i = 1; // N.B. 0 = undefined
 *      i < music21.interval.MusicOrdinals.length;
 *      i++) {
 *     console.log(i, music21.interval.MusicOrdinals[i]);
 * }
 * // 1, Unison
 * // 2, Second
 * // 3, Third
 * // ...
 * // 8, Octave
 * // ...
 * // 15, Double Octave
 */

interval.MusicOrdinals = [undefined, 'Unison', 'Second', 'Third', 'Fourth', 'Fifth', 'Sixth', 'Seventh', 'Octave', 'Ninth', 'Tenth', 'Eleventh', 'Twelfth', 'Thirteenth', 'Fourteenth', 'Double Octave'];
/**
 * Represents an interval such as unison, second, etc.
 *
 * Properties are demonstrated below.
 *
 * @class GenericInterval
 * @memberof music21.interval
 * @param {number} [gi=1] - generic interval (1 or higher, or -2 or lower)
 * @example
 * var gi = new music21.interval.GenericInterval(-14)
 * gi.value
 * // -14
 * gi.directed
 * // -14
 * gi.undirected
 * // 14
 * gi.direction == music21.interval.Direction.DESCENDING
 * // true
 * gi.isSkip
 * // true
 * gi.isStep
 * // false
 * gi.isDiatonicStep
 * // false  // augmented unisons are not diatonicSteps but can't tell yet..
 * gi.isUnison
 * // false
 * gi.simpledDirected
 * // -7
 * gi.simpleUndirected
 * // 7
 * gi.undirectedOctaves
 * // 1
 * gi.semiSimpleUndirected
 * // 7  -- semiSimple distinguishes between 8 and 1; that's all
 * gi.semiSimpleDirected
 * // 7  -- semiSimple distinguishes between 8 and 1; that's all
 * gi.perfectable
 * // false
 * gi.niceName
 * // "Fourteenth"
 * gi.directedNiceName
 * // "Descending Fourteenth"
 * gi.simpleNiceName
 * // "Seventh"
 * gi.staffDistance
 * // -13
 * gi.mod7inversion
 * // 2  // sevenths invert to seconds
 *
 */

var GenericInterval =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(GenericInterval, _prebase$ProtoM21Obje);

  function GenericInterval(gi) {
    var _this;

    _classCallCheck(this, GenericInterval);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenericInterval).call(this));

    if (gi === undefined) {
      gi = 1;
    }

    _this.value = gi; // todo: convertGeneric() from python

    _this.directed = _this.value;
    _this.undirected = Math.abs(_this.value);

    if (_this.directed === 1) {
      _this.direction = interval.Direction.OBLIQUE;
    } else if (_this.directed < 0) {
      _this.direction = interval.Direction.DESCENDING;
    } else if (_this.directed > 1) {
      _this.direction = interval.Direction.ASCENDING;
    } // else (raise exception)


    if (_this.undirected > 2) {
      _this.isSkip = true;
    } else {
      _this.isSkip = false;
    }

    if (_this.undirected === 2) {
      _this.isDiatonicStep = true;
    } else {
      _this.isDiatonicStep = false;
    }

    _this.isStep = _this.isDiatonicStep;

    if (_this.undirected === 1) {
      _this.isUnison = true;
    } else {
      _this.isUnison = false;
    }

    var tempSteps = __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].posMod(_this.undirected, 7);
    var tempOctaves = parseInt(_this.undirected / 7);

    if (tempSteps === 0) {
      tempOctaves -= 1;
      tempSteps = 7;
    }

    _this.simpleUndirected = tempSteps;
    _this.undirectedOctaves = tempOctaves;

    if (tempSteps === 1 && tempOctaves >= 1) {
      _this.semiSimpleUndirected = 8;
    } else {
      _this.semiSimpleUndirected = _this.simpleUndirected;
    }

    if (_this.direction === interval.Direction.DESCENDING) {
      _this.octaves = -1 * tempOctaves;

      if (tempSteps !== 1) {
        _this.simpleDirected = -1 * tempSteps;
      } else {
        _this.simpleDirected = 1; // no descending unisons...
      }

      _this.semiSimpleDirected = -1 * _this.semiSimpleUndirected;
    } else {
      _this.octaves = tempOctaves;
      _this.simpleDirected = tempSteps;
      _this.semiSimpleDirected = _this.semiSimpleUndirected;
    }

    if (_this.simpleUndirected === 1 || _this.simpleUndirected === 4 || _this.simpleUndirected === 5) {
      _this.perfectable = true;
    } else {
      _this.perfectable = false;
    }

    if (_this.undirected < interval.MusicOrdinals.length) {
      _this.niceName = interval.MusicOrdinals[_this.undirected];
    } else {
      _this.niceName = _this.undirected.toString();
    }

    _this.simpleNiceName = interval.MusicOrdinals[_this.simpleUndirected];
    _this.semiSimpleNiceName = interval.MusicOrdinals[_this.semiSimpleUndirected];

    if (Math.abs(_this.directed) === 1) {
      _this.staffDistance = 0;
    } else if (_this.directed > 1) {
      _this.staffDistance = _this.directed - 1;
    } else if (_this.directed < -1) {
      _this.staffDistance = _this.directed + 1;
    } // else: raise IntervalException("Non-integer, -1, or 0 not permitted as a diatonic interval")
    // 2 -> 7; 3 -> 6; 8 -> 1 etc.


    _this.mod7inversion = 9 - _this.semiSimpleUndirected;

    if (_this.direction === interval.Direction.DESCENDING) {
      _this.mod7 = _this.mod7inversion; // see chord.semitonesFromChordStep for usage...
    } else {
      _this.mod7 = _this.simpleDirected;
    }

    return _this;
  }
  /**
   * Returns a new GenericInterval which is the mod7inversion; 3rds (and 10ths etc.) to 6ths, etc.
   *
   * @returns {music21.interval.GenericInterval}
   */


  _createClass(GenericInterval, [{
    key: "complement",
    value: function complement() {
      return new interval.GenericInterval(this.mod7inversion);
    }
    /**
     * Returns a new GenericInterval which has the opposite direction
     * (descending becomes ascending, etc.)
     *
     * @returns {music21.interval.GenericInterval}
     */

  }, {
    key: "reverse",
    value: function reverse() {
      if (this.undirected === 1) {
        return new interval.GenericInterval(1);
      } else {
        return new interval.GenericInterval(this.undirected * (-1 * this.direction));
      }
    }
    /**
     * Given a specifier, return a new DiatonicInterval with this generic.
     *
     * @param {string|number} specifier - a specifier such as "P", "m", "M", "A", "dd" etc.
     * @returns {music21.interval.DiatonicInterval}
     */

  }, {
    key: "getDiatonic",
    value: function getDiatonic(specifier) {
      return new interval.DiatonicInterval(specifier, this);
    }
    /**
     * Transpose a pitch by this generic interval, maintaining accidentals
     *
     * @param {music21.pitch.Pitch} p
     * @returns {music21.pitch.Pitch}
     */

  }, {
    key: "transposePitch",
    value: function transposePitch(p) {
      var pitch2 = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch();
      pitch2.step = p.step;
      pitch2.octave = p.octave;
      var oldDiatonicNum = p.diatonicNoteNum;
      var distanceToMove = this.staffDistance; // if not reverse...

      var newDiatonicNumber = oldDiatonicNum + distanceToMove;

      var _interval$convertDiat = interval.convertDiatonicNumberToStep(newDiatonicNumber),
          _interval$convertDiat2 = _slicedToArray(_interval$convertDiat, 2),
          newStep = _interval$convertDiat2[0],
          newOctave = _interval$convertDiat2[1];

      pitch2.step = newStep;
      pitch2.octave = newOctave;

      if (p.accidental !== undefined) {
        pitch2.accidental = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Accidental(p.accidental.name);
      }

      return pitch2;
    }
  }]);

  return GenericInterval;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
interval.GenericInterval = GenericInterval;
interval.IntervalSpecifiersEnum = {
  PERFECT: 1,
  MAJOR: 2,
  MINOR: 3,
  AUGMENTED: 4,
  DIMINISHED: 5,
  DBLAUG: 6,
  DBLDIM: 7,
  TRPAUG: 8,
  TRPDIM: 9,
  QUADAUG: 10,
  QUADDIM: 11
};
interval.IntervalNiceSpecNames = ['ERROR', 'Perfect', 'Major', 'Minor', 'Augmented', 'Diminished', 'Doubly-Augmented', 'Doubly-Diminished', 'Triply-Augmented', 'Triply-Diminished', 'Quadruply-Augmented', 'Quadruply-Diminished'];
interval.IntervalPrefixSpecs = [undefined, 'P', 'M', 'm', 'A', 'd', 'AA', 'dd', 'AAA', 'ddd', 'AAAA', 'dddd'];
interval.IntervalOrderedPerfSpecs = ['dddd', 'ddd', 'dd', 'd', 'P', 'A', 'AA', 'AAA', 'AAAA'];
interval.IntervalPerfSpecifiers = [interval.IntervalSpecifiersEnum.QUADDMIN, interval.IntervalSpecifiersEnum.TRPDIM, interval.IntervalSpecifiersEnum.DBLDIM, interval.IntervalSpecifiersEnum.DIMINISHED, interval.IntervalSpecifiersEnum.PERFECT, interval.IntervalSpecifiersEnum.AUGMENTED, interval.IntervalSpecifiersEnum.DBLAUG, interval.IntervalSpecifiersEnum.TRPAUG, interval.IntervalSpecifiersEnum.QUADAUG];
interval.IntervalPerfOffset = 4;
interval.IntervalOrderedImperfSpecs = ['dddd', 'ddd', 'dd', 'd', 'm', 'M', 'A', 'AA', 'AAA', 'AAAA'];
interval.IntervalSpecifiers = [interval.IntervalSpecifiersEnum.QUADDMIN, interval.IntervalSpecifiersEnum.TRPDIM, interval.IntervalSpecifiersEnum.DBLDIM, interval.IntervalSpecifiersEnum.DIMINISHED, interval.IntervalSpecifiersEnum.MINOR, interval.IntervalSpecifiersEnum.MAJOR, interval.IntervalSpecifiersEnum.AUGMENTED, interval.IntervalSpecifiersEnum.DBLAUG, interval.IntervalSpecifiersEnum.TRPAUG, interval.IntervalSpecifiersEnum.QUADAUG];
interval.IntervalMajOffset = 5;
interval.IntervalSemitonesGeneric = {
  1: 0,
  2: 2,
  3: 4,
  4: 5,
  5: 7,
  6: 9,
  7: 11
};
interval.IntervalAdjustPerfect = {
  P: 0,
  A: 1,
  AA: 2,
  AAA: 3,
  AAAA: 4,
  d: -1,
  dd: -2,
  ddd: -3,
  dddd: -4
}; // offset from Perfect

interval.IntervalAdjustImperf = {
  M: 0,
  m: -1,
  A: 1,
  AA: 2,
  AAA: 3,
  AAAA: 4,
  d: -2,
  dd: -3,
  ddd: -4,
  dddd: -5
}; // offset from major

/**
 * Represents a Diatonic interval.  See example for usage.
 *
 * @class DiatonicInterval
 * @memberof music21.interval
 * @param {string|number|undefined} [specifier='P'] - a specifier such as "P", "d", "m", "M" etc.
 * @param {music21.interval.GenericInterval|number} [generic=1] - a `GenericInterval`
 *              object or a number to be converted to one
 * @example
 * var di = new music21.interval.DiatonicInterval("M", 10);
 * di.generic.isClassOrSubclass('GenericInterval');
 * // true
 * di.specifierAbbreviation;
 * // 'M'
 * di.name;
 * // 'M10'
 * di.direction == music21.interval.Direction.ASCENDING;
 * // true
 * di.niceName
 * // "Major Tenth"
 *
 * // See music21p for more possibilities.
 */

var DiatonicInterval =
/*#__PURE__*/
function (_prebase$ProtoM21Obje2) {
  _inherits(DiatonicInterval, _prebase$ProtoM21Obje2);

  function DiatonicInterval(specifier, generic) {
    var _this2;

    _classCallCheck(this, DiatonicInterval);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DiatonicInterval).call(this));

    if (specifier === undefined) {
      specifier = 'P';
    }

    if (generic === undefined) {
      generic = new interval.GenericInterval(1);
    } else if (typeof generic === 'number') {
      generic = new interval.GenericInterval(generic);
    }

    _this2.name = '';

    if (typeof specifier === 'number') {
      _this2.specifier = specifier;
    } else {
      _this2.specifier = interval.IntervalPrefixSpecs.indexOf(specifier); // TODO: convertSpecifier();
    }

    _this2.generic = generic;

    if (generic.undirected !== 1 || specifier === interval.IntervalSpecifiersEnum.PERFECT) {
      _this2.direction = generic.direction;
    } else if (interval.IntervalPerfSpecifiers.indexOf(specifier) <= interval.IntervalPerfSpecifiers.indexOf(interval.IntervalSpecifiersEnum.DIMINISHED)) {
      // diminished unisons -- very controversial
      _this2.direction = interval.Direction.DESCENDING;
    } else {
      _this2.direction = interval.Direction.ASCENDING;
    }

    var diatonicDirectionNiceName = interval.IntervalDirectionTerms[_this2.direction + 1];
    _this2.name = interval.IntervalPrefixSpecs[_this2.specifier] + generic.undirected.toString();
    _this2.niceName = interval.IntervalNiceSpecNames[_this2.specifier] + ' ' + generic.niceName;
    _this2.simpleName = interval.IntervalPrefixSpecs[_this2.specifier] + generic.simpleUndirected.toString();
    _this2.simpleNiceName = interval.IntervalNiceSpecNames[_this2.specifier] + ' ' + generic.simpleNiceName;
    _this2.semiSimpleName = interval.IntervalPrefixSpecs[_this2.specifier] + generic.semiSimpleUndirected.toString();
    _this2.semiSimpleNiceName = interval.IntervalNiceSpecNames[_this2.specifier] + ' ' + generic.semiSimpleNiceName;
    _this2.directedName = interval.IntervalPrefixSpecs[_this2.specifier] + generic.directed.toString();
    _this2.directedNiceName = diatonicDirectionNiceName + ' ' + _this2.niceName;
    _this2.directedSimpleName = interval.IntervalPrefixSpecs[_this2.specifier] + generic.simpleDirected.toString();
    _this2.directedSimpleNiceName = diatonicDirectionNiceName + ' ' + _this2.simpleNiceName;
    _this2.directedSemiSimpleName = interval.IntervalPrefixSpecs[_this2.specifier] + generic.semiSimpleDirected.toString();
    _this2.directedSemiSimpleNiceName = diatonicDirectionNiceName + ' ' + _this2.semiSimpleNameName;
    _this2.specificName = interval.IntervalNiceSpecNames[_this2.specifier];
    _this2.perfectable = generic.perfectable;
    _this2.isDiatonicStep = generic.isDiatonicStep;
    _this2.isStep = generic.isStep;
    _this2.isSkip = generic.isSkip; // generate inversions

    if (_this2.perfectable) {
      _this2.orderedSpecifierIndex = interval.IntervalOrderedPerfSpecs.indexOf(interval.IntervalPrefixSpecs[_this2.specifier]);
      _this2.invertedOrderedSpecIndex = interval.IntervalOrderedPerfSpecs.length - 1 - _this2.orderedSpecifierIndex;
      _this2.invertedOrderedSpecifier = interval.IntervalOrderedPerfSpecs[_this2.invertedOrderedSpecIndex];
    } else {
      _this2.orderedSpecifierIndex = interval.IntervalOrderedImperfSpecs.indexOf(interval.IntervalPrefixSpecs[_this2.specifier]);
      _this2.invertedOrderedSpecIndex = interval.IntervalOrderedImperfSpecs.length - 1 - _this2.orderedSpecifierIndex;
      _this2.invertedOrderedSpecifier = interval.IntervalOrderedImperfSpecs[_this2.invertedOrderedSpecIndex];
    }

    _this2.mod7inversion = _this2.invertedOrderedSpecifier + generic.mod7inversion.toString();
    /* ( if (this.direction == interval.Direction.DESCENDING) {
    this.mod7 = this.mod7inversion;
    } else {
    this.mod7 = this.simpleName;
    } */
    // TODO: reverse()
    // TODO: property cents

    return _this2;
  }
  /**
   * Returns a ChromaticInterval object of the same size.
   *
   * @returns {music21.interval.ChromaticInterval}
   */


  _createClass(DiatonicInterval, [{
    key: "getChromatic",
    value: function getChromatic() {
      var octaveOffset = Math.floor(Math.abs(this.generic.staffDistance) / 7);
      var semitonesStart = interval.IntervalSemitonesGeneric[this.generic.simpleUndirected];
      var specName = interval.IntervalPrefixSpecs[this.specifier];
      var semitonesAdjust = 0;

      if (this.generic.perfectable) {
        semitonesAdjust = interval.IntervalAdjustPerfect[specName];
      } else {
        semitonesAdjust = interval.IntervalAdjustImperf[specName];
      }

      var semitones = octaveOffset * 12 + semitonesStart + semitonesAdjust; // direction should be same as original

      if (this.generic.direction === interval.Direction.DESCENDING) {
        semitones *= -1;
      }

      if (__WEBPACK_IMPORTED_MODULE_1__debug_js__["a" /* debug */]) {
        console.log('DiatonicInterval.getChromatic -- octaveOffset: ' + octaveOffset);
        console.log('DiatonicInterval.getChromatic -- semitonesStart: ' + semitonesStart);
        console.log('DiatonicInterval.getChromatic -- specName: ' + specName);
        console.log('DiatonicInterval.getChromatic -- semitonesAdjust: ' + semitonesAdjust);
        console.log('DiatonicInterval.getChromatic -- semitones: ' + semitones);
      }

      return new interval.ChromaticInterval(semitones);
    }
  }, {
    key: "transposePitch",
    value: function transposePitch(p) {
      var fullIntervalObject = new Interval(this, this.getChromatic());
      return fullIntervalObject.transposePitch(p);
    }
  }, {
    key: "specifierAbbreviation",
    get: function get() {
      return interval.IntervalPrefixSpecs[this.specifier];
    }
  }, {
    key: "cents",
    get: function get() {
      return this.getChromatic().cents;
    }
  }]);

  return DiatonicInterval;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
interval.DiatonicInterval = DiatonicInterval;
/**
 * @class ChromaticInterval
 * @memberof music21.interval
 * @param {number} value - number of semitones (positive or negative)
 * @property {number} cents
 * @property {number} value
 * @property {number} undirected - absolute value of value
 * @property {number} mod12 - reduction to one octave
 * @property {number} intervalClass - reduction to within a tritone (11 = 1, etc.)
 *
 */

var ChromaticInterval =
/*#__PURE__*/
function (_prebase$ProtoM21Obje3) {
  _inherits(ChromaticInterval, _prebase$ProtoM21Obje3);

  function ChromaticInterval(value) {
    var _this3;

    _classCallCheck(this, ChromaticInterval);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ChromaticInterval).call(this));
    _this3.semitones = value;
    _this3.cents = Math.round(value * 100.0, 5);
    _this3.directed = value;
    _this3.undirected = Math.abs(value);

    if (_this3.directed === 0) {
      _this3.direction = interval.Direction.OBLIQUE;
    } else if (_this3.directed === _this3.undirected) {
      _this3.direction = interval.Direction.ASCENDING;
    } else {
      _this3.direction = interval.Direction.DESCENDING;
    }

    _this3.mod12 = __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].posMod(_this3.semitones, 12);
    _this3.simpleUndirected = __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].posMod(_this3.undirected, 12);

    if (_this3.direction === interval.Direction.DESCENDING) {
      _this3.simpleDirected = -1 * _this3.simpleUndirected;
    } else {
      _this3.simpleDirected = _this3.simpleUndirected;
    }

    _this3.intervalClass = _this3.mod12;

    if (_this3.mod12 > 6) {
      _this3.intervalClass = 12 - _this3.mod12;
    }

    if (_this3.undirected === 1) {
      _this3.isChromaticStep = true;
    } else {
      _this3.isChromaticStep = false;
    }

    return _this3;
  }

  _createClass(ChromaticInterval, [{
    key: "reverse",
    value: function reverse() {
      return new interval.ChromaticInterval(this.undirected * (-1 * this.direction));
    } //  TODO: this.getDiatonic()

    /**
     * Transposes pitches but does not maintain accidentals, etc.
     *
     * @property {music21.pitch.Pitch} p - pitch to transpose
     * @returns {music21.pitch.Pitch}
     */

  }, {
    key: "transposePitch",
    value: function transposePitch(p) {
      var useImplicitOctave = false;

      if (p.octave === undefined) {
        // not yet implemented in m21j
        useImplicitOctave = true;
      }

      var pps = p.ps;
      var newPitch = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch();
      newPitch.ps = pps + this.semitones;

      if (useImplicitOctave) {
        newPitch.octave = undefined;
      }

      return newPitch;
    }
  }]);

  return ChromaticInterval;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
interval.ChromaticInterval = ChromaticInterval;
interval.IntervalStepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];
/**
 * @function music21.interval.convertDiatonicNumberToStep
 * @memberof music21.interval
 * @param {int} dn - diatonic number, where 29 = C4, C#4 etc.
 * @returns {Array} two element array of {string} stepName and {Int} octave
 */

interval.convertDiatonicNumberToStep = function convertDiatonicNumberToStep(dn) {
  var stepNumber;
  var octave;

  if (dn === 0) {
    return ['B', -1];
  } else if (dn > 0) {
    octave = Math.floor((dn - 1) / 7);
    stepNumber = dn - 1 - octave * 7;
  } else {
    // low notes... test, because js(floor) != py(int);
    octave = Math.floor(dn / 7);
    stepNumber = dn - 1 - (octave + 1) * 7;
  }

  var stepName = interval.IntervalStepNames[stepNumber];
  return [stepName, octave];
};
/**
 * This is the main, powerful Interval class.
 *
 * Instantiate with either a string ("M3") or two {@link music21.pitch.Pitch} or two {@link music21.note.Note}
 *
 * See music21p instructions for usage.
 *
 * @class Interval
 * @memberof music21.interval
 * @example
 * var n1 = new music21.note.Note("C4");
 * var n2 = new music21.note.Note("F#5");
 * var iv = new music21.interval.Interval(n1, n2);
 * iv.isConsonant();
 * // false
 * iv.semitones;
 * // 18
 * iv.niceName
 * // "Augmented Eleventh"
 */


var Interval =
/*#__PURE__*/
function (_prebase$ProtoM21Obje4) {
  _inherits(Interval, _prebase$ProtoM21Obje4);

  function Interval() {
    var _this4;

    _classCallCheck(this, Interval);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Interval).call(this)); // todo: allow full range of ways of specifying as in m21p

    var noteStart;
    var noteEnd;

    for (var _len = arguments.length, restArgs = new Array(_len), _key = 0; _key < _len; _key++) {
      restArgs[_key] = arguments[_key];
    }

    if (restArgs.length === 1) {
      var arg0 = restArgs[0];

      if (typeof arg0 === 'string') {
        // simple...
        var specifier = arg0.replace(/\d+/, '').replace(/-/, '');
        var generic = parseInt(arg0.replace(/\D+/, ''));

        if (arg0.includes('-')) {
          generic *= -1;
        }

        var gI = new interval.GenericInterval(generic);
        var dI = new interval.DiatonicInterval(specifier, gI);
        _this4.diatonic = dI;
        _this4.chromatic = _this4.diatonic.getChromatic();
      } else if (arg0.specifier !== undefined) {
        // assume diatonic...
        _this4.diatonic = arg0;
        _this4.chromatic = _this4.diatonic.getChromatic();
      } else {
        console.error('cant parse string arguments to Interval yet');
      }
    } else if (restArgs.length === 2) {
      if (restArgs[0].pitch === undefined && restArgs[0].diatonicNoteNum === undefined) {
        _this4.diatonic = restArgs[0];
        _this4.chromatic = restArgs[1];
      } else {
        var n1 = restArgs[0];
        var n2 = restArgs[1];

        if (n1.classes !== undefined && n1.classes.includes('Pitch')) {
          var p1 = n1;
          n1 = new __WEBPACK_IMPORTED_MODULE_2__note_js__["a" /* note */].Note();
          n1.pitch = p1;
        }

        if (n2.classes !== undefined && n2.classes.includes('Pitch')) {
          var p2 = n2;
          n2 = new __WEBPACK_IMPORTED_MODULE_2__note_js__["a" /* note */].Note();
          n2.pitch = p2;
        }

        var gInt = interval.notesToGeneric(n1, n2);
        var cInt = interval.notesToChromatic(n1, n2);
        _this4.diatonic = interval.intervalsToDiatonic(gInt, cInt);
        _this4.chromatic = cInt;
        noteStart = n1;
        noteEnd = n2;
      }
    }

    _this4._noteStart = noteStart;
    _this4._noteEnd = noteEnd;

    _this4.reinit();

    return _this4;
  }

  _createClass(Interval, [{
    key: "reinit",
    value: function reinit() {
      this.direction = this.chromatic.direction;
      this.specifier = this.diatonic.specifier;
      this.diatonicType = this.diatonic.specifier; // this.specificName = this.diatonic.specificName;

      this.generic = this.diatonic.generic;
      this.name = this.diatonic.name;
      this.niceName = this.diatonic.niceName;
      this.simpleName = this.diatonic.simpleName;
      this.simpleNiceName = this.diatonic.simpleNiceName;
      this.semiSimpleName = this.diatonic.semiSimpleName;
      this.semiSimpleNiceName = this.diatonic.semiSimpleNiceName;
      this.directedName = this.diatonic.directedName;
      this.directedNiceName = this.diatonic.directedNiceName;
      this.directedSimpleName = this.diatonic.directedSimpleName;
      this.directedSimpleNiceName = this.diatonic.directedSimpleNiceName; // other names...

      this.isDiatonicStep = this.diatonic.isDiatonicStep;
      this.isChromaticStep = this.chromatic.isChromaticStep;
      this.semitones = this.chromatic.semitones;
      this.intervalClass = this.chromatic.intervalClass;
      this.cents = this.chromatic.cents;
      this.isStep = this.isChromaticStep || this.isDiatonicStep;
      this.isSkip = this.diatonic.isSkip;
    }
  }, {
    key: "isConsonant",

    /**
     * @returns {Boolean}
     */
    value: function isConsonant() {
      var sn = this.simpleName;
      var consonantNames = ['P5', 'm3', 'M3', 'm6', 'M6', 'P1'];

      if (consonantNames.indexOf(sn) !== -1) {
        return true;
      } else {
        return false;
      }
    } //  todo general: microtones

    /**
     * TODO: maxAccidental
     * 
     * @param {music21.pitch.Pitch} p - pitch to transpose
     * @param {Object} config - configuration
     * @param {boolean} [config.reverse=false] -- reverse direction
     * @param {number} [config.maxAccidental=4] -- maximum accidentals to retain (unused)
     * @returns {music21.pitch.Pitch}
     */

  }, {
    key: "transposePitch",
    value: function transposePitch(p) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref$reverse = _ref.reverse,
          reverse = _ref$reverse === void 0 ? false : _ref$reverse,
          _ref$maxAccidental = _ref.maxAccidental,
          maxAccidental = _ref$maxAccidental === void 0 ? 4 : _ref$maxAccidental;

      /*
      var useImplicitOctave = false;
      if (p.octave === undefined) {
          useImplicitOctave = true;
      }
       */
      var pitch2 = this.diatonic.generic.transposePitch(p);
      pitch2.accidental = undefined; // step and octave are right now, but not necessarily accidental

      var halfStepsToFix;

      if (!reverse) {
        halfStepsToFix = this.chromatic.semitones - Math.floor(pitch2.ps - p.ps);
      } else {
        halfStepsToFix = -1 * this.chromatic.semitones - Math.floor(pitch2.ps - p.ps);
      }

      if (halfStepsToFix !== 0) {
        pitch2.accidental = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Accidental(halfStepsToFix);
      }

      if (__WEBPACK_IMPORTED_MODULE_1__debug_js__["a" /* debug */]) {
        console.log('Interval.transposePitch -- new step ' + pitch2.step);
        console.log('Interval.transposePitch -- new octave ' + pitch2.octave);
        console.log('Interval.transposePitch -- fixing half steps for ' + halfStepsToFix);
      }

      return pitch2;
    }
  }, {
    key: "complement",
    get: function get() {
      return new interval.Interval(this.diatonic.mod7inversion);
    }
  }, {
    key: "noteStart",
    get: function get() {
      return this._noteStart;
    },
    set: function set(n) {
      this._noteStart = n;
      var p1 = n.pitch;
      var p2 = this.transposePitch(p1);
      this._noteEnd = n.clone();
      this._noteEnd.pitch = p2;
    }
  }, {
    key: "noteEnd",
    get: function get() {
      return this._noteEnd;
    },
    set: function set(n) {
      this._noteEnd = n;
      var p1 = n.pitch;
      var p2 = this.transposePitch(p1, true);
      this._noteStart = n.clone();
      this._noteStart.pitch = p2;
    }
  }]);

  return Interval;
}(__WEBPACK_IMPORTED_MODULE_3__prebase_js__["a" /* prebase */].ProtoM21Object);
interval.Interval = Interval;

interval.intervalFromGenericAndChromatic = function intervalFromGenericAndChromatic(gInt, cInt) {
  if (typeof gInt === 'number') {
    gInt = new GenericInterval(gInt);
  }

  if (typeof cInt === 'number') {
    cInt = new ChromaticInterval(cInt);
  }

  var specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt);

  var dInt = new DiatonicInterval(specifier, gInt);
  return new Interval(dInt, cInt);
};
/**
 * Convert two notes or pitches to a GenericInterval;
 */


interval.notesToGeneric = function notesToGeneric(n1, n2) {
  var p1 = n1;

  if (n1.pitch !== undefined) {
    p1 = n1.pitch;
  }

  var p2 = n2;

  if (n2.pitch !== undefined) {
    p2 = n2.pitch;
  }

  var staffDist = p2.diatonicNoteNum - p1.diatonicNoteNum;
  var genDist = interval.convertStaffDistanceToInterval(staffDist);
  return new interval.GenericInterval(genDist);
};

interval.convertStaffDistanceToInterval = function convertStaffDistanceToInterval(staffDist) {
  if (staffDist === 0) {
    return 1;
  } else if (staffDist > 0) {
    return staffDist + 1;
  } else {
    return staffDist - 1;
  }
};

interval.notesToChromatic = function notesToChromatic(n1, n2) {
  var p1 = n1;

  if (n1.pitch !== undefined) {
    p1 = n1.pitch;
  }

  var p2 = n2;

  if (n2.pitch !== undefined) {
    p2 = n2.pitch;
  }

  return new interval.ChromaticInterval(p2.ps - p1.ps);
};

interval.intervalsToDiatonic = function intervalsToDiatonic(gInt, cInt) {
  var specifier = interval._getSpecifierFromGenericChromatic(gInt, cInt); // todo -- convert specifier...


  return new interval.DiatonicInterval(specifier, gInt);
};

interval._getSpecifierFromGenericChromatic = function _getSpecifierFromGenericChromatic(gInt, cInt) {
  var noteVals = [undefined, 0, 2, 4, 5, 7, 9, 11];
  var normalSemis = noteVals[gInt.simpleUndirected] + 12 * gInt.undirectedOctaves;
  var theseSemis = 0;

  if (gInt.direction !== cInt.direction && gInt.direction !== interval.Direction.OBLIQUE && cInt.direction !== interval.Direction.OBLIQUE) {
    // intervals like d2 and dd2 etc. (the last test doesn't matter, since -1*0 === 0, but in theory it should be there)
    theseSemis = -1 * cInt.undirected;
  } else if (gInt.undirected === 1) {
    theseSemis = cInt.directed; // matters for unison
  } else {
    // all normal intervals
    theseSemis = cInt.undirected;
  }

  var semisRounded = Math.round(theseSemis);
  var specifier = '';

  if (gInt.perfectable) {
    specifier = interval.IntervalPerfSpecifiers[interval.IntervalPerfOffset + semisRounded - normalSemis];
  } else {
    specifier = interval.IntervalSpecifiers[interval.IntervalMajOffset + semisRounded - normalSemis];
  }

  return specifier;
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Vex=e():t.Vex=e()}(window,function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function o(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function a(t){var e="function"==typeof Map?new Map:void 0;return(a=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,i)}function i(){return l(t,arguments,c(this).constructor)}return i.prototype=Object.create(t.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),u(i,t)})(t)}function l(t,e,n){return(l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}()?Reflect.construct:function(t,e,n){var i=[null];i.push.apply(i,e);var o=new(Function.bind.apply(t,i));return n&&u(o,n.prototype),o}).apply(null,arguments)}function u(t,e){return(u=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}n.r(e);var h=function(){};h.L=function(t,e){if(e){var n=Array.prototype.slice.call(e).join(" ");window.console.log(t+": "+n)}},h.MakeException=function(t){return function(e){function n(e,i){var o;return r(this,n),(o=s(this,c(n).call(this,e))).name=t,o.message=e,o.data=i,o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&u(t,e)}(n,a(Error)),n}()};var f=function(){function t(e,n){r(this,t),this.code=e,this.message=n}var e,n,i;return e=t,(n=[{key:"toString",value:function(){return"[RuntimeError] "+this.code+":"+this.message}}])&&o(e.prototype,n),i&&o(e,i),t}();function b(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function p(t,e,n){return e&&b(t.prototype,e),n&&b(t,n),t}h.RuntimeError=f,h.RERR=h.RuntimeError,h.Merge=function(t,e){for(var n in e)t[n]=e[n];return t},h.Min=Math.min,h.Max=Math.max,h.forEach=function(t,e){for(var n=0;n<t.length;n++)e(t[n],n)},h.RoundN=function(t,e){return t%e>=e/2?parseInt(t/e,10)*e+e:parseInt(t/e,10)*e},h.MidLine=function(t,e){var n=e+(t-e)/2;return n%2>0&&(n=h.RoundN(10*n,5)/10),n},h.SortAndUnique=function(t,e,n){if(t.length>1){var i,o=[];t.sort(e);for(var r=0;r<t.length;++r)0!==r&&n(t[r],i)||o.push(t[r]),i=t[r];return o}return t},h.Contains=function(t,e){for(var n=t.length;n--;)if(t[n]===e)return!0;return!1},h.getCanvasContext=function(t){if(!t)throw new h.RERR("BadArgument","Invalid canvas selector: "+t);var e=document.getElementById(t);if(!e||!e.getContext)throw new h.RERR("UnsupportedBrowserError","This browser does not support HTML5 Canvas");return e.getContext("2d")},h.drawDot=function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#55";t.save(),t.setFillStyle(i),t.beginPath(),t.arc(e,n,3,0,2*Math.PI,!0),t.closePath(),t.fill(),t.restore()},h.BM=function(t,e){var n=(new Date).getTime();e();var i=(new Date).getTime()-n;h.L(t+i+"ms")},h.StackTrace=function(){return(new Error).stack},h.W=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];var i=e.join(" ");window.console.log("Warning: ",i,h.StackTrace())},h.Prefix=function(t){return h.Prefix.prefix+t},h.Prefix.prefix="vf-";var y=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.set(e,n)}return p(t,null,[{key:"GCD",value:function(t,e){if("number"!=typeof t||"number"!=typeof e)throw new h.RERR("BadArgument","Invalid numbers: ".concat(t,", ").concat(e));for(var n;0!==e;)n=e,e=t%e,t=n;return t}},{key:"LCM",value:function(e,n){return e*n/t.GCD(e,n)}},{key:"LCMM",value:function(e){if(0===e.length)return 0;if(1===e.length)return e[0];if(2===e.length)return t.LCM(e[0],e[1]);var n=e[0];return e.shift(),t.LCM(n,t.LCMM(e))}}]),p(t,[{key:"set",value:function(t,e){return this.numerator=void 0===t?1:t,this.denominator=void 0===e?1:e,this}},{key:"value",value:function(){return this.numerator/this.denominator}},{key:"simplify",value:function(){var e=this.numerator,n=this.denominator,i=t.GCD(e,n);return e/=i,(n/=i)<0&&(n=-n,e=-e),this.set(e,n)}},{key:"add",value:function(e,n){var i,o;e instanceof t?(i=e.numerator,o=e.denominator):(i=void 0!==e?e:0,o=void 0!==n?n:1);var r=t.LCM(this.denominator,o),s=r/this.denominator,a=r/o,l=this.numerator*s+i*a;return this.set(l,r)}},{key:"subtract",value:function(e,n){var i,o;e instanceof t?(i=e.numerator,o=e.denominator):(i=void 0!==e?e:0,o=void 0!==n?n:1);var r=t.LCM(this.denominator,o),s=r/this.denominator,a=r/o,l=this.numerator*s-i*a;return this.set(l,r)}},{key:"multiply",value:function(e,n){var i,o;return e instanceof t?(i=e.numerator,o=e.denominator):(i=void 0!==e?e:1,o=void 0!==n?n:1),this.set(this.numerator*i,this.denominator*o)}},{key:"divide",value:function(e,n){var i,o;return e instanceof t?(i=e.numerator,o=e.denominator):(i=void 0!==e?e:1,o=void 0!==n?n:1),this.set(this.numerator*o,this.denominator*i)}},{key:"equals",value:function(e){var n=t.__compareA.copy(e).simplify(),i=t.__compareB.copy(this).simplify();return n.numerator===i.numerator&&n.denominator===i.denominator}},{key:"greaterThan",value:function(e){var n=t.__compareB.copy(this);return n.subtract(e),n.numerator>0}},{key:"greaterThanEquals",value:function(e){var n=t.__compareB.copy(this);return n.subtract(e),n.numerator>=0}},{key:"lessThan",value:function(t){return!this.greaterThanEquals(t)}},{key:"lessThanEquals",value:function(t){return!this.greaterThan(t)}},{key:"clone",value:function(){return new t(this.numerator,this.denominator)}},{key:"copy",value:function(t){return"number"==typeof t?this.set(t||0,1):this.set(t.numerator,t.denominator)}},{key:"quotient",value:function(){return Math.floor(this.numerator/this.denominator)}},{key:"fraction",value:function(){return this.numerator%this.denominator}},{key:"abs",value:function(){return this.denominator=Math.abs(this.denominator),this.numerator=Math.abs(this.numerator),this}},{key:"toString",value:function(){return this.numerator+"/"+this.denominator}},{key:"toSimplifiedString",value:function(){return t.__tmp.copy(this).simplify().toString()}},{key:"toMixedString",value:function(){var e="",n=this.quotient(),i=t.__tmp.copy(this);return n<0?i.abs().fraction():i.fraction(),0!==n?(e+=n,0!==i.numerator&&(e+=" "+i.toSimplifiedString())):e=0===i.numerator?"0":i.toSimplifiedString(),e}},{key:"parse",value:function(t){var e=t.split("/"),n=parseInt(e[0],10),i=e[1]?parseInt(e[1],10):1;return this.set(n,i)}}]),t}();function d(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function v(t,e,n){return e&&d(t.prototype,e),n&&d(t,n),t}y.__compareA=new y,y.__compareB=new y,y.__tmp=new y;var g=h.MakeException("RegistryError");function m(t,e,n,i,o){t[e][n]||(t[e][n]={}),t[e][n][i]=o}var _=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.clear()}return v(t,null,[{key:"INDEXES",get:function(){return["type"]}}]),v(t,[{key:"clear",value:function(){return this.index={id:{},type:{},class:{}},this}},{key:"updateIndex",value:function(t){var e=t.id,n=t.name,i=t.value,o=t.oldValue,r=this.getElementById(e);null!==o&&this.index[n][o]&&delete this.index[n][o][e],null!==i&&m(this.index,n,i,r.getAttribute("id"),r)}},{key:"register",value:function(e,n){var i=this;if(!(n=n||e.getAttribute("id")))throw new g("Can't add element without `id` attribute to registry",e);return e.setAttribute("id",n),m(this.index,"id",n,n,e),t.INDEXES.forEach(function(t){i.updateIndex({id:n,name:t,value:e.getAttribute(t),oldValue:null})}),e.onRegister(this),this}},{key:"getElementById",value:function(t){return this.index.id[t]?this.index.id[t][t]:null}},{key:"getElementsByAttribute",value:function(t,e){var n=this.index[t];return n&&n[e]?Object.keys(n[e]).map(function(t){return n[e][t]}):[]}},{key:"getElementsByType",value:function(t){return this.getElementsByAttribute("type",t)}},{key:"getElementsByClass",value:function(t){return this.getElementsByAttribute("class",t)}},{key:"onUpdate",value:function(e){var n=e.id,i=e.name,o=e.value,r=e.oldValue;return function(t,e){return t.filter(function(t){return t===e}).length>0}(t.INDEXES.concat(["id","class"]),i)?(this.updateIndex({id:n,name:i,value:o,oldValue:r}),this):this}}],[{key:"enableDefaultRegistry",value:function(e){t.defaultRegistry=e}},{key:"getDefaultRegistry",value:function(){return t.defaultRegistry}},{key:"disableDefaultRegistry",value:function(){t.defaultRegistry=null}}]),t}();function x(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function w(t,e,n){return e&&x(t.prototype,e),n&&x(t,n),t}_.defaultRegistry=null;var k=function(){function t(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).type;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.attrs={id:t.newID(),el:null,type:e||"Base",classes:{}},this.boundingBox=null,this.context=null,this.rendered=!1,_.getDefaultRegistry()&&_.getDefaultRegistry().register(this)}return w(t,null,[{key:"newID",value:function(){return"auto"+t.ID++}}]),w(t,[{key:"setStyle",value:function(t){return this.style=t,this}},{key:"getStyle",value:function(){return this.style}},{key:"applyStyle",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.context,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.getStyle();return e?(t.save(),e.shadowColor&&t.setShadowColor(e.shadowColor),e.shadowBlur&&t.setShadowBlur(e.shadowBlur),e.fillStyle&&t.setFillStyle(e.fillStyle),e.strokeStyle&&t.setStrokeStyle(e.strokeStyle),e.lineWidth&&t.setLineWidth(e.lineWidth),this):this}},{key:"restoreStyle",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.context;return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.getStyle())?(t.restore(),this):this}},{key:"hasClass",value:function(t){return!0===this.attrs.classes[t]}},{key:"addClass",value:function(t){return this.attrs.classes[t]=!0,this.registry&&this.registry.onUpdate({id:this.getAttribute("id"),name:"class",value:t,oldValue:null}),this}},{key:"removeClass",value:function(t){return delete this.attrs.classes[t],this.registry&&this.registry.onUpdate({id:this.getAttribute("id"),name:"class",value:null,oldValue:t}),this}},{key:"onRegister",value:function(t){return this.registry=t,this}},{key:"isRendered",value:function(){return this.rendered}},{key:"setRendered",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this.rendered=t,this}},{key:"getAttributes",value:function(){return this.attrs}},{key:"getAttribute",value:function(t){return this.attrs[t]}},{key:"setAttribute",value:function(t,e){var n=this.attrs.id,i=this.attrs[t];return this.attrs[t]=e,this.registry&&this.registry.onUpdate({id:n,name:t,value:e,oldValue:i}),this}},{key:"getContext",value:function(){return this.context}},{key:"setContext",value:function(t){return this.context=t,this}},{key:"getBoundingBox",value:function(){return this.boundingBox}},{key:"checkContext",value:function(){if(!this.context)throw new h.RERR("NoContext","No rendering context attached to instance");return this.context}}]),t}();function S(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}k.ID=1e3;var T=function(){function t(e,n,i,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN,this.addPoint(e,n),this.addPoint(i,o)}var e,n,i;return e=t,(n=[{key:"width",value:function(){return this.x2-this.x1}},{key:"height",value:function(){return this.y2-this.y1}},{key:"addPoint",value:function(t,e){null!=t&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=t,this.x2=t),t<this.x1&&(this.x1=t),t>this.x2&&(this.x2=t)),null!=e&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=e,this.y2=e),e<this.y1&&(this.y1=e),e>this.y2&&(this.y2=e))}},{key:"addX",value:function(t){this.addPoint(t,null)}},{key:"addY",value:function(t){this.addPoint(null,t)}},{key:"addQuadraticCurve",value:function(t,e,n,i,o,r){var s=t+2/3*(n-t),a=e+2/3*(i-e),l=s+1/3*(o-t),u=a+1/3*(r-e);this.addBezierCurve(t,e,s,a,l,u,o,r)}},{key:"addBezierCurve",value:function(t,e,n,i,o,r,s,a){var l,u=[t,e],c=[n,i],h=[o,r],f=[s,a];this.addPoint(u[0],u[1]),this.addPoint(f[0],f[1]);var b=function(t,e){return Math.pow(1-t,3)*u[e]+3*Math.pow(1-t,2)*t*c[e]+3*(1-t)*Math.pow(t,2)*h[e]+Math.pow(t,3)*f[e]};for(l=0;l<=1;l++){var p=6*u[l]-12*c[l]+6*h[l],y=-3*u[l]+9*c[l]-9*h[l]+3*f[l],d=3*c[l]-3*u[l];if(0!==y){var v=Math.pow(p,2)-4*d*y;if(!(v<0)){var g=(-p+Math.sqrt(v))/(2*y);0<g&&g<1&&(0===l&&this.addX(b(g,l)),1===l&&this.addY(b(g,l)));var m=(-p-Math.sqrt(v))/(2*y);0<m&&m<1&&(0===l&&this.addX(b(m,l)),1===l&&this.addY(b(m,l)))}}else{if(0===p)continue;var _=-d/p;0<_&&_<1&&(0===l&&this.addX(b(_,l)),1===l&&this.addY(b(_,l)))}}}}])&&S(e.prototype,n),i&&S(e,i),t}();function E(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function O(t,e,n){return e&&E(t.prototype,e),n&&E(t,n),t}var R=function(){function t(e,n,i,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=e,this.y=n,this.w=i,this.h=o}return O(t,null,[{key:"copy",value:function(e){return new t(e.x,e.y,e.w,e.h)}}]),O(t,[{key:"getX",value:function(){return this.x}},{key:"getY",value:function(){return this.y}},{key:"getW",value:function(){return this.w}},{key:"getH",value:function(){return this.h}},{key:"setX",value:function(t){return this.x=t,this}},{key:"setY",value:function(t){return this.y=t,this}},{key:"setW",value:function(t){return this.w=t,this}},{key:"setH",value:function(t){return this.h=t,this}},{key:"move",value:function(t,e){this.x+=t,this.y+=e}},{key:"clone",value:function(){return t.copy(this)}},{key:"mergeWith",value:function(t,e){var n=t,i=this.x<n.x?this.x:n.x,o=this.y<n.y?this.y:n.y,r=Math.max(this.x+this.w,n.x+n.w)-i,s=Math.max(this.y+this.h,n.y+n.h)-o;return this.x=i,this.y=o,this.w=r,this.h=s,e&&this.draw(e),this}},{key:"draw",value:function(t,e,n){e||(e=0),n||(n=0),t.rect(this.x+e,this.y+n,this.w,this.h),t.stroke()}}]),t}(),P={glyphs:{v0:{x_min:0,x_max:514.5,ha:525,o:"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 "},v1:{x_min:-1.359375,x_max:344.359375,ha:351,o:"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 "},v2:{x_min:-1.359375,x_max:458.6875,ha:468,o:"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 "},v3:{x_min:-1.359375,x_max:409.6875,ha:418,o:"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 "},v4:{x_min:0,x_max:468.21875,ha:478,o:"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 "},v5:{x_min:0,x_max:409.6875,ha:418,o:"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 "},v6:{x_min:0,x_max:475.03125,ha:485,o:"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 "},v7:{x_min:0,x_max:442.359375,ha:451,o:"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 "},v8:{x_min:0,x_max:488.640625,ha:499,o:"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 "},v9:{x_min:0,x_max:475.03125,ha:485,o:"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 "},va:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 "},vb:{x_min:0,x_max:428.75,ha:438,o:"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 "},vc:{x_min:0,x_max:447.8125,ha:457,o:"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 "},vf:{x_min:0,x_max:370.21875,ha:378,o:"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 "},v10:{x_min:0,x_max:559.421875,ha:571,o:"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 "},v11:{x_min:-155.171875,x_max:153.8125,ha:157,o:"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 "},v18:{x_min:0,x_max:323.9375,ha:331,o:"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 "},v1b:{x_min:0,x_max:559.421875,ha:571,o:"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 "},v1d:{x_min:0,x_max:619.3125,ha:632,o:"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 "},v1e:{x_min:-402.890625,x_max:401.53125,ha:410,o:"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 "},v1f:{x_min:-340.28125,x_max:338.921875,ha:346,o:"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 "},v20:{x_min:-571.671875,x_max:570.3125,ha:582,o:"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 "},v22:{x_min:0,x_max:432.828125,ha:442,o:"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 "},v23:{x_min:0,x_max:133.390625,ha:136,o:"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 "},v25:{x_min:0,x_max:318.5,ha:325,o:"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 "},v26:{x_min:-21.78125,x_max:483.1875,ha:493,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 "},v27:{x_min:0,x_max:432.828125,ha:442,o:"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 "},v28:{x_min:-73.5,x_max:72.140625,ha:74,o:"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 "},v29:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 "},v2a:{x_min:-21.78125,x_max:366.140625,ha:374,o:"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 "},v2c:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 "},v2d:{x_min:0,x_max:438.28125,ha:447,o:"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 "},v2f:{x_min:-1.359375,x_max:680.5625,ha:694,o:"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 "},v30:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 "},v31:{x_min:0,x_max:386.5625,ha:394,o:"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 "},v33:{x_min:-423.3125,x_max:421.9375,ha:431,o:"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 "},v34:{x_min:0,x_max:622.03125,ha:635,o:"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 "},v36:{x_min:-1.359375,x_max:1064.390625,ha:1086,o:"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 "},v38:{x_min:-1.359375,x_max:651.96875,ha:665,o:"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 "},v39:{x_min:-171.5,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},v3b:{x_min:0,x_max:484.5625,ha:494,o:"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 "},v3c:{x_min:0,x_max:450.53125,ha:460,o:"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 "},v3e:{x_min:0,x_max:406.96875,ha:415,o:"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 "},v3f:{x_min:-24.5,x_max:317.140625,ha:324,o:"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 "},v40:{x_min:-1.359375,x_max:436.921875,ha:446,o:"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 "},v41:{x_min:-1.359375,x_max:556.6875,ha:568,o:"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 "},v42:{x_min:-348.4375,x_max:24.5,ha:25,o:"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 "},v43:{x_min:-442.359375,x_max:441,ha:450,o:"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 "},v44:{x_min:-21.78125,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},v45:{x_min:-402.890625,x_max:401.53125,ha:410,o:"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 "},v46:{x_min:0,x_max:627.46875,ha:640,o:"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 "},v47:{x_min:-24.5,x_max:315.78125,ha:322,o:"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 "},v49:{x_min:0,x_max:630.203125,ha:643,o:"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 "},v4a:{x_min:70.78125,x_max:378.390625,ha:315,o:"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 "},v4b:{x_min:0,x_max:503.609375,ha:514,o:"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 "},v4d:{x_min:-311.6875,x_max:310.328125,ha:317,o:"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 "},v4e:{x_min:0,x_max:239.5625,ha:244,o:"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 "},v51:{x_min:-1.359375,x_max:455.96875,ha:465,o:"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 "},v52:{x_min:-10.890625,x_max:298.078125,ha:294,o:"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 "},v53:{x_min:0,x_max:902.421875,ha:921,o:"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 "},v54:{x_min:-24.5,x_max:317.140625,ha:324,o:"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 "},v55:{x_min:0,x_max:551.25,ha:563,o:"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 "},v58:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 "},v59:{x_min:0,x_max:464.140625,ha:474,o:"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 "},v5a:{x_min:-171.5,x_max:170.140625,ha:174,o:"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 "},v5b:{x_min:-441,x_max:439.640625,ha:449,o:"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 "},v5c:{x_min:0,x_max:447.8125,ha:457,o:"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 "},v5d:{x_min:-1.359375,x_max:592.078125,ha:604,o:"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 "},v60:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 "},v62:{x_min:46.28125,x_max:669.671875,ha:563,o:"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 "},v68:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 "},v6c:{x_min:-1.359375,x_max:193.28125,ha:197,o:"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 "},v6d:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 "},v6f:{x_min:-80.3125,x_max:78.9375,ha:81,o:"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 "},v70:{x_min:0,x_max:436.921875,ha:446,o:"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 "},v72:{x_min:-423.3125,x_max:421.9375,ha:431,o:"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 "},v74:{x_min:-206.890625,x_max:428.75,ha:438,o:"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 "},v75:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 "},v78:{x_min:0,x_max:193.28125,ha:197,o:"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 "},v79:{x_min:-1.359375,x_max:899.703125,ha:918,o:"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 "},v7a:{x_min:-1.359375,x_max:386.5625,ha:394,o:"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 "},v7c:{x_min:0,x_max:300.8125,ha:307,o:"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 "},v7d:{x_min:-1.359375,x_max:436.921875,ha:446,o:"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 "},v7f:{x_min:0,x_max:367.5,ha:375,o:"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 "},v80:{x_min:29.9375,x_max:420.578125,ha:371,o:"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 "},v81:{x_min:0,x_max:428.75,ha:438,o:"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 "},v83:{x_min:-1.359375,x_max:847.96875,ha:865,o:"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 "},v84:{x_min:25.859375,x_max:164.6875,ha:168,o:"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 "},v86:{x_min:-571.671875,x_max:570.3125,ha:582,o:"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 "},v8a:{x_min:-170.140625,x_max:168.78125,ha:172,o:"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 "},v8b:{x_min:0,x_max:319.859375,ha:326,o:"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 "},v8c:{x_min:-330.75,x_max:329.390625,ha:336,o:"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 "},v8d:{x_min:-1.359375,x_max:255.890625,ha:261,o:"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 "},v8f:{x_min:-21.78125,x_max:362.0625,ha:369,o:"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 "},v90:{x_min:-171.5,x_max:483.1875,ha:493,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 "},v92:{x_min:0,x_max:598.890625,ha:611,o:"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 "},v93:{x_min:0,x_max:438.28125,ha:447,o:"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 "},v94:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 "},v95:{x_min:0,x_max:406.96875,ha:415,o:"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 "},v97:{x_min:-228.671875,x_max:227.3125,ha:232,o:"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 "},v9a:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 "},v9b:{x_min:-24.5,x_max:313.0625,ha:319,o:"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 "},v9c:{x_min:-166.0625,x_max:-25.859375,ha:0,o:"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 "},v9e:{x_min:0,x_max:607.0625,ha:619,o:"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 "},va3:{x_min:58.53125,x_max:228.671875,ha:294,o:"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 "},va5:{x_min:0,x_max:349.8125,ha:357,o:"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 "},va9:{x_min:-24.5,x_max:314.421875,ha:321,o:"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 "},vaa:{x_min:-1.359375,x_max:752.703125,ha:768,o:"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 "},vab:{x_min:0,x_max:272.21875,ha:278,o:"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 "},vad:{x_min:0,x_max:873.828125,ha:892,o:"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 "},vb1:{x_min:78.9375,x_max:485.921875,ha:417,o:"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 "},vb3:{x_min:0,x_max:227.3125,ha:232,o:"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 "},vb4:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 "},vb6:{x_min:0,x_max:556.6875,ha:568,o:"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 "},vb7:{x_min:-176.9375,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},vb9:{x_min:-122.5,x_max:121.140625,ha:124,o:"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 "},vba:{x_min:-118.421875,x_max:597.53125,ha:381,o:"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 "},vbf:{x_min:-53.078125,x_max:513.140625,ha:485,o:"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 "},vc3:{x_min:-10.890625,x_max:299.4375,ha:294,o:"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 "},vd0:{x_min:-10.890625,x_max:299.4375,ha:294,o:"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 "},vd1:{x_min:-20,x_max:320,ha:257,o:"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 "},vd2:{x_min:0,x_max:430.75,ha:386,o:"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 "},vd3:{x_min:0,x_max:430.75,ha:386,o:"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 "},vd4:{x_min:0,x_max:430.75,ha:360,o:"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 "},vd5:{x_min:0,x_max:430.75,ha:360,o:"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100"}},cssFontWeight:"normal",ascender:1903,underlinePosition:-125,cssFontStyle:"normal",boundingBox:{yMin:-2065.375,xMin:-695.53125,yMax:1901.578125,xMax:1159.671875},resolution:1e3,descender:-2066,familyName:"VexFlow-18",lineHeight:4093,underlineThickness:50};function C(t){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function N(t,e){return!e||"object"!==C(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function A(t){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function L(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function M(t,e,n){return e&&L(t.prototype,e),n&&L(t,n),t}function F(t,e){return(F=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function B(t,e,n,i,o,r){var s,a,l,u=0;function c(){return e+t[u++]*i}function h(){return n+t[u++]*o}for(;u<t.length;)switch(s=t[u++]){case"m":case"l":r[s](c(),h());break;case"q":a=c(),l=h(),r.q(c(),h(),a,l);break;case"b":a=c(),l=h(),r.b(c(),h(),c(),h(),a,l)}}var j=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=N(this,A(e).call(this))).setAttribute("type","Glyph"),o.code=t,o.point=n,o.options={cache:!0,font:P},o.metrics=null,o.x_shift=0,o.y_shift=0,o.originShift={x:0,y:0},i?o.setOptions(i):o.reset(),o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&F(t,e)}(e,k),M(e,null,[{key:"loadMetrics",value:function(t,e,n){var i=t.glyphs[e];if(!i)throw new h.RERR("BadGlyph","Glyph ".concat(e," does not exist in font."));var o,r=i.x_min,s=i.x_max,a=i.ha;if(i.o)return n?i.cached_outline?o=i.cached_outline:(o=i.o.split(" "),i.cached_outline=o):(i.cached_outline&&delete i.cached_outline,o=i.o.split(" ")),{x_min:r,x_max:s,ha:a,outline:o};throw new h.RERR("BadGlyph","Glyph ".concat(e," has no outline defined."))}},{key:"renderGlyph",value:function(t,n,i,o,r,s){var a=72*o/(100*P.resolution),l=e.loadMetrics(P,r,!s);e.renderOutline(t,l.outline,a,n,i)}},{key:"renderOutline",value:function(t,e,n,i,o){t.beginPath(),t.moveTo(i,o),B(e,i,o,n,-n,{m:t.moveTo.bind(t),l:t.lineTo.bind(t),q:t.quadraticCurveTo.bind(t),b:t.bezierCurveTo.bind(t)}),t.fill()}},{key:"getOutlineBoundingBox",value:function(t,e,n,i){var o=new T;return B(t,n,i,e,-e,{m:o.addPoint.bind(o),l:o.addPoint.bind(o),q:o.addQuadraticCurve.bind(o),b:o.addBezierCurve.bind(o)}),new R(o.x1,o.y1,o.width(),o.height())}}]),M(e,[{key:"setOptions",value:function(t){h.Merge(this.options,t),this.reset()}},{key:"setPoint",value:function(t){return this.point=t,this}},{key:"setStave",value:function(t){return this.stave=t,this}},{key:"setXShift",value:function(t){return this.x_shift=t,this}},{key:"setYShift",value:function(t){return this.y_shift=t,this}},{key:"reset",value:function(){this.scale=72*this.point/(100*this.options.font.resolution),this.metrics=e.loadMetrics(this.options.font,this.code,this.options.cache),this.bbox=e.getOutlineBoundingBox(this.metrics.outline,this.scale,0,0)}},{key:"getMetrics",value:function(){if(!this.metrics)throw new h.RuntimeError("BadGlyph","Glyph ".concat(this.code," is not initialized."));return{x_min:this.metrics.x_min*this.scale,x_max:this.metrics.x_max*this.scale,width:this.bbox.getW(),height:this.bbox.getH()}}},{key:"setOriginX",value:function(t){var e=this.bbox,n=(t-Math.abs(e.getX()/e.getW()))*e.getW();this.originShift.x=-n}},{key:"setOriginY",value:function(t){var e=this.bbox,n=(t-Math.abs(e.getY()/e.getH()))*e.getH();this.originShift.y=-n}},{key:"setOrigin",value:function(t,e){this.setOriginX(t),this.setOriginY(e)}},{key:"render",value:function(t,n,i){if(!this.metrics)throw new h.RuntimeError("BadGlyph","Glyph ".concat(this.code," is not initialized."));var o=this.metrics.outline,r=this.scale;this.setRendered(),this.applyStyle(t),e.renderOutline(t,o,r,n+this.originShift.x,i+this.originShift.y),this.restoreStyle(t)}},{key:"renderToStave",value:function(t){if(this.checkContext(),!this.metrics)throw new h.RuntimeError("BadGlyph","Glyph ".concat(this.code," is not initialized."));if(!this.stave)throw new h.RuntimeError("GlyphError","No valid stave");var n=this.metrics.outline,i=this.scale;this.setRendered(),this.applyStyle(),e.renderOutline(this.context,n,i,t+this.x_shift,this.stave.getYForGlyphs()+this.y_shift),this.restoreStyle()}}]),e}();function D(t){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var I={STEM_WIDTH:1.5,STEM_HEIGHT:35,STAVE_LINE_THICKNESS:1,RESOLUTION:16384,DEFAULT_NOTATION_FONT_SCALE:39,DEFAULT_TABLATURE_FONT_SCALE:39,SLASH_NOTEHEAD_WIDTH:15,TEXT_HEIGHT_OFFSET_HACK:1,IsKerned:!0};function G(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Y(t,e,n){return e&&G(t.prototype,e),n&&G(t,n),t}I.clefProperties=function(t){if(!t)throw new h.RERR("BadArgument","Invalid clef: "+t);var e=I.clefProperties.values[t];if(!e)throw new h.RERR("BadArgument","Invalid clef: "+t);return e},I.clefProperties.values={treble:{line_shift:0},bass:{line_shift:6},tenor:{line_shift:4},alto:{line_shift:3},soprano:{line_shift:1},percussion:{line_shift:0},"mezzo-soprano":{line_shift:2},"baritone-c":{line_shift:5},"baritone-f":{line_shift:5},subbass:{line_shift:7},french:{line_shift:-1}},I.keyProperties=function(t,e,n){void 0===e&&(e="treble");var i={octave_shift:0};"object"===D(n)&&h.Merge(i,n);var o=t.split("/");if(o.length<2)throw new h.RERR("BadArguments","Key must have note + octave and an optional glyph: ".concat(t));var r=o[0].toUpperCase(),s=I.keyProperties.note_values[r];if(!s)throw new h.RERR("BadArguments","Invalid key name: "+r);s.octave&&(o[1]=s.octave);var a=parseInt(o[1],10),l=(7*(a+=-1*i.octave_shift)-28+s.index)/2,u=0;(l+=I.clefProperties(e).line_shift)<=0&&2*l%2==0&&(u=1),l>=6&&2*l%2==0&&(u=-1);var c=void 0!==s.int_val?12*a+s.int_val:null,f=s.code,b=s.shift_right;if(o.length>2&&o[2]){var p=o[2].toUpperCase(),y=I.keyProperties.note_glyph[p];y&&(f=y.code,b=y.shift_right)}return{key:r,octave:a,line:l,int_value:c,accidental:s.accidental,code:f,stroke:u,shift_right:b,displaced:!1}},I.keyProperties.note_values={C:{index:0,int_val:0,accidental:null},CN:{index:0,int_val:0,accidental:"n"},"C#":{index:0,int_val:1,accidental:"#"},"C##":{index:0,int_val:2,accidental:"##"},CB:{index:0,int_val:-1,accidental:"b"},CBB:{index:0,int_val:-2,accidental:"bb"},D:{index:1,int_val:2,accidental:null},DN:{index:1,int_val:2,accidental:"n"},"D#":{index:1,int_val:3,accidental:"#"},"D##":{index:1,int_val:4,accidental:"##"},DB:{index:1,int_val:1,accidental:"b"},DBB:{index:1,int_val:0,accidental:"bb"},E:{index:2,int_val:4,accidental:null},EN:{index:2,int_val:4,accidental:"n"},"E#":{index:2,int_val:5,accidental:"#"},"E##":{index:2,int_val:6,accidental:"##"},EB:{index:2,int_val:3,accidental:"b"},EBB:{index:2,int_val:2,accidental:"bb"},F:{index:3,int_val:5,accidental:null},FN:{index:3,int_val:5,accidental:"n"},"F#":{index:3,int_val:6,accidental:"#"},"F##":{index:3,int_val:7,accidental:"##"},FB:{index:3,int_val:4,accidental:"b"},FBB:{index:3,int_val:3,accidental:"bb"},G:{index:4,int_val:7,accidental:null},GN:{index:4,int_val:7,accidental:"n"},"G#":{index:4,int_val:8,accidental:"#"},"G##":{index:4,int_val:9,accidental:"##"},GB:{index:4,int_val:6,accidental:"b"},GBB:{index:4,int_val:5,accidental:"bb"},A:{index:5,int_val:9,accidental:null},AN:{index:5,int_val:9,accidental:"n"},"A#":{index:5,int_val:10,accidental:"#"},"A##":{index:5,int_val:11,accidental:"##"},AB:{index:5,int_val:8,accidental:"b"},ABB:{index:5,int_val:7,accidental:"bb"},B:{index:6,int_val:11,accidental:null},BN:{index:6,int_val:11,accidental:"n"},"B#":{index:6,int_val:12,accidental:"#"},"B##":{index:6,int_val:13,accidental:"##"},BB:{index:6,int_val:10,accidental:"b"},BBB:{index:6,int_val:9,accidental:"bb"},R:{index:6,int_val:9,rest:!0},X:{index:6,accidental:"",octave:4,code:"v3e",shift_right:5.5}},I.keyProperties.note_glyph={D0:{code:"v27",shift_right:-.5},D1:{code:"v2d",shift_right:-.5},D2:{code:"v22",shift_right:-.5},D3:{code:"v70",shift_right:-.5},T0:{code:"v49",shift_right:-2,stem_up_y_offset:-4,stem_down_y_offset:4},T1:{code:"v93",shift_right:.5,stem_up_y_offset:-4,stem_down_y_offset:4},T2:{code:"v40",shift_right:.5,stem_up_y_offset:-4,stem_down_y_offset:4},T3:{code:"v7d",shift_right:.5,stem_up_y_offset:-4,stem_down_y_offset:4},X0:{code:"v92",shift_right:-2,stem_up_y_offset:4,stem_down_y_offset:4},X1:{code:"v95",shift_right:-.5,stem_up_y_offset:4,stem_down_y_offset:4},X2:{code:"v3e",shift_right:.5,stem_up_y_offset:4,stem_down_y_offset:4},X3:{code:"v3b",shift_right:-2,stem_up_y_offset:2,stem_down_y_offset:2},S1:{code:"vd3",shift_right:0},S2:{code:"vd2",shift_right:0},R1:{code:"vd5",shift_right:0},R2:{code:"vd4",shift_right:0}},I.integerToNote=function(t){if(void 0===t)throw new h.RERR("BadArguments","Undefined integer for integerToNote");if(t<-2)throw new h.RERR("BadArguments","integerToNote requires integer > -2: ".concat(t));var e=I.integerToNote.table[t];if(!e)throw new h.RERR("BadArguments","Unknown note value for integer: ".concat(t));return e},I.integerToNote.table={0:"C",1:"C#",2:"D",3:"D#",4:"E",5:"F",6:"F#",7:"G",8:"G#",9:"A",10:"A#",11:"B"},I.tabToGlyph=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=null,i=0,o=0;if("X"===t.toString().toUpperCase()){var r=new j("v7f",I.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();n="v7f",i=r.width,o=-r.height/2}else i=I.textWidth(t.toString());return{text:t,code:n,getWidth:function(){return i*e},shift_y:o}},I.textWidth=function(t){return 7*t.toString().length},I.articulationCodes=function(t){return I.articulationCodes.articulations[t]},I.articulationCodes.articulations={"a.":{code:"v23",between_lines:!0},av:{code:"v28",between_lines:!0},"a>":{code:"v42",between_lines:!0},"a-":{code:"v25",between_lines:!0},"a^":{code:"va",between_lines:!1},"a+":{code:"v8b",between_lines:!1},ao:{code:"v94",between_lines:!1},ah:{code:"vb9",between_lines:!1},"a@a":{code:"v43",between_lines:!1},"a@u":{code:"v5b",between_lines:!1},"a|":{code:"v75",between_lines:!1},am:{code:"v97",between_lines:!1},"a,":{code:"vb3",between_lines:!1}},I.accidentalCodes=function(t){return I.accidentalCodes.accidentals[t]},I.accidentalCodes.accidentals={"#":{code:"v18",parenRightPaddingAdjustment:-1},"##":{code:"v7f",parenRightPaddingAdjustment:-1},b:{code:"v44",parenRightPaddingAdjustment:-2},bb:{code:"v26",parenRightPaddingAdjustment:-2},n:{code:"v4e",parenRightPaddingAdjustment:-1},"{":{code:"v9c",parenRightPaddingAdjustment:-1},"}":{code:"v84",parenRightPaddingAdjustment:-1},db:{code:"v9e",parenRightPaddingAdjustment:-1},d:{code:"vab",parenRightPaddingAdjustment:0},bbs:{code:"v90",parenRightPaddingAdjustment:-1},"++":{code:"v51",parenRightPaddingAdjustment:-1},"+":{code:"v78",parenRightPaddingAdjustment:-1},"+-":{code:"v8d",parenRightPaddingAdjustment:-1},"++-":{code:"v7a",parenRightPaddingAdjustment:-1},bs:{code:"vb7",parenRightPaddingAdjustment:-1},bss:{code:"v39",parenRightPaddingAdjustment:-1},o:{code:"vd0",parenRightPaddingAdjustment:-1},k:{code:"vd1",parenRightPaddingAdjustment:-1}},I.accidentalColumnsTable={1:{a:[1],b:[1]},2:{a:[1,2]},3:{a:[1,3,2],b:[1,2,1],second_on_bottom:[1,2,3]},4:{a:[1,3,4,2],b:[1,2,3,1],spaced_out_tetrachord:[1,2,1,2]},5:{a:[1,3,5,4,2],b:[1,2,4,3,1],spaced_out_pentachord:[1,2,3,2,1],very_spaced_out_pentachord:[1,2,1,2,1]},6:{a:[1,3,5,6,4,2],b:[1,2,4,5,3,1],spaced_out_hexachord:[1,3,2,1,3,2],very_spaced_out_hexachord:[1,2,1,2,1,2]}},I.ornamentCodes=function(t){return I.ornamentCodes.ornaments[t]},I.ornamentCodes.ornaments={mordent:{code:"v1e"},mordent_inverted:{code:"v45"},turn:{code:"v72"},turn_inverted:{code:"v33"},tr:{code:"v1f"},upprall:{code:"v60"},downprall:{code:"vb4"},prallup:{code:"v6d"},pralldown:{code:"v2c"},upmordent:{code:"v29"},downmordent:{code:"v68"},lineprall:{code:"v20"},prallprall:{code:"v86"}},I.keySignature=function(t){var e=I.keySignature.keySpecs[t];if(!e)throw new h.RERR("BadKeySignature","Bad key signature spec: '".concat(t,"'"));if(!e.acc)return[];for(var n=I.keySignature.accidentalList(e.acc),i=[],o=0;o<e.num;++o){var r=n[o];i.push({type:e.acc,line:r})}return i},I.keySignature.keySpecs={C:{acc:null,num:0},Am:{acc:null,num:0},F:{acc:"b",num:1},Dm:{acc:"b",num:1},Bb:{acc:"b",num:2},Gm:{acc:"b",num:2},Eb:{acc:"b",num:3},Cm:{acc:"b",num:3},Ab:{acc:"b",num:4},Fm:{acc:"b",num:4},Db:{acc:"b",num:5},Bbm:{acc:"b",num:5},Gb:{acc:"b",num:6},Ebm:{acc:"b",num:6},Cb:{acc:"b",num:7},Abm:{acc:"b",num:7},G:{acc:"#",num:1},Em:{acc:"#",num:1},D:{acc:"#",num:2},Bm:{acc:"#",num:2},A:{acc:"#",num:3},"F#m":{acc:"#",num:3},E:{acc:"#",num:4},"C#m":{acc:"#",num:4},B:{acc:"#",num:5},"G#m":{acc:"#",num:5},"F#":{acc:"#",num:6},"D#m":{acc:"#",num:6},"C#":{acc:"#",num:7},"A#m":{acc:"#",num:7}},I.unicode={sharp:String.fromCharCode(parseInt("266F",16)),flat:String.fromCharCode(parseInt("266D",16)),natural:String.fromCharCode(parseInt("266E",16)),triangle:String.fromCharCode(parseInt("25B3",16)),"o-with-slash":String.fromCharCode(parseInt("00F8",16)),degrees:String.fromCharCode(parseInt("00B0",16)),circle:String.fromCharCode(parseInt("25CB",16))},I.keySignature.accidentalList=function(t){return{b:[2,.5,2.5,1,3,1.5,3.5],"#":[0,1.5,-.5,1,2.5,.5,2]}[t]},I.parseNoteDurationString=function(t){if("string"!=typeof t)return null;var e=/(\d*\/?\d+|[a-z])(d*)([nrhms]|$)/.exec(t);if(!e)return null;var n=e[1],i=e[2].length,o=e[3];return 0===o.length&&(o="n"),{duration:n,dots:i,type:o}},I.parseNoteData=function(t){var e=t.duration,n=I.parseNoteDurationString(e);if(!n)return null;var i=I.durationToTicks(n.duration);if(null==i)return null;var o=t.type;if(o){if("n"!==o&&"r"!==o&&"h"!==o&&"m"!==o&&"s"!==o)return null}else{if(o=n.type,void 0!==t.keys){var r=t.keys[0].split("/");r&&3===r.length&&(o=r[2])}o||(o="n")}var s=t.dots?t.dots:n.dots;if("number"!=typeof s)return null;for(var a=i,l=0;l<s;l++){if(a<=1)return null;i+=a/=2}return{duration:n.duration,type:o,dots:s,ticks:i}},I.sanitizeDuration=function(t){var e=I.durationAliases[t];if(void 0!==e&&(t=e),void 0===I.durationToTicks.durations[t])throw new h.RERR("BadArguments","The provided duration is not valid: ".concat(t));return t},I.durationToFraction=function(t){return(new y).parse(I.sanitizeDuration(t))},I.durationToNumber=function(t){return I.durationToFraction(t).value()},I.durationToTicks=function(t){t=I.sanitizeDuration(t);var e=I.durationToTicks.durations[t];return void 0===e?null:e},I.durationToTicks.durations={"1/2":2*I.RESOLUTION,1:I.RESOLUTION/1,2:I.RESOLUTION/2,4:I.RESOLUTION/4,8:I.RESOLUTION/8,16:I.RESOLUTION/16,32:I.RESOLUTION/32,64:I.RESOLUTION/64,128:I.RESOLUTION/128,256:I.RESOLUTION/256},I.durationAliases={w:"1",h:"2",q:"4",b:"256"},I.durationToGlyph=function(t,e){t=I.sanitizeDuration(t);var n=I.durationToGlyph.duration_codes[t];if(void 0===n)return null;e||(e="n");var i=n.type[e];if(void 0===i){var o=I.keyProperties.note_glyph[e.toUpperCase()];if(void 0===o)return null;i={code_head:o.code,stem_up_y_offset:o.stem_up_y_offset,stem_down_y_offset:o.stem_down_y_offset}}return h.Merge(h.Merge({},n.common),i)},I.durationToGlyph.duration_codes={"1/2":{common:{getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"v53",t).getMetrics().width},stem:!1,stem_offset:0,flag:!1,stem_up_extension:-I.STEM_HEIGHT,stem_down_extension:-I.STEM_HEIGHT,tabnote_stem_up_extension:-I.STEM_HEIGHT,tabnote_stem_down_extension:-I.STEM_HEIGHT,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v53"},h:{code_head:"v59"},m:{code_head:"vf",stem_offset:0},r:{code_head:"v31",rest:!0,position:"B/5",dot_shiftY:.5},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},1:{common:{getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"v1d",t).getMetrics().width},stem:!1,stem_offset:0,flag:!1,stem_up_extension:-I.STEM_HEIGHT,stem_down_extension:-I.STEM_HEIGHT,tabnote_stem_up_extension:-I.STEM_HEIGHT,tabnote_stem_down_extension:-I.STEM_HEIGHT,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v1d"},h:{code_head:"v46"},m:{code_head:"v92",stem_offset:-3},r:{code_head:"v5c",rest:!0,position:"D/5",dot_shiftY:.5},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},2:{common:{getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"v81",t).getMetrics().width},stem:!0,stem_offset:0,flag:!1,stem_up_extension:0,stem_down_extension:0,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v81"},h:{code_head:"v2d"},m:{code_head:"v95",stem_offset:-3},r:{code_head:"vc",stem:!1,rest:!0,position:"B/4",dot_shiftY:-.5},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},4:{common:{getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!1,stem_up_extension:0,stem_down_extension:0,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e",stem_offset:-3},r:{code_head:"v7c",stem:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1.5,line_below:1.5},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},8:{common:{getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,beam_count:1,code_flag_upstem:"v54",code_flag_downstem:"v9a",stem_up_extension:0,stem_down_extension:0,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"va5",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1,line_below:1},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},16:{common:{beam_count:2,getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v3f",code_flag_downstem:"v8f",stem_up_extension:0,stem_down_extension:0,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v3c",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1,line_below:2},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},32:{common:{beam_count:3,getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v47",code_flag_downstem:"v2a",stem_up_extension:9,stem_down_extension:9,tabnote_stem_up_extension:8,tabnote_stem_down_extension:5,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v55",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-1.5,line_above:2,line_below:2},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},64:{common:{beam_count:4,getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"va9",code_flag_downstem:"v58",stem_up_extension:13,stem_down_extension:13,tabnote_stem_up_extension:12,tabnote_stem_down_extension:9,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v38",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-1.5,line_above:2,line_below:3},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},128:{common:{beam_count:5,getWidth:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I.DEFAULT_NOTATION_FONT_SCALE;return new j(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v9b",code_flag_downstem:"v30",stem_up_extension:22,stem_down_extension:22,tabnote_stem_up_extension:21,tabnote_stem_down_extension:18,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"vaa",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:1.5,line_above:3,line_below:3},s:{getWidth:function(){return I.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}}},I.smufl={},I.smufl.to_code_points={bracketTop:"v1b",bracketBottom:"v10",barlineTick:"v6f",segno:"v8c",coda:"v4d",gClef:"v83",cClef:"vad",fClef:"v79",unpitchedPercussionClef1:"v59","6stringTabClef":"v2f",timeSig0:"v0",timeSig1:"v1",timeSig2:"v2",timeSig3:"v3",timeSig4:"v4",timeSig5:"v5",timeSig6:"v6",timeSig7:"v7",timeSig8:"v8",timeSig9:"v9",timeSigCommon:"v41",timeSigCutCommon:"vb6",noteheadDoubleWhole:"v53",noteheadWhole:"v1d",noteheadHalf:"v81",noteheadBlack:"vb",noteheadXWhole:"v92",noteheadXHalf:"v95",noteheadXBlack:"v3e",noteheadCircleX:"v3b",noteheadTriangleUpWhole:"v49",noteheadTriangleUpHalf:"v93",noteheadTriangleUpBlack:"v40",noteheadDiamondWhole:"v46",noteheadDiamondHalf:"v2d",noteheadDiamondBlack:"v22",augmentationDot:"v23",tremolo1:"v74",flag8thUp:"v54",flag8thDown:"v9a",flag16thUp:"v3f",flag16thDown:"v8f",flag32ndUp:"v47",flag32ndDown:"v2a",flag64thUp:"va9",flag64thDown:"v58",flag128thUp:"v9b",flag128thDown:"v30",accidentalFlat:"v44",accidentalNatural:"v4e",accidentalSharp:"v18",accidentalDoubleSharp:"v7f",accidentalDoubleFlat:"v26",accidentalParensLeft:"v9c",accidentalParensRight:"v84",accidentalQuarterToneFlatStein:"vab",accidentalThreeQuarterTonesFlatZimmermann:"v9e",accidentalQuarterToneSharpStein:"v78",accidentalThreeQuarterTonesSharpStein:"v51",accidentalBuyukMucennebFlat:"v39",accidentalBakiyeFlat:"vb7",accidentalKomaSharp:"v51",accidentalKucukMucennebSharp:"v8d",accidentalKoron:"vd1",accidentalSori:"vd0",articAccentAbove:"v42",articAccentBelow:"v42",articTenutoAbove:"v25",articTenutoBelow:"v25",articStaccatoAbove:"v23",articStaccatoBelow:"v23",articStaccatissimoAbove:"v28",articMarcatoAbove:"va",fermataAbove:"v43",fermataBelow:"v5b",breathMarkComma:"v6c",breathMarkUpbow:"v8a",caesura:"v34",caesuraCurved:"v4b",restMaxima:"v59",restDoubleWhole:"v31",restWhole:"v5c",restHalf:"vc",restQuarter:"v7c",rest8th:"va5",rest16th:"v3c",rest32nd:"v55",rest64th:"v38",rest128th:"vaa",dynamicPiano:"vbf",dynamicMezzo:"v62",dynamicForte:"vba",dynamicRinforzando:"vba",dynamicSforzando:"v4a",dynamicZ:"v80",ornamentTrill:"v1f",ornamentTurn:"v72",ornamentTurnSlash:"v33",ornamentMordent:"v45",ornamentMordentInverted:"v1e",ornamentTremblement:"v86",ornamentPrecompAppoggTrill:"v20",ornamentPrecompSlideTrillDAnglebert:"v60",ornamentPrecompSlideTrillBach:"v29",ornamentPrecompTrillSuffixDandrieu:"v6d",ornamentPrecompDoubleCadenceUpperPrefix:"vb4",ornamentPrecompDoubleCadenceUpperPrefixTurn:"v68",ornamentPrecompTrillLowerSuffix:"v2c",stringsDownBow:"v94",stringsUpBow:"v75",stringsHarmonic:"vb9",pluckedSnapPizzicatoAbove:"v94",pluckedLeftHandPizzicato:"v8b",keyboardPedalPed:"v36",keyboardPedalUp:"v5d",pictChokeCymbal:"vb3",wiggleArpeggiatoUp:"va3",arrowheadBlackUp:"vc3",arrowheadBlackDown:"v52"},I.TIME4_4={num_beats:4,beat_value:4,resolution:I.RESOLUTION};var W=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.vexFlowCanvasContext=e,e.canvas?this.canvas=e.canvas:this.canvas={width:t.WIDTH,height:t.HEIGHT}}return Y(t,null,[{key:"WIDTH",get:function(){return 600}},{key:"HEIGHT",get:function(){return 400}}]),Y(t,[{key:"clear",value:function(){this.vexFlowCanvasContext.clearRect(0,0,this.canvas.width,this.canvas.height)}},{key:"openGroup",value:function(){}},{key:"closeGroup",value:function(){}},{key:"add",value:function(){}},{key:"setFont",value:function(t,e,n){return this.vexFlowCanvasContext.font=(n||"")+" "+e+"pt "+t,this}},{key:"setRawFont",value:function(t){return this.vexFlowCanvasContext.font=t,this}},{key:"setFillStyle",value:function(t){return this.vexFlowCanvasContext.fillStyle=t,this}},{key:"setBackgroundFillStyle",value:function(t){return this.background_fillStyle=t,this}},{key:"setStrokeStyle",value:function(t){return this.vexFlowCanvasContext.strokeStyle=t,this}},{key:"setShadowColor",value:function(t){return this.vexFlowCanvasContext.shadowColor=t,this}},{key:"setShadowBlur",value:function(t){return this.vexFlowCanvasContext.shadowBlur=t,this}},{key:"setLineWidth",value:function(t){return this.vexFlowCanvasContext.lineWidth=t,this}},{key:"setLineCap",value:function(t){return this.vexFlowCanvasContext.lineCap=t,this}},{key:"setLineDash",value:function(t){return this.vexFlowCanvasContext.lineDash=t,this}},{key:"scale",value:function(t,e){return this.vexFlowCanvasContext.scale(parseFloat(t),parseFloat(e))}},{key:"resize",value:function(t,e){return this.vexFlowCanvasContext.resize(parseInt(t,10),parseInt(e,10))}},{key:"rect",value:function(t,e,n,i){return this.vexFlowCanvasContext.rect(t,e,n,i)}},{key:"fillRect",value:function(t,e,n,i){return this.vexFlowCanvasContext.fillRect(t,e,n,i)}},{key:"clearRect",value:function(t,e,n,i){return this.vexFlowCanvasContext.clearRect(t,e,n,i)}},{key:"beginPath",value:function(){return this.vexFlowCanvasContext.beginPath()}},{key:"moveTo",value:function(t,e){return this.vexFlowCanvasContext.moveTo(t,e)}},{key:"lineTo",value:function(t,e){return this.vexFlowCanvasContext.lineTo(t,e)}},{key:"bezierCurveTo",value:function(t,e,n,i,o,r){return this.vexFlowCanvasContext.bezierCurveTo(t,e,n,i,o,r)}},{key:"quadraticCurveTo",value:function(t,e,n,i){return this.vexFlowCanvasContext.quadraticCurveTo(t,e,n,i)}},{key:"arc",value:function(t,e,n,i,o,r){return this.vexFlowCanvasContext.arc(t,e,n,i,o,r)}},{key:"glow",value:function(){return this.vexFlowCanvasContext.glow()}},{key:"fill",value:function(){return this.vexFlowCanvasContext.fill()}},{key:"stroke",value:function(){return this.vexFlowCanvasContext.stroke()}},{key:"closePath",value:function(){return this.vexFlowCanvasContext.closePath()}},{key:"measureText",value:function(t){return this.vexFlowCanvasContext.measureText(t)}},{key:"fillText",value:function(t,e,n){return this.vexFlowCanvasContext.fillText(t,e,n)}},{key:"save",value:function(){return this.vexFlowCanvasContext.save()}},{key:"restore",value:function(){return this.vexFlowCanvasContext.restore()}}]),t}();function H(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var X=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.element=e,this.paper=Raphael(e),this.path="",this.pen={x:0,y:0},this.lineWidth=1,this.state={scale:{x:1,y:1},font_family:"Arial",font_size:8,font_weight:800},this.attributes={"stroke-width":.3,fill:"black",stroke:"black",font:"10pt Arial"},this.background_attributes={"stroke-width":0,fill:"white",stroke:"white",font:"10pt Arial"},this.shadow_attributes={width:0,color:"black"},this.state_stack=[]}var e,n,i;return e=t,(n=[{key:"openGroup",value:function(){}},{key:"closeGroup",value:function(){}},{key:"add",value:function(){}},{key:"setFont",value:function(t,e,n){return this.state.font_family=t,this.state.font_size=e,this.state.font_weight=n,this.attributes.font=(this.state.font_weight||"")+" "+this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this}},{key:"setRawFont",value:function(t){return this.attributes.font=t,this}},{key:"setFillStyle",value:function(t){return this.attributes.fill=t,this}},{key:"setBackgroundFillStyle",value:function(t){return this.background_attributes.fill=t,this.background_attributes.stroke=t,this}},{key:"setStrokeStyle",value:function(t){return this.attributes.stroke=t,this}},{key:"setShadowColor",value:function(t){return this.shadow_attributes.color=t,this}},{key:"setShadowBlur",value:function(t){return this.shadow_attributes.width=t,this}},{key:"setLineWidth",value:function(t){this.attributes["stroke-width"]=t,this.lineWidth=t}},{key:"setLineDash",value:function(){return this}},{key:"setLineCap",value:function(){return this}},{key:"scale",value:function(t,e){return this.state.scale={x:t,y:e},this.attributes.transform="S"+t+","+e+",0,0",this.attributes.scale=t+","+e+",0,0",this.attributes.font=this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this.background_attributes.transform="S"+t+","+e+",0,0",this.background_attributes.font=this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this}},{key:"clear",value:function(){this.paper.clear()}},{key:"resize",value:function(t,e){return this.element.style.width=t,this.paper.setSize(t,e),this}},{key:"setViewBox",value:function(t){this.paper.canvas.setAttribute("viewBox",t)}},{key:"rect",value:function(t,e,n,i){return i<0&&(e+=i,i=-i),this.paper.rect(t,e,n-.5,i-.5).attr(this.attributes).attr("fill","none").attr("stroke-width",this.lineWidth),this}},{key:"fillRect",value:function(t,e,n,i){return i<0&&(e+=i,i=-i),this.paper.rect(t,e,n-.5,i-.5).attr(this.attributes),this}},{key:"clearRect",value:function(t,e,n,i){return i<0&&(e+=i,i=-i),this.paper.rect(t,e,n-.5,i-.5).attr(this.background_attributes),this}},{key:"beginPath",value:function(){return this.path="",this.pen.x=0,this.pen.y=0,this}},{key:"moveTo",value:function(t,e){return this.path+="M"+t+","+e,this.pen.x=t,this.pen.y=e,this}},{key:"lineTo",value:function(t,e){return this.path+="L"+t+","+e,this.pen.x=t,this.pen.y=e,this}},{key:"bezierCurveTo",value:function(t,e,n,i,o,r){return this.path+="C"+t+","+e+","+n+","+i+","+o+","+r,this.pen.x=o,this.pen.y=r,this}},{key:"quadraticCurveTo",value:function(t,e,n,i){return this.path+="Q"+t+","+e+","+n+","+i,this.pen.x=n,this.pen.y=i,this}},{key:"arc",value:function(t,e,n,i,o,r){function s(t){for(;t<0;)t+=2*Math.PI;for(;t>2*Math.PI;)t-=2*Math.PI;return t}if((i=s(i))>(o=s(o))){var a=i;i=o,o=a,r=!r}var l=o-i;return l>Math.PI?(this.arcHelper(t,e,n,i,i+l/2,r),this.arcHelper(t,e,n,i+l/2,o,r)):this.arcHelper(t,e,n,i,o,r),this}},{key:"arcHelper",value:function(t,e,n,i,o,r){var s=t+n*Math.cos(i),a=e+n*Math.sin(i),l=t+n*Math.cos(o),u=e+n*Math.sin(o),c=0,h=0;r?(h=1,o-i<Math.PI&&(c=1)):o-i>Math.PI&&(c=1),this.path+="M"+s+","+a+",A"+n+","+n+",0,"+c+","+h+","+l+","+u+"M"+this.pen.x+","+this.pen.y}},{key:"glow",value:function(){var t=this.paper.set();if(this.shadow_attributes.width>0)for(var e=this.shadow_attributes,n=e.width/2,i=1;i<=n;i++)t.push(this.paper.path(this.path).attr({stroke:e.color,"stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(e.width/n*i).toFixed(3),opacity:+((e.opacity||.3)/n).toFixed(3),transform:this.attributes.transform,scale:this.attributes.scale}));return t}},{key:"fill",value:function(){var t=this.paper.path(this.path).attr(this.attributes).attr("stroke-width",0);return this.glow(t),this}},{key:"stroke",value:function(){var t=this.lineWidth*(this.state.scale.x+this.state.scale.y)/2,e=this.paper.path(this.path).attr(this.attributes).attr("fill","none").attr("stroke-width",t);return this.glow(e),this}},{key:"closePath",value:function(){return this.path+="Z",this}},{key:"measureText",value:function(t){var e=this.paper.text(0,0,t).attr(this.attributes).attr("fill","none").attr("stroke","none"),n=e.getBBox();return e.remove(),{width:n.width,height:n.height}}},{key:"fillText",value:function(t,e,n){return this.paper.text(e+this.measureText(t).width/2,n-this.state.font_size/(2.25*this.state.scale.y),t).attr(this.attributes),this}},{key:"save",value:function(){return this.state_stack.push({state:{font_family:this.state.font_family},attributes:{font:this.attributes.font,fill:this.attributes.fill,stroke:this.attributes.stroke,"stroke-width":this.attributes["stroke-width"]},shadow_attributes:{width:this.shadow_attributes.width,color:this.shadow_attributes.color}}),this}},{key:"restore",value:function(){var t=this.state_stack.pop();return this.state.font_family=t.state.font_family,this.attributes.font=t.attributes.font,this.attributes.fill=t.attributes.fill,this.attributes.stroke=t.attributes.stroke,this.attributes["stroke-width"]=t.attributes["stroke-width"],this.shadow_attributes.width=t.shadow_attributes.width,this.shadow_attributes.color=t.shadow_attributes.color,this}}])&&H(e.prototype,n),i&&H(e,i),t}();function U(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var V={path:{x:!0,y:!0,width:!0,height:!0},rect:{},text:{width:!0,height:!0}},z={"font-family":!0,"font-weight":!0,"font-style":!0,"font-size":!0};h.Merge(V.rect,z),h.Merge(V.path,z);var K=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.element=e,this.svgNS="http://www.w3.org/2000/svg";var n=this.create("svg");this.element.appendChild(n),this.svg=n,this.groups=[this.svg],this.parent=this.svg,this.path="",this.pen={x:NaN,y:NaN},this.lineWidth=1,this.state={scale:{x:1,y:1},"font-family":"Arial","font-size":"8pt","font-weight":"normal"},this.attributes={"stroke-width":.3,fill:"black",stroke:"black","stroke-dasharray":"none","font-family":"Arial","font-size":"10pt","font-weight":"normal","font-style":"normal"},this.background_attributes={"stroke-width":0,fill:"white",stroke:"white","stroke-dasharray":"none","font-family":"Arial","font-size":"10pt","font-weight":"normal","font-style":"normal"},this.shadow_attributes={width:0,color:"black"},this.state_stack=[],this.iePolyfill()}var e,n,i;return e=t,(n=[{key:"create",value:function(t){return document.createElementNS(this.svgNS,t)}},{key:"openGroup",value:function(t,e,n){var i=this.create("g");return this.groups.push(i),this.parent.appendChild(i),this.parent=i,t&&i.setAttribute("class",h.Prefix(t)),e&&i.setAttribute("id",h.Prefix(e)),n&&n.pointerBBox&&i.setAttribute("pointer-events","bounding-box"),i}},{key:"closeGroup",value:function(){this.groups.pop(),this.parent=this.groups[this.groups.length-1]}},{key:"add",value:function(t){this.parent.appendChild(t)}},{key:"iePolyfill",value:function(){"undefined"!=typeof navigator&&(this.ie=/MSIE 9/i.test(navigator.userAgent)||/MSIE 10/i.test(navigator.userAgent)||/rv:11\.0/i.test(navigator.userAgent)||/Trident/i.test(navigator.userAgent))}},{key:"setFont",value:function(t,e,n){var i=!1,o=!1,r="normal";"string"==typeof n&&(-1!==n.indexOf("italic")&&(n=n.replace(/italic/g,""),o=!0),-1!==n.indexOf("bold")&&(n=n.replace(/bold/g,""),i=!0),n=n.replace(/ /g,""));var s={"font-family":t,"font-size":e+"pt","font-weight":n=void 0===(n=i?"bold":n)||""===n?"normal":n,"font-style":r=o?"italic":r};return this.fontSize=Number(e),h.Merge(this.attributes,s),h.Merge(this.state,s),this}},{key:"setRawFont",value:function(t){var e=(t=t.trim()).split(" ");return this.attributes["font-family"]=e[1],this.state["font-family"]=e[1],this.attributes["font-size"]=e[0],this.state["font-size"]=e[0],this.fontSize=Number(e[0].match(/\d+/)),this}},{key:"setFillStyle",value:function(t){return this.attributes.fill=t,this}},{key:"setBackgroundFillStyle",value:function(t){return this.background_attributes.fill=t,this.background_attributes.stroke=t,this}},{key:"setStrokeStyle",value:function(t){return this.attributes.stroke=t,this}},{key:"setShadowColor",value:function(t){return this.shadow_attributes.color=t,this}},{key:"setShadowBlur",value:function(t){return this.shadow_attributes.width=t,this}},{key:"setLineWidth",value:function(t){this.attributes["stroke-width"]=t,this.lineWidth=t}},{key:"setLineDash",value:function(t){if("[object Array]"===Object.prototype.toString.call(t))return t=t.join(", "),this.attributes["stroke-dasharray"]=t,this;throw new h.RERR("ArgumentError","lineDash must be an array of integers.")}},{key:"setLineCap",value:function(t){return this.attributes["stroke-linecap"]=t,this}},{key:"resize",value:function(t,e){this.width=t,this.height=e,this.element.style.width=t;var n={width:t,height:e};return this.applyAttributes(this.svg,n),this}},{key:"scale",value:function(t,e){this.state.scale={x:t,y:e};var n=this.width/t,i=this.height/e;return this.setViewBox(0,0,n,i),this}},{key:"setViewBox",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(1===e.length){var i=e[0];this.svg.setAttribute("viewBox",i)}else{var o=e[0]+" "+e[1]+" "+e[2]+" "+e[3];this.svg.setAttribute("viewBox",o)}}},{key:"applyAttributes",value:function(t,e){var n=V[t.nodeName];return Object.keys(e).forEach(function(i){n&&n[i]||t.setAttributeNS(null,i,e[i])}),t}},{key:"clear",value:function(){for(;this.svg.lastChild;)this.svg.removeChild(this.svg.lastChild);this.scale(this.state.scale.x,this.state.scale.y)}},{key:"rect",value:function(t,e,n,i,o){i<0&&(e+=i,i*=-1);var r=this.create("rect");return void 0===o&&(o={fill:"none","stroke-width":this.lineWidth,stroke:"black"}),h.Merge(o,{x:t,y:e,width:n,height:i}),this.applyAttributes(r,o),this.add(r),this}},{key:"fillRect",value:function(t,e,n,i){return i<0&&(e+=i,i*=-1),this.rect(t,e,n,i,this.attributes),this}},{key:"clearRect",value:function(t,e,n,i){return this.rect(t,e,n,i,this.background_attributes),this}},{key:"beginPath",value:function(){return this.path="",this.pen.x=NaN,this.pen.y=NaN,this}},{key:"moveTo",value:function(t,e){return this.path+="M"+t+" "+e,this.pen.x=t,this.pen.y=e,this}},{key:"lineTo",value:function(t,e){return this.path+="L"+t+" "+e,this.pen.x=t,this.pen.y=e,this}},{key:"bezierCurveTo",value:function(t,e,n,i,o,r){return this.path+="C"+t+" "+e+","+n+" "+i+","+o+" "+r,this.pen.x=o,this.pen.y=r,this}},{key:"quadraticCurveTo",value:function(t,e,n,i){return this.path+="Q"+t+" "+e+","+n+" "+i,this.pen.x=n,this.pen.y=i,this}},{key:"arc",value:function(t,e,n,i,o,r){function s(t){for(;t<0;)t+=2*Math.PI;for(;t>2*Math.PI;)t-=2*Math.PI;return t}if((i=s(i))>(o=s(o))){var a=i;i=o,o=a,r=!r}var l=o-i;return l>Math.PI?(this.arcHelper(t,e,n,i,i+l/2,r),this.arcHelper(t,e,n,i+l/2,o,r)):this.arcHelper(t,e,n,i,o,r),this}},{key:"arcHelper",value:function(t,e,n,i,o,r){var s=t+n*Math.cos(i),a=e+n*Math.sin(i),l=t+n*Math.cos(o),u=e+n*Math.sin(o),c=0,h=0;r?(h=1,o-i<Math.PI&&(c=1)):o-i>Math.PI&&(c=1),this.path+="M"+s+" "+a+" A"+n+" "+n+" 0 "+c+" "+h+" "+l+" "+u,isNaN(this.pen.x)||isNaN(this.pen.y)||(this.peth+="M"+this.pen.x+" "+this.pen.y)}},{key:"closePath",value:function(){return this.path+="Z",this}},{key:"glow",value:function(){if(this.shadow_attributes.width>0)for(var t=this.shadow_attributes,e=t.width/2,n=1;n<=e;n++){var i={stroke:t.color,"stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(.4*t.width/e*n).toFixed(3),opacity:+((t.opacity||.3)/e).toFixed(3)},o=this.create("path");i.d=this.path,this.applyAttributes(o,i),this.add(o)}return this}},{key:"fill",value:function(t){this.glow();var e=this.create("path");return void 0===t&&(t={},h.Merge(t,this.attributes),t.stroke="none"),t.d=this.path,this.applyAttributes(e,t),this.add(e),this}},{key:"stroke",value:function(){this.glow();var t=this.create("path"),e={};return h.Merge(e,this.attributes),e.fill="none",e["stroke-width"]=this.lineWidth,e.d=this.path,this.applyAttributes(t,e),this.add(t),this}},{key:"measureText",value:function(t){var e=this.create("text");if("function"!=typeof e.getBBox)return{x:0,y:0,width:0,height:0};e.textContent=t,this.applyAttributes(e,this.attributes),this.svg.appendChild(e);var n=e.getBBox();return this.ie&&""!==t&&"italic"===this.attributes["font-style"]&&(n=this.ieMeasureTextFix(n,t)),this.svg.removeChild(e),n}},{key:"ieMeasureTextFix",value:function(t){var e=1.196*Number(this.fontSize)+1.9598,n=t.width-e,i=t.height-1.5;return{x:t.x,y:t.y,width:n,height:i}}},{key:"fillText",value:function(t,e,n){if(t&&!(t.length<=0)){var i={};h.Merge(i,this.attributes),i.stroke="none",i.x=e,i.y=n;var o=this.create("text");o.textContent=t,this.applyAttributes(o,i),this.add(o)}}},{key:"save",value:function(){return this.state_stack.push({state:{"font-family":this.state["font-family"],"font-weight":this.state["font-weight"],"font-style":this.state["font-style"],"font-size":this.state["font-size"]},attributes:{"font-family":this.attributes["font-family"],"font-weight":this.attributes["font-weight"],"font-style":this.attributes["font-style"],"font-size":this.attributes["font-size"],fill:this.attributes.fill,stroke:this.attributes.stroke,"stroke-width":this.attributes["stroke-width"],"stroke-dasharray":this.attributes["stroke-dasharray"]},shadow_attributes:{width:this.shadow_attributes.width,color:this.shadow_attributes.color},lineWidth:this.lineWidth}),this}},{key:"restore",value:function(){var t=this.state_stack.pop();return this.state["font-family"]=t.state["font-family"],this.state["font-weight"]=t.state["font-weight"],this.state["font-style"]=t.state["font-style"],this.state["font-size"]=t.state["font-size"],this.attributes["font-family"]=t.attributes["font-family"],this.attributes["font-weight"]=t.attributes["font-weight"],this.attributes["font-style"]=t.attributes["font-style"],this.attributes["font-size"]=t.attributes["font-size"],this.attributes.fill=t.attributes.fill,this.attributes.stroke=t.attributes.stroke,this.attributes["stroke-width"]=t.attributes["stroke-width"],this.attributes["stroke-dasharray"]=t.attributes["stroke-dasharray"],this.shadow_attributes.width=t.shadow_attributes.width,this.shadow_attributes.color=t.shadow_attributes.color,this.lineWidth=t.lineWidth,this}}])&&U(e.prototype,n),i&&U(e,i),t}();function J(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function q(t,e,n){return e&&J(t.prototype,e),n&&J(t,n),t}var Q=null,Z=function(){function t(e,n){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.elementId=e,!this.elementId)throw new h.RERR("BadArgument","Invalid id for renderer.");if(this.element=document.getElementById(e),this.element||(this.element=e),this.ctx=null,this.paper=null,this.backend=n,this.backend===t.Backends.CANVAS){if(!this.element.getContext)throw new h.RERR("BadElement","Can't get canvas context from element: ".concat(e));this.ctx=t.bolsterCanvasContext(this.element.getContext("2d"))}else if(this.backend===t.Backends.RAPHAEL)this.ctx=new X(this.element);else{if(this.backend!==t.Backends.SVG)throw new h.RERR("InvalidBackend","No support for backend: ".concat(this.backend));this.ctx=new K(this.element)}}return q(t,null,[{key:"buildContext",value:function(e,n,i,o,r){var s=new t(e,n);i&&o&&s.resize(i,o),r||(r="#FFF");var a=s.getContext();return a.setBackgroundFillStyle(r),t.lastContext=a,a}},{key:"getCanvasContext",value:function(e,n,i,o){return t.buildContext(e,t.Backends.CANVAS,n,i,o)}},{key:"getRaphaelContext",value:function(e,n,i,o){return t.buildContext(e,t.Backends.RAPHAEL,n,i,o)}},{key:"getSVGContext",value:function(e,n,i,o){return t.buildContext(e,t.Backends.SVG,n,i,o)}},{key:"bolsterCanvasContext",value:function(e){if(t.USE_CANVAS_PROXY)return new W(e);return e.vexFlowCanvasContext=e,["clear","setFont","setRawFont","setFillStyle","setBackgroundFillStyle","setStrokeStyle","setShadowColor","setShadowBlur","setLineWidth","setLineCap","setLineDash","openGroup","closeGroup","getGroup"].forEach(function(t){e[t]=e[t]||W.prototype[t]}),e}},{key:"drawDashedLine",value:function(t,e,n,i,o,r){t.beginPath();var s=i-e,a=o-n,l=Math.atan2(a,s),u=e,c=n;t.moveTo(e,n);for(var h=0,f=!0;!(s<0?u<=i:u>=i)||!(a<0?c<=o:c>=o);){var b=r[h++%r.length],p=u+Math.cos(l)*b;u=s<0?Math.max(i,p):Math.min(i,p);var y=c+Math.sin(l)*b;c=a<0?Math.max(o,y):Math.min(o,y),f?t.lineTo(u,c):t.moveTo(u,c),f=!f}t.closePath(),t.stroke()}},{key:"Backends",get:function(){return{CANVAS:1,RAPHAEL:2,SVG:3,VML:4}}},{key:"LineEndType",get:function(){return{NONE:1,UP:2,DOWN:3}}},{key:"USE_CANVAS_PROXY",get:function(){return!1}},{key:"lastContext",get:function(){return Q},set:function(t){Q=t}}]),q(t,[{key:"resize",value:function(e,n){if(this.backend===t.Backends.CANVAS){if(!this.element.getContext)throw new h.RERR("BadElement","Can't get canvas context from element: ".concat(this.elementId));var i=window.devicePixelRatio||1;this.element.width=e*i,this.element.height=n*i,this.element.style.width=e+"px",this.element.style.height=n+"px",this.ctx=t.bolsterCanvasContext(this.element.getContext("2d")),this.ctx.scale(i,i)}else this.ctx.resize(e,n);return this}},{key:"getContext",value:function(){return this.ctx}}]),t}();function $(t){return($="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function tt(t,e){return!e||"object"!==$(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function et(t){return(et=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function nt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function it(t,e,n){return e&&nt(t.prototype,e),n&&nt(t,n),t}function ot(t,e){return(ot=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var rt=function(t){function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=tt(this,et(e).call(this))).setAttribute("type","Stem"),t.x_begin=n.x_begin||0,t.x_end=n.x_end||0,t.y_top=n.y_top||0,t.y_bottom=n.y_bottom||0,t.stem_extension=n.stem_extension||0,t.stem_direction=n.stem_direction||0,t.hide=n.hide||!1,t.isStemlet=n.isStemlet||!1,t.stemletHeight=n.stemletHeight||0,t.stem_up_y_offset=n.stem_up_y_offset||0,t.stem_down_y_offset=n.stem_down_y_offset||0,t.renderHeightAdjustment=0,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ot(t,e)}(e,k),it(e,null,[{key:"CATEGORY",get:function(){return"stem"}},{key:"UP",get:function(){return 1}},{key:"DOWN",get:function(){return-1}},{key:"WIDTH",get:function(){return I.STEM_WIDTH}},{key:"HEIGHT",get:function(){return I.STEM_HEIGHT}}]),it(e,[{key:"setNoteHeadXBounds",value:function(t,e){return this.x_begin=t,this.x_end=e,this}},{key:"setDirection",value:function(t){this.stem_direction=t}},{key:"setExtension",value:function(t){this.stem_extension=t}},{key:"getExtension",value:function(){return this.stem_extension}},{key:"setYBounds",value:function(t,e){this.y_top=t,this.y_bottom=e}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getHeight",value:function(){var t=this.stem_direction===e.UP?this.stem_up_y_offset:this.stem_down_y_offset;return(this.y_bottom-this.y_top)*this.stem_direction+(e.HEIGHT-t+this.stem_extension)*this.stem_direction}},{key:"getBoundingBox",value:function(){throw new h.RERR("NotImplemented","getBoundingBox() not implemented.")}},{key:"getExtents",value:function(){var t=this.stem_direction===e.UP,n=[this.y_top,this.y_bottom],i=e.HEIGHT+this.stem_extension,o=(t?Math.min:Math.max).apply(void 0,n),r=(t?Math.max:Math.min).apply(void 0,n);return{topY:o+i*-this.stem_direction,baseY:r}}},{key:"setVisibility",value:function(t){return this.hide=!t,this}},{key:"setStemlet",value:function(t,e){return this.isStemlet=t,this.stemletHeight=e,this}},{key:"draw",value:function(){if(this.setRendered(),!this.hide){var t,n,i=this.checkContext(),o=this.stem_direction;o===e.DOWN?(t=this.x_begin,n=this.y_top+this.stem_down_y_offset):(t=this.x_end,n=this.y_bottom-this.stem_up_y_offset);var r=this.getHeight();!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];rt.DEBUG&&h.L("Vex.Flow.Stem",e)}("Rendering stem - ","Top Y: ",this.y_top,"Bottom Y: ",this.y_bottom);var s=this.isStemlet?r-this.stemletHeight*this.stem_direction:0;i.save(),this.applyStyle(i),i.beginPath(),i.setLineWidth(e.WIDTH),i.moveTo(t,n-s),i.lineTo(t,n-r-this.renderHeightAdjustment*o),i.stroke(),this.restoreStyle(i),i.restore()}}}]),e}();function st(t){return(st="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function at(t,e){return!e||"object"!==st(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function lt(t){return(lt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ut(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ct(t,e,n){return e&&ut(t.prototype,e),n&&ut(t,n),t}function ht(t,e){return(ht=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ft=function(t){function e(t,n){var i;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=at(this,lt(e).call(this))).setAttribute("type","Tuplet"),!t||!t.length)throw new h.RuntimeError("BadArguments","No notes provided for tuplet.");return i.options=h.Merge({},n),i.notes=t,i.num_notes="num_notes"in i.options?i.options.num_notes:t.length,i.options.beats_occupied&&i.beatsOccupiedDeprecationWarning(),i.notes_occupied=i.options.notes_occupied||i.options.beats_occupied||2,"bracketed"in i.options?i.bracketed=i.options.bracketed:i.bracketed=t.some(function(t){return null===t.beam}),i.ratioed="ratioed"in i.options?i.options.ratioed:Math.abs(i.notes_occupied-i.num_notes)>1,i.point=28,i.y_pos=16,i.x_pos=100,i.width=200,i.location=i.options.location||e.LOCATION_TOP,qi.AlignRestsToNotes(t,!0,!0),i.resolveGlyphs(),i.attach(),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ht(t,e)}(e,k),ct(e,null,[{key:"LOCATION_TOP",get:function(){return 1}},{key:"LOCATION_BOTTOM",get:function(){return-1}},{key:"NESTING_OFFSET",get:function(){return 15}}]),ct(e,[{key:"attach",value:function(){for(var t=0;t<this.notes.length;t++){this.notes[t].setTuplet(this)}}},{key:"detach",value:function(){for(var t=0;t<this.notes.length;t++){this.notes[t].resetTuplet(this)}}},{key:"setBracketed",value:function(t){return this.bracketed=!!t,this}},{key:"setRatioed",value:function(t){return this.ratioed=!!t,this}},{key:"setTupletLocation",value:function(t){if(t){if(t!==e.LOCATION_TOP&&t!==e.LOCATION_BOTTOM)throw new h.RERR("BadArgument","Invalid tuplet location: "+t)}else t=e.LOCATION_TOP;return this.location=t,this}},{key:"getNotes",value:function(){return this.notes}},{key:"getNoteCount",value:function(){return this.num_notes}},{key:"beatsOccupiedDeprecationWarning",value:function(){var t=["beats_occupied has been deprecated as an ","option for tuplets. Please use notes_occupied ","instead. Calls to getBeatsOccupied and ","setBeatsOccupied should now be routed to ","getNotesOccupied and setNotesOccupied instead"].join("");console&&console.warn?console.warn(t):console&&console.log(t)}},{key:"getBeatsOccupied",value:function(){return this.beatsOccupiedDeprecationWarning(),this.getNotesOccupied()}},{key:"setBeatsOccupied",value:function(t){return this.beatsOccupiedDeprecationWarning(),this.setNotesOccupied(t)}},{key:"getNotesOccupied",value:function(){return this.notes_occupied}},{key:"setNotesOccupied",value:function(t){this.detach(),this.notes_occupied=t,this.resolveGlyphs(),this.attach()}},{key:"resolveGlyphs",value:function(){this.num_glyphs=[];for(var t=this.num_notes;t>=1;)this.num_glyphs.push(new j("v"+t%10,this.point)),t=parseInt(t/10,10);for(this.denom_glyphs=[],t=this.notes_occupied;t>=1;)this.denom_glyphs.push(new j("v"+t%10,this.point)),t=parseInt(t/10,10)}},{key:"getNestedTupletCount",value:function(){var t=this.location,e=this.notes[0],n=o(e,t),i=o(e,t);function o(t,e){return t.tupletStack.filter(function(t){return t.location===e}).length}return this.notes.forEach(function(e){var r=o(e,t);n=r>n?r:n,i=r<i?r:i}),n-i}},{key:"getYPosition",value:function(){var t,n=this.getNestedTupletCount()*e.NESTING_OFFSET*-this.location,i=this.options.y_offset||0,o=this.notes[0];if(this.location===e.LOCATION_TOP){t=o.getStave().getYForLine(0)-15;for(var r=0;r<this.notes.length;++r){var s=this.notes[r].getStemDirection()===rt.UP?this.notes[r].getStemExtents().topY-10:this.notes[r].getStemExtents().baseY-20;s<t&&(t=s)}}else{t=o.getStave().getYForLine(4)+20;for(var a=0;a<this.notes.length;++a){var l=this.notes[a].getStemDirection()===rt.UP?this.notes[a].getStemExtents().baseY+20:this.notes[a].getStemExtents().topY+10;l>t&&(t=l)}}return t+n+i}},{key:"draw",value:function(){var t=this;this.checkContext(),this.setRendered();var n=this.notes[0],i=this.notes[this.notes.length-1];this.bracketed?(this.x_pos=n.getTieLeftX()-5,this.width=i.getTieRightX()-this.x_pos+5):(this.x_pos=n.getStemX(),this.width=i.getStemX()-this.x_pos),this.y_pos=this.getYPosition();var o=function(t,e){return t+e.getMetrics().width},r=this.num_glyphs.reduce(o,0);this.ratioed&&(r=this.denom_glyphs.reduce(o,r),r+=.32*this.point);var s=this.x_pos+this.width/2-r/2;if(this.bracketed){var a=this.width/2-r/2-5;a>0&&(this.context.fillRect(this.x_pos,this.y_pos,a,1),this.context.fillRect(this.x_pos+this.width/2+r/2+5,this.y_pos,a,1),this.context.fillRect(this.x_pos,this.y_pos+(this.location===e.LOCATION_BOTTOM),1,10*this.location),this.context.fillRect(this.x_pos+this.width,this.y_pos+(this.location===e.LOCATION_BOTTOM),1,10*this.location))}var l=0;if(this.num_glyphs.forEach(function(e){e.render(t.context,s+l,t.y_pos+t.point/3-2),l+=e.getMetrics().width}),this.ratioed){var u=s+l+.16*this.point,c=.06*this.point;this.context.beginPath(),this.context.arc(u,this.y_pos-.08*this.point,c,0,2*Math.PI,!0),this.context.closePath(),this.context.fill(),this.context.beginPath(),this.context.arc(u,this.y_pos+.12*this.point,c,0,2*Math.PI,!0),this.context.closePath(),this.context.fill(),l+=.32*this.point,this.denom_glyphs.forEach(function(e){e.render(t.context,s+l,t.y_pos+t.point/3-2),l+=e.getMetrics().width})}}}]),e}();function bt(t){return(bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function pt(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function yt(t){return(yt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function dt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function vt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function gt(t,e,n){return e&&vt(t.prototype,e),n&&vt(t,n),t}function mt(t,e){return(mt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function _t(t){var e=0;return t.forEach(function(t){t.keyProps&&t.keyProps.forEach(function(t){e+=t.line-3})}),e>=0?rt.DOWN:rt.UP}var xt=function(t){function e(t,n){var i,o,r,s,a;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,(i=!(r=yt(e).call(this))||"object"!==bt(r)&&"function"!=typeof r?dt(o):r).setAttribute("type","Beam"),!t||t===[])throw new h.RuntimeError("BadArguments","No notes provided for beam.");if(1===t.length)throw new h.RuntimeError("BadArguments","Too few notes for beam.");if(i.ticks=t[0].getIntrinsicTicks(),i.ticks>=I.durationToTicks("4"))throw new h.RuntimeError("BadArguments","Beams can only be applied to notes shorter than a quarter note.");for(i.stem_direction=rt.UP,s=0;s<t.length;++s)if((a=t[s]).hasStem()){i.stem_direction=a.getStemDirection();break}var l=i.stem_direction;if(n&&"stavenotes"===t[0].getCategory())l=_t(t);else if(n&&"tabnotes"===t[0].getCategory()){l=t.reduce(function(t,e){return t+e.stem_direction},0)>-1?rt.UP:rt.DOWN}for(s=0;s<t.length;++s)a=t[s],n&&(a.setStemDirection(l),i.stem_direction=l),a.setBeam(dt(i));return i.postFormatted=!1,i.notes=t,i.beam_count=i.getBeamCount(),i.break_on_indices=[],i.render_options={beam_width:5,max_slope:.25,min_slope:-.25,slope_iterations:20,slope_cost:100,show_stemlets:!1,stemlet_extension:7,partial_beam_length:10,flat_beams:!1,min_flat_beam_offset:15},i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&mt(t,e)}(e,k),gt(e,null,[{key:"getDefaultBeamGroups",value:function(t){t&&"c"!==t||(t="4/4");var e={"1/2":["1/2"],"2/2":["1/2"],"3/2":["1/2"],"4/2":["1/2"],"1/4":["1/4"],"2/4":["1/4"],"3/4":["1/4"],"4/4":["1/4"],"1/8":["1/8"],"2/8":["2/8"],"3/8":["3/8"],"4/8":["2/8"],"1/16":["1/16"],"2/16":["2/16"],"3/16":["3/16"],"4/16":["2/16"]}[t];if(void 0!==e)return e.map(function(t){return(new y).parse(t)});var n=parseInt(t.split("/")[0],10),i=parseInt(t.split("/")[1],10);return n%3==0?[new y(3,i)]:i>4?[new y(2,i)]:i<=4?[new y(1,i)]:[new y(1,4)]}},{key:"applyAndGetBeams",value:function(t,n,i){return e.generateBeams(t.getTickables(),{groups:i,stem_direction:n})}},{key:"generateBeams",value:function(t,n){n||(n={}),n.groups&&n.groups.length||(n.groups=[new y(2,8)]);var i,o,r=n.groups.map(function(t){if(!t.multiply)throw new h.RuntimeError("InvalidBeamGroups","The beam groups must be an array of Vex.Flow.Fractions");return t.clone().multiply(I.RESOLUTION,1)}),s=0,a=[],l=[];function u(){r.length-1>s?s+=1:s=0}i=[],t.forEach(function(t){if(i=[],t.shouldIgnoreTicks())return a.push(l),void(l=i);l.push(t);var e=r[s].clone(),n=l.reduce(function(t,e){return e.getTicks().clone().add(t)},new y(0,1)),o=I.durationToNumber(t.duration)<8;o&&t.tuplet&&(e.numerator*=2),n.greaterThan(e)?(o||i.push(l.pop()),a.push(l),l=i,u()):n.equals(e)&&(a.push(l),l=i,u())}),l.length>0&&a.push(l),o=[],a.forEach(function(t){var e=[];t.forEach(function(t,i,r){var s=0===i||i===r.length-1,a=r[i-1],l=!n.beam_rests&&t.isRest(),u=n.beam_rests&&n.beam_middle_only&&t.isRest()&&s,c=!1;if(n.maintain_stem_directions&&a&&!t.isRest()&&!a.isRest()){var h=a.getStemDirection();c=t.getStemDirection()!==h}var f=parseInt(t.duration,10)<8;l||u||c||f?(e.length>0&&o.push(e),e=c?[t]:[]):e.push(t)}),e.length>0&&o.push(e)}),(a=o).forEach(function(t){var e;if(n.maintain_stem_directions){var i=function(t){for(var e=0;e<t.length;e++){var n=t[e];if(!n.isRest())return n}return!1}(t);e=i?i.getStemDirection():rt.UP}else e=n.stem_direction?n.stem_direction:_t(t);!function(t,e){t.forEach(function(t){t.setStemDirection(e)})}(t,e)});var c,f=a.filter(function(t){if(t.length>1){var e=!0;return t.forEach(function(t){t.getIntrinsicTicks()>=I.durationToTicks("4")&&(e=!1)}),e}return!1}),b=(c=[],a.forEach(function(t){var e=null;t.forEach(function(t){t.tuplet&&e!==t.tuplet&&(e=t.tuplet,c.push(e))})}),c),p=[];return f.forEach(function(t){var i=new e(t);n.show_stemlets&&(i.render_options.show_stemlets=!0),n.secondary_breaks&&(i.render_options.secondary_break_ticks=I.durationToTicks(n.secondary_breaks)),!0===n.flat_beams&&(i.render_options.flat_beams=!0,i.render_options.flat_beam_offset=n.flat_beam_offset),p.push(i)}),b.forEach(function(t){var e=t.notes[0].stem_direction===rt.DOWN?ft.LOCATION_BOTTOM:ft.LOCATION_TOP;t.setTupletLocation(e);for(var n=!1,i=0;i<t.notes.length;i++){if(null===t.notes[i].beam){n=!0;break}}t.setBracketed(n)}),p}}]),gt(e,[{key:"getNotes",value:function(){return this.notes}},{key:"getBeamCount",value:function(){return this.notes.map(function(t){return t.getGlyph().beam_count}).reduce(function(t,e){return e>t?e:t})}},{key:"breakSecondaryAt",value:function(t){return this.break_on_indices=t,this}},{key:"getSlopeY",value:function(t,e,n,i){return n+(t-e)*i}},{key:"calculateSlope",value:function(){for(var t=this.notes,e=this.stem_direction,n=this.render_options,i=n.max_slope,o=n.min_slope,r=n.slope_iterations,s=n.slope_cost,a=t[0],l=function(t,e){var n=t.getStemExtents().topY,i=t.getStemX();return(e.getStemExtents().topY-n)/(e.getStemX()-i)}(a,t[t.length-1]),u=(i-o)/r,c=Number.MAX_VALUE,h=0,f=0,b=o;b<=i;b+=u){for(var p=0,y=0,d=1;d<t.length;++d){var v=t[d],g=this.getSlopeY(v.getStemX(),a.getStemX(),a.getStemExtents().topY,b)+y,m=v.getStemExtents().topY;if(m*e<g*e){var _=Math.abs(m-g);y+=_*-e,p+=_*d}else p+=(m-g)*e}var x=l/2,w=s*Math.abs(x-b)+Math.abs(p);w<c&&(c=w,h=b,f=y)}this.slope=h,this.y_shift=f}},{key:"calculateFlatSlope",value:function(){for(var t=this.notes,e=this.stem_direction,n=this.render_options,i=n.beam_width,o=n.min_flat_beam_offset,r=n.flat_beam_offset,s=0,a=0,l=0,u=0,c=0;c<t.length;c++){var h=t[c],f=h.getStemExtents().topY;s+=f,e===rt.DOWN&&u<f?(u=f,a=Math.max.apply(Math,pt(h.getYs())),l=h.getBeamCount()):e===rt.UP&&(0===u||u>f)&&(u=f,a=Math.min.apply(Math,pt(h.getYs())),l=h.getBeamCount())}var b=s/t.length,p=o+l*(1.5*i),y=a+p*-e;e===rt.DOWN&&b<y?b=a+p:e===rt.UP&&b>y&&(b=a-p),r?e===rt.DOWN&&b>r?this.render_options.flat_beam_offset=b:e===rt.UP&&b<r&&(this.render_options.flat_beam_offset=b):this.render_options.flat_beam_offset=b,this.slope=0,this.y_shift=0}},{key:"getBeamYToDraw",value:function(){var t=this.notes[0].getStemExtents().topY;return this.render_options.flat_beams&&this.render_options.flat_beam_offset&&(t=this.render_options.flat_beam_offset),t}},{key:"applyStemExtensions",value:function(){for(var t=this.notes,e=this.slope,n=this.y_shift,i=this.stem_direction,o=this.beam_count,r=this.render_options,s=r.show_stemlets,a=r.stemlet_extension,l=r.beam_width,u=t[0],c=this.getBeamYToDraw(),h=u.getStemX(),f=0;f<t.length;++f){var b=t[f],p=b.getStemX(),y=b.getStemExtents().topY,d=this.getSlopeY(p,h,c,e)+n,v=b.getStem().getExtension(),g=i===rt.UP?y-d:d-y;if(b.stem.setExtension(v+g),b.stem.renderHeightAdjustment=-rt.WIDTH/2,b.isRest()&&s){var m=(o-1)*l*1.5+l;b.stem.setVisibility(!0).setStemlet(!0,m+a)}}}},{key:"getBeamLines",value:function(t){for(var e=[],n=!1,i=null,o=this.render_options.partial_beam_length,r=!1,s=0,a=0;a<this.notes.length;++a){var l=this.notes[a];s+=l.ticks.value();var u=!1;parseInt(t,10)>=8&&(u=-1!==this.break_on_indices.indexOf(a),this.render_options.secondary_break_ticks&&s>=this.render_options.secondary_break_ticks&&(s=0,u=!0));var c=l.getIntrinsicTicks()<I.durationToTicks(t),h=l.getStemX()-rt.WIDTH/2,f=this.notes[a+1],b=f&&f.getIntrinsicTicks()<I.durationToTicks(t);c?n?((i=e[e.length-1]).end=h,u&&(n=!1,f&&!b&&null===i.end&&(i.end=i.start-o))):(i={start:h,end:null},n=!0,b?u&&(i.end=i.start-o,n=!1):i.end=(r||0===a)&&f?i.start+o:i.start-o,e.push(i)):n=!1,r=u}var p=e[e.length-1];return p&&null===p.end&&(p.end=p.start-o),e}},{key:"drawStems",value:function(){var t=this;this.notes.forEach(function(e){e.getStem()&&e.getStem().setContext(t.context).draw()},this)}},{key:"drawBeamLines",value:function(){this.checkContext();for(var t=["4","8","16","32","64"],e=this.notes[0],n=this.getBeamYToDraw(),i=e.getStemX(),o=this.render_options.beam_width*this.stem_direction,r=0;r<t.length;++r){for(var s=t[r],a=this.getBeamLines(s),l=0;l<a.length;++l){var u=a[l],c=u.start,h=this.getSlopeY(c,i,n,this.slope),f=u.end,b=this.getSlopeY(f,i,n,this.slope);this.context.beginPath(),this.context.moveTo(c,h),this.context.lineTo(c,h+o),this.context.lineTo(f+1,b+o),this.context.lineTo(f+1,b),this.context.closePath(),this.context.fill()}n+=1.5*o}}},{key:"preFormat",value:function(){return this}},{key:"postFormat",value:function(){this.postFormatted||("tabnotes"===this.notes[0].getCategory()||this.render_options.flat_beams?this.calculateFlatSlope():this.calculateSlope(),this.applyStemExtensions(),this.postFormatted=!0)}},{key:"draw",value:function(){this.checkContext(),this.setRendered(),this.unbeamable||(this.postFormatted||this.postFormat(),this.drawStems(),this.applyStyle(),this.drawBeamLines(),this.restoreStyle())}}]),e}();function wt(t){return(wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function kt(t,e){return!e||"object"!==wt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function St(t){return(St=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Tt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Et(t,e,n){return e&&Tt(t.prototype,e),n&&Tt(t,n),t}function Ot(t,e){return(Ot=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Rt=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=kt(this,St(e).call(this))).setAttribute("type","Voice"),"string"==typeof t){var i=t.match(/(\d+)\/(\d+)/);i&&(t={num_beats:i[1],beat_value:i[2],resolution:I.RESOLUTION})}return n.time=h.Merge({num_beats:4,beat_value:4,resolution:I.RESOLUTION},t),n.totalTicks=new y(n.time.num_beats*(n.time.resolution/n.time.beat_value),1),n.resolutionMultiplier=1,n.tickables=[],n.ticksUsed=new y(0,1),n.smallestTickCount=n.totalTicks.clone(),n.largestTickWidth=0,n.stave=null,n.mode=e.Mode.STRICT,n.voiceGroup=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ot(t,e)}(e,k),Et(e,null,[{key:"Mode",get:function(){return{STRICT:1,SOFT:2,FULL:3}}}]),Et(e,[{key:"getTotalTicks",value:function(){return this.totalTicks}},{key:"getTicksUsed",value:function(){return this.ticksUsed}},{key:"getLargestTickWidth",value:function(){return this.largestTickWidth}},{key:"getSmallestTickCount",value:function(){return this.smallestTickCount}},{key:"getTickables",value:function(){return this.tickables}},{key:"getMode",value:function(){return this.mode}},{key:"setMode",value:function(t){return this.mode=t,this}},{key:"getResolutionMultiplier",value:function(){return this.resolutionMultiplier}},{key:"getActualResolution",value:function(){return this.resolutionMultiplier*this.time.resolution}},{key:"setStave",value:function(t){return this.stave=t,this.boundingBox=null,this}},{key:"getBoundingBox",value:function(){var t,e,n,i;if(!this.boundingBox){if(!this.stave)throw new h.RERR("NoStave","Can't get bounding box without stave.");for(t=this.stave,e=null,i=0;i<this.tickables.length;++i)this.tickables[i].setStave(t),(n=this.tickables[i].getBoundingBox())&&(e=e?e.mergeWith(n):n);this.boundingBox=e}return this.boundingBox}},{key:"getVoiceGroup",value:function(){if(!this.voiceGroup)throw new h.RERR("NoVoiceGroup","No voice group for voice.");return this.voiceGroup}},{key:"setVoiceGroup",value:function(t){return this.voiceGroup=t,this}},{key:"setStrict",value:function(t){return this.mode=t?e.Mode.STRICT:e.Mode.SOFT,this}},{key:"isComplete",value:function(){return this.mode!==e.Mode.STRICT&&this.mode!==e.Mode.FULL||this.ticksUsed.equals(this.totalTicks)}},{key:"addTickable",value:function(t){if(!t.shouldIgnoreTicks()){var n=t.getTicks();if(this.ticksUsed.add(n),(this.mode===e.Mode.STRICT||this.mode===e.Mode.FULL)&&this.ticksUsed.greaterThan(this.totalTicks))throw this.ticksUsed.subtract(n),new h.RERR("BadArgument","Too many ticks.");n.lessThan(this.smallestTickCount)&&(this.smallestTickCount=n.clone()),this.resolutionMultiplier=this.ticksUsed.denominator,this.totalTicks.add(0,this.ticksUsed.denominator)}return this.tickables.push(t),t.setVoice(this),this}},{key:"addTickables",value:function(t){for(var e=0;e<t.length;++e)this.addTickable(t[e]);return this}},{key:"preFormat",value:function(){var t=this;return this.preFormatted?this:(this.tickables.forEach(function(e){e.getStave()||e.setStave(t.stave)}),this.preFormatted=!0,this)}},{key:"draw",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.context,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.stave;this.setRendered();for(var n=null,i=0;i<this.tickables.length;++i){var o=this.tickables[i];if(e&&o.setStave(e),!o.getStave())throw new h.RuntimeError("MissingStave","The voice cannot draw tickables without staves.");if(0===i&&(n=o.getBoundingBox()),i>0&&n){var r=o.getBoundingBox();r&&n.mergeWith(r)}o.setContext(t),o.draw()}this.boundingBox=n}}]),e}();function Pt(t){return(Pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ct(t,e){return!e||"object"!==Pt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Nt(t){return(Nt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function At(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Lt(t,e,n){return e&&At(t.prototype,e),n&&At(t,n),t}function Mt(t,e){return(Mt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ft(t,e,n,i,o){if(e!==Bt.type.BOLD_DOUBLE_LEFT&&e!==Bt.type.BOLD_DOUBLE_RIGHT)throw new h.RERR("InvalidConnector","A REPEAT_BEGIN or REPEAT_END type must be provided.");var r=3,s=3.5;e===Bt.type.BOLD_DOUBLE_RIGHT&&(r=-5,s=3),t.fillRect(n+r,i,1,o-i),t.fillRect(n-2,i,s,o-i)}var Bt=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=Ct(this,Nt(e).call(this))).setAttribute("type","StaveConnector"),i.thickness=I.STAVE_LINE_THICKNESS,i.width=3,i.top_stave=t,i.bottom_stave=n,i.type=e.type.DOUBLE,i.font={family:"times",size:16,weight:"normal"},i.x_shift=0,i.texts=[],i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Mt(t,e)}(e,k),Lt(e,null,[{key:"type",get:function(){return{SINGLE_RIGHT:0,SINGLE_LEFT:1,SINGLE:1,DOUBLE:2,BRACE:3,BRACKET:4,BOLD_DOUBLE_LEFT:5,BOLD_DOUBLE_RIGHT:6,THIN_DOUBLE:7,NONE:8}}},{key:"typeString",get:function(){return{singleRight:e.type.SINGLE_RIGHT,singleLeft:e.type.SINGLE_LEFT,single:e.type.SINGLE,double:e.type.DOUBLE,brace:e.type.BRACE,bracket:e.type.BRACKET,boldDoubleLeft:e.type.BOLD_DOUBLE_LEFT,boldDoubleRight:e.type.BOLD_DOUBLE_RIGHT,thinDouble:e.type.THIN_DOUBLE,none:e.type.NONE}}}]),Lt(e,[{key:"setType",value:function(t){return(t="string"==typeof t?e.typeString[t]:t)>=e.type.SINGLE_RIGHT&&t<=e.type.NONE&&(this.type=t),this}},{key:"setText",value:function(t,e){return this.texts.push({content:t,options:h.Merge({shift_x:0,shift_y:0},e)}),this}},{key:"setFont",value:function(t){h.Merge(this.font,t)}},{key:"setXShift",value:function(t){if("number"!=typeof t)throw h.RERR("InvalidType","x_shift must be a Number");return this.x_shift=t,this}},{key:"draw",value:function(){var t=this.checkContext();this.setRendered();var n=this.top_stave.getYForLine(0),i=this.bottom_stave.getYForLine(this.bottom_stave.getNumLines()-1)+this.thickness,o=this.width,r=this.top_stave.getX();(this.type===e.type.SINGLE_RIGHT||this.type===e.type.BOLD_DOUBLE_RIGHT||this.type===e.type.THIN_DOUBLE)&&(r=this.top_stave.getX()+this.top_stave.width);var s=i-n;switch(this.type){case e.type.SINGLE:case e.type.SINGLE_LEFT:case e.type.SINGLE_RIGHT:o=1;break;case e.type.DOUBLE:r-=this.width+2;break;case e.type.BRACE:o=12;var a=this.top_stave.getX()-2+this.x_shift,l=n,u=a,c=i,f=a-o,b=l+s/2,p=f-.9*o,y=l+.2*s,d=a+1.1*o,v=b-.135*s,g=d,m=b+.135*s,_=p,x=c-.2*s,w=f-o,k=x,S=a+.4*o,T=b+.135*s,E=S,O=b-.135*s,R=w,P=y;t.beginPath(),t.moveTo(a,l),t.bezierCurveTo(p,y,d,v,f,b),t.bezierCurveTo(g,m,_,x,u,c),t.bezierCurveTo(w,k,S,T,f,b),t.bezierCurveTo(E,O,R,P,a,l),t.fill(),t.stroke();break;case e.type.BRACKET:s=(i+=4)-(n-=4),j.renderGlyph(t,r-5,n-3,40,"v1b",!0),j.renderGlyph(t,r-5,i+3,40,"v10",!0),r-=this.width+2;break;case e.type.BOLD_DOUBLE_LEFT:Ft(t,this.type,r+this.x_shift,n,i);break;case e.type.BOLD_DOUBLE_RIGHT:Ft(t,this.type,r,n,i);break;case e.type.THIN_DOUBLE:o=1;break;case e.type.NONE:break;default:throw new h.RERR("InvalidType","The provided StaveConnector.type (".concat(this.type,") is invalid"))}this.type!==e.type.BRACE&&this.type!==e.type.BOLD_DOUBLE_LEFT&&this.type!==e.type.BOLD_DOUBLE_RIGHT&&this.type!==e.type.NONE&&t.fillRect(r,n,o,s),this.type===e.type.THIN_DOUBLE&&t.fillRect(r-3,n,o,s),t.save(),t.lineWidth=2,t.setFont(this.font.family,this.font.size,this.font.weight);for(var C=0;C<this.texts.length;C++){var N=this.texts[C],A=t.measureText(""+N.content).width,L=this.top_stave.getX()-A-24+N.options.shift_x,M=(this.top_stave.getYForLine(0)+this.bottom_stave.getBottomLineY())/2+N.options.shift_y;t.fillText(""+N.content,L,M+4)}t.restore()}}]),e}();function jt(t){return(jt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Dt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function It(t,e){return!e||"object"!==jt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Gt(t){return(Gt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Yt(t,e){return(Yt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Wt=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=It(this,Gt(e).call(this))).setAttribute("type","Tickable"),t.ticks=new y(0,1),t.intrinsicTicks=0,t.tickMultiplier=new y(1,1),t.width=0,t.x_shift=0,t.voice=null,t.tickContext=null,t.modifierContext=null,t.modifiers=[],t.preFormatted=!1,t.postFormatted=!1,t.tuplet=null,t.tupletStack=[],t.align_center=!1,t.center_x_shift=0,t.ignore_ticks=!1,t.formatterMetrics={freedom:{left:0,right:0},duration:"",iterations:0,space:{used:0,mean:0,deviation:0}},t}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Yt(t,e)}(e,k),n=e,(i=[{key:"reset",value:function(){return this}},{key:"getTicks",value:function(){return this.ticks}},{key:"shouldIgnoreTicks",value:function(){return this.ignore_ticks}},{key:"getWidth",value:function(){return this.width}},{key:"getFormatterMetrics",value:function(){return this.formatterMetrics}},{key:"setXShift",value:function(t){this.x_shift=t}},{key:"getCenterXShift",value:function(){return this.isCenterAligned()?this.center_x_shift:0}},{key:"isCenterAligned",value:function(){return this.align_center}},{key:"setCenterAlignment",value:function(t){return this.align_center=t,this}},{key:"getVoice",value:function(){if(!this.voice)throw new h.RERR("NoVoice","Tickable has no voice.");return this.voice}},{key:"setVoice",value:function(t){this.voice=t}},{key:"getTuplet",value:function(){return this.tuplet}},{key:"resetTuplet",value:function(t){var e,n;if(t){var i=this.tupletStack.indexOf(t);return-1!==i&&(this.tupletStack.splice(i,1),e=t.getNoteCount(),n=t.getNotesOccupied(),this.applyTickMultiplier(e,n)),this}for(;this.tupletStack.length;)e=(t=this.tupletStack.pop()).getNoteCount(),n=t.getNotesOccupied(),this.applyTickMultiplier(e,n);return this}},{key:"setTuplet",value:function(t){if(t){this.tupletStack.push(t);var e=t.getNoteCount(),n=t.getNotesOccupied();this.applyTickMultiplier(n,e)}return this.tuplet=t,this}},{key:"addToModifierContext",value:function(t){this.modifierContext=t,this.preFormatted=!1}},{key:"addModifier",value:function(t){return this.modifiers.push(t),this.preFormatted=!1,this}},{key:"getModifiers",value:function(){return this.modifiers}},{key:"setTickContext",value:function(t){this.tickContext=t,this.preFormatted=!1}},{key:"preFormat",value:function(){this.preFormatted||(this.width=0,this.modifierContext&&(this.modifierContext.preFormat(),this.width+=this.modifierContext.getWidth()))}},{key:"postFormat",value:function(){return this.postFormatted?this:(this.postFormatted=!0,this)}},{key:"getIntrinsicTicks",value:function(){return this.intrinsicTicks}},{key:"setIntrinsicTicks",value:function(t){this.intrinsicTicks=t,this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}},{key:"getTickMultiplier",value:function(){return this.tickMultiplier}},{key:"applyTickMultiplier",value:function(t,e){this.tickMultiplier.multiply(t,e),this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}},{key:"setDuration",value:function(t){var e=t.numerator*(I.RESOLUTION/t.denominator);this.ticks=this.tickMultiplier.clone().multiply(e),this.intrinsicTicks=this.ticks.value()}}])&&Dt(n.prototype,i),o&&Dt(n,o),e}();function Ht(t){return(Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Xt(t,e){return!e||"object"!==Ht(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ut(t){return(Ut=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Vt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function zt(t,e,n){return e&&Vt(t.prototype,e),n&&Vt(t,n),t}function Kt(t,e){return(Kt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Jt=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Xt(this,Ut(e).call(this))).setAttribute("type","Note"),!t)throw new h.RuntimeError("BadArguments","Note must have valid initialization data to identify duration and type.");var i=I.parseNoteData(t);if(!i)throw new h.RuntimeError("BadArguments","Invalid note initialization object: ".concat(JSON.stringify(t)));if(n.duration=i.duration,n.dots=i.dots,n.noteType=i.type,t.duration_override?n.setDuration(t.duration_override):n.setIntrinsicTicks(i.ticks),n.modifiers=[],n.glyph=I.durationToGlyph(n.duration,n.noteType),n.positions&&("object"!==Ht(n.positions)||!n.positions.length))throw new h.RuntimeError("BadArguments","Note keys must be array type.");return n.playNote=null,n.tickContext=null,n.modifierContext=null,n.ignore_ticks=!1,n.width=0,n.extraLeftPx=0,n.extraRightPx=0,n.x_shift=0,n.left_modPx=0,n.right_modPx=0,n.voice=null,n.preFormatted=!1,n.ys=[],t.align_center&&n.setCenterAlignment(t.align_center),n.stave=null,n.render_options={annotation_spacing:5,stave_padding:e.STAVEPADDING},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Kt(t,e)}(e,Wt),zt(e,null,[{key:"plotMetrics",value:function(t,e,n){var i=e.getMetrics(),o=e.getAbsoluteX()-i.modLeftPx-i.extraLeftPx,r=e.getAbsoluteX()-i.extraLeftPx,s=e.getAbsoluteX(),a=e.getAbsoluteX()+i.noteWidth,l=e.getAbsoluteX()+i.noteWidth+i.extraRightPx,u=e.getAbsoluteX()+i.noteWidth+i.extraRightPx+i.modRightPx,c=u+e.getFormatterMetrics().freedom.right,f=u-o;t.save(),t.setFont("Arial",8,""),t.fillText(Math.round(f)+"px",o+e.getXShift(),n);var b=n+7;function p(n,i,o){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:b;t.beginPath(),t.setStrokeStyle(o),t.setFillStyle(o),t.setLineWidth(3),t.moveTo(n+e.getXShift(),r),t.lineTo(i+e.getXShift(),r),t.stroke()}p(o,r,"red"),p(r,s,"#999"),p(s,a,"green"),p(a,l,"#999"),p(l,u,"red"),p(u,c,"#DD0"),p(o-e.getXShift(),o,"#BBB"),h.drawDot(t,s+e.getXShift(),b,"blue");var y=e.getFormatterMetrics();if(y.iterations>0){var d=y.space.deviation,v=d>=0?"+":"";t.setFillStyle("red"),t.fillText(v+Math.round(d),s+e.getXShift(),n-10)}t.restore()}},{key:"CATEGORY",get:function(){return"note"}},{key:"STAVEPADDING",get:function(){return 12}}]),zt(e,[{key:"getPlayNote",value:function(){return this.playNote}},{key:"setPlayNote",value:function(t){return this.playNote=t,this}},{key:"isRest",value:function(){return!1}},{key:"addStroke",value:function(t,e){return e.setNote(this),e.setIndex(t),this.modifiers.push(e),this.setPreFormatted(!1),this}},{key:"getStave",value:function(){return this.stave}},{key:"setStave",value:function(t){return this.stave=t,this.setYs([t.getYForLine(0)]),this.context=this.stave.context,this}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setContext",value:function(t){return this.context=t,this}},{key:"getExtraLeftPx",value:function(){return this.extraLeftPx}},{key:"getExtraRightPx",value:function(){return this.extraRightPx}},{key:"setExtraLeftPx",value:function(t){return this.extraLeftPx=t,this}},{key:"setExtraRightPx",value:function(t){return this.extraRightPx=t,this}},{key:"shouldIgnoreTicks",value:function(){return this.ignore_ticks}},{key:"getLineNumber",value:function(){return 0}},{key:"getLineForRest",value:function(){return 0}},{key:"getGlyph",value:function(){return this.glyph}},{key:"getGlyphWidth",value:function(){return this.glyph.getWidth(this.render_options.glyph_font_scale)}},{key:"setYs",value:function(t){return this.ys=t,this}},{key:"getYs",value:function(){if(0===this.ys.length)throw new h.RERR("NoYValues","No Y-values calculated for this note.");return this.ys}},{key:"getYForTopText",value:function(t){if(!this.stave)throw new h.RERR("NoStave","No stave attached to this note.");return this.stave.getYForTopText(t)}},{key:"getBoundingBox",value:function(){return null}},{key:"getVoice",value:function(){if(!this.voice)throw new h.RERR("NoVoice","Note has no voice.");return this.voice}},{key:"setVoice",value:function(t){return this.voice=t,this.preFormatted=!1,this}},{key:"getTickContext",value:function(){return this.tickContext}},{key:"setTickContext",value:function(t){return this.tickContext=t,this.preFormatted=!1,this}},{key:"getDuration",value:function(){return this.duration}},{key:"isDotted",value:function(){return this.dots>0}},{key:"hasStem",value:function(){return!1}},{key:"getDots",value:function(){return this.dots}},{key:"getNoteType",value:function(){return this.noteType}},{key:"setBeam",value:function(){return this}},{key:"setModifierContext",value:function(t){return this.modifierContext=t,this}},{key:"addModifier",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t.setNote(this),t.setIndex(e),this.modifiers.push(t),this.setPreFormatted(!1),this}},{key:"getModifierStartXY",value:function(){if(!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");return{x:this.getAbsoluteX(),y:this.ys[0]}}},{key:"getMetrics",value:function(){if(!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call getMetrics on an unformatted note.");var t=0,e=0;null!=this.modifierContext&&(t=this.modifierContext.state.left_shift,e=this.modifierContext.state.right_shift);var n=this.getWidth();return{width:n,noteWidth:n-t-e-this.extraLeftPx-this.extraRightPx,left_shift:this.x_shift,modLeftPx:t,modRightPx:e,extraLeftPx:this.extraLeftPx,extraRightPx:this.extraRightPx}}},{key:"setWidth",value:function(t){this.width=t}},{key:"getWidth",value:function(){if(!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call GetWidth on an unformatted note.");return this.width+(this.modifierContext?this.modifierContext.getWidth():0)}},{key:"setXShift",value:function(t){return this.x_shift=t,this}},{key:"getXShift",value:function(){return this.x_shift}},{key:"getX",value:function(){if(!this.tickContext)throw new h.RERR("NoTickContext","Note needs a TickContext assigned for an X-Value");return this.tickContext.getX()+this.x_shift}},{key:"getAbsoluteX",value:function(){if(!this.tickContext)throw new h.RERR("NoTickContext","Note needs a TickContext assigned for an X-Value");var t=this.tickContext.getX();return this.stave&&(t+=this.stave.getNoteStartX()+this.render_options.stave_padding),this.isCenterAligned()&&(t+=this.getCenterXShift()),t}},{key:"setPreFormatted",value:function(t){if(this.preFormatted=t,this.preFormatted){var e=this.tickContext.getExtraPx();this.left_modPx=Math.max(this.left_modPx,e.left),this.right_modPx=Math.max(this.right_modPx,e.right)}}}]),e}();function qt(t){return(qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qt(t,e){return!e||"object"!==qt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Zt(t,e,n){return(Zt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=$t(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function $t(t){return($t=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function te(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ee(t,e,n){return e&&te(t.prototype,e),n&&te(t,n),t}function ne(t,e){return(ne=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ie=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Qt(this,$t(e).call(this,t))).setAttribute("type","NoteHead"),n.index=t.index,n.x=t.x||0,n.y=t.y||0,n.note_type=t.note_type,n.duration=t.duration,n.displaced=t.displaced||!1,n.stem_direction=t.stem_direction||Le.STEM_UP,n.line=t.line,n.glyph=I.durationToGlyph(n.duration,n.note_type),!n.glyph)throw new h.RuntimeError("BadArguments","No glyph found for duration '".concat(n.duration,"' and type '").concat(n.note_type,"'"));return n.glyph_code=n.glyph.code_head,n.x_shift=t.x_shift,t.custom_glyph_code&&(n.custom_glyph=!0,n.glyph_code=t.custom_glyph_code),n.style=t.style,n.slashed=t.slashed,h.Merge(n.render_options,{glyph_font_scale:t.glyph_font_scale||I.DEFAULT_NOTATION_FONT_SCALE,stroke_px:3}),n.setWidth(n.glyph.getWidth(n.render_options.glyph_font_scale)),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ne(t,e)}(e,Jt),ee(e,null,[{key:"CATEGORY",get:function(){return"notehead"}}]),ee(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getWidth",value:function(){return this.width}},{key:"isDisplaced",value:function(){return!0===this.displaced}},{key:"getGlyph",value:function(){return this.glyph}},{key:"setX",value:function(t){return this.x=t,this}},{key:"getY",value:function(){return this.y}},{key:"setY",value:function(t){return this.y=t,this}},{key:"getLine",value:function(){return this.line}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"getAbsoluteX",value:function(){var t=this.preFormatted?Zt($t(e.prototype),"getAbsoluteX",this).call(this):this.x,n=rt.WIDTH/2;return t+(this.displaced?(this.width-n)*this.stem_direction:0)}},{key:"getBoundingBox",value:function(){if(!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call getBoundingBox on an unformatted note.");var t=this.stave.getSpacingBetweenLines(),e=t/2,n=this.y-e;return new I.BoundingBox(this.getAbsoluteX(),n,this.width,t)}},{key:"setStave",value:function(t){var e=this.getLine();return this.stave=t,this.setY(t.getYForNote(e)),this.context=this.stave.context,this}},{key:"preFormat",value:function(){if(this.preFormatted)return this;var t=this.getWidth()+this.extraLeftPx+this.extraRightPx;return this.setWidth(t),this.setPreFormatted(!0),this}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.context,e=this.getAbsoluteX(),n=this.y;!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];ie.DEBUG&&h.L("Vex.Flow.NoteHead",e)}("Drawing note head '",this.note_type,this.duration,"' at",e,n);var i=this.stem_direction,o=this.render_options.glyph_font_scale;if(this.style&&this.applyStyle(t),"s"===this.note_type){var r=this.stave.getSpacingBetweenLines();!function(t,e,n,i,o,r){var s=I.SLASH_NOTEHEAD_WIDTH;t.save(),t.setLineWidth(I.STEM_WIDTH);var a=!1;if(I.durationToNumber(e)>2&&(a=!0),a||(n-=I.STEM_WIDTH/2*o),t.beginPath(),t.moveTo(n,i+r),t.lineTo(n,i+1),t.lineTo(n+s,i-r),t.lineTo(n+s,i),t.lineTo(n,i+r),t.closePath(),a?t.fill():t.stroke(),I.durationToFraction(e).equals(.5))for(var l=[-3,-1,s+1,s+3],u=0;u<l.length;u++)t.beginPath(),t.moveTo(n+l[u],i-10),t.lineTo(n+l[u],i+11),t.stroke();t.restore()}(t,this.duration,e,n,i,r)}else j.renderGlyph(t,e,n,o,this.glyph_code);this.style&&this.restoreStyle(t)}}]),e}();function oe(t){return(oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function re(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function se(t,e){return!e||"object"!==oe(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ae(t){return(ae=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function le(t,e){return(le=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ue=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=se(this,ae(e).call(this,t))).setAttribute("type","StemmableNote"),n.stem=null,n.stemExtensionOverride=null,n.beam=null,n}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&le(t,e)}(e,Jt),n=e,(i=[{key:"getStem",value:function(){return this.stem}},{key:"setStem",value:function(t){return this.stem=t,this}},{key:"buildStem",value:function(){var t=new rt;return this.setStem(t),this}},{key:"buildFlag",value:function(){var t=this.glyph,e=null===this.beam;if(t&&t.flag&&e){var n=this.getStemDirection()===rt.DOWN?t.code_flag_downstem:t.code_flag_upstem;this.flag=new j(n,this.render_options.glyph_font_scale)}}},{key:"getStemLength",value:function(){return rt.HEIGHT+this.getStemExtension()}},{key:"getBeamCount",value:function(){var t=this.getGlyph();return t?t.beam_count:0}},{key:"getStemMinumumLength",value:function(){var t=I.durationToFraction(this.duration).value()<=1?0:20;switch(this.duration){case"8":null==this.beam&&(t=35);break;case"16":t=null==this.beam?35:25;break;case"32":t=null==this.beam?45:35;break;case"64":t=null==this.beam?50:40;break;case"128":t=null==this.beam?55:45}return t}},{key:"getStemDirection",value:function(){return this.stem_direction}},{key:"setStemDirection",value:function(t){if(t||(t=rt.UP),t!==rt.UP&&t!==rt.DOWN)throw new h.RERR("BadArgument","Invalid stem direction: ".concat(t));return this.stem_direction=t,this.stem&&(this.stem.setDirection(t),this.stem.setExtension(this.getStemExtension())),this.reset(),this.flag&&this.buildFlag(),this.beam=null,this.preFormatted&&this.preFormat(),this}},{key:"getStemX",value:function(){var t=this.getAbsoluteX()+this.x_shift,e=this.getAbsoluteX()+this.x_shift+this.getGlyphWidth();return this.stem_direction===rt.DOWN?t:e}},{key:"getCenterGlyphX",value:function(){return this.getAbsoluteX()+this.x_shift+this.getGlyphWidth()/2}},{key:"getStemExtension",value:function(){var t=this.getGlyph();return null!=this.stemExtensionOverride?this.stemExtensionOverride:t?1===this.getStemDirection()?t.stem_up_extension:t.stem_down_extension:0}},{key:"setStemLength",value:function(t){return this.stemExtensionOverride=t-rt.HEIGHT,this}},{key:"getStemExtents",value:function(){return this.stem.getExtents()}},{key:"setBeam",value:function(t){return this.beam=t,this}},{key:"getYForTopText",value:function(t){var e=this.getStemExtents();return this.hasStem()?Math.min(this.stave.getYForTopText(t),e.topY-this.render_options.annotation_spacing*(t+1)):this.stave.getYForTopText(t)}},{key:"getYForBottomText",value:function(t){var e=this.getStemExtents();return this.hasStem()?Math.max(this.stave.getYForTopText(t),e.baseY+this.render_options.annotation_spacing*t):this.stave.getYForBottomText(t)}},{key:"hasFlag",value:function(){return I.durationToGlyph(this.duration).flag&&!this.beam}},{key:"postFormat",value:function(){return this.beam&&this.beam.postFormat(),this.postFormatted=!0,this}},{key:"drawStem",value:function(t){this.checkContext(),this.setRendered(),this.setStem(new rt(t)),this.stem.setContext(this.context).draw()}}])&&re(n.prototype,i),o&&re(n,o),e}();function ce(t){return(ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function he(t,e){return!e||"object"!==ce(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function fe(t){return(fe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function be(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function pe(t,e,n){return e&&be(t.prototype,e),n&&be(t,n),t}function ye(t,e){return(ye=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var de=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=he(this,fe(e).call(this))).setAttribute("type","Modifier"),t.width=0,t.note=null,t.index=null,t.text_line=0,t.position=e.Position.LEFT,t.modifier_context=null,t.x_shift=0,t.y_shift=0,t.spacingFromNextModifier=0,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ye(t,e)}(e,k),pe(e,null,[{key:"CATEGORY",get:function(){return"none"}},{key:"Position",get:function(){return{LEFT:1,RIGHT:2,ABOVE:3,BELOW:4}}},{key:"PositionString",get:function(){return{above:e.Position.ABOVE,below:e.Position.BELOW,left:e.Position.LEFT,right:e.Position.RIGHT}}}]),pe(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getWidth",value:function(){return this.width}},{key:"setWidth",value:function(t){return this.width=t,this}},{key:"getNote",value:function(){return this.note}},{key:"setNote",value:function(t){return this.note=t,this}},{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(t){return this.index=t,this}},{key:"getModifierContext",value:function(){return this.modifier_context}},{key:"setModifierContext",value:function(t){return this.modifier_context=t,this}},{key:"getPosition",value:function(){return this.position}},{key:"setPosition",value:function(t){return this.position="string"==typeof t?e.PositionString[t]:t,this}},{key:"setTextLine",value:function(t){return this.text_line=t,this}},{key:"setYShift",value:function(t){return this.y_shift=t,this}},{key:"setSpacingFromNextModifier",value:function(t){this.spacingFromNextModifier=t}},{key:"getSpacingFromNextModifier",value:function(){return this.spacingFromNextModifier}},{key:"setXShift",value:function(t){this.x_shift=0,this.position===e.Position.LEFT?this.x_shift-=t:this.x_shift+=t}},{key:"getXShift",value:function(){return this.x_shift}},{key:"draw",value:function(){throw this.checkContext(),new h.RERR("MethodNotImplemented","draw() not implemented for this modifier.")}},{key:"alignSubNotesWithNote",value:function(t,e){var n=e.getTickContext(),i=n.getExtraPx(),o=n.getX()-i.left-i.extraLeft+this.getSpacingFromNextModifier();t.forEach(function(t){var n=t.getTickContext();t.setStave(e.stave),n.setXOffset(o)})}}]),e}();function ve(t){return(ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ge(t,e){return!e||"object"!==ve(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function me(t){return(me=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _e(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function xe(t,e,n){return e&&_e(t.prototype,e),n&&_e(t,n),t}function we(t,e){return(we=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ke=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=ge(this,me(e).call(this))).setAttribute("type","Dot"),t.note=null,t.index=null,t.position=de.Position.RIGHT,t.radius=2,t.setWidth(5),t.dot_shiftY=0,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&we(t,e)}(e,de),xe(e,null,[{key:"format",value:function(t,e){var n=e.right_shift;if(!t||0===t.length)return!1;for(var i=[],o={},r=0;r<t.length;++r){var s=t[r],a=s.getNote(),l=void 0,u=void 0;"function"==typeof a.getKeyProps?u=(l=a.getKeyProps()[s.getIndex()]).displaced?a.getExtraRightPx():0:(l={line:.5},u=0);var c=a.getAttribute("id");i.push({line:l.line,note:a,note_id:c,dot:s}),o[c]=Math.max(o[c]||u,u)}i.sort(function(t,e){return e.line-t.line});for(var h=n,f=0,b=null,p=null,y=null,d=0,v=0;v<i.length;++v){var g=i[v],m=g.dot,_=g.note,x=g.note_id,w=g.line;w===b&&_===p||(h=o[x]),_.isRest()||w===b||(.5===Math.abs(w%1)?d=0:(d=.5,null==p||p.isRest()||b-w!=.5?w+d===y&&(d=-.5):d=-.5)),_.isRest()?m.dot_shiftY+=-d:m.dot_shiftY=-d,y=w+d,m.setXShift(h),f=(h+=m.getWidth()+1)>f?h:f,b=w,p=_}return e.right_shift+=f,!0}},{key:"CATEGORY",get:function(){return"dots"}}]),xe(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setNote",value:function(t){this.note=t,"gracenotes"===this.note.getCategory()&&(this.radius*=.5,this.setWidth(3))}},{key:"setDotShiftY",value:function(t){return this.dot_shiftY=t,this}},{key:"draw",value:function(){if(this.checkContext(),this.setRendered(),!this.note||null===this.index)throw new h.RERR("NoAttachedNote","Can't draw dot without a note and index.");var t=this.note.stave.options.spacing_between_lines_px,e=this.note.getModifierStartXY(this.position,this.index,{forceFlagRight:!0});"tabnotes"===this.note.getCategory()&&(e.y=this.note.getStemExtents().baseY);var n=e.x+this.x_shift+this.width-this.radius,i=e.y+this.y_shift+this.dot_shiftY*t,o=this.context;o.beginPath(),o.arc(n,i,this.radius,0,2*Math.PI,!1),o.fill()}}]),e}();function Se(t){return(Se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Te(){return(Te=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function Ee(t,e){return!e||"object"!==Se(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Oe(t,e,n){return(Oe="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Re(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Re(t){return(Re=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Pe(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ce(t,e,n){return e&&Pe(t.prototype,e),n&&Pe(t,n),t}function Ne(t,e){return(Ne=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ae(t,e,n){var i=(e.isrest?0:1)*n;t.line+=i,t.maxLine+=i,t.minLine+=i,t.note.setKeyLine(0,t.note.getKeyLine(0)+i)}var Le=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ee(this,Re(e).call(this,t))).setAttribute("type","StaveNote"),n.keys=t.keys,n.clef=t.clef,n.octave_shift=t.octave_shift,n.beam=null,n.glyph=I.durationToGlyph(n.duration,n.noteType),!n.glyph)throw new h.RuntimeError("BadArguments","Invalid note initialization data (No glyph found): ".concat(JSON.stringify(t)));return n.displaced=!1,n.dot_shiftY=0,n.keyProps=[],n.use_default_head_x=!1,n.note_heads=[],n.modifiers=[],h.Merge(n.render_options,{glyph_font_scale:t.glyph_font_scale||I.DEFAULT_NOTATION_FONT_SCALE,stroke_px:t.stroke_px||e.DEFAULT_LEDGER_LINE_OFFSET}),n.calculateKeyProps(),n.buildStem(),t.auto_stem?n.autoStem():n.setStemDirection(t.stem_direction),n.reset(),n.buildFlag(),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ne(t,e)}(e,ue),Ce(e,null,[{key:"format",value:function(t,n){if(!t||t.length<2)return!1;if(t[0].getStave())return e.formatByY(t,n);for(var i=[],o=0;o<t.length;o++){var r=t[o].getKeyProps(),s=r[0].line,a=r[r.length-1].line,l=t[o].getStemDirection(),u=t[o].getStemLength()/10,c=t[o].getStemMinumumLength()/10,f=void 0;t[o].isRest()?(f=s+t[o].glyph.line_above,a=s-t[o].glyph.line_below):(f=1===l?r[r.length-1].line+u:r[r.length-1].line,a=1===l?r[0].line:r[0].line-u),i.push({line:r[0].line,maxLine:f,minLine:a,isrest:t[o].isRest(),stemDirection:l,stemMax:u,stemMin:c,voice_shift:t[o].getVoiceShiftWidth(),is_displaced:t[o].isDisplaced(),note:t[o]})}var b=i.length,p=i[0],y=b>2?i[1]:null,d=b>2?i[2]:i[1];2===b&&-1===p.stemDirection&&1===d.stemDirection&&(p=i[1],d=i[0]);var v,g=Math.max(p.voice_shift,d.voice_shift),m=0;if(2===b){var _=p.stemDirection===d.stemDirection?0:.5;return p.stemDirection===d.stemDirection&&p.minLine<=d.maxLine&&(p.isrest||(v=Math.abs(p.line-(d.maxLine+.5)),v=Math.max(v,p.stemMin),p.minLine=p.line-v,p.note.setStemLength(10*v))),p.minLine<=d.maxLine+_&&(p.isrest?Ae(p,d,1):d.isrest?Ae(d,p,-1):(m=g,p.stemDirection===d.stemDirection?p.note.setXShift(m+3):d.note.setXShift(m))),!0}if((null!==y&&y.minLine<d.maxLine+.5&&(y.isrest||(v=Math.abs(y.line-(d.maxLine+.5)),v=Math.max(v,y.stemMin),y.minLine=y.line-v,y.note.setStemLength(10*v))),y.isrest&&!p.isrest&&!d.isrest)&&(p.minLine<=y.maxLine||y.minLine<=d.maxLine))return y.maxLine-y.minLine<p.minLine-d.maxLine?function(t,e,n){var i=t.line-h.MidLine(e.minLine,n.maxLine);t.note.setKeyLine(0,t.note.getKeyLine(0)-i),t.line-=i,t.maxLine-=i,t.minLine-=i}(y,p,d):(m=g+3,y.note.setXShift(m)),!0;return p.isrest&&y.isrest&&d.isrest?(Ae(p,y,1),Ae(d,y,-1),!0):(y.isrest&&p.isrest&&y.minLine<=d.maxLine&&Ae(y,d,1),y.isrest&&d.isrest&&p.minLine<=y.maxLine&&Ae(y,p,-1),p.isrest&&p.minLine<=y.maxLine&&Ae(p,y,1),d.isrest&&y.minLine<=d.maxLine&&Ae(d,y,-1),(!p.isrest&&!y.isrest&&p.minLine<=y.maxLine+.5||!y.isrest&&!d.isrest&&y.minLine<=d.maxLine)&&(m=g+3,y.note.setXShift(m)),!0)}},{key:"formatByY",value:function(t,e){for(var n=!0,i=0;i<t.length;i++)n=n&&null!=t[i].getStave();if(!n)throw new h.RERR("Stave Missing","All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!");for(var o=0,r=0;r<t.length-1;r++){var s=t[r],a=t[r+1];s.getStemDirection()===rt.DOWN&&(s=t[r+1],a=t[r]);var l=s.getKeyProps(),u=a.getKeyProps(),c=s.getStave().getYForLine(5-l[0].line+.5);a.getStave().getYForLine(5-u[u.length-1].line-.5)-c<0&&(o=s.getVoiceShiftWidth()+2,a.setXShift(o))}e.right_shift+=o}},{key:"postFormat",value:function(t){return!!t&&(t.forEach(function(t){return t.postFormat()}),!0)}},{key:"CATEGORY",get:function(){return"stavenotes"}},{key:"STEM_UP",get:function(){return rt.UP}},{key:"STEM_DOWN",get:function(){return rt.DOWN}},{key:"DEFAULT_LEDGER_LINE_OFFSET",get:function(){return 3}}]),Ce(e,[{key:"reset",value:function(){var t=this;Oe(Re(e.prototype),"reset",this).call(this);var n=this.note_heads.map(function(t){return t.getStyle()});this.buildNoteHeads(),this.note_heads.forEach(function(t,e){return t.setStyle(n[e])}),this.stave&&this.note_heads.forEach(function(e){return e.setStave(t.stave)}),this.calcExtraPx()}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"buildStem",value:function(){var t=this.getGlyph();this.setStem(new rt({stem_up_y_offset:t.stem_up_y_offset,stem_down_y_offset:t.stem_down_y_offset,hide:!!this.isRest()}))}},{key:"buildNoteHeads",value:function(){this.note_heads=[];var t,e,n,i=this.getStemDirection(),o=this.getKeys(),r=null,s=null,a=!1;i===rt.UP?(t=0,e=o.length,n=1):i===rt.DOWN&&(t=o.length-1,e=-1,n=-1);for(var l=t;l!==e;l+=n){var u=this.keyProps[l],c=u.line;null===r?r=c:0===(s=Math.abs(r-c))||.5===s?a=!a:(a=!1,this.use_default_head_x=!0),r=c;var h=new ie({duration:this.duration,note_type:this.noteType,displaced:a,stem_direction:i,custom_glyph_code:u.code,glyph_font_scale:this.render_options.glyph_font_scale,x_shift:u.shift_right,line:u.line});this.note_heads[l]=h}}},{key:"autoStem",value:function(){this.minLine=this.keyProps[0].line,this.maxLine=this.keyProps[this.keyProps.length-1].line;var t=(this.minLine+this.maxLine)/2<3?rt.UP:rt.DOWN;this.setStemDirection(t)}},{key:"calculateKeyProps",value:function(){for(var t=null,e=0;e<this.keys.length;++e){var n=this.keys[e];this.glyph.rest&&(this.glyph.position=n);var i={octave_shift:this.octave_shift||0},o=I.keyProperties(n,this.clef,i);if(!o)throw new h.RuntimeError("BadArguments","Invalid key for note properties: ".concat(n));"R"===o.key&&("1"===this.duration||"w"===this.duration?o.line=4:o.line=3);var r=o.line;null===t?t=r:.5===Math.abs(t-r)&&(this.displaced=!0,o.displaced=!0,this.keyProps.length>0&&(this.keyProps[e-1].displaced=!0)),t=r,this.keyProps.push(o)}t=-1/0,this.keyProps.forEach(function(e){e.line<t&&h.W("Unsorted keys in note will be sorted. See https://github.com/0xfe/vexflow/issues/104 for details."),t=e.line}),this.keyProps.sort(function(t,e){return t.line-e.line})}},{key:"getBoundingBox",value:function(){if(!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call getBoundingBox on an unformatted note.");var t=this.getMetrics(),e=t.width,n=t.modLeftPx,i=t.extraLeftPx,o=this.getAbsoluteX()-n-i,r=0,s=0,a=this.getStave().getSpacingBetweenLines()/2,l=2*a;if(this.isRest()){var u=this.ys[0],c=I.durationToFraction(this.duration);c.equals(1)||c.equals(2)?(r=u-a,s=u+a):(r=u-this.glyph.line_above*l,s=u+this.glyph.line_below*l)}else if(this.glyph.stem){var f=this.getStemExtents();f.baseY+=a*this.stem_direction,r=Math.min(f.topY,f.baseY),s=Math.max(f.topY,f.baseY)}else{r=null,s=null;for(var b=0;b<this.ys.length;++b){var p=this.ys[b];0===b?(r=p,s=p):(r=Math.min(p,r),s=Math.max(p,s))}r-=a,s+=a}return new R(o,r,e,s-r)}},{key:"getLineNumber",value:function(t){if(!this.keyProps.length)throw new h.RERR("NoKeyProps","Can't get bottom note line, because note is not initialized properly.");for(var e=this.keyProps[0].line,n=0;n<this.keyProps.length;n++){var i=this.keyProps[n].line;t?i>e&&(e=i):i<e&&(e=i)}return e}},{key:"isRest",value:function(){return this.glyph.rest}},{key:"isChord",value:function(){return!this.isRest()&&this.keys.length>1}},{key:"hasStem",value:function(){return this.glyph.stem}},{key:"hasFlag",value:function(){return Oe(Re(e.prototype),"hasFlag",this).call(this)&&!this.isRest()}},{key:"getStemX",value:function(){return"r"===this.noteType?this.getCenterGlyphX():Oe(Re(e.prototype),"getStemX",this).call(this)+(t=this,rt.WIDTH/(2*-t.getStemDirection()));var t}},{key:"getYForTopText",value:function(t){var e=this.getStemExtents();return Math.min(this.stave.getYForTopText(t),e.topY-this.render_options.annotation_spacing*(t+1))}},{key:"getYForBottomText",value:function(t){var e=this.getStemExtents();return Math.max(this.stave.getYForTopText(t),e.baseY+this.render_options.annotation_spacing*t)}},{key:"setStave",value:function(t){Oe(Re(e.prototype),"setStave",this).call(this,t);var n=this.note_heads.map(function(e){return e.setStave(t),e.getY()});if(this.setYs(n),this.stem){var i=this.getNoteHeadBounds(),o=i.y_top,r=i.y_bottom;this.stem.setYBounds(o,r)}return this}},{key:"getKeys",value:function(){return this.keys}},{key:"getKeyProps",value:function(){return this.keyProps}},{key:"isDisplaced",value:function(){return this.displaced}},{key:"setNoteDisplaced",value:function(t){return this.displaced=t,this}},{key:"getTieRightX",value:function(){var t=this.getAbsoluteX();return t+=this.getGlyphWidth()+this.x_shift+this.extraRightPx,this.modifierContext&&(t+=this.modifierContext.getExtraRightPx()),t}},{key:"getTieLeftX",value:function(){var t=this.getAbsoluteX();return t+=this.x_shift-this.extraLeftPx}},{key:"getLineForRest",value:function(){var t=this.keyProps[0].line;if(this.keyProps.length>1){var e=this.keyProps[this.keyProps.length-1].line,n=Math.max(t,e),i=Math.min(t,e);t=h.MidLine(n,i)}return t}},{key:"getModifierStartXY",value:function(t,e,n){if(n=n||{},!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new h.RERR("NoYValues","No Y-Values calculated for this note.");var i=de.Position,o=i.ABOVE,r=i.BELOW,s=i.LEFT,a=i.RIGHT,l=0;return t===s?l=-2:t===a?(l=this.getGlyphWidth()+this.x_shift+2,this.stem_direction===rt.UP&&this.hasFlag()&&(n.forceFlagRight||function(t,e){return e===(t.getStemDirection()===rt.UP?t.keyProps.length-1:0)}(this,e))&&(l+=this.flag.getMetrics().width)):t!==r&&t!==o||(l=this.getGlyphWidth()/2),{x:this.getAbsoluteX()+l,y:this.ys[e]}}},{key:"setStyle",value:function(t){Oe(Re(e.prototype),"setStyle",this).call(this,t),this.note_heads.forEach(function(e){return e.setStyle(t)}),this.stem.setStyle(t)}},{key:"setStemStyle",value:function(t){this.getStem().setStyle(t)}},{key:"getStemStyle",value:function(){return this.stem.getStyle()}},{key:"setLedgerLineStyle",value:function(t){this.ledgerLineStyle=t}},{key:"getLedgerLineStyle",value:function(){return this.ledgerLineStyle}},{key:"setFlagStyle",value:function(t){this.flagStyle=t}},{key:"getFlagStyle",value:function(){return this.flagStyle}},{key:"setKeyStyle",value:function(t,e){return this.note_heads[t].setStyle(e),this}},{key:"setKeyLine",value:function(t,e){return this.keyProps[t].line=e,this.reset(),this}},{key:"getKeyLine",value:function(t){return this.keyProps[t].line}},{key:"addToModifierContext",value:function(t){this.setModifierContext(t);for(var e=0;e<this.modifiers.length;++e)this.modifierContext.addModifier(this.modifiers[e]);return this.modifierContext.addModifier(this),this.setPreFormatted(!1),this}},{key:"addModifier",value:function(t,e){return e.setNote(this),e.setIndex(t),this.modifiers.push(e),this.setPreFormatted(!1),this}},{key:"addAccidental",value:function(t,e){return this.addModifier(t,e)}},{key:"addArticulation",value:function(t,e){return this.addModifier(t,e)}},{key:"addAnnotation",value:function(t,e){return this.addModifier(t,e)}},{key:"addDot",value:function(t){var e=new ke;return e.setDotShiftY(this.glyph.dot_shiftY),this.dots++,this.addModifier(t,e)}},{key:"addDotToAll",value:function(){for(var t=0;t<this.keys.length;++t)this.addDot(t);return this}},{key:"getAccidentals",value:function(){return this.modifierContext.getModifiers("accidentals")}},{key:"getDots",value:function(){return this.modifierContext.getModifiers("dots")}},{key:"getVoiceShiftWidth",value:function(){return this.getGlyphWidth()*(this.displaced?2:1)}},{key:"calcExtraPx",value:function(){this.setExtraLeftPx(this.displaced&&this.stem_direction===rt.DOWN?this.getGlyphWidth():0),this.setExtraRightPx(!this.hasFlag()&&this.displaced&&this.stem_direction===rt.UP?this.getGlyphWidth():0)}},{key:"preFormat",value:function(){if(!this.preFormatted){this.modifierContext&&this.modifierContext.preFormat();var t=this.getGlyphWidth()+this.extraLeftPx+this.extraRightPx;this.glyph.flag&&null===this.beam&&this.stem_direction===rt.UP&&(t+=this.getGlyphWidth()),this.setWidth(t),this.setPreFormatted(!0)}}},{key:"getNoteHeadBounds",value:function(){var t=null,e=null,n=null,i=null,o=this.stave.getNumLines(),r=1,s=!1,a=!1,l=o,u=r;return this.note_heads.forEach(function(c){var h=c.getLine(),f=c.getY();(null===t||f<t)&&(t=f),(null===e||f>e)&&(e=f),null===i&&c.isDisplaced()&&(i=c.getAbsoluteX()),null!==n||c.isDisplaced()||(n=c.getAbsoluteX()),o=h>o?h:o,r=h<r?h:r,c.isDisplaced()?(s=!1===s?h:Math.max(h,s),a=!1===a?h:Math.min(h,a)):(l=Math.max(h,l),u=Math.min(h,u))},this),{y_top:t,y_bottom:e,displaced_x:i,non_displaced_x:n,highest_line:o,lowest_line:r,highest_displaced_line:s,lowest_displaced_line:a,highest_non_displaced_line:l,lowest_non_displaced_line:u}}},{key:"getNoteHeadBeginX",value:function(){return this.getAbsoluteX()+this.x_shift}},{key:"getNoteHeadEndX",value:function(){return this.getNoteHeadBeginX()+this.getGlyphWidth()}},{key:"drawLedgerLines",value:function(){var t=this.stave,e=this.glyph,n=this.render_options.stroke_px,i=this.context,o=e.getWidth()+2*n,r=2*(e.getWidth()+n)-rt.WIDTH/2;if(!this.isRest()){if(!i)throw new h.RERR("NoCanvasContext","Can't draw without a canvas context.");var s=this.getNoteHeadBounds(),a=s.highest_line,l=s.lowest_line,u=s.highest_displaced_line,c=s.highest_non_displaced_line,f=s.lowest_displaced_line,b=s.lowest_non_displaced_line,p=s.displaced_x,y=s.non_displaced_x,d=Math.min(p,y),v=function(t,e,s){var a;a=s&&e?d-n:e?y-n:p-n;var l=e&&s?r:o;i.beginPath(),i.moveTo(a,t),i.lineTo(a+l,t),i.stroke()},g=Te({},t.getStyle()||{},this.getLedgerLineStyle()||{});this.applyStyle(i,g);for(var m=6;m<=a;++m){var _=null!==y&&m<=c,x=null!==p&&m<=u;v(t.getYForNote(m),_,x)}for(var w=0;w>=l;--w){var k=null!==y&&w>=b,S=null!==p&&w>=f;v(t.getYForNote(w),k,S)}this.restoreStyle(i,g)}}},{key:"drawModifiers",value:function(){if(!this.context)throw new h.RERR("NoCanvasContext","Can't draw without a canvas context.");var t=this.context;t.openGroup("modifiers");for(var e=0;e<this.modifiers.length;e++){var n=this.modifiers[e],i=this.note_heads[n.getIndex()],o=i.getStyle();i.applyStyle(t,o),n.setContext(t),n.draw(),i.restoreStyle(t,o)}t.closeGroup()}},{key:"drawFlag",value:function(){var t=this.stem,e=this.beam,n=this.context;if(!n)throw new h.RERR("NoCanvasContext","Can't draw without a canvas context.");var i=null===e;if(this.getGlyph().flag&&i){var o=this.getNoteHeadBounds(),r=o.y_top,s=o.y_bottom,a=t.getHeight(),l=this.getStemX(),u=this.getStemDirection()===rt.DOWN?r-a+2:s-a-2;n.openGroup("flag",null,{pointerBBox:!0}),this.applyStyle(n,this.getFlagStyle()||!1),this.flag.render(n,l,u),this.restoreStyle(n,this.getFlagStyle()||!1),n.closeGroup()}}},{key:"drawNoteHeads",value:function(){var t=this;this.note_heads.forEach(function(e){t.context.openGroup("notehead",null,{pointerBBox:!0}),e.setContext(t.context).draw(),t.context.closeGroup()})}},{key:"drawStem",value:function(t){if(!this.context)throw new h.RERR("NoCanvasContext","Can't draw without a canvas context.");t&&this.setStem(new rt(t)),this.context.openGroup("stem",null,{pointerBBox:!0}),this.stem.setContext(this.context).draw(),this.context.closeGroup()}},{key:"draw",value:function(){if(!this.context)throw new h.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.stave)throw new h.RERR("NoStave","Can't draw without a stave.");if(0===this.ys.length)throw new h.RERR("NoYValues","Can't draw note without Y values.");var t=this.getNoteHeadBeginX(),e=this.hasStem()&&!this.beam;this.note_heads.forEach(function(e){return e.setX(t)});var n=this.getStemX();this.stem.setNoteHeadXBounds(n,n),function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Le.DEBUG&&h.L("Vex.Flow.StaveNote",e)}("Rendering ",this.isChord()?"chord :":"note :",this.keys),this.drawLedgerLines(),this.applyStyle(),this.setAttribute("el",this.context.openGroup("stavenote",this.getAttribute("id"))),this.context.openGroup("note",null,{pointerBBox:!0}),e&&this.drawStem(),this.drawNoteHeads(),this.drawFlag(),this.context.closeGroup(),this.drawModifiers(),this.context.closeGroup(),this.restoreStyle(),this.setRendered()}}]),e}();function Me(t){return(Me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Fe(t,e){return!e||"object"!==Me(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Be(t){return(Be=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function je(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function De(t,e,n){return e&&je(t.prototype,e),n&&je(t,n),t}function Ie(t,e){return(Ie=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ge=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Fe(this,Be(e).call(this))).setAttribute("type","FretHandFinger"),n.note=null,n.index=null,n.finger=t,n.width=7,n.position=de.Position.LEFT,n.x_shift=0,n.y_shift=0,n.x_offset=0,n.y_offset=0,n.font={family:"sans-serif",size:9,weight:"bold"},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ie(t,e)}(e,de),De(e,null,[{key:"format",value:function(t,e){var n=e.left_shift,i=e.right_shift;if(!t||0===t.length)return!1;for(var o=[],r=null,s=0,a=0,l=0;l<t.length;++l){var u=t[l],c=u.getNote(),h=u.getPosition(),f=c.getKeyProps()[u.getIndex()];if(c!==r){for(var b=0;b<c.keys.length;++b){var p=c.getKeyProps()[b];0===n&&(s=p.displaced?c.getExtraLeftPx():s),0===i&&(a=p.displaced?c.getExtraRightPx():a)}r=c}o.push({note:c,num:u,pos:h,line:f.line,shiftL:s,shiftR:a})}o.sort(function(t,e){return e.line-t.line});for(var y=0,d=0,v=0,g=0,m=null,_=null,x=0;x<o.length;++x){var w=0,k=o[x],S=k.note,T=k.pos,E=k.num,O=k.line,R=k.shiftL,P=k.shiftR;O===m&&S===_||(y=n+R,d=i+P);var C=E.getWidth()+1;T===de.Position.LEFT?(E.setXShift(n+y),v=(w=n+C)>v?w:v):T===de.Position.RIGHT&&(E.setXShift(d),g=(w=a+C)>g?w:g),m=O,_=S}return e.left_shift+=v,e.right_shift+=g,!0}},{key:"CATEGORY",get:function(){return"frethandfinger"}}]),De(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setFretHandFinger",value:function(t){return this.finger=t,this}},{key:"setOffsetX",value:function(t){return this.x_offset=t,this}},{key:"setOffsetY",value:function(t){return this.y_offset=t,this}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new h.RERR("NoAttachedNote","Can't draw string number without a note and index.");this.setRendered();var t=this.context,e=this.note.getModifierStartXY(this.position,this.index),n=e.x+this.x_shift+this.x_offset,i=e.y+this.y_shift+this.y_offset+5;switch(this.position){case de.Position.ABOVE:n-=4,i-=12;break;case de.Position.BELOW:n-=2,i+=10;break;case de.Position.LEFT:n-=this.width;break;case de.Position.RIGHT:n+=1;break;default:throw new h.RERR("InvalidPostion","The position ".concat(this.position," does not exist"))}t.save(),t.setFont(this.font.family,this.font.size,this.font.weight),t.fillText(""+this.finger,n,i),t.restore()}}]),e}();function Ye(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var We=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,i;return e=t,i=[{key:"NUM_TONES",get:function(){return 12}},{key:"roots",get:function(){return["c","d","e","f","g","a","b"]}},{key:"root_values",get:function(){return[0,2,4,5,7,9,11]}},{key:"root_indices",get:function(){return{c:0,d:1,e:2,f:3,g:4,a:5,b:6}}},{key:"canonical_notes",get:function(){return["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"]}},{key:"diatonic_intervals",get:function(){return["unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave"]}},{key:"diatonic_accidentals",get:function(){return{unison:{note:0,accidental:0},m2:{note:1,accidental:-1},M2:{note:1,accidental:0},m3:{note:2,accidental:-1},M3:{note:2,accidental:0},p4:{note:3,accidental:0},dim5:{note:4,accidental:-1},p5:{note:4,accidental:0},m6:{note:5,accidental:-1},M6:{note:5,accidental:0},b7:{note:6,accidental:-1},M7:{note:6,accidental:0},octave:{note:7,accidental:0}}}},{key:"intervals",get:function(){return{u:0,unison:0,m2:1,b2:1,min2:1,S:1,H:1,2:2,M2:2,maj2:2,T:2,W:2,m3:3,b3:3,min3:3,M3:4,3:4,maj3:4,4:5,p4:5,"#4":6,b5:6,aug4:6,dim5:6,5:7,p5:7,"#5":8,b6:8,aug5:8,6:9,M6:9,maj6:9,b7:10,m7:10,min7:10,dom7:10,M7:11,maj7:11,8:12,octave:12}}},{key:"scales",get:function(){return{major:[2,2,1,2,2,2,1],dorian:[2,1,2,2,2,1,2],mixolydian:[2,2,1,2,2,1,2],minor:[2,1,2,2,1,2,2]}}},{key:"scaleTypes",get:function(){return{M:t.scales.major,m:t.scales.minor}}},{key:"accidentals",get:function(){return["bb","b","n","#","##"]}},{key:"noteValues",get:function(){return{c:{root_index:0,int_val:0},cn:{root_index:0,int_val:0},"c#":{root_index:0,int_val:1},"c##":{root_index:0,int_val:2},cb:{root_index:0,int_val:11},cbb:{root_index:0,int_val:10},d:{root_index:1,int_val:2},dn:{root_index:1,int_val:2},"d#":{root_index:1,int_val:3},"d##":{root_index:1,int_val:4},db:{root_index:1,int_val:1},dbb:{root_index:1,int_val:0},e:{root_index:2,int_val:4},en:{root_index:2,int_val:4},"e#":{root_index:2,int_val:5},"e##":{root_index:2,int_val:6},eb:{root_index:2,int_val:3},ebb:{root_index:2,int_val:2},f:{root_index:3,int_val:5},fn:{root_index:3,int_val:5},"f#":{root_index:3,int_val:6},"f##":{root_index:3,int_val:7},fb:{root_index:3,int_val:4},fbb:{root_index:3,int_val:3},g:{root_index:4,int_val:7},gn:{root_index:4,int_val:7},"g#":{root_index:4,int_val:8},"g##":{root_index:4,int_val:9},gb:{root_index:4,int_val:6},gbb:{root_index:4,int_val:5},a:{root_index:5,int_val:9},an:{root_index:5,int_val:9},"a#":{root_index:5,int_val:10},"a##":{root_index:5,int_val:11},ab:{root_index:5,int_val:8},abb:{root_index:5,int_val:7},b:{root_index:6,int_val:11},bn:{root_index:6,int_val:11},"b#":{root_index:6,int_val:0},"b##":{root_index:6,int_val:1},bb:{root_index:6,int_val:10},bbb:{root_index:6,int_val:9}}}}],(n=[{key:"isValidNoteValue",value:function(e){return!(null==e||e<0||e>=t.NUM_TONES)}},{key:"isValidIntervalValue",value:function(t){return this.isValidNoteValue(t)}},{key:"getNoteParts",value:function(t){if(!t||t.length<1)throw new h.RERR("BadArguments","Invalid note name: "+t);if(t.length>3)throw new h.RERR("BadArguments","Invalid note name: "+t);var e=t.toLowerCase(),n=/^([cdefgab])(b|bb|n|#|##)?$/.exec(e);if(null!=n)return{root:n[1],accidental:n[2]};throw new h.RERR("BadArguments","Invalid note name: "+t)}},{key:"getKeyParts",value:function(t){if(!t||t.length<1)throw new h.RERR("BadArguments","Invalid key: "+t);var e=t.toLowerCase(),n=/^([cdefgab])(b|#)?(mel|harm|m|M)?$/.exec(e);if(null!=n){var i=n[1],o=n[2],r=n[3];return r||(r="M"),{root:i,accidental:o,type:r}}throw new h.RERR("BadArguments","Invalid key: ".concat(t))}},{key:"getNoteValue",value:function(e){var n=t.noteValues[e];if(null==n)throw new h.RERR("BadArguments","Invalid note name: ".concat(e));return n.int_val}},{key:"getIntervalValue",value:function(e){var n=t.intervals[e];if(null==n)throw new h.RERR("BadArguments","Invalid interval name: ".concat(e));return n}},{key:"getCanonicalNoteName",value:function(e){if(!this.isValidNoteValue(e))throw new h.RERR("BadArguments","Invalid note value: ".concat(e));return t.canonical_notes[e]}},{key:"getCanonicalIntervalName",value:function(e){if(!this.isValidIntervalValue(e))throw new h.RERR("BadArguments","Invalid interval value: ".concat(e));return t.diatonic_intervals[e]}},{key:"getRelativeNoteValue",value:function(e,n,i){if(null==i&&(i=1),1!==i&&-1!==i)throw new h.RERR("BadArguments","Invalid direction: ".concat(i));var o=(e+i*n)%t.NUM_TONES;return o<0&&(o+=t.NUM_TONES),o}},{key:"getRelativeNoteName",value:function(e,n){var i=this.getNoteParts(e),o=this.getNoteValue(i.root),r=n-o;if(Math.abs(r)>t.NUM_TONES-3){var s=1;r>0&&(s=-1);var a=(n+1+(o+1))%t.NUM_TONES*s;if(Math.abs(a)>2)throw new h.RERR("BadArguments","Notes not related: ".concat(e,", ").concat(n,")"));r=a}if(Math.abs(r)>2)throw new h.RERR("BadArguments","Notes not related: ".concat(e,", ").concat(n,")"));var l=i.root;if(r>0)for(var u=1;u<=r;++u)l+="#";else if(r<0)for(var c=-1;c>=r;--c)l+="b";return l}},{key:"getScaleTones",value:function(t,e){for(var n=[t],i=t,o=0;o<e.length;o+=1)(i=this.getRelativeNoteValue(i,e[o]))!==t&&n.push(i);return n}},{key:"getIntervalBetween",value:function(e,n,i){if(null==i&&(i=1),1!==i&&-1!==i)throw new h.RERR("BadArguments","Invalid direction: ".concat(i));if(!this.isValidNoteValue(e)||!this.isValidNoteValue(n))throw new h.RERR("BadArguments","Invalid notes: ".concat(e,", ").concat(n));var o=1===i?n-e:e-n;return o<0&&(o+=t.NUM_TONES),o}},{key:"createScaleMap",value:function(e){var n=this.getKeyParts(e),i=t.scaleTypes[n.type],o=n.root;if(n.accidental&&(o+=n.accidental),!i)throw new h.RERR("BadArguments","Unsupported key type: "+e);for(var r=this.getScaleTones(this.getNoteValue(o),i),s=t.root_indices[n.root],a={},l=0;l<t.roots.length;++l){var u=(s+l)%t.roots.length,c=t.roots[u],f=this.getRelativeNoteName(c,r[l]);1===f.length&&(f+="n"),a[c]=f}return a}}])&&Ye(e.prototype,n),i&&Ye(e,i),t}();function He(t){return(He="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Xe(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Ue(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],i=!0,o=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){o=!0,r=t}finally{try{i||null==a.return||a.return()}finally{if(o)throw r}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Ve(t,e){return!e||"object"!==He(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ze(t){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ke(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Je(t,e,n){return e&&Ke(t.prototype,e),n&&Ke(t,n),t}function qe(t,e){return(qe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Qe(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];$e.DEBUG&&h.L("Vex.Flow.Accidental",e)}var Ze=function(t){return t.getMetrics().width},$e=function(t){function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=Ve(this,ze(e).call(this))).setAttribute("type","Accidental"),Qe("New accidental: ",n),t.note=null,t.index=null,t.type=n,t.position=de.Position.LEFT,t.render_options={font_scale:38,stroke_px:3,parenLeftPadding:2,parenRightPadding:2},t.accidental=I.accidentalCodes(t.type),!t.accidental)throw new h.RERR("ArgumentError","Unknown accidental type: ".concat(n));return t.cautionary=!1,t.parenLeft=null,t.parenRight=null,t.reset(),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&qe(t,e)}(e,de),Je(e,null,[{key:"format",value:function(t,e){var n=this,i=e.left_shift+1;if(t&&0!==t.length){for(var o=[],r=null,s=0,a=0;a<t.length;++a){var l=t[a],u=l.getNote(),c=u.getStave(),h=u.getKeyProps()[l.getIndex()];if(u!==r){for(var f=0;f<u.keys.length;++f)s=u.getKeyProps()[f].displaced?u.getExtraLeftPx():s;r=u}if(null!==c){var b=c.options.spacing_between_lines_px,p=c.getYForLine(h.line),y=Math.round(p/b*2)/2;o.push({y:p,line:y,shift:s,acc:l,lineSpace:b})}else o.push({line:h.line,shift:s,acc:l})}o.sort(function(t,e){return e.line-t.line});for(var d=[],v=0,g=null,m=0;m<o.length;m++){var _=o[m];null!==g&&g===_.line||d.push({line:_.line,flatLine:!0,dblSharpLine:!0,numAcc:0,width:0}),"b"!==_.acc.type&&"bb"!==_.acc.type&&(d[d.length-1].flatLine=!1),"##"!==_.acc.type&&(d[d.length-1].dblSharpLine=!1),d[d.length-1].numAcc++,d[d.length-1].width+=_.acc.getWidth()+3,v=_.shift>v?_.shift:v,g=_.line}for(var x=0,w=function(t){for(var e=!1,i=t,o=t;o+1<d.length&&!e;)n.checkCollision(d[o],d[o+1])?o++:e=!0;var r=function(t){return d[i+t]},s=function(t){return t.map(r)},a=function(e,n){var i=Ue(s([e,n]).map(function(t){return t.line}),2),o=i[0],r=i[1];return k=t,o-r},l=function(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];return e.map(s).every(function(t){return!n.checkCollision.apply(n,Xe(t))})},u=o-i+1,c=n.checkCollision(d[i],d[o])?"a":"b";switch(u){case 3:"a"===c&&.5===a(1,2)&&.5!==a(0,1)&&(c="second_on_bottom");break;case 4:l([0,2],[1,3])&&(c="spaced_out_tetrachord");break;case 5:"b"===c&&l([1,3])&&(c="spaced_out_pentachord",l([0,2],[2,4])&&(c="very_spaced_out_pentachord"));break;case 6:l([0,3],[1,4],[2,5])&&(c="spaced_out_hexachord"),l([0,2],[2,4],[1,3],[3,5])&&(c="very_spaced_out_hexachord")}var h=void 0,f=void 0;if(u>=7){for(var b=2,p=!0;!0===p;){p=!1;for(var y=0;y+b<d.length;y++)if(n.checkCollision(d[y],d[y+b])){p=!0,b++;break}}for(h=t;h<=o;h++)f=(h-t)%b+1,d[h].column=f,x=x>f?x:f}else for(h=t;h<=o;h++)f=I.accidentalColumnsTable[u][c][h-t],d[h].column=f,x=x>f?x:f;k=t=o},k=0;k<d.length;k++)w(k);for(var S=[],T=[],E=0;E<=x;E++)S[E]=0,T[E]=0;S[0]=v+i,T[0]=v+i,d.forEach(function(t){t.width>S[t.column]&&(S[t.column]=t.width)});for(var O=1;O<S.length;O++)T[O]=S[O]+T[O-1];var R=T[T.length-1],P=0;d.forEach(function(t){for(var e=0,n=P+t.numAcc;P<n;P++){var i=T[t.column-1]+e;o[P].acc.setXShift(i),e+=o[P].acc.getWidth()+3,Qe("Line, accCount, shift: ",t.line,P,i)}}),e.left_shift+=R}}},{key:"checkCollision",value:function(t,e){var n=e.line-t.line,i=3;n>0?(i=e.flatLine||e.dblSharpLine?2.5:3,t.dblSharpLine&&(n-=.5)):(i=t.flatLine||t.dblSharpLine?2.5:3,e.dblSharpLine&&(n-=.5));var o=Math.abs(n)<i;return Qe("Line_1, Line_2, Collision: ",t.line,e.line,o),o}},{key:"applyAccidentals",value:function(t,n){var i=[],o={};t.forEach(function(t){var e=new y(0,1);t.getTickables().forEach(function(t){if(!t.shouldIgnoreTicks()){var n=o[e.value()];n?n.push(t):(i.push(e.value()),o[e.value()]=[t]),e.add(t.getTicks())}})});var r=new We;n||(n="C");var s=r.createScaleMap(n);i.forEach(function(t){var n=o[t],i=[];n.forEach(function t(n){n.isRest()||n.shouldIgnoreTicks()||(n.keys.forEach(function(t,o){var a=r.getNoteParts(t.split("/")[0]),l=a.accidental||"n",u=a.root+l,c=s[a.root]===u,h=i.indexOf(u)>-1;if(!c||c&&h){s[a.root]=u;var f=new e(l);n.addAccidental(o,f),i.push(u)}}),n.getModifiers().forEach(function(e){"gracenotegroups"===e.getCategory()&&e.getGraceNotes().forEach(t)}))})})}},{key:"CATEGORY",get:function(){return"accidentals"}}]),Je(e,[{key:"reset",value:function(){var t=this.render_options.font_scale;this.glyph=new j(this.accidental.code,t),this.glyph.setOriginX(1),this.cautionary&&(this.parenLeft=new j(I.accidentalCodes("{").code,t),this.parenRight=new j(I.accidentalCodes("}").code,t),this.parenLeft.setOriginX(1),this.parenRight.setOriginX(1))}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getWidth",value:function(){var t=this.cautionary?Ze(this.parenLeft)+Ze(this.parenRight)+this.render_options.parenLeftPadding+this.render_options.parenRightPadding:0;return Ze(this.glyph)+t}},{key:"setNote",value:function(t){if(!t)throw new h.RERR("ArgumentError","Bad note value: ".concat(t));this.note=t,"gracenotes"===this.note.getCategory()&&(this.render_options.font_scale=25,this.reset())}},{key:"setAsCautionary",value:function(){return this.cautionary=!0,this.render_options.font_scale=28,this.reset(),this}},{key:"draw",value:function(){var t=this.context,e=this.type,n=this.position,i=this.note,o=this.index,r=this.cautionary,s=this.x_shift,a=this.y_shift,l=this.glyph,u=this.parenLeft,c=this.parenRight,f=this.render_options,b=f.parenLeftPadding,p=f.parenRightPadding;if(this.checkContext(),!i||null==o)throw new h.RERR("NoAttachedNote","Can't draw accidental without a note and index.");var y=i.getModifierStartXY(n,o),d=y.x+s,v=y.y+a;Qe("Rendering: ",e,d,v),r?(c.render(t,d,v),d-=Ze(c),d-=p,d-=this.accidental.parenRightPaddingAdjustment,l.render(t,d,v),d-=Ze(l),d-=b,u.render(t,d,v)):l.render(t,d,v),this.setRendered()}}]),e}();function tn(t){return(tn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function en(t,e){return!e||"object"!==tn(e)&&"function"!=typeof e?on(t):e}function nn(t){return(nn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function on(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function rn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function sn(t,e,n){return e&&rn(t.prototype,e),n&&rn(t,n),t}function an(t,e){return(an=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ln=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=en(this,nn(e).call(this))).setAttribute("type","NoteSubGroup"),n.note=null,n.index=null,n.position=de.Position.LEFT,n.subNotes=t,n.subNotes.forEach(function(t){t.ignore_ticks=!1}),n.width=0,n.preFormatted=!1,n.formatter=new qi,n.voice=new Rt({num_beats:4,beat_value:4,resolution:I.RESOLUTION}).setStrict(!1),n.voice.addTickables(n.subNotes),en(n,on(n))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&an(t,e)}(e,de),sn(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=0;i<t.length;++i){var o=t[i];o.preFormat(),n+=o.getWidth()}return e.left_shift+=n,!0}},{key:"CATEGORY",get:function(){return"notesubgroup"}}]),sn(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"preFormat",value:function(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}},{key:"setNote",value:function(t){this.note=t}},{key:"setWidth",value:function(t){this.width=t}},{key:"getWidth",value:function(){return this.width}},{key:"draw",value:function(){var t=this;this.checkContext();var e=this.getNote();if(!e||null===this.index)throw new h.RuntimeError("NoAttachedNote","Can't draw notes without a parent note and parent note index.");this.setRendered(),this.alignSubNotesWithNote(this.subNotes,e),this.subNotes.forEach(function(e){return e.setContext(t.context).draw()})}}]),e}();function un(t){return(un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function cn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function hn(t,e){return!e||"object"!==un(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function fn(t){return(fn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function bn(t,e){return(bn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var pn=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=hn(this,fn(e).call(this))).setAttribute("type","StaveTie"),i.notes=t,i.context=null,i.text=n,i.direction=null,i.render_options={cp1:8,cp2:12,text_shift_x:0,first_x_shift:0,last_x_shift:0,y_shift:7,tie_spacing:0,font:{family:"Arial",size:10,style:""}},i.font=i.render_options.font,i.setNotes(t),i}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&bn(t,e)}(e,k),n=e,(i=[{key:"setFont",value:function(t){return this.font=t,this}},{key:"setDirection",value:function(t){return this.direction=t,this}},{key:"setNotes",value:function(t){if(!t.first_note&&!t.last_note)throw new h.RuntimeError("BadArguments","Tie needs to have either first_note or last_note set.");if(t.first_indices||(t.first_indices=[0]),t.last_indices||(t.last_indices=[0]),t.first_indices.length!==t.last_indices.length)throw new h.RuntimeError("BadArguments","Tied notes must have similar index sizes");return this.first_note=t.first_note,this.first_indices=t.first_indices,this.last_note=t.last_note,this.last_indices=t.last_indices,this}},{key:"isPartial",value:function(){return!this.first_note||!this.last_note}},{key:"renderTie",value:function(t){if(0===t.first_ys.length||0===t.last_ys.length)throw new h.RERR("BadArguments","No Y-values to render");var e=this.context,n=this.render_options.cp1,i=this.render_options.cp2;Math.abs(t.last_x_px-t.first_x_px)<10&&(n=2,i=8);for(var o=this.render_options.first_x_shift,r=this.render_options.last_x_shift,s=this.render_options.y_shift*t.direction,a=0;a<this.first_indices.length;++a){var l=(t.last_x_px+r+(t.first_x_px+o))/2,u=t.first_ys[this.first_indices[a]]+s,c=t.last_ys[this.last_indices[a]]+s;if(isNaN(u)||isNaN(c))throw new h.RERR("BadArguments","Bad indices for tie rendering.");var f=(u+c)/2+n*t.direction,b=(u+c)/2+i*t.direction;e.beginPath(),e.moveTo(t.first_x_px+o,u),e.quadraticCurveTo(l,f,t.last_x_px+r,c),e.quadraticCurveTo(l,b,t.first_x_px+o,u),e.closePath(),e.fill()}}},{key:"renderText",value:function(t,e){if(this.text){var n=(t+e)/2;n-=this.context.measureText(this.text).width/2,this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.style),this.context.fillText(this.text,n+this.render_options.text_shift_x,(this.first_note||this.last_note).getStave().getYForTopText()-1),this.context.restore()}}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t,e,n,i,o,r=this.first_note,s=this.last_note;return r?(t=r.getTieRightX()+this.render_options.tie_spacing,o=r.getStemDirection(),n=r.getYs()):(t=s.getStave().getTieStartX(),n=s.getYs(),this.first_indices=this.last_indices),s?(e=s.getTieLeftX()+this.render_options.tie_spacing,o=s.getStemDirection(),i=s.getYs()):(e=r.getStave().getTieEndX(),i=r.getYs(),this.last_indices=this.first_indices),this.direction&&(o=this.direction),this.renderTie({first_x_px:t,last_x_px:e,first_ys:n,last_ys:i,direction:o}),this.renderText(t,e),!0}}])&&cn(n.prototype,i),o&&cn(n,o),e}();function yn(t){return(yn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function dn(t,e){return!e||"object"!==yn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function vn(t){return(vn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function gn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function mn(t,e,n){return e&&gn(t.prototype,e),n&&gn(t,n),t}function _n(t,e){return(_n=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var xn=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=dn(this,vn(e).call(this,t,n))).setAttribute("type","TabTie"),i.render_options.cp1=9,i.render_options.cp2=11,i.render_options.y_shift=3,i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_n(t,e)}(e,pn),mn(e,null,[{key:"createHammeron",value:function(t){return new e(t,"H")}},{key:"createPulloff",value:function(t){return new e(t,"P")}}]),mn(e,[{key:"draw",value:function(){this.checkContext(),this.setRendered();var t,e,n,i,o=this.first_note,r=this.last_note;return o?(t=o.getTieRightX()+this.render_options.tie_spacing,n=o.getYs()):(t=r.getStave().getTieStartX(),n=r.getYs(),this.first_indices=this.last_indices),r?(e=r.getTieLeftX()+this.render_options.tie_spacing,i=r.getYs()):(e=o.getStave().getTieEndX(),i=o.getYs(),this.last_indices=this.first_indices),this.renderTie({first_x_px:t,last_x_px:e,first_ys:n,last_ys:i,direction:-1}),this.renderText(t,e),!0}}]),e}();function wn(t){return(wn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function kn(t,e){return!e||"object"!==wn(e)&&"function"!=typeof e?Tn(t):e}function Sn(t){return(Sn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Tn(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function En(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function On(t,e,n){return e&&En(t.prototype,e),n&&En(t,n),t}function Rn(t,e){return(Rn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Pn=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=kn(this,Sn(e).call(this))).setAttribute("type","GraceNoteGroup"),i.note=null,i.index=null,i.position=de.Position.LEFT,i.grace_notes=t,i.width=0,i.preFormatted=!1,i.show_slur=n,i.slur=null,i.formatter=new qi,i.voice=new Rt({num_beats:4,beat_value:4,resolution:I.RESOLUTION}).setStrict(!1),i.render_options={slur_y_shift:0},i.beams=[],i.voice.addTickables(i.grace_notes),kn(i,Tn(i))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Rn(t,e)}(e,de),On(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=[],i=null,o=0,r=0;r<t.length;++r){var s=t[r],a=s.getNote(),l=a.getCategory()===Le.CATEGORY,u=l?4:0;if(l&&a!==i){for(var c=0;c<a.keys.length;++c){o=a.getKeyProps()[c].displaced?a.getExtraLeftPx():o}i=a}n.push({shift:o,gracenote_group:s,spacing:u})}for(var h,f=n[0].shift,b=0;b<n.length;++b){var p=n[b].gracenote_group;p.preFormat(),h=p.getWidth()+n[b].spacing,f=Math.max(h,f)}for(var y=0;y<n.length;++y){var d=n[y].gracenote_group;h=d.getWidth()+n[y].spacing,d.setSpacingFromNextModifier(f-Math.min(h,f))}return e.left_shift+=f,!0}},{key:"CATEGORY",get:function(){return"gracenotegroups"}}]),On(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"preFormat",value:function(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}},{key:"beamNotes",value:function(t){if((t=t||this.grace_notes).length>1){var e=new xt(t);e.render_options.beam_width=3,e.render_options.partial_beam_length=4,this.beams.push(e)}return this}},{key:"setNote",value:function(t){this.note=t}},{key:"setWidth",value:function(t){this.width=t}},{key:"getWidth",value:function(){return this.width}},{key:"getGraceNotes",value:function(){return this.grace_notes}},{key:"draw",value:function(){var t=this;this.checkContext();var e=this.getNote();if(function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Pn.DEBUG&&h.L("Vex.Flow.GraceNoteGroup",e)}("Drawing grace note group for:",e),!e||null===this.index)throw new h.RuntimeError("NoAttachedNote","Can't draw grace note without a parent note and parent note index.");if(this.setRendered(),this.alignSubNotesWithNote(this.getGraceNotes(),e),this.grace_notes.forEach(function(e){e.setContext(t.context).draw()}),this.beams.forEach(function(e){e.setContext(t.context).draw()}),this.show_slur){var n=this.getNote().getCategory()===Le.CATEGORY,i=n?pn:xn;this.slur=new i({last_note:this.grace_notes[0],first_note:e,first_indices:[0],last_indices:[0]}),this.slur.render_options.cp2=12,this.slur.render_options.y_shift=(n?7:5)+this.render_options.slur_y_shift,this.slur.setContext(this.context).draw()}}}]),e}();function Cn(t){return(Cn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Nn(t,e){return!e||"object"!==Cn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function An(t){return(An=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ln(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Mn(t,e,n){return e&&Ln(t.prototype,e),n&&Ln(t,n),t}function Fn(t,e){return(Fn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Bn=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=Nn(this,An(e).call(this))).setAttribute("type","Stroke"),i.note=null,i.options=h.Merge({},n),i.all_voices=!("all_voices"in i.options)||i.options.all_voices,i.note_end=null,i.index=null,i.type=t,i.position=de.Position.LEFT,i.render_options={font_scale:38,stroke_px:3,stroke_spacing:10},i.font={family:"serif",size:10,weight:"bold italic"},i.setXShift(0),i.setWidth(10),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Fn(t,e)}(e,de),Mn(e,null,[{key:"format",value:function(t,e){var n=e.left_shift;if(!t||0===t.length)return this;var i=t.map(function(t){var e=t.getNote();if(e instanceof Le){var n=e.getKeyProps()[t.getIndex()];return{line:n.line,shift:n.displaced?e.getExtraLeftPx():0,stroke:t}}return{line:e.getPositions()[t.getIndex()].str,shift:0,stroke:t}}),o=n,r=i.reduce(function(t,e){var n=e.stroke,i=e.shift;return n.setXShift(o+i),Math.max(n.getWidth()+0,t)},0);return e.left_shift+=r,!0}},{key:"CATEGORY",get:function(){return"strokes"}},{key:"Type",get:function(){return{BRUSH_DOWN:1,BRUSH_UP:2,ROLL_DOWN:3,ROLL_UP:4,RASQUEDO_DOWN:5,RASQUEDO_UP:6,ARPEGGIO_DIRECTIONLESS:7}}}]),Mn(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getPosition",value:function(){return this.position}},{key:"addEndNote",value:function(t){return this.note_end=t,this}},{key:"draw",value:function(){if(this.checkContext(),this.setRendered(),!this.note||null==this.index)throw new h.RERR("NoAttachedNote","Can't draw stroke without a note and index.");for(var t,n,i,o,r,s=this.note.getModifierStartXY(this.position,this.index),a=this.note.getYs(),l=s.y,u=s.y,c=s.x-5,f=this.note.stave.options.spacing_between_lines_px,b=this.getModifierContext().getModifiers(this.note.getCategory()),p=0;p<b.length;p++){a=b[p].getYs();for(var y=0;y<a.length;y++)(this.note===b[p]||this.all_voices)&&(l=h.Min(l,a[y]),u=h.Max(u,a[y]))}switch(this.type){case e.Type.BRUSH_DOWN:t="vc3",n=-3,i=l-f/2+10,u+=f/2;break;case e.Type.BRUSH_UP:t="v11",n=.5,i=u+f/2,l-=f/2;break;case e.Type.ROLL_DOWN:case e.Type.RASQUEDO_DOWN:t="vc3",n=-3,o=this.x_shift+n-2,this.note instanceof Le?(i=(l+=1.5*f)-f,r=(u+=(u-l)%2!=0?.5*f:f)+f+2):(i=(l+=1.5*f)-.75*f,r=(u+=f)+.25*f);break;case e.Type.ROLL_UP:case e.Type.RASQUEDO_UP:t="v52",n=-4,o=this.x_shift+n-1,this.note instanceof Le?(i=f/2,(u-(l+=.5*f))%2==0&&(u+=f/2),i=u+.5*f,r=l-1.25*f):(i=(u+=.5*f)+.25*f,r=(l+=.25*f)-f);break;case e.Type.ARPEGGIO_DIRECTIONLESS:l+=.5*f,u+=f;break;default:throw new h.RERR("InvalidType","The stroke type ".concat(this.type," does not exist"))}if(this.type===e.Type.BRUSH_DOWN||this.type===e.Type.BRUSH_UP)this.context.fillRect(c+this.x_shift,l,1,u-l);else if(this.note instanceof Le)for(var d=l;d<=u;d+=f)j.renderGlyph(this.context,c+this.x_shift-4,d,this.render_options.font_scale,"va3");else{var v;for(v=l;v<=u;v+=10)j.renderGlyph(this.context,c+this.x_shift-4,v,this.render_options.font_scale,"va3");this.type===e.Type.RASQUEDO_DOWN&&(r=v+.25*f)}this.type!==e.Type.ARPEGGIO_DIRECTIONLESS&&(j.renderGlyph(this.context,c+this.x_shift+n,i,this.render_options.font_scale,t),this.type!==e.Type.RASQUEDO_DOWN&&this.type!==e.Type.RASQUEDO_UP||(this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight),this.context.fillText("R",c+o,r),this.context.restore()))}}]),e}();function jn(t){return(jn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Dn(t,e){return!e||"object"!==jn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function In(t){return(In=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Gn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Yn(t,e,n){return e&&Gn(t.prototype,e),n&&Gn(t,n),t}function Wn(t,e){return(Wn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Hn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Dn(this,In(e).call(this))).setAttribute("type","StringNumber"),n.note=null,n.last_note=null,n.index=null,n.string_number=t,n.setWidth(20),n.position=de.Position.ABOVE,n.x_shift=0,n.y_shift=0,n.x_offset=0,n.y_offset=0,n.dashed=!0,n.leg=Z.LineEndType.NONE,n.radius=8,n.font={family:"sans-serif",size:10,weight:"bold"},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Wn(t,e)}(e,de),Yn(e,null,[{key:"format",value:function(t,e){var n=e.left_shift,i=e.right_shift;if(!t||0===t.length)return this;var o,r,s,a,l,u=[],c=null,h=0,f=0;for(o=0;o<t.length;++o)for(s=(r=t[o]).getNote(),o=0;o<t.length;++o){s=(r=t[o]).getNote(),a=r.getPosition();var b=s.getKeyProps()[r.getIndex()];if(s!==c){for(var p=0;p<s.keys.length;++p)l=s.getKeyProps()[p],0===n&&(h=l.displaced?s.getExtraLeftPx():h),0===i&&(f=l.displaced?s.getExtraRightPx():f);c=s}u.push({pos:a,note:s,num:r,line:b.line,shiftL:h,shiftR:f})}u.sort(function(t,e){return e.line-t.line});var y=0,d=0,v=0,g=null,m=null;for(o=0;o<u.length;++o){var _=0;s=u[o].note,a=u[o].pos,r=u[o].num;var x=u[o].line,w=u[o].shiftL,k=u[o].shiftR;x===g&&s===m||(n+w,y=i+k);var S=r.getWidth()+1;a===de.Position.LEFT?(r.setXShift(n),d=(_=h+S)>d?_:d):a===de.Position.RIGHT&&(r.setXShift(y),v=(_+=S)>v?_:v),g=x,m=s}return e.left_shift+=d,e.right_shift+=v,!0}},{key:"CATEGORY",get:function(){return"stringnumber"}}]),Yn(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getNote",value:function(){return this.note}},{key:"setNote",value:function(t){return this.note=t,this}},{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(t){return this.index=t,this}},{key:"setLineEndType",value:function(t){return t>=Z.LineEndType.NONE&&t<=Z.LineEndType.DOWN&&(this.leg=t),this}},{key:"setStringNumber",value:function(t){return this.string_number=t,this}},{key:"setOffsetX",value:function(t){return this.x_offset=t,this}},{key:"setOffsetY",value:function(t){return this.y_offset=t,this}},{key:"setLastNote",value:function(t){return this.last_note=t,this}},{key:"setDashed",value:function(t){return this.dashed=t,this}},{key:"draw",value:function(){var t=this.checkContext();if(!this.note||null==this.index)throw new h.RERR("NoAttachedNote","Can't draw string number without a note and index.");this.setRendered();var e=this.note.stave.options.spacing_between_lines_px,n=this.note.getModifierStartXY(this.position,this.index),i=n.x+this.x_shift+this.x_offset,o=n.y+this.y_shift+this.y_offset;switch(this.position){case de.Position.ABOVE:case de.Position.BELOW:var r=this.note.getStemExtents(),s=r.topY,a=r.baseY+2;this.note.stem_direction===Le.STEM_DOWN&&(s=r.baseY,a=r.topY-2),o=this.position===de.Position.ABOVE?this.note.hasStem()?s-1.75*e:n.y-1.75*e:this.note.hasStem()?a+1.5*e:n.y+1.75*e,o+=this.y_shift+this.y_offset;break;case de.Position.LEFT:i-=this.radius/2+5;break;case de.Position.RIGHT:i+=this.radius/2+6;break;default:throw new h.RERR("InvalidPosition","The position ".concat(this.position," is invalid"))}t.save(),t.beginPath(),t.arc(i,o,this.radius,0,2*Math.PI,!1),t.lineWidth=1.5,t.stroke(),t.setFont(this.font.family,this.font.size,this.font.weight);var l=i-t.measureText(this.string_number).width/2;if(t.fillText(""+this.string_number,l,o+4.5),null!=this.last_note){var u,c,f=this.last_note.getStemX()-this.note.getX()+5;switch(t.strokeStyle="#000000",t.lineCap="round",t.lineWidth=.6,this.dashed?Z.drawDashedLine(t,i+10,o,i+f,o,[3,3]):Z.drawDashedLine(t,i+10,o,i+f,o,[3,0]),this.leg){case Z.LineEndType.UP:u=-10,c=this.dashed?[3,3]:[3,0],Z.drawDashedLine(t,i+f,o,i+f,o+u,c);break;case Z.LineEndType.DOWN:u=10,c=this.dashed?[3,3]:[3,0],Z.drawDashedLine(t,i+f,o,i+f,o+u,c)}}t.restore()}}]),e}();function Xn(t){return(Xn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Un(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Vn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],i=!0,o=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){o=!0,r=t}finally{try{i||null==a.return||a.return()}finally{if(o)throw r}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function zn(t,e){return!e||"object"!==Xn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Kn(t){return(Kn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Jn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function qn(t,e,n){return e&&Jn(t.prototype,e),n&&Jn(t,n),t}function Qn(t,e){return(Qn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Zn(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var $n=de.Position,ti=$n.ABOVE,ei=$n.BELOW,ni=function(t,e){return.5*t(e/.5)},ii=function(t,e){return e===ti?t<=5:t>=1},oi=function(t,e){return ii(t,e)?e===ti?Math.ceil:Math.floor:Math.round},ri=function(t){var e=t.getCategory();return"stavenotes"===e||"gracenotes"===e},si=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=zn(this,Kn(e).call(this))).setAttribute("type","Articulation"),n.note=null,n.index=null,n.type=t,n.position=ei,n.render_options={font_scale:38},n.articulation=I.articulationCodes(n.type),!n.articulation)throw new h.RERR("ArgumentError","Articulation not found: ".concat(n.type));return n.glyph=new j(n.articulation.code,n.render_options.font_scale),n.setWidth(n.glyph.getMetrics().width),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Qn(t,e)}(e,de),qn(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;var n=function(t,e,n){return ni(oi(e,n),t.glyph.getMetrics().height/10+.5)};t.filter(function(t){return t.getPosition()===ti}).forEach(function(t){t.setTextLine(e.top_text_line),e.top_text_line+=n(t,e.top_text_line,ti)}),t.filter(function(t){return t.getPosition()===ei}).forEach(function(t){t.setTextLine(e.text_line),e.text_line+=n(t,e.text_line,ei)});var i=t.map(function(t){return t.getWidth()}).reduce(function(t,e){return Math.max(e,t)});return e.left_shift+=i/2,e.right_shift+=i/2,!0}},{key:"easyScoreHook",value:function(t,e,n){var i=t.articulations;if(i){var o={staccato:"a.",tenuto:"a-"};i.split(",").map(function(t){return t.trim().split(".")}).map(function(t){var e=Vn(t,2),i=e[0],r=e[1],s={type:o[i]};return r&&(s.position=de.PositionString[r]),n.getFactory().Articulation(s)}).map(function(t){return e.addModifier(0,t)})}}},{key:"CATEGORY",get:function(){return"articulations"}},{key:"INITIAL_OFFSET",get:function(){return-.5}}]),qn(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){var t,n=this.note,i=this.index,o=this.position,r=this.glyph,s=this.articulation.between_lines,a=this.text_line,l=this.context;if(this.checkContext(),!n||null==i)throw new h.RERR("NoAttachedNote","Can't draw Articulation without a note and index.");this.setRendered();var u=n.getStave(),c=u.getSpacingBetweenLines(),f="tabnotes"===n.getCategory(),b=n.getModifierStartXY(o,i).x,p=!s||f,y=function(t,e){var n=e===ti&&t.getStemDirection()===rt.UP||e===ei&&t.getStemDirection()===rt.DOWN;return ri(t)?t.hasStem()&&n?.5:1:t.hasStem()&&n?1:0}(n,o),d=(t={},Un(t,ti,function(){r.setOrigin(.5,1);var t=function(t,e){var n=t.getStave(),i=t.getStemDirection(),o=t.getStemExtents(),r=o.topY,s=o.baseY;if(ri(t))return t.hasStem()?i===rt.UP?r:s:Math.min.apply(Math,Zn(t.getYs()));if("tabnotes"===t.getCategory())return t.hasStem()&&i===rt.UP?r:n.getYForTopText(e);throw new h.RERR("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}(n,a)-(a+y)*c;return p?Math.min(u.getYForTopText(e.INITIAL_OFFSET),t):t}),Un(t,ei,function(){r.setOrigin(.5,0);var t=function(t,e){var n=t.getStave(),i=t.getStemDirection(),o=t.getStemExtents(),r=o.topY,s=o.baseY;if(ri(t))return t.hasStem()?i===rt.UP?s:r:Math.max.apply(Math,Zn(t.getYs()));if("tabnotes"===t.getCategory())return t.hasStem()?i===rt.UP?n.getYForBottomText(e):r:n.getYForBottomText(e);throw new h.RERR("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}(n,a)+(a+y)*c;return p?Math.max(u.getYForBottomText(e.INITIAL_OFFSET),t):t}),t)[o]();if(!f){var v=o===ti?-1:1,g=f?n.positions[i].str:n.getKeyProps()[i].line,m=(n.getYs()[i]-d)/c+g,_=function(t,e,n,i){var o=ni(oi(e,n),e);if(t&&ii(o,n)&&o%1==0)return o+.5*-i;return o}(s,m,o,v);ii(_,o)&&r.setOrigin(.5,.5),d+=Math.abs(_-m)*c*v}!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];si.DEBUG&&h.L("Vex.Flow.Articulation",e)}("Rendering articulation at (x: ".concat(b,", y: ").concat(d,")")),r.render(l,b,d)}}]),e}();function ai(t){return(ai="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function li(t,e){return!e||"object"!==ai(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ui(t){return(ui=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ci(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function hi(t,e,n){return e&&ci(t.prototype,e),n&&ci(t,n),t}function fi(t,e){return(fi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var bi=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=li(this,ui(e).call(this))).setAttribute("type","TickContext"),t.currentTick=new y(0,1),t.maxTicks=new y(0,1),t.minTicks=null,t.padding=3,t.x=0,t.xBase=0,t.xOffset=0,t.tickables=[],t.notePx=0,t.extraLeftPx=0,t.extraRightPx=0,t.tContexts=[],t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&fi(t,e)}(e,Wt),hi(e,null,[{key:"getNextContext",value:function(t){var e=t.tContexts,n=e.indexOf(t);return e[n+1]}}]),hi(e,[{key:"getX",value:function(){return this.x}},{key:"setX",value:function(t){return this.x=t,this.xBase=t,this.xOffset=0,this}},{key:"getXBase",value:function(){return this.xBase}},{key:"setXBase",value:function(t){this.xBase=t,this.x=t+this.xOffset}},{key:"getXOffset",value:function(){return this.xOffset}},{key:"setXOffset",value:function(t){this.xOffset=t,this.x=this.xBase+t}},{key:"getWidth",value:function(){return this.width+2*this.padding}},{key:"setPadding",value:function(t){return this.padding=t,this}},{key:"getMaxTicks",value:function(){return this.maxTicks}},{key:"getMinTicks",value:function(){return this.minTicks}},{key:"getTickables",value:function(){return this.tickables}},{key:"getCenterAlignedTickables",value:function(){return this.tickables.filter(function(t){return t.isCenterAligned()})}},{key:"getMetrics",value:function(){return{width:this.width,notePx:this.notePx,extraLeftPx:this.extraLeftPx,extraRightPx:this.extraRightPx}}},{key:"getCurrentTick",value:function(){return this.currentTick}},{key:"setCurrentTick",value:function(t){this.currentTick=t,this.preFormatted=!1}},{key:"getExtraPx",value:function(){for(var t=0,e=0,n=0,i=0,o=0;o<this.tickables.length;o++){n=Math.max(this.tickables[o].extraLeftPx||0,n),i=Math.max(this.tickables[o].extraRightPx||0,i);var r=this.tickables[o].modifierContext;r&&null!=r&&(t=Math.max(t,r.state.left_shift),e=Math.max(e,r.state.right_shift))}return{left:t,right:e,extraLeft:n,extraRight:i}}},{key:"addTickable",value:function(t){if(!t)throw new h.RERR("BadArgument","Invalid tickable added.");if(!t.shouldIgnoreTicks()){this.ignore_ticks=!1;var e=t.getTicks();e.greaterThan(this.maxTicks)&&(this.maxTicks=e.clone()),null==this.minTicks?this.minTicks=e.clone():e.lessThan(this.minTicks)&&(this.minTicks=e.clone())}return t.setTickContext(this),this.tickables.push(t),this.preFormatted=!1,this}},{key:"preFormat",value:function(){if(this.preFormatted)return this;for(var t=0;t<this.tickables.length;++t){var e=this.tickables[t];e.preFormat();var n=e.getMetrics();this.extraLeftPx=Math.max(this.extraLeftPx,n.extraLeftPx+n.modLeftPx),this.extraRightPx=Math.max(this.extraRightPx,n.extraRightPx+n.modRightPx),this.notePx=Math.max(this.notePx,n.noteWidth),this.width=this.notePx+this.extraLeftPx+this.extraRightPx}return this}},{key:"postFormat",value:function(){return this.postFormatted?this:(this.postFormatted=!0,this)}}]),e}();function pi(t){return(pi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function yi(t,e){return!e||"object"!==pi(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function di(t){return(di=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function vi(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function gi(t,e,n){return e&&vi(t.prototype,e),n&&vi(t,n),t}function mi(t,e){return(mi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var _i=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=yi(this,di(e).call(this))).setAttribute("type","Ornament"),n.note=null,n.index=null,n.type=t,n.position=de.Position.ABOVE,n.delayed=!1,n.accidentalUpper=null,n.accidentalLower=null,n.render_options={font_scale:38,accidentalLowerPadding:3,accidentalUpperPadding:3},n.ornament=I.ornamentCodes(n.type),!n.ornament)throw new h.RERR("ArgumentError","Ornament not found: '".concat(n.type,"'"));return n.glyph=new j(n.ornament.code,n.render_options.font_scale),n.glyph.setOrigin(.5,1),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&mi(t,e)}(e,de),gi(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=0;i<t.length;++i){var o=t[i];n=Math.max(o.getWidth(),n),o.getPosition()===de.Position.ABOVE?(o.setTextLine(e.top_text_line),e.top_text_line+=2):(o.setTextLine(e.text_line),e.text_line+=2)}return e.left_shift+=n/2,e.right_shift+=n/2,!0}},{key:"CATEGORY",get:function(){return"ornaments"}}]),gi(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setDelayed",value:function(t){return this.delayed=t,this}},{key:"setUpperAccidental",value:function(t){var e=this.render_options.font_scale/1.3;return this.accidentalUpper=new j(I.accidentalCodes(t).code,e),this.accidentalUpper.setOrigin(.5,1),this}},{key:"setLowerAccidental",value:function(t){var e=this.render_options.font_scale/1.3;return this.accidentalLower=new j(I.accidentalCodes(t).code,e),this.accidentalLower.setOrigin(.5,1),this}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new h.RERR("NoAttachedNote","Can't draw Ornament without a note and index.");this.setRendered();var t=this.context,e=this.note.getStemDirection(),n=this.note.getStave(),i=this.note.getStem().getExtents(),o=e===Le.STEM_DOWN?i.baseY:i.topY;"tabnotes"===this.note.getCategory()&&(this.note.hasStem()?e===Le.STEM_DOWN&&(o=n.getYForTopText(this.text_line)):o=n.getYForTopText(this.text_line));var r=e===Le.STEM_DOWN,s=n.getSpacingBetweenLines(),a=1;!r&&this.note.beam&&(a+=.5);var l=o-s*(this.text_line+a),u=this.note.getModifierStartXY(this.position,this.index).x,c=Math.min(n.getYForTopText(this.text_line),l);if(c+=this.y_shift,this.delayed){var f=0;if(void 0!==this.delayXShift)f=this.delayXShift;else{f+=this.glyph.getMetrics().width/2;var b=bi.getNextContext(this.note.getTickContext());f+=b?.5*(b.getX()-u):.5*(n.x+n.width-u),this.delayXShift=f}u+=f}!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];_i.DEBUG&&h.L("Vex.Flow.Ornament",e)}("Rendering ornament: ",this.ornament,u,c),this.accidentalLower&&(this.accidentalLower.render(t,u,c),c-=this.accidentalLower.getMetrics().height,c-=this.render_options.accidentalLowerPadding),this.glyph.render(t,u,c),c-=this.glyph.getMetrics().height,this.accidentalUpper&&(c-=this.render_options.accidentalUpperPadding,this.accidentalUpper.render(t,u,c))}}]),e}();function xi(t){return(xi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function wi(t,e){return!e||"object"!==xi(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ki(t){return(ki=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Si(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ti(t,e,n){return e&&Si(t.prototype,e),n&&Si(t,n),t}function Ei(t,e){return(Ei=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Oi=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=wi(this,ki(e).call(this))).setAttribute("type","Annotation"),n.note=null,n.index=null,n.text=t,n.justification=e.Justify.CENTER,n.vert_justification=e.VerticalJustify.TOP,n.font={family:"Arial",size:10,weight:""},n.setWidth(I.textWidth(t)),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ei(t,e)}(e,de),Ti(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=0;i<t.length;++i){var o=t[i];n=Math.max(o.getWidth(),n),o.getPosition()===de.Position.ABOVE?(o.setTextLine(e.top_text_line),e.top_text_line++):(o.setTextLine(e.text_line),e.text_line++)}return e.left_shift+=n/2,e.right_shift+=n/2,!0}},{key:"CATEGORY",get:function(){return"annotations"}},{key:"Justify",get:function(){return{LEFT:1,CENTER:2,RIGHT:3,CENTER_STEM:4}}},{key:"JustifyString",get:function(){return{left:e.Justify.LEFT,right:e.Justify.RIGHT,center:e.Justify.CENTER,centerStem:e.Justify.CENTER_STEM}}},{key:"VerticalJustify",get:function(){return{TOP:1,CENTER:2,BOTTOM:3,CENTER_STEM:4}}},{key:"VerticalJustifyString",get:function(){return{above:e.VerticalJustify.TOP,top:e.VerticalJustify.TOP,below:e.VerticalJustify.BOTTOM,bottom:e.VerticalJustify.BOTTOM,center:e.VerticalJustify.CENTER,centerStem:e.VerticalJustify.CENTER_STEM}}}]),Ti(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setFont",value:function(t,e,n){return this.font={family:t,size:e,weight:n},this}},{key:"setVerticalJustification",value:function(t){return this.vert_justification="string"==typeof t?e.VerticalJustifyString[t]:t,this}},{key:"getJustification",value:function(){return this.justification}},{key:"setJustification",value:function(t){return this.justification="string"==typeof t?e.JustifyString[t]:t,this}},{key:"draw",value:function(){if(this.checkContext(),!this.note)throw new h.RERR("NoNoteForAnnotation","Can't draw text annotation without an attached note.");this.setRendered();var t=this.note.getModifierStartXY(de.Position.ABOVE,this.index);this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight);var n,i,o,r,s=this.context.measureText(this.text).width,a=this.context.measureText("m").width;n=this.justification===e.Justify.LEFT?t.x:this.justification===e.Justify.RIGHT?t.x-s:this.justification===e.Justify.CENTER?t.x-s/2:this.note.getStemX()-s/2;var l=this.note.hasStem(),u=this.note.getStave();if(l&&(o=this.note.getStem().getExtents(),r=u.getSpacingBetweenLines()),this.vert_justification===e.VerticalJustify.BOTTOM){if(i=u.getYForBottomText(this.text_line+I.TEXT_HEIGHT_OFFSET_HACK),l){var c=1===this.note.getStemDirection()?o.baseY:o.topY;i=Math.max(i,c+r*(this.text_line+2))}}else if(this.vert_justification===e.VerticalJustify.CENTER){var f=this.note.getYForTopText(this.text_line)-1;i=f+(u.getYForBottomText(this.text_line)-f)/2+a/2}else if(this.vert_justification===e.VerticalJustify.TOP)i=Math.min(u.getYForTopText(this.text_line),this.note.getYs()[0]-10),l&&(i=Math.min(i,o.topY-5-r*this.text_line));else{var b=this.note.getStemExtents();i=b.topY+(b.baseY-b.topY)/2+a/2}!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Oi.DEBUG&&h.L("Vex.Flow.Annotation",e)}("Rendering annotation: ",this.text,n,i),this.context.fillText(this.text,n,i),this.context.restore()}}]),e}();function Ri(t){return(Ri="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Pi(t,e){return!e||"object"!==Ri(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ci(t){return(Ci=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ni(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ai(t,e,n){return e&&Ni(t.prototype,e),n&&Ni(t,n),t}function Li(t,e){return(Li=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Mi=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=Pi(this,Ci(e).call(this))).setAttribute("type","Bend"),o.text=t,o.x_shift=0,o.release=n||!1,o.font="10pt Arial",o.render_options={line_width:1.5,line_style:"#777777",bend_width:8,release_width:8},i?o.phrase=i:(o.phrase=[{type:e.UP,text:o.text}],o.release&&o.phrase.push({type:e.DOWN,text:""})),o.updateWidth(),o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Li(t,e)}(e,de),Ai(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=e.top_text_line,o=0;o<t.length;++o){var r=t[o];r.setXShift(n),n=r.getWidth(),r.setTextLine(i)}return e.right_shift+=n,e.top_text_line+=1,!0}},{key:"CATEGORY",get:function(){return"bends"}},{key:"UP",get:function(){return 0}},{key:"DOWN",get:function(){return 1}}]),Ai(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setXShift",value:function(t){this.x_shift=t,this.updateWidth()}},{key:"setFont",value:function(t){return this.font=t,this}},{key:"getText",value:function(){return this.text}},{key:"updateWidth",value:function(){var t=this;for(var n,i=0,o=0;o<this.phrase.length;++o){var r=this.phrase[o];if("width"in r)i+=r.width;else{var s=r.type===e.UP?this.render_options.bend_width:this.render_options.release_width;r.width=h.Max(s,(n=r.text,t.context?t.context.measureText(n).width:I.textWidth(n)))+3,r.draw_width=r.width/2,i+=r.width}}return this.setWidth(i+this.x_shift),this}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new h.RERR("NoNoteForBend","Can't draw bend without a note or index.");this.setRendered();var t=this.note.getModifierStartXY(de.Position.RIGHT,this.index);t.x+=3,t.y+=.5;var n=this.x_shift,i=this.context,o=this.note.getStave().getYForTopText(this.text_line)+3,r=this.note.getStave().getYForTopText(this.text_line)-1,s=this;function a(t,e,n,o){i.save(),i.beginPath(),i.setLineWidth(s.render_options.line_width),i.setStrokeStyle(s.render_options.line_style),i.setFillStyle(s.render_options.line_style),i.moveTo(t,o),i.quadraticCurveTo(t+n,o,t+n,e),i.stroke(),i.restore()}function l(t,e,n){var o=n||1;i.beginPath(),i.moveTo(t,e),i.lineTo(t-4,e+4*o),i.lineTo(t+4,e+4*o),i.closePath(),i.fill()}function u(t,e){i.save(),i.setRawFont(s.font);var n=t-i.measureText(e).width/2;i.fillText(e,n,r),i.restore()}for(var c,f,b,p,y,d,v=null,g=0,m=0;m<this.phrase.length;++m){var _=this.phrase[m];0===m&&(_.draw_width+=n),g=_.draw_width+(v?v.draw_width:0)-(1===m?n:0),_.type===e.UP&&(v&&v.type===e.UP&&l(t.x,o),c=t.x,f=t.y,p=o,y=void 0,d=void 0,y=c+(b=g),d=f,i.save(),i.beginPath(),i.setLineWidth(s.render_options.line_width),i.setStrokeStyle(s.render_options.line_style),i.setFillStyle(s.render_options.line_style),i.moveTo(c,f),i.quadraticCurveTo(y,d,c+b,p),i.stroke(),i.restore()),_.type===e.DOWN&&(v&&v.type===e.UP&&a(t.x,t.y,g,o),v&&v.type===e.DOWN&&(l(t.x,t.y,-1),a(t.x,t.y,g,o)),null===v&&(g=_.draw_width,a(t.x,t.y,g,o))),u(t.x+g,_.text),(v=_).x=t.x,t.x+=g}v.type===e.UP?l(v.x+g,o):v.type===e.DOWN&&l(v.x+g,t.y,-1)}}]),e}();function Fi(t){return(Fi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Bi(t,e){return!e||"object"!==Fi(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ji(t){return(ji=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Di(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ii(t,e,n){return e&&Di(t.prototype,e),n&&Di(t,n),t}function Gi(t,e){return(Gi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Yi=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=Bi(this,ji(e).call(this))).setAttribute("type","Vibrato"),t.position=de.Position.RIGHT,t.render_options={harsh:!1,vibrato_width:20,wave_height:6,wave_width:4,wave_girth:2},t.setVibratoWidth(t.render_options.vibrato_width),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Gi(t,e)}(e,de),Ii(e,null,[{key:"format",value:function(t,e,n){if(!t||0===t.length)return!1;var i=e.top_text_line,o=0,r=e.right_shift-7,s=n.getModifiers(Mi.CATEGORY);s&&s.length>0&&i--;for(var a=0;a<t.length;++a){var l=t[a];l.setXShift(r),l.setTextLine(i),r+=o+=l.getWidth()}return e.right_shift+=o,e.top_text_line+=1,!0}},{key:"CATEGORY",get:function(){return"vibratos"}}]),Ii(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setHarsh",value:function(t){return this.render_options.harsh=t,this}},{key:"setVibratoWidth",value:function(t){return this.render_options.vibrato_width=t,this.setWidth(t),this}},{key:"draw",value:function(){var t=this.checkContext();if(!this.note)throw new h.RERR("NoNoteForVibrato","Can't draw vibrato without an attached note.");this.setRendered();var n=this.note.getModifierStartXY(de.Position.RIGHT,this.index).x+this.x_shift,i=this.note.getYForTopText(this.text_line)+2;e.renderVibrato(t,n,i,this.render_options)}}],[{key:"renderVibrato",value:function(t,e,n,i){var o,r=i.harsh,s=i.vibrato_width,a=i.wave_width,l=i.wave_girth,u=i.wave_height,c=s/a;if(t.beginPath(),r){for(t.moveTo(e,n+l+1),o=0;o<c/2;++o)t.lineTo(e+a,n-u/2),e+=a,t.lineTo(e+a,n+u/2),e+=a;for(o=0;o<c/2;++o)t.lineTo(e-a,n-u/2+l+1),e-=a,t.lineTo(e-a,n+u/2+l+1),e-=a;t.fill()}else{for(t.moveTo(e,n+l),o=0;o<c/2;++o)t.quadraticCurveTo(e+a/2,n-u/2,e+a,n),e+=a,t.quadraticCurveTo(e+a/2,n+u/2,e+a,n),e+=a;for(o=0;o<c/2;++o)t.quadraticCurveTo(e-a/2,n+u/2+l,e-a,n+l),e-=a,t.quadraticCurveTo(e-a/2,n-u/2+l,e-a,n+l),e-=a;t.fill()}}}]),e}();function Wi(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Hi(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Xi.DEBUG&&h.L("Vex.Flow.ModifierContext",e)}var Xi=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.modifiers={},this.preFormatted=!1,this.postFormatted=!1,this.width=0,this.spacing=0,this.state={left_shift:0,right_shift:0,text_line:0,top_text_line:0},this.PREFORMAT=[Le,ke,Ge,$e,Bn,Pn,ln,Hn,si,_i,Oi,Mi,Yi],this.POSTFORMAT=[Le]}var e,n,i;return e=t,(n=[{key:"addModifier",value:function(t){var e=t.getCategory();return this.modifiers[e]||(this.modifiers[e]=[]),this.modifiers[e].push(t),t.setModifierContext(this),this.preFormatted=!1,this}},{key:"getModifiers",value:function(t){return this.modifiers[t]}},{key:"getWidth",value:function(){return this.width}},{key:"getExtraLeftPx",value:function(){return this.state.left_shift}},{key:"getExtraRightPx",value:function(){return this.state.right_shift}},{key:"getState",value:function(){return this.state}},{key:"getMetrics",value:function(){if(!this.formatted)throw new h.RERR("UnformattedModifier","Unformatted modifier has no metrics.");return{width:this.state.left_shift+this.state.right_shift+this.spacing,spacing:this.spacing,extra_left_px:this.state.left_shift,extra_right_px:this.state.right_shift}}},{key:"preFormat",value:function(){var t=this;this.preFormatted||(this.PREFORMAT.forEach(function(e){Hi("Preformatting ModifierContext: ",e.CATEGORY),e.format(t.getModifiers(e.CATEGORY),t.state,t)}),this.width=this.state.left_shift+this.state.right_shift,this.preFormatted=!0)}},{key:"postFormat",value:function(){var t=this;this.postFormatted||this.POSTFORMAT.forEach(function(e){Hi("Postformatting ModifierContext: ",e.CATEGORY),e.postFormat(t.getModifiers(e.CATEGORY),t)})}}])&&Wi(e.prototype,n),i&&Wi(e,i),t}();function Ui(t){return(Ui="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Vi(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function zi(t,e,n){return e&&Vi(t.prototype,e),n&&Vi(t,n),t}function Ki(t,e,n,i){var o=e;for(n+=1;n<t.length;n+=1){var r=t[n];if(!r.isRest()&&!r.shouldIgnoreTicks()){o=r.getLineForRest();break}}if(i&&e!==o){var s=Math.max(e,o),a=Math.min(e,o);o=h.MidLine(s,a)}return o}function Ji(t,e,n){if(!t||!t.length)throw new h.RERR("BadArgument","No voices to format");var i=t[0].getTotalTicks(),o=t.reduce(function(t,e){if(!e.getTotalTicks().equals(i))throw new h.RERR("TickMismatch","Voices should have same total note duration in ticks.");if(e.getMode()===Rt.Mode.STRICT&&!e.isComplete())throw new h.RERR("IncompleteVoice","Voice does not have enough notes.");return Math.max(t,y.LCM(t,e.getResolutionMultiplier()))},1),r={},s=[],a=[];return t.forEach(function(t){var i=new y(0,o);t.getTickables().forEach(function(t){var o=i.numerator;if(!r[o]){var l=new e;a.push(l),r[o]=l}n(t,r[o]),s.push(o),i.add(t.getTicks())})}),{map:r,array:a,list:h.SortAndUnique(s,function(t,e){return t-e},function(t,e){return t===e}),resolutionMultiplier:o}}var qi=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.minTotalWidth=0,this.hasMinTotalWidth=!1,this.totalTicks=new y(0,1),this.tickContexts=null,this.modiferContexts=null,this.contextGaps={total:0,gaps:[]},this.voices=[]}return zi(t,null,[{key:"SimpleFormat",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).paddingBetween,i=void 0===n?10:n;t.reduce(function(t,e){e.addToModifierContext(new Xi);var n=(new bi).addTickable(e).preFormat(),o=n.getExtraPx();return n.setX(t+o.left),t+n.getWidth()+o.right+i},e)}},{key:"plotDebugging",value:function(t,e,n,i,o){var r=n+Jt.STAVEPADDING,s=e.contextGaps;t.save(),t.setFont("Arial",8,""),s.gaps.forEach(function(e){var n,s,a;n=r+e.x1,s=r+e.x2,a="#aaa",t.beginPath(),t.setStrokeStyle(a),t.setFillStyle(a),t.setLineWidth(1),t.fillRect(n,i,s-n,o-i),t.fillText(Math.round(e.x2-e.x1),r+e.x1,o+12)}),t.fillText(Math.round(s.total)+"px",r-20,o+12),t.setFillStyle("red"),t.fillText("Loss: "+e.lossHistory.map(function(t){return Math.round(t)}),r-20,o+22),t.restore()}},{key:"FormatAndDraw",value:function(e,n,i,o){var r={auto_beam:!1,align_rests:!1};"object"===Ui(o)?h.Merge(r,o):"boolean"==typeof o&&(r.auto_beam=o);var s=new Rt(I.TIME4_4).setMode(Rt.Mode.SOFT).addTickables(i),a=r.auto_beam?xt.applyAndGetBeams(s):[];return(new t).joinVoices([s],{align_rests:r.align_rests}).formatToStave([s],n,{align_rests:r.align_rests,stave:n}),s.setStave(n).draw(e,n),a.forEach(function(t){return t.setContext(e).draw()}),s.getBoundingBox()}},{key:"FormatAndDrawTab",value:function(e,n,i,o,r,s,a){var l={auto_beam:s,align_rests:!1};"object"===Ui(a)?h.Merge(l,a):"boolean"==typeof a&&(l.auto_beam=a);var u=new Rt(I.TIME4_4).setMode(Rt.Mode.SOFT).addTickables(r),c=new Rt(I.TIME4_4).setMode(Rt.Mode.SOFT).addTickables(o),f=l.auto_beam?xt.applyAndGetBeams(u):[];(new t).joinVoices([u],{align_rests:l.align_rests}).joinVoices([c]).formatToStave([u,c],i,{align_rests:l.align_rests}),u.draw(e,i),c.draw(e,n),f.forEach(function(t){return t.setContext(e).draw()}),new Bt(i,n).setContext(e).draw()}},{key:"AlignRestsToNotes",value:function(t,e,n){return t.forEach(function(i,o){if(i instanceof Le&&i.isRest()){if(i.tuplet&&!n)return;var r=i.getGlyph().position.toUpperCase();if("R/4"!==r&&"B/4"!==r)return;if(e||null!=i.beam){var s=i.getKeyProps()[0];if(0===o)s.line=Ki(t,s.line,o,!1),i.setKeyLine(0,s.line);else if(o>0&&o<t.length){var a;t[o-1].isRest()?(a=t[o-1].getKeyProps()[0].line,s.line=a):(a=t[o-1].getLineForRest(),s.line=Ki(t,a,o,!0)),i.setKeyLine(0,s.line)}}}}),this}}]),zi(t,[{key:"alignRests",value:function(e,n){if(!e||!e.length)throw new h.RERR("BadArgument","No voices to format rests");e.forEach(function(e){return t.AlignRestsToNotes(e.getTickables(),n)})}},{key:"preCalculateMinTotalWidth",value:function(t){if(this.hasMinTotalWidth)return this.minTotalWidth;if(!this.tickContexts){if(!t)throw new h.RERR("BadArgument","'voices' required to run preCalculateMinTotalWidth");this.createTickContexts(t)}var e=this.tickContexts,n=e.list,i=e.map;return this.minTotalWidth=n.map(function(t){var e=i[t];return e.preFormat(),e.getWidth()}).reduce(function(t,e){return t+e},0),this.hasMinTotalWidth=!0,this.minTotalWidth}},{key:"getMinTotalWidth",value:function(){if(!this.hasMinTotalWidth)throw new h.RERR("NoMinTotalWidth","Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'");return this.minTotalWidth}},{key:"createModifierContexts",value:function(t){var e=Ji(t,Xi,function(t,e){return t.addToModifierContext(e)});return this.modiferContexts=e,e}},{key:"createTickContexts",value:function(t){var e=Ji(t,bi,function(t,e){return e.addTickable(t)});return e.array.forEach(function(t){t.tContexts=e.array}),this.totalTicks=t[0].getTicksUsed().clone(),this.tickContexts=e,e}},{key:"preFormat",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0,o=arguments.length>3?arguments[3]:void 0,r=this.tickContexts,s=r.list,a=r.map,l=r.resolutionMultiplier;i&&o&&i.forEach(function(t){return t.setStave(o).preFormat()});var u=0,c=0,h=e/2;if(this.minTotalWidth=0,s.forEach(function(e){var i=a[e];n&&i.setContext(n),i.preFormat();var o=i.getWidth();t.minTotalWidth+=o;var r=i.getMetrics();u=u+c+r.extraLeftPx,i.setX(u),c=o-r.extraLeftPx}),this.minTotalWidth=u+c,this.hasMinTotalWidth=!0,!(e<=0)){var f=(e-this.minTotalWidth)/(this.totalTicks.value()*l),b=0;s.forEach(function(t,e){var n=s[e-1]||0,i=a[t];b+=(t-n)*f,i.setX(i.getX()+b),i.getCenterAlignedTickables().forEach(function(t){t.center_x_shift=h-i.getX()})}),1!==s.length&&(this.justifyWidth=e,this.lossHistory=[],this.evaluate())}}},{key:"evaluate",value:function(){var t=this,e=this.justifyWidth;this.contextGaps={total:0,gaps:[]},this.tickContexts.list.forEach(function(e,n){if(0!==n){var i=t.tickContexts.list[n-1],o=t.tickContexts.map[i],r=t.tickContexts.map[e],s=o.getMetrics(),a=o.getX()+s.width,l=r.getX(),u=l-a;t.contextGaps.total+=u,t.contextGaps.gaps.push({x1:a,x2:l}),r.getFormatterMetrics().freedom.left=u,o.getFormatterMetrics().freedom.right=u}});var n=this.durationStats={};this.voices.forEach(function(t){t.getTickables().forEach(function(t,i,o){var r=t.getTicks().clone().simplify().toString(),s=t.getMetrics(),a=t.getFormatterMetrics(),l=t.getX()+s.noteWidth+s.modRightPx+s.extraRightPx,u=0;if(i<o.length-1){var c=o[i+1],h=c.getMetrics();u=c.getX()-h.modLeftPx-h.extraLeftPx-l,a.space.used=c.getX()-t.getX(),c.getFormatterMetrics().freedom.left=u}else u=e-l,a.space.used=e-t.getX();a.freedom.right=u,function(t,e){var i=n[t];void 0===i?n[t]={mean:e,count:1}:(i.count+=1,i.mean=(i.mean+e)/2)}(r,a.space.used)})});var i=0;return this.voices.forEach(function(t){t.getTickables().forEach(function(t){var e=t.getTicks().clone().simplify().toString(),o=t.getFormatterMetrics();o.iterations+=1,o.space.deviation=o.space.used-n[e].mean,o.duration=e,o.space.mean=n[e].mean,i+=Math.pow(n[e].mean,2)})}),this.totalCost=Math.sqrt(i),this.lossHistory.push(this.totalCost),this}},{key:"tune",value:function(){var t=this;var e=0;return this.tickContexts.list.forEach(function(n,i,o){var r=t.tickContexts.map[n],s=i>0?t.tickContexts.map[o[i-1]]:null,a=i<o.length-1?t.tickContexts.map[o[i+1]]:null;!function(t,e,n,i){t.setX(t.getX()+i),t.getFormatterMetrics().freedom.left+=i,t.getFormatterMetrics().freedom.right-=i,e&&(e.getFormatterMetrics().freedom.right+=i),n&&(n.getFormatterMetrics().freedom.left-=i)}(r,s,a,e);var l=-r.getTickables().map(function(t){return t.getFormatterMetrics().space.deviation}).reduce(function(t,e){return t+e});l>0?e=-Math.min(r.getFormatterMetrics().freedom.right,Math.abs(l)):l<0&&(e=a?Math.min(a.getFormatterMetrics().freedom.right,Math.abs(l)):0);var u=Math.min(5,Math.abs(e));e=e>0?u:-u}),this.evaluate()}},{key:"postFormat",value:function(){var t=function(t){return t.list.forEach(function(e){return t.map[e].postFormat()})};return t(this.modiferContexts),t(this.tickContexts),this}},{key:"joinVoices",value:function(t){return this.createModifierContexts(t),this.hasMinTotalWidth=!1,this}},{key:"format",value:function(t,e,n){var i={align_rests:!1,context:null,stave:null};return h.Merge(i,n),this.voices=t,this.alignRests(t,i.align_rests),this.createTickContexts(t),this.preFormat(e,i.context,t,i.stave),i.stave&&this.postFormat(),this}},{key:"formatToStave",value:function(t,e,n){var i=e.getNoteEndX()-e.getNoteStartX()-10;!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];qi.DEBUG&&h.L("Vex.Flow.Formatter",e)}("Formatting voices to width: ",i);var o={context:e.getContext()};return h.Merge(o,n),this.format(t,i,o)}}]),t}();function Qi(t){return(Qi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Zi(t,e){return!e||"object"!==Qi(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function $i(t){return($i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function to(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function eo(t,e,n){return e&&to(t.prototype,e),n&&to(t,n),t}function no(t,e){return(no=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var io=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=Zi(this,$i(e).call(this))).setAttribute("type","StaveModifier"),t.padding=10,t.position=e.Position.ABOVE,t.layoutMetrics=null,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&no(t,e)}(e,k),eo(e,null,[{key:"Position",get:function(){return{LEFT:1,RIGHT:2,ABOVE:3,BELOW:4,BEGIN:5,END:6}}}]),eo(e,[{key:"getPosition",value:function(){return this.position}},{key:"setPosition",value:function(t){return this.position=t,this}},{key:"getStave",value:function(){return this.stave}},{key:"setStave",value:function(t){return this.stave=t,this}},{key:"getWidth",value:function(){return this.width}},{key:"setWidth",value:function(t){return this.width=t,this}},{key:"getX",value:function(){return this.x}},{key:"setX",value:function(t){return this.x=t,this}},{key:"getCategory",value:function(){return""}},{key:"makeSpacer",value:function(t){return{getContext:function(){return!0},setStave:function(){},renderToStave:function(){},getMetrics:function(){return{width:t}}}}},{key:"placeGlyphOnLine",value:function(t,e,n){t.setYShift(e.getYForLine(n)-e.getYForGlyphs())}},{key:"getPadding",value:function(t){return void 0!==t&&t<2?0:this.padding}},{key:"setPadding",value:function(t){return this.padding=t,this}},{key:"setLayoutMetrics",value:function(t){return this.layoutMetrics=t,this}},{key:"getLayoutMetrics",value:function(){return this.layoutMetrics}}]),e}();function oo(t){return(oo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ro(t,e){return!e||"object"!==oo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function so(t){return(so=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ao(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function lo(t,e,n){return e&&ao(t.prototype,e),n&&ao(t,n),t}function uo(t,e){return(uo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var co=function(t){function e(t){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=ro(this,so(e).call(this))).setAttribute("type","Barline"),n.thickness=I.STAVE_LINE_THICKNESS;var i=e.type;return n.widths={},n.widths[i.SINGLE]=5,n.widths[i.DOUBLE]=5,n.widths[i.END]=5,n.widths[i.REPEAT_BEGIN]=5,n.widths[i.REPEAT_END]=5,n.widths[i.REPEAT_BOTH]=5,n.widths[i.NONE]=5,n.paddings={},n.paddings[i.SINGLE]=0,n.paddings[i.DOUBLE]=0,n.paddings[i.END]=0,n.paddings[i.REPEAT_BEGIN]=15,n.paddings[i.REPEAT_END]=15,n.paddings[i.REPEAT_BOTH]=15,n.paddings[i.NONE]=0,n.layoutMetricsMap={},n.layoutMetricsMap[i.SINGLE]={xMin:0,xMax:1,paddingLeft:5,paddingRight:5},n.layoutMetricsMap[i.DOUBLE]={xMin:-3,xMax:1,paddingLeft:5,paddingRight:5},n.layoutMetricsMap[i.END]={xMin:-5,xMax:1,paddingLeft:5,paddingRight:5},n.layoutMetricsMap[i.REPEAT_END]={xMin:-10,xMax:1,paddingLeft:5,paddingRight:5},n.layoutMetricsMap[i.REPEAT_BEGIN]={xMin:-2,xMax:10,paddingLeft:5,paddingRight:5},n.layoutMetricsMap[i.REPEAT_BOTH]={xMin:-10,xMax:10,paddingLeft:5,paddingRight:5},n.layoutMetricsMap[i.NONE]={xMin:0,xMax:0,paddingLeft:5,paddingRight:5},n.setPosition(io.Position.BEGIN),n.setType(t),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&uo(t,e)}(e,io),lo(e,null,[{key:"CATEGORY",get:function(){return"barlines"}},{key:"type",get:function(){return{SINGLE:1,DOUBLE:2,END:3,REPEAT_BEGIN:4,REPEAT_END:5,REPEAT_BOTH:6,NONE:7}}},{key:"typeString",get:function(){return{single:e.type.SINGLE,double:e.type.DOUBLE,end:e.type.END,repeatBegin:e.type.REPEAT_BEGIN,repeatEnd:e.type.REPEAT_END,repeatBoth:e.type.REPEAT_BOTH,none:e.type.NONE}}}]),lo(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getType",value:function(){return this.type}},{key:"setType",value:function(t){return this.type="string"==typeof t?e.typeString[t]:t,this.setWidth(this.widths[this.type]),this.setPadding(this.paddings[this.type]),this.setLayoutMetrics(this.layoutMetricsMap[this.type]),this}},{key:"draw",value:function(t){switch(t.checkContext(),this.setRendered(),this.type){case e.type.SINGLE:this.drawVerticalBar(t,this.x,!1);break;case e.type.DOUBLE:this.drawVerticalBar(t,this.x,!0);break;case e.type.END:this.drawVerticalEndBar(t,this.x);break;case e.type.REPEAT_BEGIN:this.drawRepeatBar(t,this.x,!0),t.getX()!==this.x&&this.drawVerticalBar(t,t.getX());break;case e.type.REPEAT_END:this.drawRepeatBar(t,this.x,!1);break;case e.type.REPEAT_BOTH:this.drawRepeatBar(t,this.x,!1),this.drawRepeatBar(t,this.x,!0)}}},{key:"drawVerticalBar",value:function(t,e,n){t.checkContext();var i=t.getTopLineTopY(),o=t.getBottomLineBottomY();n&&t.context.fillRect(e-3,i,1,o-i),t.context.fillRect(e,i,1,o-i)}},{key:"drawVerticalEndBar",value:function(t,e){t.checkContext();var n=t.getTopLineTopY(),i=t.getBottomLineBottomY();t.context.fillRect(e-5,n,1,i-n),t.context.fillRect(e-2,n,3,i-n)}},{key:"drawRepeatBar",value:function(t,e,n){t.checkContext();var i=t.getTopLineTopY(),o=t.getBottomLineBottomY(),r=3;n||(r=-5),t.context.fillRect(e+r,i,1,o-i),t.context.fillRect(e-2,i,3,o-i);n?r+=4:r-=4;var s=e+r+1,a=(t.getNumLines()-1)*t.getSpacingBetweenLines(),l=i+(a=a/2-t.getSpacingBetweenLines()/2)+1;t.context.beginPath(),t.context.arc(s,l,2,0,2*Math.PI,!1),t.context.fill(),l+=t.getSpacingBetweenLines(),t.context.beginPath(),t.context.arc(s,l,2,0,2*Math.PI,!1),t.context.fill()}}]),e}();function ho(t){return(ho="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function fo(t,e){return!e||"object"!==ho(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function bo(t){return(bo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function po(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function yo(t,e,n){return e&&po(t.prototype,e),n&&po(t,n),t}function vo(t,e){return(vo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var go=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=fo(this,bo(e).call(this))).setAttribute("type","Repetition"),o.symbol_type=t,o.x=n,o.x_shift=0,o.y_shift=i,o.font={family:"times",size:12,weight:"bold italic"},o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&vo(t,e)}(e,io),yo(e,null,[{key:"CATEGORY",get:function(){return"repetitions"}},{key:"type",get:function(){return{NONE:1,CODA_LEFT:2,CODA_RIGHT:3,SEGNO_LEFT:4,SEGNO_RIGHT:5,DC:6,DC_AL_CODA:7,DC_AL_FINE:8,DS:9,DS_AL_CODA:10,DS_AL_FINE:11,FINE:12}}}]),yo(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setShiftX",value:function(t){return this.x_shift=t,this}},{key:"setShiftY",value:function(t){return this.y_shift=t,this}},{key:"draw",value:function(t,n){switch(this.setRendered(),this.symbol_type){case e.type.CODA_RIGHT:this.drawCodaFixed(t,n+t.width);break;case e.type.CODA_LEFT:this.drawSymbolText(t,n,"Coda",!0);break;case e.type.SEGNO_LEFT:this.drawSignoFixed(t,n);break;case e.type.SEGNO_RIGHT:this.drawSignoFixed(t,n+t.width);break;case e.type.DC:this.drawSymbolText(t,n,"D.C.",!1);break;case e.type.DC_AL_CODA:this.drawSymbolText(t,n,"D.C. al",!0);break;case e.type.DC_AL_FINE:this.drawSymbolText(t,n,"D.C. al Fine",!1);break;case e.type.DS:this.drawSymbolText(t,n,"D.S.",!1);break;case e.type.DS_AL_CODA:this.drawSymbolText(t,n,"D.S. al",!0);break;case e.type.DS_AL_FINE:this.drawSymbolText(t,n,"D.S. al Fine",!1);break;case e.type.FINE:this.drawSymbolText(t,n,"Fine",!1)}return this}},{key:"drawCodaFixed",value:function(t,e){var n=t.getYForTopText(t.options.num_lines)+this.y_shift;return j.renderGlyph(t.context,this.x+e+this.x_shift,n+25,40,"v4d",!0),this}},{key:"drawSignoFixed",value:function(t,e){var n=t.getYForTopText(t.options.num_lines)+this.y_shift;return j.renderGlyph(t.context,this.x+e+this.x_shift,n+25,30,"v8c",!0),this}},{key:"drawSymbolText",value:function(t,n,i,o){var r=t.checkContext();r.save(),r.setFont(this.font.family,this.font.size,this.font.weight);var s=0+this.x_shift,a=n+this.x_shift;this.symbol_type===e.type.CODA_LEFT?a=(s=this.x+t.options.vertical_bar_width)+r.measureText(i).width+12:s=(a=this.x+n+t.width-5+this.x_shift)-+r.measureText(i).width-12;var l=t.getYForTopText(t.options.num_lines)+this.y_shift;return o&&j.renderGlyph(r,a,l,40,"v4d",!0),r.fillText(i,s,l+5),r.restore(),this}}]),e}();function mo(t){return(mo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _o(t,e){return!e||"object"!==mo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function xo(t){return(xo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function wo(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ko(t,e,n){return e&&wo(t.prototype,e),n&&wo(t,n),t}function So(t,e){return(So=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var To=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=_o(this,xo(e).call(this))).setAttribute("type","StaveSection"),o.setWidth(16),o.section=t,o.x=n,o.shift_x=0,o.shift_y=i,o.font={family:"sans-serif",size:12,weight:"bold"},o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&So(t,e)}(e,io),ko(e,null,[{key:"CATEGORY",get:function(){return"stavesection"}}]),ko(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setStaveSection",value:function(t){return this.section=t,this}},{key:"setShiftX",value:function(t){return this.shift_x=t,this}},{key:"setShiftY",value:function(t){return this.shift_y=t,this}},{key:"draw",value:function(t,e){var n=t.checkContext();this.setRendered(),n.save(),n.lineWidth=2,n.setFont(this.font.family,this.font.size,this.font.weight);var i=n.measureText(""+this.section).width,o=i+6;o<18&&(o=18);var r=t.getYForTopText(3)+this.shift_y,s=this.x+e;return n.beginPath(),n.lineWidth=2,n.rect(s,r,o,20),n.stroke(),s+=(o-i)/2,n.fillText(""+this.section,s,r+16),n.restore(),this}}]),e}();function Eo(t){return(Eo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Oo(t,e){return!e||"object"!==Eo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ro(t){return(Ro=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Po(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Co(t,e,n){return e&&Po(t.prototype,e),n&&Po(t,n),t}function No(t,e){return(No=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ao=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=Oo(this,Ro(e).call(this))).setAttribute("type","StaveTempo"),o.tempo=t,o.position=de.Position.ABOVE,o.x=n,o.shift_x=10,o.shift_y=i,o.font={family:"times",size:14,weight:"bold"},o.render_options={glyph_font_scale:30},o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&No(t,e)}(e,io),Co(e,null,[{key:"CATEGORY",get:function(){return"stavetempo"}}]),Co(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setTempo",value:function(t){return this.tempo=t,this}},{key:"setShiftX",value:function(t){return this.shift_x=t,this}},{key:"setShiftY",value:function(t){return this.shift_y=t,this}},{key:"draw",value:function(t,e){var n=t.checkContext();this.setRendered();var i=this.render_options,o=i.glyph_font_scale/38,r=this.tempo.name,s=this.tempo.duration,a=this.tempo.dots,l=this.tempo.bpm,u=this.font,c=this.x+this.shift_x+e,h=t.getYForTopText(1)+this.shift_y;if(n.save(),r&&(n.setFont(u.family,u.size,u.weight),n.fillText(r,c,h),c+=n.measureText(r).width),s&&l){n.setFont(u.family,u.size,"normal"),r&&(c+=n.measureText(" ").width,n.fillText("(",c,h),c+=n.measureText("(").width);var f=I.durationToGlyph(s);if(c+=3*o,j.renderGlyph(n,c,h,i.glyph_font_scale,f.code_head),c+=f.getWidth()*o,f.stem){var b=30;f.beam_count&&(b+=3*(f.beam_count-1));var p=h-(b*=o);n.fillRect(c-o,p,o,b),f.flag&&(j.renderGlyph(n,c,p,i.glyph_font_scale,f.code_flag_upstem),a||(c+=6*o))}for(var y=0;y<a;y++)c+=6*o,n.beginPath(),n.arc(c,h+2*o,2*o,0,2*Math.PI,!1),n.fill();n.fillText(" = "+l+(r?")":""),c+3*o,h)}return n.restore(),this}}]),e}();function Lo(t){return(Lo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Mo(t,e){return!e||"object"!==Lo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Fo(t){return(Fo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Bo(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function jo(t,e,n){return e&&Bo(t.prototype,e),n&&Bo(t,n),t}function Do(t,e){return(Do=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Io=function(t){function e(t){var n;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Mo(this,Fo(e).call(this,t))).setAttribute("type","TextNote"),n.text=t.text,n.superscript=t.superscript,n.subscript=t.subscript,n.glyph_type=t.glyph,n.glyph=null,n.font={family:"Arial",size:12,weight:""},t.font&&(n.font=t.font),n.glyph_type){var i=e.GLYPHS[n.glyph_type];if(!i)throw new h.RERR("Invalid glyph type: "+n.glyph_type);n.glyph=new j(i.code,i.point,{cache:!1}),i.width?n.setWidth(i.width):n.setWidth(n.glyph.getMetrics().width),n.glyph_struct=i}else n.setWidth(I.textWidth(n.text));return n.line=t.line||0,n.smooth=t.smooth||!1,n.ignore_ticks=t.ignore_ticks||!1,n.justification=e.Justification.LEFT,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Do(t,e)}(e,Jt),jo(e,null,[{key:"Justification",get:function(){return{LEFT:1,CENTER:2,RIGHT:3}}},{key:"GLYPHS",get:function(){return{segno:{code:"v8c",point:40,x_shift:0,y_shift:-10},tr:{code:"v1f",point:40,x_shift:0,y_shift:0},mordent_upper:{code:"v1e",point:40,x_shift:0,y_shift:0},mordent_lower:{code:"v45",point:40,x_shift:0,y_shift:0},f:{code:"vba",point:40,x_shift:0,y_shift:0},p:{code:"vbf",point:40,x_shift:0,y_shift:0},m:{code:"v62",point:40,x_shift:0,y_shift:0},s:{code:"v4a",point:40,x_shift:0,y_shift:0},z:{code:"v80",point:40,x_shift:0,y_shift:0},coda:{code:"v4d",point:40,x_shift:0,y_shift:-8},pedal_open:{code:"v36",point:40,x_shift:0,y_shift:0},pedal_close:{code:"v5d",point:40,x_shift:0,y_shift:3},caesura_straight:{code:"v34",point:40,x_shift:0,y_shift:2},caesura_curved:{code:"v4b",point:40,x_shift:0,y_shift:2},breath:{code:"v6c",point:40,x_shift:0,y_shift:0},tick:{code:"v6f",point:50,x_shift:0,y_shift:0},turn:{code:"v72",point:40,x_shift:0,y_shift:0},turn_inverted:{code:"v33",point:40,x_shift:0,y_shift:0},mordent:{code:"v1e",point:40,x_shift:0,y_shift:0}}}}]),jo(e,[{key:"setJustification",value:function(t){return this.justification=t,this}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"preFormat",value:function(){this.checkContext(),this.preFormatted||(this.smooth?this.setWidth(0):this.glyph||this.setWidth(this.context.measureText(this.text).width),this.justification===e.Justification.CENTER?this.extraLeftPx=this.width/2:this.justification===e.Justification.RIGHT&&(this.extraLeftPx=this.width),this.setPreFormatted(!0))}},{key:"draw",value:function(){if(this.checkContext(),!this.stave)throw new h.RERR("NoStave","Can't draw without a stave.");this.setRendered();var t,n=this.context,i=this.getAbsoluteX();if(this.justification===e.Justification.CENTER?i-=this.getWidth()/2:this.justification===e.Justification.RIGHT&&(i-=this.getWidth()),this.glyph)t=this.stave.getYForLine(this.line+-3),this.glyph.render(this.context,i+this.glyph_struct.x_shift,t+this.glyph_struct.y_shift);else{t=this.stave.getYForLine(this.line+-3),this.applyStyle(n),n.setFont(this.font.family,this.font.size,this.font.weight),n.fillText(this.text,i,t);var o=n.measureText("M").width,r=n.measureText(this.text).width;this.superscript&&(n.setFont(this.font.family,this.font.size/1.3,this.font.weight),n.fillText(this.superscript,i+r+2,t-o/2.2)),this.subscript&&(n.setFont(this.font.family,this.font.size/1.3,this.font.weight),n.fillText(this.subscript,i+r+2,t+o/2.2-1)),this.restoreStyle(n)}}}]),e}();function Go(t){return(Go="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Yo(t,e){return!e||"object"!==Go(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Wo(t){return(Wo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ho(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Xo(t,e,n){return e&&Ho(t.prototype,e),n&&Ho(t,n),t}function Uo(t,e){return(Uo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Vo=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=Yo(this,Wo(e).call(this))).setAttribute("type","StaveText"),o.setWidth(16),o.text=t,o.position=n,o.options={shift_x:0,shift_y:0,justification:Io.Justification.CENTER},h.Merge(o.options,i),o.font={family:"times",size:16,weight:"normal"},o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Uo(t,e)}(e,io),Xo(e,null,[{key:"CATEGORY",get:function(){return"stavetext"}}]),Xo(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setStaveText",value:function(t){return this.text=t,this}},{key:"setShiftX",value:function(t){return this.shift_x=t,this}},{key:"setShiftY",value:function(t){return this.shift_y=t,this}},{key:"setFont",value:function(t){h.Merge(this.font,t)}},{key:"setText",value:function(t){this.text=t}},{key:"draw",value:function(t){var e=t.checkContext();this.setRendered(),e.save(),e.lineWidth=2,e.setFont(this.font.family,this.font.size,this.font.weight);var n,i,o=e.measureText(""+this.text).width,r=io.Position,s=Io.Justification;switch(this.position){case r.LEFT:case r.RIGHT:i=(t.getYForLine(0)+t.getBottomLineY())/2+this.options.shift_y,n=this.position===r.LEFT?t.getX()-o-24+this.options.shift_x:t.getX()+t.getWidth()+24+this.options.shift_x;break;case r.ABOVE:case r.BELOW:n=t.getX()+this.options.shift_x,this.options.justification===s.CENTER?n+=t.getWidth()/2-o/2:this.options.justification===s.RIGHT&&(n+=t.getWidth()-o),i=this.position===r.ABOVE?t.getYForTopText(2)+this.options.shift_y:t.getYForBottomText(2)+this.options.shift_y;break;default:throw new h.RERR("InvalidPosition","Value Must be in Modifier.Position.")}return e.fillText(""+this.text,n,i+4),e.restore(),this}}]),e}();function zo(t){return(zo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ko(t,e){return!e||"object"!==zo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Jo(t){return(Jo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function qo(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Qo(t,e,n){return e&&qo(t.prototype,e),n&&qo(t,n),t}function Zo(t,e){return(Zo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var $o=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=Ko(this,Jo(e).call(this))).setAttribute("type","Clef"),o.setPosition(io.Position.BEGIN),o.setType(t,n,i),o.setWidth(o.glyph.getMetrics().width),function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];$o.DEBUG&&h.L("Vex.Flow.Clef",e)}("Creating clef:",t),o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Zo(t,e)}(e,io),Qo(e,null,[{key:"CATEGORY",get:function(){return"clefs"}},{key:"types",get:function(){return{treble:{code:"v83",line:3},bass:{code:"v79",line:1},alto:{code:"vad",line:2},tenor:{code:"vad",line:1},percussion:{code:"v59",line:2},soprano:{code:"vad",line:4},"mezzo-soprano":{code:"vad",line:3},"baritone-c":{code:"vad",line:0},"baritone-f":{code:"v79",line:2},subbass:{code:"v79",line:0},french:{code:"v83",line:4},tab:{code:"v2f"}}}},{key:"sizes",get:function(){return{default:40,small:32}}},{key:"annotations",get:function(){return{"8va":{code:"v8",sizes:{default:{point:20,attachments:{treble:{line:-1.2,x_shift:11}}},small:{point:18,attachments:{treble:{line:-.4,x_shift:8}}}}},"8vb":{code:"v8",sizes:{default:{point:20,attachments:{treble:{line:6.3,x_shift:10},bass:{line:4,x_shift:1}}},small:{point:18,attachments:{treble:{line:5.8,x_shift:6},bass:{line:3.5,x_shift:.5}}}}}}}}]),Qo(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setType",value:function(t,n,i){if(this.type=t,this.clef=e.types[t],this.size=void 0===n?"default":n,this.clef.point=e.sizes[this.size],this.glyph=new j(this.clef.code,this.clef.point),void 0!==i){var o=e.annotations[i];this.annotation={code:o.code,point:o.sizes[this.size].point,line:o.sizes[this.size].attachments[this.type].line,x_shift:o.sizes[this.size].attachments[this.type].x_shift},this.attachment=new j(this.annotation.code,this.annotation.point),this.attachment.metrics.x_max=0,this.attachment.setXShift(this.annotation.x_shift)}else this.annotation=void 0;return this}},{key:"getWidth",value:function(){if("tab"===this.type&&!this.stave)throw new h.RERR("ClefError","Can't get width without stave.");return this.width}},{key:"setStave",value:function(t){if(this.stave=t,"tab"!==this.type)return this;var e,n,i=this.stave.getOptions().num_lines;switch(i){case 8:e=55,n=14;break;case 7:e=47,n=8;break;case 6:e=40,n=1;break;case 5:e=30,n=-6;break;case 4:e=23,n=-12;break;default:throw new h.RERR("ClefError","Invalid number of lines: ".concat(i))}return this.glyph.setPoint(e),this.glyph.setYShift(n),this}},{key:"draw",value:function(){if(!this.x)throw new h.RERR("ClefError","Can't draw clef without x.");if(!this.stave)throw new h.RERR("ClefError","Can't draw clef without stave.");this.setRendered(),this.glyph.setStave(this.stave),this.glyph.setContext(this.stave.context),void 0!==this.clef.line&&this.placeGlyphOnLine(this.glyph,this.stave,this.clef.line),this.glyph.renderToStave(this.x),void 0!==this.annotation&&(this.placeGlyphOnLine(this.attachment,this.stave,this.annotation.line),this.attachment.setStave(this.stave),this.attachment.setContext(this.stave.context),this.attachment.renderToStave(this.x))}}]),e}();function tr(t){return(tr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function er(t,e){return!e||"object"!==tr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function nr(t){return(nr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ir(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function or(t,e,n){return e&&ir(t.prototype,e),n&&ir(t,n),t}function rr(t,e){return(rr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var sr=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=er(this,nr(e).call(this))).setAttribute("type","KeySignature"),o.setKeySig(t,n,i),o.setPosition(io.Position.BEGIN),o.glyphFontScale=38,o.glyphs=[],o.xPositions=[],o.paddingForced=!1,o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&rr(t,e)}(e,io),or(e,null,[{key:"CATEGORY",get:function(){return"keysignatures"}},{key:"accidentalSpacing",get:function(){return{"#":{above:6,below:4},b:{above:4,below:7},n:{above:4,below:1},"##":{above:6,below:4},bb:{above:4,below:7},db:{above:4,below:7},d:{above:4,below:7},bbs:{above:4,below:7},"++":{above:6,below:4},"+":{above:6,below:4},"+-":{above:6,below:4},"++-":{above:6,below:4},bs:{above:4,below:10},bss:{above:4,below:10}}}}]),or(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"convertToGlyph",value:function(t,n){var i=I.accidentalCodes(t.type),o=new j(i.code,this.glyphFontScale),r=1;if("n"===t.type&&n){var s=e.accidentalSpacing[n.type];if(s)r=n.line>=t.line?s.above:s.below}this.placeGlyphOnLine(o,this.stave,t.line),this.glyphs.push(o);var a=this.xPositions[this.xPositions.length-1],l=o.getMetrics().width+r;this.xPositions.push(a+l),this.width+=l}},{key:"cancelKey",value:function(t){return this.formatted=!1,this.cancelKeySpec=t,this}},{key:"convertToCancelAccList",value:function(t){var e=I.keySignature(t),n=this.accList.length>0&&e.length>0&&e[0].type!==this.accList[0].type,i=n?e.length:e.length-this.accList.length;if(!(i<1)){for(var o=[],r=0;r<i;r++){var s=r;n||(s=e.length-i+r);var a=e[s];o.push({type:"n",line:a.line})}this.accList=o.concat(this.accList)}}},{key:"addToStave",value:function(t){return this.paddingForced=!0,t.addModifier(this),this}},{key:"convertAccLines",value:function(t,e){var n,i,o=0;switch(t){case"soprano":"#"===e?n=[2.5,.5,2,0,1.5,-.5,1]:o=-1;break;case"mezzo-soprano":"b"===e?n=[0,2,.5,2.5,1,3,1.5]:o=1.5;break;case"alto":o=.5;break;case"tenor":"#"===e?n=[3,1,2.5,.5,2,0,1.5]:o=-.5;break;case"baritone-f":case"baritone-c":"b"===e?n=[.5,2.5,1,3,1.5,3.5,2]:o=2;break;case"bass":case"french":o=1}if(void 0!==n)for(i=0;i<this.accList.length;++i)this.accList[i].line=n[i];else if(0!==o)for(i=0;i<this.accList.length;++i)this.accList[i].line+=o}},{key:"getPadding",value:function(t){return this.formatted||this.format(),0===this.glyphs.length||!this.paddingForced&&t<2?0:this.padding}},{key:"getWidth",value:function(){return this.formatted||this.format(),this.width}},{key:"setKeySig",value:function(t,e,n){return this.formatted=!1,this.keySpec=t,this.cancelKeySpec=e,this.alterKeySpec=n,this}},{key:"alterKey",value:function(t){return this.formatted=!1,this.alterKeySpec=t,this}},{key:"convertToAlterAccList",value:function(t){for(var e=Math.min(t.length,this.accList.length),n=0;n<e;++n)t[n]&&(this.accList[n].type=t[n])}},{key:"format",value:function(){if(!this.stave)throw new h.RERR("KeySignatureError","Can't draw key signature without stave.");this.width=0,this.glyphs=[],this.xPositions=[0],this.accList=I.keySignature(this.keySpec),this.cancelKeySpec&&this.convertToCancelAccList(this.cancelKeySpec);var t=this.accList.length>0?this.accList[0].type:null;if(this.alterKeySpec&&this.convertToAlterAccList(this.alterKeySpec),this.accList.length>0){this.convertAccLines(this.stave.clef,t);for(var e=0;e<this.accList.length;++e)this.convertToGlyph(this.accList[e],this.accList[e+1])}this.formatted=!0}},{key:"draw",value:function(){if(!this.x)throw new h.RERR("KeySignatureError","Can't draw key signature without x.");if(!this.stave)throw new h.RERR("KeySignatureError","Can't draw key signature without stave.");this.formatted||this.format(),this.setRendered();for(var t=0;t<this.glyphs.length;t++){var e=this.glyphs[t],n=this.x+this.xPositions[t];e.setStave(this.stave),e.setContext(this.stave.context),e.renderToStave(n)}}}]),e}();function ar(t){return(ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function lr(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],i=!0,o=!1,r=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){o=!0,r=t}finally{try{i||null==a.return||a.return()}finally{if(o)throw r}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function ur(t,e){return!e||"object"!==ar(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function cr(t){return(cr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function hr(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function fr(t,e,n){return e&&hr(t.prototype,e),n&&hr(t,n),t}function br(t,e){return(br=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var pr=function(t){function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:15,o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=ur(this,cr(e).call(this))).setAttribute("type","TimeSignature"),t.validate_args=o,null===n)return ur(t);var r=i;return t.point=40,t.topLine=2,t.bottomLine=4,t.setPosition(io.Position.BEGIN),t.setTimeSig(n),t.setWidth(t.timeSig.glyph.getMetrics().width),t.setPadding(r),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&br(t,e)}(e,io),fr(e,null,[{key:"CATEGORY",get:function(){return"timesignatures"}},{key:"glyphs",get:function(){return{C:{code:"v41",point:40,line:2},"C|":{code:"vb6",point:40,line:2}}}}]),fr(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"parseTimeSpec",value:function(t){if("C"===t||"C|"===t){var n=e.glyphs[t],i=n.line,o=n.code,r=n.point;return{line:i,num:!1,glyph:new j(o,r)}}this.validate_args&&function(t){var e=t.split("/").filter(function(t){return""!==t});if(2!==e.length)throw new h.RERR("BadTimeSignature","Invalid time spec: ".concat(t,'. Must be in the form "<numerator>/<denominator>"'));e.forEach(function(e){if(isNaN(Number(e)))throw new h.RERR("BadTimeSignature","Invalid time spec: ".concat(t,". Must contain two valid numbers."))})}(t);var s=lr(t.split("/").map(function(t){return t.split("")}),2),a=s[0],l=s[1];return{num:!0,glyph:this.makeTimeSignatureGlyph(a,l)}}},{key:"makeTimeSignatureGlyph",value:function(t,e){var n=new j("v0",this.point);n.topGlyphs=[],n.botGlyphs=[];for(var i=0,o=0;o<t.length;++o){var r=t[o],s=new j("v"+r,this.point);n.topGlyphs.push(s),i+=s.getMetrics().width}for(var a=0,l=0;l<e.length;++l){var u=e[l],c=new j("v"+u,this.point);n.botGlyphs.push(c),a+=c.getMetrics().width}var h=i>a?i:a,f=n.getMetrics().x_min;n.getMetrics=function(){return{x_min:f,x_max:f+h,width:h}};var b=(h-i)/2,p=(h-a)/2,y=this;return n.renderToStave=function(t){for(var e=t+b,n=0;n<this.topGlyphs.length;++n){var i=this.topGlyphs[n];j.renderOutline(this.context,i.metrics.outline,i.scale,e+i.x_shift,this.stave.getYForLine(y.topLine)+1),e+=i.getMetrics().width}e=t+p;for(var o=0;o<this.botGlyphs.length;++o){var r=this.botGlyphs[o];y.placeGlyphOnLine(r,this.stave,r.line),j.renderOutline(this.context,r.metrics.outline,r.scale,e+r.x_shift,this.stave.getYForLine(y.bottomLine)+1),e+=r.getMetrics().width}},n}},{key:"getTimeSig",value:function(){return this.timeSig}},{key:"setTimeSig",value:function(t){return this.timeSig=this.parseTimeSpec(t),this}},{key:"draw",value:function(){if(!this.x)throw new h.RERR("TimeSignatureError","Can't draw time signature without x.");if(!this.stave)throw new h.RERR("TimeSignatureError","Can't draw time signature without stave.");this.setRendered(),this.timeSig.glyph.setStave(this.stave),this.timeSig.glyph.setContext(this.stave.context),this.placeGlyphOnLine(this.timeSig.glyph,this.stave,this.timeSig.line),this.timeSig.glyph.renderToStave(this.x)}}]),e}();function yr(t){return(yr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function dr(t,e){return!e||"object"!==yr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function vr(t){return(vr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function gr(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function mr(t,e,n){return e&&gr(t.prototype,e),n&&gr(t,n),t}function _r(t,e){return(_r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var xr=function(t){function e(t,n,i,o){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=dr(this,vr(e).call(this))).setAttribute("type","Volta"),r.volta=t,r.x=i,r.y_shift=o,r.number=n,r.font={family:"sans-serif",size:9,weight:"bold"},r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_r(t,e)}(e,io),mr(e,null,[{key:"CATEGORY",get:function(){return"voltas"}},{key:"type",get:function(){return{NONE:1,BEGIN:2,MID:3,END:4,BEGIN_END:5}}}]),mr(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setShiftY",value:function(t){return this.y_shift=t,this}},{key:"draw",value:function(t,n){var i=t.checkContext();this.setRendered();var o=t.width,r=t.getYForTopText(t.options.num_lines)+this.y_shift,s=1.5*t.options.spacing_between_lines_px;switch(this.volta){case e.type.BEGIN:i.fillRect(this.x+n,r,1,s);break;case e.type.END:o-=5,i.fillRect(this.x+n+o,r,1,s);break;case e.type.BEGIN_END:o-=3,i.fillRect(this.x+n,r,1,s),i.fillRect(this.x+n+o,r,1,s)}return this.volta!==e.type.BEGIN&&this.volta!==e.type.BEGIN_END||(i.save(),i.setFont(this.font.family,this.font.size,this.font.weight),i.fillText(this.number,this.x+n+5,r+15),i.restore()),i.fillRect(this.x+n,r,o,1),this}}]),e}();function wr(t){return(wr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function kr(){return(kr=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function Sr(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Tr(t,e){return!e||"object"!==wr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Er(t){return(Er=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Or(t,e){return(Or=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Rr=function(t){function e(t,n,i,o){var r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=Tr(this,Er(e).call(this))).setAttribute("type","Stave"),r.x=t,r.y=n,r.width=i,r.formatted=!1,r.start_x=t+5,r.end_x=t+i,r.modifiers=[],r.measure=0,r.clef="treble",r.font={family:"sans-serif",size:8,weight:""},r.options={vertical_bar_width:10,glyph_spacing_px:10,num_lines:5,fill_style:"#999999",left_bar:!0,right_bar:!0,spacing_between_lines_px:10,space_above_staff_ln:4,space_below_staff_ln:4,top_text_position:1},r.bounds={x:r.x,y:r.y,w:r.width,h:0},h.Merge(r.options,o),r.resetLines();var s=co.type;return r.addModifier(new co(r.options.left_bar?s.SINGLE:s.NONE)),r.addEndModifier(new co(r.options.right_bar?s.SINGLE:s.NONE)),r}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Or(t,e)}(e,k),n=e,(i=[{key:"space",value:function(t){return this.options.spacing_between_lines_px*t}},{key:"resetLines",value:function(){this.options.line_config=[];for(var t=0;t<this.options.num_lines;t++)this.options.line_config.push({visible:!0});this.height=(this.options.num_lines+this.options.space_above_staff_ln)*this.options.spacing_between_lines_px,this.options.bottom_text_position=this.options.num_lines}},{key:"getOptions",value:function(){return this.options}},{key:"setNoteStartX",value:function(t){return this.formatted||this.format(),this.start_x=t,this}},{key:"getNoteStartX",value:function(){return this.formatted||this.format(),this.start_x}},{key:"getNoteEndX",value:function(){return this.formatted||this.format(),this.end_x}},{key:"getTieStartX",value:function(){return this.start_x}},{key:"getTieEndX",value:function(){return this.x+this.width}},{key:"getX",value:function(){return this.x}},{key:"getNumLines",value:function(){return this.options.num_lines}},{key:"setNumLines",value:function(t){return this.options.num_lines=parseInt(t,10),this.resetLines(),this}},{key:"setY",value:function(t){return this.y=t,this}},{key:"getTopLineTopY",value:function(){return this.getYForLine(0)-I.STAVE_LINE_THICKNESS/2}},{key:"getBottomLineBottomY",value:function(){return this.getYForLine(this.getNumLines()-1)+I.STAVE_LINE_THICKNESS/2}},{key:"setX",value:function(t){var e=t-this.x;this.formatted=!1,this.x=t,this.start_x+=e,this.end_x+=e;for(var n=0;n<this.modifiers.length;n++){var i=this.modifiers[n];void 0!==i.x&&(i.x+=e)}return this}},{key:"setWidth",value:function(t){return this.formatted=!1,this.width=t,this.end_x=this.x+t,this}},{key:"getWidth",value:function(){return this.width}},{key:"getStyle",value:function(){return kr({fillStyle:this.options.fill_style,strokeStyle:this.options.fill_style,lineWidth:I.STAVE_LINE_THICKNESS},this.style||{})}},{key:"setMeasure",value:function(t){return this.measure=t,this}},{key:"getModifierXShift",value:function(){if("number"!=typeof(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0))throw new h.RERR("InvalidIndex","Must be of number type");if(this.formatted||this.format(),1===this.getModifiers(io.Position.BEGIN).length)return 0;var t=this.start_x-this.x,e=this.modifiers[0];return e.getType()===co.type.REPEAT_BEGIN&&t>e.getWidth()&&(t-=e.getWidth()),t}},{key:"setRepetitionTypeLeft",value:function(t,e){return this.modifiers.push(new go(t,this.x,e)),this}},{key:"setRepetitionTypeRight",value:function(t,e){return this.modifiers.push(new go(t,this.x,e)),this}},{key:"setVoltaType",value:function(t,e,n){return this.modifiers.push(new xr(t,e,this.x,n)),this}},{key:"setSection",value:function(t,e){return this.modifiers.push(new To(t,this.x,e)),this}},{key:"setTempo",value:function(t,e){return this.modifiers.push(new Ao(t,this.x,e)),this}},{key:"setText",value:function(t,e,n){return this.modifiers.push(new Vo(t,e,n)),this}},{key:"getHeight",value:function(){return this.height}},{key:"getSpacingBetweenLines",value:function(){return this.options.spacing_between_lines_px}},{key:"getBoundingBox",value:function(){return new R(this.x,this.y,this.width,this.getBottomY()-this.y)}},{key:"getBottomY",value:function(){var t=this.options,e=t.spacing_between_lines_px;return this.getYForLine(t.num_lines)+t.space_below_staff_ln*e}},{key:"getBottomLineY",value:function(){return this.getYForLine(this.options.num_lines)}},{key:"getYForLine",value:function(t){var e=this.options,n=e.spacing_between_lines_px,i=e.space_above_staff_ln;return this.y+t*n+i*n}},{key:"getLineForY",value:function(t){var e=this.options,n=e.spacing_between_lines_px,i=e.space_above_staff_ln;return(t-this.y)/n-i}},{key:"getYForTopText",value:function(t){var e=t||0;return this.getYForLine(-e-this.options.top_text_position)}},{key:"getYForBottomText",value:function(t){var e=t||0;return this.getYForLine(this.options.bottom_text_position+e)}},{key:"getYForNote",value:function(t){var e=this.options,n=e.spacing_between_lines_px,i=e.space_above_staff_ln;return this.y+i*n+5*n-t*n}},{key:"getYForGlyphs",value:function(){return this.getYForLine(3)}},{key:"addModifier",value:function(t,e){return void 0!==e&&t.setPosition(e),t.setStave(this),this.formatted=!1,this.modifiers.push(t),this}},{key:"addEndModifier",value:function(t){return this.addModifier(t,io.Position.END),this}},{key:"setBegBarType",value:function(t){var e=co.type,n=e.SINGLE,i=e.REPEAT_BEGIN,o=e.NONE;return t!==n&&t!==i&&t!==o||(this.modifiers[0].setType(t),this.formatted=!1),this}},{key:"setEndBarType",value:function(t){return t!==co.type.REPEAT_BEGIN&&(this.modifiers[1].setType(t),this.formatted=!1),this}},{key:"setClef",value:function(t,e,n,i){void 0===i&&(i=io.Position.BEGIN),this.clef=t;var o=this.getModifiers(i,$o.CATEGORY);return 0===o.length?this.addClef(t,e,n,i):o[0].setType(t,e,n),this}},{key:"setEndClef",value:function(t,e,n){return this.setClef(t,e,n,io.Position.END),this}},{key:"setKeySignature",value:function(t,e,n){void 0===n&&(n=io.Position.BEGIN);var i=this.getModifiers(n,sr.CATEGORY);return 0===i.length?this.addKeySignature(t,e,n):i[0].setKeySig(t,e),this}},{key:"setEndKeySignature",value:function(t,e){return this.setKeySignature(t,e,io.Position.END),this}},{key:"setTimeSignature",value:function(t,e,n){void 0===n&&(n=io.Position.BEGIN);var i=this.getModifiers(n,pr.CATEGORY);return 0===i.length?this.addTimeSignature(t,e,n):i[0].setTimeSig(t),this}},{key:"setEndTimeSignature",value:function(t,e){return this.setTimeSignature(t,e,io.Position.END),this}},{key:"addKeySignature",value:function(t,e,n){return this.addModifier(new sr(t,e),n),this}},{key:"addClef",value:function(t,e,n,i){return void 0!==i&&i!==io.Position.BEGIN||(this.clef=t),this.addModifier(new $o(t,e,n),i),this}},{key:"addEndClef",value:function(t,e,n){return this.addClef(t,e,n,io.Position.END),this}},{key:"addTimeSignature",value:function(t,e,n){return this.addModifier(new pr(t,e),n),this}},{key:"addEndTimeSignature",value:function(t,e){return this.addTimeSignature(t,e,io.Position.END),this}},{key:"addTrebleGlyph",value:function(){return this.addClef("treble"),this}},{key:"getModifiers",value:function(t,e){return void 0===t?this.modifiers:this.modifiers.filter(function(n){return t===n.getPosition()&&(void 0===e||e===n.getCategory())})}},{key:"sortByCategory",value:function(t,e){for(var n=t.length-1;n>=0;n--)for(var i=0;i<n;i++)if(e[t[i].getCategory()]>e[t[i+1].getCategory()]){var o=t[i];t[i]=t[i+1],t[i+1]=o}}},{key:"format",value:function(){var t,e,n,i=this.modifiers[0],o=this.modifiers[1],r=this.getModifiers(io.Position.BEGIN),s=this.getModifiers(io.Position.END);this.sortByCategory(r,{barlines:0,clefs:1,keysignatures:2,timesignatures:3}),this.sortByCategory(s,{timesignatures:0,keysignatures:1,barlines:2,clefs:3}),r.length>1&&i.getType()===co.type.REPEAT_BEGIN&&(r.push(r.splice(0,1)[0]),r.splice(0,0,new co(co.type.SINGLE))),s.indexOf(o)>0&&s.splice(0,0,new co(co.type.NONE));for(var a=0,l=this.x,u=0;u<r.length;u++)e=(n=r[u]).getPadding(u+a),t=n.getWidth(),l+=e,n.setX(l),l+=t,e+t===0&&a--;this.start_x=l,l=this.x+this.width;for(var c={left:0,right:0,paddingRight:0,paddingLeft:0},h=0,f=0;f<s.length;f++){h="barlines"===(n=s[f]).getCategory()?f:h,c.right=0,c.left=0,c.paddingRight=0,c.paddingLeft=0;var b=n.getLayoutMetrics();b?(0!==f&&(c.right=b.xMax||0,c.paddingRight=b.paddingRight||0),c.left=-b.xMin||0,c.paddingLeft=b.paddingLeft||0,f===s.length-1&&(c.paddingLeft=0)):(c.paddingRight=n.getPadding(f-h),0!==f&&(c.right=n.getWidth()),0===f&&(c.left=n.getWidth())),l-=c.paddingRight,l-=c.right,n.setX(l),l-=c.left,l-=c.paddingLeft}this.end_x=1===s.length?this.x+this.width:l,this.formatted=!0}},{key:"draw",value:function(){this.checkContext(),this.setRendered(),this.formatted||this.format();for(var t,e=this.options.num_lines,n=this.width,i=this.x,o=0;o<e;o++)t=this.getYForLine(o),this.applyStyle(),this.options.line_config[o].visible&&(this.context.beginPath(),this.context.moveTo(i,t),this.context.lineTo(i+n,t),this.context.stroke()),this.restoreStyle();for(var r=0;r<this.modifiers.length;r++)"function"==typeof this.modifiers[r].draw&&this.modifiers[r].draw(this,this.getModifierXShift(r));if(this.measure>0){this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight);var s=this.context.measureText(""+this.measure).width;t=this.getYForTopText(0)+3,this.context.fillText(""+this.measure,this.x-s/2,t),this.context.restore()}return this}},{key:"drawVertical",value:function(t,e){this.drawVerticalFixed(this.x+t,e)}},{key:"drawVerticalFixed",value:function(t,e){this.checkContext();var n=this.getYForLine(0),i=this.getYForLine(this.options.num_lines-1);e&&this.context.fillRect(t-3,n,1,i-n+1),this.context.fillRect(t,n,1,i-n+1)}},{key:"drawVerticalBar",value:function(t){this.drawVerticalBarFixed(this.x+t,!1)}},{key:"drawVerticalBarFixed",value:function(t){this.checkContext();var e=this.getYForLine(0),n=this.getYForLine(this.options.num_lines-1);this.context.fillRect(t,e,1,n-e+1)}},{key:"getConfigForLines",value:function(){return this.options.line_config}},{key:"setConfigForLine",value:function(t,e){if(t>=this.options.num_lines||t<0)throw new h.RERR("StaveConfigError","The line number must be within the range of the number of lines in the Stave.");if(void 0===e.visible)throw new h.RERR("StaveConfigError","The line configuration object is missing the 'visible' property.");if("boolean"!=typeof e.visible)throw new h.RERR("StaveConfigError","The line configuration objects 'visible' property must be true or false.");return this.options.line_config[t]=e,this}},{key:"setConfigForLines",value:function(t){if(t.length!==this.options.num_lines)throw new h.RERR("StaveConfigError","The length of the lines configuration array must match the number of lines in the Stave");for(var e in t)t[e]||(t[e]=this.options.line_config[e]),h.Merge(this.options.line_config[e],t[e]);return this.options.line_config=t,this}}])&&Sr(n.prototype,i),o&&Sr(n,o),e}();function Pr(t){return(Pr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Cr(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Nr(t,e){return!e||"object"!==Pr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ar(t){return(Ar=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Lr(t,e){return(Lr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Mr=function(t){function e(t,n,i,o){var r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var s={spacing_between_lines_px:13,num_lines:6,top_text_position:1};return h.Merge(s,o),(r=Nr(this,Ar(e).call(this,t,n,i,s))).setAttribute("type","TabStave"),r}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Lr(t,e)}(e,Rr),n=e,(i=[{key:"getYForGlyphs",value:function(){return this.getYForLine(2.5)}},{key:"addTabGlyph",value:function(){return this.addClef("tab"),this}}])&&Cr(n.prototype,i),o&&Cr(n,o),e}();function Fr(t){return(Fr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Br(t,e){return!e||"object"!==Fr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function jr(t,e,n){return(jr="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Dr(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Dr(t){return(Dr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ir(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Gr(t,e,n){return e&&Ir(t.prototype,e),n&&Ir(t,n),t}function Yr(t,e){return(Yr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Wr=function(t){function e(t,n){var i;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=Br(this,Dr(e).call(this,t))).setAttribute("type","TabNote"),i.ghost=!1,i.positions=t.positions,h.Merge(i.render_options,{glyph_font_scale:I.DEFAULT_TABLATURE_FONT_SCALE,draw_stem:n,draw_dots:n,draw_stem_through_stave:!1,y_shift:0,scale:1,font:"10pt Arial"}),i.glyph=I.durationToGlyph(i.duration,i.noteType),!i.glyph)throw new h.RuntimeError("BadArguments","Invalid note initialization data (No glyph found): ".concat(JSON.stringify(t)));return i.buildStem(),t.stem_direction?i.setStemDirection(t.stem_direction):i.setStemDirection(rt.UP),i.ghost=!1,i.updateWidth(),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Yr(t,e)}(e,ue),Gr(e,null,[{key:"CATEGORY",get:function(){return"tabnotes"}}]),Gr(e,[{key:"reset",value:function(){this.stave&&this.setStave(this.stave)}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setGhost",value:function(t){return this.ghost=t,this.updateWidth(),this}},{key:"hasStem",value:function(){return this.render_options.draw_stem}},{key:"getStemExtension",value:function(){var t=this.getGlyph();return null!=this.stem_extension_override?this.stem_extension_override:t?1===this.getStemDirection()?t.tabnote_stem_up_extension:t.tabnote_stem_down_extension:0}},{key:"addDot",value:function(){var t=new ke;return this.dots+=1,this.addModifier(t,0)}},{key:"updateWidth",value:function(){var t=this;this.glyphs=[],this.width=0;for(var e=0;e<this.positions.length;++e){var n=this.positions[e].fret;this.ghost&&(n="("+n+")");var i=I.tabToGlyph(n,this.render_options.scale);this.glyphs.push(i),this.width=Math.max(i.getWidth(),this.width)}this.glyph.getWidth=function(){return t.width}}},{key:"setStave",value:function(t){var n,i=this;if(jr(Dr(e.prototype),"setStave",this).call(this,t),this.context=t.context,this.context){var o=this.context;this.width=0;var r=function(){var t=i.glyphs[n],e=""+t.text;"X"!==e.toUpperCase()&&(o.save(),o.setRawFont(i.render_options.font),t.width=o.measureText(e).width,o.restore(),t.getWidth=function(){return t.width}),i.width=Math.max(t.getWidth(),i.width)};for(n=0;n<this.glyphs.length;++n)r();this.glyph.getWidth=function(){return i.width}}var s=this.positions.map(function(e){var n=e.str;return t.getYForLine(n-1)});return this.setYs(s),this.stem&&this.stem.setYBounds(this.getStemY(),this.getStemY()),this}},{key:"getPositions",value:function(){return this.positions}},{key:"addToModifierContext",value:function(t){this.setModifierContext(t);for(var e=0;e<this.modifiers.length;++e)this.modifierContext.addModifier(this.modifiers[e]);return this.modifierContext.addModifier(this),this.preFormatted=!1,this}},{key:"getTieRightX",value:function(){var t=this.getAbsoluteX();return t+=this.glyph.getWidth()/2,t+=-this.width/2+this.width+2}},{key:"getTieLeftX",value:function(){var t=this.getAbsoluteX();return t+=this.glyph.getWidth()/2,t-=this.width/2+2}},{key:"getModifierStartXY",value:function(t,e){if(!this.preFormatted)throw new h.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new h.RERR("NoYValues","No Y-Values calculated for this note.");var n=0;if(t===de.Position.LEFT)n=-2;else if(t===de.Position.RIGHT)n=this.width+2;else if(t===de.Position.BELOW||t===de.Position.ABOVE){n=this.glyph.getWidth()/2}return{x:this.getAbsoluteX()+n,y:this.ys[e]}}},{key:"getLineForRest",value:function(){return this.positions[0].str}},{key:"preFormat",value:function(){this.preFormatted||(this.modifierContext&&this.modifierContext.preFormat(),this.setPreFormatted(!0))}},{key:"getStemX",value:function(){return this.getCenterGlyphX()}},{key:"getStemY",value:function(){var t=this.stave.getNumLines()-.5,e=rt.UP===this.stem_direction?-.5:t;return this.stave.getYForLine(e)}},{key:"getStemExtents",value:function(){return this.stem.getExtents()}},{key:"drawFlag",value:function(){var t=this.beam,e=this.glyph,n=this.context,i=this.stem,o=this.stem_direction,r=this.render_options,s=r.draw_stem,a=r.glyph_font_scale,l=null==t&&s;if(e.flag&&l){var u=this.getStemX()+1,c=this.getStemY()-i.getHeight(),h=o===rt.DOWN?e.code_flag_downstem:e.code_flag_upstem;j.renderGlyph(n,u,c,a,h)}}},{key:"drawModifiers",value:function(){var t=this;this.modifiers.forEach(function(e){("dots"!==e.getCategory()||t.render_options.draw_dots)&&(e.setContext(t.context),e.draw())})}},{key:"drawStemThrough",value:function(){var t=this.getStemX(),e=this.getStemY(),n=this.context,i=this.render_options.draw_stem_through_stave;if(this.render_options.draw_stem&&i){var o=function(t,e,n,i){var o=1!==i,r=-1!==i,s=n.getSpacingBetweenLines(),a=n.getNumLines(),l=[];return e.forEach(function(e){var u=e.indexOf(a)>-1,c=e.indexOf(1)>-1;if(!(o&&c||r&&u)){1===e.length&&e.push(e[0]);var h=[];e.forEach(function(e,o,r){var l=1===e,u=e===a,c=n.getYForLine(e-1);0!==o||l?o!==r.length-1||u||(c+=s/2-1):c-=s/2-1,h.push(c),1===i&&l?h.push(t-2):-1===i&&u&&h.push(t+2)}),l.push(h.sort(function(t,e){return t-e}))}}),l}(e,function(t,e){for(var n=[],i=[],o=1;o<=t;o++)e.indexOf(o)>-1?(n.push(i),i=[]):i.push(o);return i.length>0&&n.push(i),n}(this.stave.getNumLines(),this.positions.map(function(t){return t.str})),this.getStave(),this.getStemDirection());n.save(),n.setLineWidth(rt.WIDTH),o.forEach(function(e){0!==e.length&&(n.beginPath(),n.moveTo(t,e[0]),n.lineTo(t,e[e.length-1]),n.stroke(),n.closePath())}),n.restore()}}},{key:"drawPositions",value:function(){for(var t=this.context,e=this.getAbsoluteX(),n=this.ys,i=0;i<this.positions.length;++i){var o=n[i]+this.render_options.y_shift,r=this.glyphs[i],s=e+this.glyph.getWidth()/2-r.getWidth()/2;if(t.clearRect(s-2,o-3,r.getWidth()+4,6),r.code)j.renderGlyph(t,s,o,this.render_options.glyph_font_scale*this.render_options.scale,r.code);else{t.save(),t.setRawFont(this.render_options.font);var a=r.text.toString();t.fillText(a,s,o+5*this.render_options.scale),t.restore()}}}},{key:"draw",value:function(){if(this.checkContext(),!this.stave)throw new h.RERR("NoStave","Can't draw without a stave.");if(0===this.ys.length)throw new h.RERR("NoYValues","Can't draw note without Y values.");this.setRendered();var t=null==this.beam&&this.render_options.draw_stem;this.drawPositions(),this.drawStemThrough();var e=this.getStemX();this.stem.setNoteHeadXBounds(e,e),t&&(this.context.openGroup("stem",null,{pointerBBox:!0}),this.stem.setContext(this.context).draw(),this.context.closeGroup()),this.drawFlag(),this.drawModifiers()}}]),e}();function Hr(t){return(Hr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Xr(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ur(t,e){return!e||"object"!==Hr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Vr(t){return(Vr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function zr(t,e){return(zr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Kr,Jr=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ur(this,Vr(e).call(this))).setAttribute("type","VibratoBracket"),n.start=t.start,n.stop=t.stop,n.line=1,n.render_options={harsh:!1,wave_height:6,wave_width:4,wave_girth:2},n}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&zr(t,e)}(e,k),n=e,(i=[{key:"setLine",value:function(t){return this.line=t,this}},{key:"setHarsh",value:function(t){return this.render_options.harsh=t,this}},{key:"draw",value:function(){var t=this.context;this.setRendered();var e=this.start?this.start.getStave().getYForTopText(this.line):this.stop.getStave().getYForTopText(this.line),n=this.start?this.start.getAbsoluteX():this.stop.getStave().getTieStartX(),i=this.stop?this.stop.getAbsoluteX()-this.stop.getWidth()-5:this.start.getStave().getTieEndX()-10;this.render_options.vibrato_width=i-n,function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Jr.DEBUG&&h.L("Vex.Flow.VibratoBracket",e)}("Rendering VibratoBracket: start_x:",n,"stop_x:",i,"y:",e),Yi.renderVibrato(t,n,e,this.render_options)}}])&&Xr(n.prototype,i),o&&Xr(n,o),e}();function qr(t){return(qr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qr(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Zr(t,e){return!e||"object"!==qr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function $r(t){return($r=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ts(t,e){return(ts=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var es=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=Zr(this,$r(e).call(this))).setAttribute("type","MultiMeasureRest"),i.render_options={show_number:!0,number_line:-.5,number_glyph_point:40,padding_left:void 0,padding_right:void 0,line:2,spacing_between_lines_px:10,line_thickness:void 0,serif_thickness:2,use_symbols:!1,symbol_spacing:void 0,semibrave_rest_glyph_scale:I.DEFAULT_NOTATION_FONT_SCALE},h.Merge(i.render_options,n),i.number_of_measures=t,i.xs={left:NaN,right:NaN},i}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ts(t,e)}(e,k),n=e,(i=[{key:"getXs",value:function(){return this.xs}},{key:"setStave",value:function(t){return this.stave=t,this}},{key:"getStave",value:function(){return this.stave}},{key:"drawLine",value:function(t,e,n,i){var o=this.stave.getYForLine(this.render_options.line),r=.1*(n-e);e+=r,n-=r;var s=this.render_options.serif_thickness,a=.25*i;isNaN(this.render_options.line_thickness)||(a=.5*this.render_options.line_thickness),t.save(),t.beginPath(),t.moveTo(e,o-i),t.lineTo(e+s,o-i),t.lineTo(e+s,o-a),t.lineTo(n-s,o-a),t.lineTo(n-s,o-i),t.lineTo(n,o-i),t.lineTo(n,o+i),t.lineTo(n-s,o+i),t.lineTo(n-s,o+a),t.lineTo(e+s,o+a),t.lineTo(e+s,o+i),t.lineTo(e,o+i),t.closePath(),t.fill()}},{key:"drawSymbols",value:function(t,e,n,i){var o=Math.floor(this.number_of_measures/4),r=this.number_of_measures%4,s=Math.floor(r/2),a=r%2,l=function(){if(!Kr){var t=new ie({duration:"w",note_type:"r"});Kr={glyph_font_scale:t.render_options.glyph_font_scale,glyph_code:t.glyph_code,width:t.getWidth()}}return Kr}(),u=l.width*(this.render_options.semibrave_rest_glyph_scale/l.glyph_font_scale),c={2:{width:.5*u,height:i},1:{width:u}},h=1.35*u;isNaN(this.render_options.symbol_spacing)||(h=this.render_options.symbol_spacing);var f=e+.5*(n-e)-.5*(o*c[2].width+s*c[2].width+a*c[1].width+(o+s+a-1)*h),b=this.stave.getYForLine(this.render_options.line-1),p=this.stave.getYForLine(this.render_options.line),y=this.stave.getYForLine(this.render_options.line+1);t.save(),t.setStrokeStyle("none"),t.setLineWidth(0);for(var d=0;d<o;++d)t.fillRect(f,p-c[2].height,c[2].width,c[2].height),t.fillRect(f,y-c[2].height,c[2].width,c[2].height),f+=c[2].width+h;for(var v=0;v<s;++v)t.fillRect(f,p-c[2].height,c[2].width,c[2].height),f+=c[2].width+h;for(var g=0;g<a;++g)j.renderGlyph(t,f,b,this.render_options.semibrave_rest_glyph_scale,l.glyph_code),f+=c[1].width+h;t.restore()}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.context,e=this.stave,n=this.render_options.spacing_between_lines_px,i=e.getNoteStartX(),o=e.getNoteEndX(),r=e.getModifiers(io.Position.BEGIN);if(1===r.length&&"barlines"===r[0].getCategory()&&(i-=r[0].getWidth()),isNaN(this.render_options.padding_left)||(i=e.getX()+this.render_options.padding_left),isNaN(this.render_options.padding_right)||(o=e.getX()+e.getWidth()-this.render_options.padding_right),this.xs.left=i,this.xs.right=o,this.render_options.use_symbols?this.drawSymbols(t,i,o,n):this.drawLine(t,i,o,n),this.render_options.show_number){var s="/"+this.number_of_measures,a=new pr(null,void 0,!1);a.point=this.render_options.number_glyph_point,a.setTimeSig(s),a.setStave(e),a.x=i+.5*(o-i)-.5*a.timeSig.glyph.getMetrics().width,a.bottomLine=this.render_options.number_line,a.setContext(t).draw()}}}])&&Qr(n.prototype,i),o&&Qr(n,o),e}();function ns(t){return(ns="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function is(t,e){return!e||"object"!==ns(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function os(t,e,n){return(os="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=rs(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function rs(t){return(rs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ss(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function as(t,e,n){return e&&ss(t.prototype,e),n&&ss(t,n),t}function ls(t,e){return(ls=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var us=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=is(this,rs(e).call(this,{duration:"b"}))).setAttribute("type","ClefNote"),o.setType(t,n,i),o.ignore_ticks=!0,o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ls(t,e)}(e,Jt),as(e,null,[{key:"CATEGORY",get:function(){return"clefnote"}}]),as(e,[{key:"setType",value:function(t,e,n){return this.type=t,this.clef_obj=new $o(t,e,n),this.clef=this.clef_obj.clef,this.glyph=new j(this.clef.code,this.clef.point),this.setWidth(this.glyph.getMetrics().width),this}},{key:"getClef",value:function(){return this.clef}},{key:"setContext",value:function(t){return this.context=t,this.glyph.setContext(this.context),this}},{key:"getBoundingBox",value:function(){return os(rs(e.prototype),"getBoundingBox",this).call(this)}},{key:"addToModifierContext",value:function(){return this}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){if(!this.stave)throw new h.RERR("NoStave","Can't draw without a stave.");this.glyph.getContext()||this.glyph.setContext(this.context),this.setRendered();var t=this.getAbsoluteX();if(this.glyph.setStave(this.stave),this.glyph.setYShift(this.stave.getYForLine(this.clef.line)-this.stave.getYForGlyphs()),this.glyph.renderToStave(t),void 0!==this.clef_obj.annotation){var e=new j(this.clef_obj.annotation.code,this.clef_obj.annotation.point);e.getContext()||e.setContext(this.context),e.setStave(this.stave),e.setYShift(this.stave.getYForLine(this.clef_obj.annotation.line)-this.stave.getYForGlyphs()),e.setXShift(this.clef_obj.annotation.x_shift),e.renderToStave(t)}}}]),e}();function cs(t){return(cs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function hs(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function fs(t,e){return!e||"object"!==cs(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function bs(t,e,n){return(bs="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=ps(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function ps(t){return(ps=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ys(t,e){return(ys=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ds=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=fs(this,ps(e).call(this,{duration:"b"}))).setAttribute("type","KeySigNote"),o.keySignature=new sr(t,n,i),o.ignore_ticks=!0,o}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ys(t,e)}(e,Jt),n=e,(i=[{key:"getBoundingBox",value:function(){return bs(ps(e.prototype),"getBoundingBox",this).call(this)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this.keySignature.setStave(this.stave),this.keySignature.format(),this.setWidth(this.keySignature.width),this}},{key:"draw",value:function(){this.stave.checkContext(),this.setRendered(),this.keySignature.x=this.getAbsoluteX(),this.keySignature.setContext(this.context),this.keySignature.draw()}}])&&hs(n.prototype,i),o&&hs(n,o),e}();function vs(t){return(vs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function gs(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ms(t,e){return!e||"object"!==vs(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function _s(t,e,n){return(_s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=xs(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function xs(t){return(xs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ws(t,e){return(ws=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ks=function(t){function e(t,n){var i;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=ms(this,xs(e).call(this,{duration:"b"}))).setAttribute("type","TimeSigNote");var o=new pr(t,n);return i.timeSig=o.getTimeSig(),i.setWidth(i.timeSig.glyph.getMetrics().width),i.ignore_ticks=!0,i}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ws(t,e)}(e,Jt),n=e,(i=[{key:"getBoundingBox",value:function(){return _s(xs(e.prototype),"getBoundingBox",this).call(this)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){this.stave.checkContext(),this.setRendered(),this.timeSig.glyph.getContext()||this.timeSig.glyph.setContext(this.context),this.timeSig.glyph.setStave(this.stave),this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line)-this.stave.getYForGlyphs()),this.timeSig.glyph.renderToStave(this.getAbsoluteX())}}])&&gs(n.prototype,i),o&&gs(n,o),e}();function Ss(t){return(Ss="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ts(t,e){return!e||"object"!==Ss(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Es(t){return(Es=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Os(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Rs(t,e,n){return e&&Os(t.prototype,e),n&&Os(t,n),t}function Ps(t,e){return(Ps=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Cs=function(t){function e(t,n){var i;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=Ts(this,Es(e).call(this,t,"sl."))).setAttribute("type","TabSlide"),!n){var o=t.first_note.getPositions()[0].fret,r=t.last_note.getPositions()[0].fret;n=parseInt(o,10)>parseInt(r,10)?e.SLIDE_DOWN:e.SLIDE_UP}return i.slide_direction=n,i.render_options.cp1=11,i.render_options.cp2=14,i.render_options.y_shift=.5,i.setFont({font:"Times",size:10,style:"bold italic"}),i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ps(t,e)}(e,xn),Rs(e,null,[{key:"createSlideUp",value:function(t){return new e(t,e.SLIDE_UP)}},{key:"createSlideDown",value:function(t){return new e(t,e.SLIDE_DOWN)}},{key:"SLIDE_UP",get:function(){return 1}},{key:"SLIDE_DOWN",get:function(){return-1}}]),Rs(e,[{key:"renderTie",value:function(t){if(0===t.first_ys.length||0===t.last_ys.length)throw new h.RERR("BadArguments","No Y-values to render");var n=this.context,i=t.first_x_px,o=t.first_ys,r=t.last_x_px,s=this.slide_direction;if(s!==e.SLIDE_UP&&s!==e.SLIDE_DOWN)throw new h.RERR("BadSlide","Invalid slide direction");for(var a=0;a<this.first_indices.length;++a){var l=o[this.first_indices[a]]+this.render_options.y_shift;if(isNaN(l))throw new h.RERR("BadArguments","Bad indices for slide rendering.");n.beginPath(),n.moveTo(i,l+3*s),n.lineTo(r,l-3*s),n.closePath(),n.stroke()}this.setRendered()}}]),e}();function Ns(t){return(Ns="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function As(){return(As=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function Ls(t,e){return!e||"object"!==Ns(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ms(t,e,n){return(Ms="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Fs(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Fs(t){return(Fs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Bs(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function js(t,e,n){return e&&Bs(t.prototype,e),n&&Bs(t,n),t}function Ds(t,e){return(Ds=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Is=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ls(this,Fs(e).call(this,As(t,{glyph_font_scale:I.DEFAULT_NOTATION_FONT_SCALE*e.SCALE,stroke_px:e.LEDGER_LINE_OFFSET})))).setAttribute("type","GraceNote"),n.slash=t.slash,n.slur=!0,n.buildNoteHeads(),n.width=3,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ds(t,e)}(e,Le),js(e,null,[{key:"CATEGORY",get:function(){return"gracenotes"}},{key:"LEDGER_LINE_OFFSET",get:function(){return 2}},{key:"SCALE",get:function(){return.66}}]),js(e,[{key:"getStemExtension",value:function(){if(null!=this.stem_extension_override)return this.stem_extension_override;var t=this.getGlyph();if(t){var n=Ms(Fs(e.prototype),"getStemExtension",this).call(this);if(t.stem){var i=this.getStaveNoteScale();n=(rt.HEIGHT+n)*i-rt.HEIGHT}return n}return 0}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getStaveNoteScale",value:function(){return this.render_options.glyph_font_scale/I.DEFAULT_NOTATION_FONT_SCALE}},{key:"draw",value:function(){Ms(Fs(e.prototype),"draw",this).call(this),this.setRendered();var t=this.stem;if(this.slash&&t){var n=this.getStaveNoteScale(),i=n/.66,o=void 0,r=this.beam;if(r)r.postFormatted||r.postFormat(),o=this.calcBeamedNotesSlashBBox(8*i,8*i,{stem:6*i,beam:5*i});else{var s=this.getStemDirection(),a=this.getNoteHeadBounds(),l=t.getHeight(),u=this.getAbsoluteX(),c=s===I.Stem.DOWN?a.y_top-l:a.y_bottom-l,h=s===I.Stem.DOWN?this.glyph.stem_down_extension:this.glyph.stem_up_extension,f=I.STEM_HEIGHT;f-=f/2.8,c+=(f+=h)*n*s;var b=s===I.Stem.UP?{x1:1,y1:0,x2:13,y2:-9}:{x1:-4,y1:1,x2:13,y2:9};o={x1:u+=b.x1*i,y1:c+=b.y1*i,x2:u+b.x2*i,y2:c+b.y2*i}}var p=this.context;p.save(),p.setLineWidth(1*i),p.beginPath(),p.moveTo(o.x1,o.y1),p.lineTo(o.x2,o.y2),p.closePath(),p.stroke(),p.restore()}}},{key:"calcBeamedNotesSlashBBox",value:function(t,e,n){var i=this.beam,o=i.slope,r=i.notes[i.notes.length-1]===this?-1:1,s=Math.atan(o*r),a=Math.cos(s)*e,l=Math.sin(s)*e;t*=this.getStemDirection();var u=Math.atan((l-t)/a),c=Math.cos(u)*n.stem*r,h=Math.sin(u)*n.stem,f=Math.cos(u)*n.beam*r,b=Math.sin(u)*n.beam,p=this.getStemX(),y=i.notes[0].getStemX(),d=this.beam.getBeamYToDraw()+(p-y)*o;return{x1:p-c,y1:d+t-h,x2:p+a*r+f,y2:d+l+b}}}]),e}();function Gs(t){return(Gs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ys(t,e){return!e||"object"!==Gs(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ws(t,e,n){return(Ws="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Hs(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Hs(t){return(Hs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Xs(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Us(t,e,n){return e&&Xs(t.prototype,e),n&&Xs(t,n),t}function Vs(t,e){return(Vs=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var zs=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ys(this,Hs(e).call(this,t,!1))).setAttribute("type","GraceTabNote"),h.Merge(n.render_options,{y_shift:.3,scale:.6,font:"7.5pt Arial"}),n.updateWidth(),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Vs(t,e)}(e,Wr),Us(e,null,[{key:"CATEGORY",get:function(){return"gracetabnotes"}}]),Us(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){Ws(Hs(e.prototype),"draw",this).call(this),this.setRendered()}}]),e}();function Ks(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Js(t,e,n){return e&&Ks(t.prototype,e),n&&Ks(t,n),t}var qs=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2";!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.setTuning(e)}return Js(t,null,[{key:"names",get:function(){return{standard:"E/5,B/4,G/4,D/4,A/3,E/3",dagdad:"D/5,A/4,G/4,D/4,A/3,D/3",dropd:"E/5,B/4,G/4,D/4,A/3,D/3",eb:"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3",standardBanjo:"D/5,B/4,G/4,D/4,G/5"}}}]),Js(t,[{key:"noteToInteger",value:function(t){return I.keyProperties(t).int_value}},{key:"setTuning",value:function(e){t.names[e]&&(e=t.names[e]),this.tuningString=e,this.tuningValues=[],this.numStrings=0;var n=e.split(/\s*,\s*/);if(0===n.length)throw new h.RERR("BadArguments","Invalid tuning string: "+e);this.numStrings=n.length;for(var i=0;i<this.numStrings;++i)this.tuningValues[i]=this.noteToInteger(n[i])}},{key:"getValueForString",value:function(t){var e=parseInt(t,10);if(e<1||e>this.numStrings)throw new h.RERR("BadArguments","String number must be between 1 and ".concat(this.numStrings,":").concat(t));return this.tuningValues[e-1]}},{key:"getValueForFret",value:function(t,e){var n=this.getValueForString(e),i=parseInt(t,10);if(i<0)throw new h.RERR("BadArguments","Fret number must be 0 or higher: "+t);return n+i}},{key:"getNoteForFret",value:function(t,e){var n=this.getValueForFret(t,e),i=Math.floor(n/12),o=n%12;return I.integerToNote(o)+"/"+i}}]),t}();function Qs(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var Zs=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.music=new We,this.setKey(e)}var e,n,i;return e=t,(n=[{key:"setKey",value:function(t){return this.key=t,this.reset(),this}},{key:"getKey",value:function(){return this.key}},{key:"reset",value:function(){if(this.keyParts=this.music.getKeyParts(this.key),this.keyString=this.keyParts.root,this.keyParts.accidental&&(this.keyString+=this.keyParts.accidental),!We.scaleTypes[this.keyParts.type])throw new h.RERR("BadArguments","Unsupported key type: ".concat(this.key));this.scale=this.music.getScaleTones(this.music.getNoteValue(this.keyString),We.scaleTypes[this.keyParts.type]),this.scaleMap={},this.scaleMapByValue={},this.originalScaleMapByValue={};for(var t=We.root_indices[this.keyParts.root],e=0;e<We.roots.length;++e){var n=(t+e)%We.roots.length,i=We.roots[n],o=this.music.getRelativeNoteName(i,this.scale[e]);this.scaleMap[i]=o,this.scaleMapByValue[this.scale[e]]=o,this.originalScaleMapByValue[this.scale[e]]=o}return this}},{key:"getAccidental",value:function(t){var e=this.music.getKeyParts(t).root,n=this.music.getNoteParts(this.scaleMap[e]);return{note:this.scaleMap[e],accidental:n.accidental}}},{key:"selectNote",value:function(t){t=t.toLowerCase();var e=this.music.getNoteParts(t),n=this.scaleMap[e.root],i=this.music.getNoteParts(n);if(n===t)return{note:n,accidental:e.accidental,change:!1};var o=this.scaleMapByValue[this.music.getNoteValue(t)];if(null!=o)return{note:o,accidental:this.music.getNoteParts(o).accidental,change:!1};var r=this.originalScaleMapByValue[this.music.getNoteValue(t)];return null!=r?(this.scaleMap[i.root]=r,delete this.scaleMapByValue[this.music.getNoteValue(n)],this.scaleMapByValue[this.music.getNoteValue(t)]=r,{note:r,accidental:this.music.getNoteParts(r).accidental,change:!0}):i.root===t?(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(i.root)]=i.root,this.scaleMap[i.root]=i.root,{note:i.root,accidental:null,change:!0}):(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(t)]=t,delete this.scaleMap[i.root],this.scaleMap[i.root]=t,{note:t,accidental:e.accidental,change:!0})}}])&&Qs(e.prototype,n),i&&Qs(e,i),t}();function $s(t){return($s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ta(t,e){return!e||"object"!==$s(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ea(t){return(ea=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function na(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ia(t,e,n){return e&&na(t.prototype,e),n&&na(t,n),t}function oa(t,e){return(oa=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ra=function(t){function e(t,n){var i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(i=ta(this,ea(e).call(this))).setAttribute("type","StaveHairpin"),i.notes=t,i.hairpin=n,i.position=de.Position.BELOW,i.render_options={height:10,y_shift:0,left_shift_px:0,right_shift_px:0},i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&oa(t,e)}(e,k),ia(e,null,[{key:"FormatByTicksAndDraw",value:function(t,n,i,o,r,s){var a=n.pixelsPerTick;if(null==a)throw new h.RuntimeError("BadArguments","A valid Formatter must be provide to draw offsets by ticks.");var l=a*s.left_shift_ticks,u=a*s.right_shift_ticks,c={height:s.height,y_shift:s.y_shift,left_shift_px:l,right_shift_px:u};new e({first_note:i.first_note,last_note:i.last_note},o).setContext(t).setRenderOptions(c).setPosition(r).draw()}},{key:"type",get:function(){return{CRESC:1,DECRESC:2}}}]),ia(e,[{key:"setPosition",value:function(t){return t!==de.Position.ABOVE&&t!==de.Position.BELOW||(this.position=t),this}},{key:"setRenderOptions",value:function(t){return null!=t.height&&null!=t.y_shift&&null!=t.left_shift_px&&null!=t.right_shift_px&&(this.render_options=t),this}},{key:"setNotes",value:function(t){if(!t.first_note&&!t.last_note)throw new h.RuntimeError("BadArguments","Hairpin needs to have either first_note or last_note set.");return this.first_note=t.first_note,this.last_note=t.last_note,this}},{key:"renderHairpin",value:function(t){var n=this.checkContext(),i=this.render_options.y_shift+20,o=t.first_y;this.position===de.Position.ABOVE&&(i=30-i,o=t.first_y-t.staff_height);var r=this.render_options.left_shift_px,s=this.render_options.right_shift_px;switch(n.beginPath(),this.hairpin){case e.type.CRESC:n.moveTo(t.last_x+s,o+i),n.lineTo(t.first_x+r,o+this.render_options.height/2+i),n.lineTo(t.last_x+s,o+this.render_options.height+i);break;case e.type.DECRESC:n.moveTo(t.first_x+r,o+i),n.lineTo(t.last_x+s,o+this.render_options.height/2+i),n.lineTo(t.first_x+r,o+this.render_options.height+i)}n.stroke(),n.closePath()}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.first_note,e=this.last_note,n=t.getModifierStartXY(this.position,0),i=e.getModifierStartXY(this.position,0);return this.renderHairpin({first_x:n.x,last_x:i.x,first_y:t.getStave().y+t.getStave().height,last_y:e.getStave().y+e.getStave().height,staff_height:t.getStave().height}),!0}}]),e}();function sa(t){return(sa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function aa(t,e){return!e||"object"!==sa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function la(t){return(la=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ua(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ca(t,e,n){return e&&ua(t.prototype,e),n&&ua(t,n),t}function ha(t,e){return(ha=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var fa=function(t){function e(t,n,i){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=aa(this,la(e).call(this))).setAttribute("type","Curve"),o.render_options={spacing:2,thickness:2,x_shift:0,y_shift:10,position:e.Position.NEAR_HEAD,position_end:e.Position.NEAR_HEAD,invert:!1,cps:[{x:0,y:10},{x:0,y:10}]},h.Merge(o.render_options,i),o.setNotes(t,n),o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ha(t,e)}(e,k),ca(e,null,[{key:"Position",get:function(){return{NEAR_HEAD:1,NEAR_TOP:2}}},{key:"PositionString",get:function(){return{nearHead:e.Position.NEAR_HEAD,nearTop:e.Position.NEAR_TOP}}}]),ca(e,[{key:"setNotes",value:function(t,e){if(!t&&!e)throw new h.RuntimeError("BadArguments","Curve needs to have either first_note or last_note set.");return this.from=t,this.to=e,this}},{key:"isPartial",value:function(){return!this.from||!this.to}},{key:"renderCurve",value:function(t){var e=this.context,n=this.render_options.cps,i=this.render_options.x_shift,o=this.render_options.y_shift*t.direction,r=t.first_x+i,s=t.first_y+o,a=t.last_x-i,l=t.last_y+o,u=this.render_options.thickness,c=(a-r)/(n.length+2);e.beginPath(),e.moveTo(r,s),e.bezierCurveTo(r+c+n[0].x,s+n[0].y*t.direction,a-c+n[1].x,l+n[1].y*t.direction,a,l),e.bezierCurveTo(a-c+n[1].x,l+(n[1].y+u)*t.direction,r+c+n[0].x,s+(n[0].y+u)*t.direction,r,s),e.stroke(),e.closePath(),e.fill()}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t,n,i,o,r,s=this.from,a=this.to,l="baseY",u="baseY";function c(t){return"string"==typeof t?e.PositionString[t]:t}var h=c(this.render_options.position),f=c(this.render_options.position_end);return h===e.Position.NEAR_TOP&&(l="topY",u="topY"),f===e.Position.NEAR_HEAD?u="baseY":f===e.Position.NEAR_TOP&&(u="topY"),s?(t=s.getTieRightX(),r=s.getStemDirection(),i=s.getStemExtents()[l]):(t=a.getStave().getTieStartX(),i=a.getStemExtents()[l]),a?(n=a.getTieLeftX(),r=a.getStemDirection(),o=a.getStemExtents()[u]):(n=s.getStave().getTieEndX(),o=s.getStemExtents()[u]),this.renderCurve({first_x:t,last_x:n,first_y:i,last_y:o,direction:r*(!0===this.render_options.invert?-1:1)}),!0}}]),e}();function ba(t){return(ba="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function pa(t,e){return!e||"object"!==ba(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ya(t){return(ya=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function da(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function va(t,e,n){return e&&da(t.prototype,e),n&&da(t,n),t}function ga(t,e){return(ga=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ma(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];_a.DEBUG&&h.L("Vex.Flow.TextDynamics",e)}var _a=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=pa(this,ya(e).call(this,t))).setAttribute("type","TextDynamics"),n.sequence=t.text.toLowerCase(),n.line=t.line||0,n.glyphs=[],h.Merge(n.render_options,{glyph_font_size:40}),ma("New Dynamics Text: ",n.sequence),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ga(t,e)}(e,Jt),va(e,null,[{key:"GLYPHS",get:function(){return{f:{code:"vba",width:12},p:{code:"vbf",width:14},m:{code:"v62",width:17},s:{code:"v4a",width:10},z:{code:"v80",width:12},r:{code:"vb1",width:12}}}}]),va(e,[{key:"setLine",value:function(t){return this.line=t,this}},{key:"preFormat",value:function(){var t=this,n=0;return this.sequence.split("").forEach(function(i){var o=e.GLYPHS[i];if(!o)throw new h.RERR("Invalid dynamics character: "+i);var r=t.render_options.glyph_font_size,s=new j(o.code,r);t.glyphs.push(s),n+=o.width}),this.setWidth(n),this.preFormatted=!0,this}},{key:"draw",value:function(){var t=this;this.setRendered();var n=this.getAbsoluteX(),i=this.stave.getYForLine(this.line+-3);ma("Rendering Dynamics: ",this.sequence);var o=n;this.glyphs.forEach(function(n,r){var s=t.sequence[r];n.render(t.context,o,i),o+=e.GLYPHS[s].width})}}]),e}();function xa(t){return(xa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function wa(t,e){return!e||"object"!==xa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ka(t){return(ka=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Sa(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ta(t,e,n){return e&&Sa(t.prototype,e),n&&Sa(t,n),t}function Ea(t,e){return(Ea=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Oa(t,e,n,i,o,r,s){t.beginPath(),t.moveTo(e,n),t.lineTo(i,o),t.lineTo(r,s),t.lineTo(e,n),t.closePath(),t.fill()}var Ra=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=wa(this,ka(e).call(this))).setAttribute("type","StaveLine"),n.notes=t,n.text="",n.font={family:"Arial",size:10,weight:""},n.render_options={padding_left:4,padding_right:3,line_width:1,line_dash:null,rounded_end:!0,color:null,draw_start_arrow:!1,draw_end_arrow:!1,arrowhead_length:10,arrowhead_angle:Math.PI/8,text_position_vertical:e.TextVerticalPosition.TOP,text_justification:e.TextJustification.CENTER},n.setNotes(t),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ea(t,e)}(e,k),Ta(e,null,[{key:"TextVerticalPosition",get:function(){return{TOP:1,BOTTOM:2}}},{key:"TextJustification",get:function(){return{LEFT:1,CENTER:2,RIGHT:3}}}]),Ta(e,[{key:"setFont",value:function(t){return this.font=t,this}},{key:"setText",value:function(t){return this.text=t,this}},{key:"setNotes",value:function(t){if(!t.first_note&&!t.last_note)throw new h.RuntimeError("BadArguments","Notes needs to have either first_note or last_note set.");if(t.first_indices||(t.first_indices=[0]),t.last_indices||(t.last_indices=[0]),t.first_indices.length!==t.last_indices.length)throw new h.RuntimeError("BadArguments","Connected notes must have similar index sizes");return this.first_note=t.first_note,this.first_indices=t.first_indices,this.last_note=t.last_note,this.last_indices=t.last_indices,this}},{key:"applyLineStyle",value:function(){var t=this.checkContext(),e=this.render_options;e.line_dash&&t.setLineDash(e.line_dash),e.line_width&&t.setLineWidth(e.line_width),e.rounded_end?t.setLineCap("round"):t.setLineCap("square")}},{key:"applyFontStyle",value:function(){var t=this.checkContext();this.font&&t.setFont(this.font.family,this.font.size,this.font.weight),this.render_options.color&&(t.setStrokeStyle(this.render_options.color),t.setFillStyle(this.render_options.color))}},{key:"draw",value:function(){var t=this,n=this.checkContext();this.setRendered();var i,o,r=this.first_note,s=this.last_note,a=this.render_options;n.save(),this.applyLineStyle(),this.first_indices.forEach(function(e,l){var u=t.last_indices[l];i=r.getModifierStartXY(2,e),o=s.getModifierStartXY(1,u);var c=i.y>o.y;i.x+=r.getMetrics().modRightPx+a.padding_left,o.x-=s.getMetrics().modLeftPx+a.padding_right;var h=r.getGlyph().getWidth();r.getKeyProps()[e].displaced&&1===r.getStemDirection()&&(i.x+=h+a.padding_left),s.getKeyProps()[u].displaced&&-1===s.getStemDirection()&&(o.x-=h+a.padding_right),i.y+=c?-3:1,o.y+=c?2:0,function(t,e,n,i){var o,r,s,a,l=i.draw_start_arrow&&i.draw_end_arrow,u=e.x,c=e.y,h=n.x,f=n.y,b=Math.sqrt((h-u)*(h-u)+(f-c)*(f-c)),p=(b-i.arrowhead_length/3)/b;i.draw_end_arrow||l?(o=Math.round(u+(h-u)*p),r=Math.round(c+(f-c)*p)):(o=h,r=f),i.draw_start_arrow||l?(s=u+(h-u)*(1-p),a=c+(f-c)*(1-p)):(s=u,a=c),i.color&&(t.setStrokeStyle(i.color),t.setFillStyle(i.color)),t.beginPath(),t.moveTo(s,a),t.lineTo(o,r),t.stroke(),t.closePath();var y,d,v,g,m=Math.atan2(f-c,h-u),_=Math.abs(i.arrowhead_length/Math.cos(i.arrowhead_angle));(i.draw_end_arrow||l)&&(y=m+Math.PI+i.arrowhead_angle,v=h+Math.cos(y)*_,g=f+Math.sin(y)*_,d=m+Math.PI-i.arrowhead_angle,Oa(t,v,g,h,f,h+Math.cos(d)*_,f+Math.sin(d)*_)),(i.draw_start_arrow||l)&&(y=m+i.arrowhead_angle,v=u+Math.cos(y)*_,g=c+Math.sin(y)*_,d=m-i.arrowhead_angle,Oa(t,v,g,u,c,u+Math.cos(d)*_,c+Math.sin(d)*_))}(n,i,o,t.render_options)}),n.restore();var l,u=n.measureText(this.text).width,c=a.text_justification,h=0;if(c===e.TextJustification.LEFT)h=i.x;else if(c===e.TextJustification.CENTER){h=(o.x-i.x)/2+i.x-u/2}else c===e.TextJustification.RIGHT&&(h=o.x-u);var f=a.text_position_vertical;return f===e.TextVerticalPosition.TOP?l=r.getStave().getYForTopText():f===e.TextVerticalPosition.BOTTOM&&(l=r.getStave().getYForBottomText(I.TEXT_HEIGHT_OFFSET_HACK)),n.save(),this.applyFontStyle(),n.fillText(this.text,h,l),n.restore(),this}}]),e}();function Pa(t){return(Pa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ca(t,e){return!e||"object"!==Pa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Na(t){return(Na=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Aa(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function La(t,e,n){return e&&Aa(t.prototype,e),n&&Aa(t,n),t}function Ma(t,e){return(Ma=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Fa(t,e,n,i,o){var r=Ba.GLYPHS[t];new j(r.code,o).render(e,n+r.x_shift,i+r.y_shift)}var Ba=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ca(this,Na(e).call(this))).setAttribute("type","PedalMarking"),n.notes=t,n.style=e.TEXT,n.line=0,n.custom_depress_text="",n.custom_release_text="",n.font={family:"Times New Roman",size:12,weight:"italic bold"},n.render_options={bracket_height:10,text_margin_right:6,bracket_line_width:1,glyph_point_size:40,color:"black"},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ma(t,e)}(e,k),La(e,null,[{key:"createSustain",value:function(t){return new e(t)}},{key:"createSostenuto",value:function(t){var n=new e(t);return n.setStyle(e.Styles.MIXED),n.setCustomText("Sost. Ped."),n}},{key:"createUnaCorda",value:function(t){var n=new e(t);return n.setStyle(e.Styles.TEXT),n.setCustomText("una corda","tre corda"),n}},{key:"GLYPHS",get:function(){return{pedal_depress:{code:"v36",x_shift:-10,y_shift:0},pedal_release:{code:"v5d",x_shift:-2,y_shift:3}}}},{key:"Styles",get:function(){return{TEXT:1,BRACKET:2,MIXED:3}}},{key:"StylesString",get:function(){return{text:e.Styles.TEXT,bracket:e.Styles.BRACKET,mixed:e.Styles.MIXED}}}]),La(e,[{key:"setCustomText",value:function(t,e){return this.custom_depress_text=t||"",this.custom_release_text=e||"",this}},{key:"setStyle",value:function(t){if(t<1&&t>3)throw new h.RERR("InvalidParameter","The style must be one found in PedalMarking.Styles");return this.style=t,this}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"drawBracketed",value:function(){var t,n,i=this.context,o=!1,r=this;this.notes.forEach(function(s,a,l){o=!o;var u=s.getAbsoluteX(),c=s.getStave().getYForBottomText(r.line+3);if(u<t)throw new h.RERR("InvalidConfiguration","The notes provided must be in order of ascending x positions");var f=l[a+1]===s,b=l[a-1]===s,p=0;if(o)if(p=b?5:0,r.style!==e.Styles.MIXED||b)i.beginPath(),i.moveTo(u,c-r.render_options.bracket_height),i.lineTo(u+p,c),i.stroke(),i.closePath();else if(r.custom_depress_text){var y=i.measureText(r.custom_depress_text).width;i.fillText(r.custom_depress_text,u-y/2,c),p=y/2+r.render_options.text_margin_right}else Fa("pedal_depress",i,u,c,r.render_options.glyph_point_size),p=20+r.render_options.text_margin_right;else p=f?-5:0,i.beginPath(),i.moveTo(t,n),i.lineTo(u+p,c),i.lineTo(u,c-r.render_options.bracket_height),i.stroke(),i.closePath();t=u+p,n=c})}},{key:"drawText",value:function(){var t=this.context,e=!1,n=this,i=n.render_options.glyph_point_size;this.notes.forEach(function(o){e=!e;var r=o.getStave(),s=o.getAbsoluteX(),a=r.getYForBottomText(n.line+3),l=0;e?n.custom_depress_text?(l=t.measureText(n.custom_depress_text).width,t.fillText(n.custom_depress_text,s-l/2,a)):Fa("pedal_depress",t,s,a,i):n.custom_release_text?(l=t.measureText(n.custom_release_text).width,t.fillText(n.custom_release_text,s-l/2,a)):Fa("pedal_release",t,s,a,i)})}},{key:"draw",value:function(){var t=this.checkContext();this.setRendered(),t.save(),t.setStrokeStyle(this.render_options.color),t.setFillStyle(this.render_options.color),t.setFont(this.font.family,this.font.size,this.font.weight),function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Ba.DEBUG&&h.L("Vex.Flow.PedalMarking",e)}("Rendering Pedal Marking"),this.style===e.Styles.BRACKET||this.style===e.Styles.MIXED?(t.setLineWidth(this.render_options.bracket_line_width),this.drawBracketed()):this.style===e.Styles.TEXT&&this.drawText(),t.restore()}}]),e}();function ja(t){return(ja="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Da(){return(Da=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function Ia(t,e){return!e||"object"!==ja(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ga(t){return(Ga=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ya(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Wa(t,e,n){return e&&Ya(t.prototype,e),n&&Ya(t,n),t}function Ha(t,e){return(Ha=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Xa=function(t){function e(t){var n,i=t.start,o=t.stop,r=t.text,s=void 0===r?"":r,a=t.superscript,l=void 0===a?"":a,u=t.position,c=void 0===u?e.Positions.TOP:u;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ia(this,Ga(e).call(this))).setAttribute("type","TextBracket"),n.start=i,n.stop=o,n.text=s,n.superscript=l,n.position="string"==typeof c?e.PositionString[c]:c,n.line=1,n.font={family:"Serif",size:15,weight:"italic"},n.render_options={dashed:!0,dash:[5],color:"black",line_width:1,show_bracket:!0,bracket_height:8,underline_superscript:!0},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ha(t,e)}(e,k),Wa(e,null,[{key:"Positions",get:function(){return{TOP:1,BOTTOM:-1}}},{key:"PositionString",get:function(){return{top:e.Positions.TOP,bottom:e.Positions.BOTTOM}}}]),Wa(e,[{key:"applyStyle",value:function(t){return t.setFont(this.font.family,this.font.size,this.font.weight),t.setStrokeStyle(this.render_options.color),t.setFillStyle(this.render_options.color),t.setLineWidth(this.render_options.line_width),this}},{key:"setDashed",value:function(t,e){return this.render_options.dashed=t,e&&(this.render_options.dash=e),this}},{key:"setFont",value:function(t){return this.font=Da({},this.font,t),this}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"draw",value:function(){var t=this.context;this.setRendered();var n=0;switch(this.position){case e.Positions.TOP:n=this.start.getStave().getYForTopText(this.line);break;case e.Positions.BOTTOM:n=this.start.getStave().getYForBottomText(this.line+I.TEXT_HEIGHT_OFFSET_HACK);break;default:throw new h.RERR("InvalidPosition","The position ".concat(this.position," is invalid"))}var i={x:this.start.getAbsoluteX(),y:n},o={x:this.stop.getAbsoluteX(),y:n};!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Xa.DEBUG&&h.L("Vex.Flow.TextBracket",e)}("Rendering TextBracket: start:",i,"stop:",o,"y:",n);var r=this.render_options.bracket_height*this.position;t.save(),this.applyStyle(t),t.fillText(this.text,i.x,i.y);var s=t.measureText(this.text).width,a=t.measureText("M").width,l=i.y-a/2.5;t.setFont(this.font.family,this.font.size/1.4,this.font.weight),t.fillText(this.superscript,i.x+s+1,l);var u=t.measureText(this.superscript).width,c=t.measureText("M").width,f=i.x,b=l,p=o.x+this.stop.getGlyph().getWidth();this.position===e.Positions.TOP?(f+=s+u+5,b-=c/2.7):this.position===e.Positions.BOTTOM&&(b+=c/2.7,f+=s+2,this.render_options.underline_superscript||(f+=u)),this.render_options.dashed?(Z.drawDashedLine(t,f,b,p,b,this.render_options.dash),this.render_options.show_bracket&&Z.drawDashedLine(t,p,b+1*this.position,p,b+r,this.render_options.dash)):(t.beginPath(),t.moveTo(f,b),t.lineTo(p,b),this.render_options.show_bracket&&t.lineTo(p,b+r),t.stroke(),t.closePath()),t.restore()}}]),e}();function Ua(t){return(Ua="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Va(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function za(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ka(t,e){return!e||"object"!==Ua(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ja(t,e,n){return(Ja="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=qa(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function qa(t){return(qa=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Qa(t,e){return(Qa=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Za=function(t){function e(){var t,n,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:co.type.SINGLE;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ka(this,qa(e).call(this,{duration:"b"}))).setAttribute("type","BarNote"),n.metrics={widths:{}};var o=co.type;return n.metrics.widths=(Va(t={},o.SINGLE,8),Va(t,o.DOUBLE,12),Va(t,o.END,15),Va(t,o.REPEAT_BEGIN,14),Va(t,o.REPEAT_END,14),Va(t,o.REPEAT_BOTH,18),Va(t,o.NONE,0),t),n.ignore_ticks=!0,n.setType(i),n}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Qa(t,e)}(e,Jt),n=e,(i=[{key:"getType",value:function(){return this.type}},{key:"setType",value:function(t){return this.type="string"==typeof t?co.typeString[t]:t,this.setWidth(this.metrics.widths[this.type]),this}},{key:"getBoundingBox",value:function(){return Ja(qa(e.prototype),"getBoundingBox",this).call(this)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){if(this.checkContext(),!this.stave)throw new h.RERR("NoStave","Can't draw without a stave.");!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Za.DEBUG&&h.L("Vex.Flow.BarNote",e)}("Rendering bar line at: ",this.getAbsoluteX());var t=new co(this.type);t.setX(this.getAbsoluteX()),t.draw(this.stave),this.setRendered()}}])&&za(n.prototype,i),o&&za(n,o),e}();function $a(t){return($a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function tl(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function el(t,e){return!e||"object"!==$a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function nl(t,e,n){return(nl="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=il(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function il(t){return(il=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ol(t,e){return(ol=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var rl=function(t){function e(t){var n,i;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new h.RuntimeError("BadArguments","Ghost note must have valid initialization data to identify duration.");if("string"==typeof t)i={duration:t};else{if("object"!==$a(t))throw new h.RuntimeError("BadArguments","Ghost note must have valid initialization data to identify duration.");i=t}return(n=el(this,il(e).call(this,i))).setAttribute("type","GhostNote"),n.setWidth(0),n}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ol(t,e)}(e,ue),n=e,(i=[{key:"isRest",value:function(){return!0}},{key:"setStave",value:function(t){nl(il(e.prototype),"setStave",this).call(this,t)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){if(!this.stave)throw new h.RERR("NoStave","Can't draw without a stave.");this.setRendered();for(var t=0;t<this.modifiers.length;++t){var e=this.modifiers[t];e.setContext(this.context),e.draw()}}}])&&tl(n.prototype,i),o&&tl(n,o),e}();function sl(t){return(sl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function al(t,e){return!e||"object"!==sl(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ll(t){return(ll=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ul(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function cl(t,e,n){return e&&ul(t.prototype,e),n&&ul(t,n),t}function hl(t,e){return(hl=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var fl=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=al(this,ll(e).call(this))).setAttribute("type","Tremolo"),n.num=t,n.note=null,n.index=null,n.position=de.Position.CENTER,n.code="v74",n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&hl(t,e)}(e,de),cl(e,null,[{key:"CATEGORY",get:function(){return"tremolo"}},{key:"YOFFSETSTEMUP",get:function(){return-9}},{key:"YOFFSETSTEMDOWN",get:function(){return-21}},{key:"XOFFSETSTEMUP",get:function(){return 6}},{key:"XOFFSETSTEMDOWN",get:function(){return-2}}]),cl(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new h.RERR("NoAttachedNote","Can't draw Tremolo without a note and index.");this.setRendered();var t=this.note.getStemDirection();this.y_spacing=4*t;var n=this.note.getModifierStartXY(this.position,this.index).x,i=this.note.stem.getExtents().topY,o="gracenotes"===this.note.getCategory()?Is.SCALE:1;i+=t<0?e.YOFFSETSTEMDOWN*o:e.YOFFSETSTEMUP*o,this.font={family:"Arial",size:16*o,weight:""},this.render_options={font_scale:35*o,stroke_px:3,stroke_spacing:10*o},n+=t<0?e.XOFFSETSTEMDOWN:e.XOFFSETSTEMUP;for(var r=0;r<this.num;++r)j.renderGlyph(this.context,n,i,this.render_options.font_scale,this.code),i+=this.y_spacing}}]),e}();function bl(t){return(bl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function pl(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function yl(t,e){return!e||"object"!==bl(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function dl(t){return(dl=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function vl(t,e){return(vl=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var gl=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=yl(this,dl(e).call(this,t))).setAttribute("type","Crescendo"),n.decrescendo=!1,n.line=t.line||0,n.height=15,h.Merge(n.render_options,{extend_left:0,extend_right:0,y_shift:0}),n}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&vl(t,e)}(e,Jt),n=e,(i=[{key:"setLine",value:function(t){return this.line=t,this}},{key:"setHeight",value:function(t){return this.height=t,this}},{key:"setDecrescendo",value:function(t){return this.decrescendo=t,this}},{key:"preFormat",value:function(){return this.preFormatted=!0,this}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.getTickContext(),e=bi.getNextContext(t),n=this.getAbsoluteX(),i=e?e.getX():this.stave.x+this.stave.width,o=this.stave.getYForLine(this.line+-3)+1;!function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];gl.DEBUG&&h.L("Vex.Flow.Crescendo",e)}("Drawing ",this.decrescendo?"decrescendo ":"crescendo ",this.height,"x",n-i),function(t,e){var n=e.begin_x,i=e.end_x,o=e.y,r=e.height/2;t.beginPath(),e.reverse?(t.moveTo(n,o-r),t.lineTo(i,o),t.lineTo(n,o+r)):(t.moveTo(i,o-r),t.lineTo(n,o),t.lineTo(i,o+r)),t.stroke(),t.closePath()}(this.context,{begin_x:n-this.render_options.extend_left,end_x:i+this.render_options.extend_right,y:o+this.render_options.y_shift,height:this.height,reverse:this.decrescendo})}}])&&pl(n.prototype,i),o&&pl(n,o),e}();function ml(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _l(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];kl.DEBUG&&h.L("Vex.Flow.Parser",e)}var xl=h.MakeException("ParserError");function wl(t){return void 0!==t.matchedString?t.matchedString:t.results?wl(t.results):1===t.length?wl(t[0]):0===t.length?null:t.map(wl)}var kl=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.grammar=e}var e,n,i;return e=t,(n=[{key:"parse",value:function(t){this.line=t,this.pos=0,this.errorPos=-1;var e=this.expect(this.grammar.begin());return e.errorPos=this.errorPos,e}},{key:"matchFail",value:function(t){-1===this.errorPos&&(this.errorPos=this.pos),this.pos=t}},{key:"matchSuccess",value:function(){this.errorPos=-1}},{key:"matchToken",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1]?new RegExp("^(("+t+"))"):new RegExp("^(("+t+")\\s*)"),n=this.line.slice(this.pos).match(e);return null!==n?{success:!0,matchedString:n[2],incrementPos:n[1].length,pos:this.pos}:{success:!1,pos:this.pos}}},{key:"expectOne",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=[],i=this.pos,o=!0,r=!1;e=!0===e||!0===t.maybe;for(var s=0;s<t.expect.length;s++){var a=t.expect[s],l=this.pos,u=this.expect(a);if(u.success){if(n.push(u),r=!0,t.or)break}else if(o=!1,!t.or){this.pos=l;break}}var c=t.or&&r||o,h=c||!0===e;return e&&!c&&(this.pos=i),h?this.matchSuccess():this.matchFail(i),{success:h,results:n,numMatches:c?1:0}}},{key:"expectOneOrMore",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=[],i=this.pos,o=0,r=!0;do{var s=this.expectOne(t);s.success?(o++,n.push(s.results)):r=!1}while(r);var a=o>0||!0===e;return!e||o>0||(this.pos=i),a?this.matchSuccess():this.matchFail(i),{success:a,results:n,numMatches:o}}},{key:"expectZeroOrMore",value:function(t){return this.expectOneOrMore(t,!0)}},{key:"expect",value:function(t){var e;if(_l("Evaluating rules:",t),!t)throw new xl("Invalid Rule: "+t,t);var n=t.bind(this.grammar)();if(n.token)(e=this.matchToken(n.token,!0===n.noSpace)).success&&(this.pos+=e.incrementPos);else{if(!n.expect)throw new xl("Bad grammar! No `token` or `expect` property",n);e=n.oneOrMore?this.expectOneOrMore(n):n.zeroOrMore?this.expectZeroOrMore(n):this.expectOne(n)}return e.matches=[],e.results&&e.results.forEach(function(t){return e.matches.push(wl(t))}),n.run&&e.success&&n.run(e),e}}])&&ml(e.prototype,n),i&&ml(e,i),t}();function Sl(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function Tl(t){return(Tl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function El(){return(El=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function Ol(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Rl(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Pl(t,e,n){return e&&Rl(t.prototype,e),n&&Rl(t,n),t}function Cl(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Bl.DEBUG&&h.L("Vex.Flow.EasyScore",e)}var Nl=h.MakeException("EasyScoreError"),Al=function(){function t(e){Ol(this,t),this.builder=e}return Pl(t,[{key:"begin",value:function(){return this.LINE}},{key:"LINE",value:function(){return{expect:[this.PIECE,this.PIECES,this.EOL]}}},{key:"PIECE",value:function(){var t=this;return{expect:[this.CHORDORNOTE,this.PARAMS],run:function(){return t.builder.commitPiece()}}}},{key:"PIECES",value:function(){return{expect:[this.COMMA,this.PIECE],zeroOrMore:!0}}},{key:"PARAMS",value:function(){return{expect:[this.DURATION,this.TYPE,this.DOTS,this.OPTS]}}},{key:"CHORDORNOTE",value:function(){return{expect:[this.CHORD,this.SINGLENOTE],or:!0}}},{key:"CHORD",value:function(){var t=this;return{expect:[this.LPAREN,this.NOTES,this.RPAREN],run:function(e){return t.builder.addChord(e.matches[1])}}}},{key:"NOTES",value:function(){return{expect:[this.NOTE],oneOrMore:!0}}},{key:"NOTE",value:function(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE]}}},{key:"SINGLENOTE",value:function(){var t=this;return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE],run:function(e){return t.builder.addSingleNote(e.matches[0],e.matches[1],e.matches[2])}}}},{key:"ACCIDENTAL",value:function(){return{expect:[this.ACCIDENTALS],maybe:!0}}},{key:"DOTS",value:function(){var t=this;return{expect:[this.DOT],zeroOrMore:!0,run:function(e){return t.builder.setNoteDots(e.matches[0])}}}},{key:"TYPE",value:function(){var t=this;return{expect:[this.SLASH,this.MAYBESLASH,this.TYPES],maybe:!0,run:function(e){return t.builder.setNoteType(e.matches[2])}}}},{key:"DURATION",value:function(){var t=this;return{expect:[this.SLASH,this.DURATIONS],maybe:!0,run:function(e){return t.builder.setNoteDuration(e.matches[1])}}}},{key:"OPTS",value:function(){return{expect:[this.LBRACKET,this.KEYVAL,this.KEYVALS,this.RBRACKET],maybe:!0}}},{key:"KEYVALS",value:function(){return{expect:[this.COMMA,this.KEYVAL],zeroOrMore:!0}}},{key:"KEYVAL",value:function(){var t=this;return{expect:[this.KEY,this.EQUALS,this.VAL],run:function(e){return t.builder.addNoteOption(e.matches[0],e.matches[2].slice(1,-1))}}}},{key:"VAL",value:function(){return{expect:[this.SVAL,this.DVAL],or:!0}}},{key:"KEY",value:function(){return{token:"[a-zA-Z][a-zA-Z0-9]*"}}},{key:"DVAL",value:function(){return{token:'["][^"]*["]'}}},{key:"SVAL",value:function(){return{token:"['][^']*[']"}}},{key:"NOTENAME",value:function(){return{token:"[a-gA-G]"}}},{key:"OCTAVE",value:function(){return{token:"[0-9]+"}}},{key:"ACCIDENTALS",value:function(){return{token:"bbs|bb|bss|bs|b|db|d|##|#|n|\\+\\+-|\\+-|\\+\\+|\\+|k|o"}}},{key:"DURATIONS",value:function(){return{token:"[0-9whq]+"}}},{key:"TYPES",value:function(){return{token:"[rRsSxX]"}}},{key:"LPAREN",value:function(){return{token:"[(]"}}},{key:"RPAREN",value:function(){return{token:"[)]"}}},{key:"COMMA",value:function(){return{token:"[,]"}}},{key:"DOT",value:function(){return{token:"[.]"}}},{key:"SLASH",value:function(){return{token:"[/]"}}},{key:"MAYBESLASH",value:function(){return{token:"[/]?"}}},{key:"EQUALS",value:function(){return{token:"[=]"}}},{key:"LBRACKET",value:function(){return{token:"\\["}}},{key:"RBRACKET",value:function(){return{token:"\\]"}}},{key:"EOL",value:function(){return{token:"$"}}}]),t}(),Ll=function(){function t(e){Ol(this,t),this.factory=e,this.commitHooks=[],this.reset()}return Pl(t,[{key:"reset",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.options={stem:"auto",clef:"treble"},this.elements={notes:[],accidentals:[]},this.rollingDuration="8",this.resetPiece(),El(this.options,t)}},{key:"getFactory",value:function(){return this.factory}},{key:"getElements",value:function(){return this.elements}},{key:"addCommitHook",value:function(t){this.commitHooks.push(t)}},{key:"resetPiece",value:function(){Cl("resetPiece"),this.piece={chord:[],duration:this.rollingDuration,dots:0,type:void 0,options:{}}}},{key:"setNoteDots",value:function(t){Cl("setNoteDots:",t),t&&(this.piece.dots=t.length)}},{key:"setNoteDuration",value:function(t){Cl("setNoteDuration:",t),this.rollingDuration=this.piece.duration=t||this.rollingDuration}},{key:"setNoteType",value:function(t){Cl("setNoteType:",t),t&&(this.piece.type=t)}},{key:"addNoteOption",value:function(t,e){Cl("addNoteOption: key:",t,"value:",e),this.piece.options[t]=e}},{key:"addNote",value:function(t,e,n){Cl("addNote:",t,e,n),this.piece.chord.push({key:t,accid:e,octave:n})}},{key:"addSingleNote",value:function(t,e,n){Cl("addSingleNote:",t,e,n),this.addNote(t,e,n)}},{key:"addChord",value:function(t){var e=this;Cl("startChord"),"object"!==Tl(t[0])?this.addSingleNote(t[0]):t.forEach(function(t){t&&e.addNote.apply(e,Sl(t))}),Cl("endChord")}},{key:"commitPiece",value:function(){var t=this;Cl("commitPiece");var e=this.factory;if(e){var n=El({},this.options,this.piece.options),i=n.stem,o=n.clef,r="auto"===i.toLowerCase(),s=r||"up"!==i.toLowerCase()?Le.STEM_DOWN:Le.STEM_UP,a=this.piece,l=a.chord,u=a.duration,c=a.dots,h=a.type,f=l.map(function(t){return t.key+"/"+t.octave}),b=e.StaveNote({keys:f,duration:u,dots:c,type:h,clef:o,auto_stem:r});r||b.setStemDirection(s);var p=l.map(function(t){return t.accid||null});p.forEach(function(t,n){t&&b.addAccidental(n,e.Accidental({type:t}))});for(var y=0;y<c;y++)b.addDotToAll();this.commitHooks.forEach(function(e){return e(n,b,t)}),this.elements.notes.push(b),this.elements.accidentals.concat(p),this.resetPiece()}}}]),t}();function Ml(t,e){var n=t.id;void 0!==n&&e.setAttribute("id",n)}function Fl(t,e){if(t.class){t.class.split(/\s*,\s*/).forEach(function(t){return e.addClass(t)})}}var Bl=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Ol(this,t),this.setOptions(e),this.defaults={clef:"treble",time:"4/4",stem:"auto"}}return Pl(t,[{key:"set",value:function(t){return El(this.defaults,t),this}},{key:"setOptions",value:function(t){var e=this;return this.options=El({factory:null,builder:null,commitHooks:[Ml,Fl,si.easyScoreHook],throwOnError:!1},t),this.factory=this.options.factory,this.builder=this.options.builder||new Ll(this.factory),this.grammar=new Al(this.builder),this.parser=new kl(this.grammar),this.options.commitHooks.forEach(function(t){return e.addCommitHook(t)}),this}},{key:"setContext",value:function(t){return this.factory&&this.factory.setContext(t),this}},{key:"parse",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.builder.reset(e);var n=this.parser.parse(t);if(!n.success&&this.options.throwOnError)throw new Nl("Error parsing line: "+t,n);return n}},{key:"beam",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.factory.Beam({notes:t,options:e}),t}},{key:"tuplet",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.factory.Tuplet({notes:t,options:e}),t}},{key:"notes",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e=El({clef:this.defaults.clef,stem:this.defaults.stem},e),this.parse(t,e),this.builder.getElements().notes}},{key:"voice",value:function(t,e){return e=El({time:this.defaults.time},e),this.factory.Voice(e).addTickables(t)}},{key:"addCommitHook",value:function(t){return this.builder.addCommitHook(t)}}]),t}();function jl(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Dl(){return(Dl=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}var Il=h.MakeException("FactoryError");function Gl(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0,n=e.options;return(t=Dl(e,t)).options=Dl(n,t.options),t}var Yl=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Yl.DEBUG&&h.L("Vex.Flow.Factory",e)}("New factory: ",e);var n={stave:{space:10},renderer:{context:null,elementId:"",backend:Z.Backends.SVG,width:500,height:200,background:"#FFF"},font:{face:"Arial",point:10,style:""}};this.options=n,this.setOptions(e)}var e,n,i;return e=t,i=[{key:"newFromElementId",value:function(e){return new t({renderer:{elementId:e,width:arguments.length>1&&void 0!==arguments[1]?arguments[1]:500,height:arguments.length>2&&void 0!==arguments[2]?arguments[2]:200}})}}],(n=[{key:"reset",value:function(){this.renderQ=[],this.systems=[],this.staves=[],this.voices=[],this.stave=null}},{key:"getOptions",value:function(){return this.options}},{key:"setOptions",value:function(t){for(var e=["stave","renderer","font"],n=0;n<e.length;n++){var i=e[n];Dl(this.options[i],t[i])}(null!==this.options.renderer.elementId||this.options.renderer.context)&&this.initRenderer(),this.reset()}},{key:"initRenderer",value:function(){var t=this.options.renderer,e=t.elementId,n=t.backend,i=t.width,o=t.height,r=t.background;if(""===e)throw new Il("HTML DOM element not set in Factory");this.context=Z.buildContext(e,n,i,o,r)}},{key:"getContext",value:function(){return this.context}},{key:"setContext",value:function(t){return this.context=t,this}},{key:"getStave",value:function(){return this.stave}},{key:"getVoices",value:function(){return this.voices}},{key:"space",value:function(t){return this.options.stave.space*t}},{key:"Stave",value:function(t){t=Gl(t,{x:0,y:0,width:this.options.renderer.width-this.space(1),options:{spacing_between_lines_px:this.options.stave.space}});var e=new Rr(t.x,t.y,t.width,t.options);return this.staves.push(e),e.setContext(this.context),this.stave=e,e}},{key:"TabStave",value:function(t){t=Gl(t,{x:0,y:0,width:this.options.renderer.width-this.space(1),options:{spacing_between_lines_px:1.3*this.options.stave.space}});var e=new Mr(t.x,t.y,t.width,t.options);return this.staves.push(e),e.setContext(this.context),this.stave=e,e}},{key:"StaveNote",value:function(t){var e=new Le(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"GhostNote",value:function(t){var e=new rl(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TextNote",value:function(t){var e=new Io(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"BarNote",value:function(t){t=Gl(t,{type:"single",options:{}});var e=new Za(t.type);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"ClefNote",value:function(t){t=Gl(t,{type:"treble",options:{size:"default"}});var e=new us(t.type,t.options.size,t.options.annotation);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TimeSigNote",value:function(t){t=Gl(t,{time:"4/4",options:{}});var e=new ks(t.time);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"KeySigNote",value:function(t){var e=new ds(t.key,t.cancelKey,t.alterKey);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TabNote",value:function(t){var e=new Wr(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"GraceNote",value:function(t){var e=new Is(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),e}},{key:"GraceNoteGroup",value:function(t){var e=new Pn(t.notes,t.slur);return e.setContext(this.context),e}},{key:"Accidental",value:function(t){t=Gl(t,{type:null,options:{}});var e=new $e(t.type);return e.setContext(this.context),e}},{key:"Annotation",value:function(t){t=Gl(t,{text:"p",vJustify:"below",hJustify:"center",fontFamily:"Times",fontSize:14,fontWeight:"bold italic",options:{}});var e=new Oi(t.text);return e.setJustification(t.hJustify),e.setVerticalJustification(t.vJustify),e.setFont(t.fontFamily,t.fontSize,t.fontWeight),e.setContext(this.context),e}},{key:"Articulation",value:function(t){t=Gl(t,{type:"a.",position:"above",options:{}});var e=new si(t.type);return e.setPosition(t.position),e.setContext(this.context),e}},{key:"TextDynamics",value:function(t){t=Gl(t,{text:"p",duration:"q",dots:0,line:0,options:{}});var e=new _a({text:t.text,line:t.line,duration:t.duration,dots:t.dots});return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"Fingering",value:function(t){t=Gl(t,{number:"0",position:"left",options:{}});var e=new Ge(t.number);return e.setPosition(t.position),e.setContext(this.context),e}},{key:"StringNumber",value:function(t){t=Gl(t,{number:"0",position:"left",options:{}});var e=new Hn(t.number);return e.setPosition(t.position),e.setContext(this.context),e}},{key:"TickContext",value:function(){return(new bi).setContext(this.context)}},{key:"ModifierContext",value:function(){return new Xi}},{key:"MultiMeasureRest",value:function(t){var e=new es(t.number_of_measures,t);return e.setContext(this.context),this.renderQ.push(e),e}},{key:"Voice",value:function(t){t=Gl(t,{time:"4/4",options:{}});var e=new Rt(t.time);return this.voices.push(e),e}},{key:"StaveConnector",value:function(t){t=Gl(t,{top_stave:null,bottom_stave:null,type:"double",options:{}});var e=new Bt(t.top_stave,t.bottom_stave);return e.setType(t.type).setContext(this.context),this.renderQ.push(e),e}},{key:"Formatter",value:function(){return new qi}},{key:"Tuplet",value:function(t){t=Gl(t,{notes:[],options:{}});var e=new ft(t.notes,t.options).setContext(this.context);return this.renderQ.push(e),e}},{key:"Beam",value:function(t){t=Gl(t,{notes:[],options:{autoStem:!1,secondaryBeamBreaks:[]}});var e=new xt(t.notes,t.options.autoStem).setContext(this.context);return e.breakSecondaryAt(t.options.secondaryBeamBreaks),this.renderQ.push(e),e}},{key:"Curve",value:function(t){t=Gl(t,{from:null,to:null,options:{}});var e=new fa(t.from,t.to,t.options).setContext(this.context);return this.renderQ.push(e),e}},{key:"StaveTie",value:function(t){t=Gl(t,{from:null,to:null,first_indices:[0],last_indices:[0],text:null,options:{direction:void 0}});var e=new pn({first_note:t.from,last_note:t.to,first_indices:t.first_indices,last_indices:t.last_indices},t.text);return t.options.direction&&e.setDirection(t.options.direction),e.setContext(this.context),this.renderQ.push(e),e}},{key:"StaveLine",value:function(t){t=Gl(t,{from:null,to:null,first_indices:[0],last_indices:[0],options:{}});var e=new Ra({first_note:t.from,last_note:t.to,first_indices:t.first_indices,last_indices:t.last_indices});return t.options.text&&e.setText(t.options.text),t.options.font&&e.setFont(t.options.font),e.setContext(this.context),this.renderQ.push(e),e}},{key:"VibratoBracket",value:function(t){t=Gl(t,{from:null,to:null,options:{harsh:!1}});var e=new Jr({start:t.from,stop:t.to});return t.options.line&&e.setLine(t.options.line),t.options.harsh&&e.setHarsh(t.options.harsh),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TextBracket",value:function(t){t=Gl(t,{from:null,to:null,text:"",options:{superscript:"",position:1}});var e=new Xa({start:t.from,stop:t.to,text:t.text,superscript:t.options.superscript,position:t.options.position});return t.options.line&&e.setLine(t.options.line),t.options.font&&e.setFont(t.options.font),e.setContext(this.context),this.renderQ.push(e),e}},{key:"System",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t.factory=this;var e=new ql(t).setContext(this.context);return this.systems.push(e),e}},{key:"EasyScore",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return t.factory=this,new Bl(t)}},{key:"PedalMarking",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t=Gl(t,{notes:[],options:{style:"mixed"}});var e=new Ba(t.notes);return e.setStyle(Ba.StylesString[t.options.style]),e.setContext(this.context),this.renderQ.push(e),e}},{key:"NoteSubGroup",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t=Gl(t,{notes:[],options:{}});var e=new ln(t.notes);return e.setContext(this.context),e}},{key:"draw",value:function(){var t=this;this.systems.forEach(function(e){return e.setContext(t.context).format()}),this.staves.forEach(function(e){return e.setContext(t.context).draw()}),this.voices.forEach(function(e){return e.setContext(t.context).draw()}),this.renderQ.forEach(function(e){e.isRendered()||e.setContext(t.context).draw()}),this.systems.forEach(function(e){return e.setContext(t.context).draw()}),this.reset()}}])&&jl(e.prototype,n),i&&jl(e,i),t}();function Wl(t){return(Wl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Hl(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Xl(t,e){return!e||"object"!==Wl(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ul(t,e,n){return(Ul="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var i=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Vl(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Vl(t){return(Vl=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function zl(t,e){return(zl=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Kl(){return(Kl=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function Jl(t,e){var n=e.options;return(t=Kl(e,t)).options=Kl(n,t.options),t}var ql=function(t){function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=Xl(this,Vl(e).call(this))).setAttribute("type","System"),t.setOptions(n),t.parts=[],t}var n,i,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&zl(t,e)}(e,k),n=e,(i=[{key:"setOptions",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.options=Jl(t,{x:10,y:10,width:500,connector:null,spaceBetweenStaves:12,factory:null,debugFormatter:!1,formatIterations:0,options:{}}),this.factory=this.options.factory||new Yl({renderer:{el:null}})}},{key:"setContext",value:function(t){return Ul(Vl(e.prototype),"setContext",this).call(this,t),this.factory.setContext(t),this}},{key:"addConnector",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"double";return this.connector=this.factory.StaveConnector({top_stave:this.parts[0].stave,bottom_stave:this.parts[this.parts.length-1].stave,type:t}),this.connector}},{key:"addStave",value:function(t){var e=this;return(t=Jl(t,{stave:null,voices:[],spaceAbove:0,spaceBelow:0,debugNoteMetrics:!1,options:{left_bar:!1}})).stave||(t.stave=this.factory.Stave({x:this.options.x,y:this.options.y,width:this.options.width,options:t.options})),t.voices.forEach(function(n){return n.setContext(e.context).setStave(t.stave).getTickables().forEach(function(e){return e.setStave(t.stave)})}),this.parts.push(t),t.stave}},{key:"format",value:function(){var t=this,e=new qi;this.formatter=e;var n=this.options.y,i=0,o=[],r=[];this.parts.forEach(function(s){n+=s.stave.space(s.spaceAbove),s.stave.setY(n),e.joinVoices(s.voices),n+=s.stave.space(s.spaceBelow),n+=s.stave.space(t.options.spaceBetweenStaves),s.debugNoteMetrics&&(r.push({y:n,voice:s.voices[0]}),n+=15),o=o.concat(s.voices),i=Math.max(i,s.stave.getNoteStartX())}),this.parts.forEach(function(t){return t.stave.setNoteStartX(i)});var s=this.options.width-(i-this.options.x)-Jt.STAVEPADDING;e.format(o,s);for(var a=0;a<this.options.formatIterations;a++)e.tune();this.startX=i,this.debugNoteMetricsYs=r,this.lastY=n}},{key:"draw",value:function(){var t=this.checkContext();this.setRendered(),this.options.debugFormatter&&qi.plotDebugging(t,this.formatter,this.startX,this.options.y,this.lastY),this.debugNoteMetricsYs.forEach(function(e){e.voice.getTickables().forEach(function(n){return Jt.plotMetrics(t,n,e.y)})})}}])&&Hl(n.prototype,i),o&&Hl(n,o),e}();h.Flow=I,h.Flow.Element=k,h.Flow.Fraction=y,h.Flow.Renderer=Z,h.Flow.Formatter=qi,h.Flow.Music=We,h.Flow.Glyph=j,h.Flow.Stave=Rr,h.Flow.StaveNote=Le,h.Flow.StaveModifier=io,h.Flow.StaveTempo=Ao,h.Flow.Voice=Rt,h.Flow.Accidental=$e,h.Flow.Beam=xt,h.Flow.StaveTie=pn,h.Flow.TabStave=Mr,h.Flow.TabNote=Wr,h.Flow.Bend=Mi,h.Flow.Vibrato=Yi,h.Flow.VibratoBracket=Jr,h.Flow.Note=Jt,h.Flow.ModifierContext=Xi,h.Flow.MultiMeasureRest=es,h.Flow.TickContext=bi,h.Flow.Articulation=si,h.Flow.Annotation=Oi,h.Flow.Barline=co,h.Flow.NoteHead=ie,h.Flow.StaveConnector=Bt,h.Flow.ClefNote=us,h.Flow.KeySignature=sr,h.Flow.KeySigNote=ds,h.Flow.TimeSignature=pr,h.Flow.TimeSigNote=ks,h.Flow.Stem=rt,h.Flow.TabTie=xn,h.Flow.Clef=$o,h.Flow.Dot=ke,h.Flow.Modifier=de,h.Flow.TabSlide=Cs,h.Flow.Tuplet=ft,h.Flow.GraceNote=Is,h.Flow.GraceTabNote=zs,h.Flow.Tuning=qs,h.Flow.KeyManager=Zs,h.Flow.StaveHairpin=ra,h.Flow.BoundingBox=R,h.Flow.Stroke=Bn,h.Flow.TextNote=Io,h.Flow.Curve=fa,h.Flow.TextDynamics=_a,h.Flow.StaveLine=Ra,h.Flow.Ornament=_i,h.Flow.PedalMarking=Ba,h.Flow.TextBracket=Xa,h.Flow.FretHandFinger=Ge,h.Flow.Repetition=go,h.Flow.BarNote=Za,h.Flow.GhostNote=rl,h.Flow.NoteSubGroup=ln,h.Flow.GraceNoteGroup=Pn,h.Flow.Tremolo=fl,h.Flow.StringNumber=Hn,h.Flow.Crescendo=gl,h.Flow.Volta=xr,h.Flow.Font=P,h.Flow.System=ql,h.Flow.Factory=Yl,h.Flow.Parser=kl,h.Flow.EasyScore=Bl,h.Flow.Registry=_;e.default=h}]).default});
//# sourceMappingURL=vexflow-debug.js.map

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

if("undefined"==typeof MIDI&&(MIDI={}),function(e){"use strict";var n={},t=0,o=function(e){t++;var o=document.body,r=new Audio,i=e.split(";")[0];r.id="audio",r.setAttribute("preload","auto"),r.setAttribute("audiobuffer",!0),r.addEventListener("error",function(){o.removeChild(r),n[i]=!1,t--},!1),r.addEventListener("canplaythrough",function(){o.removeChild(r),n[i]=!0,t--},!1),r.src="data:"+e,o.appendChild(r)};e.audioDetect=function(e){if(navigator.requestMIDIAccess){var r=Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf("[native code]");if(r)n.webmidi=!0;else for(var i=0;navigator.plugins.length>i;i++){var a=navigator.plugins[i];a.name.indexOf("Jazz-Plugin")>=0&&(n.webmidi=!0)}}if("undefined"==typeof Audio)return e({});n.audiotag=!0,(window.AudioContext||window.webkitAudioContext)&&(n.webaudio=!0);var u=new Audio;if(u.canPlayType===void 0)return e(n);var s=u.canPlayType('audio/ogg; codecs="vorbis"');s="probably"===s||"maybe"===s;var c=u.canPlayType("audio/mpeg");if(c="probably"===c||"maybe"===c,!s&&!c)return e(n),void 0;s&&o("audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA="),c&&o("audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq");var l=(new Date).getTime(),d=window.setInterval(function(){var o=(new Date).getTime(),r=o-l>5e3;(!t||r)&&(window.clearInterval(d),e(n))},1)}}(MIDI),function(e){"use strict";e.GM=function(e){var n=function(e){return e.replace(/[^a-z0-9 ]/gi,"").replace(/[ ]/g,"_").toLowerCase()},t={byName:{},byId:{},byCategory:{}};for(var o in e)for(var r=e[o],i=0,a=r.length;a>i;i++){var u=r[i];if(u){var s=parseInt(u.substr(0,u.indexOf(" ")),10);u=u.replace(s+" ",""),t.byId[--s]=t.byName[n(u)]=t.byCategory[n(o)]={id:n(u),instrument:u,number:s,category:o}}}return t}({Piano:["1 Acoustic Grand Piano","2 Bright Acoustic Piano","3 Electric Grand Piano","4 Honky-tonk Piano","5 Electric Piano 1","6 Electric Piano 2","7 Harpsichord","8 Clavinet"],"Chromatic Percussion":["9 Celesta","10 Glockenspiel","11 Music Box","12 Vibraphone","13 Marimba","14 Xylophone","15 Tubular Bells","16 Dulcimer"],Organ:["17 Drawbar Organ","18 Percussive Organ","19 Rock Organ","20 Church Organ","21 Reed Organ","22 Accordion","23 Harmonica","24 Tango Accordion"],Guitar:["25 Acoustic Guitar (nylon)","26 Acoustic Guitar (steel)","27 Electric Guitar (jazz)","28 Electric Guitar (clean)","29 Electric Guitar (muted)","30 Overdriven Guitar","31 Distortion Guitar","32 Guitar Harmonics"],Bass:["33 Acoustic Bass","34 Electric Bass (finger)","35 Electric Bass (pick)","36 Fretless Bass","37 Slap Bass 1","38 Slap Bass 2","39 Synth Bass 1","40 Synth Bass 2"],Strings:["41 Violin","42 Viola","43 Cello","44 Contrabass","45 Tremolo Strings","46 Pizzicato Strings","47 Orchestral Harp","48 Timpani"],Ensemble:["49 String Ensemble 1","50 String Ensemble 2","51 Synth Strings 1","52 Synth Strings 2","53 Choir Aahs","54 Voice Oohs","55 Synth Choir","56 Orchestra Hit"],Brass:["57 Trumpet","58 Trombone","59 Tuba","60 Muted Trumpet","61 French Horn","62 Brass Section","63 Synth Brass 1","64 Synth Brass 2"],Reed:["65 Soprano Sax","66 Alto Sax","67 Tenor Sax","68 Baritone Sax","69 Oboe","70 English Horn","71 Bassoon","72 Clarinet"],Pipe:["73 Piccolo","74 Flute","75 Recorder","76 Pan Flute","77 Blown Bottle","78 Shakuhachi","79 Whistle","80 Ocarina"],"Synth Lead":["81 Lead 1 (square)","82 Lead 2 (sawtooth)","83 Lead 3 (calliope)","84 Lead 4 (chiff)","85 Lead 5 (charang)","86 Lead 6 (voice)","87 Lead 7 (fifths)","88 Lead 8 (bass + lead)"],"Synth Pad":["89 Pad 1 (new age)","90 Pad 2 (warm)","91 Pad 3 (polysynth)","92 Pad 4 (choir)","93 Pad 5 (bowed)","94 Pad 6 (metallic)","95 Pad 7 (halo)","96 Pad 8 (sweep)"],"Synth Effects":["97 FX 1 (rain)","98 FX 2 (soundtrack)","99 FX 3 (crystal)","100 FX 4 (atmosphere)","101 FX 5 (brightness)","102 FX 6 (goblins)","103 FX 7 (echoes)","104 FX 8 (sci-fi)"],Ethnic:["105 Sitar","106 Banjo","107 Shamisen","108 Koto","109 Kalimba","110 Bagpipe","111 Fiddle","112 Shanai"],Percussive:["113 Tinkle Bell","114 Agogo","115 Steel Drums","116 Woodblock","117 Taiko Drum","118 Melodic Tom","119 Synth Drum"],"Sound effects":["120 Reverse Cymbal","121 Guitar Fret Noise","122 Breath Noise","123 Seashore","124 Bird Tweet","125 Telephone Ring","126 Helicopter","127 Applause","128 Gunshot"]}),e.getInstrument=function(n){var t=e.channels[n];return t&&t.instrument},e.setInstrument=function(n,t,o){var r=e.channels[n];return o?setTimeout(function(){r.instrument=t},o):(r.instrument=t,void 0)},e.getMono=function(n){var t=e.channels[n];return t&&t.mono},e.setMono=function(n,t,o){var r=e.channels[n];return o?setTimeout(function(){r.mono=t},o):(r.mono=t,void 0)},e.getOmni=function(n){var t=e.channels[n];return t&&t.omni},e.setOmni=function(n,t){var o=e.channels[n];return delay?setTimeout(function(){o.omni=t},delay):(o.omni=t,void 0)},e.getSolo=function(n){var t=e.channels[n];return t&&t.solo},e.setSolo=function(n,t){var o=e.channels[n];return delay?setTimeout(function(){o.solo=t},delay):(o.solo=t,void 0)},e.channels=function(){for(var e={},n=0;16>n;n++)e[n]={instrument:n,pitchBend:0,mute:!1,mono:!1,omni:!1,solo:!1};return e}(),e.keyToNote={},e.noteToKey={},function(){for(var n=21,t=108,o=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],r=n;t>=r;r++){var i=(r-12)/12>>0,a=o[r%12]+i;e.keyToNote[a]=r,e.noteToKey[r]=a}}()}(MIDI),"undefined"==typeof MIDI&&(MIDI={}),MIDI.Soundfont=MIDI.Soundfont||{},MIDI.Player=MIDI.Player||{},function(e){"use strict";e.DEBUG=!0,e.USE_XHR=!0,e.soundfontUrl="./soundfont/",e.loadPlugin=function(t){"function"==typeof t&&(t={onsuccess:t}),e.soundfontUrl=t.soundfontUrl||e.soundfontUrl,e.audioDetect(function(o){var r=window.location.hash,i="";if(o[t.api]?i=t.api:o[r.substr(1)]?i=r.substr(1):o.webmidi?i="webmidi":window.AudioContext?i="webaudio":window.Audio&&(i="audiotag"),n[i]){if(t.targetFormat)var a=t.targetFormat;else var a=o["audio/ogg"]?"ogg":"mp3";e.__api=i,e.__audioFormat=a,e.supports=o,e.loadResource(t)}})},e.loadResource=function(t){var o=t.instruments||t.instrument||"acoustic_grand_piano";"object"!=typeof o&&(o=o||0===o?[o]:[]);for(var r=0;o.length>r;r++){var i=o[r];i===+i&&e.GM.byId[i]&&(o[r]=e.GM.byId[i].id)}t.format=e.__audioFormat,t.instruments=o,n[e.__api](t)};var n={webmidi:function(n){e.WebMIDI.connect(n)},audiotag:function(e){t(e,"AudioTag")},webaudio:function(e){t(e,"WebAudio")}},t=function(n,t){for(var r=n.format,i=n.instruments,a=n.onprogress,u=n.onerror,s=i.length,c=s,l=function(){--c||(a&&a("load",1),e[t].connect(n))},d=0;s>d;d++){var f=i[d];MIDI.Soundfont[f]?l():o(i[d],r,function(e,n){var t=n/s,o=(s-c)/s;a&&a("load",t+o,f)},function(){l()},u)}},o=function(n,t,o,r,i){var a=e.soundfontUrl+n+"-"+t+".js";e.USE_XHR?e.util.request({url:a,format:"text",onerror:i,onprogress:o,onsuccess:function(e,n){var t=document.createElement("script");t.language="javascript",t.type="text/javascript",t.text=n,document.body.appendChild(t),r()}}):dom.loadScript.add({url:a,verify:'MIDI.Soundfont["'+n+'"]',onerror:i,onsuccess:function(){r()}})};e.setDefaultPlugin=function(n){for(var t in n)e[t]=n[t]}}(MIDI),"undefined"==typeof MIDI&&(MIDI={}),MIDI.Player===void 0&&(MIDI.Player={}),MIDI.Players===void 0&&(MIDI.Players={}),function(){"use strict";MIDI.Players.PlayInstance=function(){var e=this;e.currentTime=0,e.endTime=0,e.restart=0,e.playing=!1,e.timeWarp=1,e.startDelay=0,e.BPM=120,e.start=e.resume=function(n){-1>e.currentTime&&(e.currentTime=-1),e.startAudio(e.currentTime,null,n)},e.pause=function(){var n=e.restart;e.stopAudio(),e.restart=n},e.stop=function(){e.stopAudio(),e.restart=0,e.currentTime=0},e.addListener=function(n){e.onMidiEvent=n},e.removeListener=function(){e.onMidiEvent=void 0},e.clearAnimation=function(){e.animationFrameId&&cancelAnimationFrame(e.animationFrameId)},e.setAnimation=function(n){var t=0,o=0,r=0;e.clearAnimation(),e.frame=function(){if(e.animationFrameId=requestAnimationFrame(e.frame),0!==e.endTime){e.playing?(t=r===e.currentTime?o-Date.now():0,t=0===e.currentTime?0:e.currentTime-t,r!==e.currentTime&&(o=Date.now(),r=e.currentTime)):t=e.currentTime;var i=e.endTime,a=t/1e3,u=a/60,s=a-60*u,c=60*u+s,l=i/1e3;-1>l-c||n({now:c,end:l,events:e.noteRegistrar})}},requestAnimationFrame(e.frame)},e.loadMidiFile=function(n,t,o){try{e.replayer=new Replayer(MidiFile(e.currentData),e.timeWarp,null,e.BPM),e.data=e.replayer.getData(),e.endTime=e.getLength(),MIDI.loadPlugin({onsuccess:n,onprogress:t,onerror:o})}catch(r){o&&o(r)}},e.loadFile=function(n,t,o,r){if(e.stop(),-1!==n.indexOf("base64,")){var i=window.atob(n.split(",")[1]);e.currentData=i,e.loadMidiFile(t,o,r)}else{var a=new XMLHttpRequest;a.open("GET",n),a.overrideMimeType("text/plain; charset=x-user-defined"),a.onreadystatechange=function(){if(4===this.readyState)if(200===this.status){for(var n=this.responseText||"",i=[],a=n.length,u=String.fromCharCode,s=0;a>s;s++)i[s]=u(255&n.charCodeAt(s));var c=i.join("");e.currentData=c,e.loadMidiFile(t,o,r)}else r&&r("Unable to load MIDI file")},a.send()}},e.getFileInstruments=function(){for(var n={},t={},o=0;e.data.length>o;o++){var r=e.data[o][0].event;if("channel"===r.type){var i=r.channel;switch(r.subtype){case"controller":break;case"programChange":t[i]=r.programNumber;break;case"noteOn":var a=t[i],u=MIDI.GM.byId[isFinite(a)?a:i];n[u.id]=!0}}}var s=[];for(var c in n)s.push(c);return s},e.eventQueue=[],e.queuedTime,e.startTime=0,e.noteRegistrar={},e.onMidiEvent=void 0,e.scheduleTracking=function(n,t,o,r,i,a){return setTimeout(function(){var r={channel:n,note:t,now:o,end:e.endTime,message:i,velocity:a};128===i?delete e.noteRegistrar[t]:e.noteRegistrar[t]=r,e.onMidiEvent&&e.onMidiEvent(r),e.currentTime=o,e.eventQueue.shift(),1e3>e.eventQueue.length?e.startAudio(e.queuedTime,!0):e.currentTime===e.queuedTime&&e.queuedTime<e.endTime&&e.startAudio(e.queuedTime,!0)},o-r)},e.getContext=function(){return"webaudio"===MIDI.api?MIDI.WebAudio.getContext():(e.ctx={currentTime:0},e.ctx)},e.getLength=function(){for(var n=e.data,t=n.length,o=.5,r=0;t>r;r++)o+=n[r][1];return o},e.__now=void 0,e.getNow=function(){return window.performance&&window.performance.now?window.performance.now():Date.now()},e.startAudio=function(n,t,o){if(e.replayer){t||(n===void 0&&(n=e.restart),e.playing&&e.stopAudio(),e.playing=!0,e.data=e.replayer.getData(),e.endTime=e.getLength());var r,i=0,a=0,u=e.data,s=e.getContext(),c=u.length;e.queuedTime=.5,e.eventQueue[0]&&e.eventQueue[0].interval||0;var l=n-e.currentTime;if("webaudio"!==MIDI.api){var d=e.getNow();e.__now=e.__now||d,s.currentTime=(d-e.__now)/1e3}e.startTime=s.currentTime;for(var f=0;c>f&&100>a;f++){var A=u[f];if(n>=(e.queuedTime+=A[1]))i=e.queuedTime;else{n=e.queuedTime-i;var p=A[0].event;if("channel"===p.type){var m=p.channel,v=MIDI.channels[m],q=s.currentTime+(n+l+e.startDelay)/1e3,g=e.queuedTime-i+e.startDelay;switch(p.subtype){case"controller":MIDI.setController(m,p.controllerType,p.value,q);break;case"programChange":MIDI.programChange(m,p.programNumber,q);break;case"pitchBend":MIDI.pitchBend(m,p.value,q);break;case"noteOn":if(v.mute)break;r=p.noteNumber-(e.MIDIOffset||0),e.eventQueue.push({event:p,time:g,source:MIDI.noteOn(m,p.noteNumber,p.velocity,q),interval:e.scheduleTracking(m,r,e.queuedTime+e.startDelay,i-l,144,p.velocity)}),a++;break;case"noteOff":if(v.mute)break;r=p.noteNumber-(e.MIDIOffset||0),e.eventQueue.push({event:p,time:g,source:MIDI.noteOff(m,p.noteNumber,q),interval:e.scheduleTracking(m,r,e.queuedTime,i-l,128,0)});break;default:}}}}o&&o(e.eventQueue)}},e.stopAudio=function(){var n=e.getContext();for(e.playing=!1,e.restart+=1e3*(n.currentTime-e.startTime);e.eventQueue.length;){var t=e.eventQueue.pop();window.clearInterval(t.interval),t.source&&("number"==typeof t.source?window.clearTimeout(t.source):t.source.disconnect(0))}for(var o in e.noteRegistrar){var t=e.noteRegistrar[o];144===e.noteRegistrar[o].message&&e.onMidiEvent&&e.onMidiEvent({channel:t.channel,note:t.note,now:t.now,end:t.end,message:128,velocity:t.velocity})}e.noteRegistrar={}}},MIDI.Player=new MIDI.Players.PlayInstance}(),function(e){"use strict";window.Audio&&function(){for(var n=e.AudioTag={api:"audiotag"},t={},o=127,r=-1,i=[],a=[],u={},s=0;12>s;s++)i[s]=new Audio;var c=function(n,t){if(e.channels[n]){var s=e.channels[n].instrument,c=e.GM.byId[s].id,t=u[t];if(t){var l=c+""+t.id,d=(r+1)%i.length,f=i[d];if(a[d]=l,!e.Soundfont[c])return e.DEBUG&&console.log("404",c),void 0;f.src=e.Soundfont[c][t.id],f.volume=o/127,f.play(),r=d}}},l=function(n,t){if(e.channels[n]){var o=e.channels[n].instrument,s=e.GM.byId[o].id,t=u[t];if(t)for(var c=s+""+t.id,l=0,d=i.length;d>l;l++){var f=(l+r+1)%d,A=a[f];if(A&&A==c)return i[f].pause(),a[f]=null,void 0}}};n.audioBuffers=i,n.send=function(){},n.setController=function(){},n.setVolume=function(e,n){o=n},n.programChange=function(n,t){e.channels[n].instrument=t},n.pitchBend=function(){},n.noteOn=function(e,n,o,r){var i=t[n];if(u[i])return r?setTimeout(function(){c(e,i)},1e3*r):(c(e,i),void 0)},n.noteOff=function(){},n.chordOn=function(e,n,o,r){for(var i=0;n.length>i;i++){var a=n[i],s=t[a];if(u[s]){if(r)return setTimeout(function(){c(e,s)},1e3*r);c(e,s)}}},n.chordOff=function(e,n,o){for(var r=0;n.length>r;r++){var i=n[r],a=t[i];if(u[a]){if(o)return setTimeout(function(){l(e,a)},1e3*o);l(e,a)}}},n.stopAllNotes=function(){for(var e=0,n=i.length;n>e;e++)i[e].pause()},n.connect=function(o){e.setDefaultPlugin(n);for(var r in e.keyToNote)t[e.keyToNote[r]]=r,u[r]={id:r};o.onsuccess&&o.onsuccess()}}()}(MIDI),function(e){"use strict";window.AudioContext&&function(){function n(e,n,t){if(r){var i=new Audio;i.src=e,i.controls=!1,i.autoplay=!1,i.preload=!1,i.addEventListener("canplay",function(){n&&n(i)}),i.addEventListener("error",function(e){t&&t(e)}),document.body.appendChild(i)}else if(0===e.indexOf("data:audio")){var a=e.split(",")[1],u=Base64Binary.decodeArrayBuffer(a);o.decodeAudioData(u,n,t)}else{var s=new XMLHttpRequest;s.open("GET",e,!0),s.responseType="arraybuffer",s.onload=function(){o.decodeAudioData(s.response,n,t)},s.send()}}function t(){return new(window.AudioContext||window.webkitAudioContext)}var o,r=!1,i=e.WebAudio={api:"webaudio"},a={},u={},s=127,c={};i.audioBuffers=c,i.send=function(){},i.setController=function(){},i.setVolume=function(e,n,t){t?setTimeout(function(){s=n},1e3*t):s=n},i.programChange=function(n,t){var o=e.channels[n];o.instrument=t},i.pitchBend=function(n,t){var o=e.channels[n];o.pitchBend=t},i.noteOn=function(n,t,i,l){l=l||0;var d=e.channels[n],f=d.instrument,A=f+""+t,p=c[A];if(p){if(o.currentTime>l&&(l+=o.currentTime),r)var m=o.createMediaElementSource(p);else{var m=o.createBufferSource();m.buffer=p}if(u){var v=m;for(var q in u)v.connect(u[q].input),v=u[q]}var g=2*i/127*(s/127)-1;if(m.connect(o.destination),m.playbackRate.value=1,m.gainNode=o.createGain(),m.gainNode.connect(o.destination),m.gainNode.gain.value=Math.min(1,Math.max(-1,g)),m.connect(m.gainNode),r){if(l)return setTimeout(function(){p.currentTime=0,p.play()},1e3*l);p.currentTime=0,p.play()}else m.start(l||0);return a[n+""+t]=m,m}},i.noteOff=function(n,t,i){i=i||0;var u=e.channels[n],s=u.instrument,l=s+""+t,d=c[l];if(d){o.currentTime>i&&(i+=o.currentTime);var f=a[n+""+t];if(f){if(f.gainNode){var A=f.gainNode.gain;A.linearRampToValueAtTime(A.value,i),A.linearRampToValueAtTime(-1,i+.3)}return r?i?setTimeout(function(){d.pause()},1e3*i):d.pause():f.noteOff?f.noteOff(i+.5):f.stop(i+.5),delete a[n+""+t],f}}},i.chordOn=function(e,n,t,o){for(var r,a={},u=0,s=n.length;s>u;u++)a[r=n[u]]=i.noteOn(e,r,t,o);return a},i.chordOff=function(e,n,t){for(var o,r={},a=0,u=n.length;u>a;a++)r[o=n[a]]=i.noteOff(e,o,t);return r},i.stopAllNotes=function(){for(var e in a){var n=0;o.currentTime>n&&(n+=o.currentTime);var t=a[e];t.gain.linearRampToValueAtTime(1,n),t.gain.linearRampToValueAtTime(0,n+.3),t.noteOff?t.noteOff(n+.3):t.stop(n+.3),delete a[e]}},i.setEffects=function(e){if(!o.tunajs)return console.log("Effects module not installed.");for(var n=0;e.length>n;n++){var t=e[n],r=new o.tunajs[t.type](t);r.connect(o.destination),u[t.type]=r}},i.connect=function(n){e.setDefaultPlugin(i),i.setContext(o||t(),n.onsuccess)},i.getContext=function(){return o},i.setContext=function(t,r){o=t,"undefined"==typeof Tuna||o.tunajs||(o.tunajs=new Tuna(o));var i=[],a=e.keyToNote;for(var u in a)i.push(u);var s=function(){for(var e in d)if(d[e])return;r&&(r(),r=null)},l=function(t,o,r,i){var a=t[i];a&&(d[o]++,n(a,function(n){n.id=i;var r=e.keyToNote[i];c[o+""+r]=n,0===--d[o]&&(t.isLoaded=!0,s(f))},function(){}))},d={};for(var f in e.Soundfont){var A=e.Soundfont[f];if(!A.isLoaded){var p=e.GM.byName[f],m=p.number;d[m]=0;for(var v=0;i.length>v;v++){var u=i[v];l(A,m,v,u)}}}setTimeout(s,1)}}()}(MIDI),function(e){"use strict";var n=null,t=null,o=e.WebMIDI={api:"webmidi"};o.send=function(e,n){t.send(e,1e3*n)},o.setController=function(e,n,o,r){t.send([e,n,o],1e3*r)},o.setVolume=function(e,n,o){t.send([176+e,7,n],1e3*o)},o.programChange=function(e,n,o){t.send([192+e,n],1e3*o)},o.pitchBend=function(e,n,o){t.send([224+e,n],1e3*o)},o.noteOn=function(e,n,o,r){t.send([144+e,n,o],1e3*r)},o.noteOff=function(e,n,o){t.send([128+e,n,0],1e3*o)},o.chordOn=function(e,n,o,r){for(var i=0;n.length>i;i++){var a=n[i];t.send([144+e,a,o],1e3*r)}},o.chordOff=function(e,n,o){for(var r=0;n.length>r;r++){var i=n[r];t.send([128+e,i,0],1e3*o)}},o.stopAllNotes=function(){t.cancel();for(var e=0;16>e;e++)t.send([176+e,123,0])},o.connect=function(r){e.setDefaultPlugin(o);var i=function(){if(window.AudioContext)r.api="webaudio";else{if(!window.Audio)return;r.api="audiotag"}e.loadPlugin(r)};navigator.requestMIDIAccess().then(function(e){n=e;var o=n.outputs;t="function"==typeof o?o()[0]:o[0],void 0===t?i():r.onsuccess&&r.onsuccess()},i)}}(MIDI),"undefined"==typeof MIDI&&(MIDI={}),function(e){var n=e.util||(e.util={});if(n.request=function(n,o,r,i){"use strict";"string"==typeof n&&(n={url:n});var a=n.data,u=n.url,s=n.method||(n.data?"POST":"GET"),c=n.format,l=n.headers,d=n.responseType,f=n.withCredentials||!1,o=o||n.onsuccess,r=r||n.onerror,i=i||n.onprogress;if(t!==void 0&&e.loc.isLocalUrl(u))return t.readFile(u,"utf8",function(e,n){e?r&&r(e):o&&o({responseText:n})}),void 0;var A=new XMLHttpRequest;if(A.open(s,u,!0),l)for(var p in l)A.setRequestHeader(p,l[p]);else a&&A.setRequestHeader("Content-type","application/x-www-form-urlencoded");return"binary"===c&&A.overrideMimeType&&A.overrideMimeType("text/plain; charset=x-user-defined"),d&&(A.responseType=d),f&&(A.withCredentials="true"),r&&"onerror"in A&&(A.onerror=r),i&&A.upload&&"onprogress"in A.upload&&(a?A.upload.onprogress=function(e){i.call(A,e,event.loaded/event.total)}:A.addEventListener("progress",function(e){var n=0;if(e.lengthComputable)n=e.total;else if(A.totalBytes)n=A.totalBytes;else{var t=parseInt(A.getResponseHeader("Content-Length-Raw"));if(!isFinite(t))return;A.totalBytes=n=t}i.call(A,e,e.loaded/n)})),A.onreadystatechange=function(n){if(4===A.readyState)if(200===A.status||304===A.status||308===A.status||0===A.status&&e.client.cordova){if(o){var t;if("xml"===c)t=n.target.responseXML;else if("text"===c)t=n.target.responseText;else if("json"===c)try{t=JSON.parse(n.target.response)}catch(i){r&&r.call(A,n)}o.call(A,n,t)}}else r&&r.call(A,n)},A.send(a),A},"undefined"!=typeof module&&module.exports){var t=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));XMLHttpRequest=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"xmlhttprequest\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())).XMLHttpRequest,module.exports=e.util.request}}(MIDI),dom===void 0)var dom={};(function(){"use strict";dom.loadScript=function(){return this.loaded={},this.loading={},this},dom.loadScript.prototype.add=function(n){var t=this;"string"==typeof n&&(n={url:n});var o=n.urls;o===void 0&&(o=[{url:n.url,verify:n.verify}]);var r=document.getElementsByTagName("head")[0],i=function(n,o){t.loaded[n.url]||o&&e(o)===!1||(t.loaded[n.url]=!0,t.loading[n.url]&&t.loading[n.url](),delete t.loading[n.url],n.onsuccess&&n.onsuccess(),f!==void 0&&f())},a=!1,u=[],s=function(e){if("string"==typeof e&&(e={url:e,verify:n.verify}),/([\w\d.\[\]\'\"])$/.test(e.verify)){var o=e.test=e.verify;if("object"==typeof o)for(var s=0;o.length>s;s++)u.push(o[s]);else u.push(o)}if(!t.loaded[e.url]){var l=document.createElement("script");l.onreadystatechange=function(){("loaded"===this.readyState||"complete"===this.readyState)&&i(e)},l.onload=function(){i(e)},l.onerror=function(){if(a=!0,delete t.loading[e.url],"object"==typeof e.test)for(var n in e.test)c(e.test[n]);else c(e.test)},l.setAttribute("type","text/javascript"),l.setAttribute("src",e.url),r.appendChild(l),t.loading[e.url]=function(){}}},c=function(e){for(var n=[],t=0;u.length>t;t++)u[t]!==e&&n.push(u[t]);u=n},l=function(t){if(t)i(t,t.test);else for(var r=0;o.length>r;r++)i(o[r],o[r].test);for(var s=!0,r=0;u.length>r;r++)e(u[r])===!1&&(s=!1);!n.strictOrder&&s?a?n.error&&n.error():n.onsuccess&&n.onsuccess():setTimeout(function(){l(t)},10)};if(n.strictOrder){var d=-1,f=function(){if(d++,o[d]){var e=o[d],r=e.url;t.loading[r]?t.loading[r]=function(){e.onsuccess&&e.onsuccess(),f()}:t.loaded[r]?f():(s(e),l(e))}else a?n.error&&n.error():n.onsuccess&&n.onsuccess()};f()}else for(var d=0;o.length>d;d++)s(o[d]),l(o[d])},dom.loadScript=new dom.loadScript;var e=function(e,n){try{e=e.split('"').join("").split("'").join("").split("]").join("").split("[").join(".");for(var t=e.split("."),o=t.length,r=n||window,i=0;o>i;i++){var a=t[i];if(null==r[a])return!1;r=r[a]}return!0}catch(u){return!1}}})(),"undefined"!=typeof module&&module.exports&&(module.exports=dom.loadScript);

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return chord; });
/* unused harmony export Chord */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vexflow__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__interval_js__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__chordTables_js__ = __webpack_require__(23);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/chord -- Chord
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab
 *
 */





/**
 * chord Module. See {@link music21.chord} namespace for more details.
 *
 * @exports music21/chord
 */

/**
 * Chord related objects (esp. {@link music21.chord.Chord}) and methods.
 *
 * @namespace music21.chord
 * @memberof music21
 * @requires music21/note
 */

var chord = {};
/**
 * Chord related objects (esp. {@link music21.chord.Chord}) and methods.
 *
 * @class Chord
 * @memberof music21.chord
 * @param {Array<string|music21.note.Note|music21.pitch.Pitch>} [notes] - an Array of strings
 * (see {@link music21.pitch.Pitch} for valid formats), note.Note, or pitch.Pitch objects.
 * @extends music21.note.NotRest
 * @property {number} length - the number of pitches in the Chord (readonly)
 * @property {music21.pitch.Pitch[]} pitches - an Array of Pitch objects in the chord. (Consider the Array read only and pass in a new Array to change)
 * @property {Boolean} [isChord=true]
 * @property {Boolean} [isNote=false]
 * @property {Boolean} [isRest=false]
 */

var Chord =
/*#__PURE__*/
function (_note$NotRest) {
  _inherits(Chord, _note$NotRest);

  function Chord(notes) {
    var _this;

    _classCallCheck(this, Chord);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chord).call(this));

    if (typeof notes === 'undefined') {
      notes = [];
    } else if (typeof notes === 'string') {
      notes = notes.split(/\s+/);
    }

    _this.isChord = true; // for speed

    _this.isNote = false; // for speed

    _this.isRest = false; // for speed

    _this._overrides = {};
    _this._cache = {};
    _this._notes = [];
    /**
     *
     * @type {Object|undefined}
     * @private
     */

    _this._chordTablesAddress = undefined;
    _this._chordTablesAddressNeedsUpdating = true; // only update when needed

    notes.forEach(function (x) {
      return _this.add(x, false);
    }, _assertThisInitialized(_this));

    if (notes.length > 0 && notes[0].duration !== undefined && notes[0].duration.quarterLength !== _this.duration.quarterLength) {
      _this.duration = notes[0].duration;
    }

    _this.sortPitches();

    return _this;
  }

  _createClass(Chord, [{
    key: "stringInfo",
    value: function stringInfo() {
      var info = this.pitches.map(function (x) {
        return x.nameWithOctave;
      });
      return info.join(' ');
    }
  }, {
    key: "get",
    value: function get(i) {
      if (typeof i === 'number') {
        return this._notes[i];
      } else {
        return undefined; // TODO(msc): add other get methods.
      }
    }
  }, {
    key: Symbol.iterator,
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function value() {
      var i;
      return regeneratorRuntime.wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              i = 0;

            case 1:
              if (!(i < this.length)) {
                _context.next = 7;
                break;
              }

              _context.next = 4;
              return this.get(i);

            case 4:
              i++;
              _context.next = 1;
              break;

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, value, this);
    })
  }, {
    key: "areZRelations",
    value: function areZRelations(other) {
      var zRelationAddress = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToZAddress"](this.chordTablesAddress);

      if (zRelationAddress === undefined) {
        return false;
      }

      for (var _i = 0, _arr = ['cardinality', 'forteClass', 'inversion']; _i < _arr.length; _i++) {
        var key = _arr[_i];

        if (other.chordTablesAddress[key] !== zRelationAddress[key]) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "getZRelation",
    value: function getZRelation() {
      if (!this.hasZRelation) {
        return undefined;
      }

      var chordTablesAddress = this.chordTablesAddress;
      var v = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToIntervalVector"](chordTablesAddress);
      var addresses = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["intervalVectorToAddress"](v);
      var other;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = addresses[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var thisAddress = _step.value;

          if (thisAddress.forteClass !== chordTablesAddress.forteClass) {
            other = thisAddress;
          }
        } // other should always be defined;

      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      var prime = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToTransposedNormalForm"](other);
      return new Chord(prime);
    }
  }, {
    key: "setStemDirectionFromClef",
    //    get intervalVectorString() {
    //
    //    }
    //
    //    static formatVectorString() {
    //        // needs pitch._convertPitchClassToStr
    //    }
    value: function setStemDirectionFromClef(clef) {
      if (clef === undefined) {
        return this;
      } else {
        var midLine = clef.lowestLine + 4; // console.log(midLine, 'midLine');

        var maxDNNfromCenter = 0;
        var pA = this.pitches;

        for (var i = 0; i < this.pitches.length; i++) {
          var p = pA[i];
          var DNNfromCenter = p.diatonicNoteNum - midLine; // >= not > so that the highest pitch wins the tie and thus stem down.

          if (Math.abs(DNNfromCenter) >= Math.abs(maxDNNfromCenter)) {
            maxDNNfromCenter = DNNfromCenter;
          }
        }

        if (maxDNNfromCenter >= 0) {
          this.stemDirection = 'down';
        } else {
          this.stemDirection = 'up';
        }

        return this;
      }
    }
    /**
     * Adds a note to the chord, sorting the note array
     *
     * @param {string|string[]|music21.note.Note[]|music21.pitch.Pitch[]} notes - the Note or Pitch to be added or a string defining a pitch.
     * @param {boolean} runSort - Sort after running (default true)
     * @returns {music21.chord.Chord} the original chord.
     */

  }, {
    key: "add",
    value: function add(notes) {
      var runSort = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (!(notes instanceof Array)) {
        notes = [notes];
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = notes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var noteObj = _step2.value;

          // takes in either a note or a pitch
          if (typeof noteObj === 'string') {
            noteObj = new __WEBPACK_IMPORTED_MODULE_3__note_js__["a" /* note */].Note(noteObj);
          } else if (noteObj.isClassOrSubclass('Pitch')) {
            var pitchObj = noteObj;
            var noteObj2 = new __WEBPACK_IMPORTED_MODULE_3__note_js__["a" /* note */].Note();
            noteObj2.pitch = pitchObj;
            noteObj = noteObj2;
          }

          this._notes.push(noteObj);
        } // inefficient because sorts after each add, but safe and #(p) is small

      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      if (runSort === true) {
        this.sortPitches();
      }

      this._cache = {};
      return this;
    }
  }, {
    key: "sortPitches",
    value: function sortPitches() {
      this._notes.sort(function (a, b) {
        return a.pitch.ps - b.pitch.ps;
      });
    } // TODO: add remove

    /**
     * Removes any pitches that appear more than once (in any octave), removing the higher ones, and returns a new Chord.
     *
     * @returns {music21.chord.Chord} A new Chord object with duplicate pitches removed.
     */

  }, {
    key: "removeDuplicatePitches",
    value: function removeDuplicatePitches() {
      var stepsFound = [];
      var nonDuplicatingPitches = [];
      var pitches = this.pitches;

      for (var i = 0; i < pitches.length; i++) {
        var p = pitches[i];

        if (stepsFound.indexOf(p.step) === -1) {
          stepsFound.push(p.step);
          nonDuplicatingPitches.push(p);
        }
      }

      var closedChord = new chord.Chord(nonDuplicatingPitches);
      return closedChord;
    }
    /**
     * Finds the Root of the chord.
     *
     * @param {music21.pitch.Pitch} [newroot]
     * @returns {music21.pitch.Pitch} the root of the chord.
     */

  }, {
    key: "root",
    value: function root(newroot) {
      if (newroot !== undefined) {
        this._overrides.root = newroot;
        this._cache.root = newroot;
        this._cache.inversion = undefined;
      }

      if (this._overrides.root !== undefined) {
        return this._cache.root;
      }

      if (this._cache.root !== undefined) {
        return this._cache.root;
      }

      var closedChord = this.removeDuplicatePitches();
      /* var chordBass = closedChord.bass(); */

      var closedPitches = closedChord.pitches;

      if (closedPitches.length === 0) {
        throw new __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__["Music21Exception"]('No notes in Chord!');
      } else if (closedPitches.length === 1) {
        return this.pitches[0];
      } // const indexOfPitchesWithPerfectlyStackedThirds = [];


      var testSteps = [3, 5, 7, 2, 4, 6];

      for (var i = 0; i < closedPitches.length; i++) {
        var p = closedPitches[i];
        var currentListOfThirds = [];

        for (var tsIndex = 0; tsIndex < testSteps.length; tsIndex++) {
          var chordStepPitch = closedChord.getChordStep(testSteps[tsIndex], p);

          if (chordStepPitch !== undefined) {
            // console.log(p.name + " " + testSteps[tsIndex].toString() + " " + chordStepPitch.name);
            currentListOfThirds.push(true);
          } else {
            currentListOfThirds.push(false);
          }
        } // console.log(currentListOfThirds);


        var hasFalse = false;

        for (var j = 0; j < closedPitches.length - 1; j++) {
          if (currentListOfThirds[j] === false) {
            hasFalse = true;
          }
        }

        if (hasFalse === false) {
          // indexOfPitchesWithPerfectlyStackedThirds.push(i);
          return closedChord.pitches[i]; // should do more, but fine...
          // should test rootedness function, etc. 13ths. etc.
        }
      }

      var newRoot = closedChord.pitches[0]; // fallback, just return the bass...

      this._cache.root = newRoot;
      return newRoot;
    }
    /**
     * Returns the number of semitones above the root that a given chordstep is.
     *
     * For instance, in a G dominant 7th chord (G, B, D, F), would
     * return 4 for chordStep=3, since the third of the chord (B) is four semitones above G.
     *
     * @param {number} chordStep - the step to find, e.g., 1, 2, 3, etc.
     * @param {music21.pitch.Pitch} [testRoot] - the pitch to temporarily consider the root.
     * @returns {number|undefined} Number of semitones above the root for this chord step or undefined if no pitch matches that chord step.
     */

  }, {
    key: "semitonesFromChordStep",
    value: function semitonesFromChordStep(chordStep, testRoot) {
      if (testRoot === undefined) {
        testRoot = this.root();
      }

      var tempChordStep = this.getChordStep(chordStep, testRoot);

      if (tempChordStep === undefined) {
        return undefined;
      } else {
        var semitones = (tempChordStep.ps - testRoot.ps) % 12;

        if (semitones < 0) {
          semitones += 12;
        }

        return semitones;
      }
    }
    /**
     * Gets the lowest note (based on .ps not name) in the chord.
     *
     * @returns {music21.pitch.Pitch} bass pitch
     */

  }, {
    key: "bass",
    value: function bass() {
      var lowest;
      var pitches = this.pitches;

      for (var i = 0; i < pitches.length; i++) {
        var p = pitches[i];

        if (lowest === undefined) {
          lowest = p;
        } else {
          // noinspection JSUnusedAssignment
          if (p.ps < lowest.ps) {
            lowest = p;
          }
        }
      }

      return lowest;
    }
    /**
     * Counts the number of non-duplicate pitch MIDI Numbers in the chord.
     *
     * Call after "closedPosition()" to get Forte style cardinality disregarding octave.
     *
     * @returns {number}
     */

  }, {
    key: "cardinality",
    value: function cardinality() {
      var uniqueChord = this.removeDuplicatePitches();
      return uniqueChord.pitches.length;
    }
    /**
    *
    * @returns {Boolean}
    */

  }, {
    key: "isMajorTriad",
    value: function isMajorTriad() {
      if (this.cardinality() !== 3) {
        return false;
      }

      var thirdST = this.semitonesFromChordStep(3);
      var fifthST = this.semitonesFromChordStep(5);

      if (thirdST === 4 && fifthST === 7) {
        return true;
      } else {
        return false;
      }
    }
    /**
    *
    * @returns {Boolean}
    */

  }, {
    key: "isMinorTriad",
    value: function isMinorTriad() {
      if (this.cardinality() !== 3) {
        return false;
      }

      var thirdST = this.semitonesFromChordStep(3);
      var fifthST = this.semitonesFromChordStep(5);

      if (thirdST === 3 && fifthST === 7) {
        return true;
      } else {
        return false;
      }
    }
    /**
    *
    * @returns {Boolean}
    */

  }, {
    key: "isDiminishedTriad",
    value: function isDiminishedTriad() {
      if (this.cardinality() !== 3) {
        return false;
      }

      var thirdST = this.semitonesFromChordStep(3);
      var fifthST = this.semitonesFromChordStep(5);

      if (thirdST === 3 && fifthST === 6) {
        return true;
      } else {
        return false;
      }
    }
    /**
    *
    * @returns {Boolean}
    */

  }, {
    key: "isAugmentedTriad",
    value: function isAugmentedTriad() {
      if (this.cardinality() !== 3) {
        return false;
      }

      var thirdST = this.semitonesFromChordStep(3);
      var fifthST = this.semitonesFromChordStep(5);

      if (thirdST === 4 && fifthST === 8) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "isDominantSeventh",
    value: function isDominantSeventh() {
      return this.isSeventhOfType([0, 4, 7, 10]);
    }
  }, {
    key: "isDiminishedSeventh",
    value: function isDiminishedSeventh() {
      return this.isSeventhOfType([0, 3, 6, 9]);
    }
  }, {
    key: "isSeventhOfType",
    value: function isSeventhOfType(intervalArray) {
      if (intervalArray === undefined) {
        throw new __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__["Music21Exception"]('intervalArray is required');
      }

      var third = this.third;
      var fifth = this.fifth;
      var seventh = this.seventh;

      if (third === undefined || fifth === undefined || seventh === undefined) {
        return false;
      }

      var root = this.root();
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.pitches[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var thisPitch = _step3.value;
          var thisInterval = new __WEBPACK_IMPORTED_MODULE_2__interval_js__["a" /* interval */].Interval(root, thisPitch);

          if (!intervalArray.includes(thisInterval.chromatic.mod12)) {
            return false;
          } //            // check if it doesn't have any other pitches, such as C E F- G Bb != Dominant Seventh
          //            if (!ignoreSpelling && !chordalNames.includes(thisPitch.name)) {
          //                return false;
          //            }

        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
            _iterator3["return"]();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      return true;
    }
    /**
     * canBeDominantV - Returns true if the chord is a Major Triad or a Dominant Seventh
     *
     * @return {Boolean}
     */

  }, {
    key: "canBeDominantV",
    value: function canBeDominantV() {
      if (this.isMajorTriad() || this.isDominantSeventh()) {
        return true;
      } else {
        return false;
      }
    }
    /**
     * Returns true if the chord is a major or minor triad
     *
     * @returns {Boolean}
     */

  }, {
    key: "canBeTonic",
    value: function canBeTonic() {
      if (this.isMajorTriad() || this.isMinorTriad()) {
        return true;
      } else {
        return false;
      }
    }
    /**
     * Returns the inversion of the chord as a number (root-position = 0)
     *
     * Unlike music21 version, cannot set the inversion, yet.
     *
     * TODO: add.
     *
     * @returns {number}
     */

  }, {
    key: "inversion",
    value: function inversion() {
      var bass = this.bass();
      var root = this.root();
      var chordStepsToInversions = [1, 6, 4, 2, 7, 5, 3];

      for (var i = 0; i < chordStepsToInversions.length; i++) {
        var testNote = this.getChordStep(chordStepsToInversions[i], bass);

        if (testNote !== undefined && testNote.name === root.name) {
          return i;
        }
      }

      return undefined;
    }
    /**
     * @param {Object} options - a dictionary of options `{clef: {@music21.clef.Clef} }` is especially important
     * @returns {Vex.Flow.StaveNote}
     */

  }, {
    key: "vexflowNote",
    value: function vexflowNote(options) {
      var clef = options.clef;
      var pitchKeys = [];

      for (var i = 0; i < this._notes.length; i++) {
        pitchKeys.push(this._notes[i].pitch.vexflowName(clef));
      }

      var vfn = new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].StaveNote({
        keys: pitchKeys,
        duration: this.duration.vexflowDuration
      });
      this.vexflowAccidentalsAndDisplay(vfn, options); // clean up stuff...

      for (var _i2 = 0; _i2 < this._notes.length; _i2++) {
        var tn = this._notes[_i2];

        if (tn.pitch.accidental !== undefined) {
          if (tn.pitch.accidental.vexflowModifier !== 'n' && tn.pitch.accidental.displayStatus !== false) {
            vfn.addAccidental(_i2, new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Accidental(tn.pitch.accidental.vexflowModifier));
          } else if (tn.pitch.accidental.displayType === 'always' || tn.pitch.accidental.displayStatus === true) {
            vfn.addAccidental(_i2, new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Accidental(tn.pitch.accidental.vexflowModifier));
          }
        }
      }

      this.activeVexflowNote = vfn;
      return vfn;
    }
    /**
     * Returns the Pitch object that is a Generic interval (2, 3, 4, etc., but not 9, 10, etc.) above
     * the `.root()`
     *
     * In case there is more that one note with that designation (e.g., `[A-C-C#-E].getChordStep(3)`)
     * the first one in `.pitches` is returned.
     *
     * @param {int} chordStep a positive integer representing the chord step
     * @param {music21.pitch.Pitch} [testRoot] - the Pitch to use as a temporary root
     * @returns {music21.pitch.Pitch|undefined}
     */

  }, {
    key: "getChordStep",
    value: function getChordStep(chordStep, testRoot) {
      if (testRoot === undefined) {
        testRoot = this.root();
      }

      if (chordStep >= 8) {
        chordStep %= 7;
      }

      var thisPitches = this.pitches;
      var testRootDNN = testRoot.diatonicNoteNum;

      for (var i = 0; i < thisPitches.length; i++) {
        var thisPitch = thisPitches[i];
        var thisInterval = (thisPitch.diatonicNoteNum - testRootDNN + 1) % 7; // fast cludge

        if (thisInterval <= 0) {
          thisInterval += 7;
        }

        if (thisInterval === chordStep) {
          return thisPitch;
        }
      }

      return undefined;
    }
  }, {
    key: "length",
    get: function get() {
      return this._notes.length;
    }
  }, {
    key: "pitches",
    get: function get() {
      var tempPitches = [];

      for (var i = 0; i < this._notes.length; i++) {
        tempPitches.push(this._notes[i].pitch);
      }

      return tempPitches;
    },
    set: function set(tempPitches) {
      this._notes = [];

      for (var i = 0; i < tempPitches.length; i++) {
        var addNote = void 0;

        if (typeof tempPitches[i] === 'string') {
          addNote = new __WEBPACK_IMPORTED_MODULE_3__note_js__["a" /* note */].Note(tempPitches[i]);
        } else if (tempPitches[i].isClassOrSubclass('Pitch')) {
          addNote = new __WEBPACK_IMPORTED_MODULE_3__note_js__["a" /* note */].Note();
          addNote.pitch = tempPitches[i];
        } else if (tempPitches[i].isClassOrSubclass('Note')) {
          addNote = tempPitches[i];
        } else {
          console.warn('bad pitch', tempPitches[i]);
          throw new __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__["Music21Exception"]('Cannot add pitch from ' + tempPitches[i]);
        }

        this._notes.push(addNote);
      }

      this._cache = {};
      this._overrides = {};
    }
  }, {
    key: "orderedPitchClasses",
    get: function get() {
      var pcGroup = [];
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = this.pitches[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var p = _step4.value;

          if (pcGroup.includes(p.pitchClass)) {
            continue;
          }

          pcGroup.push(p.pitchClass);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      pcGroup.sort(function (a, b) {
        return a - b;
      });
      return pcGroup;
    }
  }, {
    key: "chordTablesAddress",
    get: function get() {
      if (this._chordTablesAddressNeedsUpdating) {
        this._chordTablesAddress = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["seekChordTablesAddress"](this);
      }

      this._chordTablesAddressNeedsUpdating = false;
      return this._chordTablesAddress;
    }
  }, {
    key: "commonName",
    get: function get() {
      var _this2 = this;

      // TODO: many more exemptions from music21p
      var cta = this.chordTablesAddress;
      var ctn = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToCommonNames"](cta);
      var forteClass = this.forteClass;
      var enharmonicTests = {
        '3-11A': function A() {
          return _this2.isMinorTriad();
        },
        '3-11B': function B() {
          return _this2.isMajorTriad();
        },
        '3-10': function _() {
          return _this2.isDiminishedTriad();
        },
        '3-12': function _() {
          return _this2.isAugmentedTriad();
        }
      };

      if (enharmonicTests[forteClass] !== undefined) {
        var out = ctn[0];
        var test = enharmonicTests[forteClass];

        if (!test()) {
          out = 'enharmonic equivalent to ' + out;
        }

        return out;
      }

      if (ctn === undefined) {
        return '';
      } else {
        return ctn[0];
      }
    }
  }, {
    key: "forteClass",
    get: function get() {
      return __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToForteName"](this.chordTablesAddress, 'tn');
    }
  }, {
    key: "forteClassNumber",
    get: function get() {
      return this.chordTablesAddress.forteClass;
    }
  }, {
    key: "forteClassTnI",
    get: function get() {
      return __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToForteName"](this.chordTablesAddress, 'tni');
    }
  }, {
    key: "hasZRelation",
    get: function get() {
      var post = __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToZAddress"](this.chordTablesAddress);

      if (post !== undefined) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "intervalVector",
    get: function get() {
      return __WEBPACK_IMPORTED_MODULE_4__chordTables_js__["addressToIntervalVector"](this.chordTablesAddress);
    }
  }, {
    key: "third",
    get: function get() {
      return this.getChordStep(3);
    }
  }, {
    key: "fifth",
    get: function get() {
      return this.getChordStep(5);
    }
  }, {
    key: "seventh",
    get: function get() {
      return this.getChordStep(7);
    }
  }]);

  return Chord;
}(__WEBPACK_IMPORTED_MODULE_3__note_js__["a" /* note */].NotRest);
chord.Chord = Chord;
chord.chordDefinitions = {
  major: ['M3', 'm3'],
  minor: ['m3', 'M3'],
  diminished: ['m3', 'm3'],
  augmented: ['M3', 'M3'],
  'major-seventh': ['M3', 'm3', 'M3'],
  'dominant-seventh': ['M3', 'm3', 'm3'],
  'minor-seventh': ['m3', 'M3', 'm3'],
  'diminished-seventh': ['m3', 'm3', 'm3'],
  'half-diminished-seventh': ['m3', 'm3', 'M3']
};

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return key; });
/* unused harmony export KeySignature */
/* unused harmony export Key */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__interval_js__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__scale_js__ = __webpack_require__(20);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/key -- KeySignature and Key objects
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab
 *
 */

 // import { common } from './common.js';





/* key and keysignature module. See {@link music21.key} namespace for details
 *
 * @exports music21/key
 */

/**
 * Key and KeySignature related objects and methods
 *
 * @namespace music21.key
 * @memberof music21
 * @requires music21/base
 * @requires music21/pitch
 * @requires music21/interval
 * @requires music21/scale
 */

var key = {};
key.modeSharpsAlter = {
  major: 0,
  minor: -3,
  dorian: -2,
  phrygian: -4,
  lydian: 1,
  mixolydian: -1,
  locrian: -5
};

key.convertKeyStringToMusic21KeyString = function convertKeyStringToMusic21KeyString(textString) {
  if (textString === 'bb') {
    textString = 'b-';
  } else if (textString === 'Bb') {
    textString = 'B-';
  } else if (textString.endsWith('b') && !textString.startsWith('b')) {
    textString = textString.replace(/b$/, '-');
  }

  return textString;
};
/**
 * @class KeySignature
 * @memberof music21.key
 * @description Represents a key signature
 * @param {int} [sharps=0] -- the number of sharps (negative for flats)
 * @property {int} [sharps=0] -- number of sharps (negative for flats)
 * @property {string[]} flatMapping -- flat signatures 0-12 flats
 * @property {string[]} sharpMapping -- sharp signatures 0-12 sharps
 * @extends music21.base.Music21Object
 * @example
 * var ks = new music21.key.KeySignature(-3); //E-flat major or c minor
 * var s = new music21.stream.Stream();
 * s.keySignature = ks;
 * var n = new music21.note.Note('A-'); // A-flat
 * s.append(n);
 * s.appendNewDOM();
 */


var KeySignature =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(KeySignature, _base$Music21Object);

  function KeySignature(sharps) {
    var _this;

    _classCallCheck(this, KeySignature);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeySignature).call(this));
    _this.classSortOrder = 2;
    _this._sharps = sharps || 0; // if undefined

    /**
     * @type [pitch.Pitch[]]
     */

    _this._alteredPitchesCache = undefined; // 12 flats/sharps enough for now...

    _this.flatMapping = ['C', 'F', 'B-', 'E-', 'A-', 'D-', 'G-', 'C-', 'F-', 'B--', 'E--', 'A--', 'D--'];
    _this.sharpMapping = ['C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#', 'G#', 'D#', 'A#', 'E#', 'B#'];
    return _this;
  }
  /**
   * @return string
   */


  _createClass(KeySignature, [{
    key: "stringInfo",
    value: function stringInfo() {
      if (this.sharps === 0) {
        return 'of no sharps or flats';
      } else if (this.sharps === -1) {
        return 'of 1 flat';
      } else if (this.sharps === 1) {
        return 'of 1 sharp';
      } else if (this.sharps < 0) {
        return "of ".concat(Math.abs(this.sharps), " flats");
      } else {
        return "of ".concat(this.sharps, " sharps");
      }
    }
    /**
     * @return int
     */

  }, {
    key: "majorName",

    /**
     * Return the name of the major key with this many sharps
     *
     * @returns {(string|undefined)} name of key
     * @example
     * var ks = new music21.key.KeySignature(-3)
     * ks.majorName()
     * // "E-"
     */
    value: function majorName() {
      if (this.sharps >= 0) {
        return this.sharpMapping[this.sharps];
      } else {
        return this.flatMapping[Math.abs(this.sharps)];
      }
    }
    /**
     * Return the name of the minor key with this many sharps
     * @returns {(string|undefined)}
     */

  }, {
    key: "minorName",
    value: function minorName() {
      var tempSharps = this.sharps + 3;

      if (tempSharps >= 0) {
        return this.sharpMapping[tempSharps];
      } else {
        return this.flatMapping[Math.abs(tempSharps)];
      }
    }
    /**
     * returns the vexflow name (just the `majorName()` with "b" for "-") for
     * the key signature.  Does not create the object.
     *
     * Deprecated.
     *
     * @returns {string}
     */

  }, {
    key: "vexflow",
    value: function vexflow() {
      console.log('calling deprecated function KeySignature.vexflow');
      var tempName = this.majorName();
      return tempName.replace(/-/g, 'b');
    }
    /**
     * Returns the accidental associated with a step in this key, or undefined if none.
     *
     * @param {string} step - a valid step name such as "C","D", etc., but not "C#" etc.
     * @returns {(music21.pitch.Accidental|undefined)}
     */

  }, {
    key: "accidentalByStep",
    value: function accidentalByStep(step) {
      var aps = this.alteredPitches;

      for (var i = 0; i < aps.length; i++) {
        if (aps[i].step === step) {
          if (aps[i].accidental === undefined) {
            return undefined;
          } // make a new accidental;


          return new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Accidental(aps[i].accidental.alter);
        }
      }

      return undefined;
    }
    /**
     * Takes a pitch in C major and transposes it so that it has
     * the same step position in the current key signature.
     *
     * @returns {music21.pitch.Pitch}
     * @example
     * var ks = new music21.key.KeySignature(-3)
     * var p1 = new music21.pitch.Pitch('B')
     * var p2 = ks.transposePitchFromC(p1)
     * p2.name
     * // "D"
     * var p3 = new music21.pitch.Pitch('G-')
     * var p4 = ks.transposePitchFromC(p3)
     * p4.name
     * // "B--"
     */

  }, {
    key: "transposePitchFromC",
    value: function transposePitchFromC(p) {
      var transInterval;
      var transTimes;

      if (this.sharps === 0) {
        return new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(p.nameWithOctave);
      } else if (this.sharps < 0) {
        transTimes = Math.abs(this.sharps);
        transInterval = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval('P4');
      } else {
        transTimes = this.sharps;
        transInterval = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval('P5');
      }

      var newPitch = p;

      for (var i = 0; i < transTimes; i++) {
        newPitch = transInterval.transposePitch(newPitch);

        if (i % 2 === 1) {
          newPitch.octave -= 1;
        }
      }

      return newPitch;
    }
  }, {
    key: "sharps",
    get: function get() {
      return this._sharps;
    },
    set: function set(s) {
      this._alteredPitchesCache = [];
      this._sharps = s;
    }
    /**
     * Gives the width in pixels necessary to represent the key signature.
     *
     * @memberof music21.key.KeySignature#
     * @var {number} width
     * @readonly
     */

  }, {
    key: "width",
    get: function get() {
      if (this.sharps === 0) {
        return 0;
      } else {
        // add 6 to add extra space after the KS...
        return 12 * Math.abs(this.sharps) + 6;
      }
    }
    /**
     * An Array of Altered Pitches in KeySignature order (i.e., for flats, Bb, Eb, etc.)
     *
     * @memberof music21.key.KeySignature#
     * @var {Array<music21.pitch.Pitch>} alteredPitches
     * @readonly
     * @example
     * var ks = new music21.key.KeySignature(3)
     * var ap = ks.alteredPitches
     * var apName = [];
     * for (var i = 0; i < ap.length; i++) {
     *     apName.push(ap[i].name);
     * }
     * apName
     * // ["F#", "C#", "G#"]
     */

  }, {
    key: "alteredPitches",
    get: function get() {
      if (this._alteredPitchesCache !== undefined) {
        return this._alteredPitchesCache;
      }

      var transStr = 'P5';
      var startPitch = 'B';

      if (this.sharps < 0) {
        transStr = 'P4';
        startPitch = 'F';
      }

      var transInterval = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval(transStr);
      var post = [];
      var pKeep = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(startPitch);

      for (var i = 0; i < Math.abs(this.sharps); i++) {
        pKeep = transInterval.transposePitch(pKeep);
        pKeep.octave = 4;
        post.push(pKeep);
      }

      this._alteredPitchesCache = post;
      return post;
    }
  }]);

  return KeySignature;
}(__WEBPACK_IMPORTED_MODULE_1__base_js__["a" /* base */].Music21Object);
key.KeySignature = KeySignature;
/**
 * Create a Key object. Like a KeySignature but with ideas about Tonic, Dominant, etc.
 *
 * TODO: allow keyName to be a {@link music21.pitch.Pitch}
 * TODO: Scale mixin.
 *
 * @class Key
 * @memberof music21.key
 * @extends music21.key.KeySignature
 * @param {string} keyName -- a pitch name representing the key (w/ "-" for flat)
 * @param {string} [mode] -- if not given then the CASE of the keyName will be used ("C" => "major", "c" => "minor")
 */

var Key =
/*#__PURE__*/
function (_KeySignature) {
  _inherits(Key, _KeySignature);

  function Key(keyName, mode) {
    var _this2;

    _classCallCheck(this, Key);

    if (keyName === undefined) {
      keyName = 'C';
    }

    if (mode === undefined) {
      var lowerCase = keyName.toLowerCase();

      if (keyName === lowerCase) {
        mode = 'minor';
      } else {
        mode = 'major';
      }
    }

    var sharpsArray = 'A-- E-- B-- F- C- G- D- A- E- B- F C G D A E B F# C# G# D# A# E# B#'.split(' ');
    var sharpsIndex = sharpsArray.indexOf(keyName.toUpperCase());

    if (sharpsIndex === -1) {
      throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('Cannot find the key for ' + keyName);
    }

    var modeShift = key.modeSharpsAlter[mode] || 0;
    var sharps = sharpsIndex + modeShift - 11;

    if (__WEBPACK_IMPORTED_MODULE_2__debug_js__["a" /* debug */]) {
      console.log('Found sharps ' + sharps + ' for key: ' + keyName);
    }

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Key).call(this, sharps));
    _this2.tonic = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(keyName);
    _this2.mode = mode;
    _this2._scale = _this2.getScale();
    return _this2;
  }

  _createClass(Key, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.tonicPitchNameWithCase + ' ' + this.mode;
    }
  }, {
    key: "getScale",

    /**
     * returns a {@link music21.scale.MajorScale} or {@link music21.scale.MinorScale}
     * object from the pitch object.
     *
     * @param {string|undefined} [scaleType=this.mode] - the type of scale, or the mode.
     * @returns {Object} A music21.scale.Scale subclass.
     */
    value: function getScale(scaleType) {
      if (scaleType === undefined) {
        scaleType = this.mode;
      }

      var pitchObj = this.tonic;

      if (scaleType === 'major') {
        return new __WEBPACK_IMPORTED_MODULE_5__scale_js__["a" /* scale */].MajorScale(pitchObj);
      } else if (scaleType === 'minor') {
        return new __WEBPACK_IMPORTED_MODULE_5__scale_js__["a" /* scale */].MinorScale(pitchObj);
      } else if (['harmonic minor', 'harmonic-minor'].includes(scaleType)) {
        return new __WEBPACK_IMPORTED_MODULE_5__scale_js__["a" /* scale */].HarmonicMinorScale(pitchObj);
      } else if (['melodic minor', 'melodic-minor'].includes(scaleType)) {
        return new __WEBPACK_IMPORTED_MODULE_5__scale_js__["a" /* scale */].AscendingMelodicMinorScale(pitchObj);
      } else {
        return new __WEBPACK_IMPORTED_MODULE_5__scale_js__["a" /* scale */].ConcreteScale(pitchObj);
      }
    } // when scale.js adds functionality, it must be added here.

  }, {
    key: "getPitches",
    value: function getPitches() {
      var _this$_scale;

      return (_this$_scale = this._scale).getPitches.apply(_this$_scale, arguments);
    }
  }, {
    key: "pitchFromDegree",
    value: function pitchFromDegree() {
      var _this$_scale2;

      return (_this$_scale2 = this._scale).pitchFromDegree.apply(_this$_scale2, arguments);
    }
  }, {
    key: "getScaleDegreeFromPitch",
    value: function getScaleDegreeFromPitch() {
      var _this$_scale3;

      return (_this$_scale3 = this._scale).getScaleDegreeFromPitch.apply(_this$_scale3, arguments);
    }
  }, {
    key: "tonicPitchNameWithCase",
    get: function get() {
      var tonicName = this.tonic.name;

      if (this.mode === 'major') {
        tonicName = tonicName.toUpperCase();
      } else if (this.mode === 'minor') {
        tonicName = tonicName.toLowerCase();
      }

      return tonicName;
    }
  }, {
    key: "isConcrete",
    get: function get() {
      return this._scale.isConcrete;
    }
  }]);

  return Key;
}(KeySignature);
key.Key = Key;

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return stream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return Stream; });
/* unused harmony export Voice */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return Measure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return Part; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Score; });
/* unused harmony export OffsetMap */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__beam_js__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__clef_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__duration_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__instrument_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__meter_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__renderOptions_js__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__vfShow_js__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__musicxml_m21ToXml_js__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__stream_filters_js__ = __webpack_require__(32);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__stream_iterator_js__ = __webpack_require__(49);
/* unused harmony reexport filters */
/* unused harmony reexport iterator */
function set(target, property, value, receiver) { if (typeof Reflect !== "undefined" && Reflect.set) { set = Reflect.set; } else { set = function set(target, property, value, receiver) { var base = _superPropBase(target, property); var desc; if (base) { desc = Object.getOwnPropertyDescriptor(base, property); if (desc.set) { desc.set.call(receiver, value); return true; } else if (!desc.writable) { return false; } } desc = Object.getOwnPropertyDescriptor(receiver, property); if (desc) { if (!desc.writable) { return false; } desc.value = value; Object.defineProperty(receiver, property, desc); } else { _defineProperty(receiver, property, value); } return true; }; } return set(target, property, value, receiver); }

function _set(target, property, value, receiver, isStrict) { var s = set(target, property, value, receiver || target); if (!s && isStrict) { throw new Error('failed to set property'); } return value; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/stream -- Streams -- objects that hold other Music21Objects
 *
 * Does not implement the full features of music21p Streams by a long shot...
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006-17, Michael Scott Cuthbert and cuthbertLab
 *
 */




















/**
 * powerful stream module, See {@link music21.stream} namespace
 * @exports music21/stream
 */

/**
 * Streams are powerful music21 objects that hold Music21Object collections,
 * such as {@link music21.note.Note} or {@link music21.chord.Chord} objects.
 *
 * Understanding the {@link music21.stream.Stream} object is of fundamental
 * importance for using music21.  Definitely read the music21(python) tutorial
 * on using Streams before proceeding
 *
 * @namespace music21.stream
 * @memberof music21
 * @requires music21/base
 * @requires music21/renderOptions
 * @requires music21/clef
 * @requires music21/vfShow
 * @requires music21/duration
 * @requires music21/common
 * @requires music21/meter
 * @requires music21/pitch
 * @requires jquery
 */

var stream = {
  filters: __WEBPACK_IMPORTED_MODULE_16__stream_filters_js__,
  iterator: __WEBPACK_IMPORTED_MODULE_17__stream_iterator_js__
};

var StreamException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(StreamException, _Music21Exception);

  function StreamException() {
    _classCallCheck(this, StreamException);

    return _possibleConstructorReturn(this, _getPrototypeOf(StreamException).apply(this, arguments));
  }

  return StreamException;
}(__WEBPACK_IMPORTED_MODULE_2__exceptions21_js__["Music21Exception"]);

stream.StreamException = StreamException;

function _exportMusicXMLAsText(s) {
  var gox = new __WEBPACK_IMPORTED_MODULE_15__musicxml_m21ToXml_js__["GeneralObjectExporter"](s);
  return gox.parse();
}
/**
 * A generic Stream class -- a holder for other music21 objects
 * Will be subclassed into {@link music21.stream.Score},
 * {@link music21.stream.Part},
 * {@link music21.stream.Measure},
 * {@link music21.stream.Voice}, but most functions will be found here.
 *
 * @class Stream
 * @memberof music21.stream
 * @extends music21.base.Music21Object
 *
 * @property {music21.base.Music21Object[]} elements - the elements in the stream. DO NOT MODIFY individual components (consider it like a Python tuple)
 * @property {number} length - (readonly) the number of elements in the stream.
 * @property {music21.duration.Duration} duration - the total duration of the stream's elements
 * @property {number} highestTime -- the highest time point in the stream's elements
 * @property {music21.clef.Clef} clef - the clef for the Stream (if there is one; if there are multiple, then the first clef)
 * @property {music21.meter.TimeSignature} timeSignature - the first TimeSignature of the Stream
 * @property {music21.key.KeySignature} keySignature - the first KeySignature for the Stream
 * @property {music21.renderOptions.RenderOptions} renderOptions - an object specifying how to render the stream
 * @property {music21.stream.Stream} flat - (readonly) a flattened representation of the Stream
 * @property {music21.stream.Stream} notes - (readonly) the stream with only {@link music21.note.Note} and {@link music21.chord.Chord} objects included
 * @property {music21.stream.Stream} notesAndRests - (readonly) like notes but also with {@link music21.note.Rest} objects included
 * @property {music21.stream.Stream} parts - (readonly) a filter on the Stream to just get the parts (NON-recursive)
 * @property {music21.stream.Stream} measures - (readonly) a filter on the Stream to just get the measures (NON-recursive)
 * @property {number} tempo - tempo in beats per minute (will become more sophisticated later, but for now the whole stream has one tempo
 * @property {music21.instrument.Instrument|undefined} instrument - an instrument object associated with the stream (can be set with a string also, but will return an `Instrument` object)
 * @property {Boolean} autoBeam - whether the notes should be beamed automatically or not (will be moved to `renderOptions` soon)
 * @property {Vex.Flow.Stave|undefined} activeVFStave - the current Stave object for the Stream
 * @property {music21.vfShow.Renderer|undefined} activeVFRenderer - the current vfShow.Renderer object for the Stream
 * @property {int} [staffLines=5] - number of staff lines
 * @property {function|undefined} changedCallbackFunction - function to call when the Stream changes through a standard interface
 * @property {number} maxSystemWidth - confusing... should be in renderOptions
 */


var Stream =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Stream, _base$Music21Object);

  function Stream() {
    var _this;

    _classCallCheck(this, Stream);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stream).call(this)); // class variables;

    _this.isStream = true;
    _this.isMeasure = false;
    _this.classSortOrder = -20;
    _this.recursionType = 'elementsFirst';
    _this._duration = undefined;
    _this._elements = [];
    _this._offsetDict = new WeakMap();
    _this.autoSort = true;
    _this.isSorted = true;
    _this.isFlat = true;
    _this._clef = undefined;
    _this.displayClef = undefined;
    _this._keySignature = undefined; // a music21.key.KeySignature object

    _this._timeSignature = undefined; // a music21.meter.TimeSignature object

    _this._instrument = undefined;
    _this._autoBeam = undefined;
    _this.activeVFStave = undefined;
    _this.activeVFRenderer = undefined;
    _this.renderOptions = new __WEBPACK_IMPORTED_MODULE_13__renderOptions_js__["a" /* renderOptions */].RenderOptions();
    _this._tempo = undefined;
    _this.staffLines = 5;
    _this._stopPlaying = false;
    _this._allowMultipleSimultaneousPlays = true; // not implemented yet.

    _this.changedCallbackFunction = undefined; // for editable svges

    /**
     * A function bound to the current stream that
     * will changes the stream. Used in editableAccidentalDOM, among other places.
     *
     *      var can = s.appendNewDOM();
     *      $(can).on('click', s.DOMChangerFunction);
     *
     * @param {Event} e
     * @returns {music21.base.Music21Object|undefined} - returns whatever changedCallbackFunction does.
     */

    _this.DOMChangerFunction = function (e) {
      var canvasOrSVGElement = e.currentTarget;

      var _this$findNoteForClic = _this.findNoteForClick(canvasOrSVGElement, e),
          _this$findNoteForClic2 = _slicedToArray(_this$findNoteForClic, 2),
          clickedDiatonicNoteNum = _this$findNoteForClic2[0],
          foundNote = _this$findNoteForClic2[1];

      if (foundNote === undefined) {
        if (__WEBPACK_IMPORTED_MODULE_7__debug_js__["a" /* debug */]) {
          console.log('No note found');
        }

        return undefined;
      }

      return _this.noteChanged(clickedDiatonicNoteNum, foundNote, canvasOrSVGElement);
    };

    return _this;
  }

  _createClass(Stream, [{
    key: Symbol.iterator,
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function value() {
      var i;
      return regeneratorRuntime.wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (this.autoSort && !this.isSorted) {
                this.sort();
              }

              i = 0;

            case 2:
              if (!(i < this.length)) {
                _context.next = 8;
                break;
              }

              _context.next = 5;
              return this.get(i);

            case 5:
              i++;
              _context.next = 2;
              break;

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, value, this);
    })
  }, {
    key: "forEach",
    value: function forEach(callback, thisArg) {
      if (thisArg !== undefined) {
        callback = callback.bind(thisArg);
      }

      var i = 0;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var el = _step.value;
          callback(el, i, this);
          i += 1;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: "_getFlatOrSemiFlat",
    value: function _getFlatOrSemiFlat(retainContainers) {
      var newSt = this.clone(false);

      if (!this.isFlat) {
        newSt.elements = [];
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = this[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var el = _step2.value;

            if (el.isStream) {
              if (retainContainers) {
                newSt.append(el);
              }

              var offsetShift = this.elementOffset(el); // console.log('offsetShift', offsetShift, el.classes[el.classes.length -1]);

              var elFlat = el._getFlatOrSemiFlat(retainContainers);

              var _iteratorNormalCompletion3 = true;
              var _didIteratorError3 = false;
              var _iteratorError3 = undefined;

              try {
                for (var _iterator3 = elFlat[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                  var elFlatElement = _step3.value;
                  // offset should NOT be null because already in Stream
                  var elFlatElementOffset = elFlat.elementOffset(elFlatElement);
                  newSt.insert(elFlatElementOffset + offsetShift, elFlatElement);
                }
              } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
                    _iterator3["return"]();
                  }
                } finally {
                  if (_didIteratorError3) {
                    throw _iteratorError3;
                  }
                }
              }
            } else {
              newSt.insert(this.elementOffset(el), el);
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
              _iterator2["return"]();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }

      if (!retainContainers) {
        newSt.isFlat = true;
        this.coreElementsChanged({
          updateIsFlat: false
        });
      } else {
        this.coreElementsChanged();
      }

      return newSt;
    }
  }, {
    key: "_specialContext",
    value: function _specialContext(attr) {
      var privAttr = '_' + attr;

      if (this[privAttr] !== undefined) {
        return this[privAttr];
      } // should be:
      // const contextClef = this.getContextByClass('Clef');
      //        const context = this.getContextByClass('Stream', { getElementMethod: 'getElementBefore' });
      //        let contextObj;
      //        if (context !== undefined && context !== this) {
      //            contextObj = context[privAttr];
      //        }


      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = this.sites.yieldSites()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var site = _step4.value;

          if (site === undefined) {
            continue;
          }

          var contextObj = site._firstElementContext('attr') || site._specialContext('attr');

          if (contextObj !== undefined) {
            return contextObj;
          }
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return undefined;
    }
  }, {
    key: "_firstElementContext",
    value: function _firstElementContext(attr) {
      var firstElements = this.getElementsByOffset(0.0).getElementsByClass(attr.charAt(0).toUpperCase() + attr.slice(1));

      if (firstElements.length) {
        return firstElements.get(0);
      } else {
        return undefined;
      }
    }
  }, {
    key: "getSpecialContext",

    /**
     * getSpecialContext is a transitional replacement for
     * .clef, .keySignature, .timeSignature that looks
     * for context to get the appropriate element as ._clef, etc.
     * as a way of making the older music21j attributes still work while
     * transitioning to a more music21p-like approach.
     *
     * May be removed
     */
    value: function getSpecialContext(context) {
      var warnOnCall = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var first_el = this._firstElementContext(context);

      if (first_el !== undefined) {
        return first_el;
      }

      var special_context = this._specialContext(context);

      if (special_context === undefined) {
        return undefined;
      }

      if (warnOnCall) {
        console.warn("Calling special context ".concat(context, "!"));
      }

      return special_context;
    }
  }, {
    key: "clear",
    value: function clear() {
      this._elements = [];
      this._offsetDict = new WeakMap();
      this.isFlat = true;
      this.isSorted = true;
    }
    /* override protoM21Object.clone() */

  }, {
    key: "clone",
    value: function clone() {
      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var ret = Object.create(this.constructor.prototype);

      for (var key in this) {
        if ({}.hasOwnProperty.call(this, key) === false) {
          continue;
        }

        if (key === '_activeSite') {
          ret[key] = this[key];
        } else if (key === 'renderOptions') {
          ret[key] = __WEBPACK_IMPORTED_MODULE_6__common_js__["a" /* common */].merge({}, this[key]);
        } else if (deep !== true && key === '_elements') {
          ret[key] = this[key].slice(); // shallow copy...
        } else if (deep !== true && key === '_offsetDict') {
          ret._offsetDict = new WeakMap();
          var _iteratorNormalCompletion5 = true;
          var _didIteratorError5 = false;
          var _iteratorError5 = undefined;

          try {
            for (var _iterator5 = this.elements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
              var el = _step5.value;

              ret._offsetDict.set(el, this._offsetDict.get(el));
            }
          } catch (err) {
            _didIteratorError5 = true;
            _iteratorError5 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
                _iterator5["return"]();
              }
            } finally {
              if (_didIteratorError5) {
                throw _iteratorError5;
              }
            }
          }
        } else if (deep && (key === '_elements' || key === '_offsetDict')) {
          if (key === '_elements') {
            // console.log('got elements for deepcopy');
            ret.clear();

            for (var j = 0; j < this._elements.length; j++) {
              var _el = this._elements[j]; // console.log('cloning el: ', el.name);

              var elCopy = _el.clone(deep);

              ret._elements[j] = elCopy;

              ret._offsetDict.set(elCopy, this._offsetDict.get(_el));

              elCopy.activeSite = ret;
            }
          }
        } else if (key === 'activeVexflowNote' || key === 'storedVexflowstave') {// do nothing -- do not copy vexflowNotes -- permanent recursion
        } else if (key in this._cloneCallbacks) {
          if (this._cloneCallbacks[key] === true) {
            ret[key] = this[key];
          } else if (this._cloneCallbacks[key] === false) {
            ret[key] = undefined;
          } else {
            // call the cloneCallbacks function
            this._cloneCallbacks[key](key, ret, this);
          }
        } else if (Object.getOwnPropertyDescriptor(this, key).get !== undefined || Object.getOwnPropertyDescriptor(this, key).set !== undefined) {// do nothing
        } else if (typeof this[key] === 'function') {// do nothing -- events might not be copied.
        } else if (this[key] !== null && this[key] !== undefined && this[key].isMusic21Object === true) {
          // console.log('cloning...', key);
          ret[key] = this[key].clone(deep);
        } else {
          ret[key] = this[key];
        }
      }

      ret.coreElementsChanged();
      return ret;
    }
  }, {
    key: "coreElementsChanged",
    value: function coreElementsChanged() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$updateIsFlat = _ref.updateIsFlat,
          updateIsFlat = _ref$updateIsFlat === void 0 ? true : _ref$updateIsFlat,
          _ref$clearIsSorted = _ref.clearIsSorted,
          clearIsSorted = _ref$clearIsSorted === void 0 ? true : _ref$clearIsSorted,
          _ref$memo = _ref.memo,
          memo = _ref$memo === void 0 ? undefined : _ref$memo,
          _ref$keepIndex = _ref.keepIndex,
          keepIndex = _ref$keepIndex === void 0 ? false : _ref$keepIndex;

      if (clearIsSorted) {
        this.isSorted = false;
      }

      if (updateIsFlat) {
        this.isFlat = true;
        var _iteratorNormalCompletion6 = true;
        var _didIteratorError6 = false;
        var _iteratorError6 = undefined;

        try {
          for (var _iterator6 = this._elements[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
            var e = _step6.value;

            if (e.isStream) {
              this.isFlat = false;
              break;
            }
          }
        } catch (err) {
          _didIteratorError6 = true;
          _iteratorError6 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
              _iterator6["return"]();
            }
          } finally {
            if (_didIteratorError6) {
              throw _iteratorError6;
            }
          }
        }
      }
    }
  }, {
    key: "recurse",
    value: function recurse() {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref2$streamsOnly = _ref2.streamsOnly,
          streamsOnly = _ref2$streamsOnly === void 0 ? false : _ref2$streamsOnly,
          _ref2$restoreActiveSi = _ref2.restoreActiveSites,
          restoreActiveSites = _ref2$restoreActiveSi === void 0 ? true : _ref2$restoreActiveSi,
          _ref2$classFilter = _ref2.classFilter,
          classFilter = _ref2$classFilter === void 0 ? undefined : _ref2$classFilter,
          _ref2$skipSelf = _ref2.skipSelf,
          skipSelf = _ref2$skipSelf === void 0 ? true : _ref2$skipSelf;

      var includeSelf = !skipSelf;
      var ri = new __WEBPACK_IMPORTED_MODULE_17__stream_iterator_js__["RecursiveIterator"](this, {
        streamsOnly: streamsOnly,
        restoreActiveSites: restoreActiveSites,
        includeSelf: includeSelf
      });

      if (classFilter !== undefined) {
        ri.addFilter(new __WEBPACK_IMPORTED_MODULE_16__stream_filters_js__["ClassFilter"](classFilter));
      }

      return ri;
    }
    /**
     * Add an element to the end of the stream, setting its `.offset` accordingly
     *
     * @param {music21.base.Music21Object|Array} elOrElList - element or list of elements to append
     * @returns {this}
     */

  }, {
    key: "append",
    value: function append(elOrElList) {
      if (Array.isArray(elOrElList)) {
        var _iteratorNormalCompletion7 = true;
        var _didIteratorError7 = false;
        var _iteratorError7 = undefined;

        try {
          for (var _iterator7 = elOrElList[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
            var _el2 = _step7.value;
            this.append(_el2);
          }
        } catch (err) {
          _didIteratorError7 = true;
          _iteratorError7 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion7 && _iterator7["return"] != null) {
              _iterator7["return"]();
            }
          } finally {
            if (_didIteratorError7) {
              throw _iteratorError7;
            }
          }
        }

        return this;
      }

      var el = elOrElList;

      try {
        if (el.isClassOrSubclass !== undefined && el.isClassOrSubclass('NotRest')) {// set stem direction on output...;
        }

        var elOffset = this.highestTime;

        this._elements.push(el);

        this.setElementOffset(el, elOffset);
        el.offset = elOffset;
        el.sites.add(this);
        el.activeSite = this; // would prefer weakref, but does not exist in JS.
      } catch (err) {
        console.error('Cannot append element ', el, ' to stream ', this, ' : ', err);
      }

      this.coreElementsChanged({
        clearIsSorted: false
      });
      return this;
    }
  }, {
    key: "sort",
    value: function sort() {
      var _this2 = this;

      if (this.isSorted) {
        return this;
      }

      this._elements.sort(function (a, b) {
        return _this2._offsetDict.get(a) - _this2._offsetDict.get(b) || a.priority - b.priority || a.classSortOrder - b.classSortOrder;
      });

      this.isSorted = true;
      return this;
    }
    /**
     * Add an element to the specified place in the stream, setting its `.offset` accordingly
     *
     * @param {number} offset - offset to place.
     * @param {music21.base.Music21Object} el - element to append
     * @param {Object} [config] -- configuration options
     * @param {boolean} [config.ignoreSort=false] -- do not sort
     * @param {boolean} [config.setActiveSite=true] -- set the active site for the inserted element.
     * @returns {this}
     */

  }, {
    key: "insert",
    value: function insert(offset, el) {
      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
          _ref3$ignoreSort = _ref3.ignoreSort,
          ignoreSort = _ref3$ignoreSort === void 0 ? false : _ref3$ignoreSort,
          _ref3$setActiveSite = _ref3.setActiveSite,
          setActiveSite = _ref3$setActiveSite === void 0 ? true : _ref3$setActiveSite;

      if (el === undefined) {
        throw new StreamException('Cannot insert without an element.');
      }

      try {
        if (!ignoreSort) {
          if (offset <= this.highestTime) {
            this.isSorted = false;
          }
        }

        this._elements.push(el);

        this.setElementOffset(el, offset);
        el.sites.add(this);

        if (setActiveSite) {
          el.activeSite = this;
        }

        this.coreElementsChanged({
          clearIsSorted: false
        });
      } catch (err) {
        console.error('Cannot insert element ', el, ' to stream ', this, ' : ', err);
      }

      return this;
    }
    /**
     * Inserts a single element at offset, shifting elements at or after it begins
     * later in the stream.
     *
     * In single argument form, assumes it is an element and takes the offset from the element.
     *
     * Unlike music21p, does not take a list of elements.  TODO(msc): add this.
     *
     * @param {number|music21.base.Music21Object} offset -- offset of the item to insert
     * @param {music21.base.Music21Object} [elementOrNone] -- element.
     * @return this
     */

  }, {
    key: "insertAndShift",
    value: function insertAndShift(offset, elementOrNone) {
      var element;

      if (elementOrNone === undefined) {
        element = offset;
        offset = element.offset;
      } else {
        element = elementOrNone;
      }

      var amountToShift = element.duration.quarterLength;
      var shiftingOffsets = false;

      for (var i = 0; i < this.length; i++) {
        var existingEl = this._elements[i];
        var existingElOffset = this.elementOffset(existingEl);

        if (!shiftingOffsets && existingElOffset >= offset) {
          shiftingOffsets = true;
        }

        if (shiftingOffsets) {
          this.setElementOffset(existingEl, existingElOffset + amountToShift);
        }
      }

      this.insert(offset, element);
      return this;
    }
    /**
     * Return the first matched index
     */

  }, {
    key: "index",
    value: function index(el) {
      if (!this.isSorted && this.autoSort) {
        this.sort();
      }

      var index = this._elements.indexOf(el);

      if (index === -1) {
        // endElements
        throw new StreamException("cannot find object (".concat(el, ") in Stream"));
      }

      return index;
    }
    /**
     * Remove and return the last element in the stream,
     * or return undefined if the stream is empty
     *
     * @returns {music21.base.Music21Object|undefined} last element in the stream
     */

  }, {
    key: "pop",
    value: function pop() {
      if (!this.isSorted && this.autoSort) {
        this.sort();
      } // remove last element;


      if (this.length > 0) {
        var el = this.get(-1);

        this._elements.pop();

        this._offsetDict["delete"](el);

        el.sites.remove(this);
        this.coreElementsChanged({
          clearIsSorted: false
        });
        return el;
      } else {
        return undefined;
      }
    }
    /**
     * Remove an object from this Stream.  shiftOffsets and recurse do nothing.
     */

  }, {
    key: "remove",
    value: function remove(targetOrList) {
      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref4$shiftOffsets = _ref4.shiftOffsets,
          shiftOffsets = _ref4$shiftOffsets === void 0 ? false : _ref4$shiftOffsets,
          _ref4$recurse = _ref4.recurse,
          recurse = _ref4$recurse === void 0 ? false : _ref4$recurse;

      if (shiftOffsets === true) {
        throw new StreamException('sorry cannot shiftOffsets yet');
      }

      if (recurse === true) {
        throw new StreamException('sorry cannot recurse yet');
      }

      var targetList;

      if (!Array.isArray(targetOrList)) {
        targetList = [targetOrList];
      } else {
        targetList = targetOrList;
      } //        if (targetList.length > 1) {
      //            sort targetList
      //        }
      // let shiftDur = 0.0; // for shiftOffsets


      var i = -1;
      var _iteratorNormalCompletion8 = true;
      var _didIteratorError8 = false;
      var _iteratorError8 = undefined;

      try {
        for (var _iterator8 = targetList[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
          var target = _step8.value;
          i += 1;
          var indexInStream = void 0;

          try {
            indexInStream = this.index(target);
          } catch (err) {
            if (err instanceof StreamException) {
              if (recurse) {// do something
              }

              continue;
            }

            throw err;
          } // const matchOffset = this._offsetDict[indexInStream];
          // let match;
          // handle _endElements
          // let matchedEndElement = false;
          // let baseElementCount = this._elements.length;


          this._elements.splice(indexInStream, 1);

          this._offsetDict["delete"](target);

          target.activeSite = undefined;
          target.sites.remove(this); // remove from sites if needed.
          //            if (shiftOffsets) {
          //                const matchDuration = target.duration.quarterLength;
          //                const shiftedRegionStart = matchOffset + matchDuration;
          //                shiftDur += matchDuration;
          //                let shiftedRegionEnd;
          //                if ((i + 1) < targetList.length) {
          //                    const nextElIndex = this.index(targetList[i + 1]);
          //                    const nextElOffset = this._offsetDict[nextElIndex];
          //                    shiftedRegionEnd = nextElOffset;
          //                } else {
          //                    shiftedRegionEnd = this.duration.quarterLength;
          //                }
          //                if (shiftDur !== 0.0) {
          //                    for (const e of this.getElementsByOffset(
          //                       shiftedRegionStart,
          //                       shiftedRegionEnd,
          //                       {
          //                           includeEndBoundary: false,
          //                           mustFinishInSpan: false,
          //                           mustBeginInSpan: false,
          //                       }
          //                    )) {
          //                        const elementOffset = this.elementOffset(e);
          //                        this.setElementOffset(e, elementOffset - shiftDur);
          //                    }
          //                }
          //            }
        }
      } catch (err) {
        _didIteratorError8 = true;
        _iteratorError8 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion8 && _iterator8["return"] != null) {
            _iterator8["return"]();
          }
        } finally {
          if (_didIteratorError8) {
            throw _iteratorError8;
          }
        }
      }

      this.coreElementsChanged({
        clearIsSorted: false
      });
    }
    /**
     *  Given a `target` object, replace it with
     *  the supplied `replacement` object.
     *
     *  `recurse` and `allDerived` do not currently work.
     *
     *  Does nothing if target cannot be found.
     */

  }, {
    key: "replace",
    value: function replace(target, replacement) {
      var _ref5 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
          _ref5$recurse = _ref5.recurse,
          recurse = _ref5$recurse === void 0 ? false : _ref5$recurse,
          _ref5$allDerivated = _ref5.allDerivated,
          allDerivated = _ref5$allDerivated === void 0 ? true : _ref5$allDerivated;

      try {
        this.index(target);
      } catch (err) {
        if (err instanceof StreamException) {
          return;
        } else {
          throw err;
        }
      }

      var targetOffset = this.elementOffset(target);
      this.remove(target);
      this.insert(targetOffset, replacement);
      this.coreElementsChanged({
        clearIsSorted: false
      });
    }
    /**
     * Get the `index`th element from the Stream.  Equivalent to the
     * music21p format of s[index] using __getitem__.  Can use negative indexing to get from the end.
     *
     * Once Proxy objects are supported by all operating systems for
     *
     * @param {int} index - can be -1, -2, to index from the end, like python
     * @returns {music21.base.Music21Object|undefined}
     */

  }, {
    key: "get",
    value: function get(index) {
      // substitute for Python stream __getitem__; supports -1 indexing, etc.
      if (!this.isSorted) {
        this.sort();
      }

      var el;

      if (index === undefined || isNaN(index)) {
        return undefined;
      } else if (Math.abs(index) > this._elements.length) {
        return undefined;
      } else if (index === this._elements.length) {
        return undefined;
      } else if (index < 0) {
        el = this._elements[this._elements.length + index];
        el.activeSite = this;
        return el;
      } else {
        el = this._elements[index];
        el.activeSite = this;
        return el;
      }
    }
    /**
     *
     */

  }, {
    key: "set",
    value: function set(index, newEl) {
      var replaceEl = this.get(index);

      if (replaceEl === undefined) {
        throw new StreamException("Cannot set element at index ".concat(index, "."));
      }

      this.replace(replaceEl, newEl);
      return this;
    }
  }, {
    key: "setElementOffset",
    value: function setElementOffset(el, value) {
      var addElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (!this._elements.includes(el)) {
        if (addElement) {
          this.insert(value, el);
          return;
        } else {
          throw new StreamException('Cannot set the offset for elemenet ' + el.toString() + ', not in Stream');
        }
      }

      this._offsetDict.set(el, value);

      el.activeSite = this;
    }
  }, {
    key: "elementOffset",
    value: function elementOffset(element) {
      var stringReturns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (!this._offsetDict.has(element)) {
        throw new StreamException('An entry for this object ' + element.toString() + ' is not stored in this Stream.');
      } else {
        return this._offsetDict.get(element);
      }
    }
    /*  --- ############# END ELEMENT FUNCTIONS ########## --- */

    /**
     * Takes a stream and places all of its elements into
     * measures (:class:`~music21.stream.Measure` objects)
     * based on the :class:`~music21.meter.TimeSignature` objects
     * placed within
     * the stream. If no TimeSignatures are found in the
     * stream, a default of 4/4 is used.
      * If `options.inPlace` is true, the original Stream is modified and lost
     * if `options.inPlace` is False, this returns a modified deep copy.
      * @param {Object} [options]
     * @returns {music21.stream.Stream}
     */

  }, {
    key: "makeMeasures",
    value: function makeMeasures(options) {
      var params = {
        meterStream: undefined,
        refStreamOrTimeRange: undefined,
        searchContext: false,
        innerBarline: undefined,
        finalBarline: 'final',
        bestClef: false,
        inPlace: false
      };
      __WEBPACK_IMPORTED_MODULE_6__common_js__["a" /* common */].merge(params, options);
      var voiceCount;

      if (this.hasVoices()) {
        voiceCount = this.getElementsByClass('Voice').length;
      } else {
        voiceCount = 0;
      } // meterStream


      var meterStream = this.getElementsByClass('TimeSignature');

      if (meterStream.length === 0) {
        meterStream.append(this.timeSignature);
      } // getContextByClass('Clef')


      var clefObj = this.getSpecialContext('clef') || this.getContextByClass('Clef');
      var offsetMap = this.offsetMap();
      var oMax = 0;

      for (var i = 0; i < offsetMap.length; i++) {
        if (offsetMap[i].endTime > oMax) {
          oMax = offsetMap[i].endTime;
        }
      } // console.log('oMax: ', oMax);


      var post = new this.constructor(); // derivation

      var o = 0.0;
      var measureCount = 0;
      var lastTimeSignature;
      var m;
      var mStart;

      while (measureCount === 0 || o < oMax) {
        m = new stream.Measure();
        m.number = measureCount + 1; // var thisTimeSignature = meterStream.getElementAtOrBefore(o);

        var thisTimeSignature = this.timeSignature;

        if (thisTimeSignature === undefined) {
          break;
        }

        var oneMeasureLength = thisTimeSignature.barDuration.quarterLength;

        if (oneMeasureLength === 0) {
          // if for some reason we are advancing not at all, then get out!
          break;
        }

        if (measureCount === 0) {// simplified...
        }

        m.clef = clefObj;
        m.timeSignature = thisTimeSignature.clone();

        for (var voiceIndex = 0; voiceIndex < voiceCount; voiceIndex++) {
          var v = new stream.Voice();
          v.id = voiceIndex;
          m.insert(0, v);
        }

        post.insert(o, m);
        o += oneMeasureLength;
        measureCount += 1;
      }

      for (var _i2 = 0; _i2 < offsetMap.length; _i2++) {
        var ob = offsetMap[_i2];
        var e = ob.element;
        var start = ob.offset;
        var _voiceIndex = ob.voiceIndex; // if 'Spanner' in e.classes;

        lastTimeSignature = undefined;

        for (var j = 0; j < post.length; j++) {
          m = post.get(j); // nothing but measures...

          var foundTS = m.getSpecialContext('timeSignature');

          if (foundTS !== undefined) {
            lastTimeSignature = foundTS;
          }

          mStart = m.getOffsetBySite(post);
          var mEnd = mStart + lastTimeSignature.barDuration.quarterLength;

          if (start >= mStart && start < mEnd) {
            break;
          }
        } // if not match, raise Exception;


        var oNew = start - mStart;

        if (m.clef === e) {
          continue;
        }

        if (oNew === 0 && e.isClassOrSubclass('TimeSignature')) {
          continue;
        }

        var insertStream = m;

        if (_voiceIndex !== undefined) {
          insertStream = m.getElementsByClass('Voice').get(_voiceIndex);
        }

        insertStream.insert(oNew, e);
      } // set barlines, etc.


      if (params.inPlace !== true) {
        return post;
      } else {
        this.elements = []; // endElements
        // elementsChanged;

        var _iteratorNormalCompletion9 = true;
        var _didIteratorError9 = false;
        var _iteratorError9 = undefined;

        try {
          for (var _iterator9 = post[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
            var _e2 = _step9.value;
            this.insert(_e2.offset, _e2);
          }
        } catch (err) {
          _didIteratorError9 = true;
          _iteratorError9 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion9 && _iterator9["return"] != null) {
              _iterator9["return"]();
            }
          } finally {
            if (_didIteratorError9) {
              throw _iteratorError9;
            }
          }
        }

        return this; // javascript style;
      }
    }
  }, {
    key: "containerInHierarchy",
    value: function containerInHierarchy(el) {
      var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref6$setActiveSite = _ref6.setActiveSite,
          setActiveSite = _ref6$setActiveSite === void 0 ? true : _ref6$setActiveSite;

      var elSites = el.sites;
      var _iteratorNormalCompletion10 = true;
      var _didIteratorError10 = false;
      var _iteratorError10 = undefined;

      try {
        for (var _iterator10 = this.recurse({
          skipSelf: false,
          streamOnly: true,
          restoreActiveSites: false
        })[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
          var s = _step10.value;

          if (elSites.includes(s)) {
            if (setActiveSite) {
              el.activeSite = s;
            }

            return s;
          }
        }
      } catch (err) {
        _didIteratorError10 = true;
        _iteratorError10 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion10 && _iterator10["return"] != null) {
            _iterator10["return"]();
          }
        } finally {
          if (_didIteratorError10) {
            throw _iteratorError10;
          }
        }
      }

      return undefined;
    }
    /**
     * chordify does not yet work...
     */

  }, {
    key: "chordify",
    value: function chordify() {
      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref7$addTies = _ref7.addTies,
          addTies = _ref7$addTies === void 0 ? true : _ref7$addTies,
          _ref7$addPartIdAsGrou = _ref7.addPartIdAsGroup,
          addPartIdAsGroup = _ref7$addPartIdAsGrou === void 0 ? true : _ref7$addPartIdAsGrou,
          _ref7$removeRedundant = _ref7.removeRedundantPitches,
          removeRedundantPitches = _ref7$removeRedundant === void 0 ? true : _ref7$removeRedundant,
          _ref7$toSoundingPitch = _ref7.toSoundingPitch,
          toSoundingPitch = _ref7$toSoundingPitch === void 0 ? true : _ref7$toSoundingPitch;

      var workObj = this;
      var templateStream;

      if (this.hasPartLikeStreams()) {
        templateStream = workObj.getElementsByClass('Stream').get(0);
      } else {
        templateStream = workObj;
      }

      var template = templateStream.template({
        fillWithRests: false,
        removeClasses: ['GeneralNote'],
        retainVoices: false
      });
      return template;
    }
  }, {
    key: "template",
    value: function template() {
      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref8$fillWithRests = _ref8.fillWithRests,
          fillWithRests = _ref8$fillWithRests === void 0 ? true : _ref8$fillWithRests,
          _ref8$removeClasses = _ref8.removeClasses,
          removeClasses = _ref8$removeClasses === void 0 ? [] : _ref8$removeClasses,
          _ref8$retainVoices = _ref8.retainVoices,
          retainVoices = _ref8$retainVoices === void 0 ? true : _ref8$retainVoices;

      var out = this.cloneEmpty('template');
      var restInfo = {
        offset: undefined,
        endTime: undefined
      };

      var optionalAddRest = function optionalAddRest() {
        if (!fillWithRests) {
          return;
        }

        if (restInfo.offset === undefined) {
          return;
        }

        var restQL = restInfo.endTime - restInfo.offset;
        var restObj = new __WEBPACK_IMPORTED_MODULE_11__note_js__["a" /* note */].Rest();
        restObj.duration.quarterLength = restQL;
        out.insert(restInfo.offset, restObj);
        restInfo.offset = undefined;
        restInfo.endTime = undefined;
      };

      var _iteratorNormalCompletion11 = true;
      var _didIteratorError11 = false;
      var _iteratorError11 = undefined;

      try {
        for (var _iterator11 = stream[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {
          var el = _step11.value;

          if (el.isStream && (retainVoices || el.classes.includes('Voice'))) {
            optionalAddRest();
            var outEl = el.template({
              fillWithRests: fillWithRests,
              removeClasses: removeClasses,
              retainVoices: retainVoices
            });
            out.insert(el.offset, outEl);
          }
        }
      } catch (err) {
        _didIteratorError11 = true;
        _iteratorError11 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion11 && _iterator11["return"] != null) {
            _iterator11["return"]();
          }
        } finally {
          if (_didIteratorError11) {
            throw _iteratorError11;
          }
        }
      }
    }
  }, {
    key: "cloneEmpty",
    value: function cloneEmpty(derivationMethod) {
      var returnObj = this.constructor(); // TODO(msc): derivation

      returnObj.mergeAttributes(this);
      return returnObj;
    }
  }, {
    key: "mergeAttributes",
    value: function mergeAttributes(other) {
      _get(_getPrototypeOf(Stream.prototype), "mergeAttributes", this).call(this, other);

      for (var _i3 = 0, _arr2 = ['autoSort', 'isSorted', 'definesExplicitSystemBreaks', 'definesEExplicitPageeBreaks', '_atSoundingPitch', '_mutable']; _i3 < _arr2.length; _i3++) {
        var attr = _arr2[_i3];

        if (Object.prototype.hasOwnProperty.call(other, attr)) {
          this[attr] = other[attr];
        }
      }
    }
    /**
     * makeNotation does not do anything yet, but it is a placeholder
     * so it can start to be called.
     */

  }, {
    key: "makeNotation",
    value: function makeNotation() {
      var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref9$inPlace = _ref9.inPlace,
          inPlace = _ref9$inPlace === void 0 ? true : _ref9$inPlace;

      var out;

      if (inPlace) {
        out = this;
      } else {
        out = this.clone(true);
      }

      this.makeAccidentals();
      return out;
    }
    /**
     * Return a new Stream or modify this stream
     * to have beams.
     *
     * NOT yet being called March 2018
     */

  }, {
    key: "makeBeams",
    value: function makeBeams(options) {
      var params = {
        inPlace: false
      };
      __WEBPACK_IMPORTED_MODULE_6__common_js__["a" /* common */].merge(params, options);
      var returnObj = this;

      if (!params.inPlace) {
        returnObj = this.clone(true);
      }

      var mColl;

      if (this.classes.includes('Measure')) {
        mColl = [returnObj];
      } else {
        mColl = [];
        var _iteratorNormalCompletion12 = true;
        var _didIteratorError12 = false;
        var _iteratorError12 = undefined;

        try {
          for (var _iterator12 = returnObj.getElementsByClass('Measure')[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {
            var m = _step12.value;
            mColl.push(m);
          }
        } catch (err) {
          _didIteratorError12 = true;
          _iteratorError12 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion12 && _iterator12["return"] != null) {
              _iterator12["return"]();
            }
          } finally {
            if (_didIteratorError12) {
              throw _iteratorError12;
            }
          }
        }
      }

      var lastTimeSignature;
      var _iteratorNormalCompletion13 = true;
      var _didIteratorError13 = false;
      var _iteratorError13 = undefined;

      try {
        for (var _iterator13 = mColl[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {
          var _m = _step13.value;

          if (_m.timeSignature !== undefined) {
            lastTimeSignature = _m.timeSignature;
          }

          if (lastTimeSignature === undefined) {
            throw new StreamException('Need a Time Signature to process beams');
          } // todo voices!


          if (_m.length <= 1) {
            continue; // nothing to beam.
          }

          var noteStream = _m.notesAndRests;
          var durList = [];
          var _iteratorNormalCompletion14 = true;
          var _didIteratorError14 = false;
          var _iteratorError14 = undefined;

          try {
            for (var _iterator14 = noteStream[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {
              var _n2 = _step14.value;
              durList.push(_n2.duration);
            }
          } catch (err) {
            _didIteratorError14 = true;
            _iteratorError14 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion14 && _iterator14["return"] != null) {
                _iterator14["return"]();
              }
            } finally {
              if (_didIteratorError14) {
                throw _iteratorError14;
              }
            }
          }

          var durSum = durList.map(function (a) {
            return a.quarterLength;
          }).reduce(function (total, val) {
            return total + val;
          });
          var barQL = lastTimeSignature.barDuration.quarterLength;

          if (durSum > barQL) {
            continue;
          }

          var offset = 0.0;

          if (_m.paddingLeft !== 0.0 && _m.paddingLeft !== undefined) {
            offset = _m.paddingLeft;
          } else if (noteStream.highestTime < barQL) {
            offset = barQL - noteStream.highestTime;
          }

          var beamsList = lastTimeSignature.getBeams(noteStream, {
            measureStartOffset: offset
          });

          for (var i = 0; i < noteStream.length; i++) {
            var n = noteStream.get(i);
            var thisBeams = beamsList[i];

            if (thisBeams !== undefined) {
              n.beams = thisBeams;
            } else {
              n.beams = new __WEBPACK_IMPORTED_MODULE_4__beam_js__["a" /* beam */].Beams();
            }
          }
        } // returnObj.streamStatus.beams = true;

      } catch (err) {
        _didIteratorError13 = true;
        _iteratorError13 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion13 && _iterator13["return"] != null) {
            _iterator13["return"]();
          }
        } finally {
          if (_didIteratorError13) {
            throw _iteratorError13;
          }
        }
      }

      return returnObj;
    }
    /**
     * Returns a boolean value showing if this
     * Stream contains any Parts or Part-like
     * sub-Streams.
     *
     * Will deal with Part-like sub-streams later
     * for now just checks for real Part objects.
     *
     * Part-like sub-streams are Streams that
     * contain Measures or Notes. And where no
     * sub-stream begins at an offset besides zero.
     */

  }, {
    key: "hasPartLikeStreams",
    value: function hasPartLikeStreams() {
      var _iteratorNormalCompletion15 = true;
      var _didIteratorError15 = false;
      var _iteratorError15 = undefined;

      try {
        for (var _iterator15 = this[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {
          var el = _step15.value;

          if (el.classes.includes('Part')) {
            return true;
          }
        }
      } catch (err) {
        _didIteratorError15 = true;
        _iteratorError15 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion15 && _iterator15["return"] != null) {
            _iterator15["return"]();
          }
        } finally {
          if (_didIteratorError15) {
            throw _iteratorError15;
          }
        }
      }

      return false;
    }
    /**
     * Returns true if any note in the stream has lyrics, otherwise false
     *
     * @returns {Boolean}
     */

  }, {
    key: "hasLyrics",
    value: function hasLyrics() {
      var _iteratorNormalCompletion16 = true;
      var _didIteratorError16 = false;
      var _iteratorError16 = undefined;

      try {
        for (var _iterator16 = this[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {
          var el = _step16.value;

          if (el.lyric !== undefined) {
            return true;
          }
        }
      } catch (err) {
        _didIteratorError16 = true;
        _iteratorError16 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion16 && _iterator16["return"] != null) {
            _iterator16["return"]();
          }
        } finally {
          if (_didIteratorError16) {
            throw _iteratorError16;
          }
        }
      }

      return false;
    }
    /**
     * Returns a list of OffsetMap objects
     *
     * @returns [music21.stream.OffsetMap]
     */

  }, {
    key: "offsetMap",
    value: function offsetMap() {
      var offsetMap = [];
      var groups = [];

      if (this.hasVoices()) {
        __WEBPACK_IMPORTED_MODULE_0_jquery__["each"](this.getElementsByClass('Voice'), function (i, v) {
          groups.push([v.flat, i]);
        });
      } else {
        groups = [[this, undefined]];
      }

      for (var i = 0; i < groups.length; i++) {
        var group = groups[i][0];
        var voiceIndex = groups[i][1];

        for (var j = 0; j < group.length; j++) {
          var e = group.get(j);
          var dur = e.duration.quarterLength;
          var offset = group.elementOffset(e);
          var endTime = offset + dur;
          var thisOffsetMap = new stream.OffsetMap(e, offset, endTime, voiceIndex);
          offsetMap.push(thisOffsetMap);
        }
      }

      return offsetMap;
    }
  }, {
    key: "getElementsByClass",

    /**
     * Find all elements with a certain class; if an Array is given, then any
     * matching class will work.
     *
     * @param {string[]|string} classList - a list of classes to find
     * @returns {music21.stream.Stream}
     */
    value: function getElementsByClass(classList) {
      return this.iter.getElementsByClass(classList);
    }
    /**
     * Find all elements NOT with a certain class; if an Array is given, then any
     * matching class will work.
     *
     * @param {string[]|string} classList - a list of classes to find
     * @returns {music21.stream.Stream}
     */

  }, {
    key: "getElementsNotOfClass",
    value: function getElementsNotOfClass(classList) {
      return this.iter.getElementsNotOfClass(classList);
    } //    getElementsByClass(classList) {
    //        const tempEls = [];
    //        for (const thisEl of this) {
    //            // console.warn(thisEl);
    //            if (thisEl.isClassOrSubclass === undefined) {
    //                console.error(
    //                    'what the hell is a ',
    //                    thisEl,
    //                    'doing in a Stream?'
    //                );
    //            } else if (thisEl.isClassOrSubclass(classList)) {
    //                tempEls.push(thisEl);
    //            }
    //        }
    //        const newSt = this.clone(false);
    //        newSt.elements = tempEls;
    //        return newSt;
    //    }

    /**
     * Returns a new stream [StreamIterator does not yet exist in music21j]
     * containing all Music21Objects that are found at a certain offset or
     * within a certain offset time range (given the offsetStart and
     * (optional) offsetEnd values).
     *
     * See music21p documentation for the effect of various parameters.
     */

  }, {
    key: "getElementsByOffset",
    value: function getElementsByOffset(offsetStart, offsetEnd) {
      var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
          _ref10$includeEndBoun = _ref10.includeEndBoundary,
          includeEndBoundary = _ref10$includeEndBoun === void 0 ? true : _ref10$includeEndBoun,
          _ref10$mustFinishInSp = _ref10.mustFinishInSpan,
          mustFinishInSpan = _ref10$mustFinishInSp === void 0 ? false : _ref10$mustFinishInSp,
          _ref10$mustBeginInSpa = _ref10.mustBeginInSpan,
          mustBeginInSpan = _ref10$mustBeginInSpa === void 0 ? true : _ref10$mustBeginInSpa,
          _ref10$includeElement = _ref10.includeElementsThatEndAtStart,
          includeElementsThatEndAtStart = _ref10$includeElement === void 0 ? true : _ref10$includeElement,
          _ref10$classList = _ref10.classList,
          classList = _ref10$classList === void 0 ? undefined : _ref10$classList;

      var s;

      if (classList !== undefined) {
        s = this.iter.getElementsByClass(classList);
      } else {
        s = this.iter;
      }

      s.getElementsByOffset(offsetStart, offsetEnd, {
        includeEndBoundary: includeEndBoundary,
        mustFinishInSpan: mustFinishInSpan,
        mustBeginInSpan: mustBeginInSpan,
        includeElementsThatEndAtStart: includeElementsThatEndAtStart
      });
      return s;
    }
    /**
     *  Given an element (from another Stream) returns the single element
     *  in this Stream that is sounding while the given element starts.
     *
     *  If there are multiple elements sounding at the moment it is
     *  attacked, the method returns the first element of the same class
     *  as this element, if any. If no element
     *  is of the same class, then the first element encountered is
     *  returned. For more complex usages, use allPlayingWhileSounding.
     *
     *  Returns None if no elements fit the bill.
     *
     *  The optional elStream is the stream in which el is found.
     *  If provided, el's offset
     *  in that Stream is used.  Otherwise, the current offset in
     *  el is used.  It is just
     *  in case you are paranoid that el.offset might not be what
     *  you want, because of some fancy manipulation of
     *  el.activeSite
     *
     * @param {music21.base.Music21Object} el - object with an offset and class to search for.
     * @param {music21.stream.Stream|undefined} elStream - a place to get el's offset from.
     * @returns {music21.base.Music21Object|undefined}
     */

  }, {
    key: "playingWhenAttacked",
    value: function playingWhenAttacked(el, elStream) {
      var elOffset;

      if (elStream !== undefined) {
        elOffset = el.getOffsetBySite(elStream);
      } else {
        elOffset = el.offset;
      }

      var otherElements = this.getElementsByOffset(elOffset, elOffset, {
        mustBeginInSpan: false
      });

      if (otherElements.length === 0) {
        return undefined;
      } else if (otherElements.length === 1) {
        return otherElements.get(0);
      } else {
        var _iteratorNormalCompletion17 = true;
        var _didIteratorError17 = false;
        var _iteratorError17 = undefined;

        try {
          for (var _iterator17 = otherElements[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {
            var thisEl = _step17.value;

            if (el.constructor === thisEl.constructor) {
              return thisEl;
            }
          }
        } catch (err) {
          _didIteratorError17 = true;
          _iteratorError17 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion17 && _iterator17["return"] != null) {
              _iterator17["return"]();
            }
          } finally {
            if (_didIteratorError17) {
              throw _iteratorError17;
            }
          }
        }

        return otherElements.get(0);
      }
    }
    /**
     * Sets Pitch.accidental.displayStatus for every element with a
     * pitch or pitches in the stream. If a natural needs to be displayed
     * and the Pitch does not have an accidental object yet, adds one.
     *
     * Called automatically before appendDOM routines are called.
     *
     * @returns {this}
     */

  }, {
    key: "makeAccidentals",
    value: function makeAccidentals() {
      // cheap version of music21p method
      var extendableStepList = {};
      var stepNames = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];
      var ks = this.keySignature || this.getContextByClass('KeySignature');

      for (var _i4 = 0, _stepNames = stepNames; _i4 < _stepNames.length; _i4++) {
        var stepName = _stepNames[_i4];
        var stepAlter = 0;

        if (ks !== undefined) {
          var tempAccidental = ks.accidentalByStep(stepName);

          if (tempAccidental !== undefined) {
            stepAlter = tempAccidental.alter; // console.log(stepAlter + " " + stepName);
          }
        }

        extendableStepList[stepName] = stepAlter;
      }

      var lastOctaveStepList = [];

      for (var i = 0; i < 10; i++) {
        var tempOctaveStepDict = __WEBPACK_IMPORTED_MODULE_0_jquery__["extend"]({}, extendableStepList);
        lastOctaveStepList.push(tempOctaveStepDict);
      }

      var lastOctavelessStepDict = __WEBPACK_IMPORTED_MODULE_0_jquery__["extend"]({}, extendableStepList); // probably unnecessary, but safe...

      var _iteratorNormalCompletion18 = true;
      var _didIteratorError18 = false;
      var _iteratorError18 = undefined;

      try {
        for (var _iterator18 = this[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {
          var el = _step18.value;

          if (el.pitch !== undefined) {
            // note
            var p = el.pitch;
            var lastStepDict = lastOctaveStepList[p.octave];

            this._makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict);
          } else if (el._notes !== undefined) {
            // chord
            var _iteratorNormalCompletion19 = true;
            var _didIteratorError19 = false;
            var _iteratorError19 = undefined;

            try {
              for (var _iterator19 = el._notes[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {
                var chordNote = _step19.value;
                var _p = chordNote.pitch;
                var _lastStepDict = lastOctaveStepList[_p.octave];

                this._makeAccidentalForOnePitch(_p, _lastStepDict, lastOctavelessStepDict);
              }
            } catch (err) {
              _didIteratorError19 = true;
              _iteratorError19 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion19 && _iterator19["return"] != null) {
                  _iterator19["return"]();
                }
              } finally {
                if (_didIteratorError19) {
                  throw _iteratorError19;
                }
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError18 = true;
        _iteratorError18 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion18 && _iterator18["return"] != null) {
            _iterator18["return"]();
          }
        } finally {
          if (_didIteratorError18) {
            throw _iteratorError18;
          }
        }
      }

      return this;
    } //  returns pitch

  }, {
    key: "_makeAccidentalForOnePitch",
    value: function _makeAccidentalForOnePitch(p, lastStepDict, lastOctavelessStepDict) {
      if (lastStepDict === undefined) {
        // octave < 0 or > 10? -- error that appeared sometimes.
        lastStepDict = {};
      }

      var newAlter;

      if (p.accidental === undefined) {
        newAlter = 0;
      } else {
        newAlter = p.accidental.alter;
      } // console.log(p.name + " " + lastStepDict[p.step].toString());


      if (lastStepDict[p.step] !== newAlter || lastOctavelessStepDict[p.step] !== newAlter) {
        if (p.accidental === undefined) {
          p.accidental = new __WEBPACK_IMPORTED_MODULE_12__pitch_js__["a" /* pitch */].Accidental('natural');
        }

        p.accidental.displayStatus = true; // console.log("setting displayStatus to true");
      } else if (lastStepDict[p.step] === newAlter && lastOctavelessStepDict[p.step] === newAlter) {
        if (p.accidental !== undefined) {
          p.accidental.displayStatus = false;
        } // console.log("setting displayStatus to false");

      }

      lastStepDict[p.step] = newAlter;
      lastOctavelessStepDict[p.step] = newAlter;
      return p;
    }
    /**
     * Sets the render options for any substreams (such as placing them
     * in systems, etc.) DOES NOTHING for music21.stream.Stream, but is
     * overridden in subclasses.
     *
     * @returns {this}
     */

  }, {
    key: "setSubstreamRenderOptions",
    value: function setSubstreamRenderOptions() {
      /* does nothing for standard streams ... */
      return this;
    }
    /**
     * Resets all the RenderOptions back to defaults. Can run recursively
     * and can also preserve the `RenderOptions.events` object.
     *
     * @param {Boolean} [recursive=false]
     * @param {Boolean} [preserveEvents=false]
     * @returns {this}
     */

  }, {
    key: "resetRenderOptions",
    value: function resetRenderOptions(recursive, preserveEvents) {
      var oldEvents = this.renderOptions.events;
      this.renderOptions = new __WEBPACK_IMPORTED_MODULE_13__renderOptions_js__["a" /* renderOptions */].RenderOptions();

      if (preserveEvents) {
        this.renderOptions.events = oldEvents;
      }

      if (recursive) {
        var _iteratorNormalCompletion20 = true;
        var _didIteratorError20 = false;
        var _iteratorError20 = undefined;

        try {
          for (var _iterator20 = this[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {
            var el = _step20.value;

            if (el.isClassOrSubclass('Stream')) {
              el.resetRenderOptions(recursive, preserveEvents);
            }
          }
        } catch (err) {
          _didIteratorError20 = true;
          _iteratorError20 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion20 && _iterator20["return"] != null) {
              _iterator20["return"]();
            }
          } finally {
            if (_didIteratorError20) {
              throw _iteratorError20;
            }
          }
        }
      }

      return this;
    } //  * *********  VexFlow functionality

  }, {
    key: "renderVexflowOnCanvas",
    value: function renderVexflowOnCanvas(canvasOrSVG) {
      console.warn('renderVexflowOnCanvas is deprecated; call renderVexflow instead');
      return this.renderVexflow(canvasOrSVG);
    }
  }, {
    key: "write",
    value: function write() {
      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'musicxml';
      return _exportMusicXMLAsText(this);
    }
    /**
     * Uses {@link music21.vfShow.Renderer} to render Vexflow onto an
     * existing canvas or SVG object.
     *
     * Runs `this.setRenderInteraction` on the canvas.
     *
     * Will be moved to vfShow eventually when converter objects are enabled...maybe.
     *
     * @param {Node|jQuery} canvasOrSVG - a canvas or the div surrounding an SVG object
     * @returns {vfShow.Renderer}
     */

  }, {
    key: "renderVexflow",
    value: function renderVexflow(canvasOrSVG) {
      if (canvasOrSVG.jquery) {
        canvasOrSVG = canvasOrSVG[0];
      }

      var DOMContains = document.body.contains(canvasOrSVG);

      if (!DOMContains) {
        // temporarily add to DOM so Firefox can measure it...
        document.body.appendChild(canvasOrSVG);
      }

      var tagName = canvasOrSVG.tagName.toLowerCase();

      if (this.autoBeam === true) {
        try {
          this.makeBeams({
            inPlace: true
          });
        } catch (e) {
          if (!e.toString().includes('Time Signature')) {
            throw e;
          }
        }
      }

      var vfr = new __WEBPACK_IMPORTED_MODULE_14__vfShow_js__["a" /* vfShow */].Renderer(this, canvasOrSVG);

      if (tagName === 'canvas') {
        vfr.rendererType = 'canvas';
      } else if (tagName === 'svg') {
        vfr.rendererType = 'svg';
      }

      vfr.render();
      this.setRenderInteraction(canvasOrSVG);
      this.activeVFRenderer = vfr;

      if (!DOMContains) {
        // remove the adding to DOM so that Firefox could measure it...
        document.body.removeChild(canvasOrSVG);
      }

      return vfr;
    }
    /**
     * Estimate the stream height for the Stream.
     *
     * If there are systems they will be incorporated into the height unless `ignoreSystems` is `true`.
     *
     * @param {Boolean} [ignoreSystems=false]
     * @returns {number} height in pixels
     */

  }, {
    key: "estimateStreamHeight",
    value: function estimateStreamHeight(ignoreSystems) {
      var staffHeight = this.renderOptions.naiveHeight;
      var systemPadding = this.systemPadding;

      if (systemPadding === undefined) {
        systemPadding = 0;
      }

      var numSystems;

      if (this.isClassOrSubclass('Score')) {
        var numParts = this.parts.length;
        numSystems = this.numSystems();

        if (numSystems === undefined || ignoreSystems) {
          numSystems = 1;
        }

        var scoreHeight = numSystems * staffHeight * numParts + (numSystems - 1) * systemPadding;

        if (numSystems > 1) {
          // needs a little extra padding for some reason...
          scoreHeight += systemPadding / 2;
        } // console.log('scoreHeight of ' + scoreHeight);


        return scoreHeight;
      } else if (this.isClassOrSubclass('Part')) {
        numSystems = 1;

        if (!ignoreSystems) {
          numSystems = this.numSystems();
        }

        if (__WEBPACK_IMPORTED_MODULE_7__debug_js__["a" /* debug */]) {
          console.log('estimateStreamHeight for Part: numSystems [' + numSystems + '] * staffHeight [' + staffHeight + '] + (numSystems [' + numSystems + '] - 1) * systemPadding [' + systemPadding + '].');
        }

        return numSystems * staffHeight + (numSystems - 1) * systemPadding;
      } else {
        return staffHeight;
      }
    }
    /**
     * Estimates the length of the Stream in pixels.
     *
     * @returns {number} length in pixels
     */

  }, {
    key: "estimateStaffLength",
    value: function estimateStaffLength() {
      var i;
      var totalLength;

      if (this.renderOptions.overriddenWidth !== undefined) {
        // console.log("Overridden staff width: " + this.renderOptions.overriddenWidth);
        return this.renderOptions.overriddenWidth;
      }

      if (this.hasVoices()) {
        var maxLength = 0;
        var _iteratorNormalCompletion21 = true;
        var _didIteratorError21 = false;
        var _iteratorError21 = undefined;

        try {
          for (var _iterator21 = this[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {
            var v = _step21.value;

            if (v.isClassOrSubclass('Stream')) {
              var thisLength = v.estimateStaffLength() + v.renderOptions.staffPadding;

              if (thisLength > maxLength) {
                maxLength = thisLength;
              }
            }
          }
        } catch (err) {
          _didIteratorError21 = true;
          _iteratorError21 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion21 && _iterator21["return"] != null) {
              _iterator21["return"]();
            }
          } finally {
            if (_didIteratorError21) {
              throw _iteratorError21;
            }
          }
        }

        return maxLength;
      } else if (!this.isFlat) {
        // part
        totalLength = 0;

        for (i = 0; i < this.length; i++) {
          var m = this.get(i);

          if (m.isClassOrSubclass('Stream')) {
            totalLength += m.estimateStaffLength() + m.renderOptions.staffPadding;

            if (i !== 0 && m.renderOptions.startNewSystem === true) {
              break;
            }
          }
        }

        return totalLength;
      } else {
        var rendOp = this.renderOptions;
        totalLength = 30 * this.notesAndRests.length;
        totalLength += rendOp.displayClef ? 30 : 0;
        totalLength += rendOp.displayKeySignature && this.getSpecialContext('keySignature') ? this.getSpecialContext('keySignature').width : 0;
        totalLength += rendOp.displayTimeSignature ? 30 : 0; // totalLength += rendOp.staffPadding;

        return totalLength;
      }
    } //  * ***** MIDI related routines...

    /**
     * Plays the Stream through the MIDI/sound playback (for now, only MIDI.js is supported)
     *
     * `options` can be an object containing:
     * - instrument: {@link music21.instrument.Instrument} object (default, `this.instrument`)
     * - tempo: number (default, `this.tempo`)
     *
     * @param {Object} [options] - object of playback options
     * @returns {this}
     */

  }, {
    key: "playStream",
    value: function playStream(options) {
      var params = {
        instrument: this.instrument,
        tempo: this.tempo,
        done: undefined,
        startNote: undefined
      };
      __WEBPACK_IMPORTED_MODULE_6__common_js__["a" /* common */].merge(params, options);
      var startNoteIndex = params.startNote;
      var currentNoteIndex = 0;

      if (startNoteIndex !== undefined) {
        currentNoteIndex = startNoteIndex;
      }

      var flatEls = this.flat.elements;
      var lastNoteIndex = flatEls.length - 1;
      this._stopPlaying = false;
      var thisStream = this;

      var playNext = function playNext(elements, params) {
        if (currentNoteIndex <= lastNoteIndex && !thisStream._stopPlaying) {
          var el = elements[currentNoteIndex];
          var nextNote;
          var playDuration;

          if (currentNoteIndex < lastNoteIndex) {
            nextNote = elements[currentNoteIndex + 1];
            playDuration = nextNote.offset - el.offset;
          } else {
            playDuration = el.duration.quarterLength;
          }

          var milliseconds = playDuration * 1000 * 60 / params.tempo;

          if (__WEBPACK_IMPORTED_MODULE_7__debug_js__["a" /* debug */]) {
            console.log('playing: ', el, playDuration, milliseconds, params.tempo);
          }

          if (el.playMidi !== undefined) {
            el.playMidi(params.tempo, nextNote, params);
          }

          currentNoteIndex += 1;
          setTimeout(function () {
            playNext(elements, params);
          }, milliseconds);
        } else if (params && params.done) {
          params.done.call();
        }
      };

      playNext(flatEls, params);
      return this;
    }
    /**
     * Stops a stream from playing if it currently is.
     *
     * @returns {this}
     */

  }, {
    key: "stopPlayStream",
    value: function stopPlayStream() {
      // turns off all currently playing MIDI notes (on any stream) and stops playback.
      this._stopPlaying = true;

      for (var i = 0; i < 127; i++) {
        __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](0, i, 0);
      }

      return this;
    }
    /* ----------------------------------------------------------------------
     *
     *  SVG/Canvas DOM routines -- to be factored out eventually.
     *
     */

  }, {
    key: "createNewCanvas",
    value: function createNewCanvas(width, height) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';
      console.warn('createNewCanvas is deprecated, use createNewDOM instead');
      return this.createNewDOM(width, height, elementType);
    }
    /**
     * Creates and returns a new `&lt;canvas&gt;` or `&lt;svg&gt;` object.
     *
     * Calls setSubstreamRenderOptions() first.
     *
     * Does not render on the DOM element.
     *
     * @param {number|string|undefined} width - will use `this.estimateStaffLength()` + `this.renderOptions.staffPadding` if not given
     * @param {number|string|undefined} height - if undefined will use `this.renderOptions.height`. If still undefined, will use `this.estimateStreamHeight()`
     * @param {string} elementType - what type of element, default = svg
     * @returns {jQuery} svg in jquery.
     */

  }, {
    key: "createNewDOM",
    value: function createNewDOM(width, height) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';

      if (!this.isFlat) {
        this.setSubstreamRenderOptions();
      } // we render SVG on a Div for Vexflow


      var renderElementType = 'div';

      if (elementType === 'canvas') {
        renderElementType = 'canvas';
      }

      var $newCanvasOrDIV = __WEBPACK_IMPORTED_MODULE_0_jquery__('<' + renderElementType + '/>');
      $newCanvasOrDIV.addClass('streamHolding'); // .css('border', '1px red solid');

      $newCanvasOrDIV.css('display', 'inline-block');

      if (width !== undefined) {
        if (typeof width === 'string') {
          width = __WEBPACK_IMPORTED_MODULE_6__common_js__["a" /* common */].stripPx(width);
        }

        $newCanvasOrDIV.attr('width', width);
      } else {
        var computedWidth = this.estimateStaffLength() + this.renderOptions.staffPadding;
        $newCanvasOrDIV.attr('width', computedWidth);
      }

      if (height !== undefined) {
        $newCanvasOrDIV.attr('height', height);
      } else {
        var computedHeight;

        if (this.renderOptions.height === undefined) {
          computedHeight = this.estimateStreamHeight(); // console.log('computed Height estim: ' + computedHeight);
        } else {
          computedHeight = this.renderOptions.height; // console.log('computed Height: ' + computedHeight);
        }

        $newCanvasOrDIV.attr('height', computedHeight * this.renderOptions.scaleFactor.y);
      }

      return $newCanvasOrDIV;
    }
  }, {
    key: "createPlayableCanvas",
    value: function createPlayableCanvas(width, height) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';
      console.warn('createPlayableCanvas is deprecated, use createPlayableDOM instead');
      return this.createPlayableDOM(width, height, elementType);
    }
    /**
     * Creates a rendered, playable svg where clicking plays it.
     *
     * Called from appendNewDOM() etc.
     *
     * @param {number|string|undefined} width
     * @param {number|string|undefined} height
     * @param {string} elementType - what type of element, default = svg
     * @returns {jQuery} canvas or svg
     */

  }, {
    key: "createPlayableDOM",
    value: function createPlayableDOM(width, height) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';
      this.renderOptions.events.click = 'play';
      return this.createDOM(width, height, elementType);
    }
  }, {
    key: "createCanvas",
    value: function createCanvas(width, height) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';
      console.warn('createCanvas is deprecated, use createDOM');
      return this.createDOM(width, height, elementType);
    }
    /**
     * Creates a new svg and renders vexflow on it
     *
     * @param {number|string|undefined} [width]
     * @param {number|string|undefined} [height]
     * @param {string} elementType - what type of element svg or canvas, default = svg
     * @returns {jQuery} canvas or SVG
     */

  }, {
    key: "createDOM",
    value: function createDOM(width, height) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';
      var $newSvg = this.createNewDOM(width, height, elementType); // temporarily append the SVG to the document to fix a Firefox bug
      // where nothing can be measured unless is it in the document.

      this.renderVexflow($newSvg);
      return $newSvg;
    }
  }, {
    key: "appendNewCanvas",
    value: function appendNewCanvas(appendElement, width, height) {
      var elementType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'svg';
      console.warn('appendNewCanvas is deprecated, use appendNewDOM instead');
      return this.appendNewDOM(appendElement, width, height, elementType);
    }
    /**
     * Creates a new canvas, renders vexflow on it, and appends it to the DOM.
     *
     * @param {jQuery|Node} [appendElement=document.body] - where to place the svg
     * @param {number|string} [width]
     * @param {number|string} [height]
     * @param {string} elementType - what type of element, default = svg
     * @returns {SVGElement|Node} svg (not the jQuery object --
     * this is a difference with other routines and should be fixed. TODO: FIX)
     *
     */

  }, {
    key: "appendNewDOM",
    value: function appendNewDOM(appendElement, width, height) {
      var elementType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'svg';

      if (appendElement === undefined) {
        appendElement = document.body;
      }

      var $appendElement = appendElement;

      if (appendElement.jquery === undefined) {
        $appendElement = __WEBPACK_IMPORTED_MODULE_0_jquery__(appendElement);
      } //      if (width === undefined && this.renderOptions.maxSystemWidth === undefined) {
      //      var $bodyElement = bodyElement;
      //      if (bodyElement.jquery === undefined) {
      //      $bodyElement = $(bodyElement);
      //      }
      //      width = $bodyElement.width();
      //      };


      var svgOrCanvasBlock = this.createDOM(width, height, elementType);
      $appendElement.append(svgOrCanvasBlock);
      return svgOrCanvasBlock[0];
    }
  }, {
    key: "replaceCanvas",
    value: function replaceCanvas(where, preserveSvgSize) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';
      console.warn('replaceCanvas is deprecated, use replaceDOM instead');
      return this.replaceDOM(where, preserveSvgSize, elementType);
    }
    /**
     * Replaces a particular Svg with a new rendering of one.
     *
     * Note that if 'where' is empty, will replace all svg elements on the page.
     *
     * @param {jQuery|Node} [where] - the canvas or SVG to replace or a container holding the canvas(es) to replace.
     * @param {Boolean} [preserveSvgSize=false]
     * @param {string} elementType - what type of element, default = svg
     * @returns {jQuery} the svg
     */

  }, {
    key: "replaceDOM",
    value: function replaceDOM(where, preserveSvgSize) {
      var elementType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'svg';

      // if called with no where, replaces all the svgs on the page...
      if (where === undefined) {
        where = document.body;
      }

      var $where;

      if (where.jquery === undefined) {
        $where = __WEBPACK_IMPORTED_MODULE_0_jquery__(where);
      } else {
        $where = where; // where = $where[0];
      }

      var $oldSVGOrCanvas;

      if ($where.hasClass('streamHolding')) {
        $oldSVGOrCanvas = $where;
      } else {
        $oldSVGOrCanvas = $where.find('.streamHolding');
      } // TODO: Max Width!


      if ($oldSVGOrCanvas.length === 0) {
        throw new __WEBPACK_IMPORTED_MODULE_2__exceptions21_js__["Music21Exception"]('No svg defined for replaceDOM!');
      } else if ($oldSVGOrCanvas.length > 1) {
        // change last svg...
        // replacing each with svgBlock doesn't work
        // anyhow, it just resizes the svg but doesn't
        // draw.
        $oldSVGOrCanvas = __WEBPACK_IMPORTED_MODULE_0_jquery__($oldSVGOrCanvas[$oldSVGOrCanvas.length - 1]);
      }

      var svgBlock;

      if (preserveSvgSize) {
        var width = $oldSVGOrCanvas.width() || parseInt($oldSVGOrCanvas.attr('width'));
        var height = $oldSVGOrCanvas.attr('height'); // height manipulates

        svgBlock = this.createDOM(width, height, elementType);
      } else {
        svgBlock = this.createDOM(undefined, undefined, elementType);
      }

      $oldSVGOrCanvas.replaceWith(svgBlock);
      return svgBlock;
    }
    /**
     * Set the type of interaction on the svg based on
     *    - Stream.renderOptions.events.click
     *    - Stream.renderOptions.events.dblclick
     *    - Stream.renderOptions.events.resize
     *
     * Currently the only options available for each are:
     *    - 'play' (string)
     *    - 'reflow' (string; only on event.resize)
     *    - customFunction (will receive event as a first variable; should set up a way to
     *                    find the original stream; var s = this; var f = function () { s...}
     *                   )
     *
     * @param {Node} canvasOrDiv - canvas or the Div surrounding it.
     * @returns {this}
     */

  }, {
    key: "setRenderInteraction",
    value: function setRenderInteraction(canvasOrDiv) {
      var _this3 = this;

      var $svg = canvasOrDiv;

      if (canvasOrDiv === undefined) {
        return this;
      } else if (canvasOrDiv.jquery === undefined) {
        $svg = __WEBPACK_IMPORTED_MODULE_0_jquery__(canvasOrDiv);
      }

      var playFunc = function playFunc() {
        _this3.playStream();
      };

      __WEBPACK_IMPORTED_MODULE_0_jquery__["each"](this.renderOptions.events, __WEBPACK_IMPORTED_MODULE_0_jquery__["proxy"](function setRenderInteractionProxy(eventType, eventFunction) {
        $svg.off(eventType);

        if (typeof eventFunction === 'string' && eventFunction === 'play') {
          $svg.on(eventType, playFunc);
        } else if (typeof eventFunction === 'string' && eventType === 'resize' && eventFunction === 'reflow') {
          this.windowReflowStart($svg);
        } else if (eventFunction !== undefined) {
          $svg.on(eventType, eventFunction);
        }
      }, this));
      return this;
    }
    /**
     *
     * Recursively search downward for the closest storedVexflowStave...
     *
     * @returns {Vex.Flow.Stave|undefined}
     */

  }, {
    key: "recursiveGetStoredVexflowStave",
    value: function recursiveGetStoredVexflowStave() {
      var storedVFStave = this.storedVexflowStave;

      if (storedVFStave === undefined) {
        if (this.isFlat) {
          return undefined;
        } else {
          var subStreams = this.getElementsByClass('Stream');
          var first_subStream = subStreams.get(0);
          return first_subStream.recursiveGetStoredVexflowStave();
        }
      }

      return storedVFStave;
    }
  }, {
    key: "getUnscaledXYforCanvas",
    value: function getUnscaledXYforCanvas(svg, e) {
      console.warn('getUnscaledXYforCanvas is deprecated, use getUnscaledXYforDOM instead');
      return this.getUnscaledXYforDOM(svg, e);
    }
    /**
     * Given a mouse click, or other event with .pageX and .pageY,
     * find the x and y for the svg.
     *
     * @param {Node|SVGElement} svg - a canvas or SVG object
     * @param {Event} e
     * @returns {Array<number>} two-elements, [x, y] in pixels.
     */

  }, {
    key: "getUnscaledXYforDOM",
    value: function getUnscaledXYforDOM(svg, e) {
      var offset = null;

      if (svg === undefined) {
        offset = {
          left: 0,
          top: 0
        };
      } else {
        offset = __WEBPACK_IMPORTED_MODULE_0_jquery__(svg).offset();
      }
      /*
       * mouse event handler code from: http://diveintohtml5.org/canvas.html
       */


      var xClick;
      var yClick;

      if (e.pageX !== undefined && e.pageY !== undefined) {
        xClick = e.pageX;
        yClick = e.pageY;
      } else {
        xClick = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
        yClick = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
      }

      var xPx = xClick - offset.left;
      var yPx = yClick - offset.top;
      return [xPx, yPx];
    }
  }, {
    key: "getScaledXYforCanvas",
    value: function getScaledXYforCanvas(svg, e) {
      console.warn('getScaledXYforCanvas is deprecated, use getScaledXYforDOM instead');
      return this.getScaledXYforDOM(svg, e);
    }
    /**
     * return a list of [scaledX, scaledY] for
     * a svg element.
     *
     * xScaled refers to 1/scaleFactor.x -- for instance, scaleFactor.x = 0.7 (default)
     * x of 1 gives 1.42857...
     *
     * @param {Node|SVGElement} svg -- a canvas or SVG object
     * @param {Event} e
     * @returns {Array<number>} [scaledX, scaledY]
     */

  }, {
    key: "getScaledXYforDOM",
    value: function getScaledXYforDOM(svg, e) {
      var _this$getUnscaledXYfo = this.getUnscaledXYforDOM(svg, e),
          _this$getUnscaledXYfo2 = _slicedToArray(_this$getUnscaledXYfo, 2),
          xPx = _this$getUnscaledXYfo2[0],
          yPx = _this$getUnscaledXYfo2[1];

      var pixelScaling = this.renderOptions.scaleFactor;
      var yPxScaled = yPx / pixelScaling.y;
      var xPxScaled = xPx / pixelScaling.x;
      return [xPxScaled, yPxScaled];
    }
    /**
     *
     * Given a Y position find the diatonicNoteNum that a note at that position would have.
     *
     * searches this.storedVexflowStave
     *
     * Y position must be offset from the start of the stave...
     *
     * @param {number} yPxScaled
     * @returns {number}
     */

  }, {
    key: "diatonicNoteNumFromScaledY",
    value: function diatonicNoteNumFromScaledY(yPxScaled) {
      var storedVFStave = this.recursiveGetStoredVexflowStave();

      if (storedVFStave === undefined) {
        throw new StreamException('Could not find vexflowStave for getting size');
      } // for (var i = -10; i < 10; i++) {
      //    console.log("line: " + i + " y: " + storedVFStave.getYForLine(i));
      // }


      var thisClef = this.clef || this.getContextByClass('Clef');
      var lowestLine = thisClef !== undefined ? thisClef.lowestLine : 31;
      var lineSpacing = storedVFStave.options.spacing_between_lines_px;
      var linesAboveStaff = storedVFStave.options.space_above_staff_ln;
      var notesFromTop = yPxScaled * 2 / lineSpacing;
      var notesAboveLowestLine = (storedVFStave.options.num_lines - 1 + linesAboveStaff) * 2 - notesFromTop;
      var clickedDiatonicNoteNum = lowestLine + Math.round(notesAboveLowestLine);
      return clickedDiatonicNoteNum;
    }
    /**
     * Returns the stream that is at X location xPxScaled and system systemIndex.
     *
     * Override in subclasses, always returns this; here.
     *
     * @param {number} [xPxScaled]
     * @param {number} [systemIndex]
     * @returns {this}
     *
     */

  }, {
    key: "getStreamFromScaledXandSystemIndex",
    value: function getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {
      return this;
    }
    /**
     *
     * Return the note (or chord or rest) at pixel X (or within allowablePixels [default 10])
     * of the note.
     *
     * systemIndex element is not used on bare Stream
     *
     * options can be a dictionary of: 'allowBackup' which gets the closest
     * note within the window even if it's beyond allowablePixels (default: true)
     * and 'backupMaximum' which specifies a maximum distance even for backup
     * (default: 70);
     *
     * @param {number} xPxScaled
     * @param {number} [allowablePixels=10]
     * @param {number} [systemIndex]
     * @param {Object} [options]
     * @returns {music21.base.Music21Object|undefined}
     */

  }, {
    key: "noteElementFromScaledX",
    value: function noteElementFromScaledX(xPxScaled, allowablePixels, systemIndex, options) {
      var params = {
        allowBackup: true,
        backupMaximum: 70
      };
      __WEBPACK_IMPORTED_MODULE_6__common_js__["a" /* common */].merge(params, options);
      var foundNote;

      if (allowablePixels === undefined) {
        allowablePixels = 10;
      }

      var subStream = this.getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex);

      if (subStream === undefined) {
        return undefined;
      }

      var backup = {
        minDistanceSoFar: params.backupMaximum,
        note: undefined
      }; // a backup in case we did not find within allowablePixels

      var _iteratorNormalCompletion22 = true;
      var _didIteratorError22 = false;
      var _iteratorError22 = undefined;

      try {
        for (var _iterator22 = subStream.flat.notesAndRests[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {
          var n = _step22.value;

          /* should also
           * compensate for accidentals...
           */
          var leftDistance = Math.abs(n.x - xPxScaled);
          var rightDistance = Math.abs(n.x + n.width - xPxScaled);
          var minDistance = Math.min(leftDistance, rightDistance);

          if (leftDistance < allowablePixels && rightDistance < allowablePixels) {
            foundNote = n;
            break;
            /* O(n); can be made O(log n) */
          } else if (leftDistance < params.backupMaximum && rightDistance < params.backupMaximum && minDistance < backup.minDistanceSoFar) {
            backup.note = n;
            backup.minDistanceSoFar = minDistance;
          }
        } // console.log('note here is: ', foundNote);

      } catch (err) {
        _didIteratorError22 = true;
        _iteratorError22 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion22 && _iterator22["return"] != null) {
            _iterator22["return"]();
          }
        } finally {
          if (_didIteratorError22) {
            throw _iteratorError22;
          }
        }
      }

      if (params.allowBackup && foundNote === undefined) {
        foundNote = backup.note; // console.log('used backup: closest was: ', backup.minDistanceSoFar);
      } // console.log(foundNote);


      return foundNote;
    }
    /**
     * Given an event object, and an x and y location, returns a two-element array
     * of the pitch.Pitch.diatonicNoteNum that was clicked (i.e., if C4 was clicked this
     * will return 29; if D4 was clicked this will return 30) and the closest note in the
     * stream that was clicked.
     *
     * Return a list of [diatonicNoteNum, closestXNote]
     * for an event (e) called on the svg (svg)
     *
     * @param {Node|SVGElement} svg
     * @param {Event} e
     * @param {number} x
     * @param {number} y
     * @returns {Array} [diatonicNoteNum, closestXNote]
     */

  }, {
    key: "findNoteForClick",
    value: function findNoteForClick(svg, e, x, y) {
      if (x === undefined || y === undefined) {
        var _this$getScaledXYforD = this.getScaledXYforDOM(svg, e);

        var _this$getScaledXYforD2 = _slicedToArray(_this$getScaledXYforD, 2);

        x = _this$getScaledXYforD2[0];
        y = _this$getScaledXYforD2[1];
      }

      var clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(y);
      var foundNote = this.noteElementFromScaledX(x);
      return [clickedDiatonicNoteNum, foundNote];
    }
    /**
     * Change the pitch of a note given that it has been clicked and then
     * call changedCallbackFunction
     *
     * To be removed...
     *
     * @param {number} clickedDiatonicNoteNum
     * @param {music21.base.Music21Object} foundNote
     * @param {Node} svg
     * @returns {*} output of changedCallbackFunction
     */

  }, {
    key: "noteChanged",
    value: function noteChanged(clickedDiatonicNoteNum, foundNote, svg) {
      var n = foundNote;
      var p = new __WEBPACK_IMPORTED_MODULE_12__pitch_js__["a" /* pitch */].Pitch('C');
      p.diatonicNoteNum = clickedDiatonicNoteNum;
      p.accidental = n.pitch.accidental;
      n.pitch = p;
      n.stemDirection = undefined;
      this.activeNote = n;
      var $newSvg = this.redrawDOM(svg);
      var params = {
        foundNote: n,
        svg: $newSvg
      };

      if (this.changedCallbackFunction !== undefined) {
        return this.changedCallbackFunction(params);
      } else {
        return params;
      }
    }
  }, {
    key: "redrawCanvas",
    value: function redrawCanvas(svg) {
      console.warn('redrawCanvas is deprecated, use redrawDOM instead');
      return this.redrawDOM(svg);
    }
    /**
     * Redraws an svgDiv, keeping the events of the previous svg.
     *
     * @param {Node} svg
     * @returns {this}
     */

  }, {
    key: "redrawDOM",
    value: function redrawDOM(svg) {
      // this.resetRenderOptions(true, true); // recursive, preserveEvents
      if (!this.isFlat) {
        this.setSubstreamRenderOptions();
      }

      var $svg = __WEBPACK_IMPORTED_MODULE_0_jquery__(svg); // works even if svg is already $jquery

      var $newSvg = this.createNewDOM(svg.width, svg.height);
      this.renderVexflow($newSvg);
      $svg.replaceWith($newSvg);
      return $newSvg;
    }
  }, {
    key: "editableAccidentalCanvas",
    value: function editableAccidentalCanvas(width, height) {
      console.warn('editableAccidentalCanvas is deprecated, use editableAccidentalDOM instead');
      return this.editableAccidentalDOM(width, height);
    }
    /**
     * Renders a stream on svg with the ability to edit it and
     * a toolbar that allows the accidentals to be edited.
     *
     * @param {number} [width]
     * @param {number} [height]
     * @returns {Node} the div tag around the svg.
     */

  }, {
    key: "editableAccidentalDOM",
    value: function editableAccidentalDOM(width, height) {
      /*
       * Create an editable svg with an accidental selection bar.
       */
      var d = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div/>').css('text-align', 'left').css('position', 'relative');
      this.renderOptions.events.click = this.DOMChangerFunction;
      var $svgDiv = this.createDOM(width, height);
      var buttonDiv = this.getAccidentalToolbar(undefined, undefined, $svgDiv);
      d.append(buttonDiv);
      d.append(__WEBPACK_IMPORTED_MODULE_0_jquery__("<br clear='all'/>"));
      d.append($svgDiv);
      return d;
    }
    /*
     * SVG toolbars...
     */

    /**
     *
     * @param {int} minAccidental - alter of the min accidental (default -1)
     * @param {int} maxAccidental - alter of the max accidental (default 1)
     * @param {jQuery} $siblingSvg - svg to use for redrawing;
     * @returns {jQuery} the accidental toolbar.
     */

  }, {
    key: "getAccidentalToolbar",
    value: function getAccidentalToolbar(minAccidental, maxAccidental, $siblingSvg) {
      var _this4 = this;

      if (minAccidental === undefined) {
        minAccidental = -1;
      }

      if (maxAccidental === undefined) {
        maxAccidental = 1;
      }

      minAccidental = Math.round(minAccidental);
      maxAccidental = Math.round(maxAccidental);

      var addAccidental = function addAccidental(newAlter, clickEvent) {
        /*
         * To be called on a button...
         */
        var $useSvg = $siblingSvg;

        if ($useSvg === undefined) {
          var $searchParent = __WEBPACK_IMPORTED_MODULE_0_jquery__(clickEvent.target).parent();
          var maxSearch = 99;

          while (maxSearch > 0 && $searchParent !== undefined && ($useSvg === undefined || $useSvg[0] === undefined)) {
            maxSearch -= 1;
            $useSvg = $searchParent.find('.streamHolding');
            $searchParent = $searchParent.parent();
          }

          if ($useSvg[0] === undefined) {
            console.log('Could not find a svg...');
            return;
          }
        }

        if (_this4.activeNote !== undefined) {
          var n = _this4.activeNote;
          n.pitch.accidental = new __WEBPACK_IMPORTED_MODULE_12__pitch_js__["a" /* pitch */].Accidental(newAlter);
          /* console.log(n.pitch.name); */

          var $newSvg = _this4.redrawDOM($useSvg[0]);

          if (_this4.changedCallbackFunction !== undefined) {
            _this4.changedCallbackFunction({
              foundNote: n,
              svg: $newSvg
            });
          }
        }
      };

      var $buttonDiv = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div/>').attr('class', 'accidentalToolbar scoreToolbar');

      var _loop = function _loop(i) {
        var acc = new __WEBPACK_IMPORTED_MODULE_12__pitch_js__["a" /* pitch */].Accidental(i);
        var $button = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>' + acc.unicodeModifier + '</button>').click(function (e) {
          return addAccidental(i, e);
        });

        if (Math.abs(i) > 1) {
          $button.css('font-family', 'Bravura Text');
          $button.css('font-size', '20px');
        }

        $buttonDiv.append($button);
      };

      for (var i = minAccidental; i <= maxAccidental; i++) {
        _loop(i);
      }

      return $buttonDiv;
    }
    /**
     *
     * @returns {jQuery} a Div containing two buttons -- play and stop
     */

  }, {
    key: "getPlayToolbar",
    value: function getPlayToolbar() {
      var _this5 = this;

      var $buttonDiv = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div/>').attr('class', 'playToolbar scoreToolbar');
      var $bPlay = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>&#9658</button>');
      $bPlay.click(function () {
        _this5.playStream();
      });
      $buttonDiv.append($bPlay);
      var $bStop = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>&#9724</button>');
      $bStop.click(function () {
        _this5.stopPlayStream();
      });
      $buttonDiv.append($bStop);
      return $buttonDiv;
    } //  reflow

    /**
     * Begins a series of bound events to the window that makes it
     * so that on resizing the stream is redrawn and reflowed to the
     * new size.
     *
     * @param {jQuery} jSvg
     * @returns {this}
     */

  }, {
    key: "windowReflowStart",
    value: function windowReflowStart(jSvg) {
      // set up a bunch of windowReflow bindings that affect the svg.
      var callingStream = this;
      var jSvgNow = jSvg;
      __WEBPACK_IMPORTED_MODULE_0_jquery__(window).bind('resizeEnd', function () {
        // do something, window hasn't changed size in 500ms
        var jSvgParent = jSvgNow.parent();
        var newWidth = jSvgParent.width();
        var svgWidth = newWidth; // console.log(svgWidth);

        console.log('resizeEnd triggered', newWidth); // console.log(callingStream.renderOptions.events.click);

        callingStream.resetRenderOptions(true, true); // recursive, preserveEvents
        // console.log(callingStream.renderOptions.events.click);

        callingStream.maxSystemWidth = svgWidth - 40;
        jSvgNow.remove();
        var svgObj = callingStream.appendNewDOM(jSvgParent);
        jSvgNow = __WEBPACK_IMPORTED_MODULE_0_jquery__(svgObj);
      });
      __WEBPACK_IMPORTED_MODULE_0_jquery__(window).resize(function resizeSvgTo() {
        if (this.resizeTO) {
          clearTimeout(this.resizeTO);
        }

        this.resizeTO = setTimeout(function resizeToTimeout() {
          __WEBPACK_IMPORTED_MODULE_0_jquery__(this).trigger('resizeEnd');
        }, 200);
      });
      setTimeout(function triggerResizeOnCreateSvg() {
        var $window = __WEBPACK_IMPORTED_MODULE_0_jquery__(window);
        var doResize = $window.data('triggerResizeOnCreateSvg');

        if (doResize === undefined || doResize === true) {
          __WEBPACK_IMPORTED_MODULE_0_jquery__(this).trigger('resizeEnd');
          $window.data('triggerResizeOnCreateSvg', false);
        }
      }, 1000);
      return this;
    }
    /**
     * Does this stream have a {@link music21.stream.Voice} inside it?
     *
     * @returns {Boolean}
     */

  }, {
    key: "hasVoices",
    value: function hasVoices() {
      var _iteratorNormalCompletion23 = true;
      var _didIteratorError23 = false;
      var _iteratorError23 = undefined;

      try {
        for (var _iterator23 = this[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {
          var el = _step23.value;

          if (el.isClassOrSubclass('Voice')) {
            return true;
          }
        }
      } catch (err) {
        _didIteratorError23 = true;
        _iteratorError23 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion23 && _iterator23["return"] != null) {
            _iterator23["return"]();
          }
        } finally {
          if (_didIteratorError23) {
            throw _iteratorError23;
          }
        }
      }

      return false;
    }
  }, {
    key: "duration",
    get: function get() {
      if (this._duration !== undefined) {
        return this._duration;
      }

      return new __WEBPACK_IMPORTED_MODULE_8__duration_js__["a" /* duration */].Duration(this.highestTime);
    },
    set: function set(newDuration) {
      this._duration = newDuration;
    }
  }, {
    key: "highestTime",
    get: function get() {
      var highestTime = 0.0;
      var _iteratorNormalCompletion24 = true;
      var _didIteratorError24 = false;
      var _iteratorError24 = undefined;

      try {
        for (var _iterator24 = this[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {
          var el = _step24.value;
          var endTime = el.offset;

          if (el.duration !== undefined) {
            endTime += el.duration.quarterLength;
          }

          if (endTime > highestTime) {
            highestTime = endTime;
          }
        }
      } catch (err) {
        _didIteratorError24 = true;
        _iteratorError24 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion24 && _iterator24["return"] != null) {
            _iterator24["return"]();
          }
        } finally {
          if (_didIteratorError24) {
            throw _iteratorError24;
          }
        }
      }

      return highestTime;
    }
  }, {
    key: "semiFlat",
    get: function get() {
      return this._getFlatOrSemiFlat(true);
    }
  }, {
    key: "flat",
    get: function get() {
      return this._getFlatOrSemiFlat(false);
    }
  }, {
    key: "notes",
    get: function get() {
      return this.getElementsByClass(['Note', 'Chord']);
    }
  }, {
    key: "notesAndRests",
    get: function get() {
      return this.getElementsByClass('GeneralNote');
    }
  }, {
    key: "tempo",
    get: function get() {
      if (this._tempo === undefined && this.activeSite !== undefined) {
        return this.activeSite.tempo;
      } else if (this._tempo === undefined) {
        return 150;
      } else {
        return this._tempo;
      }
    },
    set: function set(newTempo) {
      this._tempo = newTempo;
    }
  }, {
    key: "instrument",
    get: function get() {
      if (this._instrument === undefined && this.activeSite !== undefined) {
        return this.activeSite.instrument;
      } else {
        return this._instrument;
      }
    },
    set: function set(newInstrument) {
      if (typeof newInstrument === 'string') {
        newInstrument = new __WEBPACK_IMPORTED_MODULE_9__instrument_js__["a" /* instrument */].Instrument(newInstrument);
      }

      this._instrument = newInstrument;
    }
  }, {
    key: "clef",
    get: function get() {
      return this.getSpecialContext('clef', true);
    },
    set: function set(newClef) {
      var oldClef = this._firstElementContext('clef');

      if (oldClef !== undefined) {
        this.replace(oldClef, newClef);
      } else {
        this.insert(0.0, newClef);
      }

      this._clef = newClef;
    }
  }, {
    key: "keySignature",
    get: function get() {
      return this.getSpecialContext('keySignature', true);
    },
    set: function set(newKeySignature) {
      var oldKS = this._firstElementContext('keySignature');

      if (oldKS !== undefined) {
        this.replace(oldKS, newKeySignature);
      } else {
        this.insert(0.0, newKeySignature);
      }

      this._keySignature = newKeySignature;
    }
  }, {
    key: "timeSignature",
    get: function get() {
      return this.getSpecialContext('timeSignature', true);
    },
    set: function set(newTimeSignature) {
      if (typeof newTimeSignature === 'string') {
        newTimeSignature = new __WEBPACK_IMPORTED_MODULE_10__meter_js__["a" /* meter */].TimeSignature(newTimeSignature);
      }

      var oldTS = this._firstElementContext('timeSignature');

      if (oldTS !== undefined) {
        this.replace(oldTS, newTimeSignature);
      } else {
        this.insert(0.0, newTimeSignature);
      }

      this._timeSignature = newTimeSignature;
    }
  }, {
    key: "autoBeam",
    get: function get() {
      return this._specialContext('autoBeam');
    },
    set: function set(ab) {
      this._autoBeam = ab;
    }
  }, {
    key: "maxSystemWidth",
    get: function get() {
      var baseMaxSystemWidth = 750;

      if (this.renderOptions.maxSystemWidth === undefined && this.activeSite !== undefined) {
        baseMaxSystemWidth = this.activeSite.maxSystemWidth;
      } else if (this.renderOptions.maxSystemWidth !== undefined) {
        baseMaxSystemWidth = this.renderOptions.maxSystemWidth;
      }

      return baseMaxSystemWidth / this.renderOptions.scaleFactor.x;
    },
    set: function set(newSW) {
      this.renderOptions.maxSystemWidth = newSW * this.renderOptions.scaleFactor.x;
    }
  }, {
    key: "parts",
    get: function get() {
      return this.getElementsByClass('Part');
    }
  }, {
    key: "measures",
    get: function get() {
      return this.getElementsByClass('Measure');
    }
  }, {
    key: "voices",
    get: function get() {
      return this.getElementsByClass('Voice');
    }
  }, {
    key: "length",
    get: function get() {
      return this._elements.length;
    }
  }, {
    key: "elements",
    get: function get() {
      return this._elements;
    },
    set: function set(newElements) {
      var highestOffsetSoFar = 0.0;
      this.clear();
      var tempInsert = [];
      var i;
      var thisEl;

      if (newElements.isStream === true) {
        // iterate to set active site;
        var _iteratorNormalCompletion25 = true;
        var _didIteratorError25 = false;
        var _iteratorError25 = undefined;

        try {
          for (var _iterator25 = newElements[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {
            var unused = _step25.value;
          } // eslint-disable-line no-empty

        } catch (err) {
          _didIteratorError25 = true;
          _iteratorError25 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion25 && _iterator25["return"] != null) {
              _iterator25["return"]();
            }
          } finally {
            if (_didIteratorError25) {
              throw _iteratorError25;
            }
          }
        }

        newElements = newElements.elements;
      }

      for (i = 0; i < newElements.length; i++) {
        thisEl = newElements[i];
        var thisElOffset = thisEl.offset;

        if (thisElOffset === undefined || thisElOffset === highestOffsetSoFar) {
          // append
          this._elements.push(thisEl);

          this.setElementOffset(thisEl, highestOffsetSoFar);

          if (thisEl.duration === undefined) {
            console.error('No duration for ', thisEl, ' in ', this);
          }

          highestOffsetSoFar += thisEl.duration.quarterLength;
        } else {
          // append -- slow
          tempInsert.push(thisEl);
        }
      } // console.warn('end', highestOffsetSoFar, tempInsert);


      for (i = 0; i < tempInsert.length; i++) {
        thisEl = tempInsert[i];
        this.insert(thisEl.offset, thisEl);
      }

      this.coreElementsChanged(); // would be called already if newElements != [];
    }
  }, {
    key: "iter",
    get: function get() {
      return new __WEBPACK_IMPORTED_MODULE_17__stream_iterator_js__["StreamIterator"](this);
    }
  }]);

  return Stream;
}(__WEBPACK_IMPORTED_MODULE_3__base_js__["a" /* base */].Music21Object);
stream.Stream = Stream;
/**
 *
 * @class Voice
 * @memberof music21.stream
 * @extends music21.stream.Stream
 */

var Voice =
/*#__PURE__*/
function (_Stream) {
  _inherits(Voice, _Stream);

  function Voice() {
    var _this6;

    _classCallCheck(this, Voice);

    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Voice).call(this));
    _this6.recursionType = 'elementsFirst';
    return _this6;
  }

  return Voice;
}(Stream);
stream.Voice = Voice;
/**
 * @class Measure
 * @memberof music21.stream
 * @extends music21.stream.Stream
 */

var Measure =
/*#__PURE__*/
function (_Stream2) {
  _inherits(Measure, _Stream2);

  function Measure() {
    var _this7;

    _classCallCheck(this, Measure);

    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(Measure).call(this));
    _this7.recursionType = 'elementsFirst';
    _this7.isMeasure = true;
    _this7.number = 0; // measure number

    _this7.numberSuffix = '';
    return _this7;
  }

  _createClass(Measure, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.measureNumberWithSuffix() + ' offset=' + this.offset.toString();
    }
  }, {
    key: "measureNumberWithSuffix",
    value: function measureNumberWithSuffix() {
      return this.number.toString() + this.numberSuffix;
    }
  }]);

  return Measure;
}(Stream);
stream.Measure = Measure;
/**
 * Part -- specialized to handle Measures inside it
 *
 * @class Part
 * @memberof music21.stream
 * @extends music21.stream.Stream
 */

var Part =
/*#__PURE__*/
function (_Stream3) {
  _inherits(Part, _Stream3);

  function Part() {
    var _this8;

    _classCallCheck(this, Part);

    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(Part).call(this));
    _this8.recursionType = 'flatten';
    _this8.systemHeight = _this8.renderOptions.naiveHeight;
    return _this8;
  }
  /**
   * How many systems does this Part have?
   *
   * Does not change any reflow information, so by default it's always 1.
   *
   * @returns {Number}
   */


  _createClass(Part, [{
    key: "numSystems",
    value: function numSystems() {
      var numSystems = 1;
      var subStreams = this.getElementsByClass('Stream');

      for (var i = 1; i < subStreams.length; i++) {
        if (subStreams.get(i).renderOptions.startNewSystem) {
          numSystems += 1;
        }
      }

      return numSystems;
    }
    /**
     * Find the width of every measure in the Part.
     *
     * @returns {Array<number>}
     */

  }, {
    key: "getMeasureWidths",
    value: function getMeasureWidths() {
      /* call after setSubstreamRenderOptions */
      var measureWidths = [];
      var _iteratorNormalCompletion26 = true;
      var _didIteratorError26 = false;
      var _iteratorError26 = undefined;

      try {
        for (var _iterator26 = this[Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {
          var el = _step26.value;

          if (el.isClassOrSubclass('Measure')) {
            var elRendOp = el.renderOptions;
            measureWidths[elRendOp.measureIndex] = elRendOp.width;
          }
        }
        /* console.log(measureWidths);
         *
         */

      } catch (err) {
        _didIteratorError26 = true;
        _iteratorError26 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion26 && _iterator26["return"] != null) {
            _iterator26["return"]();
          }
        } finally {
          if (_didIteratorError26) {
            throw _iteratorError26;
          }
        }
      }

      return measureWidths;
    }
    /**
     * Overrides the default music21.stream.Stream#estimateStaffLength
     *
     * @returns {number}
     */

  }, {
    key: "estimateStaffLength",
    value: function estimateStaffLength() {
      if (this.renderOptions.overriddenWidth !== undefined) {
        // console.log("Overridden staff width: " + this.renderOptions.overriddenWidth);
        return this.renderOptions.overriddenWidth;
      }

      if (!this.isFlat) {
        // part with Measures underneath
        var totalLength = 0;
        var isFirst = true;
        var _iteratorNormalCompletion27 = true;
        var _didIteratorError27 = false;
        var _iteratorError27 = undefined;

        try {
          for (var _iterator27 = this.getElementsByClass('Measure')[Symbol.iterator](), _step27; !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {
            var m = _step27.value;
            // this looks wrong, but actually seems to be right. moving it to
            // after the break breaks things.
            totalLength += m.estimateStaffLength() + m.renderOptions.staffPadding;

            if (!isFirst && m.renderOptions.startNewSystem === true) {
              break;
            }

            isFirst = false;
          }
        } catch (err) {
          _didIteratorError27 = true;
          _iteratorError27 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion27 && _iterator27["return"] != null) {
              _iterator27["return"]();
            }
          } finally {
            if (_didIteratorError27) {
              throw _iteratorError27;
            }
          }
        }

        return totalLength;
      } // no measures found in part... treat as measure


      var tempM = new stream.Measure();
      tempM.elements = this;
      return tempM.estimateStaffLength();
    }
    /**
     * Divide a part up into systems and fix the measure
     * widths so that they are all even.
     *
     * Note that this is done on the part level even though
     * the measure widths need to be consistent across parts.
     *
     * This is possible because the system is deterministic and
     * will come to the same result for each part.  Opportunity
     * for making more efficient through this...
     *
     * @param {number} systemHeight
     * @returns {Array}
     */

  }, {
    key: "fixSystemInformation",
    value: function fixSystemInformation(systemHeight) {
      /*
       * console.log('system height: ' + systemHeight);
       */
      if (systemHeight === undefined) {
        systemHeight = this.systemHeight;
        /* part.show() called... */
      } else if (__WEBPACK_IMPORTED_MODULE_7__debug_js__["a" /* debug */]) {
        console.log('overridden systemHeight: ' + systemHeight);
      }

      var systemPadding = this.renderOptions.systemPadding || this.renderOptions.naiveSystemPadding;
      var measureWidths = this.getMeasureWidths();
      var maxSystemWidth = this.maxSystemWidth;
      /* of course fix! */

      var systemCurrentWidths = [];
      var systemBreakIndexes = [];
      var lastSystemBreak = 0;
      /* needed to ensure each line has at least one measure */

      var startLeft = 20;
      /* TODO: make it obtained elsewhere */

      var currentLeft = startLeft;
      var i;

      for (i = 0; i < measureWidths.length; i++) {
        var currentRight = currentLeft + measureWidths[i];
        /* console.log("left: " + currentLeft + " ; right: " + currentRight + " ; m: " + i); */

        if (currentRight > maxSystemWidth && lastSystemBreak !== i) {
          systemBreakIndexes.push(i - 1);
          systemCurrentWidths.push(currentLeft); // console.log('setting new width at ' + currentLeft);

          currentLeft = startLeft + measureWidths[i]; // 20 + this width;

          lastSystemBreak = i;
        } else {
          currentLeft = currentRight;
        }
      } // console.log(systemCurrentWidths);
      // console.log(systemBreakIndexes);


      var currentSystemIndex = 0;
      var leftSubtract = 0;
      var newLeftSubtract;

      for (i = 0; i < this.length; i++) {
        var m = this.get(i);

        if (m.renderOptions === undefined) {
          continue;
        }

        if (i === 0) {
          m.renderOptions.startNewSystem = true;
        }

        currentLeft = m.renderOptions.left;

        if (systemBreakIndexes.indexOf(i - 1) !== -1) {
          /* first measure of new System */
          var oldWidth = m.renderOptions.width;
          var oldEstimate = m.estimateStaffLength() + m.renderOptions.staffPadding;
          var offsetFromEstimate = oldWidth - oldEstimate; // we look at the offset from the current estimate to see how much
          // the staff length may have been adjusted to compensate for other
          // parts with different lengths.
          // but setting these options is bound to change something

          m.renderOptions.displayClef = true;
          m.renderOptions.displayKeySignature = true;
          m.renderOptions.startNewSystem = true; // so we get a new estimate.

          var newEstimate = m.estimateStaffLength() + m.renderOptions.staffPadding; // and adjust it for the change.

          var newWidth = newEstimate + offsetFromEstimate;
          m.renderOptions.width = newWidth;
          leftSubtract = currentLeft - 20; // after this one, we'll have a new left subtract...

          newLeftSubtract = leftSubtract - (newWidth - oldWidth);
          currentSystemIndex += 1;
        } else if (i !== 0) {
          m.renderOptions.startNewSystem = false;
          m.renderOptions.displayClef = false; // check for changed clef first?

          m.renderOptions.displayKeySignature = false; // check for changed KS first?
        }

        m.renderOptions.systemIndex = currentSystemIndex;
        var currentSystemMultiplier = void 0;

        if (currentSystemIndex >= systemCurrentWidths.length) {
          /* last system... non-justified */
          currentSystemMultiplier = 1;
        } else {
          var currentSystemWidth = systemCurrentWidths[currentSystemIndex];
          currentSystemMultiplier = maxSystemWidth / currentSystemWidth; // console.log('systemMultiplier: ' + currentSystemMultiplier + ' max: ' + maxSystemWidth + ' current: ' + currentSystemWidth);
        }
        /* might make a small gap? fix? */


        var newLeft = currentLeft - leftSubtract;

        if (newLeftSubtract !== undefined) {
          leftSubtract = newLeftSubtract;
          newLeftSubtract = undefined;
        } // console.log('M: ' + i + ' ; old left: ' + currentLeft + ' ; new Left: ' + newLeft);


        m.renderOptions.left = Math.floor(newLeft * currentSystemMultiplier);
        m.renderOptions.width = Math.floor(m.renderOptions.width * currentSystemMultiplier);
        var newTop = m.renderOptions.top + currentSystemIndex * (systemHeight + systemPadding); // console.log('M: ' + i + '; New top: ' + newTop + " ; old Top: " + m.renderOptions.top);

        m.renderOptions.top = newTop;
      }

      return systemCurrentWidths;
    }
    /**
     * overrides music21.stream.Stream#setSubstreamRenderOptions
     *
     * figures out the `.left` and `.top` attributes for all contained measures
     *
     */

  }, {
    key: "setSubstreamRenderOptions",
    value: function setSubstreamRenderOptions() {
      var currentMeasureIndex = 0;
      /* 0 indexed for now */

      var currentMeasureLeft = 20;
      var rendOp = this.renderOptions;
      var lastTimeSignature;
      var lastKeySignature;
      var lastClef;
      var _iteratorNormalCompletion28 = true;
      var _didIteratorError28 = false;
      var _iteratorError28 = undefined;

      try {
        for (var _iterator28 = this.getElementsByClass('Measure')[Symbol.iterator](), _step28; !(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done); _iteratorNormalCompletion28 = true) {
          var m = _step28.value;
          var mRendOp = m.renderOptions;
          mRendOp.measureIndex = currentMeasureIndex;
          mRendOp.top = rendOp.top;
          mRendOp.partIndex = rendOp.partIndex;
          mRendOp.left = currentMeasureLeft;

          if (currentMeasureIndex === 0) {
            lastClef = m._clef;
            lastTimeSignature = m._timeSignature;
            lastKeySignature = m._keySignature;
            mRendOp.displayClef = true;
            mRendOp.displayKeySignature = true;
            mRendOp.displayTimeSignature = true;
          } else {
            if (m._clef !== undefined && lastClef !== undefined && m._clef.name !== lastClef.name) {
              console.log('changing clefs for ', mRendOp.measureIndex, ' from ', lastClef.name, ' to ', m._clef.name);
              lastClef = m._clef;
              mRendOp.displayClef = true;
            } else {
              mRendOp.displayClef = false;
            }

            if (m._keySignature !== undefined && lastKeySignature !== undefined && m._keySignature.sharps !== lastKeySignature.sharps) {
              lastKeySignature = m._keySignature;
              mRendOp.displayKeySignature = true;
            } else {
              mRendOp.displayKeySignature = false;
            }

            if (m._timeSignature !== undefined && lastTimeSignature !== undefined && m._timeSignature.ratioString !== lastTimeSignature.ratioString) {
              lastTimeSignature = m._timeSignature;
              mRendOp.displayTimeSignature = true;
            } else {
              mRendOp.displayTimeSignature = false;
            }
          }

          mRendOp.width = m.estimateStaffLength() + mRendOp.staffPadding;
          mRendOp.height = m.estimateStreamHeight();
          currentMeasureLeft += mRendOp.width;
          currentMeasureIndex += 1;
        }
      } catch (err) {
        _didIteratorError28 = true;
        _iteratorError28 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion28 && _iterator28["return"] != null) {
            _iterator28["return"]();
          }
        } finally {
          if (_didIteratorError28) {
            throw _iteratorError28;
          }
        }
      }

      return this;
    }
    /**
     * systemIndexAndScaledY - given a scaled Y, return the systemIndex
     * and the scaledYRelativeToSystem
     *
     * @param  {number} y the scaled Y
     * @return {number[]}  systemIndex, scaledYRelativeToSystem
     */

  }, {
    key: "systemIndexAndScaledY",
    value: function systemIndexAndScaledY(y) {
      var systemPadding = this.renderOptions.systemPadding;

      if (systemPadding === undefined) {
        systemPadding = this.renderOptions.naiveSystemPadding;
      }

      var systemIndex = Math.floor(y / (this.systemHeight + systemPadding));
      var scaledYRelativeToSystem = y - systemIndex * (this.systemHeight + systemPadding);
      return [systemIndex, scaledYRelativeToSystem];
    }
    /**
     * Overrides the default music21.stream.Stream#findNoteForClick
     * by taking into account systems
     *
     * @param {Node} svg
     * @param {Event} e
     * @param {number} x
     * @param {number} y
     * @returns {Array} [clickedDiatonicNoteNum, foundNote]
     */

  }, {
    key: "findNoteForClick",
    value: function findNoteForClick(svg, e, x, y) {
      if (x === undefined || y === undefined) {
        var _this$getScaledXYforD3 = this.getScaledXYforDOM(svg, e);

        var _this$getScaledXYforD4 = _slicedToArray(_this$getScaledXYforD3, 2);

        x = _this$getScaledXYforD4[0];
        y = _this$getScaledXYforD4[1];
      } // debug = true;


      if (__WEBPACK_IMPORTED_MODULE_7__debug_js__["a" /* debug */]) {
        console.log('this.estimateStreamHeight(): ' + this.estimateStreamHeight() + ' / $(svg).height(): ' + __WEBPACK_IMPORTED_MODULE_0_jquery__(svg).height());
      } // TODO(msc) -- systemPadding was never used -- should it be?
      // let systemPadding = this.renderOptions.systemPadding;
      // if (systemPadding === undefined) {
      //     systemPadding = this.renderOptions.naiveSystemPadding;
      // }


      var _this$systemIndexAndS = this.systemIndexAndScaledY(y),
          _this$systemIndexAndS2 = _slicedToArray(_this$systemIndexAndS, 2),
          systemIndex = _this$systemIndexAndS2[0],
          scaledYRelativeToSystem = _this$systemIndexAndS2[1];

      var clickedDiatonicNoteNum = this.diatonicNoteNumFromScaledY(scaledYRelativeToSystem);
      var foundNote = this.noteElementFromScaledX(x, undefined, systemIndex);
      return [clickedDiatonicNoteNum, foundNote];
    }
    /**
     * Returns the measure that is at X location xPxScaled and system systemIndex.
     *
     * @param {number} [xPxScaled]
     * @param {number} [systemIndex]
     * @returns {music21.stream.Stream}
     *
     */

  }, {
    key: "getStreamFromScaledXandSystemIndex",
    value: function getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {
      var gotMeasure;
      var measures = this.measures;
      var _iteratorNormalCompletion29 = true;
      var _didIteratorError29 = false;
      var _iteratorError29 = undefined;

      try {
        for (var _iterator29 = measures[Symbol.iterator](), _step29; !(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done); _iteratorNormalCompletion29 = true) {
          var m = _step29.value;
          var rendOp = m.renderOptions;
          var left = rendOp.left;
          var right = left + rendOp.width;
          var top = rendOp.top;
          var bottom = top + rendOp.height;

          if (__WEBPACK_IMPORTED_MODULE_7__debug_js__["a" /* debug */]) {
            console.log('Searching for X:' + Math.round(xPxScaled) + ' in Measure ' + ' with boundaries L:' + left + ' R:' + right + ' T: ' + top + ' B: ' + bottom);
          }

          if (xPxScaled >= left && xPxScaled <= right) {
            if (systemIndex === undefined) {
              gotMeasure = m;
              break;
            } else if (rendOp.systemIndex === systemIndex) {
              gotMeasure = m;
              break;
            }
          }
        }
      } catch (err) {
        _didIteratorError29 = true;
        _iteratorError29 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion29 && _iterator29["return"] != null) {
            _iterator29["return"]();
          }
        } finally {
          if (_didIteratorError29) {
            throw _iteratorError29;
          }
        }
      }

      return gotMeasure;
    }
  }]);

  return Part;
}(Stream);
stream.Part = Part;
/**
 * Scores with multiple parts
 *
 * @class Score
 * @memberof music21.stream
 * @extends music21.stream.Stream
 */

var Score =
/*#__PURE__*/
function (_Stream4) {
  _inherits(Score, _Stream4);

  function Score() {
    var _this9;

    _classCallCheck(this, Score);

    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Score).call(this));
    _this9.recursionType = 'elementsOnly';
    _this9.measureWidths = [];
    _this9.partSpacing = _this9.renderOptions.naiveHeight;
    return _this9;
  }

  _createClass(Score, [{
    key: "getStreamFromScaledXandSystemIndex",

    /**
     * Returns the measure that is at X location xPxScaled and system systemIndex.
     *
     * Always returns the measure of the top part...
     *
     * @param {number} [xPxScaled]
     * @param {number} [systemIndex]
     * @returns {music21.stream.Stream} usually a Measure
     *
     */
    value: function getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex) {
      var parts = this.parts;
      return parts.get(0).getStreamFromScaledXandSystemIndex(xPxScaled, systemIndex);
    }
    /**
     * overrides music21.stream.Stream#setSubstreamRenderOptions
     *
     * figures out the `.left` and `.top` attributes for all contained parts
     *
     * @returns {this} this
     */

  }, {
    key: "setSubstreamRenderOptions",
    value: function setSubstreamRenderOptions() {
      var currentPartNumber = 0;
      var currentPartTop = 0;
      var partSpacing = this.partSpacing;
      var _iteratorNormalCompletion30 = true;
      var _didIteratorError30 = false;
      var _iteratorError30 = undefined;

      try {
        for (var _iterator30 = this.parts[Symbol.iterator](), _step30; !(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done); _iteratorNormalCompletion30 = true) {
          var p = _step30.value;
          p.renderOptions.partIndex = currentPartNumber;
          p.renderOptions.top = currentPartTop;
          p.setSubstreamRenderOptions();
          currentPartTop += partSpacing;
          currentPartNumber += 1;
        }
      } catch (err) {
        _didIteratorError30 = true;
        _iteratorError30 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion30 && _iterator30["return"] != null) {
            _iterator30["return"]();
          }
        } finally {
          if (_didIteratorError30) {
            throw _iteratorError30;
          }
        }
      }

      this.evenPartMeasureSpacing();
      var ignoreNumSystems = true;
      var currentScoreHeight = this.estimateStreamHeight(ignoreNumSystems);
      var _iteratorNormalCompletion31 = true;
      var _didIteratorError31 = false;
      var _iteratorError31 = undefined;

      try {
        for (var _iterator31 = this.parts[Symbol.iterator](), _step31; !(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done); _iteratorNormalCompletion31 = true) {
          var _p2 = _step31.value;

          _p2.fixSystemInformation(currentScoreHeight);
        }
      } catch (err) {
        _didIteratorError31 = true;
        _iteratorError31 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion31 && _iterator31["return"] != null) {
            _iterator31["return"]();
          }
        } finally {
          if (_didIteratorError31) {
            throw _iteratorError31;
          }
        }
      }

      this.renderOptions.height = this.estimateStreamHeight();
      return this;
    }
    /**
     * Overrides the default music21.stream.Stream#estimateStaffLength
     *
     * @returns {number}
     */

  }, {
    key: "estimateStaffLength",
    value: function estimateStaffLength() {
      // override
      if (this.renderOptions.overriddenWidth !== undefined) {
        // console.log("Overridden staff width: " + this.renderOptions.overriddenWidth);
        return this.renderOptions.overriddenWidth;
      }

      var maxWidth = -1;
      var _iteratorNormalCompletion32 = true;
      var _didIteratorError32 = false;
      var _iteratorError32 = undefined;

      try {
        for (var _iterator32 = this.parts[Symbol.iterator](), _step32; !(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done); _iteratorNormalCompletion32 = true) {
          var p = _step32.value;
          var pWidth = p.estimateStaffLength();

          if (pWidth > maxWidth) {
            maxWidth = pWidth;
          }
        }
      } catch (err) {
        _didIteratorError32 = true;
        _iteratorError32 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion32 && _iterator32["return"] != null) {
            _iterator32["return"]();
          }
        } finally {
          if (_didIteratorError32) {
            throw _iteratorError32;
          }
        }
      }

      if (maxWidth > -1) {
        return maxWidth;
      } // no parts found in score... use part...


      console.log('no parts found in score');
      var tempPart = new stream.Part();
      tempPart.elements = this;
      return tempPart.estimateStaffLength();
    }
    /* MIDI override */

    /**
     * Overrides the default music21.stream.Stream#playStream
     *
     * Works crappily -- just starts *n* midi players.
     *
     * Render scrollable score works better...
     *
     * @param {Object} params -- passed to each part
     * @returns {this}
     */

  }, {
    key: "playStream",
    value: function playStream(params) {
      // play multiple parts in parallel...
      var _iteratorNormalCompletion33 = true;
      var _didIteratorError33 = false;
      var _iteratorError33 = undefined;

      try {
        for (var _iterator33 = this[Symbol.iterator](), _step33; !(_iteratorNormalCompletion33 = (_step33 = _iterator33.next()).done); _iteratorNormalCompletion33 = true) {
          var el = _step33.value;

          if (el.isClassOrSubclass('Part')) {
            el.playStream(params);
          }
        }
      } catch (err) {
        _didIteratorError33 = true;
        _iteratorError33 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion33 && _iterator33["return"] != null) {
            _iterator33["return"]();
          }
        } finally {
          if (_didIteratorError33) {
            throw _iteratorError33;
          }
        }
      }

      return this;
    }
    /**
     * Overrides the default music21.stream.Stream#stopPlayScore()
     *
     * @returns {this}
     */

  }, {
    key: "stopPlayStream",
    value: function stopPlayStream() {
      var _iteratorNormalCompletion34 = true;
      var _didIteratorError34 = false;
      var _iteratorError34 = undefined;

      try {
        for (var _iterator34 = this[Symbol.iterator](), _step34; !(_iteratorNormalCompletion34 = (_step34 = _iterator34.next()).done); _iteratorNormalCompletion34 = true) {
          var el = _step34.value;

          if (el.isClassOrSubclass('Part')) {
            el.stopPlayStream();
          }
        }
      } catch (err) {
        _didIteratorError34 = true;
        _iteratorError34 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion34 && _iterator34["return"] != null) {
            _iterator34["return"]();
          }
        } finally {
          if (_didIteratorError34) {
            throw _iteratorError34;
          }
        }
      }

      return this;
    }
    /*
     * Svg routines
     */

    /**
     * call after setSubstreamRenderOptions
     * gets the maximum measure width for each measure
     * by getting the maximum for each measure of
     * Part.getMeasureWidths();
     *
     * Does this work? I found a bug in this and fixed it that should have
     * broken it!
     *
     * @returns Array<number>
     */

  }, {
    key: "getMaxMeasureWidths",
    value: function getMaxMeasureWidths() {
      var maxMeasureWidths = [];
      var measureWidthsArrayOfArrays = [];
      var i; // TODO: Do not crash on not partlike...

      var _iteratorNormalCompletion35 = true;
      var _didIteratorError35 = false;
      var _iteratorError35 = undefined;

      try {
        for (var _iterator35 = this.parts[Symbol.iterator](), _step35; !(_iteratorNormalCompletion35 = (_step35 = _iterator35.next()).done); _iteratorNormalCompletion35 = true) {
          var p = _step35.value;
          measureWidthsArrayOfArrays.push(p.getMeasureWidths());
        }
      } catch (err) {
        _didIteratorError35 = true;
        _iteratorError35 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion35 && _iterator35["return"] != null) {
            _iterator35["return"]();
          }
        } finally {
          if (_didIteratorError35) {
            throw _iteratorError35;
          }
        }
      }

      for (i = 0; i < measureWidthsArrayOfArrays[0].length; i++) {
        var maxFound = 0;

        for (var j = 0; j < this.length; j++) {
          if (measureWidthsArrayOfArrays[j][i] > maxFound) {
            maxFound = measureWidthsArrayOfArrays[j][i];
          }
        }

        maxMeasureWidths.push(maxFound);
      } // console.log(measureWidths);


      return maxMeasureWidths;
    }
    /**
     * systemIndexAndScaledY - given a scaled Y, return the systemIndex
     * and the scaledYRelativeToSystem
     *
     * @param  {number} y the scaled Y
     * @return Array<number>   systemIndex, scaledYRelativeToSystem
     */

  }, {
    key: "systemIndexAndScaledY",
    value: function systemIndexAndScaledY(y) {
      // TODO(msc) -- systemPadding was not being used; should it be?
      // let systemPadding = this.renderOptions.systemPadding;
      // if (systemPadding === undefined) {
      //     systemPadding = this.renderOptions.naiveSystemPadding;
      // }
      var numParts = this.parts.length;
      var systemHeight = numParts * this.partSpacing + this.systemPadding;
      var systemIndex = Math.floor(y / systemHeight);
      var scaledYRelativeToSystem = y - systemIndex * systemHeight;
      return [systemIndex, scaledYRelativeToSystem];
    }
    /**
     * Returns a list of [clickedDiatonicNoteNum, foundNote] for a
     * click event, taking into account that the note will be in different
     * Part objects (and different Systems) given the height and possibly different Systems.
     *
     * @param {Node} svg
     * @param {Event} e
     * @param {number} x
     * @param {number} y
     * @returns {Array} [diatonicNoteNum, m21Element]
     */

  }, {
    key: "findNoteForClick",
    value: function findNoteForClick(svg, e, x, y) {
      if (x === undefined || y === undefined) {
        var _this$getScaledXYforD5 = this.getScaledXYforDOM(svg, e);

        var _this$getScaledXYforD6 = _slicedToArray(_this$getScaledXYforD5, 2);

        x = _this$getScaledXYforD6[0];
        y = _this$getScaledXYforD6[1];
      }

      var _this$systemIndexAndS3 = this.systemIndexAndScaledY(y),
          _this$systemIndexAndS4 = _slicedToArray(_this$systemIndexAndS3, 2),
          systemIndex = _this$systemIndexAndS4[0],
          scaledYFromSystemTop = _this$systemIndexAndS4[1];

      var partIndex = Math.floor(scaledYFromSystemTop / this.partSpacing);
      var scaledYinPart = scaledYFromSystemTop - partIndex * this.partSpacing; // console.log('systemIndex: ' + systemIndex + " partIndex: " + partIndex);

      var rightPart = this.parts.get(partIndex);

      if (rightPart === undefined) {
        return [undefined, undefined]; // may be too low?
      }

      var clickedDiatonicNoteNum = rightPart.diatonicNoteNumFromScaledY(scaledYinPart);
      var foundNote = rightPart.noteElementFromScaledX(x, undefined, systemIndex);
      return [clickedDiatonicNoteNum, foundNote];
    }
    /**
     * How many systems are there? Calls numSystems() on the first part.
     *
     * @returns {int}
     */

  }, {
    key: "numSystems",
    value: function numSystems() {
      return this.getElementsByClass('Part').get(0).numSystems();
    }
    /**
     * Fixes the part measure spacing for all parts.
     *
     * @param {Object} options
     * @param {Boolean} [options.setLeft=true]
     * @returns {this}
     */

  }, {
    key: "evenPartMeasureSpacing",
    value: function evenPartMeasureSpacing() {
      var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref11$setLeft = _ref11.setLeft,
          setLeft = _ref11$setLeft === void 0 ? true : _ref11$setLeft;

      var measureStacks = [];
      var currentPartNumber = 0;
      var maxMeasureWidth = []; // the maximum measure width among all parts

      var j;
      var _iteratorNormalCompletion36 = true;
      var _didIteratorError36 = false;
      var _iteratorError36 = undefined;

      try {
        for (var _iterator36 = this.parts[Symbol.iterator](), _step36; !(_iteratorNormalCompletion36 = (_step36 = _iterator36.next()).done); _iteratorNormalCompletion36 = true) {
          var p = _step36.value;
          var measureWidths = p.getMeasureWidths();

          for (j = 0; j < measureWidths.length; j++) {
            var thisMeasureWidth = measureWidths[j];

            if (measureStacks[j] === undefined) {
              measureStacks[j] = [];
              maxMeasureWidth[j] = thisMeasureWidth;
            } else if (thisMeasureWidth > maxMeasureWidth[j]) {
              maxMeasureWidth[j] = thisMeasureWidth;
            }

            measureStacks[j][currentPartNumber] = thisMeasureWidth;
          }

          currentPartNumber += 1;
        }
      } catch (err) {
        _didIteratorError36 = true;
        _iteratorError36 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion36 && _iterator36["return"] != null) {
            _iterator36["return"]();
          }
        } finally {
          if (_didIteratorError36) {
            throw _iteratorError36;
          }
        }
      }

      var currentLeft = 20;

      for (var i = 0; i < maxMeasureWidth.length; i++) {
        var measureNewWidth = maxMeasureWidth[i];
        var _iteratorNormalCompletion37 = true;
        var _didIteratorError37 = false;
        var _iteratorError37 = undefined;

        try {
          for (var _iterator37 = this.parts[Symbol.iterator](), _step37; !(_iteratorNormalCompletion37 = (_step37 = _iterator37.next()).done); _iteratorNormalCompletion37 = true) {
            var part = _step37.value;
            var measure = part.getElementsByClass('Measure').get(i);
            var rendOp = measure.renderOptions;
            rendOp.width = measureNewWidth;

            if (setLeft) {
              rendOp.left = currentLeft;
            }
          }
        } catch (err) {
          _didIteratorError37 = true;
          _iteratorError37 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion37 && _iterator37["return"] != null) {
              _iterator37["return"]();
            }
          } finally {
            if (_didIteratorError37) {
              throw _iteratorError37;
            }
          }
        }

        currentLeft += measureNewWidth;
      }

      return this;
    }
  }, {
    key: "clef",
    get: function get() {
      // TODO: remove -- this is unlike m21p
      var c = _get(_getPrototypeOf(Score.prototype), "clef", this);

      if (c === undefined) {
        return new __WEBPACK_IMPORTED_MODULE_5__clef_js__["a" /* clef */].TrebleClef();
      } else {
        return c;
      }
    },
    set: function set(newClef) {
      _set(_getPrototypeOf(Score.prototype), "clef", newClef, this, true);
    }
  }, {
    key: "systemPadding",
    get: function get() {
      var numParts = this.parts.length;
      var systemPadding = this.renderOptions.systemPadding;

      if (systemPadding === undefined) {
        if (numParts === 1) {
          systemPadding = this.renderOptions.naiveSystemPadding; // fix to 0
        } else {
          systemPadding = this.renderOptions.naiveSystemPadding;
        }
      }

      return systemPadding;
    }
  }]);

  return Score;
}(Stream);
stream.Score = Score; // small Class; a namedtuple in music21p

var OffsetMap = function OffsetMap(element, offset, endTime, voiceIndex) {
  _classCallCheck(this, OffsetMap);

  this.element = element;
  this.offset = offset;
  this.endTime = endTime;
  this.voiceIndex = voiceIndex;
};
stream.OffsetMap = OffsetMap;

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return beam; });
/* unused harmony export Beam */
/* unused harmony export Beams */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__duration_js__ = __webpack_require__(6);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/beam -- Beams and Beam class
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab
 *
 */



/**
 * Module holding beam materials. See {@link music21.beam} namespace.
 *
 * @exports music21/beam
 */

/**
 * {@link music21.beam.Beam} and {music21.beam.Beams} objects
 *
 * @namespace music21.beam
 * @memberof music21
 * @requires music21/prebase
 * @requires music21/duration
 */

var beam = {};
beam.validBeamTypes = {
  start: true,
  stop: true,
  "continue": true,
  partial: true
};
beam.beamableDurationTypes = [__WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[8], __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[16], __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[32], __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[64], __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[128], __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[256]];
/**
 * Object representing a single beam (e.g., a 16th note that is beamed needs two)
 *
 * @class Beam
 * @memberof music21.beam
 * @extends music21.prebase.ProtoM21Object
 * @param {string} type - "start", "stop", "continue", "partial"
 * @param {string} direction - only needed for partial beams: "left" or "right"
 * @property {int|undefined} number - which beam line does this refer to; 8th = 1, 16th = 2, etc.
 * @property {number|undefined} independentAngle - the angle of this beam if it is different than others (feathered beams)
 */

var Beam =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Beam, _prebase$ProtoM21Obje);

  function Beam(type, direction) {
    var _this;

    _classCallCheck(this, Beam);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Beam).call(this));
    _this.type = type;
    _this.direction = direction;
    _this.independentAngle = undefined;
    _this.number = undefined;
    return _this;
  }

  return Beam;
}(__WEBPACK_IMPORTED_MODULE_1__prebase_js__["a" /* prebase */].ProtoM21Object);
beam.Beam = Beam;
/**
 * Object representing a collection of Beams
 *
 * @class Beams
 * @memberof music21.beam
 * @extends music21.prebase.ProtoM21Object
 * @property {Array<music21.beam.Beam>} beamsList - a list of Beam objects
 * @property {Boolean} [feathered=false] - is this a feathered beam.
 * @property {int} length - length of beamsList
 */

var Beams =
/*#__PURE__*/
function (_prebase$ProtoM21Obje2) {
  _inherits(Beams, _prebase$ProtoM21Obje2);

  _createClass(Beams, null, [{
    key: "naiveBeams",
    value: function naiveBeams(srcList) {
      var beamsList = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = srcList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var el = _step.value;

          if (!beam.beamableDurationTypes.includes(el.duration.type)) {
            beamsList.push(undefined);
          } else if (el.isRest) {
            beamsList.push(undefined);
          } else {
            var b = new beam.Beams();
            b.fill(el.duration.type);
            beamsList.push(b);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return beamsList;
    }
  }, {
    key: "removeSandwichedUnbeamables",
    value: function removeSandwichedUnbeamables(beamsList) {
      var beamLast;
      var beamNext;

      for (var i = 0; i < beamsList.length; i++) {
        if (i !== beamsList.length - 1) {
          beamNext = beamsList[i + 1];
        } else {
          beamNext = undefined;
        }

        if (beamLast === undefined && beamNext === undefined) {
          beamsList[i] = undefined;
        }

        beamLast = beamsList[i];
      }

      return beamsList;
    }
  }, {
    key: "sanitizePartialBeams",
    value: function sanitizePartialBeams(beamsList) {
      for (var i = 0; i < beamsList.length; i++) {
        if (beamsList[i] === undefined) {
          continue;
        }

        var allTypes = beamsList[i].getTypes();

        if (!allTypes.includes('start') && !allTypes.includes('stop') && !allTypes.includes('continue')) {
          // nothing but partials;
          beamsList[i] = undefined;
          continue;
        }

        var hasStart = false;
        var hasStop = false;
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = beamsList[i].beamsList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var b = _step2.value;

            if (b.type === 'start') {
              hasStart = true;
              continue;
            }

            if (b.type === 'stop') {
              hasStop = true;
              continue;
            }

            if (hasStart && b.type === 'partial' && b.direction === 'left') {
              b.direction = 'right';
            } else if (hasStop && b.type === 'partial' && b.direction === 'right') {
              b.direction = 'left';
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
              _iterator2["return"]();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }

      return beamsList;
    }
  }, {
    key: "mergeConnectingPartialBeams",
    value: function mergeConnectingPartialBeams(beamsList) {
      for (var i = 0; i < beamsList.length - 1; i++) {
        var bThis = beamsList[i];
        var bNext = beamsList[i + 1];

        if (!bThis || !bNext) {
          continue;
        }

        var bThisNum = bThis.getNumbers();

        if (!bThisNum || bThisNum.length === 0) {
          continue;
        }

        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = bThisNum[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var thisNum = _step3.value;
            var thisBeam = bThis.getByNumber(thisNum);

            if (thisBeam.type !== 'partial' || thisBeam.direction !== 'right') {
              continue;
            }

            if (!bNext.getNumbers().includes(thisNum)) {
              continue;
            }

            var nextBeam = bNext.getByNumber(thisNum);

            if (nextBeam.type === 'partial' || nextBeam.direction === 'right') {
              continue;
            }

            if (nextBeam.type === 'continue' || nextBeam.type === 'stop') {
              // should not happen.
              continue;
            }

            thisBeam.type = 'start';
            thisBeam.direction = undefined;

            if (nextBeam.type === 'partial') {
              nextBeam.type = 'stop';
            } else if (nextBeam.type === 'start') {
              nextBeam.type = 'continue';
            }

            nextBeam.direction = undefined;
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
              _iterator3["return"]();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      } // now fix partial-lefts that follow stops:


      for (var _i = 1; _i < beamsList.length; _i++) {
        var _bThis = beamsList[_i];
        var bPrev = beamsList[_i - 1];

        if (!_bThis || !bPrev) {
          continue;
        }

        var _bThisNum = _bThis.getNumbers();

        if (!_bThisNum || _bThisNum.length === 0) {
          continue;
        }

        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = _bThisNum[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var _thisNum = _step4.value;

            var _thisBeam = _bThis.getByNumber(_thisNum);

            if (_thisBeam.type !== 'partial' || _thisBeam.direction !== 'left') {
              continue;
            }

            if (!bPrev.getNumbers().includes(_thisNum)) {
              continue;
            }

            var prevBeam = bPrev.getByNumber(_thisNum);

            if (prevBeam.type !== 'stop') {
              continue;
            }

            _thisBeam.type = 'stop';
            _thisBeam.direction = undefined;
            prevBeam.type = 'continue';
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
              _iterator4["return"]();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }
      }

      return beamsList;
    }
  }]);

  function Beams() {
    var _this2;

    _classCallCheck(this, Beams);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Beams).call(this));
    _this2.beamsList = [];
    _this2.feathered = false;
    return _this2;
  }

  _createClass(Beams, [{
    key: "append",

    /**
     * Append a new {@link music21.beam.Beam} object to this Beams, automatically creating the Beam
     *   object and incrementing the number count.
     *
     * @param {string} type - the type (passed to {@link music21.beam.Beam})
     * @param {string} [direction=undefined] - the direction if type is "partial"
     * @returns {music21.beam.Beam} newly appended object
     */
    value: function append(type, direction) {
      var obj = new beam.Beam(type, direction);
      obj.number = this.beamsList.length + 1;
      this.beamsList.push(obj);
      return obj;
    }
    /**
     * A quick way of setting the beams list for a particular duration, for
            instance, fill("16th") will clear the current list of beams in the
            Beams object and add two beams.  fill(2) will do the same (though note
            that that is an int, not a string).
      * It does not do anything to the direction that the beams are going in,
            or by default.  Either set type here or call setAll() on the Beams
            object afterwards.
      * Both "eighth" and "8th" work.  Adding more than six beams (i.e. things
            like 512th notes) raises an error.
      * @param {string|int} level - either a string like "eighth" or a number like 1 (="eighth")
     * @param {string} type - type to fill all beams to.
     * @returns {this}
     */

  }, {
    key: "fill",
    value: function fill(level, type) {
      this.beamsList = [];
      var count = 1;

      if (level === 1 || level === '8th' || level === __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[8]) {
        count = 1;
      } else if (level === 2 || level === __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[16]) {
        count = 2;
      } else if (level === 3 || level === __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[32]) {
        count = 3;
      } else if (level === 4 || level === __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[64]) {
        count = 4;
      } else if (level === 5 || level === __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[128]) {
        count = 5;
      } else if (level === 6 || level === __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].typeFromNumDict[256]) {
        count = 6;
      } else {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('cannot fill beams for level ' + level);
      }

      for (var i = 1; i <= count; i++) {
        var obj = new beam.Beam();
        obj.number = i;
        this.beamsList.push(obj);
      }

      if (type !== undefined) {
        this.setAll(type);
      }

      return this;
    }
    /**
     * Get the beam with the given number or throw an exception.
     *
     * @param {int} number - the beam number to retrieve (usually one less than the position in `.beamsList`)
     * @returns {music21.beam.Beam|undefined}
     */

  }, {
    key: "getByNumber",
    value: function getByNumber(number) {
      if (!this.getNumbers().includes(number)) {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('beam number error: ' + number);
      }

      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = this.beamsList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var thisBeam = _step5.value;

          if (thisBeam.number === number) {
            return thisBeam;
          }
        }
      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
            _iterator5["return"]();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }

      return undefined;
    }
    /**
     * Get an Array of all the numbers for the beams
     *
     * @returns {Array<int>} all the numbers
     */

  }, {
    key: "getNumbers",
    value: function getNumbers() {
      var numbers = [];
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = this.beamsList[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var thisBeam = _step6.value;
          numbers.push(thisBeam.number);
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
            _iterator6["return"]();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }

      return numbers;
    }
    /**
     * Returns the type + "-" + direction (if direction is defined)
     * for the beam with the given number.
     *
     * @param {int} number
     * @returns {music21.beam.Beam|undefined}
     */

  }, {
    key: "getTypeByNumber",
    value: function getTypeByNumber(number) {
      var beamObj = this.getByNumber(number);

      if (beamObj.direction === undefined) {
        return beamObj.type;
      } else {
        var x = beamObj.type + '-' + beamObj.direction;
        return x;
      }
    }
    /**
     * Get an Array of all the types for the beams
     *
     * @returns {Array<string>} all the types
     */

  }, {
    key: "getTypes",
    value: function getTypes() {
      var types = [];

      for (var i = 0; i < this.length; i++) {
        types.push(this.beamsList[i].type);
      }

      return types;
    }
    /**
     * Set all the {@link music21.beam.Beam} objects to a given type/direction
     *
     * @param {string} type - beam type
     * @param {string} [direction] - beam direction
     * @returns {this}
     */

  }, {
    key: "setAll",
    value: function setAll(type, direction) {
      if (beam.validBeamTypes[type] === undefined) {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('invalid beam type: ' + type);
      }

      for (var i = 0; i < this.length; i++) {
        var b = this.beamsList[i];
        b.type = type;
        b.direction = direction;
      }

      return this;
    }
    /**
     * Set the {@link music21.beam.Beam} object specified by `number` to a given type/direction
     *
     * @param {int} number
     * @param {string} type
     * @param {string} [direction]
     * @returns {this}
     */

  }, {
    key: "setByNumber",
    value: function setByNumber(number, type, direction) {
      if (direction === undefined) {
        var splitit = type.split('-');
        type = splitit[0];
        direction = splitit[1]; // can be undefined...
      }

      if (beam.validBeamTypes[type] === undefined) {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]('invalid beam type: ' + type);
      }

      for (var i = 0; i < this.length; i++) {
        if (this.beamsList[i].number === number) {
          this.beamsList[i].type = type;
          this.beamsList[i].direction = direction;
        }
      }

      return this;
    }
  }, {
    key: "length",
    get: function get() {
      return this.beamsList.length;
    }
  }]);

  return Beams;
}(__WEBPACK_IMPORTED_MODULE_1__prebase_js__["a" /* prebase */].ProtoM21Object);
beam.Beams = Beams;

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return meter; });
/* unused harmony export TimeSignature */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vexflow__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__beam_js__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__duration_js__ = __webpack_require__(6);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/meter -- TimeSignature objects
 *
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */





/**
 * meter module. See {@link music21.meter} namespace for details.
 *
 * @exports music21/meter
 */

/**
 * Meter and TimeSignature Classes (esp. {@link music21.meter.TimeSignature} ) and methods.
 *
 * @namespace music21.meter
 * @memberof music21
 * @requires music21/base
 * @requires music21/duration
 */

var meter = {};
/**
 * A MUCH simpler version of the music21p TimeSignature object.
 *
 * @class TimeSignature
 * @memberof music21.meter
 * @param {string} meterString - a string ("4/4", "3/8" etc.) to initialize the TimeSignature.
 * @property {int} [numerator=4]
 * @property {int} [denominator=4]
 * @property {Array<Array<int>>} beatGroups - groupings of beats; inner arrays are numerator, denominator
 * @property {string} ratioString - a string like "4/4"
 * @property {music21.duration.Duration} barDuration - a Duration object representing the expressed total length of the TimeSignature.
 */

var TimeSignature =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(TimeSignature, _base$Music21Object);

  function TimeSignature(meterString) {
    var _this;

    _classCallCheck(this, TimeSignature);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeSignature).call(this));
    _this.classSortOrder = 4;
    _this._numerator = 4;
    _this._denominator = 4;
    _this._beatGroups = [];
    _this._overwrittenBeatCount = undefined;
    _this._overwrittenBeatDuration = undefined;

    if (typeof meterString === 'string') {
      _this.ratioString = meterString;
    }

    return _this;
  }

  _createClass(TimeSignature, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.ratioString;
    }
  }, {
    key: "computeBeatGroups",

    /**
     * Compute the Beat Group according to this time signature.
     *
     * @returns {Array<Array<int>>} a list of numerator and denominators, find a list of beat groups.
     */
    value: function computeBeatGroups() {
      var tempBeatGroups = [];
      var numBeats = this.numerator;
      var beatValue = this.denominator;

      if (beatValue < 8 && numBeats >= 5) {
        var beatsToEighthNoteRatio = 8 / beatValue; // hopefully Int -- right Brian Ferneyhough?

        beatValue = 8;
        numBeats *= beatsToEighthNoteRatio;
      }

      if (beatValue >= 8) {
        while (numBeats >= 5) {
          tempBeatGroups.push([3, beatValue]);
          numBeats -= 3;
        }

        if (numBeats === 4) {
          tempBeatGroups.push([2, beatValue]);
          tempBeatGroups.push([2, beatValue]);
        } else if (numBeats > 0) {
          tempBeatGroups.push([numBeats, beatValue]);
        }
      } else if (beatValue === 2) {
        tempBeatGroups.push([1, 2]);
      } else if (beatValue <= 1) {
        tempBeatGroups.push([1, 1]);
      } else {
        // 4/4, 2/4, 3/4, standard stuff
        tempBeatGroups.push([2, 8]);
      }

      return tempBeatGroups;
    }
    /**
     * Return a span of [start, end] for the current beat/beam grouping
     */

  }, {
    key: "offsetToSpan",
    value: function offsetToSpan(offset) {
      var beatDuration = this.beatDuration.quarterLength;
      var beatsFromStart = Math.floor(offset / beatDuration);
      var start = beatsFromStart * beatDuration;
      var end = start + beatDuration;
      return [start, end];
    }
    /**
     * @param {Iterable} srcStream - a stream of elements.
     * @param {Object} options - an object with measureStartOffset
     */

  }, {
    key: "getBeams",
    value: function getBeams(srcStream, options) {
      var _this2 = this;

      var params = {
        measureStartOffset: 0.0
      };
      __WEBPACK_IMPORTED_MODULE_3__common_js__["a" /* common */].merge(params, options);
      var measureStartOffset = params.measureStartOffset;
      var beamsList = __WEBPACK_IMPORTED_MODULE_2__beam_js__["a" /* beam */].Beams.naiveBeams(srcStream);
      beamsList = __WEBPACK_IMPORTED_MODULE_2__beam_js__["a" /* beam */].Beams.removeSandwichedUnbeamables(beamsList);

      var fixBeamsOneElementDepth = function fixBeamsOneElementDepth(i, el, depth) {
        var beams = beamsList[i];

        if (!beams || beams === undefined) {
          return;
        }

        var beamNumber = depth + 1;

        if (!beams.getNumbers().includes(beamNumber)) {
          return;
        }

        var dur = el.duration;
        var pos = el.offset + measureStartOffset;
        var start = pos; // opFrac

        var end = pos + dur.quarterLength; // opFrac;

        var startNext = end;
        var isLast = i === srcStream.length - 1;
        var isFirst = i === 0;
        var beamNext;
        var beamPrevious;

        if (!isFirst) {
          beamPrevious = beamsList[i - 1];
        }

        if (!isLast) {
          beamNext = beamsList[i + 1];
        }

        var _this2$offsetToSpan = _this2.offsetToSpan(start),
            _this2$offsetToSpan2 = _slicedToArray(_this2$offsetToSpan, 2),
            archetypeSpanStart = _this2$offsetToSpan2[0],
            archetypeSpanEnd = _this2$offsetToSpan2[1];

        var archetypeSpanNextStart = 0.0;

        if (beamNext !== undefined) {
          archetypeSpanNextStart = _this2.offsetToSpan(startNext)[0];
        }

        if (start === archetypeSpanStart && end === archetypeSpanEnd) {
          beamsList[i] = undefined;
          return;
        }

        var beamType;

        if (isFirst) {
          beamType = 'start';

          if (beamNext === undefined || !beamNext.getNumbers().includes(beamNumber)) {
            beamType = 'partial-right';
          }
        } else if (isLast) {
          beamType = 'start';

          if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {
            beamType = 'partial-left';
          }
        } else if (beamPrevious === undefined || !beamPrevious.getNumbers().includes(beamNumber)) {
          if (beamNumber === 1 && beamNext === undefined) {
            beamsList[i] = undefined;
            return;
          } else if (beamNext === undefined && beamNumber > 1) {
            beamType = 'partial-left';
          } else if (startNext >= archetypeSpanEnd) {
            beamType = 'partial-left';
          } else if (beamNext === undefined || !beamNext.getNumbers().includes(beamNumber)) {
            beamType = 'partial-right';
          } else {
            beamType = 'start';
          }
        } else if (beamPrevious !== undefined && beamPrevious.getNumbers().includes(beamNumber) && ['stop', 'partial-left'].includes(beamPrevious.getTypeByNumber(beamNumber))) {
          if (beamNext !== undefined) {
            beamType = 'start';
          } else {
            beamType = 'partial-left';
          }
        } else if (beamNext === undefined || !beamNext.getNumbers().includes(beamNumber)) {
          beamType = 'stop';
        } else if (startNext < archetypeSpanEnd) {
          beamType = 'continue';
        } else if (startNext >= archetypeSpanNextStart) {
          beamType = 'stop';
        } else {
          console.warn('Cannot match beamType');
          return;
        }

        beams.setByNumber(beamNumber, beamType);
      };

      for (var depth = 0; depth < __WEBPACK_IMPORTED_MODULE_2__beam_js__["a" /* beam */].beamableDurationTypes.length; depth++) {
        var i = 0;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = srcStream[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var el = _step.value;
            fixBeamsOneElementDepth(i, el, depth);
            i += 1;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator["return"] != null) {
              _iterator["return"]();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      beamsList = __WEBPACK_IMPORTED_MODULE_2__beam_js__["a" /* beam */].Beams.sanitizePartialBeams(beamsList);
      beamsList = __WEBPACK_IMPORTED_MODULE_2__beam_js__["a" /* beam */].Beams.mergeConnectingPartialBeams(beamsList);
      return beamsList;
    }
    /**
     * Compute the Beat Group according to this time signature for VexFlow. For beaming.
     *
     * @param {Vex} Vex - a reference to the Vex object
     * @returns {Array<Vex.Flow.Fraction>} a list of numerator and denominator groups, for VexFlow
     */

  }, {
    key: "vexflowBeatGroups",
    value: function vexflowBeatGroups() {
      var tempBeatGroups = this.beatGroups; // console.log(tempBeatGroups);

      var vfBeatGroups = [];

      for (var i = 0; i < tempBeatGroups.length; i++) {
        var bg = tempBeatGroups[i];
        vfBeatGroups.push(new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Fraction(bg[0], bg[1]));
      }

      return vfBeatGroups; //  if (numBeats % 3 == 0 && beatValue < 4) {
      //  // 6/8, 3/8, 9/8, etc.
      //  numBeats = numBeats / 3;
      //  beatValue = beatValue / 3;
      //  }
    }
  }, {
    key: "numerator",
    get: function get() {
      return this._numerator;
    },
    set: function set(s) {
      this._numerator = s;
    }
  }, {
    key: "denominator",
    get: function get() {
      return this._denominator;
    },
    set: function set(s) {
      this._denominator = s;
    }
  }, {
    key: "ratioString",
    get: function get() {
      return this.numerator.toString() + '/' + this.denominator.toString();
    },
    set: function set(meterString) {
      var meterList = meterString.split('/');
      this.numerator = parseInt(meterList[0]);
      this.denominator = parseInt(meterList[1]);
      this._beatGroups = [];
    }
  }, {
    key: "barDuration",
    get: function get() {
      var ql = 4.0 * this._numerator / this._denominator;
      return new __WEBPACK_IMPORTED_MODULE_4__duration_js__["a" /* duration */].Duration(ql);
    }
  }, {
    key: "beatGroups",
    get: function get() {
      if (this._beatGroups.length === 0) {
        this._beatGroups = this.computeBeatGroups();
      }

      return this._beatGroups;
    },
    set: function set(newGroups) {
      this._beatGroups = newGroups;
    }
    /**
     *  Get the beatCount from the numerator, assuming fast 6/8, etc.
     *  unless .beatCount has been set manually.
     */

  }, {
    key: "beatCount",
    get: function get() {
      if (this._overwrittenBeatCount !== undefined) {
        return this._overwrittenBeatCount;
      }

      if (this.numerator > 3 && this.numerator % 3 === 0) {
        return this.numerator / 3;
      } else {
        return this.numerator;
      }
    }
    /**
     *  Manually set the beatCount to an int.
     */
    ,
    set: function set(overwrite) {
      this._overwrittenBeatCount = overwrite;
      return overwrite;
    }
    /**
     * Gets a single duration.Duration object representing
     * the length of a beat in this time signature (using beatCount)
     * or, if set manually, it can return a list of Durations For
     * asymmetrical meters.
     */

  }, {
    key: "beatDuration",
    get: function get() {
      var dur = this.barDuration;
      dur.quarterLength /= this.beatCount;
      return dur;
    }
    /**
     * Set beatDuration to a duration.Duration object or
     * if the client can handle it, a list of Duration objects...
     */
    ,
    set: function set(overwrite) {
      this._overwrittenBeatDuration = overwrite;
    }
  }]);

  return TimeSignature;
}(__WEBPACK_IMPORTED_MODULE_1__base_js__["a" /* base */].Music21Object);
meter.TimeSignature = TimeSignature;

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return instrument; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_js__ = __webpack_require__(2);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/instrument -- instrument objects
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab
 *
 */

/**
 * Instrument module, see {@link music21.instrument}
 *
 * @exports music21/instrument
 */

/**
 * Looking for the {@link music21.instrument.Instrument} object? :-)
 *
 * @namespace music21.instrument
 * @memberof music21
 * @requires music21/base
 */

var instrument = {};
/**
 * Represents an instrument.  instrumentNames are found in the ext/soundfonts directory
 *
 * See {@link music21.miditools} and esp. `loadSoundfont` for a way of loading soundfonts into
 * instruments.
 *
 * @class Instrument
 * @memberof music21.instrument
 * @param {string} instrumentName
 * @property {string|undefined} partId
 * @property {string|undefined} partName
 * @property {string|undefined} partAbbreviation
 * @property {string|undefined} instrumentId
 * @property {string|undefined} instrumentName
 * @property {string|undefined} instrumentAbbreviation
 * @property {int|undefined} midiProgram
 * @property {int|undefined} midiChannel
 * @property {int|undefined} lowestNote
 * @property {int|undefined} highestNote
 * @property {music21.interval.Interval|undefined} transposition
 * @property {Boolean} inGMPercMap=false
 * @property {string|undefined} soundfontFn
 * @property {string|undefined} oggSoundfont - url of oggSoundfont for this instrument
 * @property {string|undefined} mp3Soundfont - url of mp3Soundfont for this instrument
 */

var Instrument =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Instrument, _base$Music21Object);

  function Instrument(instrumentName) {
    var _this;

    _classCallCheck(this, Instrument);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Instrument).call(this));
    _this.classSortOrder = -25;
    _this.partId = undefined;
    _this.partName = undefined;
    _this.partAbbreviation = undefined;
    _this.instrumentId = undefined;
    _this.instrumentName = instrumentName;
    _this.instrumentAbbreviation = undefined;
    _this.midiProgram = undefined;
    _this._midiChannel = undefined;
    _this.lowestNote = undefined;
    _this.highestNote = undefined;
    _this.transpostion = undefined;
    _this.inGMPercMap = false;
    _this.soundfontFn = undefined;

    if (instrumentName !== undefined) {
      instrument.find(instrumentName, _assertThisInitialized(_this));
    }

    return _this;
  }
  /**
   * Assign an instrument to an unused midi channel.
   *
   * Will use the global list of used channels (`music21.instrument.Instrument.usedChannels`)
   * if not given.  Assigns up to `music21.instrument.maxMidi` channels (16)
   * Skips 10 unless this.inGMPercMap is true
   *
   * @param {int[]} [usedChannels]
   * @returns {number|undefined}
   */


  _createClass(Instrument, [{
    key: "autoAssignMidiChannel",
    value: function autoAssignMidiChannel(usedChannels) {
      if (usedChannels === undefined) {
        usedChannels = instrument.usedChannels;
      }

      var startChannel = 0;

      if (this.inGMPercMap) {
        startChannel = 10;
      }

      for (var ch = startChannel; ch < instrument.maxMidi; ch++) {
        if (ch % 16 === 10 && this.inGMPercMap !== true) {
          continue; // skip 10 / percussion.
        }

        if (usedChannels[ch] === undefined || usedChannels[ch] === this.midiProgram) {
          usedChannels[ch] = this.midiProgram;
          this.midiChannel = ch;
          return ch;
        }
      } // TODO: no channels! throw exception!


      return undefined;
    }
  }, {
    key: "oggSoundfont",
    get: function get() {
      return this.soundfontFn + '-ogg.js';
    }
  }, {
    key: "mp3Soundfont",
    get: function get() {
      return this.soundfontFn + '-mp3.js';
    }
  }, {
    key: "midiChannel",
    get: function get() {
      if (this._midiChannel === undefined) {
        this.autoAssignMidiChannel();
      }

      return this._midiChannel;
    },
    set: function set(ch) {
      this._midiChannel = ch;
    }
  }]);

  return Instrument;
}(__WEBPACK_IMPORTED_MODULE_0__base_js__["a" /* base */].Music21Object);

instrument.Instrument = Instrument;
instrument.usedChannels = []; // differs from m21p -- stored midiProgram numbers

instrument.maxMidi = 16;
instrument.info = [{
  fn: 'acoustic_grand_piano',
  name: 'Acoustic Grand Piano',
  midiNumber: 0
}, {
  fn: 'bright_acoustic_piano',
  name: 'Bright Acoustic Piano',
  midiNumber: 1
}, {
  fn: 'electric_grand_piano',
  name: 'Electric Grand Piano',
  midiNumber: 2
}, {
  fn: 'honkytonk_piano',
  name: 'Honky-tonk Piano',
  midiNumber: 3
}, {
  fn: 'electric_piano_1',
  name: 'Electric Piano 1',
  midiNumber: 4
}, {
  fn: 'electric_piano_2',
  name: 'Electric Piano 2',
  midiNumber: 5
}, {
  fn: 'harpsichord',
  name: 'Harpsichord',
  midiNumber: 6
}, {
  fn: 'clavinet',
  name: 'Clavinet',
  midiNumber: 7
}, {
  fn: 'celesta',
  name: 'Celesta',
  midiNumber: 8
}, {
  fn: 'glockenspiel',
  name: 'Glockenspiel',
  midiNumber: 9
}, {
  fn: 'music_box',
  name: 'Music Box',
  midiNumber: 10
}, {
  fn: 'vibraphone',
  name: 'Vibraphone',
  midiNumber: 11
}, {
  fn: 'marimba',
  name: 'Marimba',
  midiNumber: 12
}, {
  fn: 'xylophone',
  name: 'Xylophone',
  midiNumber: 13
}, {
  fn: 'tubular_bells',
  name: 'Tubular Bells',
  midiNumber: 14
}, {
  fn: 'dulcimer',
  name: 'Dulcimer',
  midiNumber: 15
}, {
  fn: 'drawbar_organ',
  name: 'Drawbar Organ',
  midiNumber: 16
}, {
  fn: 'percussive_organ',
  name: 'Percussive Organ',
  midiNumber: 17
}, {
  fn: 'rock_organ',
  name: 'Rock Organ',
  midiNumber: 18
}, {
  fn: 'church_organ',
  name: 'Church Organ',
  midiNumber: 19
}, {
  fn: 'reed_organ',
  name: 'Reed Organ',
  midiNumber: 20
}, {
  fn: 'accordion',
  name: 'Accordion',
  midiNumber: 21
}, {
  fn: 'harmonica',
  name: 'Harmonica',
  midiNumber: 22
}, {
  fn: 'tango_accordion',
  name: 'Tango Accordion',
  midiNumber: 23
}, {
  fn: 'acoustic_guitar_nylon',
  name: 'Acoustic Guitar (nylon)',
  midiNumber: 24
}, {
  fn: 'acoustic_guitar_steel',
  name: 'Acoustic Guitar (steel)',
  midiNumber: 25
}, {
  fn: 'electric_guitar_jazz',
  name: 'Electric Guitar (jazz)',
  midiNumber: 26
}, {
  fn: 'electric_guitar_clean',
  name: 'Electric Guitar (clean)',
  midiNumber: 27
}, {
  fn: 'electric_guitar_muted',
  name: 'Electric Guitar (muted)',
  midiNumber: 28
}, {
  fn: 'overdriven_guitar',
  name: 'Overdriven Guitar',
  midiNumber: 29
}, {
  fn: 'distortion_guitar',
  name: 'Distortion Guitar',
  midiNumber: 30
}, {
  fn: 'guitar_harmonics',
  name: 'Guitar Harmonics',
  midiNumber: 31
}, {
  fn: 'acoustic_bass',
  name: 'Acoustic Bass',
  midiNumber: 32
}, {
  fn: 'electric_bass_finger',
  name: 'Electric Bass (finger)',
  midiNumber: 33
}, {
  fn: 'electric_bass_pick',
  name: 'Electric Bass (pick)',
  midiNumber: 34
}, {
  fn: 'fretless_bass',
  name: 'Fretless Bass',
  midiNumber: 35
}, {
  fn: 'slap_bass_1',
  name: 'Slap Bass 1',
  midiNumber: 36
}, {
  fn: 'slap_bass_2',
  name: 'Slap Bass 2',
  midiNumber: 37
}, {
  fn: 'synth_bass_1',
  name: 'Synth Bass 1',
  midiNumber: 38
}, {
  fn: 'synth_bass_2',
  name: 'Synth Bass 2',
  midiNumber: 39
}, {
  fn: 'violin',
  name: 'Violin',
  midiNumber: 40
}, {
  fn: 'viola',
  name: 'Viola',
  midiNumber: 41
}, {
  fn: 'cello',
  name: 'Cello',
  midiNumber: 42
}, {
  fn: 'contrabass',
  name: 'Contrabass',
  midiNumber: 43
}, {
  fn: 'tremolo_strings',
  name: 'Tremolo Strings',
  midiNumber: 44
}, {
  fn: 'pizzicato_strings',
  name: 'Pizzicato Strings',
  midiNumber: 45
}, {
  fn: 'orchestral_harp',
  name: 'Orchestral Harp',
  midiNumber: 46
}, {
  fn: 'timpani',
  name: 'Timpani',
  midiNumber: 47
}, {
  fn: 'string_ensemble_1',
  name: 'String Ensemble 1',
  midiNumber: 48
}, {
  fn: 'string_ensemble_2',
  name: 'String Ensemble 2',
  midiNumber: 49
}, {
  fn: 'synth_strings_1',
  name: 'Synth Strings 1',
  midiNumber: 50
}, {
  fn: 'synth_strings_2',
  name: 'Synth Strings 2',
  midiNumber: 51
}, {
  fn: 'choir_aahs',
  name: 'Choir Aahs',
  midiNumber: 52
}, {
  fn: 'voice_oohs',
  name: 'Voice Oohs',
  midiNumber: 53
}, {
  fn: 'synth_choir',
  name: 'Synth Choir',
  midiNumber: 54
}, {
  fn: 'orchestra_hit',
  name: 'Orchestra Hit',
  midiNumber: 55
}, {
  fn: 'trumpet',
  name: 'Trumpet',
  midiNumber: 56
}, {
  fn: 'trombone',
  name: 'Trombone',
  midiNumber: 57
}, {
  fn: 'tuba',
  name: 'Tuba',
  midiNumber: 58
}, {
  fn: 'muted_trumpet',
  name: 'Muted Trumpet',
  midiNumber: 59
}, {
  fn: 'french_horn',
  name: 'French Horn',
  midiNumber: 60
}, {
  fn: 'brass_section',
  name: 'Brass Section',
  midiNumber: 61
}, {
  fn: 'synth_brass_1',
  name: 'Synth Brass 1',
  midiNumber: 62
}, {
  fn: 'synth_brass_2',
  name: 'Synth Brass 2',
  midiNumber: 63
}, {
  fn: 'soprano_sax',
  name: 'Soprano Sax',
  midiNumber: 64
}, {
  fn: 'alto_sax',
  name: 'Alto Sax',
  midiNumber: 65
}, {
  fn: 'tenor_sax',
  name: 'Tenor Sax',
  midiNumber: 66
}, {
  fn: 'baritone_sax',
  name: 'Baritone Sax',
  midiNumber: 67
}, {
  fn: 'oboe',
  name: 'Oboe',
  midiNumber: 68
}, {
  fn: 'english_horn',
  name: 'English Horn',
  midiNumber: 69
}, {
  fn: 'bassoon',
  name: 'Bassoon',
  midiNumber: 70
}, {
  fn: 'clarinet',
  name: 'Clarinet',
  midiNumber: 71
}, {
  fn: 'piccolo',
  name: 'Piccolo',
  midiNumber: 72
}, {
  fn: 'flute',
  name: 'Flute',
  midiNumber: 73
}, {
  fn: 'recorder',
  name: 'Recorder',
  midiNumber: 74
}, {
  fn: 'pan_flute',
  name: 'Pan Flute',
  midiNumber: 75
}, {
  fn: 'blown_bottle',
  name: 'Blown bottle',
  midiNumber: 76
}, {
  fn: 'shakuhachi',
  name: 'Shakuhachi',
  midiNumber: 77
}, {
  fn: 'whistle',
  name: 'Whistle',
  midiNumber: 78
}, {
  fn: 'ocarina',
  name: 'Ocarina',
  midiNumber: 79
}, {
  fn: 'lead_1_square',
  name: 'Lead 1 (square)',
  midiNumber: 80
}, {
  fn: 'lead_2_sawtooth',
  name: 'Lead 2 (sawtooth)',
  midiNumber: 81
}, {
  fn: 'lead_3_calliope',
  name: 'Lead 3 (calliope)',
  midiNumber: 82
}, {
  fn: 'lead_4_chiff',
  name: 'Lead 4 chiff',
  midiNumber: 83
}, {
  fn: 'lead_5_charang',
  name: 'Lead 5 (charang)',
  midiNumber: 84
}, {
  fn: 'lead_6_voice',
  name: 'Lead 6 (voice)',
  midiNumber: 85
}, {
  fn: 'lead_7_fifths',
  name: 'Lead 7 (fifths)',
  midiNumber: 86
}, {
  fn: 'lead_8_bass__lead',
  name: 'Lead 8 (bass + lead)',
  midiNumber: 87
}, {
  fn: 'pad_1_new_age',
  name: 'Pad 1 (new age)',
  midiNumber: 88
}, {
  fn: 'pad_2_warm',
  name: 'Pad 2 (warm)',
  midiNumber: 89
}, {
  fn: 'pad_3_polysynth',
  name: 'Pad 3 (polysynth)',
  midiNumber: 90
}, {
  fn: 'pad_4_choir',
  name: 'Pad 4 (choir)',
  midiNumber: 91
}, {
  fn: 'pad_5_bowed',
  name: 'Pad 5 (bowed)',
  midiNumber: 92
}, {
  fn: 'pad_6_metallic',
  name: 'Pad 6 (metallic)',
  midiNumber: 93
}, {
  fn: 'pad_7_halo',
  name: 'Pad 7 (halo)',
  midiNumber: 94
}, {
  fn: 'pad_8_sweep',
  name: 'Pad 8 (sweep)',
  midiNumber: 95
}, {
  fn: 'fx_1_rain',
  name: 'FX 1 (rain)',
  midiNumber: 96
}, {
  fn: 'fx_2_soundtrack',
  name: 'FX 2 (soundtrack)',
  midiNumber: 97
}, {
  fn: 'fx_3_crystal',
  name: 'FX 3 (crystal)',
  midiNumber: 98
}, {
  fn: 'fx_4_atmosphere',
  name: 'FX 4 (atmosphere)',
  midiNumber: 99
}, {
  fn: 'fx_5_brightness',
  name: 'FX 5 (brightness)',
  midiNumber: 100
}, {
  fn: 'fx_6_goblins',
  name: 'FX 6 (goblins)',
  midiNumber: 101
}, {
  fn: 'fx_7_echoes',
  name: 'FX 7 (echoes)',
  midiNumber: 102
}, {
  fn: 'fx_8_scifi',
  name: 'FX 8 (sci-fi)',
  midiNumber: 103
}, {
  fn: 'sitar',
  name: 'Sitar',
  midiNumber: 104
}, {
  fn: 'banjo',
  name: 'Banjo',
  midiNumber: 105
}, {
  fn: 'shamisen',
  name: 'Shamisen',
  midiNumber: 106
}, {
  fn: 'koto',
  name: 'Koto',
  midiNumber: 107
}, {
  fn: 'kalimba',
  name: 'Kalimba',
  midiNumber: 108
}, {
  fn: 'bagpipe',
  name: 'Bagpipe',
  midiNumber: 109
}, {
  fn: 'fiddle',
  name: 'Fiddle',
  midiNumber: 110
}, {
  fn: 'shanai',
  name: 'Shanai',
  midiNumber: 111
}, {
  fn: 'tinkle_bell',
  name: 'Tinkle Bell',
  midiNumber: 112
}, {
  fn: 'agogo',
  name: 'Agogo',
  midiNumber: 113
}, {
  fn: 'steel_drums',
  name: 'Steel Drums',
  midiNumber: 114
}, {
  fn: 'woodblock',
  name: 'Woodblock',
  midiNumber: 115
}, {
  fn: 'taiko_drum',
  name: 'Taiko Drum',
  midiNumber: 116
}, {
  fn: 'melodic_tom',
  name: 'Melodic Tom',
  midiNumber: 117
}, {
  fn: 'synth_drum',
  name: 'Synth Drum',
  midiNumber: 118
}, {
  fn: 'reverse_cymbal',
  name: 'Reverse Cymbal',
  midiNumber: 119
}, {
  fn: 'guitar_fret_noise',
  name: 'Guitar Fret Noise',
  midiNumber: 120
}, {
  fn: 'breath_noise',
  name: 'Breath Noise',
  midiNumber: 121
}, {
  fn: 'seashore',
  name: 'Seashore',
  midiNumber: 122
}, {
  fn: 'bird_tweet',
  name: 'Bird Tweet',
  midiNumber: 123
}, {
  fn: 'telephone_ring',
  name: 'Telephone Ring',
  midiNumber: 124
}, {
  fn: 'helicopter',
  name: 'Helicopter',
  midiNumber: 125
}, {
  fn: 'applause',
  name: 'Applause',
  midiNumber: 126
}, {
  fn: 'gunshot',
  name: 'Gunshot',
  midiNumber: 127
}];
/**
 * Find information for a given instrument (by filename or name)
 * and load it into an instrument object.
 *
 * @function music21.instrument.find
 * @memberof music21.instrument
 * @param {string} fn - name or filename of instrument
 * @param {music21.instrument.Instrument} [inst] - instrument object to load into
 * @returns {music21.instrument.Instrument|undefined}
 */

instrument.find = function instrument_find(fn, inst) {
  if (inst === undefined) {
    inst = new instrument.Instrument();
  }

  for (var i = 0; i < instrument.info.length; i++) {
    var info = instrument.info[i];

    if (info.fn === fn || info.name === fn) {
      inst.soundfontFn = info.fn;
      inst.instrumentName = info.name;
      inst.midiProgram = info.midiNumber;
      return inst;
    }
  }

  return undefined;
};

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return miditools; });
/* unused harmony export Event */
/* unused harmony export MidiPlayer */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__chord_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__instrument_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__note_js__ = __webpack_require__(7);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/miditools -- A collection of tools for midi. See the namespace {@link music21.miditools}
 *
 * Copyright (c) 2014-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 * @author Michael Scott Cuthbert
 */







/**
 * A collection of tools for midi. See the namespace {@link music21.miditools}
 *
 * @exports music21/miditools
 */

/**
 * Module that holds **music21** tools for connecting with MIDI.js and somewhat with the
 * events from the Jazz plugin or the WebMIDI protocol.
 *
 * @namespace music21.miditools
 * @memberof music21
 */

var miditools = {};
/**
 * Number of octaves to transpose all incoming midi signals
 *
 * @type {number}
 * @default 0
 */

miditools.transposeOctave = 0;
/**
 * @class Event
 * @memberof music21.miditools
 * @param {number} t - timing information
 * @param {number} a - midi data 1 (N.B. a >> 4 = midiCommand )
 * @param {number} b - midi data 2
 * @param {number} c - midi data 3
 */

var Event =
/*#__PURE__*/
function () {
  function Event(t, a, b, c) {
    _classCallCheck(this, Event);

    this.timing = t;
    this.data1 = a;
    this.data2 = b;
    this.data3 = c;
    this.midiCommand = a >> 4;
    this.noteOff = this.midiCommand === 8;
    this.noteOn = this.midiCommand === 9;
    this.midiNote = undefined;

    if (this.noteOn || this.noteOff) {
      this.midiNote = this.data2 + 12 * miditools.transposeOctave;
      this.velocity = this.data3;
    }
  }
  /**
   * Calls MIDI.noteOn or MIDI.noteOff for the note
   * represented by the Event (if appropriate)
   *
   * @returns {undefined}
   */


  _createClass(Event, [{
    key: "sendToMIDIjs",
    value: function sendToMIDIjs() {
      if (__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__ !== undefined && __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"] !== undefined) {
        // noteOn check because does not exist if no audio context
        // or soundfont has been loaded, such as if a play event
        // is triggered before soundfont has been loaded.
        if (this.noteOn) {
          __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](0, this.midiNote, this.velocity, 0);
        } else if (this.noteOff) {
          __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](0, this.midiNote, 0);
        }
      } else {
        console.warn('could not playback note because no MIDIout defined');
      }
    }
    /**
     * Makes a {@link music21.note.Note} object from the event's midiNote number.
     *
     * @returns {music21.note.Note} - the {@link music21.note.Note} object represented by Event.midiNote
     */

  }, {
    key: "music21Note",
    value: function music21Note() {
      var m21n = new __WEBPACK_IMPORTED_MODULE_6__note_js__["a" /* note */].Note();
      m21n.pitch.ps = this.midiNote;
      return m21n;
    }
  }]);

  return Event;
}();
miditools.Event = Event;
/**
 * How long to wait in milliseconds before deciding that a note belongs to another chord. Default 100ms
 *
 * @memberof music21.miditools
 * @type {number}
 */

miditools.maxDelay = 100; // in ms

/**
 * At what time (in ms since Epoch) the chord started.
 *
 * @memberof music21.miditools
 * @type {number}
 */

miditools.heldChordTime = 0;
/**
 * An Array (or undefined) of currently held chords that have not been sent out yet.
 *
 * @memberof music21.miditools
 * @type {Array|undefined}
 */

miditools.heldChordNotes = undefined;
/**
 * When, in MS since Jan 1, 1970, was the last {@link music21.note.Note} played.
 * Defaults to the time that the module was loaded.
 *
 * @memberof music21.miditools
 * @type {number}
 */

miditools.timeOfLastNote = Date.now(); // in ms

miditools._baseTempo = 60;
/**
 * Assign (or query) a Metronome object to run all timing information.
 *
 * @memberof music21.miditools
 * @type {music21.tempo.Metronome}
 */

miditools.metronome = undefined;
Object.defineProperties(miditools, {
  tempo: {
    enumerable: true,
    get: function get() {
      if (this.metronome === undefined) {
        return this._baseTempo;
      } else {
        return this.metronome.tempo;
      }
    },
    set: function set(t) {
      if (this.metronome === undefined) {
        this._baseTempo = t;
      } else {
        this.metronome.tempo = t;
      }
    }
  }
});
/* --------- chords ------------- */

/**
 *  Clears chords that are older than miditools.heldChordTime
 *
 *  Runs a setTimeout on itself.
 *  Calls miditools.sendOutChord
 *
 *  @memberof music21.miditools
 */

miditools.clearOldChords = function clearOldChords() {
  // clear out notes that may be a chord...
  var nowInMs = Date.now(); // in ms

  if (miditools.heldChordTime + miditools.maxDelay < nowInMs) {
    miditools.heldChordTime = nowInMs;

    if (miditools.heldChordNotes !== undefined) {
      // console.log('to send out chords');
      miditools.sendOutChord(miditools.heldChordNotes);
      miditools.heldChordNotes = undefined;
    }
  }

  setTimeout(miditools.clearOldChords, miditools.maxDelay);
};
/**
 *  Take a series of jEvent noteOn objects and convert them to a single Chord object
 *  so long as they are all sounded within miditools.maxDelay milliseconds of each other.
 *  this method stores notes in miditools.heldChordNotes (Array).
 *
 *  @param {music21.miditools.Event} jEvent
 *  @memberof music21.miditools
 *  @returns undefined
 */


miditools.makeChords = function makeChords(jEvent) {
  // jEvent is a miditools.Event object
  if (jEvent.noteOn) {
    var m21n = jEvent.music21Note();

    if (miditools.heldChordNotes === undefined) {
      miditools.heldChordNotes = [m21n];
    } else {
      for (var i = 0; i < miditools.heldChordNotes.length; i++) {
        var foundNote = miditools.heldChordNotes[i];

        if (foundNote.pitch.ps === m21n.pitch.ps) {
          return; // no duplicates
        }
      }

      miditools.heldChordNotes.push(m21n);
    }
  }
};
/**
 * The last Note or Chord to be sent out from miditools.  This is an important semi-global
 * attribute, since the last element may need to be quantized by quantizeLastNote() to
 * determine its length, since the note may need to be placed into a staff before its total
 * length can be determined.
 *
 * @memberof music21.miditools
 * @type {music21.chord.Chord|music21.note.Note|undefined}
 */


miditools.lastElement = undefined;
/**
 * Take the list of Notes and makes a chord out of it, if appropriate and call
 * {@link music21.miditools.callBacks.sendOutChord} callback with the Chord or Note as a parameter.
 *
 * @memberof music21.miditools
 * @param {Array<music21.note.Note>} chordNoteList - an Array of {@link music21.note.Note} objects
 * @returns {(music21.note.Note|music21.chord.Chord|undefined)} A {@link music21.chord.Chord} object,
 * most likely, but maybe a {@link music21.note.Note} object)
 */

miditools.sendOutChord = function sendOutChord(chordNoteList) {
  var appendObject;

  if (chordNoteList.length > 1) {
    // console.log(chordNoteList[0].name, chordNoteList[1].name);
    appendObject = new __WEBPACK_IMPORTED_MODULE_2__chord_js__["a" /* chord */].Chord(chordNoteList);
  } else if (chordNoteList.length === 1) {
    appendObject = chordNoteList[0]; // note object
  } else {
    return undefined;
  }

  appendObject.stemDirection = 'noStem';
  miditools.quantizeLastNote();
  miditools.lastElement = appendObject;

  if (miditools.callBacks.sendOutChord !== undefined) {
    miditools.callBacks.sendOutChord(appendObject);
  }

  return appendObject;
};
/* ----------- callbacks --------- */
// TODO: all callbacks (incl. raw, sendOutChord) should be able to be a function or an array of functions

/**
* callBacks is an object with three keys:
*
* - raw: function (t, a, b,c) to call when any midievent arrives. Default: `function (t, a, b, c) { return new miditools.Event(t, a, b, c); }`
* - general: function ( miditools.Event() ) to call when an Event object has been created. Default: `[miditools.sendToMIDIjs, miditools.quantizeLastNote]`
* - sendOutChord: function (array_of_note.Note_objects) to call when a sufficient time has passed to build a chord from input. Default: empty function.
*
* At present, only "general" can take an Array of event listening functions, but I hope to change that for sendOutChord also.
*
* "general" is usually the callback list to play around with.
*
* @memberof music21.miditools
*/


miditools.callBacks = {
  raw: function raw(t, a, b, c) {
    return new miditools.Event(t, a, b, c);
  },
  general: [miditools.sendToMIDIjs, miditools.quantizeLastNote],
  sendOutChord: function sendOutChord(arrayOfNotes) {}
};
/**
 * Quantizes the lastElement (passed in) or music21.miditools.lastElement.
 *
 * @memberof music21.miditools
 * @param {music21.note.GeneralNote} lastElement - A {@link music21.note.Note} to be quantized
 * @returns {music21.note.GeneralNote} The same {@link music21.note.Note} object passed in with
 * duration quantized
 */

miditools.quantizeLastNote = function quantizeLastNote(lastElement) {
  if (lastElement === undefined) {
    lastElement = this.lastElement;

    if (lastElement === undefined) {
      return undefined;
    }
  }

  lastElement.stemDirection = undefined;
  var nowInMS = Date.now();
  var msSinceLastNote = nowInMS - this.timeOfLastNote;
  this.timeOfLastNote = nowInMS;
  var normalQuarterNoteLength = 1000 * 60 / this.tempo;
  var numQuarterNotes = msSinceLastNote / normalQuarterNoteLength;
  var roundedQuarterLength = Math.round(4 * numQuarterNotes) / 4;

  if (roundedQuarterLength >= 4) {
    roundedQuarterLength = 4;
  } else if (roundedQuarterLength >= 3) {
    roundedQuarterLength = 3;
  } else if (roundedQuarterLength > 2) {
    roundedQuarterLength = 2;
  } else if (roundedQuarterLength === 1.25) {
    roundedQuarterLength = 1;
  } else if (roundedQuarterLength === 0.75) {
    roundedQuarterLength = 0.5;
  } else if (roundedQuarterLength === 0) {
    roundedQuarterLength = 0.125;
  }

  lastElement.duration.quarterLength = roundedQuarterLength;
  return lastElement;
};
/* ----------- callbacks --------- */

/**
 * Callback to midiEvent.sendToMIDIjs.
 *
 * @memberof music21.miditools
 * @param {music21.miditools.Event} midiEvent - event to send out.
 * @returns undefined
 */


miditools.sendToMIDIjs = function (midiEvent) {
  midiEvent.sendToMIDIjs();
};
/* ------------ MIDI.js ----------- */

/**
 * a mapping of soundfont text names to true, false, or "loading".
 *
 * @memberof music21.miditools
 * @type {Object}
 */


miditools.loadedSoundfonts = {};
/**
 * Called after a soundfont has been loaded. The callback is better to be specified elsewhere
 * rather than overriding this important method.
 *
 * @memberof music21.miditools
 * @param {string} soundfont The name of the soundfont that was just loaded
 * @param {function} callback A function to be called after the soundfont is loaded.
 */

miditools.postLoadCallback = function postLoadCallback(soundfont, callback) {
  // this should be bound to MIDI
  if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
    console.log('soundfont loaded about to execute callback.');
    console.log('first playing two notes very softly -- seems to flush the buffer.');
  }

  __WEBPACK_IMPORTED_MODULE_0_jquery__('.loadingSoundfont').remove();
  var isFirefox = typeof InstallTrigger !== 'undefined'; // Firefox 1.0+

  var isAudioTag = __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["technology"] === 'HTML Audio Tag';
  var instrumentObj = __WEBPACK_IMPORTED_MODULE_5__instrument_js__["a" /* instrument */].find(soundfont);

  if (instrumentObj !== undefined) {
    __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["programChange"](instrumentObj.midiChannel, instrumentObj.midiProgram);

    if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
      console.log(soundfont + ' (' + instrumentObj.midiProgram + ') loaded on ', instrumentObj.midiChannel);
    }

    if (isFirefox === false && isAudioTag === false) {
      // Firefox ignores sound volume! so don't play! 
      // as does IE and others using HTML audio tag.
      var channel = instrumentObj.midiChannel;
      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](channel, 36, 1, 0); // if no notes have been played before then

      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](channel, 36, 1, 0.1); // the second note to be played is always

      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](channel, 48, 1, 0.2); // very clipped (on Safari at least)

      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](channel, 48, 1, 0.3); // this helps a lot.

      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](channel, 60, 1, 0.3); // chrome needs three notes?

      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](channel, 60, 1, 0.4);
    }
  }

  if (callback !== undefined) {
    callback(instrumentObj);
  }

  miditools.loadedSoundfonts[soundfont] = true;
};
/**
 * method to load soundfonts while waiting for other processes that need them
 * to load first.
 *
 * @memberof music21.miditools
 * @param {String} soundfont The name of the soundfont that was just loaded
 * @param {function} callback A function to be called after the soundfont is loaded.
 * @example
 * s = new music21.stream.Stream();
 * music21.miditools.loadSoundfont(
 *     'clarinet',
 *     function(i) {
 *         console.log('instrument object', i, 'loaded');
 *         s.instrument = i;
 * });
 */


miditools.loadSoundfont = function loadSoundfont(soundfont, callback) {
  if (miditools.loadedSoundfonts[soundfont] === true) {
    // this soundfont has already been loaded once, so just call the callback.
    if (callback !== undefined) {
      var instrumentObj = __WEBPACK_IMPORTED_MODULE_5__instrument_js__["a" /* instrument */].find(soundfont);
      callback(instrumentObj);
    }
  } else if (miditools.loadedSoundfonts[soundfont] === 'loading') {
    // we are still waiting for this instrument to load, so
    // wait for it before calling callback.
    var waitThenCall = function waitThenCall() {
      if (miditools.loadedSoundfonts[soundfont] === true) {
        if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
          console.log('other process has finished loading; calling callback');
        }

        if (callback !== undefined) {
          var _instrumentObj = __WEBPACK_IMPORTED_MODULE_5__instrument_js__["a" /* instrument */].find(soundfont);

          callback(_instrumentObj);
        }
      } else {
        if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
          console.log('waiting for other process load');
        }

        setTimeout(waitThenCall, 100);
      }
    };

    waitThenCall();
  } else {
    // soundfont we have not seen before:
    // set its status to loading and then load it.
    miditools.loadedSoundfonts[soundfont] = 'loading';

    if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
      console.log('waiting for document ready');
    }

    __WEBPACK_IMPORTED_MODULE_0_jquery__(document).ready(function () {
      if (__WEBPACK_IMPORTED_MODULE_4__debug_js__["a" /* debug */]) {
        console.log('document ready, waiting to load soundfont');
      }

      __WEBPACK_IMPORTED_MODULE_0_jquery__(document.body).append(__WEBPACK_IMPORTED_MODULE_0_jquery__("<div class='loadingSoundfont'><b>Loading MIDI Instrument</b>: " + 'audio will begin when this message disappears.</div>'));
      console.log(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__);
      __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["loadPlugin"]({
        soundfontUrl: __WEBPACK_IMPORTED_MODULE_3__common_js__["a" /* common */].urls.soundfontUrl,
        instrument: soundfont,
        onsuccess: miditools.postLoadCallback.bind(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__, soundfont, callback)
      });
    });
  }
};
/**
 * MidiPlayer -- an embedded midi player including the ability to create a
 * playback device.
 *
 * @class MidiPlayer
 * @memberOf music21.miditools
 * @property {number} speed - playback speed scaling (1=default).
 * @property {jQuery|undefined} $playDiv - div holding the player,
 */


var MidiPlayer =
/*#__PURE__*/
function () {
  function MidiPlayer() {
    _classCallCheck(this, MidiPlayer);

    this.player = new __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["Players"].PlayInstance();
    this.speed = 1.0;
    this.$playDiv = undefined;
  }
  /**
   * @param {jQuery|Node} where
   * @returns {Node}
   */


  _createClass(MidiPlayer, [{
    key: "addPlayer",
    value: function addPlayer(where) {
      var _this = this;

      var $where = where;

      if (where === undefined) {
        where = document.body;
      }

      if (where.jquery === undefined) {
        $where = __WEBPACK_IMPORTED_MODULE_0_jquery__(where);
      }

      var $playDiv = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div class="midiPlayer">');
      var $controls = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div class="positionControls">');
      var $playPause = __WEBPACK_IMPORTED_MODULE_0_jquery__('<input type="image" alt="play" src="' + this.playPng() + '" align="absmiddle" value="play" class="playPause">');
      var $stop = __WEBPACK_IMPORTED_MODULE_0_jquery__('<input type="image" alt="stop" src="' + this.stopPng() + '" align="absmiddle" value="stop" class="stopButton">');
      $playPause.on('click', function () {
        return _this.pausePlayStop();
      });
      $stop.on('click', function () {
        return _this.stopButton();
      });
      $controls.append($playPause);
      $controls.append($stop);
      $playDiv.append($controls);
      var $time = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div class="timeControls">');
      var $timePlayed = __WEBPACK_IMPORTED_MODULE_0_jquery__('<span class="timePlayed">0:00</span>');
      var $capsule = __WEBPACK_IMPORTED_MODULE_0_jquery__('<span class="capsule"><span class="cursor"></span></span>');
      var $timeRemaining = __WEBPACK_IMPORTED_MODULE_0_jquery__('<span class="timeRemaining">-0:00</span>');
      $time.append($timePlayed);
      $time.append($capsule);
      $time.append($timeRemaining);
      $playDiv.append($time);
      $where.append($playDiv);
      this.$playDiv = $playDiv;
      return $playDiv;
    }
  }, {
    key: "stopButton",
    value: function stopButton() {
      this.pausePlayStop('yes');
    }
  }, {
    key: "playPng",
    value: function playPng() {
      return __WEBPACK_IMPORTED_MODULE_3__common_js__["a" /* common */].urls.midiPlayer + '/play.png';
    }
  }, {
    key: "pausePng",
    value: function pausePng() {
      return __WEBPACK_IMPORTED_MODULE_3__common_js__["a" /* common */].urls.midiPlayer + '/pause.png';
    }
  }, {
    key: "stopPng",
    value: function stopPng() {
      return __WEBPACK_IMPORTED_MODULE_3__common_js__["a" /* common */].urls.midiPlayer + '/stop.png';
    }
  }, {
    key: "pausePlayStop",
    value: function pausePlayStop(stop) {
      var d;

      if (this.$playDiv === undefined) {
        d = {
          src: 'doesnt matter'
        };
      } else {
        d = this.$playDiv.find('.playPause')[0];
      }

      if (stop === 'yes') {
        this.player.stop();
        d.src = this.playPng();
      } else if (this.player.playing || stop === 'pause') {
        d.src = this.playPng();
        this.player.pause(true);
      } else {
        d.src = this.pausePng();
        this.player.resume();
      }
    }
  }, {
    key: "base64Load",
    value: function base64Load(b64data) {
      var player = this.player;
      player.timeWarp = this.speed;
      var m21midiplayer = this;
      miditools.loadSoundfont('acoustic_grand_piano', function () {
        player.loadFile(b64data, function () {
          // success
          m21midiplayer.fileLoaded();
        }, undefined, // loading
        function (e) {
          // failure
          console.log(e);
        });
      });
    }
  }, {
    key: "songFinished",
    value: function songFinished() {
      this.pausePlayStop('yes');
    }
  }, {
    key: "fileLoaded",
    value: function fileLoaded() {
      this.updatePlaying();
    }
  }, {
    key: "startAndUpdate",
    value: function startAndUpdate() {
      this.player.start();
      this.updatePlaying();
    }
  }, {
    key: "updatePlaying",
    value: function updatePlaying() {
      var _this2 = this;

      var self = this;
      var player = this.player;

      if (this.$playDiv === undefined) {
        return;
      }

      var $d = this.$playDiv; // update the timestamp

      var timePlayed = $d.find('.timePlayed')[0];
      var timeRemaining = $d.find('.timeRemaining')[0];
      var timeCursor = $d.find('.cursor')[0];
      var $capsule = $d.find('.capsule'); //

      $capsule.on('dragstart', function (e) {
        player.currentTime = (e.pageX - $capsule.left) / 420 * player.endTime;

        if (player.currentTime < 0) {
          player.currentTime = 0;
        }

        if (player.currentTime > player.endTime) {
          player.currentTime = player.endTime;
        }

        if (self.state === 'down') {
          _this2.pausePlayStop('pause');
        } else if (self.state === 'up') {
          _this2.pausePlayStop('play');
        }
      }); //

      var timeFormatting = function timeFormatting(n) {
        var minutes = n / 60 >> 0;
        var seconds = String(n - minutes * 60 >> 0);

        if (seconds.length === 1) {
          seconds = '0' + seconds;
        }

        return minutes + ':' + seconds;
      };

      player.setAnimation(function (data) {
        var percent = data.now / data.end;
        var now = data.now >> 0; // where we are now

        var end = data.end >> 0; // end of song

        if (now === end) {
          // go to next song
          self.songFinished();
        } // display the information to the user


        timeCursor.style.width = percent * 100 + '%';
        timePlayed.innerHTML = timeFormatting(now);
        timeRemaining.innerHTML = '-' + timeFormatting(end - now);
      });
    }
  }]);

  return MidiPlayer;
}();
miditools.MidiPlayer = MidiPlayer;

/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Scale */
/* unused harmony export AbstractScale */
/* unused harmony export AbstractDiatonicScale */
/* unused harmony export AbstractHarmonicMinorScale */
/* unused harmony export AbstractAscendingMelodicMinorScale */
/* unused harmony export ConcreteScale */
/* unused harmony export DiatonicScale */
/* unused harmony export MajorScale */
/* unused harmony export MinorScale */
/* unused harmony export HarmonicMinorScale */
/* unused harmony export AscendingMelodicMinorScale */
/* unused harmony export SimpleDiatonicScale */
/* unused harmony export ScaleSimpleMajor */
/* unused harmony export ScaleSimpleMinor */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return scale; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__interval_js__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__exceptions21_js__ = __webpack_require__(1);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/scale -- Scales
 *
 * Does not implement the full range of scales from music21p
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */





 // const DIRECTION_BI = 'bi';
// const DIRECTION_DESCENDING = 'descending';
// const DIRECTION_ASCENDING = 'ascending';

/**
 * Scale module. See {@link music21.scale} namespace
 *
 * @exports music21/scale
 */

/**
 * Scale namespace.  Right now only supports very simple scales.
 *
 * @namespace music21.scale
 * @memberof music21
 * @requires music21/base
 * @requires music21/common
 * @requires music21/debug
 * @requires music21/interval
 * @requires music21/pitch
 */

var Scale =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Scale, _base$Music21Object);

  function Scale() {
    var _this;

    _classCallCheck(this, Scale);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scale).call(this));
    _this.type = 'Scale';
    return _this;
  }

  _createClass(Scale, [{
    key: "name",
    get: function get() {
      return this.type;
    }
  }, {
    key: "isConcrete",
    get: function get() {
      return false;
    }
  }]);

  return Scale;
}(__WEBPACK_IMPORTED_MODULE_0__base_js__["a" /* base */].Music21Object);
var AbstractScale =
/*#__PURE__*/
function (_Scale) {
  _inherits(AbstractScale, _Scale);

  function AbstractScale() {
    var _this2;

    _classCallCheck(this, AbstractScale);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AbstractScale).call(this));
    _this2._net = []; // simplified -- no IntervalNetwork, just list of intervals

    _this2.tonicDegree = 1;
    _this2.octaveDuplicating = true;
    _this2.deterministic = true;
    _this2._alteredDegrees = {};
    _this2._oneOctaveRealizationCache = undefined;
    return _this2;
  }

  _createClass(AbstractScale, [{
    key: "equals",
    value: function equals(other) {
      if (__WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].arrayEquals(this.classes, other.classes) && this.tonicDegree === other.tonicDegree && __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].arrayEquals(this._net, other._net)) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "buildNetworkFromPitches",
    value: function buildNetworkFromPitches(pitchList) {
      var pitchListReal = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = pitchList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _p = _step.value;

          if (typeof _p === 'string') {
            pitchListReal.push(new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(_p));
          } else if (_p.classes.includes('Note')) {
            pitchListReal.push(_p.pitch);
          } else {
            pitchListReal.push(_p);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      pitchList = pitchListReal;
      var pLast = pitchList[pitchList.length - 1];

      if (pLast.name === pitchList[0]) {
        var p = pitchList[0].clone();

        if (pLast.ps > pitchList[0]) {
          // ascending;
          while (p.ps < pLast.ps) {
            p.octave += 1;
          }
        } else {
          while (p.ps < pLast.ps) {
            p.octave += -1;
          }
        }

        pitchList.push(p);
      }

      var intervalList = [];

      for (var i = 0; i < pitchList.length - 1; i++) {
        var thisInterval = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval(pitchList[i], pitchList[i + 1]);
        intervalList.push(thisInterval);
      }

      this._net = intervalList;
    }
  }, {
    key: "getDegreeMaxUnique",
    value: function getDegreeMaxUnique() {
      return this._net.length;
    } // noinspection JSUnusedLocalSymbols

  }, {
    key: "getRealization",
    value: function getRealization(pitchObj, unused_stepOfPitch, unused_minPitch, unused_maxPitch, unused_direction, unused_reverse) {
      // if (direction === undefined) {
      //     direction = DIRECTION_ASCENDING;
      // }
      // if (stepOfPitch === undefined) {
      //     stepOfPitch = 1;
      // }
      if (typeof pitchObj === 'string') {
        pitchObj = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(pitchObj);
      } else {
        pitchObj = pitchObj.clone();
      }

      var post = [pitchObj];
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this._net[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var intV = _step2.value;
          pitchObj = intV.transposePitch(pitchObj);
          post.push(pitchObj);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return post;
    }
  }, {
    key: "getPitchFromNodeDegree",
    value: function getPitchFromNodeDegree(pitchReference, unused_nodeName, nodeDegreeTarget) {
      var zeroIndexDegree = nodeDegreeTarget - 1;

      for (var i = 0; i < zeroIndexDegree; i++) {
        var thisIntv = this._net[i % this._net.length];
        pitchReference = thisIntv.transposePitch(pitchReference);
      }

      return pitchReference;
    } // noinspection JSUnusedLocalSymbols

  }, {
    key: "getRelativeNodeDegree",
    value: function getRelativeNodeDegree(pitchReference, unused_nodeName, pitchTarget, unused_comparisonAttribute, unused_direction) {
      if (typeof pitchTarget === 'string') {
        pitchTarget = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(pitchTarget);
      }

      var realizedPitches;

      if (this._oneOctaveRealizationCache !== undefined) {
        realizedPitches = this._oneOctaveRealizationCache;
      } else {
        realizedPitches = this.getRealization(pitchReference);
        this._oneOctaveRealizationCache = realizedPitches;
      }

      var realizedNames = [];
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = realizedPitches[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var p = _step3.value;
          realizedNames.push(p.name);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
            _iterator3["return"]();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      var realizedIndex = realizedNames.indexOf(pitchTarget.name);

      if (realizedIndex === -1) {
        return undefined;
      } else {
        return realizedIndex + 1;
      }
    }
  }]);

  return AbstractScale;
}(Scale);
var AbstractDiatonicScale =
/*#__PURE__*/
function (_AbstractScale) {
  _inherits(AbstractDiatonicScale, _AbstractScale);

  /**
   *
   * @param {string} [mode]
   * @property {string} type
   * @property {number|undefined} tonicDegree
   * @property {number|undefined} dominantDegree
   * @property {boolean} octaveDuplicating
   */
  function AbstractDiatonicScale(mode) {
    var _this3;

    _classCallCheck(this, AbstractDiatonicScale);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(AbstractDiatonicScale).call(this));
    _this3.type = 'Abstract diatonic';
    _this3.tonicDegree = undefined;
    _this3.dominantDegree = undefined;
    _this3.octaveDuplicating = true;

    _this3._buildNetwork(mode);

    return _this3;
  }

  _createClass(AbstractDiatonicScale, [{
    key: "_buildNetwork",
    value: function _buildNetwork(mode) {
      var srcList = ['M2', 'M2', 'm2', 'M2', 'M2', 'M2', 'm2'];
      var intervalList;
      this.tonicDegree = 1;
      this.dominantDegree = 5;

      if (['major', 'ionian', undefined].includes(mode)) {
        intervalList = srcList;
        this.relativeMajorDegree = 1;
        this.relativeMinorDegree = 6;
      } else if (['minor', 'aeolian'].includes(mode)) {
        var _intervalList;

        intervalList = srcList.slice(5, 7);

        (_intervalList = intervalList).push.apply(_intervalList, _toConsumableArray(srcList.slice(0, 5)));

        this.relativeMajorDegree = 3;
        this.relativeMinorDegree = 1;
      }

      this._net = [];
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = intervalList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var intVStr = _step4.value;

          this._net.push(new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval(intVStr));
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }
    }
  }]);

  return AbstractDiatonicScale;
}(AbstractScale);
var AbstractHarmonicMinorScale =
/*#__PURE__*/
function (_AbstractScale2) {
  _inherits(AbstractHarmonicMinorScale, _AbstractScale2);

  function AbstractHarmonicMinorScale() {
    var _this4;

    _classCallCheck(this, AbstractHarmonicMinorScale);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(AbstractHarmonicMinorScale).call(this));
    _this4.type = 'Abstract harmonic minor';
    _this4.octaveDuplicating = true;

    _this4._buildNetwork();

    return _this4;
  }

  _createClass(AbstractHarmonicMinorScale, [{
    key: "_buildNetwork",
    value: function _buildNetwork() {
      var intervalList = ['M2', 'm2', 'M2', 'M2', 'm2', 'A2', 'm2'];
      this._net = [];

      for (var _i = 0, _intervalList2 = intervalList; _i < _intervalList2.length; _i++) {
        var intVStr = _intervalList2[_i];

        this._net.push(new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval(intVStr));
      }
    }
  }]);

  return AbstractHarmonicMinorScale;
}(AbstractScale); // temporary, until bidirectional scales are created
// no need for descending, since minor takes care of that.

var AbstractAscendingMelodicMinorScale =
/*#__PURE__*/
function (_AbstractScale3) {
  _inherits(AbstractAscendingMelodicMinorScale, _AbstractScale3);

  function AbstractAscendingMelodicMinorScale() {
    var _this5;

    _classCallCheck(this, AbstractAscendingMelodicMinorScale);

    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(AbstractAscendingMelodicMinorScale).call(this));
    _this5.type = 'Abstract ascending melodic minor';
    _this5.octaveDuplicating = true;

    _this5._buildNetwork();

    return _this5;
  }

  _createClass(AbstractAscendingMelodicMinorScale, [{
    key: "_buildNetwork",
    value: function _buildNetwork() {
      var intervalList = ['M2', 'm2', 'M2', 'M2', 'M2', 'M2', 'm2'];
      this._net = [];

      for (var _i2 = 0, _intervalList3 = intervalList; _i2 < _intervalList3.length; _i2++) {
        var intVStr = _intervalList3[_i2];

        this._net.push(new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval(intVStr));
      }
    }
  }]);

  return AbstractAscendingMelodicMinorScale;
}(AbstractScale);
var ConcreteScale =
/*#__PURE__*/
function (_Scale2) {
  _inherits(ConcreteScale, _Scale2);

  function ConcreteScale(tonic) {
    var _this6;

    _classCallCheck(this, ConcreteScale);

    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(ConcreteScale).call(this));

    if (typeof tonic === 'string') {
      tonic = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(tonic);
    }

    _this6.tonic = tonic;
    _this6["abstract"] = undefined;
    return _this6;
  } // when adding functionality here, must also be added to key.Key.


  _createClass(ConcreteScale, [{
    key: "getTonic",
    value: function getTonic() {
      return this.tonic;
    } // transpose
    // tune
    // No .romanNumeral function because of circular imports...
    // romanNumeral(degree) {
    //     return new roman.RomanNumeral(degree, this);
    // }
    // noinspection JSUnusedLocalSymbols

  }, {
    key: "getPitches",
    value: function getPitches(unused_minPitch, unused_maxPitch, unused_direction) {
      var pitchObj;

      if (this.tonic === undefined) {
        pitchObj = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch('C4');
      } else {
        pitchObj = this.tonic;
      }

      return this["abstract"].getRealization(pitchObj);
    } // noinspection JSUnusedLocalSymbols

  }, {
    key: "pitchFromDegree",
    value: function pitchFromDegree(degree, unused_minPitch, unused_maxPitch, unused_direction, unused_equateTermini) {
      return this["abstract"].getPitchFromNodeDegree(this.tonic, this["abstract"].tonicDegree, degree);
    } // noinspection JSUnusedLocalSymbols

  }, {
    key: "getScaleDegreeFromPitch",
    value: function getScaleDegreeFromPitch(pitchTarget, unused_direction, unused_comparisonAttribute) {
      return this["abstract"].getRelativeNodeDegree(this.tonic, this["abstract"].tonicDegree, pitchTarget);
    }
  }, {
    key: "isConcrete",
    get: function get() {
      if (this.tonic !== undefined) {
        return true;
      } else {
        return false;
      }
    }
  }]);

  return ConcreteScale;
}(Scale);
var DiatonicScale =
/*#__PURE__*/
function (_ConcreteScale) {
  _inherits(DiatonicScale, _ConcreteScale);

  function DiatonicScale(tonic) {
    var _this7;

    _classCallCheck(this, DiatonicScale);

    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(DiatonicScale).call(this, tonic)); // a.k.a. ^2 :-)

    _this7["abstract"] = new AbstractDiatonicScale();
    _this7.type = 'diatonic';
    return _this7;
  }

  return DiatonicScale;
}(ConcreteScale);
var MajorScale =
/*#__PURE__*/
function (_DiatonicScale) {
  _inherits(MajorScale, _DiatonicScale);

  function MajorScale(tonic) {
    var _this8;

    _classCallCheck(this, MajorScale);

    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(MajorScale).call(this, tonic)); // a.k.a. ^2 :-)

    _this8.type = 'major';

    _this8["abstract"]._buildNetwork(_this8.type);

    return _this8;
  }

  return MajorScale;
}(DiatonicScale);
var MinorScale =
/*#__PURE__*/
function (_DiatonicScale2) {
  _inherits(MinorScale, _DiatonicScale2);

  function MinorScale(tonic) {
    var _this9;

    _classCallCheck(this, MinorScale);

    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(MinorScale).call(this, tonic)); // a.k.a. ^2 :-)

    _this9.type = 'minor';

    _this9["abstract"]._buildNetwork(_this9.type);

    return _this9;
  }

  return MinorScale;
}(DiatonicScale);
var HarmonicMinorScale =
/*#__PURE__*/
function (_ConcreteScale2) {
  _inherits(HarmonicMinorScale, _ConcreteScale2);

  function HarmonicMinorScale(tonic) {
    var _this10;

    _classCallCheck(this, HarmonicMinorScale);

    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(HarmonicMinorScale).call(this, tonic)); // a.k.a. ^2 :-)

    _this10.type = 'harmonic minor';
    _this10["abstract"] = new AbstractHarmonicMinorScale();
    return _this10;
  }

  return HarmonicMinorScale;
}(ConcreteScale);
var AscendingMelodicMinorScale =
/*#__PURE__*/
function (_ConcreteScale3) {
  _inherits(AscendingMelodicMinorScale, _ConcreteScale3);

  function AscendingMelodicMinorScale(tonic) {
    var _this11;

    _classCallCheck(this, AscendingMelodicMinorScale);

    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(AscendingMelodicMinorScale).call(this, tonic)); // a.k.a. ^2 :-)

    _this11.type = 'harmonic minor';
    _this11["abstract"] = new AbstractAscendingMelodicMinorScale();
    return _this11;
  }

  return AscendingMelodicMinorScale;
}(ConcreteScale);
/**
 * Function, not class
 *
 * @function music21.scale.SimpleDiatonicScale
 * @param {music21.pitch.Pitch} tonic
 * @param {Array<string>} scaleSteps - an array of diatonic prefixes,
 *     generally 'M' (major) or 'm' (minor) describing the seconds.
 * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.
 */

function SimpleDiatonicScale(tonic, scaleSteps) {
  if (tonic === undefined) {
    tonic = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch('C4');
  } else if (!(tonic instanceof __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch)) {
    throw new __WEBPACK_IMPORTED_MODULE_5__exceptions21_js__["Music21Exception"]('Cannot make a scale not from ' + 'a music21.pitch.Pitch object: ' + tonic);
  }

  if (scaleSteps === undefined) {
    scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];
  }

  var gi = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].GenericInterval(2);
  var pitches = [tonic];
  var lastPitch = tonic;

  for (var i = 0; i < scaleSteps.length; i++) {
    var di = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].DiatonicInterval(scaleSteps[i], gi);
    var ii = new __WEBPACK_IMPORTED_MODULE_3__interval_js__["a" /* interval */].Interval(di);
    var newPitch = ii.transposePitch(lastPitch);

    if (__WEBPACK_IMPORTED_MODULE_2__debug_js__["a" /* debug */]) {
      console.log('ScaleSimpleMajor -- adding pitch: ' + newPitch.name);
    }

    pitches.push(newPitch);
    lastPitch = newPitch;
  }

  return pitches;
}
/**
 * One octave of a major scale
 *
 * @function music21.scale.ScaleSimpleMajor
 * @param {music21.pitch.Pitch} tonic
 * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.
 */

function ScaleSimpleMajor(tonic) {
  var scaleSteps = ['M', 'M', 'm', 'M', 'M', 'M', 'm'];
  return SimpleDiatonicScale(tonic, scaleSteps);
}
/**
 * One octave of a minor scale
 *
 * @function music21.scale.ScaleSimpleMinor
 * @param {music21.pitch.Pitch} tonic
 * @param {string} [minorType='natural'] - 'harmonic', 'harmonic-minor',
 *     'melodic', 'melodic-minor', 'melodic-minor-ascending',
 *     'melodic-ascending' or other (=natural/melodic-descending)
 * @returns {Array<music21.pitch.Pitch>} an octave of scale objects.
 */

function ScaleSimpleMinor(tonic, minorType) {
  var scaleSteps = ['M', 'm', 'M', 'M', 'm', 'M', 'M'];

  if (typeof minorType === 'string') {
    // "harmonic minor" -> "harmonic-minor"
    minorType = minorType.replace(/\s/g, '-');
  }

  if (minorType === 'harmonic' || minorType === 'harmonic-minor') {
    scaleSteps[5] = 'A';
    scaleSteps[6] = 'm';
  } else if (minorType === 'melodic' || minorType === 'melodic-ascending' || minorType === 'melodic-minor' || minorType === 'melodic-minor-ascending') {
    scaleSteps[4] = 'M';
    scaleSteps[6] = 'm';
  }

  return SimpleDiatonicScale(tonic, scaleSteps);
}
var scale = {
  Scale: Scale,
  AbstractScale: AbstractScale,
  AbstractDiatonicScale: AbstractDiatonicScale,
  AbstractHarmonicMinorScale: AbstractHarmonicMinorScale,
  AbstractAscendingMelodicMinorScale: AbstractAscendingMelodicMinorScale,
  ConcreteScale: ConcreteScale,
  DiatonicScale: DiatonicScale,
  MajorScale: MajorScale,
  MinorScale: MinorScale,
  HarmonicMinorScale: HarmonicMinorScale,
  AscendingMelodicMinorScale: AscendingMelodicMinorScale,
  ScaleSimpleMinor: ScaleSimpleMinor,
  ScaleSimpleMajor: ScaleSimpleMajor,
  SimpleDiatonicScale: SimpleDiatonicScale
};

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return tie; });
/* unused harmony export Tie */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__ = __webpack_require__(1);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/tie -- ties!
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */


/**
 * Simple tie module {@link music21.tie} namespace
 *
 * @exports music21/tie
 */

/**
 * Tie namespace, just has the {@link music21.tie.Tie} object
 *
 * @namespace music21.tie
 * @memberof music21
 * @requires music21/prebase
 */

var tie = {};
var VALID_TIE_TYPES = ['start', 'stop', 'continue', 'let-ring', 'continue-let-ring'];
/**
 * Tie class. Found in {@link music21.note.GeneralNote} `.tie`.
 *
 * Does not support advanced music21p values `.to` and `.from`
 *
 * @class Tie
 * @memberof music21.tie
 * @extends music21.prebase.ProtoM21Object
 * @param {string} type - 'start', 'stop', 'continue', or 'let-ring'
 * @property {string} type - the tie type
 * @property {string} style - only supports 'normal' for now.
 * @property {string|undefined} placement - undefined = unknown or above/below.
 * (NB currently does nothing)
 */

var Tie =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Tie, _prebase$ProtoM21Obje);

  function Tie() {
    var _this;

    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'start';

    _classCallCheck(this, Tie);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tie).call(this));
    _this._type = undefined;
    _this.style = 'normal';
    _this.type = type;
    _this.placement = undefined;
    return _this;
  }

  _createClass(Tie, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.type;
    }
  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(newType) {
      if (!VALID_TIE_TYPES.includes(newType)) {
        throw new __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__["Music21Exception"]("Type must be one of ".concat(VALID_TIE_TYPES, ", not ").concat(newType));
      }

      this._type = newType;
    }
  }]);

  return Tie;
}(__WEBPACK_IMPORTED_MODULE_0__prebase_js__["a" /* prebase */].ProtoM21Object);
tie.Tie = Tie;

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return audioSearch; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_js__ = __webpack_require__(0);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



/**
 * audioSearch module. See {@link music21.audioSearch} namespace
 *
 * @exports music21/audioSearch
 */

/**
 * @namespace music21.audioSearch
 * @memberof music21
 * @requires music21/pitch
 * @requires music21/common
 */

var audioSearch = {}; // functions based on the prototype created by Chris Wilson's MIT License version
// and on Jordi Bartolome Guillen's audioSearch module for music21

audioSearch.fftSize = 2048;
audioSearch.AudioContextCaller = window.AudioContext || window.webkitAudioContext;
audioSearch._audioContext = null;
audioSearch.animationFrameCallbackId = null;
Object.defineProperties(audioSearch, {
  audioContext: {
    get: function get() {
      if (audioSearch._audioContext !== null) {
        return audioSearch._audioContext;
      } else {
        // AudioContext should be a singleton, but MIDI reports loaded before it is!
        if (__WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js__ !== undefined && __WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js__["WebAudio"] !== undefined && __WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js__["WebAudio"].getContext() !== undefined) {
          window.globalAudioContext = __WEBPACK_IMPORTED_MODULE_0__ext_midijs_build_MIDI_min_js__["WebAudio"].getContext();
        } else if (typeof window.globalAudioContext === 'undefined') {
          window.globalAudioContext = new audioSearch.AudioContextCaller();
        }

        audioSearch._audioContext = window.globalAudioContext;
        return audioSearch._audioContext;
      }
    },
    set: function set(ac) {
      audioSearch._audioContext = ac;
    }
  }
});
/**
 *
 * @function music21.audioSearch.getUserMedia
 * @memberof music21.audioSearch
 * @param {Object} dictionary - optional dictionary to fill
 * @param {function} callback - callback on success
 * @param {function} error - callback on error
 */

audioSearch.getUserMedia = function getUserMedia(dictionary, callback, error) {
  if (error === undefined) {
    /* eslint no-alert: "off"*/
    error = function error() {
      alert('navigator.getUserMedia either not defined (Safari, IE) or denied.');
    };
  }

  if (callback === undefined) {
    callback = function callback(mediaStream) {
      audioSearch.userMediaStarted(mediaStream);
    };
  }

  var n = navigator; // need to polyfill navigator, or binding problems are hard...

  n.getUserMedia = n.getUserMedia || n.webkitGetUserMedia || n.mozGetUserMedia || n.msGetUserMedia;

  if (n.getUserMedia === undefined) {
    error();
  }

  if (dictionary === undefined) {
    dictionary = {
      audio: {
        mandatory: {},
        optional: []
      }
    };
  }

  n.getUserMedia(dictionary, callback, error);
};

audioSearch.sampleBuffer = null;
audioSearch.currentAnalyser = null;

audioSearch.userMediaStarted = function userMediaStarted(audioStream) {
  /**
   * This function which patches Safari requires some time to get started
   * so we call it on object creation.
   */
  audioSearch.sampleBuffer = new Float32Array(audioSearch.fftSize / 2);
  var mediaStreamSource = audioSearch.audioContext.createMediaStreamSource(audioStream);
  var analyser = audioSearch.audioContext.createAnalyser();
  analyser.fftSize = audioSearch.fftSize;
  mediaStreamSource.connect(analyser);
  audioSearch.currentAnalyser = analyser;
  audioSearch.animateLoop();
};

audioSearch.minFrequency = 55;
audioSearch.maxFrequency = 1050;

audioSearch.animateLoop = function animateLoop(time) {
  audioSearch.currentAnalyser.getFloatTimeDomainData(audioSearch.sampleBuffer); // returns best frequency or -1

  var frequencyDetected = audioSearch.autoCorrelate(audioSearch.sampleBuffer, audioSearch.audioContext.sampleRate, audioSearch.minFrequency, audioSearch.maxFrequency);
  var retValue = audioSearch.sampleCallback(frequencyDetected);

  if (retValue !== -1) {
    audioSearch.animationFrameCallbackId = window.requestAnimationFrame(audioSearch.animateLoop);
  }
};

audioSearch.pitchSmoothingSize = 40;
audioSearch.lastPitchClassesDetected = [];
audioSearch.lastPitchesDetected = [];
audioSearch.lastCentsDeviationsDetected = [];

audioSearch.smoothPitchExtraction = function smoothPitchExtraction(frequency) {
  if (frequency === -1) {
    audioSearch.lastPitchClassesDetected.shift();
    audioSearch.lastPitchesDetected.shift();
    audioSearch.lastCentsDeviationsDetected.shift();
  } else {
    var _audioSearch$midiNumD = audioSearch.midiNumDiffFromFrequency(frequency),
        _audioSearch$midiNumD2 = _slicedToArray(_audioSearch$midiNumD, 2),
        midiNum = _audioSearch$midiNumD2[0],
        _centsOff = _audioSearch$midiNumD2[1];

    if (audioSearch.lastPitchClassesDetected.length > audioSearch.pitchSmoothingSize) {
      audioSearch.lastPitchClassesDetected.shift();
      audioSearch.lastPitchesDetected.shift();
      audioSearch.lastCentsDeviationsDetected.shift();
    }

    audioSearch.lastPitchClassesDetected.push(midiNum % 12);
    audioSearch.lastPitchesDetected.push(midiNum);
    audioSearch.lastCentsDeviationsDetected.push(_centsOff);
  }

  var mostCommonPitchClass = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].statisticalMode(audioSearch.lastPitchClassesDetected);

  if (mostCommonPitchClass === null) {
    return [-1, 0];
  }

  var pitchesMatchingClass = [];
  var centsMatchingClass = [];

  for (var i = 0; i < audioSearch.lastPitchClassesDetected.length; i++) {
    if (audioSearch.lastPitchClassesDetected[i] === mostCommonPitchClass) {
      pitchesMatchingClass.push(audioSearch.lastPitchesDetected[i]);
      centsMatchingClass.push(audioSearch.lastCentsDeviationsDetected[i]);
    }
  }

  var mostCommonPitch = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].statisticalMode(pitchesMatchingClass); // find cents difference; weighing more recent samples more...

  var totalSamplePoints = 0;
  var totalSample = 0;

  for (var j = 0; j < centsMatchingClass.length; j++) {
    var weight = Math.pow(j, 2) + 1;
    totalSample += weight * centsMatchingClass[j];
    totalSamplePoints += weight;
  }

  var centsOff = Math.floor(totalSample / totalSamplePoints);
  return [mostCommonPitch, centsOff];
};

audioSearch.sampleCallback = function sampleCallback(frequency) {
  var _audioSearch$smoothPi = audioSearch.smoothPitchExtraction(frequency),
      _audioSearch$smoothPi2 = _slicedToArray(_audioSearch$smoothPi, 2),
      unused_midiNum = _audioSearch$smoothPi2[0],
      unused_centsOff = _audioSearch$smoothPi2[1];
}; // from Chris Wilson. Replace with Jordi's


audioSearch.autoCorrelate = function autoCorrelate(buf, sampleRate, minFrequency, maxFrequency) {
  var SIZE = buf.length;
  var MAX_SAMPLES = Math.floor(SIZE / 2);

  if (minFrequency === undefined) {
    minFrequency = 0;
  }

  if (maxFrequency === undefined) {
    maxFrequency = sampleRate;
  }

  var best_offset = -1;
  var best_correlation = 0;
  var rms = 0;
  var foundGoodCorrelation = false;
  var correlations = new Array(MAX_SAMPLES);

  for (var i = 0; i < SIZE; i++) {
    var val = buf[i];
    rms += val * val;
  }

  rms = Math.sqrt(rms / SIZE);

  if (rms < 0.01) {
    return -1;
  } // not enough signal


  var lastCorrelation = 1;

  for (var offset = 0; offset < MAX_SAMPLES; offset++) {
    var correlation = 0;
    var offsetFrequency = sampleRate / offset;

    if (offsetFrequency < minFrequency) {
      break;
    }

    if (offsetFrequency > maxFrequency) {
      continue;
    }

    for (var _i2 = 0; _i2 < MAX_SAMPLES; _i2++) {
      correlation += Math.abs(buf[_i2] - buf[_i2 + offset]);
    }

    correlation = 1 - correlation / MAX_SAMPLES;
    correlations[offset] = correlation; // store it, for the tweaking we need to do below.

    if (correlation > 0.9 && correlation > lastCorrelation) {
      foundGoodCorrelation = true;

      if (correlation > best_correlation) {
        best_correlation = correlation;
        best_offset = offset;
      }
    } else if (foundGoodCorrelation) {
      // short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.
      // Now we need to tweak the offset - by interpolating between the values to the left and right of the
      // best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -
      // we need to do a curve fit on correlations[] around best_offset in order to better determine precise
      // (anti-aliased) offset.
      // we know best_offset >=1,
      // since foundGoodCorrelation cannot go to true until the second pass (offset=1), and
      // we can't drop into this clause until the following pass (else if).
      var shift = (correlations[best_offset + 1] - correlations[best_offset - 1]) / correlations[best_offset];
      return sampleRate / (best_offset + 8 * shift);
    }

    lastCorrelation = correlation;
  }

  if (best_correlation > 0.01) {
    // console.log("f = " + sampleRate/best_offset + "Hz (rms: " + rms + " confidence: " + best_correlation + ")")
    return sampleRate / best_offset;
  }

  return -1; //  var best_frequency = sampleRate/best_offset;
};
/**
 *
 * @function midiNumDiffFromFrequency
 * @param {Number} frequency
 * @returns {Array<int>} [miniNumber, centsOff]
 */


audioSearch.midiNumDiffFromFrequency = function midiNumDiffFromFrequency(frequency) {
  var midiNumFloat = 12 * (Math.log(frequency / 440) / Math.log(2)) + 69;
  var midiNum = Math.round(midiNumFloat);
  var centsOff = Math.round(100 * (midiNumFloat - midiNum));
  return [midiNum, centsOff];
};

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FORTE", function() { return FORTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCDICT", function() { return SCDICT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TNMAX", function() { return TNMAX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TNIMAX", function() { return TNIMAX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TNREF", function() { return TNREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCREF", function() { return SCREF; });
/* harmony export (immutable) */ __webpack_exports__["forteIndexToInversionsAvailable"] = forteIndexToInversionsAvailable;
/* harmony export (immutable) */ __webpack_exports__["addressToTransposedNormalForm"] = addressToTransposedNormalForm;
/* harmony export (immutable) */ __webpack_exports__["addressToPrimeForm"] = addressToPrimeForm;
/* harmony export (immutable) */ __webpack_exports__["addressToIntervalVector"] = addressToIntervalVector;
/* harmony export (immutable) */ __webpack_exports__["intervalVectorToAddress"] = intervalVectorToAddress;
/* harmony export (immutable) */ __webpack_exports__["addressToZAddress"] = addressToZAddress;
/* harmony export (immutable) */ __webpack_exports__["addressToCommonNames"] = addressToCommonNames;
/* harmony export (immutable) */ __webpack_exports__["addressToForteName"] = addressToForteName;
/* harmony export (immutable) */ __webpack_exports__["seekChordTablesAddress"] = seekChordTablesAddress;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_js__ = __webpack_require__(0);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var posMod = __WEBPACK_IMPORTED_MODULE_0__common_js__["b" /* default */].posMod;
var t1;
var t2;
var t3;
var t4;
var t5;
var t6;
var t7;
var t8;
var t9;
var t10;
var t11;
var t12;
var t13;
var t14;
var t15;
var t16;
var t17;
var t18;
var t19;
var t20;
var t21;
var t22;
var t23;
var t24;
var t25;
var t26;
var t27;
var t28;
var t29;
var t30;
var t31;
var t32;
var t33;
var t34;
var t35;
var t36;
var t37;
var t38;
t1 = [[0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 11, 11, 11, 11], 0]; // 1-1

var monad = [undefined, t1];
t1 = [[0, 1], [1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-1

t2 = [[0, 2], [0, 1, 0, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-2

t3 = [[0, 3], [0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-3

t4 = [[0, 4], [0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 9, 9, 9, 9], 0]; // 2-4

t5 = [[0, 5], [0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 9, 9, 8, 8], 0]; // 2-5

t6 = [[0, 6], [0, 0, 0, 0, 0, 1], [2, 2, 2, 2, 10, 10, 10], 0]; // 2-6

var diad = [undefined, t1, t2, t3, t4, t5, t6];
t1 = [[0, 1, 2], [2, 1, 0, 0, 0, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-1

t2 = [[0, 1, 3], [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-2

t3 = [[0, 1, 4], [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-3

t4 = [[0, 1, 5], [1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 5, 6, 5, 6], 0]; // 3-4

t5 = [[0, 1, 6], [1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-5

t6 = [[0, 2, 4], [0, 2, 0, 1, 0, 0], [1, 1, 1, 1, 7, 7, 7, 7], 0]; // 3-6

t7 = [[0, 2, 5], [0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-7

t8 = [[0, 2, 6], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 6, 7, 7, 6], 0]; // 3-8

t9 = [[0, 2, 7], [0, 1, 0, 0, 2, 0], [1, 1, 0, 0, 7, 7, 4, 4], 0]; // 3-9

t10 = [[0, 3, 6], [0, 0, 2, 0, 0, 1], [1, 1, 1, 1, 8, 8, 8, 8], 0]; // 3-10

t11 = [[0, 3, 7], [0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 5, 6, 5, 5], 0]; // 3-11

t12 = [[0, 4, 8], [0, 0, 0, 3, 0, 0], [3, 3, 3, 3, 9, 9, 9, 9], 0]; // 3-12

var trichord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];
t1 = [[0, 1, 2, 3], [3, 2, 1, 0, 0, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-1

t2 = [[0, 1, 2, 4], [2, 2, 1, 1, 0, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-2

t3 = [[0, 1, 3, 4], [2, 1, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-3

t4 = [[0, 1, 2, 5], [2, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-4

t5 = [[0, 1, 2, 6], [2, 1, 0, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-5

t6 = [[0, 1, 2, 7], [2, 1, 0, 0, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-6

t7 = [[0, 1, 4, 5], [2, 0, 1, 2, 1, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-7

t8 = [[0, 1, 5, 6], [2, 0, 0, 1, 2, 1], [1, 1, 1, 1, 4, 4, 4, 4], 0]; // 4-8

t9 = [[0, 1, 6, 7], [2, 0, 0, 0, 2, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-9

t10 = [[0, 2, 3, 5], [1, 2, 2, 0, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-10

t11 = [[0, 1, 3, 5], [1, 2, 1, 1, 1, 0], [1, 0, 1, 0, 1, 3, 1, 3], 0]; // 4-11

t12 = [[0, 2, 3, 6], [1, 1, 2, 1, 0, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-12

t13 = [[0, 1, 3, 6], [1, 1, 2, 0, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-13

t14 = [[0, 2, 3, 7], [1, 1, 1, 1, 2, 0], [1, 0, 0, 0, 1, 3, 2, 3], 0]; // 4-14

t15 = [[0, 1, 4, 6], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 29]; // 4-15z

t16 = [[0, 1, 5, 7], [1, 1, 0, 1, 2, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-16

t17 = [[0, 3, 4, 7], [1, 0, 2, 2, 1, 0], [1, 1, 1, 1, 3, 3, 3, 3], 0]; // 4-17

t18 = [[0, 1, 4, 7], [1, 0, 2, 1, 1, 1], [1, 0, 0, 1, 2, 4, 4, 2], 0]; // 4-18

t19 = [[0, 1, 4, 8], [1, 0, 1, 3, 1, 0], [1, 0, 1, 0, 3, 5, 3, 5], 0]; // 4-19

t20 = [[0, 1, 5, 8], [1, 0, 1, 2, 2, 0], [1, 1, 0, 0, 3, 3, 3, 3], 0]; // 4-20

t21 = [[0, 2, 4, 6], [0, 3, 0, 2, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-21

t22 = [[0, 2, 4, 7], [0, 2, 1, 1, 2, 0], [1, 0, 0, 0, 3, 4, 1, 1], 0]; // 4-22

t23 = [[0, 2, 5, 7], [0, 2, 1, 0, 3, 0], [1, 1, 0, 0, 5, 5, 1, 1], 0]; // 4-23

t24 = [[0, 2, 4, 8], [0, 2, 0, 3, 0, 1], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 4-24

t25 = [[0, 2, 6, 8], [0, 2, 0, 2, 0, 2], [2, 2, 2, 2, 6, 6, 6, 6], 0]; // 4-25

t26 = [[0, 3, 5, 8], [0, 1, 2, 1, 2, 0], [1, 1, 0, 0, 3, 3, 2, 2], 0]; // 4-26

t27 = [[0, 2, 5, 8], [0, 1, 2, 1, 1, 1], [1, 0, 0, 0, 2, 4, 3, 2], 0]; // 4-27

t28 = [[0, 3, 6, 9], [0, 0, 4, 0, 0, 2], [4, 4, 4, 4, 8, 8, 8, 8], 0]; // 4-28

t29 = [[0, 1, 3, 7], [1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 3, 3, 1], 15]; // 4-29z

var tetrachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];
t1 = [[0, 1, 2, 3, 4], [4, 3, 2, 1, 0, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-1

t2 = [[0, 1, 2, 3, 5], [3, 3, 2, 1, 1, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-2

t3 = [[0, 1, 2, 4, 5], [3, 2, 2, 2, 1, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-3

t4 = [[0, 1, 2, 3, 6], [3, 2, 2, 1, 1, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-4

t5 = [[0, 1, 2, 3, 7], [3, 2, 1, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-5

t6 = [[0, 1, 2, 5, 6], [3, 1, 1, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-6

t7 = [[0, 1, 2, 6, 7], [3, 1, 0, 1, 3, 2], [1, 0, 0, 1, 2, 3, 3, 2], 0]; // 5-7

t8 = [[0, 2, 3, 4, 6], [2, 3, 2, 2, 0, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-8

t9 = [[0, 1, 2, 4, 6], [2, 3, 1, 2, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-9

t10 = [[0, 1, 3, 4, 6], [2, 2, 3, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-10

t11 = [[0, 2, 3, 4, 7], [2, 2, 2, 2, 2, 0], [1, 0, 1, 0, 1, 1, 1, 1], 0]; // 5-11

t12 = [[0, 1, 3, 5, 6], [2, 2, 2, 1, 2, 1], [1, 1, 1, 1, 0, 0, 0, 0], [36]]; // 5-12

t13 = [[0, 1, 2, 4, 8], [2, 2, 1, 3, 1, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-13

t14 = [[0, 1, 2, 5, 7], [2, 2, 1, 1, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-14

t15 = [[0, 1, 2, 6, 8], [2, 2, 0, 2, 2, 2], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-15

t16 = [[0, 1, 3, 4, 7], [2, 1, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-16

t17 = [[0, 1, 3, 4, 8], [2, 1, 2, 3, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], [37]]; // 5-17

t18 = [[0, 1, 4, 5, 7], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], [38]]; // 5-18

t19 = [[0, 1, 3, 6, 7], [2, 1, 2, 1, 2, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-19

t20 = [[0, 1, 3, 7, 8], [2, 1, 1, 2, 3, 1], [1, 0, 0, 0, 0, 1, 1, 1], 0]; // 5-20

t21 = [[0, 1, 4, 5, 8], [2, 0, 2, 4, 2, 0], [1, 0, 1, 0, 3, 3, 3, 3], 0]; // 5-21

t22 = [[0, 1, 4, 7, 8], [2, 0, 2, 3, 2, 1], [1, 1, 1, 1, 2, 2, 2, 2], 0]; // 5-22

t23 = [[0, 2, 3, 5, 7], [1, 3, 2, 1, 3, 0], [1, 0, 0, 0, 1, 2, 1, 1], 0]; // 5-23

t24 = [[0, 1, 3, 5, 7], [1, 3, 1, 2, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-24

t25 = [[0, 2, 3, 5, 8], [1, 2, 3, 1, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-25

t26 = [[0, 2, 4, 5, 8], [1, 2, 2, 3, 1, 1], [1, 0, 1, 0, 0, 2, 0, 2], 0]; // 5-26

t27 = [[0, 1, 3, 5, 8], [1, 2, 2, 2, 3, 0], [1, 0, 0, 0, 1, 1, 1, 0], 0]; // 5-27

t28 = [[0, 2, 3, 6, 8], [1, 2, 2, 2, 1, 2], [1, 0, 0, 1, 0, 2, 2, 0], 0]; // 5-28

t29 = [[0, 1, 3, 6, 8], [1, 2, 2, 1, 3, 1], [1, 0, 0, 0, 0, 2, 0, 0], 0]; // 5-29

t30 = [[0, 1, 4, 6, 8], [1, 2, 1, 3, 2, 1], [1, 0, 0, 0, 0, 2, 0, 1], 0]; // 5-30

t31 = [[0, 1, 3, 6, 9], [1, 1, 4, 1, 1, 2], [1, 0, 0, 1, 0, 3, 3, 0], 0]; // 5-31

t32 = [[0, 1, 4, 6, 9], [1, 1, 3, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 0]; // 5-32

t33 = [[0, 2, 4, 6, 8], [0, 4, 0, 4, 0, 2], [1, 1, 1, 1, 6, 6, 6, 6], 0]; // 5-33

t34 = [[0, 2, 4, 6, 9], [0, 3, 2, 2, 2, 1], [1, 1, 0, 0, 2, 2, 0, 0], 0]; // 5-34

t35 = [[0, 2, 4, 7, 9], [0, 3, 2, 1, 4, 0], [1, 1, 0, 0, 3, 3, 0, 0], 0]; // 5-35

t36 = [[0, 1, 2, 4, 7], [2, 2, 2, 1, 2, 1], [1, 0, 0, 1, 0, 1, 1, 0], 12]; // 5-36

t37 = [[0, 3, 4, 5, 8], [2, 1, 2, 2, 2, 0], [1, 1, 0, 0, 1, 1, 2, 2], 17]; // 5-37

t38 = [[0, 1, 2, 5, 8], [2, 1, 2, 2, 2, 1], [1, 0, 0, 0, 0, 1, 1, 0], 18]; // 5-38

var pentachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38];
t1 = [[0, 1, 2, 3, 4, 5], [5, 4, 3, 2, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-1  A

t2 = [[0, 1, 2, 3, 4, 6], [4, 4, 3, 2, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-2

t3 = [[0, 1, 2, 3, 5, 6], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 36]; // 6-3

t4 = [[0, 1, 2, 4, 5, 6], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 6-4

t5 = [[0, 1, 2, 3, 6, 7], [4, 2, 2, 2, 3, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-5

t6 = [[0, 1, 2, 5, 6, 7], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 38]; // 6-6

t7 = [[0, 1, 2, 6, 7, 8], [4, 2, 0, 2, 4, 3], [2, 2, 2, 2, 2, 2, 2, 2], 0]; // 6-7 B

t8 = [[0, 2, 3, 4, 5, 7], [3, 4, 3, 2, 3, 0], [1, 1, 1, 1, 1, 1, 1, 1], 0]; // 6-8 D

t9 = [[0, 1, 2, 3, 5, 7], [3, 4, 2, 2, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-9

t10 = [[0, 1, 3, 4, 5, 7], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 39]; // 6-10

t11 = [[0, 1, 2, 4, 5, 7], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 40]; // 6-11

t12 = [[0, 1, 2, 4, 6, 7], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 41]; // 6-12

t13 = [[0, 1, 3, 4, 6, 7], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 42]; // 6-13

t14 = [[0, 1, 3, 4, 5, 8], [3, 2, 3, 4, 3, 0], [1, 0, 1, 0, 1, 0, 1, 0], 0]; // 6-14

t15 = [[0, 1, 2, 4, 5, 8], [3, 2, 3, 4, 2, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-15

t16 = [[0, 1, 4, 5, 6, 8], [3, 2, 2, 4, 3, 1], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-16

t17 = [[0, 1, 2, 4, 7, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 43]; // 6-17

t18 = [[0, 1, 2, 5, 7, 8], [3, 2, 2, 2, 4, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-18

t19 = [[0, 1, 3, 4, 7, 8], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 44]; // 6-19

t20 = [[0, 1, 4, 5, 8, 9], [3, 0, 3, 6, 3, 0], [3, 3, 3, 3, 3, 3, 3, 3], 0]; // 6-20 E

t21 = [[0, 2, 3, 4, 6, 8], [2, 4, 2, 4, 1, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-21

t22 = [[0, 1, 2, 4, 6, 8], [2, 4, 1, 4, 2, 2], [1, 0, 1, 0, 0, 1, 0, 1], 0]; // 6-22

t23 = [[0, 2, 3, 5, 6, 8], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 45]; // 6-23

t24 = [[0, 1, 3, 4, 6, 8], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 46]; // 6-24

t25 = [[0, 1, 3, 5, 6, 8], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 47]; // 6-25

t26 = [[0, 1, 3, 5, 7, 8], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 48]; // 6-26

t27 = [[0, 1, 3, 4, 6, 9], [2, 2, 5, 2, 2, 2], [1, 0, 0, 1, 0, 1, 1, 0], 0]; // 6-27

t28 = [[0, 1, 3, 5, 6, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 49]; // 6-28

t29 = [[0, 1, 3, 6, 8, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 50]; // 6- d29

t30 = [[0, 1, 3, 6, 7, 9], [2, 2, 4, 2, 2, 3], [2, 0, 0, 2, 0, 2, 2, 0], 0]; // 6-30

t31 = [[0, 1, 3, 5, 8, 9], [2, 2, 3, 4, 3, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-31

t32 = [[0, 2, 4, 5, 7, 9], [1, 4, 3, 2, 5, 0], [1, 1, 0, 0, 1, 1, 0, 0], 0]; // 6-32 C

t33 = [[0, 2, 3, 5, 7, 9], [1, 4, 3, 2, 4, 1], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-33

t34 = [[0, 1, 3, 5, 7, 9], [1, 4, 2, 4, 2, 2], [1, 0, 0, 0, 0, 1, 0, 0], 0]; // 6-34

t35 = [[0, 2, 4, 6, 8, 10], [0, 6, 0, 6, 0, 3], [6, 6, 6, 6, 6, 6, 6, 6], 0]; // 6-35 F

t36 = [[0, 1, 2, 3, 4, 7], [4, 3, 3, 2, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 3]; // 6-36

t37 = [[0, 1, 2, 3, 4, 8], [4, 3, 2, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 4]; // 6-37

t38 = [[0, 1, 2, 3, 7, 8], [4, 2, 1, 2, 4, 2], [1, 1, 0, 0, 0, 0, 1, 1], 6]; // 6-38

var t39 = [[0, 2, 3, 4, 5, 8], [3, 3, 3, 3, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0], 10]; // 6-39

var t40 = [[0, 1, 2, 3, 5, 8], [3, 3, 3, 2, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 11]; // 6-40

var t41 = [[0, 1, 2, 3, 6, 8], [3, 3, 2, 2, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 6-41

var t42 = [[0, 1, 2, 3, 6, 9], [3, 2, 4, 2, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 13]; // 6-42

var t43 = [[0, 1, 2, 5, 6, 8], [3, 2, 2, 3, 3, 2], [1, 0, 0, 1, 0, 0, 0, 0], 17]; // 6-43

var t44 = [[0, 1, 2, 5, 6, 9], [3, 1, 3, 4, 3, 1], [1, 0, 0, 0, 0, 0, 1, 0], 19]; // 6-44

var t45 = [[0, 2, 3, 4, 6, 9], [2, 3, 4, 2, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 23]; // 6-45

var t46 = [[0, 1, 2, 4, 6, 9], [2, 3, 3, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 24]; // 6-46

var t47 = [[0, 1, 2, 4, 7, 9], [2, 3, 3, 2, 4, 1], [1, 0, 0, 0, 0, 0, 0, 0], 25]; // 6-47

var t48 = [[0, 1, 2, 5, 7, 9], [2, 3, 2, 3, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 26]; // 6-48

var t49 = [[0, 1, 3, 4, 7, 9], [2, 2, 4, 3, 2, 2], [1, 1, 1, 1, 0, 0, 0, 0], 28]; // 6-49

var t50 = [[0, 1, 4, 6, 7, 9], [2, 2, 4, 2, 3, 2], [1, 1, 0, 0, 0, 0, 0, 0], 29]; // 6-50

var hexachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50];
t1 = [[0, 1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-1

t2 = [[0, 1, 2, 3, 4, 5, 7], [5, 5, 4, 3, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-2

t3 = [[0, 1, 2, 3, 4, 5, 8], [5, 4, 4, 4, 3, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-3

t4 = [[0, 1, 2, 3, 4, 6, 7], [5, 4, 4, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-4

t5 = [[0, 1, 2, 3, 5, 6, 7], [5, 4, 3, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-5

t6 = [[0, 1, 2, 3, 4, 7, 8], [5, 3, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-6

t7 = [[0, 1, 2, 3, 6, 7, 8], [5, 3, 2, 3, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-7

t8 = [[0, 2, 3, 4, 5, 6, 8], [4, 5, 4, 4, 2, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-8

t9 = [[0, 1, 2, 3, 4, 6, 8], [4, 5, 3, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-9

t10 = [[0, 1, 2, 3, 4, 6, 9], [4, 4, 5, 3, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-10

t11 = [[0, 1, 3, 4, 5, 6, 8], [4, 4, 4, 4, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-11

t12 = [[0, 1, 2, 3, 4, 7, 9], [4, 4, 4, 3, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 36]; // 7-12 z

t13 = [[0, 1, 2, 4, 5, 6, 8], [4, 4, 3, 5, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-13

t14 = [[0, 1, 2, 3, 5, 7, 8], [4, 4, 3, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-14

t15 = [[0, 1, 2, 4, 6, 7, 8], [4, 4, 2, 4, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-15

t16 = [[0, 1, 2, 3, 5, 6, 9], [4, 3, 5, 4, 3, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-16

t17 = [[0, 1, 2, 4, 5, 6, 9], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 37]; // 7-17 z

t18 = [[0, 1, 2, 3, 5, 8, 9], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 38]; // 7-18 z

t19 = [[0, 1, 2, 3, 6, 7, 9], [4, 3, 4, 3, 4, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-19

t20 = [[0, 1, 2, 4, 7, 8, 9], [4, 3, 3, 4, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-20

t21 = [[0, 1, 2, 4, 5, 8, 9], [4, 2, 4, 6, 4, 1], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-21

t22 = [[0, 1, 2, 5, 6, 8, 9], [4, 2, 4, 5, 4, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-22

t23 = [[0, 2, 3, 4, 5, 7, 9], [3, 5, 4, 3, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-23

t24 = [[0, 1, 2, 3, 5, 7, 9], [3, 5, 3, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-24

t25 = [[0, 2, 3, 4, 6, 7, 9], [3, 4, 5, 3, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-25

t26 = [[0, 1, 3, 4, 5, 7, 9], [3, 4, 4, 5, 3, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 7-26

t27 = [[0, 1, 2, 4, 5, 7, 9], [3, 4, 4, 4, 5, 1], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-27

t28 = [[0, 1, 3, 5, 6, 7, 9], [3, 4, 4, 4, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-28

t29 = [[0, 1, 2, 4, 6, 7, 9], [3, 4, 4, 3, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-29

t30 = [[0, 1, 2, 4, 6, 8, 9], [3, 4, 3, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-30

t31 = [[0, 1, 3, 4, 6, 7, 9], [3, 3, 6, 3, 3, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 7-31

t32 = [[0, 1, 3, 4, 6, 8, 9], [3, 3, 5, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 7-32

t33 = [[0, 1, 2, 4, 6, 8, 10], [2, 6, 2, 6, 2, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 7-33

t34 = [[0, 1, 3, 4, 6, 8, 10], [2, 5, 4, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-34

t35 = [[0, 1, 3, 5, 6, 8, 10], [2, 5, 4, 3, 6, 1], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 7-35

t36 = [[0, 1, 2, 3, 5, 6, 8], [4, 4, 4, 3, 4, 2], [1, 0, 0, 1, 0, 0, 0, 0], 12]; // 7-36 z

t37 = [[0, 1, 3, 4, 5, 7, 8], [4, 3, 4, 5, 4, 1], [1, 1, 0, 0, 0, 0, 0, 0], 17]; // 7-37 z

t38 = [[0, 1, 2, 4, 5, 7, 8], [4, 3, 4, 4, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 18]; // 7-38 z

var septachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38];
t1 = [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 5, 4, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-1

t2 = [[0, 1, 2, 3, 4, 5, 6, 8], [6, 6, 5, 5, 4, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-2

t3 = [[0, 1, 2, 3, 4, 5, 6, 9], [6, 5, 6, 5, 4, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-3

t4 = [[0, 1, 2, 3, 4, 5, 7, 8], [6, 5, 5, 5, 5, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-4

t5 = [[0, 1, 2, 3, 4, 6, 7, 8], [6, 5, 4, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-5

t6 = [[0, 1, 2, 3, 5, 6, 7, 8], [6, 5, 4, 4, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-6

t7 = [[0, 1, 2, 3, 4, 5, 8, 9], [6, 4, 5, 6, 5, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-7

t8 = [[0, 1, 2, 3, 4, 7, 8, 9], [6, 4, 4, 5, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-8

t9 = [[0, 1, 2, 3, 6, 7, 8, 9], [6, 4, 4, 4, 6, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-9

t10 = [[0, 2, 3, 4, 5, 6, 7, 9], [5, 6, 6, 4, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-10

t11 = [[0, 1, 2, 3, 4, 5, 7, 9], [5, 6, 5, 5, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-11

t12 = [[0, 1, 3, 4, 5, 6, 7, 9], [5, 5, 6, 5, 4, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-12

t13 = [[0, 1, 2, 3, 4, 6, 7, 9], [5, 5, 6, 4, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-13

t14 = [[0, 1, 2, 4, 5, 6, 7, 9], [5, 5, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-14

t15 = [[0, 1, 2, 3, 4, 6, 8, 9], [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 29]; // 8-15  zz

t16 = [[0, 1, 2, 3, 5, 7, 8, 9], [5, 5, 4, 5, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-16

t17 = [[0, 1, 3, 4, 5, 6, 8, 9], [5, 4, 6, 6, 5, 2], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-17

t18 = [[0, 1, 2, 3, 5, 6, 8, 9], [5, 4, 6, 5, 5, 3], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 8-18

t19 = [[0, 1, 2, 4, 5, 6, 8, 9], [5, 4, 5, 7, 5, 2], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 8-19

t20 = [[0, 1, 2, 4, 5, 7, 8, 9], [5, 4, 5, 6, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-20

t21 = [[0, 1, 2, 3, 4, 6, 8, 10], [4, 7, 4, 6, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-21

t22 = [[0, 1, 2, 3, 5, 6, 8, 10], [4, 6, 5, 5, 6, 2], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-22

t23 = [[0, 1, 2, 3, 5, 7, 8, 10], [4, 6, 5, 4, 7, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-23

t24 = [[0, 1, 2, 4, 5, 6, 8, 10], [4, 6, 4, 7, 4, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 8-24

t25 = [[0, 1, 2, 4, 6, 7, 8, 10], [4, 6, 4, 6, 4, 4], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 8-25

t26 = [[0, 1, 2, 4, 5, 7, 9, 10], [4, 5, 6, 5, 6, 2], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 8-26

t27 = [[0, 1, 2, 4, 5, 7, 8, 10], [4, 5, 6, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 8-27

t28 = [[0, 1, 3, 4, 6, 7, 9, 10], [4, 4, 8, 4, 4, 4], [4, 4, 4, 4, 0, 0, 0, 0], 0]; // 8-28

t29 = [[0, 1, 2, 3, 5, 6, 7, 9], [5, 5, 5, 5, 5, 3], [1, 0, 0, 0, 0, 0, 0, 0], 15]; // 8-29

var octachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29];
t1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8], [8, 7, 6, 6, 6, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-1

t2 = [[0, 1, 2, 3, 4, 5, 6, 7, 9], [7, 7, 7, 6, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-2

t3 = [[0, 1, 2, 3, 4, 5, 6, 8, 9], [7, 6, 7, 7, 6, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-3

t4 = [[0, 1, 2, 3, 4, 5, 7, 8, 9], [7, 6, 6, 7, 7, 3], [1, 0, 1, 0, 0, 0, 0, 0], 0]; // 9-4

t5 = [[0, 1, 2, 3, 4, 6, 7, 8, 9], [7, 6, 6, 6, 7, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-5

t6 = [[0, 1, 2, 3, 4, 5, 6, 8, 10], [6, 8, 6, 7, 6, 3], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-6

t7 = [[0, 1, 2, 3, 4, 5, 7, 8, 10], [6, 7, 7, 6, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-7

t8 = [[0, 1, 2, 3, 4, 6, 7, 8, 10], [6, 7, 6, 7, 6, 4], [1, 0, 0, 1, 0, 0, 0, 0], 0]; // 9-8

t9 = [[0, 1, 2, 3, 5, 6, 7, 8, 10], [6, 7, 6, 6, 8, 3], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 9-9

t10 = [[0, 1, 2, 3, 4, 6, 7, 9, 10], [6, 6, 8, 6, 6, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 9-10

t11 = [[0, 1, 2, 3, 5, 6, 7, 9, 10], [6, 6, 7, 7, 7, 3], [1, 0, 0, 0, 0, 0, 0, 0], 0]; // 9-11

t12 = [[0, 1, 2, 4, 5, 6, 8, 9, 10], [6, 6, 6, 9, 6, 3], [3, 3, 3, 3, 0, 0, 0, 0], 0]; // 9-12

var nonachord = [undefined, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12];
t1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [9, 8, 8, 8, 8, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-1

t2 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10], [8, 9, 8, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-2

t3 = [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10], [8, 8, 9, 8, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-3

t4 = [[0, 1, 2, 3, 4, 5, 6, 8, 9, 10], [8, 8, 8, 9, 8, 4], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 10-4

t5 = [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10], [8, 8, 8, 8, 9, 4], [1, 1, 0, 0, 0, 0, 0, 0], 0]; // 10-5

t6 = [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10], [8, 8, 8, 8, 8, 5], [2, 2, 2, 2, 0, 0, 0, 0], 0]; // 10-6

var decachord = [undefined, t1, t2, t3, t4, t5, t6];
t1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [10, 10, 10, 10, 10, 5], [1, 1, 1, 1, 0, 0, 0, 0], 0]; // 11-1

var undecachord = [undefined, t1];
t1 = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 12, 12, 12, 12, 6], [12, 12, 12, 12, 0, 0, 0, 0], 0]; // 12-1

var dodecachord = [undefined, t1]; // -------------------------------------------------------------------------------

var FORTE = [undefined, monad, diad, trichord, tetrachord, pentachord, hexachord, septachord, octachord, nonachord, decachord, undecachord, dodecachord]; // to access the data for a single form, use:
// forte   [size[tetra]] = 4
//         [number[forte]] = 3
//         [data[0=pitches, 1=ICV, 2=invariance vector [morris], 3 = Z-relation]]
//         [element in list]
//-------------------------------------------------------------------------------
// cardinality 1

var card_1 = {
  '1,0': [FORTE[1][1][0], // 1
  FORTE[1][1][2], // var
  FORTE[1][1][1]]
}; // cardinality 2

var card_2 = {
  '1,0': [FORTE[2][1][0], // 2
  FORTE[2][1][2], // var
  FORTE[2][1][1]],
  '2,0': [FORTE[2][2][0], // 3
  FORTE[2][2][2], // var
  FORTE[2][2][1]],
  '3,0': [FORTE[2][3][0], // 4
  FORTE[2][3][2], // var
  FORTE[2][3][1]],
  '4,0': [FORTE[2][4][0], // 5
  FORTE[2][4][2], // var
  FORTE[2][4][1]],
  '5,0': [FORTE[2][5][0], // 6
  FORTE[2][5][2], // var
  FORTE[2][5][1]],
  '6,0': [FORTE[2][6][0], // 7
  FORTE[2][6][2], // var
  FORTE[2][6][1]]
}; // cardinality 3

var card_3 = {
  '1,0': [FORTE[3][1][0], // 8
  FORTE[3][1][2], // var
  FORTE[3][1][1]],
  '2,1': [FORTE[3][2][0], // 9
  FORTE[3][2][2], // var
  FORTE[3][2][1]],
  '2,-1': [[0, 2, 3], // 10
  FORTE[3][2][2], // var
  FORTE[3][2][1]],
  '3,1': [FORTE[3][3][0], // 11
  FORTE[3][3][2], // var
  FORTE[3][3][1]],
  '3,-1': [[0, 3, 4], // 12
  FORTE[3][3][2], // var
  FORTE[3][3][1]],
  '4,1': [FORTE[3][4][0], // 13
  FORTE[3][4][2], // var
  FORTE[3][4][1]],
  '4,-1': [[0, 4, 5], // 14
  FORTE[3][4][2], // var
  FORTE[3][4][1]],
  '5,1': [FORTE[3][5][0], // 15
  FORTE[3][5][2], // var
  FORTE[3][5][1]],
  '5,-1': [[0, 5, 6], // 16
  FORTE[3][5][2], // var
  FORTE[3][5][1]],
  '6,0': [FORTE[3][6][0], // 17
  FORTE[3][6][2], // var
  FORTE[3][6][1]],
  '7,1': [FORTE[3][7][0], // 18
  FORTE[3][7][2], // var
  FORTE[3][7][1]],
  '7,-1': [[0, 3, 5], // 19
  FORTE[3][7][2], // var
  FORTE[3][7][1]],
  '8,1': [FORTE[3][8][0], // 20
  FORTE[3][8][2], // var
  FORTE[3][8][1]],
  '8,-1': [[0, 4, 6], // 21
  FORTE[3][8][2], // var
  FORTE[3][8][1]],
  '9,0': [FORTE[3][9][0], // 22
  FORTE[3][9][2], // var
  FORTE[3][9][1]],
  '10,0': [FORTE[3][10][0], // 23
  FORTE[3][10][2], // var
  FORTE[3][10][1]],
  '11,1': [FORTE[3][11][0], // 24
  FORTE[3][11][2], // var
  FORTE[3][11][1]],
  '11,-1': [[0, 4, 7], // 25
  FORTE[3][11][2], // var
  FORTE[3][11][1]],
  '12,0': [FORTE[3][12][0], // 26
  FORTE[3][12][2], // var
  FORTE[3][12][1]]
}; // cardinality 4

var card_4 = {
  '1,0': [FORTE[4][1][0], // 27
  FORTE[4][1][2], // var
  FORTE[4][1][1]],
  '2,1': [FORTE[4][2][0], // 28
  FORTE[4][2][2], // var
  FORTE[4][2][1]],
  '2,-1': [[0, 2, 3, 4], // 29
  FORTE[4][2][2], // var
  FORTE[4][2][1]],
  '3,0': [FORTE[4][3][0], // 30
  FORTE[4][3][2], // var
  FORTE[4][3][1]],
  '4,1': [FORTE[4][4][0], // 31
  FORTE[4][4][2], // var
  FORTE[4][4][1]],
  '4,-1': [[0, 3, 4, 5], // 32
  FORTE[4][4][2], // var
  FORTE[4][4][1]],
  '5,1': [FORTE[4][5][0], // 33
  FORTE[4][5][2], // var
  FORTE[4][5][1]],
  '5,-1': [[0, 4, 5, 6], // 34
  FORTE[4][5][2], // var
  FORTE[4][5][1]],
  '6,0': [FORTE[4][6][0], // 35
  FORTE[4][6][2], // var
  FORTE[4][6][1]],
  '7,0': [FORTE[4][7][0], // 36
  FORTE[4][7][2], // var
  FORTE[4][7][1]],
  '8,0': [FORTE[4][8][0], // 37
  FORTE[4][8][2], // var
  FORTE[4][8][1]],
  '9,0': [FORTE[4][9][0], // 38
  FORTE[4][9][2], // var
  FORTE[4][9][1]],
  '10,0': [FORTE[4][10][0], // 39
  FORTE[4][10][2], // var
  FORTE[4][10][1]],
  '11,1': [FORTE[4][11][0], // 40
  FORTE[4][11][2], // var
  FORTE[4][11][1]],
  '11,-1': [[0, 2, 4, 5], // 41
  FORTE[4][11][2], // var
  FORTE[4][11][1]],
  '12,1': [FORTE[4][12][0], // 42
  FORTE[4][12][2], // var
  FORTE[4][12][1]],
  '12,-1': [[0, 3, 4, 6], // 43
  FORTE[4][12][2], // var
  FORTE[4][12][1]],
  '13,1': [FORTE[4][13][0], // 44
  FORTE[4][13][2], // var
  FORTE[4][13][1]],
  '13,-1': [[0, 3, 5, 6], // 45
  FORTE[4][13][2], // var
  FORTE[4][13][1]],
  '14,1': [FORTE[4][14][0], // 46
  FORTE[4][14][2], // var
  FORTE[4][14][1]],
  '14,-1': [[0, 4, 5, 7], // 47
  FORTE[4][14][2], // var
  FORTE[4][14][1]],
  '15,1': [FORTE[4][15][0], // 48
  FORTE[4][15][2], // var
  FORTE[4][15][1]],
  '15,-1': [[0, 2, 5, 6], // 49
  FORTE[4][15][2], // var
  FORTE[4][15][1]],
  '16,1': [FORTE[4][16][0], // 50
  FORTE[4][16][2], // var
  FORTE[4][16][1]],
  '16,-1': [[0, 2, 6, 7], // 51
  FORTE[4][16][2], // var
  FORTE[4][16][1]],
  '17,0': [FORTE[4][17][0], // 52
  FORTE[4][17][2], // var
  FORTE[4][17][1]],
  '18,1': [FORTE[4][18][0], // 53
  FORTE[4][18][2], // var
  FORTE[4][18][1]],
  '18,-1': [[0, 3, 6, 7], // 54
  FORTE[4][18][2], // var
  FORTE[4][18][1]],
  '19,1': [FORTE[4][19][0], // 55
  FORTE[4][19][2], // var
  FORTE[4][19][1]],
  '19,-1': [[0, 4, 7, 8], // 56
  FORTE[4][19][2], // var
  FORTE[4][19][1]],
  '20,0': [FORTE[4][20][0], // 57
  FORTE[4][20][2], // var
  FORTE[4][20][1]],
  '21,0': [FORTE[4][21][0], // 58
  FORTE[4][21][2], // var
  FORTE[4][21][1]],
  '22,1': [FORTE[4][22][0], // 59
  FORTE[4][22][2], // var
  FORTE[4][22][1]],
  '22,-1': [[0, 3, 5, 7], // 60
  FORTE[4][22][2], // var
  FORTE[4][22][1]],
  '23,0': [FORTE[4][23][0], // 61
  FORTE[4][23][2], // var
  FORTE[4][23][1]],
  '24,0': [FORTE[4][24][0], // 62
  FORTE[4][24][2], // var
  FORTE[4][24][1]],
  '25,0': [FORTE[4][25][0], // 63
  FORTE[4][25][2], // var
  FORTE[4][25][1]],
  '26,0': [FORTE[4][26][0], // 64
  FORTE[4][26][2], // var
  FORTE[4][26][1]],
  '27,1': [FORTE[4][27][0], // 65
  FORTE[4][27][2], // var
  FORTE[4][27][1]],
  '27,-1': [[0, 3, 6, 8], // 66
  FORTE[4][27][2], // var
  FORTE[4][27][1]],
  '28,0': [FORTE[4][28][0], // 67
  FORTE[4][28][2], // var
  FORTE[4][28][1]],
  '29,1': [FORTE[4][29][0], // 68
  FORTE[4][29][2], // var
  FORTE[4][29][1]],
  '29,-1': [[0, 4, 6, 7], // 69
  FORTE[4][29][2], // var
  FORTE[4][29][1]]
}; // cardinality 5

var card_5 = {
  '1,0': [FORTE[5][1][0], // 70
  FORTE[5][1][2], // var
  FORTE[5][1][1]],
  '2,1': [FORTE[5][2][0], // 71
  FORTE[5][2][2], // var
  FORTE[5][2][1]],
  '2,-1': [[0, 2, 3, 4, 5], // 72
  FORTE[5][2][2], // var
  FORTE[5][2][1]],
  '3,1': [FORTE[5][3][0], // 73
  FORTE[5][3][2], // var
  FORTE[5][3][1]],
  '3,-1': [[0, 1, 3, 4, 5], // 74
  FORTE[5][3][2], // var
  FORTE[5][3][1]],
  '4,1': [FORTE[5][4][0], // 75
  FORTE[5][4][2], // var
  FORTE[5][4][1]],
  '4,-1': [[0, 3, 4, 5, 6], // 76
  FORTE[5][4][2], // var
  FORTE[5][4][1]],
  '5,1': [FORTE[5][5][0], // 77
  FORTE[5][5][2], // var
  FORTE[5][5][1]],
  '5,-1': [[0, 4, 5, 6, 7], // 78
  FORTE[5][5][2], // var
  FORTE[5][5][1]],
  '6,1': [FORTE[5][6][0], // 79
  FORTE[5][6][2], // var
  FORTE[5][6][1]],
  '6,-1': [[0, 1, 4, 5, 6], // 80
  FORTE[5][6][2], // var
  FORTE[5][6][1]],
  '7,1': [FORTE[5][7][0], // 81
  FORTE[5][7][2], // var
  FORTE[5][7][1]],
  '7,-1': [[0, 1, 5, 6, 7], // 82
  FORTE[5][7][2], // var
  FORTE[5][7][1]],
  '8,0': [FORTE[5][8][0], // 83
  FORTE[5][8][2], // var
  FORTE[5][8][1]],
  '9,1': [FORTE[5][9][0], // 84
  FORTE[5][9][2], // var
  FORTE[5][9][1]],
  '9,-1': [[0, 2, 4, 5, 6], // 85
  FORTE[5][9][2], // var
  FORTE[5][9][1]],
  '10,1': [FORTE[5][10][0], // 86
  FORTE[5][10][2], // var
  FORTE[5][10][1]],
  '10,-1': [[0, 2, 3, 5, 6], // 87
  FORTE[5][10][2], // var
  FORTE[5][10][1]],
  '11,1': [FORTE[5][11][0], // 88
  FORTE[5][11][2], // var
  FORTE[5][11][1]],
  '11,-1': [[0, 3, 4, 5, 7], // 89
  FORTE[5][11][2], // var
  FORTE[5][11][1]],
  '12,0': [FORTE[5][12][0], // 90
  FORTE[5][12][2], // var
  FORTE[5][12][1]],
  '13,1': [FORTE[5][13][0], // 91
  FORTE[5][13][2], // var
  FORTE[5][13][1]],
  '13,-1': [[0, 4, 6, 7, 8], // 92
  FORTE[5][13][2], // var
  FORTE[5][13][1]],
  '14,1': [FORTE[5][14][0], // 93
  FORTE[5][14][2], // var
  FORTE[5][14][1]],
  '14,-1': [[0, 2, 5, 6, 7], // 94
  FORTE[5][14][2], // var
  FORTE[5][14][1]],
  '15,0': [FORTE[5][15][0], // 95
  FORTE[5][15][2], // var
  FORTE[5][15][1]],
  '16,1': [FORTE[5][16][0], // 96
  FORTE[5][16][2], // var
  FORTE[5][16][1]],
  '16,-1': [[0, 3, 4, 6, 7], // 97
  FORTE[5][16][2], // var
  FORTE[5][16][1]],
  '17,0': [FORTE[5][17][0], // 98
  FORTE[5][17][2], // var
  FORTE[5][17][1]],
  '18,1': [FORTE[5][18][0], // 99
  FORTE[5][18][2], // var
  FORTE[5][18][1]],
  '18,-1': [[0, 2, 3, 6, 7], // 100
  FORTE[5][18][2], // var
  FORTE[5][18][1]],
  '19,1': [FORTE[5][19][0], // 101
  FORTE[5][19][2], // var
  FORTE[5][19][1]],
  '19,-1': [[0, 1, 4, 6, 7], // 102
  FORTE[5][19][2], // var
  FORTE[5][19][1]],
  '20,1': [FORTE[5][20][0], // 103
  FORTE[5][20][2], // var
  FORTE[5][20][1]],
  '20,-1': [[0, 1, 5, 7, 8], // 104
  FORTE[5][20][2], // var
  FORTE[5][20][1]],
  '21,1': [FORTE[5][21][0], // 105
  FORTE[5][21][2], // var
  FORTE[5][21][1]],
  '21,-1': [[0, 3, 4, 7, 8], // 106
  FORTE[5][21][2], // var
  FORTE[5][21][1]],
  '22,0': [FORTE[5][22][0], // 107
  FORTE[5][22][2], // var
  FORTE[5][22][1]],
  '23,1': [FORTE[5][23][0], // 108
  FORTE[5][23][2], // var
  FORTE[5][23][1]],
  '23,-1': [[0, 2, 4, 5, 7], // 109
  FORTE[5][23][2], // var
  FORTE[5][23][1]],
  '24,1': [FORTE[5][24][0], // 110
  FORTE[5][24][2], // var
  FORTE[5][24][1]],
  '24,-1': [[0, 2, 4, 6, 7], // 111
  FORTE[5][24][2], // var
  FORTE[5][24][1]],
  '25,1': [FORTE[5][25][0], // 112
  FORTE[5][25][2], // var
  FORTE[5][25][1]],
  '25,-1': [[0, 3, 5, 6, 8], // 113
  FORTE[5][25][2], // var
  FORTE[5][25][1]],
  '26,1': [FORTE[5][26][0], // 114
  FORTE[5][26][2], // var
  FORTE[5][26][1]],
  '26,-1': [[0, 3, 4, 6, 8], // 115
  FORTE[5][26][2], // var
  FORTE[5][26][1]],
  '27,1': [FORTE[5][27][0], // 116
  FORTE[5][27][2], // var
  FORTE[5][27][1]],
  '27,-1': [[0, 3, 5, 7, 8], // 117
  FORTE[5][27][2], // var
  FORTE[5][27][1]],
  '28,1': [FORTE[5][28][0], // 118
  FORTE[5][28][2], // var
  FORTE[5][28][1]],
  '28,-1': [[0, 2, 5, 6, 8], // 119
  FORTE[5][28][2], // var
  FORTE[5][28][1]],
  '29,1': [FORTE[5][29][0], // 120
  FORTE[5][29][2], // var
  FORTE[5][29][1]],
  '29,-1': [[0, 2, 5, 7, 8], // 121
  FORTE[5][29][2], // var
  FORTE[5][29][1]],
  '30,1': [FORTE[5][30][0], // 122
  FORTE[5][30][2], // var
  FORTE[5][30][1]],
  '30,-1': [[0, 2, 4, 7, 8], // 123
  FORTE[5][30][2], // var
  FORTE[5][30][1]],
  '31,1': [FORTE[5][31][0], // 124
  FORTE[5][31][2], // var
  FORTE[5][31][1]],
  '31,-1': [[0, 3, 6, 8, 9], // 125
  FORTE[5][31][2], // var
  FORTE[5][31][1]],
  '32,1': [FORTE[5][32][0], // 126
  FORTE[5][32][2], // var
  FORTE[5][32][1]],
  '32,-1': [[0, 3, 5, 8, 9], // 127
  FORTE[5][32][2], // var
  FORTE[5][32][1]],
  '33,0': [FORTE[5][33][0], // 128
  FORTE[5][33][2], // var
  FORTE[5][33][1]],
  '34,0': [FORTE[5][34][0], // 129
  FORTE[5][34][2], // var
  FORTE[5][34][1]],
  '35,0': [FORTE[5][35][0], // 130
  FORTE[5][35][2], // var
  FORTE[5][35][1]],
  '36,1': [FORTE[5][36][0], // 131
  FORTE[5][36][2], // var
  FORTE[5][36][1]],
  '36,-1': [[0, 3, 5, 6, 7], // 132
  FORTE[5][36][2], // var
  FORTE[5][36][1]],
  '37,0': [FORTE[5][37][0], // 133
  FORTE[5][37][2], // var
  FORTE[5][37][1]],
  '38,1': [FORTE[5][38][0], // 134
  FORTE[5][38][2], // var
  FORTE[5][38][1]],
  '38,-1': [[0, 3, 6, 7, 8], // 135
  FORTE[5][38][2], // var
  FORTE[5][38][1]]
}; // cardinality 6

var card_6 = {
  '1,0': [FORTE[6][1][0], // 136
  FORTE[6][1][2], // var
  FORTE[6][1][1]],
  '2,1': [FORTE[6][2][0], // 137
  FORTE[6][2][2], // var
  FORTE[6][2][1]],
  '2,-1': [[0, 2, 3, 4, 5, 6], // 138
  FORTE[6][2][2], // var
  FORTE[6][2][1]],
  '3,1': [FORTE[6][3][0], // 139
  FORTE[6][3][2], // var
  FORTE[6][3][1]],
  '3,-1': [[0, 1, 3, 4, 5, 6], // 140
  FORTE[6][3][2], // var
  FORTE[6][3][1]],
  '4,0': [FORTE[6][4][0], // 141
  FORTE[6][4][2], // var
  FORTE[6][4][1]],
  '5,1': [FORTE[6][5][0], // 142
  FORTE[6][5][2], // var
  FORTE[6][5][1]],
  '5,-1': [[0, 1, 4, 5, 6, 7], // 143
  FORTE[6][5][2], // var
  FORTE[6][5][1]],
  '6,0': [FORTE[6][6][0], // 144
  FORTE[6][6][2], // var
  FORTE[6][6][1]],
  '7,0': [FORTE[6][7][0], // 145
  FORTE[6][7][2], // var
  FORTE[6][7][1]],
  '8,0': [FORTE[6][8][0], // 146
  FORTE[6][8][2], // var
  FORTE[6][8][1]],
  '9,1': [FORTE[6][9][0], // 147
  FORTE[6][9][2], // var
  FORTE[6][9][1]],
  '9,-1': [[0, 2, 4, 5, 6, 7], // 148
  FORTE[6][9][2], // var
  FORTE[6][9][1]],
  '10,1': [FORTE[6][10][0], // 149
  FORTE[6][10][2], // var
  FORTE[6][10][1]],
  '10,-1': [[0, 2, 3, 4, 6, 7], // 150
  FORTE[6][10][2], // var
  FORTE[6][10][1]],
  '11,1': [FORTE[6][11][0], // 151
  FORTE[6][11][2], // var
  FORTE[6][11][1]],
  '11,-1': [[0, 2, 3, 5, 6, 7], // 152
  FORTE[6][11][2], // var
  FORTE[6][11][1]],
  '12,1': [FORTE[6][12][0], // 153
  FORTE[6][12][2], // var
  FORTE[6][12][1]],
  '12,-1': [[0, 1, 3, 5, 6, 7], // 154
  FORTE[6][12][2], // var
  FORTE[6][12][1]],
  '13,0': [FORTE[6][13][0], // 155
  FORTE[6][13][2], // var
  FORTE[6][13][1]],
  '14,1': [FORTE[6][14][0], // 156
  FORTE[6][14][2], // var
  FORTE[6][14][1]],
  '14,-1': [[0, 3, 4, 5, 7, 8], // 157
  FORTE[6][14][2], // var
  FORTE[6][14][1]],
  '15,1': [FORTE[6][15][0], // 158
  FORTE[6][15][2], // var
  FORTE[6][15][1]],
  '15,-1': [[0, 3, 4, 6, 7, 8], // 159
  FORTE[6][15][2], // var
  FORTE[6][15][1]],
  '16,1': [FORTE[6][16][0], // 160
  FORTE[6][16][2], // var
  FORTE[6][16][1]],
  '16,-1': [[0, 2, 3, 4, 7, 8], // 161
  FORTE[6][16][2], // var
  FORTE[6][16][1]],
  '17,1': [FORTE[6][17][0], // 162
  FORTE[6][17][2], // var
  FORTE[6][17][1]],
  '17,-1': [[0, 1, 4, 6, 7, 8], // 163
  FORTE[6][17][2], // var
  FORTE[6][17][1]],
  '18,1': [FORTE[6][18][0], // 164
  FORTE[6][18][2], // var
  FORTE[6][18][1]],
  '18,-1': [[0, 1, 3, 6, 7, 8], // 165
  FORTE[6][18][2], // var
  FORTE[6][18][1]],
  '19,1': [FORTE[6][19][0], // 166
  FORTE[6][19][2], // var
  FORTE[6][19][1]],
  '19,-1': [[0, 1, 4, 5, 7, 8], // 167
  FORTE[6][19][2], // var
  FORTE[6][19][1]],
  '20,0': [FORTE[6][20][0], // 168
  FORTE[6][20][2], // var
  FORTE[6][20][1]],
  '21,1': [FORTE[6][21][0], // 169
  FORTE[6][21][2], // var
  FORTE[6][21][1]],
  '21,-1': [[0, 2, 4, 5, 6, 8], // 170
  FORTE[6][21][2], // var
  FORTE[6][21][1]],
  '22,1': [FORTE[6][22][0], // 171
  FORTE[6][22][2], // var
  FORTE[6][22][1]],
  '22,-1': [[0, 2, 4, 6, 7, 8], // 172
  FORTE[6][22][2], // var
  FORTE[6][22][1]],
  '23,0': [FORTE[6][23][0], // 173
  FORTE[6][23][2], // var
  FORTE[6][23][1]],
  '24,1': [FORTE[6][24][0], // 174
  FORTE[6][24][2], // var
  FORTE[6][24][1]],
  '24,-1': [[0, 2, 4, 5, 7, 8], // 175
  FORTE[6][24][2], // var
  FORTE[6][24][1]],
  '25,1': [FORTE[6][25][0], // 176
  FORTE[6][25][2], // var
  FORTE[6][25][1]],
  '25,-1': [[0, 2, 3, 5, 7, 8], // 177
  FORTE[6][25][2], // var
  FORTE[6][25][1]],
  '26,0': [FORTE[6][26][0], // 178
  FORTE[6][26][2], // var
  FORTE[6][26][1]],
  '27,1': [FORTE[6][27][0], // 179
  FORTE[6][27][2], // var
  FORTE[6][27][1]],
  '27,-1': [[0, 3, 5, 6, 8, 9], // 180
  FORTE[6][27][2], // var
  FORTE[6][27][1]],
  '28,0': [FORTE[6][28][0], // 181
  FORTE[6][28][2], // var
  FORTE[6][28][1]],
  '29,0': [FORTE[6][29][0], // 182
  FORTE[6][29][2], // var
  FORTE[6][29][1]],
  '30,1': [FORTE[6][30][0], // 183
  FORTE[6][30][2], // var
  FORTE[6][30][1]],
  '30,-1': [[0, 2, 3, 6, 8, 9], // 184
  FORTE[6][30][2], // var
  FORTE[6][30][1]],
  '31,1': [FORTE[6][31][0], // 185
  FORTE[6][31][2], // var
  FORTE[6][31][1]],
  '31,-1': [[0, 1, 4, 6, 8, 9], // 186
  FORTE[6][31][2], // var
  FORTE[6][31][1]],
  '32,0': [FORTE[6][32][0], // 187
  FORTE[6][32][2], // var
  FORTE[6][32][1]],
  '33,1': [FORTE[6][33][0], // 188
  FORTE[6][33][2], // var
  FORTE[6][33][1]],
  '33,-1': [[0, 2, 4, 6, 7, 9], // 189
  FORTE[6][33][2], // var
  FORTE[6][33][1]],
  '34,1': [FORTE[6][34][0], // 190
  FORTE[6][34][2], // var
  FORTE[6][34][1]],
  '34,-1': [[0, 2, 4, 6, 8, 9], // 191
  FORTE[6][34][2], // var
  FORTE[6][34][1]],
  '35,0': [FORTE[6][35][0], // 192
  FORTE[6][35][2], // var
  FORTE[6][35][1]],
  '36,1': [FORTE[6][36][0], // 193
  FORTE[6][36][2], // var
  FORTE[6][36][1]],
  '36,-1': [[0, 3, 4, 5, 6, 7], // 194
  FORTE[6][36][2], // var
  FORTE[6][36][1]],
  '37,0': [FORTE[6][37][0], // 195
  FORTE[6][37][2], // var
  FORTE[6][37][1]],
  '38,0': [FORTE[6][38][0], // 196
  FORTE[6][38][2], // var
  FORTE[6][38][1]],
  '39,1': [FORTE[6][39][0], // 197
  FORTE[6][39][2], // var
  FORTE[6][39][1]],
  '39,-1': [[0, 3, 4, 5, 6, 8], // 198
  FORTE[6][39][2], // var
  FORTE[6][39][1]],
  '40,1': [FORTE[6][40][0], // 199
  FORTE[6][40][2], // var
  FORTE[6][40][1]],
  '40,-1': [[0, 3, 5, 6, 7, 8], // 200
  FORTE[6][40][2], // var
  FORTE[6][40][1]],
  '41,1': [FORTE[6][41][0], // 201
  FORTE[6][41][2], // var
  FORTE[6][41][1]],
  '41,-1': [[0, 2, 5, 6, 7, 8], // 202
  FORTE[6][41][2], // var
  FORTE[6][41][1]],
  '42,0': [FORTE[6][42][0], // 203
  FORTE[6][42][2], // var
  FORTE[6][42][1]],
  '43,1': [FORTE[6][43][0], // 204
  FORTE[6][43][2], // var
  FORTE[6][43][1]],
  '43,-1': [[0, 2, 3, 6, 7, 8], // 205
  FORTE[6][43][2], // var
  FORTE[6][43][1]],
  '44,1': [FORTE[6][44][0], // 206
  FORTE[6][44][2], // var
  FORTE[6][44][1]],
  '44,-1': [[0, 3, 4, 7, 8, 9], // 207
  FORTE[6][44][2], // var
  FORTE[6][44][1]],
  '45,0': [FORTE[6][45][0], // 208
  FORTE[6][45][2], // var
  FORTE[6][45][1]],
  '46,1': [FORTE[6][46][0], // 209
  FORTE[6][46][2], // var
  FORTE[6][46][1]],
  '46,-1': [[0, 3, 5, 7, 8, 9], // 210
  FORTE[6][46][2], // var
  FORTE[6][46][1]],
  '47,1': [FORTE[6][47][0], // 211
  FORTE[6][47][2], // var
  FORTE[6][47][1]],
  '47,-1': [[0, 2, 5, 7, 8, 9], // 212
  FORTE[6][47][2], // var
  FORTE[6][47][1]],
  '48,0': [FORTE[6][48][0], // 213
  FORTE[6][48][2], // var
  FORTE[6][48][1]],
  '49,0': [FORTE[6][49][0], // 214
  FORTE[6][49][2], // var
  FORTE[6][49][1]],
  '50,0': [FORTE[6][50][0], // 215
  FORTE[6][50][2], // var
  FORTE[6][50][1]]
}; // cardinality 7

var card_7 = {
  '1,0': [FORTE[7][1][0], // 216
  FORTE[7][1][2], // var
  FORTE[7][1][1]],
  '2,1': [FORTE[7][2][0], // 217
  FORTE[7][2][2], // var
  FORTE[7][2][1]],
  '2,-1': [[0, 2, 3, 4, 5, 6, 7], // 218
  FORTE[7][2][2], // var
  FORTE[7][2][1]],
  '3,1': [FORTE[7][3][0], // 219
  FORTE[7][3][2], // var
  FORTE[7][3][1]],
  '3,-1': [[0, 3, 4, 5, 6, 7, 8], // 220
  FORTE[7][3][2], // var
  FORTE[7][3][1]],
  '4,1': [FORTE[7][4][0], // 221
  FORTE[7][4][2], // var
  FORTE[7][4][1]],
  '4,-1': [[0, 1, 3, 4, 5, 6, 7], // 222
  FORTE[7][4][2], // var
  FORTE[7][4][1]],
  '5,1': [FORTE[7][5][0], // 223
  FORTE[7][5][2], // var
  FORTE[7][5][1]],
  '5,-1': [[0, 1, 2, 4, 5, 6, 7], // 224
  FORTE[7][5][2], // var
  FORTE[7][5][1]],
  '6,1': [FORTE[7][6][0], // 225
  FORTE[7][6][2], // var
  FORTE[7][6][1]],
  '6,-1': [[0, 1, 4, 5, 6, 7, 8], // 226
  FORTE[7][6][2], // var
  FORTE[7][6][1]],
  '7,1': [FORTE[7][7][0], // 227
  FORTE[7][7][2], // var
  FORTE[7][7][1]],
  '7,-1': [[0, 1, 2, 5, 6, 7, 8], // 228
  FORTE[7][7][2], // var
  FORTE[7][7][1]],
  '8,0': [FORTE[7][8][0], // 229
  FORTE[7][8][2], // var
  FORTE[7][8][1]],
  '9,1': [FORTE[7][9][0], // 230
  FORTE[7][9][2], // var
  FORTE[7][9][1]],
  '9,-1': [[0, 2, 4, 5, 6, 7, 8], // 231
  FORTE[7][9][2], // var
  FORTE[7][9][1]],
  '10,1': [FORTE[7][10][0], // 232
  FORTE[7][10][2], // var
  FORTE[7][10][1]],
  '10,-1': [[0, 3, 5, 6, 7, 8, 9], // 233
  FORTE[7][10][2], // var
  FORTE[7][10][1]],
  '11,1': [FORTE[7][11][0], // 234
  FORTE[7][11][2], // var
  FORTE[7][11][1]],
  '11,-1': [[0, 2, 3, 4, 5, 7, 8], // 235
  FORTE[7][11][2], // var
  FORTE[7][11][1]],
  '12,0': [FORTE[7][12][0], // 236
  FORTE[7][12][2], // var
  FORTE[7][12][1]],
  '13,1': [FORTE[7][13][0], // 237
  FORTE[7][13][2], // var
  FORTE[7][13][1]],
  '13,-1': [[0, 2, 3, 4, 6, 7, 8], // 238
  FORTE[7][13][2], // var
  FORTE[7][13][1]],
  '14,1': [FORTE[7][14][0], // 239
  FORTE[7][14][2], // var
  FORTE[7][14][1]],
  '14,-1': [[0, 1, 3, 5, 6, 7, 8], // 240
  FORTE[7][14][2], // var
  FORTE[7][14][1]],
  '15,0': [FORTE[7][15][0], // 241
  FORTE[7][15][2], // var
  FORTE[7][15][1]],
  '16,1': [FORTE[7][16][0], // 242
  FORTE[7][16][2], // var
  FORTE[7][16][1]],
  '16,-1': [[0, 3, 4, 6, 7, 8, 9], // 243
  FORTE[7][16][2], // var
  FORTE[7][16][1]],
  '17,0': [FORTE[7][17][0], // 244
  FORTE[7][17][2], // var
  FORTE[7][17][1]],
  '18,1': [FORTE[7][18][0], // 245
  FORTE[7][18][2], // var
  FORTE[7][18][1]],
  '18,-1': [[0, 1, 4, 6, 7, 8, 9], // 246
  FORTE[7][18][2], // var
  FORTE[7][18][1]],
  '19,1': [FORTE[7][19][0], // 247
  FORTE[7][19][2], // var
  FORTE[7][19][1]],
  '19,-1': [[0, 2, 3, 6, 7, 8, 9], // 248
  FORTE[7][19][2], // var
  FORTE[7][19][1]],
  '20,1': [FORTE[7][20][0], // 249
  FORTE[7][20][2], // var
  FORTE[7][20][1]],
  '20,-1': [[0, 1, 2, 5, 7, 8, 9], // 250
  FORTE[7][20][2], // var
  FORTE[7][20][1]],
  '21,1': [FORTE[7][21][0], // 251
  FORTE[7][21][2], // var
  FORTE[7][21][1]],
  '21,-1': [[0, 1, 4, 5, 7, 8, 9], // 252
  FORTE[7][21][2], // var
  FORTE[7][21][1]],
  '22,0': [FORTE[7][22][0], // 253
  FORTE[7][22][2], // var
  FORTE[7][22][1]],
  '23,1': [FORTE[7][23][0], // 254
  FORTE[7][23][2], // var
  FORTE[7][23][1]],
  '23,-1': [[0, 2, 4, 5, 6, 7, 9], // 255
  FORTE[7][23][2], // var
  FORTE[7][23][1]],
  '24,1': [FORTE[7][24][0], // 256
  FORTE[7][24][2], // var
  FORTE[7][24][1]],
  '24,-1': [[0, 2, 4, 6, 7, 8, 9], // 257
  FORTE[7][24][2], // var
  FORTE[7][24][1]],
  '25,1': [FORTE[7][25][0], // 258
  FORTE[7][25][2], // var
  FORTE[7][25][1]],
  '25,-1': [[0, 2, 3, 5, 6, 7, 9], // 259
  FORTE[7][25][2], // var
  FORTE[7][25][1]],
  '26,1': [FORTE[7][26][0], // 260
  FORTE[7][26][2], // var
  FORTE[7][26][1]],
  '26,-1': [[0, 2, 4, 5, 6, 8, 9], // 261
  FORTE[7][26][2], // var
  FORTE[7][26][1]],
  '27,1': [FORTE[7][27][0], // 262
  FORTE[7][27][2], // var
  FORTE[7][27][1]],
  '27,-1': [[0, 2, 4, 5, 7, 8, 9], // 263
  FORTE[7][27][2], // var
  FORTE[7][27][1]],
  '28,1': [FORTE[7][28][0], // 264
  FORTE[7][28][2], // var
  FORTE[7][28][1]],
  '28,-1': [[0, 2, 3, 4, 6, 8, 9], // 265
  FORTE[7][28][2], // var
  FORTE[7][28][1]],
  '29,1': [FORTE[7][29][0], // 266
  FORTE[7][29][2], // var
  FORTE[7][29][1]],
  '29,-1': [[0, 2, 3, 5, 7, 8, 9], // 267
  FORTE[7][29][2], // var
  FORTE[7][29][1]],
  '30,1': [FORTE[7][30][0], // 268
  FORTE[7][30][2], // var
  FORTE[7][30][1]],
  '30,-1': [[0, 1, 3, 5, 7, 8, 9], // 269
  FORTE[7][30][2], // var
  FORTE[7][30][1]],
  '31,1': [FORTE[7][31][0], // 270
  FORTE[7][31][2], // var
  FORTE[7][31][1]],
  '31,-1': [[0, 2, 3, 5, 6, 8, 9], // 271
  FORTE[7][31][2], // var
  FORTE[7][31][1]],
  '32,1': [FORTE[7][32][0], // 272
  FORTE[7][32][2], // var
  FORTE[7][32][1]],
  '32,-1': [[0, 1, 3, 5, 6, 8, 9], // 273
  FORTE[7][32][2], // var
  FORTE[7][32][1]],
  '33,0': [FORTE[7][33][0], // 274
  FORTE[7][33][2], // var
  FORTE[7][33][1]],
  '34,0': [FORTE[7][34][0], // 275
  FORTE[7][34][2], // var
  FORTE[7][34][1]],
  '35,0': [FORTE[7][35][0], // 276
  FORTE[7][35][2], // var
  FORTE[7][35][1]],
  '36,1': [FORTE[7][36][0], // 277
  FORTE[7][36][2], // var
  FORTE[7][36][1]],
  '36,-1': [[0, 2, 3, 5, 6, 7, 8], // 278
  FORTE[7][36][2], // var
  FORTE[7][36][1]],
  '37,0': [FORTE[7][37][0], // 279
  FORTE[7][37][2], // var
  FORTE[7][37][1]],
  '38,1': [FORTE[7][38][0], // 280
  FORTE[7][38][2], // var
  FORTE[7][38][1]],
  '38,-1': [[0, 1, 3, 4, 6, 7, 8], // 281
  FORTE[7][38][2], // var
  FORTE[7][38][1]]
}; // cardinality 8

var card_8 = {
  '1,0': [FORTE[8][1][0], // 282
  FORTE[8][1][2], // var
  FORTE[8][1][1]],
  '2,1': [FORTE[8][2][0], // 283
  FORTE[8][2][2], // var
  FORTE[8][2][1]],
  '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8], // 284
  FORTE[8][2][2], // var
  FORTE[8][2][1]],
  '3,0': [FORTE[8][3][0], // 285
  FORTE[8][3][2], // var
  FORTE[8][3][1]],
  '4,1': [FORTE[8][4][0], // 286
  FORTE[8][4][2], // var
  FORTE[8][4][1]],
  '4,-1': [[0, 1, 3, 4, 5, 6, 7, 8], // 287
  FORTE[8][4][2], // var
  FORTE[8][4][1]],
  '5,1': [FORTE[8][5][0], // 288
  FORTE[8][5][2], // var
  FORTE[8][5][1]],
  '5,-1': [[0, 1, 2, 4, 5, 6, 7, 8], // 289
  FORTE[8][5][2], // var
  FORTE[8][5][1]],
  '6,0': [FORTE[8][6][0], // 290
  FORTE[8][6][2], // var
  FORTE[8][6][1]],
  '7,0': [FORTE[8][7][0], // 291
  FORTE[8][7][2], // var
  FORTE[8][7][1]],
  '8,0': [FORTE[8][8][0], // 292
  FORTE[8][8][2], // var
  FORTE[8][8][1]],
  '9,0': [FORTE[8][9][0], // 293
  FORTE[8][9][2], // var
  FORTE[8][9][1]],
  '10,0': [FORTE[8][10][0], // 294
  FORTE[8][10][2], // var
  FORTE[8][10][1]],
  '11,1': [FORTE[8][11][0], // 295
  FORTE[8][11][2], // var
  FORTE[8][11][1]],
  '11,-1': [[0, 2, 4, 5, 6, 7, 8, 9], // 296
  FORTE[8][11][2], // var
  FORTE[8][11][1]],
  '12,1': [FORTE[8][12][0], // 297
  FORTE[8][12][2], // var
  FORTE[8][12][1]],
  '12,-1': [[0, 2, 3, 4, 5, 6, 8, 9], // 298
  FORTE[8][12][2], // var
  FORTE[8][12][1]],
  '13,1': [FORTE[8][13][0], // 299
  FORTE[8][13][2], // var
  FORTE[8][13][1]],
  '13,-1': [[0, 2, 3, 5, 6, 7, 8, 9], // 300
  FORTE[8][13][2], // var
  FORTE[8][13][1]],
  '14,1': [FORTE[8][14][0], // 301
  FORTE[8][14][2], // var
  FORTE[8][14][1]],
  '14,-1': [[0, 2, 3, 4, 5, 7, 8, 9], // 302
  FORTE[8][14][2], // var
  FORTE[8][14][1]],
  '15,1': [FORTE[8][15][0], // 303
  FORTE[8][15][2], // var
  FORTE[8][15][1]],
  '15,-1': [[0, 1, 3, 5, 6, 7, 8, 9], // 304
  FORTE[8][15][2], // var
  FORTE[8][15][1]],
  '16,1': [FORTE[8][16][0], // 305
  FORTE[8][16][2], // var
  FORTE[8][16][1]],
  '16,-1': [[0, 1, 2, 4, 6, 7, 8, 9], // 306
  FORTE[8][16][2], // var
  FORTE[8][16][1]],
  '17,0': [FORTE[8][17][0], // 307
  FORTE[8][17][2], // var
  FORTE[8][17][1]],
  '18,1': [FORTE[8][18][0], // 308
  FORTE[8][18][2], // var
  FORTE[8][18][1]],
  '18,-1': [[0, 1, 3, 4, 6, 7, 8, 9], // 309
  FORTE[8][18][2], // var
  FORTE[8][18][1]],
  '19,1': [FORTE[8][19][0], // 310
  FORTE[8][19][2], // var
  FORTE[8][19][1]],
  '19,-1': [[0, 1, 3, 4, 5, 7, 8, 9], // 311
  FORTE[8][19][2], // var
  FORTE[8][19][1]],
  '20,0': [FORTE[8][20][0], // 312
  FORTE[8][20][2], // var
  FORTE[8][20][1]],
  '21,0': [FORTE[8][21][0], // 313
  FORTE[8][21][2], // var
  FORTE[8][21][1]],
  '22,1': [FORTE[8][22][0], // 314
  FORTE[8][22][2], // var
  FORTE[8][22][1]],
  '22,-1': [[0, 2, 4, 5, 7, 8, 9, 10], // 315
  FORTE[8][22][2], // var
  FORTE[8][22][1]],
  '23,0': [FORTE[8][23][0], // 316
  FORTE[8][23][2], // var
  FORTE[8][23][1]],
  '24,0': [FORTE[8][24][0], // 317
  FORTE[8][24][2], // var
  FORTE[8][24][1]],
  '25,0': [FORTE[8][25][0], // 318
  FORTE[8][25][2], // var
  FORTE[8][25][1]],
  '26,0': [FORTE[8][26][0], // 319
  FORTE[8][26][2], // var
  FORTE[8][26][1]],
  '27,1': [FORTE[8][27][0], // 320
  FORTE[8][27][2], // var
  FORTE[8][27][1]],
  '27,-1': [[0, 2, 3, 5, 6, 8, 9, 10], // 321
  FORTE[8][27][2], // var
  FORTE[8][27][1]],
  '28,0': [FORTE[8][28][0], // 322
  FORTE[8][28][2], // var
  FORTE[8][28][1]],
  '29,1': [FORTE[8][29][0], // 323
  FORTE[8][29][2], // var
  FORTE[8][29][1]],
  '29,-1': [[0, 2, 3, 4, 6, 7, 8, 9], // 324
  FORTE[8][29][2], // var
  FORTE[8][29][1]]
}; // cardinality 9

var card_9 = {
  '1,0': [FORTE[9][1][0], // 325
  FORTE[9][1][2], // var
  FORTE[9][1][1]],
  '2,1': [FORTE[9][2][0], // 326
  FORTE[9][2][2], // var
  FORTE[9][2][1]],
  '2,-1': [[0, 2, 3, 4, 5, 6, 7, 8, 9], // 327
  FORTE[9][2][2], // var
  FORTE[9][2][1]],
  '3,1': [FORTE[9][3][0], // 328
  FORTE[9][3][2], // var
  FORTE[9][3][1]],
  '3,-1': [[0, 1, 3, 4, 5, 6, 7, 8, 9], // 329
  FORTE[9][3][2], // var
  FORTE[9][3][1]],
  '4,1': [FORTE[9][4][0], // 330
  FORTE[9][4][2], // var
  FORTE[9][4][1]],
  '4,-1': [[0, 1, 2, 4, 5, 6, 7, 8, 9], // 331
  FORTE[9][4][2], // var
  FORTE[9][4][1]],
  '5,1': [FORTE[9][5][0], // 332
  FORTE[9][5][2], // var
  FORTE[9][5][1]],
  '5,-1': [[0, 1, 2, 3, 5, 6, 7, 8, 9], // 333
  FORTE[9][5][2], // var
  FORTE[9][5][1]],
  '6,0': [FORTE[9][6][0], // 334
  FORTE[9][6][2], // var
  FORTE[9][6][1]],
  '7,1': [FORTE[9][7][0], // 335
  FORTE[9][7][2], // var
  FORTE[9][7][1]],
  '7,-1': [[0, 2, 3, 5, 6, 7, 8, 9, 10], // 336
  FORTE[9][7][2], // var
  FORTE[9][7][1]],
  '8,1': [FORTE[9][8][0], // 337
  FORTE[9][8][2], // var
  FORTE[9][8][1]],
  '8,-1': [[0, 2, 3, 4, 6, 7, 8, 9, 10], // 338
  FORTE[9][8][2], // var
  FORTE[9][8][1]],
  '9,0': [FORTE[9][9][0], // 339
  FORTE[9][9][2], // var
  FORTE[9][9][1]],
  '10,0': [FORTE[9][10][0], // 340
  FORTE[9][10][2], // var
  FORTE[9][10][1]],
  '11,1': [FORTE[9][11][0], // 341
  FORTE[9][11][2], // var
  FORTE[9][11][1]],
  '11,-1': [[0, 1, 3, 4, 5, 7, 8, 9, 10], // 342
  FORTE[9][11][2], // var
  FORTE[9][11][1]],
  '12,0': [FORTE[9][12][0], // 343
  FORTE[9][12][2], // var
  FORTE[9][12][1]]
}; // cardinality 10

var card_10 = {
  '1,0': [FORTE[10][1][0], // 344
  FORTE[10][1][2], // var
  FORTE[10][1][1]],
  '2,0': [FORTE[10][2][0], // 345
  FORTE[10][2][2], // var
  FORTE[10][2][1]],
  '3,0': [FORTE[10][3][0], // 346
  FORTE[10][3][2], // var
  FORTE[10][3][1]],
  '4,0': [FORTE[10][4][0], // 347
  FORTE[10][4][2], // var
  FORTE[10][4][1]],
  '5,0': [FORTE[10][5][0], // 348
  FORTE[10][5][2], // var
  FORTE[10][5][1]],
  '6,0': [FORTE[10][6][0], // 349
  FORTE[10][6][2], // var
  FORTE[10][6][1]]
}; // cardinality 11

var card_11 = {
  '1,0': [FORTE[11][1][0], // 350
  FORTE[11][1][2], // var
  FORTE[11][1][1]]
}; // cardinality 12

var card_12 = {
  '1,0': [FORTE[12][1][0], // 351
  FORTE[12][1][2], // var
  FORTE[12][1][1]]
}; //-------------------------------------------------------------------------------

var SCDICT = {
  1: card_1,
  2: card_2,
  3: card_3,
  4: card_4,
  5: card_5,
  6: card_6,
  7: card_7,
  8: card_8,
  9: card_9,
  10: card_10,
  11: card_11,
  12: card_12
}; //-------------------------------------------------------------------------------
// thes dicts provide index max fr cardinality key

var TNMAX = {
  0: 1,
  1: 1,
  2: 6,
  3: 19,
  4: 43,
  5: 66,
  6: 80,
  7: 66,
  8: 43,
  9: 19,
  10: 6,
  11: 1,
  12: 1
};
var TNIMAX = {
  0: 1,
  1: 1,
  2: 6,
  3: 12,
  4: 29,
  5: 38,
  6: 50,
  7: 38,
  8: 29,
  9: 12,
  10: 6,
  11: 1,
  12: 1
}; // used to find TnI index numbers under Tn classification

var TNREF = {
  '1,1,0': 1,
  '2,1,0': 1,
  '2,2,0': 2,
  '2,3,0': 3,
  '2,4,0': 4,
  '2,5,0': 5,
  '2,6,0': 6,
  '3,1,0': 1,
  '3,2,1': 2,
  '3,2,-1': 3,
  '3,3,1': 4,
  '3,3,-1': 5,
  '3,4,1': 6,
  '3,4,-1': 7,
  '3,5,1': 8,
  '3,5,-1': 9,
  '3,6,0': 10,
  '3,7,1': 11,
  '3,7,-1': 12,
  '3,8,1': 13,
  '3,8,-1': 14,
  '3,9,0': 15,
  '3,10,0': 16,
  '3,11,1': 17,
  '3,11,-1': 18,
  '3,12,0': 19,
  '4,1,0': 1,
  '4,2,1': 2,
  '4,2,-1': 3,
  '4,3,0': 4,
  '4,4,1': 5,
  '4,4,-1': 6,
  '4,5,1': 7,
  '4,5,-1': 8,
  '4,6,0': 9,
  '4,7,0': 10,
  '4,8,0': 11,
  '4,9,0': 12,
  '4,10,0': 13,
  '4,11,1': 14,
  '4,11,-1': 15,
  '4,12,1': 16,
  '4,12,-1': 17,
  '4,13,1': 18,
  '4,13,-1': 19,
  '4,14,1': 20,
  '4,14,-1': 21,
  '4,15,1': 22,
  '4,15,-1': 23,
  '4,16,1': 24,
  '4,16,-1': 25,
  '4,17,0': 26,
  '4,18,1': 27,
  '4,18,-1': 28,
  '4,19,1': 29,
  '4,19,-1': 30,
  '4,20,0': 31,
  '4,21,0': 32,
  '4,22,1': 33,
  '4,22,-1': 34,
  '4,23,0': 35,
  '4,24,0': 36,
  '4,25,0': 37,
  '4,26,0': 38,
  '4,27,1': 39,
  '4,27,-1': 40,
  '4,28,0': 41,
  '4,29,1': 42,
  '4,29,-1': 43,
  '5,1,0': 1,
  '5,2,1': 2,
  '5,2,-1': 3,
  '5,3,1': 4,
  '5,3,-1': 5,
  '5,4,1': 6,
  '5,4,-1': 7,
  '5,5,1': 8,
  '5,5,-1': 9,
  '5,6,1': 10,
  '5,6,-1': 11,
  '5,7,1': 12,
  '5,7,-1': 13,
  '5,8,0': 14,
  '5,9,1': 15,
  '5,9,-1': 16,
  '5,10,1': 17,
  '5,10,-1': 18,
  '5,11,1': 19,
  '5,11,-1': 20,
  '5,12,0': 21,
  '5,13,1': 22,
  '5,13,-1': 23,
  '5,14,1': 24,
  '5,14,-1': 25,
  '5,15,0': 26,
  '5,16,1': 27,
  '5,16,-1': 28,
  '5,17,0': 29,
  '5,18,1': 30,
  '5,18,-1': 31,
  '5,19,1': 32,
  '5,19,-1': 33,
  '5,20,1': 34,
  '5,20,-1': 35,
  '5,21,1': 36,
  '5,21,-1': 37,
  '5,22,0': 38,
  '5,23,1': 39,
  '5,23,-1': 40,
  '5,24,1': 41,
  '5,24,-1': 42,
  '5,25,1': 43,
  '5,25,-1': 44,
  '5,26,1': 45,
  '5,26,-1': 46,
  '5,27,1': 47,
  '5,27,-1': 48,
  '5,28,1': 49,
  '5,28,-1': 50,
  '5,29,1': 51,
  '5,29,-1': 52,
  '5,30,1': 53,
  '5,30,-1': 54,
  '5,31,1': 55,
  '5,31,-1': 56,
  '5,32,1': 57,
  '5,32,-1': 58,
  '5,33,0': 59,
  '5,34,0': 60,
  '5,35,0': 61,
  '5,36,1': 62,
  '5,36,-1': 63,
  '5,37,0': 64,
  '5,38,1': 65,
  '5,38,-1': 66,
  '6,1,0': 1,
  '6,2,1': 2,
  '6,2,-1': 3,
  '6,3,1': 4,
  '6,3,-1': 5,
  '6,4,0': 6,
  '6,5,1': 7,
  '6,5,-1': 8,
  '6,6,0': 9,
  '6,7,0': 10,
  '6,8,0': 11,
  '6,9,1': 12,
  '6,9,-1': 13,
  '6,10,1': 14,
  '6,10,-1': 15,
  '6,11,1': 16,
  '6,11,-1': 17,
  '6,12,1': 18,
  '6,12,-1': 19,
  '6,13,0': 20,
  '6,14,1': 21,
  '6,14,-1': 22,
  '6,15,1': 23,
  '6,15,-1': 24,
  '6,16,1': 25,
  '6,16,-1': 26,
  '6,17,1': 27,
  '6,17,-1': 28,
  '6,18,1': 29,
  '6,18,-1': 30,
  '6,19,1': 31,
  '6,19,-1': 32,
  '6,20,0': 33,
  '6,21,1': 34,
  '6,21,-1': 35,
  '6,22,1': 36,
  '6,22,-1': 37,
  '6,23,0': 38,
  '6,24,1': 39,
  '6,24,-1': 40,
  '6,25,1': 41,
  '6,25,-1': 42,
  '6,26,0': 43,
  '6,27,1': 44,
  '6,27,-1': 45,
  '6,28,0': 46,
  '6,29,0': 47,
  '6,30,1': 48,
  '6,30,-1': 49,
  '6,31,1': 50,
  '6,31,-1': 51,
  '6,32,0': 52,
  '6,33,1': 53,
  '6,33,-1': 54,
  '6,34,1': 55,
  '6,34,-1': 56,
  '6,35,0': 57,
  '6,36,1': 58,
  '6,36,-1': 59,
  '6,37,0': 60,
  '6,38,0': 61,
  '6,39,1': 62,
  '6,39,-1': 63,
  '6,40,1': 64,
  '6,40,-1': 65,
  '6,41,1': 66,
  '6,41,-1': 67,
  '6,42,0': 68,
  '6,43,1': 69,
  '6,43,-1': 70,
  '6,44,1': 71,
  '6,44,-1': 72,
  '6,45,0': 73,
  '6,46,1': 74,
  '6,46,-1': 75,
  '6,47,1': 76,
  '6,47,-1': 77,
  '6,48,0': 78,
  '6,49,0': 79,
  '6,50,0': 80,
  '7,1,0': 1,
  '7,2,1': 2,
  '7,2,-1': 3,
  '7,3,1': 4,
  '7,3,-1': 5,
  '7,4,1': 6,
  '7,4,-1': 7,
  '7,5,1': 8,
  '7,5,-1': 9,
  '7,6,1': 10,
  '7,6,-1': 11,
  '7,7,1': 12,
  '7,7,-1': 13,
  '7,8,0': 14,
  '7,9,1': 15,
  '7,9,-1': 16,
  '7,10,1': 17,
  '7,10,-1': 18,
  '7,11,1': 19,
  '7,11,-1': 20,
  '7,12,0': 21,
  '7,13,1': 22,
  '7,13,-1': 23,
  '7,14,1': 24,
  '7,14,-1': 25,
  '7,15,0': 26,
  '7,16,1': 27,
  '7,16,-1': 28,
  '7,17,0': 29,
  '7,18,1': 30,
  '7,18,-1': 31,
  '7,19,1': 32,
  '7,19,-1': 33,
  '7,20,1': 34,
  '7,20,-1': 35,
  '7,21,1': 36,
  '7,21,-1': 37,
  '7,22,0': 38,
  '7,23,1': 39,
  '7,23,-1': 40,
  '7,24,1': 41,
  '7,24,-1': 42,
  '7,25,1': 43,
  '7,25,-1': 44,
  '7,26,1': 45,
  '7,26,-1': 46,
  '7,27,1': 47,
  '7,27,-1': 48,
  '7,28,1': 49,
  '7,28,-1': 50,
  '7,29,1': 51,
  '7,29,-1': 52,
  '7,30,1': 53,
  '7,30,-1': 54,
  '7,31,1': 55,
  '7,31,-1': 56,
  '7,32,1': 57,
  '7,32,-1': 58,
  '7,33,0': 59,
  '7,34,0': 60,
  '7,35,0': 61,
  '7,36,1': 62,
  '7,36,-1': 63,
  '7,37,0': 64,
  '7,38,1': 65,
  '7,38,-1': 66,
  '8,1,0': 1,
  '8,2,1': 2,
  '8,2,-1': 3,
  '8,3,0': 4,
  '8,4,1': 5,
  '8,4,-1': 6,
  '8,5,1': 7,
  '8,5,-1': 8,
  '8,6,0': 9,
  '8,7,0': 10,
  '8,8,0': 11,
  '8,9,0': 12,
  '8,10,0': 13,
  '8,11,1': 14,
  '8,11,-1': 15,
  '8,12,1': 16,
  '8,12,-1': 17,
  '8,13,1': 18,
  '8,13,-1': 19,
  '8,14,1': 20,
  '8,14,-1': 21,
  '8,15,1': 22,
  '8,15,-1': 23,
  '8,16,1': 24,
  '8,16,-1': 25,
  '8,17,0': 26,
  '8,18,1': 27,
  '8,18,-1': 28,
  '8,19,1': 29,
  '8,19,-1': 30,
  '8,20,0': 31,
  '8,21,0': 32,
  '8,22,1': 33,
  '8,22,-1': 34,
  '8,23,0': 35,
  '8,24,0': 36,
  '8,25,0': 37,
  '8,26,0': 38,
  '8,27,1': 39,
  '8,27,-1': 40,
  '8,28,0': 41,
  '8,29,1': 42,
  '8,29,-1': 43,
  '9,1,0': 1,
  '9,2,1': 2,
  '9,2,-1': 3,
  '9,3,1': 4,
  '9,3,-1': 5,
  '9,4,1': 6,
  '9,4,-1': 7,
  '9,5,1': 8,
  '9,5,-1': 9,
  '9,6,0': 10,
  '9,7,1': 11,
  '9,7,-1': 12,
  '9,8,1': 13,
  '9,8,-1': 14,
  '9,9,0': 15,
  '9,10,0': 16,
  '9,11,1': 17,
  '9,11,-1': 18,
  '9,12,0': 19,
  '10,1,0': 1,
  '10,2,0': 2,
  '10,3,0': 3,
  '10,4,0': 4,
  '10,5,0': 5,
  '10,6,0': 6,
  '11,1,0': 1,
  '12,1,0': 1
}; // -----------------------------------------------------------------||||||||||||--
// reference dict stores name and citation references
// names found from many sources, including:
// http://solo1.home.mindspring.com/pcsets.htm
// Larry Solomon, 1997, 2000
// Larry Solomon's 'The List of Chords, Their Properties and Use in Analysis,'
// in Interface, Journal of New Music Research , 1982, v11/2.
// http://www.sweb.cz/vladimir_ladma/english/music/structs/mus_rot.htm
// Vladimir Ladma, Czech Republic
// some changes: unison prefered to monad

var SCREF = {
  '1,1,0': {
    'name': ['unison', 'monad', 'singleton']
  },
  '2,1,0': {
    'name': ['interval class 1', 'minor second', 'm2', 'half step', 'semitone']
  },
  '2,2,0': {
    'name': ['interval class 2', 'major second', 'M2', 'whole step', 'whole tone']
  },
  '2,3,0': {
    'name': ['interval class 3', 'minor third', 'm3']
  },
  '2,4,0': {
    'name': ['interval class 4', 'major third', 'M3']
  },
  '2,5,0': {
    'name': ['interval class 5', 'perfect fourth', 'P4']
  },
  '2,6,0': {
    'name': ['tritone', 'diminished fifth', 'augmented fourth']
  },
  '3,1,0': {
    'name': ['chromatic trimirror']
  },
  '3,2,1': {
    'name': ['phrygian trichord']
  },
  '3,2,-1': {
    'name': ['minor trichord']
  },
  '3,3,1': {
    'name': ['major-minor trichord']
  },
  '3,3,-1': {
    'name': ['major-minor trichord']
  },
  '3,4,1': {
    'name': ['incomplete major-seventh chord']
  },
  '3,4,-1': {
    'name': ['incomplete major-seventh chord']
  },
  '3,5,1': {
    'name': ['tritone-fourth']
  },
  '3,5,-1': {
    'name': ['tritone-fourth']
  },
  '3,6,0': {
    'name': ['whole-tone trichord']
  },
  '3,7,1': {
    'name': ['incomplete minor-seventh chord']
  },
  '3,7,-1': {
    'name': ['incomplete dominant-seventh chord']
  },
  '3,8,1': {
    'name': ['incomplete dominant-seventh chord', 'Italian augmented sixth chord']
  },
  '3,8,-1': {
    'name': ['incomplete half-diminished seventh chord']
  },
  '3,9,0': {
    'name': ['quartal trichord']
  },
  '3,10,0': {
    'name': ['diminished triad']
  },
  '3,11,1': {
    'name': ['minor triad']
  },
  '3,11,-1': {
    'name': ['major triad']
  },
  '3,12,0': {
    'name': ['augmented triad', 'equal 3-part octave division']
  },
  '4,1,0': {
    'name': ['chromatic tetramirror', 'BACH']
  },
  '4,2,1': {
    'name': ['major-second tetracluster']
  },
  '4,2,-1': {
    'name': ['major-second tetracluster']
  },
  '4,3,0': {
    'name': ['alternating tetramirror']
  },
  '4,4,1': {
    'name': ['minor third tetracluster']
  },
  '4,4,-1': {
    'name': ['minor third tetracluster']
  },
  '4,5,1': {
    'name': ['major third tetracluster']
  },
  '4,5,-1': {
    'name': ['major third testacluster']
  },
  '4,6,0': {
    'name': ['perfect fourth tetramirror']
  },
  '4,7,0': {
    'name': ['Arabian tetramirror']
  },
  '4,8,0': {
    'name': ['double-fourth tetramirror']
  },
  '4,9,0': {
    'name': ['double tritone tetramirror']
  },
  '4,10,0': {
    'name': ['minor tetramirror']
  },
  '4,11,1': {
    'name': ['phrygian tetrachord']
  },
  '4,11,-1': {
    'name': ['lydian tetrachord', 'major tetrachord']
  },
  '4,12,1': {
    'name': ['harmonic minor tetrachord']
  },
  '4,12,-1': {
    'name': ['major-third diminished terachord']
  },
  '4,13,1': {
    'name': ['minor-second diminished tetrachord']
  },
  '4,13,-1': {
    'name': ['perfect-fourth diminished tetrachord']
  },
  '4,14,1': {
    'name': ['major-second minor tetrachord']
  },
  '4,14,-1': {
    'name': ['perfect-fourth major tetrachord']
  },
  '4,15,1': {
    'name': ['all-interval tetrachord']
  },
  '4,15,-1': {
    'name': ['all-interval tetrachord']
  },
  '4,16,1': {
    'name': ['minor-second quartal tetrachord']
  },
  '4,16,-1': {
    'name': ['tritone quartal tetrachord']
  },
  '4,17,0': {
    'name': ['major-minor tetramirror']
  },
  '4,18,1': {
    'name': ['major-diminished tetrachord']
  },
  '4,18,-1': {
    'name': ['minor-diminished tetrachord']
  },
  '4,19,1': {
    'name': ['minor-augmented tetrachord']
  },
  '4,19,-1': {
    'name': ['augmented major tetrachord']
  },
  '4,20,0': {
    'name': ['major seventh chord']
  },
  '4,21,0': {
    'name': ['whole-tone tetramirror']
  },
  '4,22,1': {
    'name': ['major-second major tetrachord']
  },
  '4,22,-1': {
    'name': ['perfect-fourth minor tetrachord']
  },
  '4,23,0': {
    'name': ['quartal tetramirror']
  },
  '4,24,0': {
    'name': ['augmented seventh chord']
  },
  '4,25,0': {
    'name': ["Messiaen's truncated mode 6", 'French augmented sixth chord']
  },
  '4,26,0': {
    'name': ['minor seventh chord']
  },
  '4,27,1': {
    'name': ['half-diminished seventh chord']
  },
  '4,27,-1': {
    'name': ['dominant seventh chord', 'major minor seventh chord', 'German augmented sixth chord', 'Swiss augmented sixth chord']
  },
  '4,28,0': {
    'name': ['diminished seventh chord', 'equal 4-part octave division']
  },
  '4,29,1': {
    'name': ['all-interval tetrachord']
  },
  '4,29,-1': {
    'name': ['all-interval tetrachord']
  },
  '5,1,0': {
    'name': ['chromatic pentamirror']
  },
  '5,2,1': {
    'name': ['major-second pentacluster']
  },
  '5,2,-1': {
    'name': ['major-second pentacluster']
  },
  '5,3,1': {
    'name': ['minor-second major pentachord']
  },
  '5,3,-1': {
    'name': ['Spanish pentacluster']
  },
  '5,4,1': {
    'name': ['blues pentacluster']
  },
  '5,4,-1': {
    'name': ['minor-third pentacluster']
  },
  '5,5,1': {
    'name': ['major-third pentacluster']
  },
  '5,5,-1': {
    'name': ['major-third pentacluster']
  },
  '5,6,1': {
    'name': ['Asian pentacluster', 'quasi raga Megharanji']
  },
  '5,6,-1': {
    'name': ['Asian pentacluster']
  },
  '5,7,1': {
    'name': ['double pentacluster', 'quasi raga Nabhomani ']
  },
  '5,7,-1': {
    'name': ['double pentacluster']
  },
  '5,8,0': {
    'name': ['tritone-symmetric pentamirror']
  },
  '5,9,1': {
    'name': ['tritone-expanding pentachord']
  },
  '5,9,-1': {
    'name': ['tritone-contracting pentachord']
  },
  '5,10,1': {
    'name': ['alternating pentachord']
  },
  '5,10,-1': {
    'name': ['alternating pentachord']
  },
  '5,11,1': {
    'name': ['center-cluster pentachord']
  },
  '5,11,-1': {
    'name': ['center-cluster pentachord']
  },
  '5,12,0': {
    'name': ['locrian pentachord']
  },
  '5,13,1': {
    'name': ['augmented pentacluster']
  },
  '5,13,-1': {
    'name': ['augmented pentacluster']
  },
  '5,14,1': {
    'name': ['double-seconds triple-fourth pentachord']
  },
  '5,14,-1': {
    'name': ['double-seconds triple-fourth pentachord']
  },
  '5,15,0': {
    'name': ['asssymetric pentamirror']
  },
  '5,16,1': {
    'name': ['major-minor-diminished pentachord']
  },
  '5,16,-1': {
    'name': ['major-minor diminished pentachord']
  },
  '5,17,0': {
    'name': ['minor-major ninth chord']
  },
  '5,18,1': {
    'name': ['Roma [Gypsy] pentachord']
  },
  '5,18,-1': {
    'name': ['Roma [Gypsy] pentachord']
  },
  '5,19,1': {
    'name': ['Javanese pentachord']
  },
  '5,19,-1': {
    'name': ['Balinese pentachord']
  },
  '5,20,1': {
    'name': ['Balinese Pelog pentatonic', 'quasi raga Bhupala', 'quasi raga Bibhas']
  },
  '5,20,-1': {
    'name': ['Hirajoshi pentatonic', 'Iwato', 'Sakura', 'quasi raga Saveri']
  },
  '5,21,1': {
    'name': ['major-augmented ninth chord', 'Syrian pentatonic', 'quasi raga Megharanji']
  },
  '5,21,-1': {
    'name': ['Lebanese pentachord', 'augmented-minor chord']
  },
  '5,22,0': {
    'name': ['Persian pentamirror', 'quasi raga Ramkali']
  },
  '5,23,1': {
    'name': ['dorian pentachord', 'minor pentachord']
  },
  '5,23,-1': {
    'name': ['major pentachord']
  },
  '5,24,1': {
    'name': ['phrygian pentachord']
  },
  '5,24,-1': {
    'name': ['lydian pentachord']
  },
  '5,25,1': {
    'name': ['diminished-major ninth chord']
  },
  '5,25,-1': {
    'name': ['minor-diminished ninth chord']
  },
  '5,26,1': {
    'name': ['diminished-augmented ninth chord']
  },
  '5,26,-1': {
    'name': ['augmented-diminished ninth chord']
  },
  '5,27,1': {
    'name': ['major-ninth chord']
  },
  '5,27,-1': {
    'name': ['minor-ninth chord']
  },
  '5,28,1': {
    'name': ['augmented-sixth pentachord']
  },
  '5,28,-1': {
    'name': ['Javanese pentatonic', 'augmented-sixth pentachord']
  },
  '5,29,1': {
    'name': ['Kumoi pentachord']
  },
  '5,29,-1': {
    'name': ['Kumoi pentachord']
  },
  '5,30,1': {
    'name': ['enigmatic pentachord']
  },
  '5,30,-1': {
    'name': ['enigmatic pentachord', 'altered pentatonic']
  },
  '5,31,1': {
    'name': ['diminished minor-ninth chord']
  },
  '5,31,-1': {
    'name': ['flat-ninth pentachord', 'quasi raga Ranjaniraga']
  },
  '5,32,1': {
    'name': ['Neapolitan pentachord']
  },
  '5,32,-1': {
    'name': ['Neapolitan pentachord']
  },
  '5,33,0': {
    'name': ['whole-tone pentachord']
  },
  '5,34,0': {
    'name': ['dominant-ninth', 'major-minor', 'Prometheus pentamirror', 'dominant pentatonic']
  },
  '5,35,0': {
    'name': ['major pentatonic', 'black-key scale', 'blues pentatonic', 'slendro', 'quartal pentamirror']
  },
  '5,36,1': {
    'name': ['major-seventh pentacluster']
  },
  '5,36,-1': {
    'name': ['minor-seventh pentacluster']
  },
  '5,37,0': {
    'name': ['center-cluster pentamirror']
  },
  '5,38,1': {
    'name': ['diminished pentacluster']
  },
  '5,38,-1': {
    'name': ['diminished pentacluster']
  },
  '6,1,0': {
    'name': ['A all combinatorial [P6, I11, RI5, RI11]', 'chromatic hexamirror', 'first-order all-combinatorial']
  },
  '6,2,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,2,-1': {
    'name': ['combinatorial I [I1]']
  },
  '6,3,1': {},
  '6,3,-1': {},
  '6,4,0': {
    'name': ['combinatorial RI [RI6]']
  },
  '6,5,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,5,-1': {
    'name': ['combinatorial I [I3]']
  },
  '6,6,0': {
    'name': ['double cluster hexamirror']
  },
  '6,7,0': {
    'name': ['B all combinatorial [P3, P9, I5, R6, R12, R8]', "Messiaen's mode 5", 'second-order all combinatorial']
  },
  '6,8,0': {
    'name': ['D all combinatorial [P6, I1, RI7]']
  },
  '6,9,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,9,-1': {
    'name': ['combinatorial I [I3]']
  },
  '6,10,1': {},
  '6,10,-1': {},
  '6,11,1': {},
  '6,11,-1': {},
  '6,12,1': {},
  '6,12,-1': {},
  '6,13,0': {
    'name': ['alternating hexamirror', 'combinatorial I [I7]']
  },
  '6,14,1': {
    'name': ['combinatorial P [P6]']
  },
  '6,14,-1': {
    'name': ['combinatorial P [P6]']
  },
  '6,15,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,15,-1': {
    'name': ['combinatorial I [I5]']
  },
  '6,16,1': {
    'name': ['combinatorial I [I3]']
  },
  '6,16,-1': {
    'name': ['combinatorial I [I1]', 'quasi raga Megha']
  },
  '6,17,1': {
    'name': ['all tri-chord hexachord']
  },
  '6,17,-1': {
    'name': ['all tri-chord hexachord [inverted form]']
  },
  '6,18,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,18,-1': {
    'name': ['combinatorial I [I5]']
  },
  '6,19,1': {},
  '6,19,-1': {},
  '6,20,0': {
    'name': ['E all combinatorial [P2, P6, P10, I3, I7, R4, R8, RI1, RI5, RI9]', "Messiaen's truncated mode 3", 'Genus tertium', 'third-order all combinatorial']
  },
  '6,21,1': {
    'name': ['combinatorial I [I1]']
  },
  '6,21,-1': {
    'name': ['combinatorial I [I3]']
  },
  '6,22,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,22,-1': {
    'name': ['combinatorial I [I5]']
  },
  '6,23,0': {
    'name': ['combinatorial RI [RI8]', 'super-locrian hexa mirror']
  },
  '6,24,1': {},
  '6,24,-1': {
    'name': ['melodic-minor hexachord']
  },
  '6,25,1': {
    'name': ['locrian hexachord']
  },
  '6,25,-1': {
    'name': ['minor hexachord']
  },
  '6,26,0': {
    'name': ['phrygian hexamirror', 'combinatorial RI [RI8]']
  },
  '6,27,1': {
    'name': ['combinatorial I [I11]']
  },
  '6,27,-1': {
    'name': ['combinatorial I [I1]', 'pyramid hexachord']
  },
  '6,28,0': {
    'name': ['double-phrygian heachord', 'combinatorial RI [RI6]']
  },
  '6,29,0': {
    'name': ['combinatorial RI [RI9]']
  },
  '6,30,1': {
    'name': ["Messiaen's truncated mode 2", 'minor-bitonal hexachord', 'combinatorial R [R6]', 'combinatorial I [I1, I7]']
  },
  '6,30,-1': {
    'name': ["Stravinsky's Petrouchka-chord", "Messiaen's truncated mode 2", 'major-bitonal hexachord', 'combinatorial R [R6]', 'combinatorial I [I1, I7]']
  },
  '6,31,1': {
    'name': ['combinatorial I [I7]']
  },
  '6,31,-1': {
    'name': ['combinatorial I [I11]']
  },
  '6,32,0': {
    'name': ['C all combinatorial [P6, I3, RI9]', 'Guidon/Arezzo', 'Arezzo major diatonic', 'major hexamirror', 'quartal hexamirror', 'first-order all combinatorial']
  },
  '6,33,1': {
    'name': ['dorian hexachord', 'combinatorial I [I6]']
  },
  '6,33,-1': {
    'name': ['dominant-eleventh', 'lydian hexachord', 'combinatorial I [I1]']
  },
  '6,34,1': {
    'name': ["Scriabin's Mystic-chord", 'Prometheus hexachord', 'combinatorial I [I11]']
  },
  '6,34,-1': {
    'name': ['augmented-eleventh', 'harmonic hexachord', 'combinatorial I [I7]']
  },
  '6,35,0': {
    'name': ['whole tone scale', '6 equal part division', 'F all-combinatorial [P1, P3, P5, P7, P9, P11, I1, I3, I5, I7, ' + 'I9, I11, R2, R4, R6, R8, R10, RI2, RI4, RI6, RI8, RI10]', "Messiaen's mode 1", 'sixth-order all combinatorial']
  },
  '6,36,1': {},
  '6,36,-1': {},
  '6,37,0': {
    'name': ['combinatorial RI [RI4]']
  },
  '6,38,0': {
    'name': ['combinatorial RI [RI3]']
  },
  '6,39,1': {},
  '6,39,-1': {},
  '6,40,1': {},
  '6,40,-1': {},
  '6,41,1': {},
  '6,41,-1': {},
  '6,42,0': {
    'name': ['combinatorial RI [RI3]']
  },
  '6,43,1': {
    'name': ['complement of all tri-chord hexachord']
  },
  '6,43,-1': {
    'name': ['complement of all-tri-chord hexachord [inverted form]']
  },
  '6,44,1': {
    'name': ['Schoenberg Anagram hexachord']
  },
  '6,44,-1': {
    'name': ['quasi raga Bauli']
  },
  '6,45,0': {
    'name': ['combinatorial RI [RI6]']
  },
  '6,46,1': {},
  '6,46,-1': {},
  '6,47,1': {},
  '6,47,-1': {
    'name': ['blues scale']
  },
  '6,48,0': {
    'name': ['combinatorial RI [RI2]']
  },
  '6,49,0': {
    'name': ['combinatorial RI [RI4]', 'Prometheus Neapolitan mode']
  },
  '6,50,0': {
    'name': ['combinatorial RI [RI1]']
  },
  '7,1,0': {
    'name': ['chromatic heptamirror']
  },
  '7,2,1': {},
  '7,2,-1': {},
  '7,3,1': {},
  '7,3,-1': {},
  '7,4,1': {},
  '7,4,-1': {},
  '7,5,1': {},
  '7,5,-1': {},
  '7,6,1': {},
  '7,6,-1': {},
  '7,7,1': {},
  '7,7,-1': {},
  '7,8,0': {},
  '7,9,1': {},
  '7,9,-1': {},
  '7,10,1': {},
  '7,10,-1': {},
  '7,11,1': {},
  '7,11,-1': {},
  '7,12,0': {},
  '7,13,1': {},
  '7,13,-1': {},
  '7,14,1': {},
  '7,14,-1': {},
  '7,15,0': {},
  '7,16,1': {
    'name': ["Debussy's heptatonic"]
  },
  '7,16,-1': {},
  '7,17,0': {},
  '7,18,1': {},
  '7,18,-1': {},
  '7,19,1': {},
  '7,19,-1': {},
  '7,20,1': {
    'name': ['chromatic phrygian inverse']
  },
  '7,20,-1': {
    'name': ['Greek chromatic', 'chromatic mixolydian', 'chromatic dorian', 'quasi raga Pantuvarali', 'mela Kanakangi']
  },
  '7,21,1': {},
  '7,21,-1': {
    'name': ['Gypsy [Roma] hexatonic']
  },
  '7,22,0': {
    'name': ['double harmonic scale', 'Persian', 'major Gypsy [Roma]', 'Hungarian minor', 'double harmonic scale', 'Asian', 'quasi raga Mayamdavagaula']
  },
  '7,23,1': {},
  '7,23,-1': {
    'name': ['tritone major heptachord']
  },
  '7,24,1': {},
  '7,24,-1': {
    'name': ['mystic heptaachord', 'Enigmatic heptatonic']
  },
  '7,25,1': {},
  '7,25,-1': {},
  '7,26,1': {},
  '7,26,-1': {},
  '7,27,1': {},
  '7,27,-1': {
    'name': ['modified blues']
  },
  '7,28,1': {},
  '7,28,-1': {},
  '7,29,1': {},
  '7,29,-1': {},
  '7,30,1': {
    'name': ['Neapolitan-minor mode']
  },
  '7,30,-1': {},
  '7,31,1': {
    'name': ['alternating heptachord', 'Hungarian major mode']
  },
  '7,31,-1': {
    'name': ['diminished scale', 'alternating heptachord']
  },
  '7,32,1': {
    'name': ['harmonic minor scale', 'Spanish Gypsy', 'mela Kiravani']
  },
  '7,32,-1': {
    'name': ['harmonic major scale', 'harmonic minor inverse', 'mela Cakravana', 'quasi raga Ahir Bhairav']
  },
  '7,33,0': {
    'name': ['Neapolitan-major mode', 'leading-whole-tone mode']
  },
  '7,34,0': {
    'name': ['melodic minor ascending scale', 'jazz minor', 'augmented thirteenth heptamirror', 'harmonic/super-locrian']
  },
  '7,35,0': {
    'name': ['major scale', 'major diatonic heptachord', 'natural minor scale', 'dominant thirteenth', 'locrian', 'phrygian', 'major inverse']
  },
  '7,36,1': {},
  '7,36,-1': {},
  '7,37,0': {},
  '7,38,1': {},
  '7,38,-1': {},
  '8,1,0': {
    'name': ['chromatic octamirror']
  },
  '8,2,1': {},
  '8,2,-1': {},
  '8,3,0': {},
  '8,4,1': {},
  '8,4,-1': {},
  '8,5,1': {},
  '8,5,-1': {},
  '8,6,0': {},
  '8,7,0': {},
  '8,8,0': {},
  '8,9,0': {
    'name': ["Messiaen's mode 4"]
  },
  '8,10,0': {},
  '8,11,1': {},
  '8,11,-1': {
    'name': ['blues octatonic']
  },
  '8,12,1': {},
  '8,12,-1': {},
  '8,13,1': {
    'name': ['blues octatonic']
  },
  '8,13,-1': {},
  '8,14,1': {},
  '8,14,-1': {},
  '8,15,1': {},
  '8,15,-1': {},
  '8,16,1': {},
  '8,16,-1': {
    'name': ['enigmatic octachord']
  },
  '8,17,0': {},
  '8,18,1': {},
  '8,18,-1': {},
  '8,19,1': {},
  '8,19,-1': {},
  '8,20,0': {},
  '8,21,0': {},
  '8,22,1': {},
  '8,22,-1': {
    'name': ['Spanish octatonic scale']
  },
  '8,23,0': {
    'name': ['Greek', 'blues', 'quartal octachord', 'diatonic octad']
  },
  '8,24,0': {},
  '8,25,0': {
    'name': ["Messiaen's mode 6"]
  },
  '8,26,0': {
    'name': ['blues', 'Spanish phrygian']
  },
  '8,27,1': {},
  '8,27,-1': {},
  '8,28,0': {
    'name': ['octatonic scale', "Messiaen's mode 2", 'alternating octatonic scale', 'diminished scale']
  },
  '8,29,1': {},
  '8,29,-1': {},
  '9,1,0': {
    'name': ['chromatic nonamirror']
  },
  '9,2,1': {},
  '9,2,-1': {},
  '9,3,1': {},
  '9,3,-1': {},
  '9,4,1': {},
  '9,4,-1': {},
  '9,5,1': {},
  '9,5,-1': {},
  '9,6,0': {},
  '9,7,1': {
    'name': ['nonatonic blues']
  },
  '9,7,-1': {},
  '9,8,1': {},
  '9,8,-1': {},
  '9,9,0': {},
  '9,10,0': {},
  '9,11,1': {},
  '9,11,-1': {
    'name': ['diminishing nonachord']
  },
  '9,12,0': {
    'name': ["Messiaen's mode 3", 'Tsjerepnin']
  },
  '10,1,0': {
    'name': ['chromatic decamirror']
  },
  '10,2,0': {},
  '10,3,0': {},
  '10,4,0': {},
  '10,5,0': {
    'name': ['major-minor mixed']
  },
  '10,6,0': {
    'name': ["Messiaen's mode 7"]
  },
  '11,1,0': {
    'name': ['chromatic undecamirror']
  },
  '12,1,0': {
    'name': ['aggregate', 'dodecachord', 'twelve-tone chromatic', 'chromatic scale', 'dodecamirror']
  }
};
function forteIndexToInversionsAvailable(card, index) {
  if (card < 1 || card > 12) {
    throw new Error("cardinality ".concat(card, " is not valid"));
  }

  if (index < 1 || index > TNMAX[card]) {
    throw new Error("index ".concat(index, " is invalid"));
  } // get morris invaraince vector


  var morris = FORTE[card][index][2];

  if (morris[1] > 0) {
    // second value stored inversion status
    return [0];
  } else {
    return [-1, 1];
  }
}

function _chordTableAddress(cardinality, forteClass, inversion, pcOriginal) {
  return {
    cardinality: cardinality,
    forteClass: forteClass,
    inversion: inversion,
    pcOriginal: pcOriginal
  };
}

function _validateAddress(address) {
  if (address !== undefined && address.cardinality !== undefined) {
    // got an object...
    address = [address.cardinality, address.forteClass, address.inversion, address.pcOriginal];
  }

  var _address$slice = address.slice(0, 2),
      _address$slice2 = _slicedToArray(_address$slice, 2),
      card = _address$slice2[0],
      index = _address$slice2[1];

  var inversion;

  if (address.length >= 3 && address[2] !== undefined) {
    inversion = address[2];
  }

  if (card < 1 || card > 13) {
    throw new Error("cardinality ".concat(card, " not valid"));
  } // using TN mode for all comparions


  if (index < 1 || index > TNMAX[card]) {
    throw new Error("index ".concat(index, " not valid"));
  }

  var inversionsAvailable = forteIndexToInversionsAvailable(card, index);

  if (inversion !== undefined) {
    if (!inversionsAvailable.includes(inversion)) {
      throw new Error("inversion ".concat(inversion, " not valid"));
    }
  }

  if (inversion === undefined) {
    // get a default inversion
    if (inversionsAvailable.includes(0)) {
      inversion = 0;
    } else {
      inversion = 1;
    }
  }

  return [card, index, inversion];
}

function addressToTransposedNormalForm(address) {
  var _validateAddress2 = _validateAddress(address),
      _validateAddress3 = _slicedToArray(_validateAddress2, 3),
      card = _validateAddress3[0],
      index = _validateAddress3[1],
      inversion = _validateAddress3[2];

  var i2 = String([index, inversion]);
  return SCDICT[card][i2][0];
}
function addressToPrimeForm(address) {
  var _validateAddress4 = _validateAddress(address.slice(0, 2)),
      _validateAddress5 = _slicedToArray(_validateAddress4, 3),
      card = _validateAddress5[0],
      index = _validateAddress5[1],
      inversion = _validateAddress5[2];

  var i2 = String([index, inversion]);
  return SCDICT[card][i2][0];
}
function addressToIntervalVector(address) {
  var _validateAddress6 = _validateAddress(address),
      _validateAddress7 = _slicedToArray(_validateAddress6, 3),
      card = _validateAddress7[0],
      index = _validateAddress7[1],
      inversion = _validateAddress7[2];

  var i2 = String([index, inversion]);
  return SCDICT[card][i2][2];
}
function intervalVectorToAddress(vector) {
  var post = [];

  for (var card = 1; card < 13; card++) {
    var num = 0;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = FORTE[card][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var sc = _step.value;

        if (sc === undefined) {
          num += 1;
          continue; // first, used for spacing
        } // index 1 is vector


        if (__WEBPACK_IMPORTED_MODULE_0__common_js__["b" /* default */].arrayEquals(sc[1], vector)) {
          post.push(_chordTableAddress(card, num));
        }

        num += 1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator["return"] != null) {
          _iterator["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  return post;
}
function addressToZAddress(address) {
  // noinspection JSUnusedLocalSymbols
  var _validateAddress8 = _validateAddress(address),
      _validateAddress9 = _slicedToArray(_validateAddress8, 3),
      card = _validateAddress9[0],
      index = _validateAddress9[1],
      unused_inversion = _validateAddress9[2];

  var z = FORTE[card][index][3];

  if (z === 0) {
    return undefined;
  } else {
    var zReal = z;

    if (Array.isArray(z)) {
      zReal = z[0];
    }

    var zAddress = _validateAddress([card, zReal, undefined]);

    return _chordTableAddress(zAddress[0], zAddress[1], zAddress[2]);
  }
}
function addressToCommonNames(address) {
  var addressNew = _validateAddress(address);

  var refDict = SCREF[String(addressNew)];
  return refDict.name;
}
function addressToForteName(address) {
  var classification = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'tn';

  var _validateAddress10 = _validateAddress(address),
      _validateAddress11 = _slicedToArray(_validateAddress10, 3),
      card = _validateAddress11[0],
      index = _validateAddress11[1],
      inversion = _validateAddress11[2];

  var iStr;

  if (classification.toLowerCase() === 'tn') {
    if (inversion === -1) {
      iStr = 'B';
    } else if (inversion === 1) {
      iStr = 'A';
    } else if (inversion === 0) {
      iStr = '';
    }
  } else {
    // tni, ignore inversion
    iStr = '';
  }

  return "".concat(card, "-").concat(index).concat(iStr);
}
function seekChordTablesAddress(c) {
  var pcSet = c.orderedPitchClasses;

  if (!pcSet.length) {
    throw new Error('cannot access chord tables address for Chord with no pitches');
  }

  var card = pcSet.length;

  if (card === 1) {
    // its a singleton: return
    return _chordTableAddress(1, 1, 0, pcSet[0]);
  } else if (card === 12) {
    // its the aggregate
    return _chordTableAddress(12, 1, 0, 0);
  } // go through each rotation of pcSet


  var candidates = [];

  for (var rot = 0; rot < card; rot++) {
    var testSetOrig = pcSet.slice(rot);

    for (var rotRemainder = 0; rotRemainder < rot; rotRemainder++) {
      testSetOrig.push(pcSet[rotRemainder]);
    } // transpose to lead with zero


    var testSetOriginalPC = testSetOrig[0];
    var testSet = [];
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = testSetOrig[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var x = _step2.value;
        var zeroTransposed = posMod(x - testSetOriginalPC, 12);
        testSet.push(zeroTransposed);
      } // create inversion; first take difference from 12 mod 12

    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
          _iterator2["return"]();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    var testSetInvert = [];

    for (var _i2 = 0, _testSet = testSet; _i2 < _testSet.length; _i2++) {
      var _x = _testSet[_i2];
      testSetInvert.push(posMod(12 - _x, 12));
    }

    testSetInvert.reverse(); // reverse order (first steps now last)
    // transpose all steps (were last) to zero, mod 12

    var testSetInvertOriginalPC = testSetInvert[0];

    for (var i = 0; i < testSetInvert.length; i++) {
      testSetInvert[i] = posMod(testSetInvert[i] + (12 - testSetInvertOriginalPC), 12);
    }

    var candidateTuple = [testSet, testSetInvert, testSetOriginalPC];
    candidates.push(candidateTuple);
  } // compare sets to those in table


  var match = false;
  var matchedPCOriginal;
  var index;
  var inversion;

  for (var indexCandidate = 0; indexCandidate < FORTE[card].length; indexCandidate++) {
    var dataLine = FORTE[card][indexCandidate];

    if (dataLine === undefined) {
      continue; // spacer lines
    }

    var dataLinePcs = dataLine[0];
    var inversionsAvailable = forteIndexToInversionsAvailable(card, indexCandidate);

    for (var _i3 = 0, _candidates = candidates; _i3 < _candidates.length; _i3++) {
      var _candidates$_i = _slicedToArray(_candidates[_i3], 3),
          candidate = _candidates$_i[0],
          candidateInversion = _candidates$_i[1],
          candidateOriginalPC = _candidates$_i[2];

      if (__WEBPACK_IMPORTED_MODULE_0__common_js__["b" /* default */].arrayEquals(dataLinePcs, candidate)) {
        index = indexCandidate;

        if (inversionsAvailable.includes(0)) {
          inversion = 0;
        } else {
          inversion = 1;
        }

        matchedPCOriginal = candidateOriginalPC;
        match = true;
        break;
      } else if (__WEBPACK_IMPORTED_MODULE_0__common_js__["b" /* default */].arrayEquals(dataLinePcs, candidateInversion)) {
        index = indexCandidate;

        if (inversionsAvailable.includes(0)) {
          inversion = 0;
        } else {
          inversion = -1;
        }

        matchedPCOriginal = candidateOriginalPC;
        match = true;
        break;
      }
    }
  }

  if (!match) {
    throw new Error("cannot find a chord table address for ".concat(pcSet));
  }

  return _chordTableAddress(card, index, inversion, matchedPCOriginal);
}

/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Derivation", function() { return Derivation; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Derivation =
/*#__PURE__*/
function () {
  /**
   *
   * @param {music21.base.Music21Object} [client]
   * @property {str} [method]
   * @property {music21.base.Music21Object} [origin]
   */
  function Derivation(client) {
    _classCallCheck(this, Derivation);

    this.client = client;
    this.method = undefined;
    this.origin = undefined;
  }

  _createClass(Derivation, [{
    key: "clone",
    value: function clone() {
      var newThing = new Derivation(this.client);
      newThing.method = this.method;
      newThing.origin = this.origin;
    }
  }, {
    key: "chain",
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function chain() {
      var origin;
      return regeneratorRuntime.wrap(function chain$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              origin = this.origin;

            case 1:
              if (!(origin !== undefined)) {
                _context.next = 7;
                break;
              }

              _context.next = 4;
              return origin;

            case 4:
              origin = origin.derivation.origin;
              _context.next = 1;
              break;

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, chain, this);
    })
  }, {
    key: "rootDerivation",
    value: function rootDerivation() {
      var derivationChain = Array.from(this.chain());

      if (derivationChain.length) {
        return derivationChain[derivationChain.length - 1];
      } else {
        return undefined;
      }
    }
  }]);

  return Derivation;
}();
/* harmony default export */ __webpack_exports__["default"] = (Derivation);

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return figuredBass; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pitch_js__ = __webpack_require__(3);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var shorthandNotation = {
  '': [5, 3],
  '5': [5, 3],
  '6': [6, 3],
  '7': [7, 5, 3],
  '9': [9, 7, 5, 3],
  '11': [11, 9, 7, 5, 3],
  '13': [13, 11, 9, 7, 5, 3],
  '6,5': [6, 5, 3],
  '4,3': [6, 4, 3],
  '4,2': [6, 4, 2],
  '2': [6, 4, 2]
};
/**
 * In music21p is in figuredBass.notation -- eventually to be moved there.
 */

var Notation =
/*#__PURE__*/
function () {
  /**
   *
   * @param {string} [notationColumn='']
   * @property {string[]} figureStrings
   * @property {int[]} origNumbers
   * @property {int[]} numbers
   * @property {string[]} modifierStrings
   * @property {Modifier[]} modifiers
   * @property {Figure[]} figures
   */
  function Notation() {
    var notationColumn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    _classCallCheck(this, Notation);

    this.notationColumn = notationColumn;
    this.figureStrings = undefined;
    this.origNumbers = undefined;
    this.origModStrings = undefined;
    this.numbers = undefined;
    this.modifierStrings = undefined;

    this._parseNotationColumn();

    this._translateToLonghand();

    this.modifiers = undefined;
    this.figures = undefined;

    this._getModifiers();

    this._getFigures();
  }
  /**
   * _parseNotationColumn - Given a notation column below a pitch, defines both this.numbers
   *    and this.modifierStrings, which provide the intervals above the
   *    bass and (if necessary) how to modify the corresponding pitches
   *    accordingly.
   *
   * @return {undefined}
   */


  _createClass(Notation, [{
    key: "_parseNotationColumn",
    value: function _parseNotationColumn() {
      var nc = this.notationColumn;
      var figures = nc.split(/,/);
      var numbers = [];
      var modifierStrings = [];
      var figureStrings = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = figures[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var figure = _step.value;
          figure = figure.trim();
          figureStrings.push(figure);
          var numberString = '';
          var modifierString = '';
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = figure[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var c = _step2.value;

              if (c.match(/\d/)) {
                numberString += c;
              } else {
                modifierString += c;
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
                _iterator2["return"]();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }

          var number = void 0;

          if (numberString !== '') {
            number = parseInt(numberString);
          }

          numbers.push(number);

          if (modifierString === '') {
            modifierString = undefined;
          }

          modifierStrings.push(modifierString);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      this.origNumbers = numbers;
      this.numbers = numbers;
      this.modifierStrings = modifierStrings;
      this.figureStrings = figureStrings;
    }
  }, {
    key: "_translateToLonghand",
    value: function _translateToLonghand() {
      var oldNumbers = this.numbers;
      var newNumbers = oldNumbers;
      var oldModifierStrings = this.modifierStrings;
      var newModifierStrings = oldModifierStrings;
      var oldNumbersString = oldNumbers.toString();

      if (shorthandNotation[oldNumbersString] !== undefined) {
        newNumbers = shorthandNotation[oldNumbersString];
        newModifierStrings = [];
        var temp = [];
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = oldNumbers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var number = _step3.value;

            if (number === undefined) {
              temp.push(3);
            } else {
              temp.push(number);
            }
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
              _iterator3["return"]();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }

        oldNumbers = temp;
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = newNumbers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var _number = _step4.value;
            var newModifierString = void 0;

            if (oldNumbers.includes(_number)) {
              var modifierStringIndex = oldNumbers.indexOf(_number);
              newModifierString = oldModifierStrings[modifierStringIndex];
            }

            newModifierStrings.push(newModifierString);
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
              _iterator4["return"]();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }
      } else {
        var _temp = [];
        var _iteratorNormalCompletion5 = true;
        var _didIteratorError5 = false;
        var _iteratorError5 = undefined;

        try {
          for (var _iterator5 = oldNumbers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
            var _number2 = _step5.value;

            if (_number2 === undefined) {
              _temp.push(3);
            } else {
              _temp.push(_number2);
            }
          }
        } catch (err) {
          _didIteratorError5 = true;
          _iteratorError5 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
              _iterator5["return"]();
            }
          } finally {
            if (_didIteratorError5) {
              throw _iteratorError5;
            }
          }
        }

        newNumbers = _temp;
      }

      this.numbers = newNumbers;
      this.modifierStrings = newModifierStrings;
    }
  }, {
    key: "_getModifiers",
    value: function _getModifiers() {
      var modifiers = [];

      for (var i = 0; i < this.numbers.length; i++) {
        var modifierString = this.modifierStrings[i];
        var modifier = new Modifier(modifierString);
        modifiers.push(modifier);
      }

      this.modifiers = modifiers;
    }
  }, {
    key: "_getFigures",
    value: function _getFigures() {
      var figures = [];

      for (var i = 0; i < this.numbers.length; i++) {
        var number = this.numbers[i];
        var modifierString = this.modifierStrings[i];
        var figure = new Figure(number, modifierString);
        figures.push(figure);
      }

      this.figures = figures;
    }
  }]);

  return Notation;
}();

var Figure = function Figure(number, modifierString) {
  _classCallCheck(this, Figure);

  this.number = number;
  this.modifierString = modifierString;
  this.modifier = new Modifier(modifierString);
};

var specialModifiers = {
  '+': '#',
  '/': '-',
  '\\': '#',
  b: '-',
  bb: '--',
  bbb: '---',
  bbbb: '-----',
  '++': '##',
  '+++': '###',
  '++++': '####'
};

var Modifier =
/*#__PURE__*/
function () {
  function Modifier(modifierString) {
    _classCallCheck(this, Modifier);

    this.modifierString = modifierString;
    this.accidental = this._toAccidental();
  }

  _createClass(Modifier, [{
    key: "_toAccidental",
    value: function _toAccidental() {
      var modStr = this.modifierString;

      if (modStr === undefined || modStr === '') {
        return undefined;
      }

      var a = new __WEBPACK_IMPORTED_MODULE_0__pitch_js__["a" /* pitch */].Accidental();

      if (specialModifiers[modStr] !== undefined) {
        modStr = specialModifiers[modStr];
      }

      a.set(modStr);
      return a;
    }
  }, {
    key: "modifyPitchName",
    value: function modifyPitchName(pitchNameToAlter) {
      var pitchToAlter = new __WEBPACK_IMPORTED_MODULE_0__pitch_js__["a" /* pitch */].Pitch(pitchNameToAlter);
      this.modifyPitch(pitchToAlter, true);
      return pitchToAlter.name;
    }
  }, {
    key: "modifyPitch",
    value: function modifyPitch(pitchToAlter, inPlace) {
      if (inPlace !== true) {
        pitchToAlter = pitchToAlter.clone();
      }

      if (this.accidental === undefined) {
        return pitchToAlter;
      }

      if (this.accidental.alter === 0.0 || pitchToAlter.accidental === undefined) {
        pitchToAlter.accidental = this.accidental.clone();
      } else {
        var newAccidental = new __WEBPACK_IMPORTED_MODULE_0__pitch_js__["a" /* pitch */].Accidental();
        var newAlter = pitchToAlter.accidental.alter + this.accidental.alter;
        newAccidental.set(newAlter);
        pitchToAlter.accidental = newAccidental;
      }

      return pitchToAlter;
    }
  }]);

  return Modifier;
}();

var figuredBass = {
  Notation: Notation,
  Figure: Figure,
  Modifier: Modifier
};

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return harmony; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__chord_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__key_js__ = __webpack_require__(14);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




var Harmony =
/*#__PURE__*/
function (_chord$Chord) {
  _inherits(Harmony, _chord$Chord);

  function Harmony(figure, keywords) {
    var _this;

    _classCallCheck(this, Harmony);

    if (keywords === undefined) {
      keywords = {};
    }

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Harmony).call(this));
    _this._writeAsChord = false;
    _this._roman = undefined;
    _this.chordStepModifications = [];
    _this._degreesList = [];
    /**
     *
     * @type {music21.key.Key|undefined}
     * @private
     */

    _this._key = undefined; // this._updateBasedOnXMLInput(keywords);

    _this._figure = figure;

    if (keywords.parseFigure !== false && _this._figure !== undefined) {
      _this._parseFigure();
    }

    if (_this._overrides.bass === undefined && _this._overrides.root !== undefined) {
      _this.bass(_this._overrides.root);
    }

    if (keywords.updatePitches && _this._figure !== undefined || _this._overrides.root !== undefined || _this._overrides.bass !== undefined) {
      _this._updatePitches();
    } // this._updateBasedOnXMLInput(keywords);


    if (keywords.parseFigure !== false && _this._figure !== undefined && _this._figure.indexOf('sus') !== -1 && _this._figure.indexOf('sus2') === -1) {
      _this.root(_this.bass());
    }

    return _this;
  }

  _createClass(Harmony, [{
    key: "_parseFigure",
    value: function _parseFigure() {}
  }, {
    key: "_updatePitches",
    value: function _updatePitches() {}
  }, {
    key: "findFigure",
    value: function findFigure() {}
  }, {
    key: "figure",
    get: function get() {
      if (this._figure === undefined) {
        return this.findFigure();
      } else {
        return this._figure;
      }
    },
    set: function set(newFigure) {
      this._figure = newFigure;

      if (this._figure !== undefined) {
        this._parseFigure();

        this._updatePitches();
      }
    }
  }, {
    key: "key",
    get: function get() {
      return this._key;
    },
    set: function set(keyOrScale) {
      if (typeof keyOrScale === 'string') {
        this._key = new __WEBPACK_IMPORTED_MODULE_1__key_js__["a" /* key */].Key(keyOrScale);
      } else {
        this._key = keyOrScale;
        this._roman = undefined;
      }
    }
  }]);

  return Harmony;
}(__WEBPACK_IMPORTED_MODULE_0__chord_js__["a" /* chord */].Chord);

var harmony = {
  Harmony: Harmony
};

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return renderOptions; });
/* unused harmony export RenderOptions */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_js__ = __webpack_require__(0);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/renderOptions -- an object that defines the render options for a Stream
 *
 * note: no parallel in music21p
 *
 * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab
 *
 */

/**
 * renderOptions module, see {@link music21.renderOptions}
 *
 * @exports music21/renderOptions
 */

/**
 * Options for rendering a stream
 *
 * @namespace music21.renderOptions
 * @memberof music21
 */

var renderOptions = {};
/**
 * An object that contains information on rendering the current stream
 *
 * Found on every Stream as `.renderOptions`
 *
 * @class RenderOptions
 * @memberof music21.renderOptions
 */

var RenderOptions = function RenderOptions() {
  _classCallCheck(this, RenderOptions);

  var defaultOptions = {
    displayClef: true,
    displayTimeSignature: true,
    displayKeySignature: true,
    scaleFactor: {
      x: 0.7,
      y: 0.7
    },
    top: 0,
    left: undefined,
    width: undefined,
    overriddenWidth: undefined,
    height: undefined,
    naiveHeight: 120,
    systemIndex: 0,
    partIndex: 0,
    measureIndex: 0,
    systemMeasureIndex: 0,
    systemPadding: undefined,
    naiveSystemPadding: 40,
    stemDirection: undefined,
    maxSystemWidth: undefined,
    rightBarline: undefined,
    staffLines: 5,
    staffConnectors: ['single', 'brace'],
    staffPadding: 60,
    // width...
    events: {
      click: 'play',
      dblclick: undefined // resize

    },
    startNewSystem: false,
    startNewPage: false,
    showMeasureNumber: undefined
  };
  __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].merge(this, defaultOptions);
};
renderOptions.RenderOptions = RenderOptions;

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SitesException", function() { return SitesException; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteRef", function() { return SiteRef; });
/* harmony export (immutable) */ __webpack_exports__["getId"] = getId;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sites", function() { return Sites; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions21__ = __webpack_require__(1);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * Objects for keeping track of relationships among Music21Objects. See {@link music21.sites} namespace
 *
 * Copyright 2017, Michael Scott Cuthbert and cuthbertLab
 * License: BSD
 */


/**
 * @namespace music21.sites
 * @memberof music21
 * @requires music21/common
 */

var SitesException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(SitesException, _Music21Exception);

  function SitesException() {
    _classCallCheck(this, SitesException);

    return _possibleConstructorReturn(this, _getPrototypeOf(SitesException).apply(this, arguments));
  }

  return SitesException;
}(__WEBPACK_IMPORTED_MODULE_1__exceptions21__["Music21Exception"]);
/**
 * SiteRef.site is held strongly in Javascript.  This is
 * actually NOT a problem because of the difference between
 * the way JS Garbage Collection works from Python (in all
 * browsers since IE6...). They follow reference chains and
 * find unreachable references and don't just check reference
 * counts.  Thus circular references still allow memory to be
 * garbage collected.  Tested in Chrome on 100000 streams, and
 * very small additional memory usage.
 * 
 * https://stackoverflow.com/questions/7347203/circular-references-in-javascript-garbage-collector
 */

var SiteRef =
/**
 * @property {boolean} isDead
 * @property {string|undefined} classString
 * @property {boolean|number} globalSiteIndex
 * @property {number|undefined} siteIndex
 * @property {music21.stream.Stream|undefined} site
 */
function SiteRef() {
  _classCallCheck(this, SiteRef);

  this.isDead = false;
  this.classString = undefined;
  this.globalSiteIndex = false;
  this.siteIndex = undefined;
  this.site = undefined;
};

var _NoneSiteRef = new SiteRef();

_NoneSiteRef.globalSiteIndex = -2;
_NoneSiteRef.siteIndex = -2;

var _singletonCounter = new __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].SingletonCounter();

var GLOBAL_SITE_STATE_DICT = new WeakMap();
function getId(obj) {
  if (!GLOBAL_SITE_STATE_DICT.has(obj)) {
    var newId = _singletonCounter.call();

    GLOBAL_SITE_STATE_DICT.set(obj, newId);
  }

  return GLOBAL_SITE_STATE_DICT.get(obj);
}
var Sites =
/*#__PURE__*/
function () {
  function Sites() {
    _classCallCheck(this, Sites);

    this.siteDict = new Map();
    this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);
    this._siteIndex = 0;
    this._lastID = -1;
  }

  _createClass(Sites, [{
    key: "includes",
    value: function includes(checkSite) {
      // noinspection JSUnusedLocalSymbols
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.siteDict[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step$value = _slicedToArray(_step.value, 2),
              unused_key = _step$value[0],
              siteRef = _step$value[1];

          if (siteRef.site === checkSite) {
            return true;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return false;
    }
  }, {
    key: "_keysByTime",
    value: function _keysByTime() {
      var newFirst = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var post = [];
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.siteDict[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _step2$value = _slicedToArray(_step2.value, 2),
              key = _step2$value[0],
              siteRef = _step2$value[1];

          var keyVal = [siteRef.siteIndex, key];
          post.push(keyVal);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      post.sort();

      if (newFirst) {
        post.reverse();
      }

      return post.map(function (innerList) {
        return innerList[1];
      });
    }
  }, {
    key: "add",
    value: function add(obj, idKey, classString) {
      if (idKey === undefined && obj !== undefined) {
        idKey = getId(obj);
      }

      var updateNotAdd = false;

      if (this.siteDict.has(idKey)) {
        var tempSiteRef = this.siteDict.get(idKey);

        if (!tempSiteRef.isDead && tempSiteRef.site !== undefined) {
          updateNotAdd = true;
        }
      }

      if (obj !== undefined && classString === undefined) {
        classString = obj.classes[0];
      }

      var siteRef;

      if (updateNotAdd) {
        siteRef = this.siteDict.get(idKey);
        siteRef.isDead = false;
      } else {
        siteRef = new SiteRef();
      }

      siteRef.site = obj; // stores a weakRef;

      siteRef.classString = classString;
      siteRef.siteIndex = this._siteIndex;
      this._siteIndex += 1;
      siteRef.globalSiteIndex = _singletonCounter.call();

      if (!updateNotAdd) {
        this.siteDict.set(idKey, siteRef);
      }
    }
  }, {
    key: "remove",
    value: function remove(obj) {
      var idKey = getId(obj);

      if (idKey === undefined) {
        return false;
      }

      return this.siteDict["delete"](idKey);
    }
  }, {
    key: "clear",
    value: function clear() {
      this.siteDict = new Map();
      this.siteDict.set(_NoneSiteRef.siteIndex, _NoneSiteRef);
      this._lastID = -1;
    }
    /**
     *
     * @param {boolean|string} [sortByCreationTime=false]
     * @param {music21.stream.Stream|undefined} [priorityTarget]
     * @param {boolean} [excludeNone=false]
     * @returns {IterableIterator<*>}
     */

  }, {
    key: "yieldSites",
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function yieldSites() {
      var sortByCreationTime,
          priorityTarget,
          excludeNone,
          keyRepository,
          priorityId,
          _iteratorNormalCompletion3,
          _didIteratorError3,
          _iteratorError3,
          _iterator3,
          _step3,
          key,
          siteRef,
          obj,
          _args = arguments;

      return regeneratorRuntime.wrap(function yieldSites$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              sortByCreationTime = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;
              priorityTarget = _args.length > 1 && _args[1] !== undefined ? _args[1] : undefined;
              excludeNone = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;

              if (sortByCreationTime === true) {
                keyRepository = this._keysByTime(false);
              } else if (sortByCreationTime === 'reverse') {
                keyRepository = this._keysByTime(true);
              } else {
                keyRepository = Array.from(this.siteDict.keys());
              }

              if (priorityTarget !== undefined) {
                priorityId = getId(priorityTarget);

                if (keyRepository.includes(priorityId)) {
                  keyRepository.splice(0, 0, keyRepository.pop(keyRepository.indexOf(priorityId)));
                }
              }

              _iteratorNormalCompletion3 = true;
              _didIteratorError3 = false;
              _iteratorError3 = undefined;
              _context.prev = 8;
              _iterator3 = keyRepository[Symbol.iterator]();

            case 10:
              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
                _context.next = 29;
                break;
              }

              key = _step3.value;
              siteRef = this.siteDict.get(key);

              if (!(siteRef === _NoneSiteRef)) {
                _context.next = 19;
                break;
              }

              if (excludeNone) {
                _context.next = 17;
                break;
              }

              _context.next = 17;
              return siteRef.site;

            case 17:
              _context.next = 26;
              break;

            case 19:
              obj = siteRef.site;

              if (!(obj === undefined)) {
                _context.next = 24;
                break;
              }

              siteRef.isDead = true;
              _context.next = 26;
              break;

            case 24:
              _context.next = 26;
              return obj;

            case 26:
              _iteratorNormalCompletion3 = true;
              _context.next = 10;
              break;

            case 29:
              _context.next = 35;
              break;

            case 31:
              _context.prev = 31;
              _context.t0 = _context["catch"](8);
              _didIteratorError3 = true;
              _iteratorError3 = _context.t0;

            case 35:
              _context.prev = 35;
              _context.prev = 36;

              if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
                _iterator3["return"]();
              }

            case 38:
              _context.prev = 38;

              if (!_didIteratorError3) {
                _context.next = 41;
                break;
              }

              throw _iteratorError3;

            case 41:
              return _context.finish(38);

            case 42:
              return _context.finish(35);

            case 43:
            case "end":
              return _context.stop();
          }
        }
      }, yieldSites, this, [[8, 31, 35, 43], [36,, 38, 42]]);
    })
  }, {
    key: "get",
    value: function get() {
      var sortByCreationTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var priorityTarget = arguments.length > 1 ? arguments[1] : undefined;
      var excludeNone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var post = Array.from(this.yieldSites(sortByCreationTime, priorityTarget, excludeNone)); // we do this resorting again, because the priority target might not match id and we
      // want to be extra safe.  If you want fast, use .yieldSites

      if (priorityTarget !== undefined) {
        if (post.includes(priorityTarget)) {
          post.splice(0, 0, post.pop(post.indexOf(priorityTarget)));
        }
      }

      return post;
    }
  }, {
    key: "getAttrByName",
    value: function getAttrByName(attrName) {
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = this.yieldSites('reverse')[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var obj = _step4.value;

          if (obj === undefined) {
            continue;
          }

          if (attrName in obj) {
            return obj[attrName];
          }
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return undefined;
    }
  }, {
    key: "getObjByClass",
    value: function getObjByClass(className, options) {
      var params = {
        callerFirst: this,
        sortByCreationTime: false,
        priorityTarget: undefined,
        getElementMethod: 'getElementAtOrBefore',
        memo: {}
      };
      __WEBPACK_IMPORTED_MODULE_0__common_js__["a" /* common */].merge(params, options);
      var memo = params.memo;
      var post;
      var objs = Array.from(this.yieldSites(params.sortByCreationTime, params.priorityTarget, true // excludeNone
      ));
      var classNameIsStr = typeof className === 'string';

      for (var _i2 = 0, _objs = objs; _i2 < _objs.length; _i2++) {
        var obj = _objs[_i2];

        if (classNameIsStr) {
          if (obj.classes.includes(className)) {
            post = obj;
            break;
          }
        } else if (obj instanceof className) {
          post = obj;
          break;
        }
      }

      if (post !== undefined) {
        return post;
      }

      for (var _i3 = 0, _objs2 = objs; _i3 < _objs2.length; _i3++) {
        var _obj = _objs2[_i3];
        // TODO: check inside object... perhaps should not be done in m21p
        var objId = getId(_obj);

        if (!(objId in memo)) {
          memo[objId] = _obj;
        }

        post = _obj.getContextByClass(className, params);

        if (post !== undefined) {
          break;
        }
      }

      return post;
    }
  }, {
    key: "length",
    get: function get() {
      return this.siteDict.size;
    }
  }]);

  return Sites;
}();

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return vfShow; });
/* unused harmony export RenderStack */
/* unused harmony export Renderer */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vexflow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vexflow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vexflow__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__clef_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__duration_js__ = __webpack_require__(6);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/vfShow -- Vexflow integration
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */






var _clefSingleton = new __WEBPACK_IMPORTED_MODULE_2__clef_js__["a" /* clef */].TrebleClef();
/**
 * for rendering vexflow. Will eventually go to music21/converter/vexflow
 *
 * See {@link music21.vfShow} namespace for details
 *
 * @exports music21/vfShow
 */

/**
 * Vexflow display related objects and methods.
 *
 * @namespace music21.vfShow
 * @memberof music21
 * @requires music21/common
 * @requires vexflow
 */


var vfShow = {};
/**
 * Represents a stack of objects that need to be rendered together.
 *
 * An intermediary state for showing created by {@link music21.vfShow.Renderer}.
 *
 * @class RenderStack
 * @memberof music21.vfShow
 * @property {Array<Vex.Flow.Voice>} voices - Vex.Flow.Voice objects
 * @property {Array<music21.stream.Stream>} streams - {@link music21.stream.Stream} objects
 * associated with the voices
 * @property {Array} textVoices - Vex.Flow.Voice objects for the text.
 */

var RenderStack =
/*#__PURE__*/
function () {
  function RenderStack() {
    _classCallCheck(this, RenderStack);

    this.voices = [];
    this.streams = [];
    this.textVoices = [];
    this.voiceToStreamMapping = new Map();
  }
  /**
   * @returns {Array} this.voices and this.textVoices as one array
   */


  _createClass(RenderStack, [{
    key: "allTickables",
    value: function allTickables() {
      var t = [];
      t.push.apply(t, _toConsumableArray(this.voices));
      t.push.apply(t, _toConsumableArray(this.textVoices));
      return t;
    }
    /**
     * @returns {Array<Array>} each array represents one staff....
     * where this.voices and this.textVoices are all in that staff...
     */

  }, {
    key: "tickablesByStave",
    value: function tickablesByStave() {
      var tickablesByStave = []; // a list of lists of tickables being placed on the same Stave.

      var knownStaves = []; // a list of Vex.Flow.Stave objects...

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.allTickables()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          var thisStaveIndex = knownStaves.indexOf(t.stave);
          var currentStaveHolder = void 0;

          if (thisStaveIndex === -1) {
            knownStaves.push(t.stave);
            currentStaveHolder = [];
            tickablesByStave.push(currentStaveHolder);
          } else {
            currentStaveHolder = tickablesByStave[thisStaveIndex];
          }

          currentStaveHolder.push(t);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return tickablesByStave;
    }
  }]);

  return RenderStack;
}();
vfShow.RenderStack = RenderStack;
/**
 * Renderer is a function that takes a stream, an
 * optional existing canvas or SVG element and a DOM
 * element where the canvas or SVG element should be placed
 * and renders the stream as Vexflow on the
 * canvas or svg element, placing it then in the where
 * DOM.
 *
 * "s" can be any type of Stream.
 *
 * "div" and "where" can be either a DOM
 * element or a jQuery object.
 *
 * @class Renderer
 * @memberof music21.vfShow
 * @param {music21.stream.Stream} s - main stream to render
 * @param {div} [div] - existing canvas or div-surroundingSVG element
 * @param {Node|jQuery} [where=document.body] - where to render the stream
 * @property {Vex.Flow.Renderer} vfRenderer - a Vex.Flow.Renderer to use
 * (will create if not existing)
 * @property {string} rendererType - canvas or svg
 * @property {Vex.Flow.Context} ctx - a Vex.Flow.Context (Canvas or SVG) to use.
 * @property {div} div - div-with-svg-or-canvas element
 * @property {jQuery} $div - jQuery div or canvas element
 * @property {jQuery} $where - jQuery element to render onto
 * @property {Vex.Flow.Formatter} activeFormatter - formatter
 * @property {Array<Vex.Flow.Beam>} beamGroups - beamGroups
 * @property {Array<Vex.Flow.StaveTie>} vfTies - ties as instances of Vex.Flow.StaveTie
 * @property {Array<number>} systemBreakOffsets - where to break the systems
 * @property {Array<Vex.Flow.Tuplet>} vfTuplets - tuplets represented in Vexflow
 * @property {Array<music21.vfShow.RenderStack>} stacks - array of RenderStack objects
 */

var Renderer =
/*#__PURE__*/
function () {
  function Renderer(s, div, where) {
    _classCallCheck(this, Renderer);

    this.stream = s; // this.streamType = s.classes[-1];

    this.rendererType = 'svg';
    this.div = undefined;
    this.$div = undefined;
    this.$where = undefined;
    this.activeFormatter = undefined;
    this._vfRenderer = undefined;
    this._ctx = undefined;
    this.beamGroups = [];
    this.stacks = []; // an Array of RenderStacks: {voices: [Array of Vex.Flow.Voice objects],
    //                                           streams: [Array of Streams, usually Measures]}

    this.vfTies = [];
    this.systemBreakOffsets = [];
    this.vfTuplets = []; // this.measureFormatters = [];

    if (where !== undefined) {
      if (where.jquery !== undefined) {
        this.$where = where;
      } else {
        this.$where = __WEBPACK_IMPORTED_MODULE_0_jquery__(where);
      }
    }

    if (div !== undefined) {
      if (div.jquery !== undefined) {
        this.$div = div;
        this.div = div[0];
      } else {
        this.div = div;
        this.$div = __WEBPACK_IMPORTED_MODULE_0_jquery__(div);
      }
    }
  }

  _createClass(Renderer, [{
    key: "render",

    /**
     *
     * main function to render a Stream.
     *
     * if s is undefined, uses the stored Stream from
     * the constructor object.
     *
     * @param {music21.stream.Stream} [s=this.stream]
     */
    value: function render(s) {
      if (s === undefined) {
        s = this.stream;
      }

      var isScorelike = false;
      var isPartlike = false;
      var isFlat = s.isFlat;

      if (s.isClassOrSubclass('Score')) {
        isScorelike = true;
      } else if (!isFlat && !s.get(0).isFlat) {
        isScorelike = true;
      } else if (!isFlat) {
        isPartlike = true;
      } // requires organization Score -> Part -> Measure -> elements...


      if (isScorelike) {
        this.prepareScorelike(s);
      } else if (isPartlike) {
        this.preparePartlike(s);
      } else {
        this.prepareArrivedFlat(s);
      }

      this.formatMeasureStacks();
      this.drawTies();
      this.drawMeasureStacks();
      this.drawBeamGroups();
      this.drawTuplets();
    }
    /**
     * Prepares a scorelike stream (i.e., one with parts or
     * Streams that should be rendered vertically like parts)
     * for rendering and adds Staff Connectors
     *
     * @param {music21.stream.Score} s - prepare a stream of parts (i.e., Score)
     */

  }, {
    key: "prepareScorelike",
    value: function prepareScorelike(s) {
      // console.log('prepareScorelike called');
      //
      var parts = s.parts;
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var subStream = _step2.value;
          this.preparePartlike(subStream);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      this.addStaffConnectors(s);
    }
    /**
     *
     * Prepares a Partlike stream (that is one with Measures
     * or substreams that should be considered like Measures)
     * for rendering.
     *
     * @param {music21.stream.Part} p
     */

  }, {
    key: "preparePartlike",
    value: function preparePartlike(p) {
      // console.log('preparePartlike called');
      this.systemBreakOffsets = [];
      var measureList = p.measures;

      for (var i = 0; i < measureList.length; i++) {
        var subStream = measureList.get(i);

        if (subStream.renderOptions.startNewSystem) {
          this.systemBreakOffsets.push(subStream.offset);
        }

        if (i === p.length - 1) {
          subStream.renderOptions.rightBarline = 'end';
        }

        if (this.stacks[i] === undefined) {
          this.stacks[i] = new vfShow.RenderStack();
        }

        this.prepareMeasure(subStream, this.stacks[i]);
      }

      this.prepareTies(p);
    }
    /**
     *
     * Prepares a score that arrived flat... sets up
     * stacks and vfTies after calling prepareFlat
     *
     * @param {music21.stream.Stream} m - a flat stream (maybe a measure or voice)
     */

  }, {
    key: "prepareArrivedFlat",
    value: function prepareArrivedFlat(m) {
      var stack = new vfShow.RenderStack();
      this.prepareMeasure(m, stack);
      this.stacks[0] = stack;
      this.prepareTies(m);
    }
    /**
     *
     * Prepares a measure (w/ or w/o voices) or generic Stream -- makes accidentals,
     * associates a Vex.Flow.Stave with the stream and
     * returns a vexflow Voice object
     *
     * @param {music21.stream.Measure} m - a measure object (w or w/o voices)
     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.
     */

  }, {
    key: "prepareMeasure",
    value: function prepareMeasure(m, stack) {
      if (m.hasVoices === undefined || m.hasVoices() === false) {
        this.prepareFlat(m, stack);
      } else {
        // get elements outside of voices;
        var firstVoiceCopy = m.getElementsByClass('Voice').get(0).clone(false);
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = m.getElementsNotOfClass('Voice')[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var el = _step3.value;
            firstVoiceCopy.insert(el.offset, el);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
              _iterator3["return"]();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }

        var rendOp = m.renderOptions; // get render options from Measure;

        var stave;
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = Array.from(m.getElementsByClass('Voice')).entries()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var _step4$value = _slicedToArray(_step4.value, 2),
                i = _step4$value[0],
                voiceStream = _step4$value[1];

            var voiceToRender = voiceStream;

            if (i === 0) {
              voiceToRender = firstVoiceCopy;
            }

            stave = this.prepareFlat(voiceToRender, stack, stave, rendOp);

            if (i === 0) {
              voiceStream.activeVFStave = voiceToRender.activeVFStave;
              voiceStream.storedVexflowStave = voiceToRender.activeVFStave;
            }
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
              _iterator4["return"]();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }
      }

      return stack;
    }
    /**
     * Main internal routine to prepare a flat stream
     *
     * @param {music21.stream.Stream} s - a flat stream object
     * @param {music21.vfShow.RenderStack} stack - a RenderStack object to prepare into.
     * @param {Vex.Flow.Stave} [optionalStave] - an optional existing stave.
     * @param {Object} [optional_renderOp] - render options.
     * Passed to {@link music21.vfShow.Renderer#renderStave}
     * @returns {Vex.Flow.Stave} staff to return too
     * (also changes the `stack` parameter and runs `makeNotation` on s)
     */

  }, {
    key: "prepareFlat",
    value: function prepareFlat(s, stack, optionalStave, optional_renderOp) {
      s.makeNotation();
      var stave;

      if (optionalStave !== undefined) {
        stave = optionalStave;
      } else {
        stave = this.renderStave(s, optional_renderOp);
      }

      s.activeVFStave = stave;
      var vf_voice = this.getVoice(s, stave);
      stack.voices.push(vf_voice);
      stack.streams.push(s);
      stack.voiceToStreamMapping.set(vf_voice, s);

      if (s.hasLyrics()) {
        stack.textVoices.push(this.getLyricVoice(s, stave));
      }

      return stave;
    }
    /**
     * Render the Vex.Flow.Stave from a flat stream and draws it.
     *
     * Just draws the stave, not the notes, etc.
     *
     * @param {music21.stream.Stream} [m=this.stream] - a flat stream
     * @param {Object} [optional_rendOp] - render options, passed
     * to {@link music21.vfShow.Renderer#newStave} and {@link music21.vfShow.Renderer#setClefEtc}
     * @returns {Vex.Flow.Stave} stave
     */

  }, {
    key: "renderStave",
    value: function renderStave(m, optional_rendOp) {
      if (m === undefined) {
        m = this.stream;
      }

      var ctx = this.ctx; // stave will be passed in from Measure when we have Voices

      var stave = this.newStave(m, optional_rendOp);
      this.setClefEtc(m, stave, optional_rendOp);
      stave.setContext(ctx);
      stave.draw();
      return stave;
    }
    /**
     * Draws the Voices (music and text) from `this.stacks`
     *
     */

  }, {
    key: "drawMeasureStacks",
    value: function drawMeasureStacks() {
      var ctx = this.ctx;

      for (var i = 0; i < this.stacks.length; i++) {
        var voices = this.stacks[i].allTickables();

        for (var j = 0; j < voices.length; j++) {
          var v = voices[j];
          v.draw(ctx);
        }
      }
    }
    /**
     * draws the tuplets.
     *
     */

  }, {
    key: "drawTuplets",
    value: function drawTuplets() {
      var ctx = this.ctx;
      this.vfTuplets.forEach(function (vft) {
        vft.setContext(ctx).draw();
      });
    }
    /**
     * draws the vfTies
     *
     */

  }, {
    key: "drawTies",
    value: function drawTies() {
      var ctx = this.ctx;

      for (var i = 0; i < this.vfTies.length; i++) {
        this.vfTies[i].setContext(ctx).draw();
      }
    }
    /**
     * Finds all tied notes and creates the proper Vex.Flow.StaveTie objects in
     * `this.vfTies`.
     *
     * @param {music21.stream.Part} p - a Part or similar object
     */

  }, {
    key: "prepareTies",
    value: function prepareTies(p) {
      var pf = p.flat.notesAndRests; // console.log('newSystemsAt', this.systemBreakOffsets);

      for (var i = 0; i < pf.length - 1; i++) {
        var thisNote = pf.get(i);

        if (thisNote.tie === undefined || thisNote.tie.type === 'stop') {
          continue;
        }

        var nextNote = pf.get(i + 1);
        var onSameSystem = true; // this.systemBreakOffsets.length will be 0 for a flat score

        for (var sbI = 0; sbI < this.systemBreakOffsets.length; sbI++) {
          var thisSystemBreak = this.systemBreakOffsets[sbI];

          if (thisNote.offset < thisSystemBreak && nextNote.offset >= thisSystemBreak) {
            onSameSystem = false;
            break;
          }
        }

        if (onSameSystem) {
          var vfTie = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveTie({
            first_note: thisNote.activeVexflowNote,
            last_note: nextNote.activeVexflowNote,
            first_indices: [0],
            last_indices: [0]
          });
          this.vfTies.push(vfTie);
        } else {
          // console.log('got me a tie across systemBreaks!');
          var vfTie1 = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveTie({
            first_note: thisNote.activeVexflowNote,
            first_indices: [0]
          });
          this.vfTies.push(vfTie1);
          var vfTie2 = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveTie({
            last_note: nextNote.activeVexflowNote,
            first_indices: [0]
          });
          this.vfTies.push(vfTie2);
        }
      }
    }
    /**
     * Returns a Vex.Flow.Voice object with all the tickables (i.e., Notes, Voices, etc.)
     *
     * Does not draw it...
     *
     * @param {music21.stream.Stream} [s=this.stream] -- usually a Measure or Voice
     * @param {Vex.Flow.Stave} stave - not optional (would never fly in Python...)
     * @returns {Vex.Flow.Voice}
     */

  }, {
    key: "getVoice",
    value: function getVoice(s, stave) {
      if (s === undefined) {
        s = this.stream;
      } // gets a group of notes as a voice, but completely unformatted and not drawn.


      var notes = this.vexflowNotes(s, stave);
      var voice = this.vexflowVoice(s);
      voice.setStave(stave);
      voice.addTickables(notes);
      return voice;
    }
    /**
     * Returns a Vex.Flow.Voice with the lyrics set to render in the proper place.
     *
     * @param {music21.stream.Stream} s -- usually a Measure or Voice
     * @param {Vex.Flow.Stave} stave
     * @returns {Vex.Flow.Voice}
     */

  }, {
    key: "getLyricVoice",
    value: function getLyricVoice(s, stave) {
      var textVoice = this.vexflowVoice(s);
      var lyrics = this.vexflowLyrics(s, stave);
      textVoice.setStave(stave);
      textVoice.addTickables(lyrics);
      return textVoice;
    }
    /**
     * Aligns all of `this.stacks` (after they've been prepared) so they align properly.
     *
     */

  }, {
    key: "formatMeasureStacks",
    value: function formatMeasureStacks() {
      // adds formats the voices, then adds the formatter information to every note in a voice...
      for (var i = 0; i < this.stacks.length; i++) {
        var stack = this.stacks[i];
        var vf_voices = stack.voices;
        var measuresOrVoices = stack.streams;
        var formatter = this.formatVoiceGroup(stack);

        for (var j = 0; j < measuresOrVoices.length; j++) {
          var m = measuresOrVoices[j];
          var v = vf_voices[j];
          this.applyFormatterInformationToNotes(v.stave, m, formatter);
        }
      }
    }
    /**
     * Formats a single voice group from a stack.
     *
     * @param {music21.vfShow.RenderStack} stack
     * @param {Boolean} [autoBeam=measures[0].autoBeam]
     * @returns {Vex.Flow.Formatter}
     */

  }, {
    key: "formatVoiceGroup",
    value: function formatVoiceGroup(stack, autoBeam) {
      // formats a group of voices to use the same formatter; returns the formatter
      // if autoBeam is true then it will apply beams for each voice and put them in
      // this.beamGroups;
      var allTickables = stack.allTickables();
      var vf_voices = stack.voices;
      var measuresOrVoices = stack.streams;

      if (autoBeam === undefined) {
        autoBeam = measuresOrVoices[0].autoBeam;
      }

      var formatter = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Formatter(); // var minLength = formatter.preCalculateMinTotalWidth([voices]);
      // console.log(minLength);

      if (vf_voices.length === 0) {
        return formatter;
      }

      var maxGlyphStart = 0; // find the stave with the farthest start point -- diff key sig, etc.

      for (var i = 0; i < allTickables.length; i++) {
        // console.log(voices[i], voices[i].stave, i);
        if (allTickables[i].stave.getNoteStartX() > maxGlyphStart) {
          maxGlyphStart = allTickables[i].stave.getNoteStartX();
        }
      }

      for (var _i2 = 0; _i2 < allTickables.length; _i2++) {
        allTickables[_i2].stave.setNoteStartX(maxGlyphStart); // corrected!

      } // TODO: should do the same for end_x -- for key sig changes, etc...


      var stave = vf_voices[0].stave; // all staves should be same length, so does not matter;

      var tickablesByStave = stack.tickablesByStave();
      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = tickablesByStave[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var staveTickables = _step5.value;
          formatter.joinVoices(staveTickables);
        }
      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
            _iterator5["return"]();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }

      formatter.formatToStave(allTickables, stave); //        const vf_auto_stem = false;
      //        for (const voice of voices) {
      //            let activeBeamGroupNotes = [];
      //            for (let j = 0; j < voice.notes.length; j++) {
      //                const n = voice.notes[j];
      //                if (n.beams === undefined || !n.beams.getNumbers().includes(1)) {
      //                    continue;
      //                }
      //                const eighthNoteBeam = n.beams.getByNumber(1);
      //                if (eighthNoteBeam.type === 'start') {
      //                    activeBeamGroupNotes = [n];
      //                } else {
      //                    activeBeamGroupNotes.push(n);
      //                }
      //                if (eighthNoteBeam.type === 'stop') {
      //                    const vfBeam = new Vex.Flow.Beam(activeBeamGroupNotes, vf_auto_stem);
      //                    this.beamGroups.push(vfBeam);
      //                    activeBeamGroupNotes = []; // housekeeping, not really necessary...
      //                }
      //            }
      //        }

      if (autoBeam) {
        for (var _i3 = 0; _i3 < vf_voices.length; _i3++) {
          var _this$beamGroups;

          // find beam groups -- n.b. this wipes out stemDirection. worth it usually...
          var vf_voice = vf_voices[_i3];
          var associatedStream = stack.voiceToStreamMapping.get(vf_voice);
          var beatGroups = void 0;

          if (associatedStream !== undefined && associatedStream.getSpecialContext('timeSignature') !== undefined) {
            beatGroups = associatedStream.getSpecialContext('timeSignature').vexflowBeatGroups(__WEBPACK_IMPORTED_MODULE_1_vexflow__); // TODO: getContextByClass...
            // console.log(beatGroups);
          } else {
            beatGroups = [new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Fraction(2, 8)]; // default beam groups
          }

          var beamGroups = __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Beam.applyAndGetBeams(vf_voice, undefined, beatGroups);

          (_this$beamGroups = this.beamGroups).push.apply(_this$beamGroups, _toConsumableArray(beamGroups));
        }
      }

      return formatter;
    }
    /**
     * Draws the beam groups.
     *
     */

  }, {
    key: "drawBeamGroups",
    value: function drawBeamGroups() {
      var ctx = this.ctx;

      for (var i = 0; i < this.beamGroups.length; i++) {
        this.beamGroups[i].setContext(ctx).draw();
      }
    }
    /**
     * Return a new Vex.Flow.Stave object, which represents
     * a single MEASURE of notation in m21j
     *
     * @param {music21.stream.Stream} s
     * @param {Object} [rendOp]
     * @returns {Vex.Flow.Stave}
     */

  }, {
    key: "newStave",
    value: function newStave(s, rendOp) {
      if (s === undefined) {
        s = this.stream;
      }

      if (rendOp === undefined) {
        rendOp = s.renderOptions;
      } // measure level...


      var width = rendOp.width;

      if (width === undefined) {
        width = s.estimateStaffLength() + rendOp.staffPadding;
      }

      var top = rendOp.top; // * rendOp.scaleFactor.y;

      if (top === undefined) {
        top = 0;
      }

      var left = rendOp.left;

      if (left === undefined) {
        left = 10;
      } // console.log('streamLength: ' + streamLength);


      if (__WEBPACK_IMPORTED_MODULE_3__debug_js__["a" /* debug */]) {
        console.log('creating new stave: left:' + left + ' top: ' + top + ' width: ' + width);
      }

      var stave = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Stave(left, top, width);
      return stave;
    }
    /**
     * Sets the number of stafflines, puts the clef on the Stave,
     * adds keySignature, timeSignature, and rightBarline
     *
     * @param {music21.stream.Stream} s
     * @param {Vex.Flow.Stave} stave
     * @param {Object} [rendOp=s.renderOptions] - a {@link music21.renderOptions.RenderOptions}
     * object that might have
     * `{showMeasureNumber: boolean, rightBarLine: string<{'single', 'double', 'end'}>}`
     */

  }, {
    key: "setClefEtc",
    value: function setClefEtc(s, stave, rendOp) {
      if (rendOp === undefined) {
        rendOp = s.renderOptions;
      }

      var sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef'); // this should not be necessary now that derivation is
      // checked, but does not hurt.

      if (sClef === undefined && s.length) {
        // the clef context might be from something else in the stream...
        var firstEl = s.get(0);
        sClef = firstEl.getContextByClass('Clef');
      } // last resort


      sClef = sClef || _clefSingleton;
      this.setStafflines(s, stave);

      if (rendOp.showMeasureNumber) {
        stave.setMeasure(rendOp.measureIndex + 1);
      }

      if (rendOp.displayClef) {
        var ottava;
        var size = 'default';

        if (sClef.octaveChange === 1) {
          ottava = '8va';
        } else if (sClef.octaveChange === -1) {
          ottava = '8vb';
        }

        stave.addClef(sClef.name, size, ottava);
      }

      var context_ks = s.getSpecialContext('keySignature') || s.getContextByClass('KeySignature');

      if (context_ks !== undefined && rendOp.displayKeySignature) {
        var ksVFName = context_ks.majorName().replace(/-/g, 'b');
        stave.addKeySignature(ksVFName);
      }

      var context_ts = s.getSpecialContext('timeSignature') || s.getContextByClass('TimeSignature');

      if (context_ts !== undefined && rendOp.displayTimeSignature) {
        stave.addTimeSignature(context_ts.numerator.toString() + '/' + context_ts.denominator.toString());
      }

      if (rendOp.rightBarline !== undefined) {
        var bl = rendOp.rightBarline;
        var barlineMap = {
          single: 'SINGLE',
          "double": 'DOUBLE',
          end: 'END'
        };
        var vxBL = barlineMap[bl];

        if (vxBL !== undefined) {
          stave.setEndBarType(__WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Barline.type[vxBL]);
        }
      }
    }
    /**
     * Sets the number of stafflines properly for the Stave object.
     *
     * This method does not just set Vex.Flow.Stave#setNumLines() except
     * if the number of lines is 0 or >=4, because the default in VexFlow is
     * to show the bottom(top?), not middle, lines and that looks bad.
     *
     * @param {music21.stream.Stream} s - stream to get the `.staffLines`
     * from `s.renderOptions` from -- should allow for overriding.
     * @param {Vex.Flow.Stave} vexflowStave - stave to set the staff lines for.
     */

  }, {
    key: "setStafflines",
    value: function setStafflines(s, vexflowStave) {
      var rendOp = s.renderOptions;

      if (rendOp.staffLines !== 5) {
        if (rendOp.staffLines === 0) {
          vexflowStave.setNumLines(0);
        } else if (rendOp.staffLines === 1) {
          // Vex.Flow.Stave.setNumLines hides all but the top line.
          // this is better
          vexflowStave.options.line_config = [{
            visible: false
          }, {
            visible: false
          }, {
            visible: true
          }, // show middle
          {
            visible: false
          }, {
            visible: false
          }];
        } else if (rendOp.staffLines === 2) {
          vexflowStave.options.line_config = [{
            visible: false
          }, {
            visible: false
          }, {
            visible: true
          }, // show middle
          {
            visible: true
          }, {
            visible: false
          }];
        } else if (rendOp.staffLines === 3) {
          vexflowStave.options.line_config = [{
            visible: false
          }, {
            visible: true
          }, {
            visible: true
          }, // show middle
          {
            visible: true
          }, {
            visible: false
          }];
        } else {
          vexflowStave.setNumLines(rendOp.staffLines);
        }
      }
    }
    /**
     * Gets the Vex.Flow.StaveNote objects from a Stream.
     *
     * Also changes `this.vfTuplets`.
     *
     * @param {music21.stream.Stream} [s=this.stream] - flat stream to find notes in
     * @param {Vex.Flow.Stave} stave - Vex.Flow.Stave to render notes on to.
     * @returns {Array<Vex.Flow.StaveNote>} notes to return
     */

  }, {
    key: "vexflowNotes",
    value: function vexflowNotes(s, stave) {
      if (s === undefined) {
        s = this.stream;
      } // runs on a flat stream, returns a list of voices...


      var notes = [];
      var vfTuplets = [];
      var activeTuplet;
      var activeTupletLength = 0.0;
      var activeTupletVexflowNotes = [];
      var sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef');

      if (sClef === undefined && s.length) {
        // TODO: follow Derivation...
        var firstEl = s.get(0);
        sClef = firstEl.getContextByClass('Clef');
      }

      if (sClef === undefined) {
        sClef = _clefSingleton;
      }

      var options = {
        clef: sClef,
        stave: stave
      };
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = s[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var thisEl = _step6.value;

          if (thisEl.isClassOrSubclass('GeneralNote') && thisEl.duration !== undefined) {
            // sets thisEl.activeVexflowNote -- may be overwritten but not so fast...
            var vfn = thisEl.vexflowNote(options);

            if (vfn === undefined) {
              console.error('Cannot create a vexflowNote from: ', thisEl);
              continue;
            }

            if (stave !== undefined) {
              vfn.setStave(stave);
            }

            notes.push(vfn); // account for tuplets...

            if (thisEl.duration.tuplets.length > 0) {
              // only support one tuplet per note -- like vexflow
              if (activeTuplet === undefined) {
                activeTuplet = thisEl.duration.tuplets[0];
              }

              activeTupletVexflowNotes.push(vfn);
              activeTupletLength += thisEl.duration.quarterLength; // console.log(activeTupletLength, activeTuplet.totalTupletLength());
              //
              // Add tuplet when complete.

              if (activeTupletLength >= activeTuplet.totalTupletLength() || Math.abs(activeTupletLength - activeTuplet.totalTupletLength()) < 0.001) {
                // console.log(activeTupletVexflowNotes);
                var tupletOptions = {
                  num_notes: activeTuplet.numberNotesActual,
                  notes_occupied: activeTuplet.numberNotesNormal
                }; // console.log('tupletOptions', tupletOptions);

                var vfTuplet = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Tuplet(activeTupletVexflowNotes, tupletOptions);

                if (activeTuplet.tupletNormalShow === 'ratio') {
                  vfTuplet.setRatioed(true);
                }

                vfTuplets.push(vfTuplet);
                activeTupletLength = 0.0;
                activeTuplet = undefined;
                activeTupletVexflowNotes = [];
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
            _iterator6["return"]();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }

      if (activeTuplet !== undefined) {
        console.warn('incomplete tuplet found in stream: ', s);
      }

      if (vfTuplets.length > 0) {
        var _this$vfTuplets;

        (_this$vfTuplets = this.vfTuplets).push.apply(_this$vfTuplets, vfTuplets);
      }

      return notes;
    }
    /**
     * Gets an Array of `Vex.Flow.TextNote` objects from any lyrics found in s
     *
     * @param {music21.stream.Stream} s - flat stream to search.
     * @param {Vex.Flow.Stave} stave
     * @returns {Array<Vex.Flow.TextNote>}
     */

  }, {
    key: "vexflowLyrics",
    value: function vexflowLyrics(s, stave) {
      var getTextNote = function getTextNote(text, font, d, lyricObj) {
        // console.log(text, font, d);
        var t1 = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].TextNote({
          text: text,
          font: font,
          duration: d.vexflowDuration
        }).setLine(11).setStave(stave).setJustification(__WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].TextNote.Justification.LEFT);

        if (lyricObj) {
          t1.setStyle(lyricObj.style);
        }

        if (d.tuplets.length > 0) {
          t1.applyTickMultiplier(d.tuplets[0].numberNotesNormal, d.tuplets[0].numberNotesActual);
        }

        return t1;
      };

      if (s === undefined) {
        s = this.stream;
      } // runs on a flat, gapless, no-overlap stream, returns a list of TextNote objects...


      var lyricsObjects = [];
      var _iteratorNormalCompletion7 = true;
      var _didIteratorError7 = false;
      var _iteratorError7 = undefined;

      try {
        for (var _iterator7 = s[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
          var el = _step7.value;
          var lyricsArray = el.lyrics;

          if (lyricsArray === undefined) {
            continue;
          }

          var text = void 0;
          var d = el.duration;
          var addConnector = false;
          var firstLyric = void 0;
          var font = {
            family: 'Serif',
            size: 12,
            weight: ''
          };

          if (lyricsArray.length === 0) {
            text = '';
          } else {
            firstLyric = lyricsArray[0];
            text = firstLyric.text;

            if (text === undefined) {
              text = '';
            }

            if (firstLyric.syllabic === 'middle' || firstLyric.syllabic === 'begin') {
              addConnector = ' ' + firstLyric.lyricConnector;
              var tempQl = el.duration.quarterLength / 2.0;
              d = new __WEBPACK_IMPORTED_MODULE_4__duration_js__["a" /* duration */].Duration(tempQl);
            }

            if (firstLyric.style.fontFamily) {
              font.family = firstLyric.style.fontFamily;
            }

            if (firstLyric.style.fontSize) {
              font.size = firstLyric.style.fontSize;
            }

            if (firstLyric.style.fontWeight) {
              font.weight = firstLyric.style.fontWeight;
            }
          }

          var t1 = getTextNote(text, font, d, firstLyric);
          lyricsObjects.push(t1);

          if (addConnector !== false) {
            var connector = getTextNote(addConnector, font, d);
            lyricsObjects.push(connector);
          }
        }
      } catch (err) {
        _didIteratorError7 = true;
        _iteratorError7 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion7 && _iterator7["return"] != null) {
            _iterator7["return"]();
          }
        } finally {
          if (_didIteratorError7) {
            throw _iteratorError7;
          }
        }
      }

      return lyricsObjects;
    }
    /**
     * Creates a Vex.Flow.Voice of the appropriate length given a Stream.
     *
     * @param {music21.stream.Stream} s
     * @returns {Vex.Flow.Voice}
     */

  }, {
    key: "vexflowVoice",
    value: function vexflowVoice(s) {
      var totalLength = s.duration.quarterLength;
      var num1024 = Math.round(totalLength / (1 / 256));
      var beatValue = 1024;

      if (num1024 % 512 === 0) {
        beatValue = 2;
        num1024 /= 512;
      } else if (num1024 % 256 === 0) {
        beatValue = 4;
        num1024 /= 256;
      } else if (num1024 % 128 === 0) {
        beatValue = 8;
        num1024 /= 128;
      } else if (num1024 % 64 === 0) {
        beatValue = 16;
        num1024 /= 64;
      } else if (num1024 % 32 === 0) {
        beatValue = 32;
        num1024 /= 32;
      } else if (num1024 % 16 === 0) {
        beatValue = 64;
        num1024 /= 16;
      } else if (num1024 % 8 === 0) {
        beatValue = 128;
        num1024 /= 8;
      } else if (num1024 % 4 === 0) {
        beatValue = 256;
        num1024 /= 4;
      } else if (num1024 % 2 === 0) {
        beatValue = 512;
        num1024 /= 2;
      } // console.log('creating voice');


      if (__WEBPACK_IMPORTED_MODULE_3__debug_js__["a" /* debug */]) {
        console.log('New voice, num_beats: ' + num1024.toString() + ' beat_value: ' + beatValue.toString());
      }

      var vfv = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Voice({
        num_beats: num1024,
        beat_value: beatValue,
        resolution: __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].RESOLUTION
      }); // from vexflow/src/voice.js
      //
      // Modes allow the addition of ticks in three different ways:
      //
      // STRICT: This is the default. Ticks must fill the voice.
      // SOFT:   Ticks can be added without restrictions.
      // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum
      //         tick length.

      vfv.setMode(__WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Voice.Mode.SOFT);
      return vfv;
    }
  }, {
    key: "staffConnectorsMap",
    value: function staffConnectorsMap(connectorType) {
      var connectorMap = {
        brace: __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveConnector.type.BRACE,
        single: __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveConnector.type.SINGLE,
        "double": __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveConnector.type.DOUBLE,
        bracket: __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveConnector.type.BRACKET
      };
      return connectorMap[connectorType];
    }
    /**
     * If a stream has parts (NOT CHECKED HERE) create and
     * draw an appropriate Vex.Flow.StaveConnector
     *
     * @param {music21.stream.Score} s
     */

  }, {
    key: "addStaffConnectors",
    value: function addStaffConnectors(s) {
      if (s === undefined) {
        s = this.stream;
      }

      var parts = s.parts;
      var numParts = parts.length;

      if (numParts < 2) {
        return;
      }

      var firstPart = parts.get(0);
      var lastPart = parts.get(-1);
      var firstPartMeasures = firstPart.measures;
      var lastPartMeasures = lastPart.measures;
      var numMeasures = firstPartMeasures.length;

      for (var mIndex = 0; mIndex < numMeasures; mIndex++) {
        var thisPartMeasure = firstPartMeasures.get(mIndex);
        var lastPartMeasure = lastPartMeasures.get(mIndex); // only needed once per system but
        // good for symmetry.

        if (thisPartMeasure.renderOptions.startNewSystem) {
          var topVFStaff = thisPartMeasure.activeVFStave;
          var bottomVFStaff = lastPartMeasure.activeVFStave;

          if (topVFStaff === undefined) {
            if (!thisPartMeasure.isFlat) {
              var thisPartVoice = thisPartMeasure.getElementsByClass('Stream').get(0);
              topVFStaff = thisPartVoice.activeVFStave;

              if (topVFStaff === undefined) {
                console.warn('No active VexFlow Staves defined for at least one measure');
                continue;
              }
            }
          }

          if (bottomVFStaff === undefined) {
            if (!lastPartMeasure.isFlat) {
              var lastPartVoice = lastPartMeasure.getElementsByClass('Stream').get(0);
              bottomVFStaff = lastPartVoice.activeVFStave;

              if (bottomVFStaff === undefined) {
                console.warn('No active VexFlow Staves defined for at least one measure');
                continue;
              }
            }
          }

          for (var i = 0; i < s.renderOptions.staffConnectors.length; i++) {
            var sc = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].StaveConnector(topVFStaff, bottomVFStaff);
            var scTypeM21 = s.renderOptions.staffConnectors[i];
            var scTypeVF = this.staffConnectorsMap(scTypeM21);
            sc.setType(scTypeVF);
            sc.setContext(this.ctx);
            sc.draw();
          }
        }
      }
    }
    /**
     * The process of putting a Stream onto a div affects each of the
     * elements in the Stream by adding pieces of information to
     * each {@link music21.base.Music21Object} -- see `applyFormatterInformationToNotes`
     *
     * You might want to remove this information; this routine does that.
     *
     * @param {music21.stream.Stream} s - can have parts, measures, etc.
     * @param {boolean} [recursive=false]
     */

  }, {
    key: "removeFormatterInformation",
    value: function removeFormatterInformation(s, recursive) {
      s.storedVexflowStave = undefined;
      var _iteratorNormalCompletion8 = true;
      var _didIteratorError8 = false;
      var _iteratorError8 = undefined;

      try {
        for (var _iterator8 = s[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
          var el = _step8.value;
          el.x = undefined;
          el.y = undefined;
          el.width = undefined;
          el.systemIndex = undefined;
          el.activeVexflowNote = undefined;

          if (recursive && el.isClassOrSubclass('Stream')) {
            this.removeFormatterInformation(el, recursive);
          }
        }
      } catch (err) {
        _didIteratorError8 = true;
        _iteratorError8 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion8 && _iterator8["return"] != null) {
            _iterator8["return"]();
          }
        } finally {
          if (_didIteratorError8) {
            throw _iteratorError8;
          }
        }
      }
    }
    /**
     * Adds the following pieces of information to each Note
     *
     * - el.x -- x location in pixels
     * - el.y -- y location in pixels
     * - el.width - width of element in pixels.
     * - el.systemIndex -- which system is it on
     * - el.activeVexflowNote - which Vex.Flow.StaveNote is it connected with.
     *
     * mad props to our friend Vladimir Viro for figuring this out! Visit http://peachnote.com/
     *
     * Also sets s.storedVexflowStave to stave.
     *
     * @param {Vex.Flow.Stave} stave
     * @param {music21.stream.Stream} [s=this.stream]
     * @param {Vex.Flow.Formatter} formatter
     */

  }, {
    key: "applyFormatterInformationToNotes",
    value: function applyFormatterInformationToNotes(stave, s, formatter) {
      if (s === undefined) {
        s = this.stream;
      }

      var sClef = s.getSpecialContext('clef') || s.getContextByClass('Clef') || _clefSingleton;

      var noteOffsetLeft = 0; // var staveHeight = 80;

      if (stave !== undefined) {
        noteOffsetLeft = stave.start_x + stave.glyph_start_x;

        if (__WEBPACK_IMPORTED_MODULE_3__debug_js__["a" /* debug */]) {
          console.log('noteOffsetLeft: ' + noteOffsetLeft + ' ; stave.start_x: ' + stave.start_x);
          console.log('Bottom y: ' + stave.getBottomY());
        } // staveHeight = stave.height;

      }

      var nextTicks = 0;
      var _iteratorNormalCompletion9 = true;
      var _didIteratorError9 = false;
      var _iteratorError9 = undefined;

      try {
        for (var _iterator9 = s[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
          var el = _step9.value;

          if (el.isClassOrSubclass('GeneralNote')) {
            var vfn = el.activeVexflowNote;

            if (vfn === undefined) {
              continue;
            }

            var nTicks = parseInt(vfn.ticks);
            var formatterNote = formatter.tickContexts.map[String(nextTicks)];
            nextTicks += nTicks;
            el.x = vfn.getAbsoluteX(); // these are a bit hacky...

            el.systemIndex = s.renderOptions.systemIndex; // console.log(el.x + " " + formatterNote.x + " " + noteOffsetLeft);

            if (formatterNote === undefined) {
              continue;
            }

            el.width = formatterNote.width;

            if (el.pitch !== undefined) {
              // note only...
              el.y = stave.getBottomY() - (sClef.lowestLine - el.pitch.diatonicNoteNum) * stave.options.spacing_between_lines_px; // console.log('Note DNN: ' + el.pitch.diatonicNoteNum + " ; y: " + el.y);
            }
          }
        }
      } catch (err) {
        _didIteratorError9 = true;
        _iteratorError9 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion9 && _iterator9["return"] != null) {
            _iterator9["return"]();
          }
        } finally {
          if (_didIteratorError9) {
            throw _iteratorError9;
          }
        }
      }

      if (__WEBPACK_IMPORTED_MODULE_3__debug_js__["a" /* debug */]) {
        var _iteratorNormalCompletion10 = true;
        var _didIteratorError10 = false;
        var _iteratorError10 = undefined;

        try {
          for (var _iterator10 = s[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
            var n = _step10.value;

            if (n.pitch !== undefined) {
              console.log(n.pitch.diatonicNoteNum + ' ' + n.x + ' ' + (n.x + n.width));
            }
          }
        } catch (err) {
          _didIteratorError10 = true;
          _iteratorError10 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion10 && _iterator10["return"] != null) {
              _iterator10["return"]();
            }
          } finally {
            if (_didIteratorError10) {
              throw _iteratorError10;
            }
          }
        }
      }

      s.storedVexflowStave = stave;
    }
  }, {
    key: "vfRenderer",
    get: function get() {
      var backend;

      if (this.rendererType === 'canvas') {
        backend = __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Renderer.Backends.CANVAS;
      } else {
        backend = __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Renderer.Backends.SVG;
      }

      if (this._vfRenderer !== undefined) {
        return this._vfRenderer;
      } else {
        this._vfRenderer = new __WEBPACK_IMPORTED_MODULE_1_vexflow__["Flow"].Renderer(this.div, backend);

        if (this.rendererType === 'svg') {
          this._vfRenderer.resize(this.$div.attr('width'), this.$div.attr('height'));
        }

        return this._vfRenderer;
      }
    },
    set: function set(vfr) {
      this._vfRenderer = vfr;
    }
  }, {
    key: "ctx",
    get: function get() {
      if (this._ctx !== undefined) {
        return this._ctx;
      } else {
        this._ctx = this.vfRenderer.getContext();

        if (this.stream && this.stream.renderOptions && this.stream.renderOptions.scaleFactor.x && this.stream.renderOptions.scaleFactor.y) {
          this._ctx.scale(this.stream.renderOptions.scaleFactor.x, this.stream.renderOptions.scaleFactor.y);
        }

        return this._ctx;
      }
    },
    set: function set(ctx) {
      this._ctx = ctx;
    }
  }]);

  return Renderer;
}();
vfShow.Renderer = Renderer;

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralObjectExporter", function() { return GeneralObjectExporter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XMLExporterBase", function() { return XMLExporterBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScoreExporter", function() { return ScoreExporter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PartExporter", function() { return PartExporter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasureExporter", function() { return MeasureExporter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__clef_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__stream_js__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__exceptions21_js__ = __webpack_require__(1);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }






var MusicXMLExportException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(MusicXMLExportException, _Music21Exception);

  function MusicXMLExportException() {
    _classCallCheck(this, MusicXMLExportException);

    return _possibleConstructorReturn(this, _getPrototypeOf(MusicXMLExportException).apply(this, arguments));
  }

  return MusicXMLExportException;
}(__WEBPACK_IMPORTED_MODULE_3__exceptions21_js__["Music21Exception"]);

function typeToMusicXMLType(value) {
  if (value === 'longa') {
    return 'long';
  } else if (value === '2048th') {
    throw new MusicXMLExportException('Cannot convert "2048th" duration to MusicXML (too short).');
  } else {
    return value;
  }
}

function normalizeColor(color) {
  var colors = {
    'aliceblue': '#f0f8ff',
    'antiquewhite': '#faebd7',
    'aqua': '#00ffff',
    'aquamarine': '#7fffd4',
    'azure': '#f0ffff',
    'beige': '#f5f5dc',
    'bisque': '#ffe4c4',
    'black': '#000000',
    'blanchedalmond': '#ffebcd',
    'blue': '#0000ff',
    'blueviolet': '#8a2be2',
    'brown': '#a52a2a',
    'burlywood': '#deb887',
    'cadetblue': '#5f9ea0',
    'chartreuse': '#7fff00',
    'chocolate': '#d2691e',
    'coral': '#ff7f50',
    'cornflowerblue': '#6495ed',
    'cornsilk': '#fff8dc',
    'crimson': '#dc143c',
    'cyan': '#00ffff',
    'darkblue': '#00008b',
    'darkcyan': '#008b8b',
    'darkgoldenrod': '#b8860b',
    'darkgray': '#a9a9a9',
    'darkgreen': '#006400',
    'darkkhaki': '#bdb76b',
    'darkmagenta': '#8b008b',
    'darkolivegreen': '#556b2f',
    'darkorange': '#ff8c00',
    'darkorchid': '#9932cc',
    'darkred': '#8b0000',
    'darksalmon': '#e9967a',
    'darkseagreen': '#8fbc8f',
    'darkslateblue': '#483d8b',
    'darkslategray': '#2f4f4f',
    'darkturquoise': '#00ced1',
    'darkviolet': '#9400d3',
    'deeppink': '#ff1493',
    'deepskyblue': '#00bfff',
    'dimgray': '#696969',
    'dodgerblue': '#1e90ff',
    'firebrick': '#b22222',
    'floralwhite': '#fffaf0',
    'forestgreen': '#228b22',
    'fuchsia': '#ff00ff',
    'gainsboro': '#dcdcdc',
    'ghostwhite': '#f8f8ff',
    'gold': '#ffd700',
    'goldenrod': '#daa520',
    'gray': '#808080',
    'green': '#008000',
    'greenyellow': '#adff2f',
    'honeydew': '#f0fff0',
    'hotpink': '#ff69b4',
    'indianred ': '#cd5c5c',
    'indigo': '#4b0082',
    'ivory': '#fffff0',
    'khaki': '#f0e68c',
    'lavender': '#e6e6fa',
    'lavenderblush': '#fff0f5',
    'lawngreen': '#7cfc00',
    'lemonchiffon': '#fffacd',
    'lightblue': '#add8e6',
    'lightcoral': '#f08080',
    'lightcyan': '#e0ffff',
    'lightgoldenrodyellow': '#fafad2',
    'lightgrey': '#d3d3d3',
    'lightgreen': '#90ee90',
    'lightpink': '#ffb6c1',
    'lightsalmon': '#ffa07a',
    'lightseagreen': '#20b2aa',
    'lightskyblue': '#87cefa',
    'lightslategray': '#778899',
    'lightsteelblue': '#b0c4de',
    'lightyellow': '#ffffe0',
    'lime': '#00ff00',
    'limegreen': '#32cd32',
    'linen': '#faf0e6',
    'magenta': '#ff00ff',
    'maroon': '#800000',
    'mediumaquamarine': '#66cdaa',
    'mediumblue': '#0000cd',
    'mediumorchid': '#ba55d3',
    'mediumpurple': '#9370d8',
    'mediumseagreen': '#3cb371',
    'mediumslateblue': '#7b68ee',
    'mediumspringgreen': '#00fa9a',
    'mediumturquoise': '#48d1cc',
    'mediumvioletred': '#c71585',
    'midnightblue': '#191970',
    'mintcream': '#f5fffa',
    'mistyrose': '#ffe4e1',
    'moccasin': '#ffe4b5',
    'navajowhite': '#ffdead',
    'navy': '#000080',
    'oldlace': '#fdf5e6',
    'olive': '#808000',
    'olivedrab': '#6b8e23',
    'orange': '#ffa500',
    'orangered': '#ff4500',
    'orchid': '#da70d6',
    'palegoldenrod': '#eee8aa',
    'palegreen': '#98fb98',
    'paleturquoise': '#afeeee',
    'palevioletred': '#d87093',
    'papayawhip': '#ffefd5',
    'peachpuff': '#ffdab9',
    'peru': '#cd853f',
    'pink': '#ffc0cb',
    'plum': '#dda0dd',
    'powderblue': '#b0e0e6',
    'purple': '#800080',
    'rebeccapurple': '#663399',
    'red': '#ff0000',
    'rosybrown': '#bc8f8f',
    'royalblue': '#4169e1',
    'saddlebrown': '#8b4513',
    'salmon': '#fa8072',
    'sandybrown': '#f4a460',
    'seagreen': '#2e8b57',
    'seashell': '#fff5ee',
    'sienna': '#a0522d',
    'silver': '#c0c0c0',
    'skyblue': '#87ceeb',
    'slateblue': '#6a5acd',
    'slategray': '#708090',
    'snow': '#fffafa',
    'springgreen': '#00ff7f',
    'steelblue': '#4682b4',
    'tan': '#d2b48c',
    'teal': '#008080',
    'thistle': '#d8bfd8',
    'tomato': '#ff6347',
    'turquoise': '#40e0d0',
    'violet': '#ee82ee',
    'wheat': '#f5deb3',
    'white': '#ffffff',
    'whitesmoke': '#f5f5f5',
    'yellow': '#ffff00',
    'yellowgreen': '#9acd32'
  };

  if (color === undefined || color === '') {
    return color;
  } else if (!color.startsWith('#')) {
    return colors[color].toUpperCase();
  } else {
    return color.toUpperCase();
  }
}

var _classMapping = ['Score', 'Part', 'Measure', 'Voice', // 'Stream', 
'GeneralNote'];
var GeneralObjectExporter =
/*#__PURE__*/
function () {
  function GeneralObjectExporter(obj) {
    _classCallCheck(this, GeneralObjectExporter);

    this.generalObj = obj;
  }

  _createClass(GeneralObjectExporter, [{
    key: "parse",
    value: function parse(obj) {
      if (obj === undefined) {
        obj = this.generalObj;
      }

      var outObj = this.fromGeneralObj(obj);
      return this.parseWellformedObject(outObj);
    }
  }, {
    key: "parseWellformedObject",
    value: function parseWellformedObject(sc) {
      var scoreExporter = new ScoreExporter(sc);
      scoreExporter.parse();
      return scoreExporter.asBytes();
    }
  }, {
    key: "fromGeneralObj",
    value: function fromGeneralObj(obj) {
      var classes = obj.classes;
      var outObj;

      for (var _i = 0, _classMapping2 = _classMapping; _i < _classMapping2.length; _i++) {
        var cM = _classMapping2[_i];

        if (classes.includes(cM)) {
          var methName = 'from' + cM;
          outObj = this[methName](obj);
          break;
        }
      }

      if (outObj === undefined) {
        throw new MusicXMLExportException("Cannot translate the object ".concat(obj, " to a complete musicXML document; put it in a Stream first!"));
      }

      return outObj;
    }
  }, {
    key: "fromScore",
    value: function fromScore(sc) {
      var scOut = sc.makeNotation({
        inPlace: false
      });
      return scOut;
    }
  }, {
    key: "fromPart",
    value: function fromPart(p) {
      if (p.isFlat) {
        p = p.makeMeasures();
      }

      var s = new __WEBPACK_IMPORTED_MODULE_2__stream_js__["b" /* Score */]();
      s.insert(0, p); // metadata...;

      return this.fromScore(s);
    }
  }, {
    key: "fromMeasure",
    value: function fromMeasure(m) {
      var mCopy = m.makeNotation();

      if (m.clef === undefined) {
        mCopy.clef = __WEBPACK_IMPORTED_MODULE_0__clef_js__["a" /* clef */].bestClef(mCopy, {
          recurse: true
        });
      }

      var p = new __WEBPACK_IMPORTED_MODULE_2__stream_js__["c" /* Part */]();
      p.append(mCopy); // TODO(msc): metadata;

      return this.fromPart(p);
    }
  }, {
    key: "fromVoice",
    value: function fromVoice(v) {
      var m = new __WEBPACK_IMPORTED_MODULE_2__stream_js__["d" /* Measure */]();
      m.number = 1;
      m.insert(0, v);
      return this.fromMeasure(m);
    } // TODO(msc): fromStream
    // TODO(msc): fromDuration
    // TODO(msc): fromDynamic
    // TODO(msc): fromScale
    // TODO(msc): fromDiatonicScale
    // TODO(msc): fromMusic21Object

  }, {
    key: "fromGeneralNote",
    value: function fromGeneralNote(n) {
      var nCopy = n.clone(true); // makeTupletBrackets;

      var out = new __WEBPACK_IMPORTED_MODULE_2__stream_js__["d" /* Measure */]();
      out.number = 1;
      out.append(nCopy);
      return this.fromMeasure(out);
    } // TODO(msc): fromPitch

  }]);

  return GeneralObjectExporter;
}();
var _musicxmlVersion = '3.0';
var XMLExporterBase =
/*#__PURE__*/
function () {
  function XMLExporterBase() {
    _classCallCheck(this, XMLExporterBase);

    this.doc = document.implementation.createDocument('', '', null);
    this.xmlRoot = undefined;
  }

  _createClass(XMLExporterBase, [{
    key: "asBytes",
    value: function asBytes() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$noCopy = _ref.noCopy,
          noCopy = _ref$noCopy === void 0 ? true : _ref$noCopy;

      var out = this.xmlHeader();
      var oSerializer = new XMLSerializer();
      out += oSerializer.serializeToString(this.xmlRoot);
      return out;
    } // no indentation :-(

  }, {
    key: "xmlHeader",
    value: function xmlHeader() {
      return "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML ".concat(_musicxmlVersion, "  Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\">\n        ");
    }
    /**
     * Note: this is not a method in music21p, but it needs access to this.doc in music21j
     */

  }, {
    key: "_setTagTextFromAttribute",
    value: function _setTagTextFromAttribute(m21El, xmlEl, tag, attributeName) {
      var _ref2 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},
          transform = _ref2.transform,
          _ref2$forceEmpty = _ref2.forceEmpty,
          forceEmpty = _ref2$forceEmpty === void 0 ? false : _ref2$forceEmpty;

      if (attributeName === undefined) {
        attributeName = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].hyphenToCamelCase(tag);
      }

      var value = m21El[attributeName];

      if (transform !== undefined) {
        value = transform(value);
      }

      if ((value === undefined || value === '') && !forceEmpty) {
        return undefined;
      }

      var subElement = this.subElement(xmlEl, tag);

      if (value !== undefined) {
        subElement.innerHTML = value;
      }

      return subElement;
    }
  }, {
    key: "seta",
    value: function seta(m21El, xmlEl, tag, options) {
      return this._setTagTextFromAttribute(m21El, xmlEl, tag, options);
    }
  }, {
    key: "_setAttributeFromAttribute",
    value: function _setAttributeFromAttribute(m21El, xmlEl, xmlAttributeName) {
      var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
          attributeName = _ref3.attributeName,
          transform = _ref3.transform;

      if (attributeName === undefined) {
        attributeName = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].hyphenToCamelCase(xmlAttributeName);
      }

      var value = m21El[attributeName];

      if (value === undefined) {
        return;
      }

      if (transform !== undefined) {
        value = transform(value);
      }

      xmlEl.setAttribute(xmlAttributeName, value.toString());
    }
  }, {
    key: "setb",
    value: function setb(m21El, xmlEl, xmlAttributeName, options) {
      return this._setAttributeFromAttribute(m21El, xmlEl, xmlAttributeName, options);
    } // TODO(msc): _synchronizeIds;

  }, {
    key: "_synchronizeIds",
    value: function _synchronizeIds(element, m21Object) {}
  }, {
    key: "addDividerComment",
    value: function addDividerComment() {
      var comment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var commentLength = comment.length;

      if (commentLength > 60) {
        commentLength = 60;
      }

      var spacerLengthLow = Math.floor((60 - commentLength) / 2);
      var spacerLengthHigh = Math.ceil((60 - commentLength) / 2);
      var commentText = '='.repeat(spacerLengthLow) + ' ' + comment + ' ' + '='.repeat(spacerLengthHigh);
      var divider = this.doc.createComment(commentText);
      this.xmlRoot.appendChild(divider);
    } // TODO(msc): dump

    /**
     * Helper method since SubElement does not exist in javascript document.implementation
     */

  }, {
    key: "subElement",
    value: function subElement(el, tag) {
      var subElement = this.doc.createElement(tag);
      el.appendChild(subElement);
      return subElement;
    } // TODO(msc): setStyleAttributes
    // TODO(msc): setTextFormatting
    // TODO(msc): setPrintStyleAlign
    // TODO(msc): setPrintStyle
    // TODO(msc): setPrintObject

  }, {
    key: "setColor",
    value: function setColor(mxObject, m21Object) {
      if (m21Object.color !== undefined) {
        mxObject.setAttribute('color', normalizeColor(m21Object.color));
      } else if (m21Object.style !== undefined && m21Object.style.color !== undefined) {
        mxObject.setAttribute('color', normalizeColor(m21Object.style.color));
      }
    } // TODO(msc): setFont
    // TODO(msc): setPosition
    // TODO(msc): setEditorial

  }, {
    key: "setEditorial",
    value: function setEditorial(mxEl, el) {} // TODO(msc): pageLayoutToXmlPrint
    // TODO(msc): pageLayoutToXmlPageLayout
    // TODO(msc): systemLayoutToXmlPrint
    // TODO(msc): systemLayoutToXmlSystemLayout
    // TODO(msc): staffLayoutToXmlStaffLayout

  }, {
    key: "accidentalToMx",
    value: function accidentalToMx(a) {
      // TODO(msc): v 3.0 and v3.1 accidentals; microtone;
      var mxName;

      if (a.name === 'double-flat') {
        mxName = 'flat-flat';
      } else {
        mxName = a.name; // check other accidentals here.
      }

      var mxAccidental = this.doc.createElement('accidental');
      mxAccidental.innerHTML = mxName; // TODO(msc): parentheses, bracket, setPrintStyle

      return mxAccidental;
    }
  }, {
    key: "getRandomId",
    value: function getRandomId() {
      // hack to get random ids.
      var text = '';
      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';

      for (var i = 0; i < 6; i++) {
        text += possible.charAt(Math.floor(Math.random() * possible.length));
      }

      return text;
    }
  }]);

  return XMLExporterBase;
}();
var ScoreExporter =
/*#__PURE__*/
function (_XMLExporterBase) {
  _inherits(ScoreExporter, _XMLExporterBase);

  function ScoreExporter(score) {
    var _this;

    _classCallCheck(this, ScoreExporter);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScoreExporter).call(this));

    if (score === undefined) {
      _this.stream = new __WEBPACK_IMPORTED_MODULE_2__stream_js__["b" /* Score */]();
    } else {
      _this.stream = score;
    }

    _this.xmlRoot = _this.doc.createElement('score-partwise');

    _this.xmlRoot.setAttribute('version', _musicxmlVersion);

    _this.xmIdentification = undefined;
    _this.scoreMetadata = undefined;
    _this.spannerBundle = undefined;
    _this.meterStream = undefined;
    _this.scoreLayouts = undefined;
    _this.firstScoreLayout = undefined;
    _this.highestTime = 0.0;
    _this.refStreamOrTimeRange = [0.0, _this.highestTime];
    _this.partExporterList = [];
    _this.instrumentList = [];
    _this.midiChannelList = [];
    _this.parts = [];
    return _this;
  }

  _createClass(ScoreExporter, [{
    key: "parse",
    value: function parse() {
      var s = this.stream;

      if (s.length === 0) {
        return this.emptyObject();
      }

      this.scorePreliminaries();
      this.parsePartlikeScore(); // does not have parseFlatScore... 

      this.postPartProcess();
      this.partExporterList = [];
      return this.xmlRoot;
    }
  }, {
    key: "emptyObject",
    value: function emptyObject() {
      // TODO(msc): do this.
      return this.xmlRoot;
    }
  }, {
    key: "scorePreliminaries",
    value: function scorePreliminaries() {
      // this.setScoreLayouts();
      // this.setMeterStream();
      this.setPartsAndRefStream(); // this.textBoxes = ...;

      this.highestTime = 0.0; // spannerBundle
    }
  }, {
    key: "setPartsAndRefStream",
    value: function setPartsAndRefStream() {
      var s = this.stream;
      var streamOfStreams = s.getElementsByClass('Stream');
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = streamOfStreams[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var innerStream = _step.value;
          // innerStream.transferOffsetToElements(); // only needed for appended Parts
          var ht = innerStream.highestTime;

          if (ht > this.highestTime) {
            this.highestTime = ht;
          }

          this.refStreamOrTimeRange = [0.0, this.highestTime];
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      this.parts = streamOfStreams;
    } // TODO(msc): setMeterStream
    // TODO(msc): setScoreLayouts

  }, {
    key: "parsePartlikeScore",
    value: function parsePartlikeScore() {
      // makeRests
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var innerStream = _step2.value;
          var pp = new PartExporter(innerStream, {
            parent: this
          }); // spanner bundle.

          pp.parse();
          this.partExporterList.push(pp);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    } // TODO(msc): parseFlatScore

  }, {
    key: "postPartProcess",
    value: function postPartProcess() {
      this.setScoreHeader();

      for (var i = 0; i < this.partExporterList.length; i++) {
        var pex = this.partExporterList[i];
        this.addDividerComment('Part ' + i.toString());
        this.xmlRoot.appendChild(pex.xmlRoot);
      }
    }
  }, {
    key: "setScoreHeader",
    value: function setScoreHeader() {
      // const s = this.stream;
      // scoreMeatadata
      // titles
      // identification
      // setDefaults
      // textBoxes
      this.setPartList();
    } // TODO(msc): textBoxToXmlCredit
    // TODO(msc): setDefaults
    // TODO(msc): addStyleToXmlDefaults
    // TODO(msc): styleToXmlAppearance

  }, {
    key: "setPartList",
    value: function setPartList() {
      // const spannerBundle = this.spannerBundle; // for now, always undefined;
      var mxPartList = this.subElement(this.xmlRoot, 'part-list'); // staffGroups are non-existent

      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.partExporterList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var pex = _step3.value;
          // const p = pex.stream;
          var mxScorePart = pex.getXmlScorePart();
          mxPartList.appendChild(mxScorePart);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
            _iterator3["return"]();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      return mxPartList;
    } // TODO(msc): staffGroupToXmlPartGroup;
    // TODO(msc): setIdentification
    // TODO(msc): metadataToMiscellaneous
    // TODO(msc): setEncoding
    // TODO(msc): getSupports
    // TODO(msc): setTitles
    // TODO(msc): contributorToXmlCreator    

  }]);

  return ScoreExporter;
}(XMLExporterBase);
var PartExporter =
/*#__PURE__*/
function (_XMLExporterBase2) {
  _inherits(PartExporter, _XMLExporterBase2);

  function PartExporter(partObj) {
    var _this2;

    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        parent = _ref4.parent;

    _classCallCheck(this, PartExporter);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(PartExporter).call(this));
    _this2.stream = partObj;
    _this2.parent = parent;
    _this2.xmlRoot = _this2.doc.createElement('part');

    if (parent === undefined) {
      _this2.meterStream = new __WEBPACK_IMPORTED_MODULE_2__stream_js__["e" /* Stream */]();
      _this2.refStreamOrTimeRange = [0.0, 0.0];
      _this2.midiChannelList = [];
    } else {
      _this2.meterStream = parent.meterStream;
      _this2.refStreamOrTimeRange = parent.refStreamOrTimeRange;
      _this2.midiChannelList = parent.midiChannelList;
    }

    _this2.instrumentStream = undefined;
    _this2.firstInstrumentObject = undefined;
    _this2.lastDivisions = undefined;
    _this2.spannerBundle = partObj.spannerBundle;
    _this2.xmlPartId = _this2.getRandomId(); // hacky

    return _this2;
  }

  _createClass(PartExporter, [{
    key: "parse",
    value: function parse() {
      // this.instrumentSetup();
      this.xmlRoot.setAttribute('id', this.xmlPartId);
      var measureStream = this.stream.getElementsByClass('Stream'); // fixupNotation;
      // setIdLocals on spannerBundle;

      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = measureStream[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var m = _step4.value;
          this.addDividerComment('Measure ' + m.number.toString());
          var measureExporter = new MeasureExporter(m, {
            parent: this
          });
          measureExporter.spannerBundle = this.spannerBundle;
          var mxMeasure = measureExporter.parse();
          this.xmlRoot.appendChild(mxMeasure);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return this.xmlRoot;
    } // TODO(msc): instrumentSetup
    // TODO(msc): fixupNotationFlat -- might be redundant
    // TODO(msc): fixupNotationMeasured

  }, {
    key: "getXmlScorePart",
    value: function getXmlScorePart() {
      // const part = this.stream;
      var mxScorePart = this.doc.createElement('score-part');
      mxScorePart.setAttribute('id', this.xmlPartId); // partName
      // partAbbreviation
      // instrument

      return mxScorePart;
    } // TODO(msc): instrumentToXmlScoreInstrument
    // TODO(msc): instrumentToXmlMidiInstrument

  }]);

  return PartExporter;
}(XMLExporterBase);
var _classesToMeasureMethods = [['Note', 'noteToXml'], // NoChord
// ChordWithFretBoard
// ChordSymbol
['Chord', 'chordToXml'], ['Rest', 'restToXml']];
var _wrapAttributeMethodClasses = [['Clef', 'clefToXml'], ['KeySignature', 'keySignatureToXml'], ['TimeSignature', 'timeSignatureToXml']];
var _ignoreOnParseClasses = ['LayoutBase', 'Barline'];
var divisionsPerQuarter = 32 * 3 * 3 * 5 * 7; // TODO(msc): create defaults.js

var MeasureExporter =
/*#__PURE__*/
function (_XMLExporterBase3) {
  _inherits(MeasureExporter, _XMLExporterBase3);

  function MeasureExporter(measureObj) {
    var _this3;

    var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        parent = _ref5.parent;

    _classCallCheck(this, MeasureExporter);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MeasureExporter).call(this));
    _this3.stream = measureObj;
    _this3.parent = parent;
    _this3.xmlRoot = _this3.doc.createElement('measure');
    _this3.currentDivisions = divisionsPerQuarter;
    _this3.transpositionInterval = undefined;
    _this3.mxTranspose = undefined;
    _this3.measureOffsetStart = 0.0;
    _this3.offsetInMeasure = 0.0;
    _this3.currentVoiceId = undefined;
    _this3.rbSpanners = [];
    _this3.spannerBundle = parent.spannerBundle;
    _this3.objectSpannerBundle = _this3.spannerBundle;
    return _this3;
  }

  _createClass(MeasureExporter, [{
    key: "parse",
    value: function parse() {
      // TODO(msc): setTranspose
      // TODO(msc): setRbSpanners
      this.setMxAttributes(); // TODO(msc): setMxPrint

      this.setMxAttributesObjectForStartOfMeasure(); // TODO(msc): setLeftBarline
      // THE BIG ONE

      this.mainElementsParse(); // TODO(msc): setRightBarline

      return this.xmlRoot;
    }
  }, {
    key: "mainElementsParse",
    value: function mainElementsParse() {
      var m = this.stream;

      if (!m.hasVoices()) {
        this.parseFlatElements(m, {
          backupAfterwards: false
        });
        return;
      } // TODO(msc): parse elements outside of Voices...needs getElementsNotOfClass


      var allVoices = Array.from(m.voices);
      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = allVoices.entries()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var _step5$value = _slicedToArray(_step5.value, 2),
              i = _step5$value[0],
              v = _step5$value[1];

          var backupAfterwards = true;

          if (i === allVoices.length - 1) {
            backupAfterwards = false;
          }

          this.parseFlatElements(v, {
            backupAfterwards: backupAfterwards
          });
        }
      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
            _iterator5["return"]();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }
    }
  }, {
    key: "parseFlatElements",
    value: function parseFlatElements(m) {
      var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref6$backupAfterward = _ref6.backupAfterwards,
          backupAfterwards = _ref6$backupAfterward === void 0 ? false : _ref6$backupAfterward;

      var root = this.xmlRoot;
      var divisions = this.currentDivisions;
      this.offsetInMeasure = 0.0;
      var voiceId;

      if (m.classes.includes('Voice')) {
        voiceId = m.id;

        if (voiceId === undefined) {
          voiceId = this.getRandomId();
        }
      }

      this.currentVoiceId = voiceId;
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = m[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var el = _step6.value;
          this.parseOneElement(el);
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
            _iterator6["return"]();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }

      if (backupAfterwards) {
        var amountToBackup = Math.round(divisions * this.offsetInMeasure);

        if (amountToBackup > 0) {
          var mxBackup = this.doc.createElement('backup');
          var mxDuration = this.subElement(mxBackup, 'duration');
          mxDuration.innerHTML = amountToBackup.toString();
          root.appendChild(mxBackup);
        }
      }

      this.currentVoiceId = undefined;
    }
  }, {
    key: "parseOneElement",
    value: function parseOneElement(obj) {
      var _this4 = this;

      // const root = this.xmlRoot;
      // spanners...
      var classes = obj.classes;

      if (classes.includes('GeneralNote')) {
        this.offsetInMeasure += obj.duration.quarterLength;
      } // odd durations...


      var parsedObject = false;

      for (var _i2 = 0, _classesToMeasureMeth = _classesToMeasureMethods; _i2 < _classesToMeasureMeth.length; _i2++) {
        var _classesToMeasureMeth2 = _slicedToArray(_classesToMeasureMeth[_i2], 2),
            className = _classesToMeasureMeth2[0],
            methName = _classesToMeasureMeth2[1];

        if (classes.includes(className)) {
          this[methName](obj);
          parsedObject = true;
          break;
        }
      }

      var _loop = function _loop() {
        var _wrapAttributeMethodC2 = _slicedToArray(_wrapAttributeMethodC[_i3], 2),
            className = _wrapAttributeMethodC2[0],
            methName = _wrapAttributeMethodC2[1];

        if (classes.includes(className)) {
          var meth = function meth(o) {
            return _this4[methName](o);
          };

          _this4.wrapObjectInAttributes(obj, meth);

          parsedObject = true;
          return "break";
        }
      };

      for (var _i3 = 0, _wrapAttributeMethodC = _wrapAttributeMethodClasses; _i3 < _wrapAttributeMethodC.length; _i3++) {
        var _ret = _loop();

        if (_ret === "break") break;
      } // deal with skipped objects.


      if (!parsedObject && !_ignoreOnParseClasses.includes(obj.classes[0])) {
        console.warn('skipped object of class ' + obj.classes[0]);
      } // postSpanners.

    } // TODO(msc): prePostObjectSpanners
    // TODO(msc): _spannerStartParameters
    // TODO(msc): _spannerEndParameters
    // TODO(msc): objectAttachedSpaners

  }, {
    key: "noteToXml",
    value: function noteToXml(n) {
      var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref7$noteIndexInChor = _ref7.noteIndexInChord,
          noteIndexInChord = _ref7$noteIndexInChor === void 0 ? 0 : _ref7$noteIndexInChor,
          chordParent = _ref7.chordParent;

      var addChordTag = noteIndexInChord !== 0;
      var chordOrN;

      if (chordParent === undefined) {
        chordOrN = n;
      } else {
        chordOrN = chordParent;
      }

      var mxNote = this.doc.createElement('note'); // setPrintStyle
      // volumeInformation

      this.setColor(mxNote, n); // _synchronizeId;

      var d = chordOrN.duration; // grace;
      // setColor chord
      // setPrintObject
      // hideObject
      // articulation pizz:

      if (addChordTag) {
        this.subElement(mxNote, 'chord');
      }

      if (n.pitch !== undefined) {
        var mxPitch = this.pitchToXml(n.pitch);
        mxNote.appendChild(mxPitch);
      } else {
        this.subElement(mxNote, 'rest');
      }

      if (d.isGrace !== true) {
        var mxDuration = this.durationXml(d);
        mxNote.appendChild(mxDuration);
      }

      if (n.tie !== undefined) {
        var mxTieList = this.tieToXmlTie(n.tie);
        var _iteratorNormalCompletion7 = true;
        var _didIteratorError7 = false;
        var _iteratorError7 = undefined;

        try {
          for (var _iterator7 = mxTieList[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
            var t = _step7.value;
            mxNote.appendChild(t);
          }
        } catch (err) {
          _didIteratorError7 = true;
          _iteratorError7 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion7 && _iterator7["return"] != null) {
              _iterator7["return"]();
            }
          } finally {
            if (_didIteratorError7) {
              throw _iteratorError7;
            }
          }
        }
      } // instrument


      this.setEditorial(mxNote, n);

      if (this.currentVoiceId !== undefined) {
        var mxVoice = this.subElement(mxNote, 'voice');
        var vId;

        if (typeof vId === 'number') {
          vId = this.currentVoiceId + 1;
        } else {
          // not a number;
          vId = this.currentVoiceId;
        }

        mxVoice.innerHTML = vId.toString();
      }

      var mxType = this.subElement(mxNote, 'type');
      mxType.innerHTML = typeToMusicXMLType(d.type); // set styleAttributes
      // set noteSize

      for (var _ = 0; _ < d.dots; _++) {
        this.subElement(mxNote, 'dot');
      } // components.


      if (n.pitch !== undefined && n.pitch.accidental !== undefined && n.pitch.accidental.displayStatus !== false) {
        var mxAccidental = this.accidentalToMx(n.pitch.accidental);
        mxNote.appendChild(mxAccidental);
      }

      if (d.tuplets.length > 0) {
        // todo--nested tuplets;
        var mxTimeModification = this.tupletToTimeModification(d.tuplets[0]);
        mxNote.appendChild(mxTimeModification);
      }

      var stemDirection;

      if (!addChordTag && ![undefined, 'unspecified'].includes(chordOrN.stemDirection)) {
        stemDirection = chordOrN.stemDirection;
      } else if (chordOrN !== n && ![undefined, 'unspecified'].includes(n.stemDirection)) {
        stemDirection = n.stemDirection;
      }

      if (stemDirection !== undefined) {
        var mxStem = this.subElement(mxNote, 'stem');
        var sdtext = stemDirection;

        if (sdtext === 'noStem') {
          sdtext = 'none';
        }

        mxStem.innerHTML = sdtext; // TODO: stemStyle
      } // dealWithNotehead
      // beams
      // staff
      // notations
      // tuplet display
      // notations


      if (!addChordTag) {
        var _iteratorNormalCompletion8 = true;
        var _didIteratorError8 = false;
        var _iteratorError8 = undefined;

        try {
          for (var _iterator8 = chordOrN.lyrics[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
            var lyricObj = _step8.value;

            if (lyricObj.text === undefined) {
              continue;
            }

            var mxLyric = this.lyricToXml(lyricObj);
            mxNote.appendChild(mxLyric);
          }
        } catch (err) {
          _didIteratorError8 = true;
          _iteratorError8 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion8 && _iterator8["return"] != null) {
              _iterator8["return"]();
            }
          } finally {
            if (_didIteratorError8) {
              throw _iteratorError8;
            }
          }
        }
      }

      this.xmlRoot.appendChild(mxNote);
      return mxNote;
    }
  }, {
    key: "restToXml",
    value: function restToXml(r) {
      return this.noteToXml(r); // full measure
      // display-step, display-octave, etc.
    }
  }, {
    key: "chordToXml",
    value: function chordToXml(c) {
      var mxNoteList = [];
      var _iteratorNormalCompletion9 = true;
      var _didIteratorError9 = false;
      var _iteratorError9 = undefined;

      try {
        for (var _iterator9 = Array.from(c).entries()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
          var _step9$value = _slicedToArray(_step9.value, 2),
              i = _step9$value[0],
              n = _step9$value[1];

          var mxNote = this.noteToXml(n, {
            noteIndexInChord: i,
            chordParent: c
          });
          mxNoteList.push(mxNote);
        }
      } catch (err) {
        _didIteratorError9 = true;
        _iteratorError9 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion9 && _iterator9["return"] != null) {
            _iterator9["return"]();
          }
        } finally {
          if (_didIteratorError9) {
            throw _iteratorError9;
          }
        }
      }

      return mxNoteList;
    }
  }, {
    key: "durationXml",
    value: function durationXml(dur) {
      var mxDuration = this.doc.createElement('duration');
      mxDuration.innerHTML = Math.round(this.currentDivisions * dur.quarterLength).toString();
      return mxDuration;
    }
  }, {
    key: "pitchToXml",
    value: function pitchToXml(p) {
      var mxPitch = this.doc.createElement('pitch');

      this._setTagTextFromAttribute(p, mxPitch, 'step');

      if (p.accidental !== undefined) {
        var mxAlter = this.subElement(mxPitch, 'alter');
        mxAlter.innerHTML = __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].numToIntOrFloat(p.accidental.alter).toString();
      }

      this._setTagTextFromAttribute(p, mxPitch, 'octave', 'implicitOctave');

      return mxPitch;
    } // TODO(msc): fretNoteToXml
    // TODO(msc): fretBoardToXml
    // TODO(msc): chordWithFretBoardToXml

  }, {
    key: "tupletToTimeModification",
    value: function tupletToTimeModification(tup) {
      var mxTimeModification = this.doc.createElement('time-modification');

      this._setTagTextFromAttribute(tup, mxTimeModification, 'actual-notes', 'numberNotesActual');

      this._setTagTextFromAttribute(tup, mxTimeModification, 'normal-notes', 'numberNotesNormal');

      if (tup.durationNormal !== undefined) {
        var mxNormalType = this.subElement(mxTimeModification, 'normal-type');
        mxNormalType.innerHTML = typeToMusicXMLType(tup.durationNormal.type);

        if (tup.durationNormal.dots > 0) {
          for (var i = 0; i < tup.durationNormal.dots; i++) {
            this.subElement(mxTimeModification, 'normal-dot');
          }
        }
      }

      return mxTimeModification;
    } // TODO(msc): dealWithNotehead
    // TODO(msc): noteheadToXml
    // TODO(msc): noteToNotations

  }, {
    key: "tieToXmlTie",
    value: function tieToXmlTie(t) {
      var mxTieList = [];
      var musicxmlTieType = t.type;

      if (t.type === 'continue') {
        musicxmlTieType = 'stop';
      }

      var mxTie = this.doc.createElement('tie');
      mxTie.setAttribute('type', musicxmlTieType);
      mxTieList.push(mxTie);

      if (t.type === 'continue') {
        var _mxTie = this.doc.createElement('tie');

        _mxTie.setAttribute('type', 'start');

        mxTieList.push(_mxTie);
      }

      return mxTieList;
    } // TODO(msc): tieToXmlTied -- needs notations
    // TODO(msc): tupletToXmlTuplet
    // TODO(msc): expressionToXml
    // TODO(msc): articulationToXmlArticulation
    // TODO(msc): setLineStyle
    // TODO(msc): articulationToXmlTechnical
    // TODO(msc): setHarmonic
    // TODO(msc): noChordToXml
    // TODO(msc): chordSymbolToXml
    // TODO(msc): setOffsetOptional
    // TODO(msc): placeInDirection
    // TODO(msc): dynamicToXml
    // TODO(msc): segnoToXml
    // TODO(msc): codaToXml
    // TODO(msc): tempoIndicationToXml
    // TODO(msc): rehearsalMarkToXml
    // TODO(msc): textExpressionToXml

  }, {
    key: "wrapObjectInAttributes",
    value: function wrapObjectInAttributes(objectToWrap, methodToMx) {
      if (this.offsetInMeasure === 0.0) {
        return undefined;
      }

      var mxAttributes = this.doc.createElement('attributes');
      var mxObj = methodToMx(objectToWrap);
      mxAttributes.appendChild(mxObj);
      this.xmlRoot.appendChild(mxAttributes);
      return mxAttributes;
    }
  }, {
    key: "lyricToXml",
    value: function lyricToXml(l) {
      var mxLyric = this.doc.createElement('lyric');

      this._setTagTextFromAttribute(l, mxLyric, 'syllabic');

      this._setTagTextFromAttribute(l, mxLyric, 'text', 'text', {
        forceEmpty: true
      });

      if (l.identifier !== undefined) {
        mxLyric.setAttribute('name', l.identifier.toString());
      }

      if (l.number !== undefined) {
        mxLyric.setAttribute('number', l.number.toString());
      } else if (l.identifier !== undefined) {
        mxLyric.setAttribute('number', l.identifier.toString());
      } // setStyleAttributes
      // setPrintObject
      // setColor
      // setPosition


      return mxLyric;
    } // TODO(msc): beamsToXml
    // TODO(msc): beamToXml
    // TODO(msc): setRightBarline
    // TODO(msc): setLeftBarline
    // TODO(msc): setBarline
    // TODO(msc): barlineToXml
    // TODO(msc): repeatToXml

  }, {
    key: "setMxAttributesObjectForStartOfMeasure",
    value: function setMxAttributesObjectForStartOfMeasure() {
      var m = this.stream;
      var mxAttributes = this.doc.createElement('attributes');
      var appendToRoot = false;
      this.currentDivisions = divisionsPerQuarter;

      if (this.parent === undefined || this.currentDivisions !== this.parent.lastDivisions) {
        var mxDivisions = this.subElement(mxAttributes, 'divisions');
        mxDivisions.innerHTML = this.currentDivisions.toString();
        this.parent.lastDivisions = this.currentDivisions;
        appendToRoot = true;
      }

      if (m.classes.includes('Measure')) {
        if (m._keySignature !== undefined) {
          mxAttributes.appendChild(this.keySignatureToXml(m._keySignature));
          appendToRoot = true;
        }

        if (m._timeSignature !== undefined) {
          mxAttributes.appendChild(this.timeSignatureToXml(m._timeSignature));
          appendToRoot = true;
        } // todo SenzaMisura...


        if (m._clef !== undefined) {
          mxAttributes.appendChild(this.clefToXml(m._clef));
          appendToRoot = true;
        }
      } // staffLayout
      // transpositionInterval
      // measureStyle


      if (appendToRoot) {
        this.xmlRoot.appendChild(mxAttributes);
      }

      return mxAttributes;
    } // TODO(msc): measureStyle
    // TODO(msc): staffLayoutToXmlStaffDetails

  }, {
    key: "timeSignatureToXml",
    value: function timeSignatureToXml(ts) {
      var mxTime = this.doc.createElement('time'); // synchronizeIds
      // senzaMisura
      // summed denominators, compound etc.

      var mxBeats = this.subElement(mxTime, 'beats');
      mxBeats.innerHTML = ts.numerator.toString();
      var mxBeatType = this.subElement(mxTime, 'beat-type');
      mxBeatType.innerHTML = ts.denominator.toString(); // symbolizeDenominator
      // separator
      // style

      return mxTime;
    }
  }, {
    key: "keySignatureToXml",
    value: function keySignatureToXml(keyOrKeySignature) {
      var mxKey = this.doc.createElement('key'); // synchronizeIds
      // number
      // printStyle, print-object

      this.seta(keyOrKeySignature, mxKey, 'fifths', 'sharps');

      if (keyOrKeySignature.mode !== undefined) {
        this.seta(keyOrKeySignature, mxKey, 'mode');
      } // non-traditional
      // altered pitches


      return mxKey;
    }
  }, {
    key: "clefToXml",
    value: function clefToXml(clefObj) {
      var mxClef = this.doc.createElement('clef'); // printstyle

      var sign = clefObj.sign || 'G';
      var mxSign = this.subElement(mxClef, 'sign');
      mxSign.innerHTML = sign;
      this.seta(clefObj, mxClef, 'line');

      if (clefObj.octaveChange !== undefined && clefObj.octaveChange !== 0) {
        this.seta(clefObj, mxClef, 'clef-octave-change', 'octaveChange');
      }

      return mxClef;
    } // intervalToXmlTranspose
    // setMxPrint
    // staffLayoutToXmlPrint

  }, {
    key: "setMxAttributes",
    value: function setMxAttributes() {
      var m = this.stream;
      this.xmlRoot.setAttribute('number', m.measureNumberWithSuffix()); // layoutWidth
    } // setRbSpanners
    // transpose

  }]);

  return MeasureExporter;
}(XMLExporterBase);

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScoreParser", function() { return ScoreParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PartParser", function() { return PartParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasureParser", function() { return MeasureParser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__chord_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__clef_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__duration_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__key_js__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__meter_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__stream_js__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__tie_js__ = __webpack_require__(21);
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }











var DEFAULTS = {
  divisionsPerQuarter: 32 * 3 * 3 * 5 * 7
};

function hyphenToCamelCase(tag) {
  return tag.replace(/-([a-z])/g, function (firstLetter) {
    return firstLetter[1].toUpperCase();
  });
}

function seta(m21El, xmlEl, tag, attributeName, transform) {
  var $matchEl = __WEBPACK_IMPORTED_MODULE_0_jquery__(xmlEl).children(tag);

  if (!$matchEl) {
    return;
  }

  var value = $matchEl.contents().eq(0).text();

  if (value === undefined || value === '') {
    return;
  }

  if (transform !== undefined) {
    value = transform(value);
  }

  if (attributeName === undefined) {
    attributeName = hyphenToCamelCase(tag);
  }

  m21El[attributeName] = value;
}

var ScoreParser =
/*#__PURE__*/
function () {
  function ScoreParser() {
    _classCallCheck(this, ScoreParser);

    this.xmlText = undefined;
    this.xmlUrl = undefined;
    this.$xmlRoot = undefined;
    this.stream = new __WEBPACK_IMPORTED_MODULE_8__stream_js__["a" /* stream */].Score();
    this.definesExplicitSystemBreaks = false;
    this.definesExplicitPageBreaks = false;
    this.mxScorePartDict = {};
    this.m21PartObjectsById = {};
    this.partGroupList = [];
    this.parts = [];
    this.musicXmlVersion = '1.0';
  }

  _createClass(ScoreParser, [{
    key: "scoreFromUrl",
    value: function scoreFromUrl(url) {
      var _this = this;

      this.xmlUrl = url;
      return __WEBPACK_IMPORTED_MODULE_0_jquery__["get"](url, {}, function (xmlDoc, textStatus) {
        return _this.scoreFromDOMTree(xmlDoc);
      });
    }
  }, {
    key: "scoreFromText",
    value: function scoreFromText(xmlText) {
      this.xmlText = xmlText;
      var xmlDoc = __WEBPACK_IMPORTED_MODULE_0_jquery__["parseXML"](xmlText);
      return this.scoreFromDOMTree(xmlDoc);
    }
  }, {
    key: "scoreFromDOMTree",
    value: function scoreFromDOMTree(xmlDoc) {
      this.$xmlRoot = __WEBPACK_IMPORTED_MODULE_0_jquery__(__WEBPACK_IMPORTED_MODULE_0_jquery__(xmlDoc).children('score-partwise'));
      this.xmlRootToScore(this.$xmlRoot, this.stream);
      return this.stream;
    }
  }, {
    key: "xmlRootToScore",
    value: function xmlRootToScore($mxScore, inputM21) {
      var s = inputM21;

      if (inputM21 === undefined) {
        s = new __WEBPACK_IMPORTED_MODULE_8__stream_js__["a" /* stream */].Score();
      } // version
      // defaults
      // credit


      this.parsePartList($mxScore);
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = $mxScore.children('part')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var p = _step.value;
          var $p = __WEBPACK_IMPORTED_MODULE_0_jquery__(p);
          var partId = $p.attr('id'); // if (partId === undefined) {
          //     partId = //something
          // }

          var $mxScorePart = this.mxScorePartDict[partId];
          var part = this.xmlPartToPart($p, $mxScorePart);

          if (part !== undefined) {
            // partStreams are undefined
            s.insert(0.0, part);
            this.m21PartObjectsById[partId] = part;
            this.parts.push(part);
          }
        } // partGroups;
        // spanners;
        // definesExplicitSystemreaks, etc.
        // sort

      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return s;
    }
  }, {
    key: "xmlPartToPart",
    value: function xmlPartToPart($mxPart, $mxScorePart) {
      var parser = new PartParser($mxPart, $mxScorePart, this);
      parser.parse(); // handle partStreams

      return parser.stream;
    }
  }, {
    key: "parsePartList",
    value: function parsePartList($mxScore) {
      var mxPartList = $mxScore.children('part-list');

      if (!mxPartList) {
        return;
      } // const openPartGroups = [];


      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = mxPartList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var partListElement = _step2.value;
          var $partListElement = __WEBPACK_IMPORTED_MODULE_0_jquery__(partListElement);
          var partId = $partListElement.attr('id');
          this.mxScorePartDict[partId] = $partListElement;
        } // deal with part-groups

      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }]);

  return ScoreParser;
}();
var PartParser =
/*#__PURE__*/
function () {
  function PartParser($mxPart, $mxScorePart, parent) {
    _classCallCheck(this, PartParser);

    this.$mxPart = $mxPart;
    this.$mxScorePart = $mxScorePart; // ignore parent for now

    if ($mxPart !== undefined) {
      this.partId = $mxPart.attr('id'); // ignore empty partId for now
    } // spannerBundles


    this.stream = new __WEBPACK_IMPORTED_MODULE_8__stream_js__["a" /* stream */].Part();
    this.atSoundingPitch = true;
    this.staffReferenceList = [];
    this.lastTimeSignature = undefined;
    this.lastMeasureWasShort = false;
    this.lastMeasureOffset = 0.0;
    this.lastClefs = {
      0: new __WEBPACK_IMPORTED_MODULE_2__clef_js__["a" /* clef */].TrebleClef()
    };
    this.activeTuplets = [];
    this.activeTuplets.length = 7;
    this.activeTuplets.fill(undefined);
    this.maxStaves = 1;
    this.lastMeasureNumber = 0;
    this.lastNumberSuffix = undefined;
    this.multiMeasureRestsToCapture = 0;
    this.activeMultimeasureRestSpanner = undefined;
    this.activeInstrument = undefined;
    this.firstMeasureParsed = false;
    this.$activeAttributes = undefined;
    this.lastDivisions = DEFAULTS.divisionsPerQuarter;
    this.appendToScoreAfterParse = true;
    this.lastMeasureParser = undefined;
  }

  _createClass(PartParser, [{
    key: "parse",
    value: function parse() {
      this.parseXmlScorePart();
      this.parseMeasures(); // atSoundingPitch;
      // spannerBundles
      // partStaves;

      this.stream.clef = this.lastClefs[0];
    }
  }, {
    key: "parseXmlScorePart",
    value: function parseXmlScorePart() {
      var part = this.stream;
      var $mxScorePart = this.$mxScorePart;
      seta(part, $mxScorePart, 'part-name'); // todo -- clean string
      // remainder of part names
      // instruments
    }
  }, {
    key: "parseMeasures",
    value: function parseMeasures() {
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.$mxPart.children('measure')[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var mxMeasure = _step3.value;
          var $mxMeasure = __WEBPACK_IMPORTED_MODULE_0_jquery__(mxMeasure);
          this.xmlMeasureToMeasure($mxMeasure);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
            _iterator3["return"]();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      if (this.lastMeasureParser !== undefined) {
        this.lastMeasureParser.parent = undefined; // gc.
      }
    }
  }, {
    key: "xmlMeasureToMeasure",
    value: function xmlMeasureToMeasure($mxMeasure) {
      var measureParser = new MeasureParser($mxMeasure, this);
      measureParser.parse();

      if (this.lastMeasureParser !== undefined) {
        this.lastMeasureParser.parent = undefined; // gc.
      }

      this.lastMeasureParser = measureParser; // max staves
      // transposition

      this.firstMeasureParsed = true; // staffReferenceList

      var m = measureParser.stream;
      this.setLastMeasureInfo(m); // fullMeasureRests
      // TODO: offsets!!!
      // this.stream.insert(this.lastMeasureOffset, m);

      this.stream.append(m);
      this.adjustTimeAttributesFromMeasure(m);
    }
  }, {
    key: "setLastMeasureInfo",
    value: function setLastMeasureInfo(m) {
      if (m.number !== this.lastMeasureNumber) {
        this.lastMeasureNumber = m.number;
        this.lastNumberSuffix = m.numberSuffix;
      }

      if (m.timeSignature !== undefined) {
        this.lastTimeSignature = m.timeSignature;
      } else if (this.lastTimeSignature === undefined) {
        this.lastTimeSignature = new __WEBPACK_IMPORTED_MODULE_5__meter_js__["a" /* meter */].TimeSignature('4/4');
      }
    }
  }, {
    key: "adjustTimeAttributesFromMeasure",
    value: function adjustTimeAttributesFromMeasure(m) {
      var mHighestTime = m.highestTime; // ignore incomplete measures.

      var mOffsetShift = mHighestTime;
      this.lastMeasureOffset += mOffsetShift;
    }
  }]);

  return PartParser;
}();
var MeasureParser =
/*#__PURE__*/
function () {
  function MeasureParser($mxMeasure, parent) {
    _classCallCheck(this, MeasureParser);

    this.$mxMeasure = $mxMeasure;
    this.$mxMeasureElements = [];
    this.divisions = undefined;
    this.parent = parent;
    this.transposition = undefined; // spannerBundles

    this.staffReference = {}; // activeTuplets

    this.useVoices = false;
    this.voicesById = {};
    this.voiceIndices = new Set();
    this.staves = 1;
    this.$activeAttributes = undefined;
    this.attributesAreInternal = true;
    this.measureNumber = undefined;
    this.numberSuffix = undefined;

    if (parent !== undefined) {
      this.divisions = parent.lastDivisions;
    } else {
      this.divisions = DEFAULTS.divisionsPerQuarter;
    }

    this.staffLayoutObjects = [];
    this.stream = new __WEBPACK_IMPORTED_MODULE_8__stream_js__["a" /* stream */].Measure();
    this.$mxNoteList = [];
    this.$mxLyricList = [];
    this.nLast = undefined;
    this.chordVoice = undefined;
    this.fullMeasureRest = false;
    this.restAndNoteCount = {
      rest: 0,
      note: 0
    };
    this.lastClefs = {
      0: undefined
    };
    this.parseIndex = 0;
    this.offsetMeasureNote = 0.0; // class attributes in m21p

    this.attributeTagsToMethods = {
      time: 'handleTimeSignature',
      clef: 'handleClef',
      key: 'handleKeySignature' // 'staff-details': 'handleStaffDetails',
      // 'measure-style': 'handleMeasureStyle',

    };
    this.musicDataMethods = {
      note: 'xmlToNote',
      // 'backup': 'xmlBackup',
      // 'forward': 'xmlForward',
      // 'direction': 'xmlDirection',
      attributes: 'parseAttributesTag' // 'harmony': 'xmlHarmony',
      // 'figured-bass': undefined,
      // 'sound': undefined,
      // 'barline': 'xmlBarline',
      // 'grouping': undefined,
      // 'link': undefined,
      // 'bookmark': undefined,
      // Note: <print> is handled separately...

    };
  }

  _createClass(MeasureParser, [{
    key: "parse",
    value: function parse() {
      // mxPrint
      this.parseMeasureAttributes(); // updateVoiceInformation;

      var children = this.$mxMeasure.children();
      this.$mxMeasureElements = [];
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = children[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var c = _step4.value;
          var $c = __WEBPACK_IMPORTED_MODULE_0_jquery__(c);
          this.$mxMeasureElements.push($c);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      var i = 0;
      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = this.$mxMeasureElements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var $mxObj = _step5.value;
          var tag = $mxObj[0].tagName;
          this.parseIndex = i;
          var methName = this.musicDataMethods[tag];

          if (methName !== undefined) {
            this[methName]($mxObj);
          }

          i += 1;
        } // useVoices
        // fullMeasureRest

      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
            _iterator5["return"]();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }
    }
  }, {
    key: "insertInMeasureOrVoice",
    value: function insertInMeasureOrVoice($mxObj, el) {
      // TODO: offsets!
      // this.stream.insert(this.offsetMeasureNote, el);
      this.stream.append(el);
    }
  }, {
    key: "xmlToNote",
    value: function xmlToNote($mxNote) {
      var nextNoteIsChord = false;
      var $mxObjNext = this.$mxMeasureElements[this.parseIndex + 1];

      if ($mxObjNext !== undefined) {
        if ($mxObjNext[0].tagName === 'note' && $mxObjNext.children('chord').length > 0) {
          nextNoteIsChord = true;
        }
      }

      var isChord = false;
      var isRest = false;
      var offsetIncrement = 0.0;

      if ($mxNote.children('rest').length > 0) {
        isRest = true;
      }

      if ($mxNote.children('chord').length > 0) {
        isChord = true;
      }

      if (nextNoteIsChord) {
        isChord = true;
      }

      var n;

      if (isChord) {
        var _this$$mxLyricList;

        this.$mxNoteList.push($mxNote);

        (_this$$mxLyricList = this.$mxLyricList).push.apply(_this$$mxLyricList, _toConsumableArray($mxNote.children('lyric')));
      } else if (!isChord && !isRest) {
        // normal note
        this.restAndNoteCount.note += 1;
        n = this.xmlToSimpleNote($mxNote);
      } else {
        this.restAndNoteCount.rest += 1;
        n = this.xmlToRest($mxNote);
      }

      if (!isChord) {
        this.updateLyricsFromList(n, $mxNote.children('lyric')); // add to staffReference

        this.insertInMeasureOrVoice($mxNote, n);
        offsetIncrement = n.duration.quarterLength;
        this.nLast = n;
      }

      if (this.$mxNoteList.length && !nextNoteIsChord) {
        var c = this.xmlToChord(this.$mxNoteList);
        this.updateLyricsFromList(c, this.$mxLyricList); // addToStaffRest;
        // voices;

        this.insertInMeasureOrVoice($mxNote, c);
        this.$mxNoteList = [];
        this.$mxLyricList = [];
        offsetIncrement = c.duration.quarterLength;
        this.nLast = c;
      }

      this.offsetMeasureNote += offsetIncrement;
    }
  }, {
    key: "xmlToChord",
    value: function xmlToChord($mxNoteList) {
      var notes = [];
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = $mxNoteList[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var $mxNote = _step6.value;
          var freeSpanners = false;
          notes.push(this.xmlToSimpleNote($mxNote, freeSpanners));
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
            _iterator6["return"]();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }

      var c = new __WEBPACK_IMPORTED_MODULE_1__chord_js__["a" /* chord */].Chord(notes); // move beams from first note;
      // move articulations;
      // move expressions;
      // move spanners;

      return c;
    }
  }, {
    key: "xmlToSimpleNote",
    value: function xmlToSimpleNote($mxNote, freeSpanners) {
      var n = new __WEBPACK_IMPORTED_MODULE_6__note_js__["a" /* note */].Note();
      this.xmlToPitch($mxNote, n.pitch); // beams;
      // stems;
      // noteheads

      return this.xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners);
    } // xmlToBeam
    // xmlToBeams
    // xmlNotehead

  }, {
    key: "xmlToPitch",
    value: function xmlToPitch($mxNote, inputM21) {
      var p = inputM21;

      if (inputM21 === undefined) {
        p = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Pitch();
      }

      var $mxPitch;

      if ($mxNote[0].tagName === 'pitch') {
        $mxPitch = $mxNote;
      } else {
        $mxPitch = __WEBPACK_IMPORTED_MODULE_0_jquery__($mxNote.children('pitch')[0]);

        if ($mxPitch.length === 0) {
          // whoops!
          return p;
        }
      }

      seta(p, $mxPitch, 'step');
      seta(p, $mxPitch, 'octave', undefined, parseInt);
      var $mxAlter = $mxPitch.children('alter');
      var accAlter;

      if ($mxAlter.length) {
        accAlter = parseFloat($mxAlter.text().trim());
      }

      var $mxAccidental = $mxNote.children('accidental'); // dropping support for musescore 0.9 errors...

      if ($mxAccidental.length) {
        var accObj = this.xmlToAccidental($mxAccidental);
        p.accidental = accObj;
        p.accidental.displayStatus = true; // independent accidental from alter
      } else if (accAlter !== undefined && !isNaN(accAlter)) {
        p.accidental = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Accidental(accAlter);
        p.accidental.displayStatus = false;
      }

      return p;
    }
  }, {
    key: "xmlToAccidental",
    value: function xmlToAccidental($mxAccidental) {
      var acc = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Accidental(); // to-do m21/musicxml accidental name differences;

      var name = __WEBPACK_IMPORTED_MODULE_0_jquery__($mxAccidental[0]).text().trim().toLowerCase();

      if (name === 'flat-flat') {
        name = 'double-flat';
      }

      acc.set(name); // set print style
      // parentheses
      // bracket
      // editorial

      return acc;
    }
  }, {
    key: "xmlToRest",
    value: function xmlToRest($mxRest) {
      var r = new __WEBPACK_IMPORTED_MODULE_6__note_js__["a" /* note */].Rest(); // full measure rest
      // apply multimeasure rest
      // display-step, octave, etc.

      return this.xmlNoteToGeneralNoteHelper(r, $mxRest);
    }
  }, {
    key: "xmlNoteToGeneralNoteHelper",
    value: function xmlNoteToGeneralNoteHelper(n, $mxNote, freeSpanners) {
      if (freeSpanners === undefined) {
        freeSpanners = true;
      } // spanners
      // setPrintStyle
      // print-object
      // dynamics
      // pizzacato
      // grace


      this.xmlToDuration($mxNote, n.duration); // type styles
      // color
      // position

      if ($mxNote.children('tie').length > 0) {
        n.tie = this.xmlToTie($mxNote);
      } // grace
      // notations
      // editorial


      return n;
    }
  }, {
    key: "xmlToDuration",
    value: function xmlToDuration($mxNote, inputM21) {
      var d = inputM21;

      if (inputM21 === undefined) {
        d = new __WEBPACK_IMPORTED_MODULE_3__duration_js__["a" /* duration */].Duration();
      }

      var divisions = this.divisions;
      var mxDuration = $mxNote.children('duration')[0];
      var qLen = 0.0;

      if (mxDuration) {
        var noteDivisions = parseFloat(__WEBPACK_IMPORTED_MODULE_0_jquery__(mxDuration).text().trim());
        qLen = noteDivisions / divisions;
      }

      var mxType = $mxNote.children('type')[0];

      if (mxType) {
        // long vs longa todo
        var durationType = __WEBPACK_IMPORTED_MODULE_0_jquery__(mxType).text().trim();
        var numDots = $mxNote.children('dot').length; // tuplets!!!! big to-do!

        d.type = durationType;
        d.dots = numDots;
      } else {
        d.quarterLength = qLen;
      }

      return d;
    } // xmlGraceToGrace
    // xmlNotations
    // xmlTechnicalToArticulation
    // setHarmonic
    // handleFingering
    // xmlToArticulation
    // xmlOrnamentToExpression
    // xmlDirectionTypeToSpanners
    // xmlNotationsToSpanners
    // xmlToTremolo
    // xmlOneSpanner

  }, {
    key: "xmlToTie",
    value: function xmlToTie($mxNote) {
      var t = new __WEBPACK_IMPORTED_MODULE_9__tie_js__["a" /* tie */].Tie();
      var allTies = $mxNote.children('tie');

      if (allTies.length > 1) {
        t.type = 'continue';
      } else {
        var $t0 = __WEBPACK_IMPORTED_MODULE_0_jquery__(allTies[0]);
        t.type = $t0.attr('type');
      } // style


      return t;
    } // xmlToTuplets

  }, {
    key: "updateLyricsFromList",
    value: function updateLyricsFromList(n, lyricList) {
      var currentLyricNumber = 1;
      var _iteratorNormalCompletion7 = true;
      var _didIteratorError7 = false;
      var _iteratorError7 = undefined;

      try {
        for (var _iterator7 = lyricList[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
          var mxLyric = _step7.value;
          var lyricObj = this.xmlToLyric(__WEBPACK_IMPORTED_MODULE_0_jquery__(mxLyric));

          if (lyricObj === undefined) {
            continue;
          }

          if (lyricObj.number === 0) {
            lyricObj.number = currentLyricNumber;
          }

          n.lyrics.push(lyricObj);
          currentLyricNumber += 1;
        }
      } catch (err) {
        _didIteratorError7 = true;
        _iteratorError7 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion7 && _iterator7["return"] != null) {
            _iterator7["return"]();
          }
        } finally {
          if (_didIteratorError7) {
            throw _iteratorError7;
          }
        }
      }
    }
  }, {
    key: "xmlToLyric",
    value: function xmlToLyric($mxLyric, inputM21) {
      var l = inputM21;

      if (inputM21 === undefined) {
        l = new __WEBPACK_IMPORTED_MODULE_6__note_js__["a" /* note */].Lyric();
      }

      try {
        l.text = $mxLyric.children('text').text().trim();
      } catch (exc) {
        return undefined; // sometimes there are empty lyrics.
      }

      var number = $mxLyric.attr('number');

      try {
        number = parseInt(number);
        l.number = number;
      } catch (exc) {
        l.number = 0;

        if (number !== undefined) {
          l.identifier = number;
        }
      }

      var identifier = $mxLyric.get('name');

      if (identifier !== undefined) {
        l.identifier = identifier;
      }

      var $mxSyllabic = $mxLyric.children('syllabic');

      if ($mxSyllabic.length) {
        l.syllabic = $mxSyllabic.text().trim();
      } // setStyleAttributes
      // setColor
      // setPosition


      if (inputM21 === undefined) {
        return l;
      }

      return undefined;
    }
  }, {
    key: "insertIntoMeasureOrVoice",
    value: function insertIntoMeasureOrVoice($mxElement, el) {
      this.stream.insert(this.offsetMeasureNote, el);
    }
  }, {
    key: "parseMeasureAttributes",
    value: function parseMeasureAttributes() {
      this.parseMeasureNumbers(); // width;
    }
  }, {
    key: "parseMeasureNumbers",
    value: function parseMeasureNumbers() {
      var mNumRaw = this.$mxMeasure.attr('number');
      var mNum = parseInt(mNumRaw); // no suffixes...

      this.stream.number = mNum;

      if (this.parent) {
        this.parent.lastMeasureNumber = mNum;
      }

      this.measureNumber = mNum;
    }
  }, {
    key: "parseAttributesTag",
    value: function parseAttributesTag($mxAttributes) {
      this.attributesAreInternal = false;
      this.$activeAttributes = $mxAttributes;
      var _iteratorNormalCompletion8 = true;
      var _didIteratorError8 = false;
      var _iteratorError8 = undefined;

      try {
        for (var _iterator8 = $mxAttributes.children()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
          var mxSub = _step8.value;
          var tag = mxSub.tagName;
          var $mxSub = __WEBPACK_IMPORTED_MODULE_0_jquery__(mxSub);
          var methName = this.attributeTagsToMethods[tag];

          if (methName !== undefined) {
            this[methName]($mxSub);
          } else if (tag === 'staves') {
            this.staves = parseInt($mxSub.text());
          } else if (tag === 'divisions') {
            this.divisions = parseFloat($mxSub.text());
          } // transpose;

        }
      } catch (err) {
        _didIteratorError8 = true;
        _iteratorError8 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion8 && _iterator8["return"] != null) {
            _iterator8["return"]();
          }
        } finally {
          if (_didIteratorError8) {
            throw _iteratorError8;
          }
        }
      }

      if (this.parent !== undefined) {
        this.parent.lastDivisions = this.divisions;
        this.parent.$activeAttributes = this.$activeAttributes;
      }
    } // xmlTransposeToInterval

  }, {
    key: "handleTimeSignature",
    value: function handleTimeSignature($mxTime) {
      var ts = this.xmlToTimeSignature($mxTime);
      this.insertIntoMeasureOrVoice($mxTime, ts);
    }
  }, {
    key: "xmlToTimeSignature",
    value: function xmlToTimeSignature($mxTime) {
      // senza-misura
      // simple time signature only;
      var numerator = __WEBPACK_IMPORTED_MODULE_0_jquery__($mxTime.children('beats')[0]).text().trim();
      var denominator = __WEBPACK_IMPORTED_MODULE_0_jquery__($mxTime.children('beat-type')[0]).text().trim();
      return new __WEBPACK_IMPORTED_MODULE_5__meter_js__["a" /* meter */].TimeSignature(numerator + '/' + denominator); // symbol
    }
  }, {
    key: "handleClef",
    value: function handleClef($mxClef) {
      var clefObj = this.xmlToClef($mxClef);
      this.stream.clef = clefObj;
      this.insertIntoMeasureOrVoice($mxClef, clefObj);
      this.lastClefs[0] = clefObj; //        if (this.parent !== undefined) {
      //            this.parent.lastClefs[0] = clefObj.clone(true);
      //        }
    }
  }, {
    key: "xmlToClef",
    value: function xmlToClef($mxClef) {
      var sign = __WEBPACK_IMPORTED_MODULE_0_jquery__($mxClef.children('sign')[0]).text().trim(); // TODO: percussion, etc.

      var line = __WEBPACK_IMPORTED_MODULE_0_jquery__($mxClef.children('line')[0]).text().trim();
      var clefOctaveChange = 0;
      var $coc = $mxClef.children('clef-octave-change');

      if ($coc.length > 0) {
        clefOctaveChange = parseInt(__WEBPACK_IMPORTED_MODULE_0_jquery__($coc[0]).text().trim());
      }

      return __WEBPACK_IMPORTED_MODULE_2__clef_js__["a" /* clef */].clefFromString(sign + line, clefOctaveChange);
    }
  }, {
    key: "handleKeySignature",
    value: function handleKeySignature($mxKey) {
      var keySig = this.xmlToKeySignature($mxKey);
      this.insertIntoMeasureOrVoice($mxKey, keySig);
    }
  }, {
    key: "xmlToKeySignature",
    value: function xmlToKeySignature($mxKey) {
      var ks = new __WEBPACK_IMPORTED_MODULE_4__key_js__["a" /* key */].KeySignature();
      seta(ks, $mxKey, 'fifths', 'sharps', parseInt); // mode!
      // non-standard and key-octaves

      ks._alteredPitchesCache = undefined; // TODO: remove private access...

      return ks;
    }
  }]);

  return MeasureParser;
}();
var musicxml = {
  ScoreParser: ScoreParser,
  PartParser: PartParser,
  MeasureParser: MeasureParser
};
/* harmony default export */ __webpack_exports__["default"] = (musicxml);

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterException", function() { return FilterException; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StopIterationSingleton", function() { return StopIterationSingleton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StreamFilter", function() { return StreamFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsFilter", function() { return IsFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsNotFilter", function() { return IsNotFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassFilter", function() { return ClassFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassNotFilter", function() { return ClassNotFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OffsetFilter", function() { return OffsetFilter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

// import common from '../common.js';

var FilterException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(FilterException, _Music21Exception);

  function FilterException() {
    _classCallCheck(this, FilterException);

    return _possibleConstructorReturn(this, _getPrototypeOf(FilterException).apply(this, arguments));
  }

  return FilterException;
}(__WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]);

var _StopIteration = function _StopIteration() {
  _classCallCheck(this, _StopIteration);
};

var StopIterationSingleton = new _StopIteration();
var StreamFilter =
/*#__PURE__*/
function () {
  function StreamFilter() {
    _classCallCheck(this, StreamFilter);
  }

  _createClass(StreamFilter, [{
    key: "reset",
    value: function reset() {}
  }, {
    key: "call",
    value: function call(item, iterator) {
      return true;
    }
  }], [{
    key: "derivationStr",
    get: function get() {
      return 'streamFilter';
    }
  }]);

  return StreamFilter;
}();
var IsFilter =
/*#__PURE__*/
function (_StreamFilter) {
  _inherits(IsFilter, _StreamFilter);

  _createClass(IsFilter, null, [{
    key: "derivationStr",
    get: function get() {
      return 'is';
    }
  }]);

  function IsFilter() {
    var _this;

    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    _classCallCheck(this, IsFilter);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(IsFilter).call(this));

    if (!Array.isArray(target)) {
      target = [target];
    }

    _this.target = target;
    _this.numToFind = target.length;
    return _this;
  }

  _createClass(IsFilter, [{
    key: "reset",
    value: function reset() {
      this.numToFind = this.target.length;
    }
  }, {
    key: "call",
    value: function call(item, iterator) {
      if (this.numToFind === 0) {
        return StopIterationSingleton;
      }

      if (this.target.includes(item)) {
        this.numToFind -= 1;
        return true;
      } else {
        return false;
      }
    }
  }]);

  return IsFilter;
}(StreamFilter);
var IsNotFilter =
/*#__PURE__*/
function (_IsFilter) {
  _inherits(IsNotFilter, _IsFilter);

  _createClass(IsNotFilter, null, [{
    key: "derivationStr",
    get: function get() {
      return 'IsNot';
    }
  }]);

  function IsNotFilter(target) {
    var _this2;

    _classCallCheck(this, IsNotFilter);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(IsNotFilter).call(this, target));
    _this2.numToFind = Number.MAX_SAFE_INTEGER;
    return _this2;
  }

  _createClass(IsNotFilter, [{
    key: "reset",
    value: function reset() {}
  }, {
    key: "call",
    value: function call(item, iterator) {
      var ret = _get(_getPrototypeOf(IsNotFilter.prototype), "call", this).call(this, item, iterator);

      if (ret === StopIterationSingleton) {
        return ret;
      } else {
        return !ret;
      }
    }
  }]);

  return IsNotFilter;
}(IsFilter); // TODO(msc): IdFilter

var ClassFilter =
/*#__PURE__*/
function (_StreamFilter2) {
  _inherits(ClassFilter, _StreamFilter2);

  _createClass(ClassFilter, null, [{
    key: "derivationStr",
    get: function get() {
      return 'getElementsByClass';
    }
  }]);

  function ClassFilter() {
    var _this3;

    var classList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    _classCallCheck(this, ClassFilter);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ClassFilter).call(this));

    if (!Array.isArray(classList)) {
      classList = [classList];
    }

    _this3.classList = classList;
    return _this3;
  } // TODO: __eq__


  _createClass(ClassFilter, [{
    key: "call",
    value: function call(item, iterator) {
      return item.isClassOrSubclass(this.classList);
    }
  }]);

  return ClassFilter;
}(StreamFilter);
var ClassNotFilter =
/*#__PURE__*/
function (_ClassFilter) {
  _inherits(ClassNotFilter, _ClassFilter);

  function ClassNotFilter() {
    _classCallCheck(this, ClassNotFilter);

    return _possibleConstructorReturn(this, _getPrototypeOf(ClassNotFilter).apply(this, arguments));
  }

  _createClass(ClassNotFilter, [{
    key: "call",
    value: function call(item, iterator) {
      return !_get(_getPrototypeOf(ClassNotFilter.prototype), "call", this).call(this, item, iterator);
    }
  }], [{
    key: "derivationStr",
    get: function get() {
      return 'getElementsNotOfClass';
    }
  }]);

  return ClassNotFilter;
}(ClassFilter); // TODO: GroupFilter

var OffsetFilter =
/*#__PURE__*/
function (_StreamFilter3) {
  _inherits(OffsetFilter, _StreamFilter3);

  _createClass(OffsetFilter, null, [{
    key: "derivationStr",
    get: function get() {
      return 'getElementsByOffset';
    }
  }]);

  function OffsetFilter(offsetStart, offsetEnd) {
    var _this4;

    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref$includeEndBounda = _ref.includeEndBoundary,
        includeEndBoundary = _ref$includeEndBounda === void 0 ? true : _ref$includeEndBounda,
        _ref$mustFinishInSpan = _ref.mustFinishInSpan,
        mustFinishInSpan = _ref$mustFinishInSpan === void 0 ? false : _ref$mustFinishInSpan,
        _ref$mustBeginInSpan = _ref.mustBeginInSpan,
        mustBeginInSpan = _ref$mustBeginInSpan === void 0 ? true : _ref$mustBeginInSpan,
        _ref$includeElementsT = _ref.includeElementsThatEndAtStart,
        includeElementsThatEndAtStart = _ref$includeElementsT === void 0 ? true : _ref$includeElementsT;

    _classCallCheck(this, OffsetFilter);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(OffsetFilter).call(this));
    _this4.offsetStart = offsetStart;
    _this4.offsetEnd = offsetEnd;
    _this4.includeEndBoundary = includeEndBoundary;
    _this4.mustFinishInSpan = mustFinishInSpan;
    _this4.mustBeginInSpan = mustBeginInSpan;
    _this4.includeElementsThatEndAtStart = includeElementsThatEndAtStart;
    _this4.zeroLengthSearch = false;

    if (offsetEnd === undefined) {
      self.offsetEnd = offsetStart;
      _this4.zeroLengthSearch = true;
    } else if (offsetEnd <= offsetStart) {
      _this4.zeroLengthSearch = true;
    }

    return _this4;
  }

  _createClass(OffsetFilter, [{
    key: "call",
    value: function call(item, iterator) {
      return this.isElementOffsetInRange(item, item.offset);
    }
  }, {
    key: "isElementOffsetInRange",
    value: function isElementOffsetInRange(e, offset) {
      if (offset > this.offsetEnd) {
        // anything that begins after the span is definitely out.
        return false;
      }

      var dur = e.duration;
      var elementEnd = offset + dur.quarterLength;

      if (elementEnd < this.offsetStart) {
        // anything that finishes before the span ends is definitely out
        return false;
      } // some part of the element is at least touching some part of span.


      var elementIsZeroLength = false;

      if (dur.quarterLength === 0) {
        elementIsZeroLength = true;
      }

      if (this.zeroLengthSearch && elementIsZeroLength) {
        return true;
      }

      if (this.mustFinishInSpan) {
        if (elementEnd > this.offsetEnd) {
          return false;
        }

        if (!this.includeEndBoundary && offset === this.offsetEnd) {
          return false;
        }
      }

      if (this.mustBeginInSpan) {
        if (offset < this.offsetStart) {
          return false;
        }

        if (!this.includeEndBoundary && offset === this.offsetEnd) {
          return false;
        }
      } else if (!elementIsZeroLength && elementEnd === this.offsetEnd && this.zeroLengthSearch) {
        return false;
      }

      if (!this.includeEndBoundary && offset === this.offsetEnd) {
        return false;
      }

      if (!this.includeElementsThatEndAtStart && elementEnd === this.offsetStart) {
        return false;
      }

      return true;
    }
  }]);

  return OffsetFilter;
}(StreamFilter); // TODO: OffsetFilter (high priority)
// TODO: OffsetHierarchyFilter

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return articulations; });
/* unused harmony export Articulation */
/* unused harmony export LengthArticulation */
/* unused harmony export DynamicArticulation */
/* unused harmony export PitchArticulation */
/* unused harmony export TimbreArticulation */
/* unused harmony export Accent */
/* unused harmony export StrongAccent */
/* unused harmony export Staccato */
/* unused harmony export Staccatissimo */
/* unused harmony export Spiccato */
/* unused harmony export Marcato */
/* unused harmony export Tenuto */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vexflow__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__prebase_js__ = __webpack_require__(5);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }




/**
 * articulations module. See {@link music21.articulations} namespace
 *
 */

/**
 * @namespace music21.articulations
 * @memberof music21
 * @requires music21/prebase, Vexflow
 */

var articulations = {};
/**
 * Represents a single articulation, usually in the `.articulations` Array
 * on a {@link music21.note.Note} or something like that.
 *
 * @class Articulation
 * @memberof music21.articulations
 * @extends music21.prebase.ProtoM21Object
 * @property {string} name
 * @property {string} [placement='above']
 * @property {string|undefined} vexflowModifier - the string code to get this accidental in Vexflow
 * @property {number} [dynamicScale=1.0] - multiplier for the dynamic of a note that this is attached to
 * @property {number} [lengthScale=1.0] - multiplier for the length of a note that this is attached to.
 */

var Articulation =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Articulation, _prebase$ProtoM21Obje);

  function Articulation() {
    var _this;

    _classCallCheck(this, Articulation);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Articulation).call(this));
    _this.name = undefined;
    _this.placement = 'above';
    _this.vexflowModifier = undefined;
    _this.setPosition = undefined;
    _this.dynamicScale = 1.0;
    _this.lengthScale = 1.0;
    return _this;
  }
  /**
   * Generates a Vex.Flow.Articulation for this articulation.
   *
   * @returns {Vex.Flow.Articulation}
   */


  _createClass(Articulation, [{
    key: "vexflow",
    value: function vexflow() {
      var vfa = new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Articulation(this.vexflowModifier);

      if (this.setPosition) {
        vfa.setPosition(this.setPosition);
      }

      return vfa;
    }
  }]);

  return Articulation;
}(__WEBPACK_IMPORTED_MODULE_2__prebase_js__["a" /* prebase */].ProtoM21Object);
articulations.Articulation = Articulation;
/**
 * base class for articulations that change the length of a note...
 *
 * @class LengthArticulation
 * @memberof music21.articulations
 * @extends music21.articulations.Articulation
 */

var LengthArticulation =
/*#__PURE__*/
function (_Articulation) {
  _inherits(LengthArticulation, _Articulation);

  function LengthArticulation() {
    var _this2;

    _classCallCheck(this, LengthArticulation);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LengthArticulation).call(this));
    _this2.name = 'length-articulation';
    return _this2;
  }

  return LengthArticulation;
}(Articulation);
articulations.LengthArticulation = LengthArticulation;
/**
 * base class for articulations that change the dynamic of a note...
 *
 * @class DynamicArticulation
 * @memberof music21.articulations
 * @extends music21.articulations.Articulation
 */

var DynamicArticulation =
/*#__PURE__*/
function (_Articulation2) {
  _inherits(DynamicArticulation, _Articulation2);

  function DynamicArticulation() {
    var _this3;

    _classCallCheck(this, DynamicArticulation);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DynamicArticulation).call(this));
    _this3.name = 'dynamic-articulation';
    return _this3;
  }

  return DynamicArticulation;
}(Articulation);
articulations.DynamicArticulation = DynamicArticulation;
/**
 * base class for articulations that change the pitch of a note...
 *
 * @class PitchArticulation
 * @memberof music21.articulations
 * @extends music21.articulations.Articulation
 */

var PitchArticulation =
/*#__PURE__*/
function (_Articulation3) {
  _inherits(PitchArticulation, _Articulation3);

  function PitchArticulation() {
    var _this4;

    _classCallCheck(this, PitchArticulation);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(PitchArticulation).call(this));
    _this4.name = 'pitch-articulation';
    return _this4;
  }

  return PitchArticulation;
}(Articulation);
articulations.PitchArticulation = PitchArticulation;
/**
 * base class for articulations that change the timbre of a note...
 *
 * @class TimbreArticulation
 * @memberof music21.articulations
 * @extends music21.articulations.Articulation
 */

var TimbreArticulation =
/*#__PURE__*/
function (_Articulation4) {
  _inherits(TimbreArticulation, _Articulation4);

  function TimbreArticulation() {
    var _this5;

    _classCallCheck(this, TimbreArticulation);

    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(TimbreArticulation).call(this));
    _this5.name = 'timbre-articulation';
    return _this5;
  }

  return TimbreArticulation;
}(Articulation);
articulations.TimbreArticulation = TimbreArticulation;
/**
 * 50% louder than usual
 *
 * @class Accent
 * @memberof music21.articulations
 * @extends music21.articulations.DynamicArticulation
 */

var Accent =
/*#__PURE__*/
function (_DynamicArticulation) {
  _inherits(Accent, _DynamicArticulation);

  function Accent() {
    var _this6;

    _classCallCheck(this, Accent);

    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Accent).call(this));
    _this6.name = 'accent';
    _this6.vexflowModifier = 'a>';
    _this6.dynamicScale = 1.5;
    return _this6;
  }

  return Accent;
}(DynamicArticulation);
articulations.Accent = Accent;
/**
 * 100% louder than usual
 *
 * @class StrongAccent
 * @memberof music21.articulations
 * @extends music21.articulations.Accent
 */

var StrongAccent =
/*#__PURE__*/
function (_Accent) {
  _inherits(StrongAccent, _Accent);

  function StrongAccent() {
    var _this7;

    _classCallCheck(this, StrongAccent);

    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(StrongAccent).call(this));
    _this7.name = 'strong accent';
    _this7.vexflowModifier = 'a^';
    _this7.dynamicScale = 2.0;
    return _this7;
  }

  return StrongAccent;
}(Accent);
articulations.StrongAccent = StrongAccent;
/**
 * no playback for now.
 *
 * @class Staccato
 * @memberof music21.articulations
 * @extends music21.articulations.LengthArticulation
 */

var Staccato =
/*#__PURE__*/
function (_LengthArticulation) {
  _inherits(Staccato, _LengthArticulation);

  function Staccato() {
    var _this8;

    _classCallCheck(this, Staccato);

    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(Staccato).call(this));
    _this8.name = 'staccato';
    _this8.vexflowModifier = 'a.';
    return _this8;
  }

  return Staccato;
}(LengthArticulation);
articulations.Staccato = Staccato;
/**
 * no playback for now.
 *
 * @class Staccatissimo
 * @memberof music21.articulations
 * @extends music21.articulations.Staccato
 */

var Staccatissimo =
/*#__PURE__*/
function (_Staccato) {
  _inherits(Staccatissimo, _Staccato);

  function Staccatissimo() {
    var _this9;

    _classCallCheck(this, Staccatissimo);

    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Staccatissimo).call(this));
    _this9.name = 'staccatissimo';
    _this9.vexflowModifier = 'av';
    return _this9;
  }

  return Staccatissimo;
}(Staccato);
articulations.Staccatissimo = Staccatissimo;
/**
 * no playback or display for now.
 *
 * @class Spiccato
 * @memberof music21.articulations
 * @extends music21.articulations.Staccato
 */

var Spiccato =
/*#__PURE__*/
function (_Staccato2) {
  _inherits(Spiccato, _Staccato2);

  function Spiccato() {
    var _this10;

    _classCallCheck(this, Spiccato);

    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(Spiccato).call(this));
    _this10.name = 'spiccato';
    _this10.vexflowModifier = undefined;
    return _this10;
  }

  return Spiccato;
}(Staccato);
articulations.Spiccato = Spiccato;
/**
 * @class Marcato
 * @memberof music21.articulations
 * @extends music21.articulations.DynamicArticulation
 * @extends music21.articulations.LengthArticulation
 */

var Marcato =
/*#__PURE__*/
function (_DynamicArticulation2) {
  _inherits(Marcato, _DynamicArticulation2);

  function Marcato() {
    var _this11;

    _classCallCheck(this, Marcato);

    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(Marcato).call(this));
    __WEBPACK_IMPORTED_MODULE_1__common_js__["a" /* common */].mixin(LengthArticulation, _assertThisInitialized(_this11));
    _this11.name = 'marcato';
    _this11.vexflowModifier = 'a^';
    _this11.dynamicScale = 1.7;
    return _this11;
  }

  return Marcato;
}(DynamicArticulation);
articulations.Marcato = Marcato;
/**
 * @class Tenuto
 * @memberof music21.articulations
 * @extends music21.articulations.LengthArticulation
 */

var Tenuto =
/*#__PURE__*/
function (_LengthArticulation2) {
  _inherits(Tenuto, _LengthArticulation2);

  function Tenuto() {
    var _this12;

    _classCallCheck(this, Tenuto);

    _this12 = _possibleConstructorReturn(this, _getPrototypeOf(Tenuto).call(this));
    _this12.name = 'tenuto';
    _this12.vexflowModifier = 'a-';
    return _this12;
  }

  return Tenuto;
}(LengthArticulation);
articulations.Tenuto = Tenuto;

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Recorder */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return audioRecording; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__audioSearch_js__ = __webpack_require__(22);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/**
 * Adopted from Matt Diamond's recorder.js code MIT License
 */

var Recorder =
/*#__PURE__*/
function () {
  function Recorder(cfg) {
    _classCallCheck(this, Recorder);

    var config = cfg || {};
    this.bufferLen = config.bufferLen || 4096;
    this.config = config;
    this.recording = false;
    this.currCallback = undefined;
    this.audioContext = __WEBPACK_IMPORTED_MODULE_0__audioSearch_js__["a" /* audioSearch */].audioContext;
    this.frequencyCanvasInfo = {
      id: 'frequencyAnalyser',
      width: undefined,
      height: undefined,
      canvasContext: undefined,
      animationFrameID: undefined
    };
    this.waveformCanvasInfo = {
      id: 'waveformCanvas',
      width: undefined,
      height: undefined,
      canvasContext: undefined
    };
    this.analyserNode = undefined;
  }
  /**
   * Start here -- polyfills navigator, runs getUserMedia and then sends to audioStreamConnected
   */


  _createClass(Recorder, [{
    key: "initAudio",
    value: function initAudio() {
      var _this = this;

      this.polyfillNavigator();
      navigator.getUserMedia({
        audio: {
          mandatory: {
            googEchoCancellation: 'false',
            googAutoGainControl: 'false',
            googNoiseSuppression: 'false',
            googHighpassFilter: 'false' // 'echoCancellation': false,
            // 'autoGainControl': false,
            // 'noiseSuppression': false,
            // 'highpassFilter': false,

          },
          optional: []
        }
      }, function (s) {
        return _this.audioStreamConnected(s);
      }, function (error) {
        console.log('Error getting audio -- try on google Chrome?');
        console.log(error);
      });
    }
    /**
     * After the user has given permission to record, this method is called.
     * It creates a gain point, and then connects the input source to the gain.
     * It connects an analyserNode (fftSize 2048) to the gain.
     *
     * It creates a second gain of 0.0 connected to the destination, so that
     * we're not hearing what we're playing in in an infinite loop (SUCKS to turn this off...)
     *
     * And it calls this.connectSource on the inputPoint so that
     * we can do something with all these wonderful inputs.
     */

  }, {
    key: "audioStreamConnected",
    value: function audioStreamConnected(stream) {
      var inputPoint = this.audioContext.createGain(); // Create an AudioNode from the stream.

      var audioInput = this.audioContext.createMediaStreamSource(stream);
      audioInput.connect(inputPoint);
      var analyserNode = this.audioContext.createAnalyser();
      analyserNode.fftSize = 2048;
      this.analyserNode = analyserNode;
      inputPoint.connect(analyserNode);
      this.connectSource(inputPoint);
      var zeroGain = this.audioContext.createGain();
      zeroGain.gain.value = 0.0;
      inputPoint.connect(zeroGain);
      zeroGain.connect(this.audioContext.destination);
    }
    /**
     * Creates a worker to receive and process all the messages asychronously.
     */

  }, {
    key: "connectSource",
    value: function connectSource(source) {
      var _this2 = this;

      this.context = source.context;
      this.setNode(); // create a Worker with inline code...

      var workerBlob = new Blob(['(', recorderWorkerJs, ')()'], {
        type: 'application/javascript'
      });
      var workerURL = URL.createObjectURL(workerBlob);
      this.worker = new Worker(workerURL);
      /**
       * When worker sends a message, we just send it to the currentCallback...
       */

      this.worker.onmessage = function (e) {
        var blob = e.data;

        _this2.currCallback(blob);
      };

      URL.revokeObjectURL(workerURL);
      this.worker.postMessage({
        command: 'init',
        config: {
          sampleRate: this.context.sampleRate
        }
      });
      /**
       * Whenever the ScriptProcessorNode receives enough audio to process
       * (i.e., this.bufferLen stereo samples; default 4096), then it calls onaudioprocess
       * which is set up to send the event's .getChannelData to the WebWorker via a
       * postMessage.
       *
       * The 'record' command sends no message back.
       */

      this.node.onaudioprocess = function (e) {
        if (!_this2.recording) {
          return;
        }

        _this2.worker.postMessage({
          command: 'record',
          buffer: [e.inputBuffer.getChannelData(0), e.inputBuffer.getChannelData(1)]
        });
      };

      source.connect(this.node);
      /**
       * polyfill for Chrome error.
       *
       * if the ScriptProcessorNode (this.node) is not connected to an output
       * the "onaudioprocess" event is not triggered in Chrome.
       */

      this.node.connect(this.context.destination);
    }
    /**
     * Creates a ScriptProcessorNode (preferably) to allow for direct audio processing.
     *
     * Sets it to this.node and returns it.
     */

  }, {
    key: "setNode",
    value: function setNode() {
      var numInputChannels = 2;
      var numOutputChannels = 2;

      if (!this.context.createScriptProcessor) {
        this.node = this.context.createJavaScriptNode(this.bufferLen, numInputChannels, numOutputChannels);
      } else {
        this.node = this.context.createScriptProcessor(this.bufferLen, numInputChannels, numOutputChannels);
      }

      return this.node;
    }
    /**
     * Configure from another source...
     */

  }, {
    key: "configure",
    value: function configure(cfg) {
      for (var prop in cfg) {
        if (Object.hasOwnProperty.call(cfg, prop)) {
          this.config[prop] = cfg[prop];
        }
      }
    }
  }, {
    key: "record",
    value: function record() {
      this.recording = true;
    }
  }, {
    key: "stop",
    value: function stop() {
      this.recording = false;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.worker.postMessage({
        command: 'clear'
      });
    }
    /**
     * Directly get the buffers from the worker and then call cb.
     */

  }, {
    key: "getBuffers",
    value: function getBuffers(cb) {
      this.currCallback = cb || this.config.callback;
      this.worker.postMessage({
        command: 'getBuffers'
      });
    }
    /**
     * call exportWAV or exportMonoWAV on the worker, then call cb or (if undefined) setupDownload.
     */

  }, {
    key: "exportWAV",
    value: function exportWAV(cb, type, isMono) {
      var _this3 = this;

      var command = 'exportWAV';

      if (isMono === true) {
        // default false
        command = 'exportMonoWAV';
      }

      this.currCallback = cb || this.config.callback;
      type = type || this.config.type || 'audio/wav';

      if (!this.currCallback) {
        this.currCallback = function (blob) {
          _this3.setupDownload(blob, 'myRecording' + Date.now().toString() + '.wav');
        };
      }

      this.worker.postMessage({
        command: command,
        type: type
      });
    }
  }, {
    key: "exportMonoWAV",
    value: function exportMonoWAV(cb, type) {
      this.exportWAV(cb, type, true);
    }
  }, {
    key: "setupDownload",
    value: function setupDownload(blob, filename, elementId) {
      elementId = elementId || 'save';
      var url = (window.URL || window.webkitURL).createObjectURL(blob);
      var link = document.getElementById(elementId);
      link.href = url;
      link.download = filename || 'output.wav';
    }
    /**
     * Polyfills for getUserMedia (requestAnimationFrame polyfills not needed.)
     * As of 2016 September, only Edge support unprefixed.
     */

  }, {
    key: "polyfillNavigator",
    value: function polyfillNavigator() {
      if (!navigator.getUserMedia) {
        navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
      }

      if (window.AnalyserNode && !window.AnalyserNode.prototype.getFloatTimeDomainData) {
        var uint8 = new Uint8Array(2048);

        window.AnalyserNode.prototype.getFloatTimeDomainData = function getFloatTimeDomainData(array) {
          this.getByteTimeDomainData(uint8);
          var imax = array.length;

          for (var i = 0; i < imax; i++) {
            array[i] = (uint8[i] - 128) * 0.0078125;
          }
        };
      }
    }
  }, {
    key: "updateAnalysers",
    value: function updateAnalysers(time) {
      var _this4 = this;

      if (!this.frequencyCanvasInfo.canvasContext) {
        var canvas = document.getElementById(this.frequencyCanvasInfo.id);

        if (!canvas) {
          return;
        }

        this.frequencyCanvasInfo.width = canvas.width;
        this.frequencyCanvasInfo.height = canvas.height;
        this.frequencyCanvasInfo.canvasContext = canvas.getContext('2d');
      } // analyser draw code here


      var SPACING = 3;
      var BAR_WIDTH = 1;
      var numBars = Math.round(this.frequencyCanvasInfo.width / SPACING);
      var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);
      this.analyserNode.getByteFrequencyData(freqByteData);
      var canvasContext = this.frequencyCanvasInfo.canvasContext;
      canvasContext.clearRect(0, 0, this.frequencyCanvasInfo.width, this.frequencyCanvasInfo.height);
      canvasContext.fillStyle = '#F6D565';
      canvasContext.lineCap = 'round';
      var multiplier = this.analyserNode.frequencyBinCount / numBars; // Draw rectangle for each frequency bin.

      for (var i = 0; i < numBars; ++i) {
        var magnitude = 0;
        var offset = Math.floor(i * multiplier);

        for (var j = 0; j < multiplier; j++) {
          magnitude += freqByteData[offset + j];
        }

        magnitude = magnitude * (this.frequencyCanvasInfo.height / 256) / multiplier;
        canvasContext.fillStyle = 'hsl( ' + Math.round(i * 360 / numBars) + ', 100%, 50%)';
        canvasContext.fillRect(i * SPACING, this.frequencyCanvasInfo.height, BAR_WIDTH, -1 * magnitude);
      }

      this.frequencyCanvasInfo.animationFrameID = window.requestAnimationFrame(function (t) {
        return _this4.updateAnalysers(t);
      });
    }
  }, {
    key: "drawWaveformCanvas",
    value: function drawWaveformCanvas(buffers) {
      var data = buffers[0]; // one track of stereo recording.

      if (!this.waveformCanvasInfo.context) {
        var canvas = document.getElementById(this.waveformCanvasInfo.id);

        if (!canvas) {
          return;
        }

        this.waveformCanvasInfo.width = canvas.width;
        this.waveformCanvasInfo.height = canvas.height;
        this.waveformCanvasInfo.context = canvas.getContext('2d');
      }

      var context = this.waveformCanvasInfo.context;
      var step = Math.ceil(data.length / this.waveformCanvasInfo.width);
      var amp = this.waveformCanvasInfo.height / 2;
      context.fillStyle = 'silver';
      context.clearRect(0, 0, this.waveformCanvasInfo.width, this.waveformCanvasInfo.height);

      for (var i = 0; i < this.waveformCanvasInfo.width; i++) {
        var min = 1.0;
        var max = -1.0;

        for (var j = 0; j < step; j++) {
          var datum = data[i * step + j];

          if (datum < min) {
            min = datum;
          }

          if (datum > max) {
            max = datum;
          }
        }

        context.fillRect(i, (1 + min) * amp, 1, Math.max(1, (max - min) * amp));
      }
    }
    /**
     * set this as a callback from getBuffers.  Returns the source so that a stop() command
     * is possible.
     */

  }, {
    key: "playBuffers",
    value: function playBuffers(buffers) {
      var channels = 2;
      var numFrames = buffers[0].length;
      var audioBuffer = this.context.createBuffer(channels, numFrames, this.context.sampleRate);

      for (var channel = 0; channel < channels; channel++) {
        var thisChannelBuffer = audioBuffer.getChannelData(channel);

        for (var i = 0; i < numFrames; i++) {
          thisChannelBuffer[i] = buffers[channel][i];
        }
      }

      var source = this.context.createBufferSource();
      source.buffer = audioBuffer;
      source.connect(this.context.destination);
      source.start();
      return source;
    }
  }]);

  return Recorder;
}();
/**
 * This code does NOT go through babel, so no arrow functions, let, const, etc.
 */

var recorderWorkerJs = "function recorderWorkerJs() {\n    /**\n     *\n     *   Rewritten from Matt Diamond's recorderWorker -- MIT License\n     */\n    RecorderWorker = function RecorderWorker(parentContext) {\n            this.parent = parentContext;\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n            this.sampleRate = undefined;\n    };\n    RecorderWorker.prototype.onmessage = function onmessage(e) {\n            switch (e.data.command) {\n            case 'init':\n                this.init(e.data.config);\n                break;\n            case 'record':\n                this.record(e.data.buffer);\n                break;\n            case 'exportWAV':\n                this.exportWAV(e.data.type);\n                break;\n            case 'exportMonoWAV':\n                this.exportMonoWAV(e.data.type);\n                break;\n            case 'getBuffers':\n                this.getBuffers();\n                break;\n            case 'clear':\n                this.clear();\n                break;\n            default:\n                break;\n            }\n   };\n   RecorderWorker.prototype.postMessage = function postMessage(msg) {\n            this.parent.postMessage(msg);\n   };\n\n   RecorderWorker.prototype.init = function init(config) {\n            this.sampleRate = config.sampleRate;\n   };\n\n   RecorderWorker.prototype.record = function record(inputBuffer) {\n            var inputBufferL = inputBuffer[0];\n            var inputBufferR = inputBuffer[1];\n            this.recBuffersL.push(inputBufferL);\n            this.recBuffersR.push(inputBufferR);\n            this.recLength += inputBufferL.length;\n   };\n\n   RecorderWorker.prototype.exportWAV = function exportWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var bufferR = this.mergeBuffers(this.recBuffersR);\n            var interleaved = this.interleave(bufferL, bufferR);\n            var dataview = this.encodeWAV(interleaved);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.exportMonoWAV = function exportMonoWAV(type) {\n            var bufferL = this.mergeBuffers(this.recBuffersL);\n            var dataview = this.encodeWAV(bufferL);\n            var audioBlob = new Blob([dataview], { 'type': type });\n\n            this.postMessage(audioBlob);\n   };\n\n   RecorderWorker.prototype.mergeBuffers = function mergeBuffers(recBuffers) {\n            var result = new Float32Array(this.recLength);\n            var offset = 0;\n            for (var i = 0; i < recBuffers.length; i++) {\n                result.set(recBuffers[i], offset);\n                offset += recBuffers[i].length;\n            }\n            return result;\n    };\n\n    RecorderWorker.prototype.getBuffers = function getBuffers() {\n            var buffers = [];\n            buffers.push(this.mergeBuffers(this.recBuffersL));\n            buffers.push(this.mergeBuffers(this.recBuffersR));\n            this.postMessage(buffers);\n        };\n\n    RecorderWorker.prototype.clear = function clear() {\n            this.recLength = 0;\n            this.recBuffersL = [];\n            this.recBuffersR = [];\n        }\n\n    RecorderWorker.prototype.interleave = function interleave(inputL, inputR) {\n            var combinedLength = inputL.length + inputR.length;\n            var result = new Float32Array(combinedLength);\n\n            var index = 0;\n            var inputIndex = 0;\n\n            while (index < combinedLength) {\n                result[index++] = inputL[inputIndex];\n                result[index++] = inputR[inputIndex];\n                inputIndex++;\n            }\n            return result;\n        }\n    RecorderWorker.prototype.encodeWAV = function encodeWAV(samples, mono) {\n            var buffer = new ArrayBuffer(44 + (samples.length * 2));\n            var view = new DataView(buffer);\n\n            /* RIFF identifier */\n            writeString(view, 0, 'RIFF');\n\n            /* file length */\n            view.setUint32(4, 32 + samples.length * 2, true);\n\n            /* RIFF type */\n            writeString(view, 8, 'WAVE');\n\n            /* format chunk identifier */\n            writeString(view, 12, 'fmt ');\n\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n\n            /* sample format (raw) */\n            view.setUint16(20, 1, true);\n\n            /* channel count */\n            view.setUint16(22, mono ? 1 : 2, true);\n\n            /* sample rate */\n            view.setUint32(24, this.sampleRate, true);\n\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.sampleRate * 4, true);\n\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, 4, true);\n\n            /* bits per sample */\n            view.setUint16(34, 16, true);\n\n            /* data chunk identifier */\n            writeString(view, 36, 'data');\n\n            /* data chunk length */\n            view.setUint32(40, samples.length * 2, true);\n\n            floatTo16BitPCM(view, 44, samples);\n\n            return view;\n        }\n\n    function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n            var s = Math.max(-1, Math.min(1, input[i]));\n            output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n\n    function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    var recordWorker = new RecorderWorker(this);\n    this.onmessage = (function mainOnMessage(e) { recordWorker.onmessage(e) }).bind(this);\n}";
var audioRecording = {
  Recorder: Recorder
};
/* unused harmony default export */ var _unused_webpack_default_export = (audioRecording);

/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BarException", function() { return BarException; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Barline", function() { return Barline; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exceptions21_js__ = __webpack_require__(1);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/bar -- Barline objects
 *
 * Copyright (c) 2013-19, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–19, Michael Scott Cuthbert and cuthbertLab
 *
 */


var barTypeList = ['regular', 'dotted', 'dashed', 'heavy', 'double', 'final', 'heavy-light', 'heavy-heavy', 'tick', 'short', 'none'];
var barTypeDict = {
  'light-light': 'double',
  'light-heavy': 'final'
};
var reverseBarTypeDict = {
  'double': 'light-light',
  'final': 'light-heavy'
};
var BarException =
/*#__PURE__*/
function (_Music21Exception) {
  _inherits(BarException, _Music21Exception);

  function BarException() {
    _classCallCheck(this, BarException);

    return _possibleConstructorReturn(this, _getPrototypeOf(BarException).apply(this, arguments));
  }

  return BarException;
}(__WEBPACK_IMPORTED_MODULE_1__exceptions21_js__["Music21Exception"]);

function typeToMusicXMLBarStyle(value) {
  if (reverseBarTypeDict[value] !== undefined) {
    return reverseBarTypeDict[value];
  } else {
    return value;
  }
}

function standardizeBarType(value) {
  if (value === undefined) {
    return 'regular';
  }

  value = value.toLowerCase();

  if (barTypeList.includes(value)) {
    return value;
  }

  if (barTypeDict[value] !== undefined) {
    return barTypeDict[value];
  }

  throw new BarException("cannot process style: ".concat(value));
}

var Barline =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Barline, _base$Music21Object);

  function Barline(type, location) {
    var _this;

    _classCallCheck(this, Barline);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Barline).call(this));
    _this._type = undefined;
    _this.type = type;
    _this.location = location; // left, right, middle, None

    return _this;
  }

  _createClass(Barline, [{
    key: "musicXMLBarStyle",
    value: function musicXMLBarStyle() {
      return typeToMusicXMLBarStyle(this.type);
    }
  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(v) {
      this._type = standardizeBarType(v);
    }
  }]);

  return Barline;
}(__WEBPACK_IMPORTED_MODULE_0__base_js__["a" /* base */].Music21Object);
/* harmony default export */ __webpack_exports__["default"] = (Barline);

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["parse"] = parse;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__musicxml_xmlToM21_js__ = __webpack_require__(31);

function parse(txt) {
  var sp = new __WEBPACK_IMPORTED_MODULE_0__musicxml_xmlToM21_js__["ScoreParser"]();
  return sp.scoreFromText(txt);
}

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return dynamics; });
/* unused harmony export Dynamic */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_js__ = __webpack_require__(2);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/dynamics -- Dynamics
 *
 * note that Vex.Flow does not support Dynamics yet and we do not support MIDI dynamics,
 *  so currently of limited value...
 *
 * Copyright (c) 2013-14, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–14, Michael Scott Cuthbert and cuthbertLab
 *
 */

/**
 * dynamics Module. See {@link music21.dynamics} for namespace
 *
 * @exports music21/dynamics
 */

/**
 * Dynamics related objects.
 *
 * N.B. Firefox completely ignores dyanmics on playback!
 *
 * Currently do not export to Vexflow.  :-(
 *
 * @namespace music21.dynamics
 * @memberof music21
 * @requires music21/base
 */

var dynamics = {};
dynamics.shortNames = ['pppppp', 'ppppp', 'pppp', 'ppp', 'pp', 'p', 'mp', 'mf', 'f', 'fp', 'sf', 'ff', 'fff', 'ffff', 'fffff', 'ffffff'];
dynamics.longNames = {
  ppp: ['pianississimo'],
  pp: ['pianissimo'],
  p: ['piano'],
  mp: ['mezzopiano'],
  mf: ['mezzoforte'],
  f: ['forte'],
  fp: ['fortepiano'],
  sf: ['sforzando'],
  ff: ['fortissimo'],
  fff: ['fortississimo']
};
dynamics.englishNames = {
  ppp: ['extremely soft'],
  pp: ['very soft'],
  p: ['soft'],
  mp: ['moderately soft'],
  mf: ['moderately loud'],
  f: ['loud'],
  ff: ['very loud'],
  fff: ['extremely loud']
};
dynamics.dynamicStrToScalar = {
  None: [0.5],
  // default value
  n: [0.0],
  pppp: [0.1],
  ppp: [0.15],
  pp: [0.25],
  p: [0.35],
  mp: [0.45],
  mf: [0.55],
  f: [0.7],
  fp: [0.75],
  sf: [0.85],
  ff: [0.85],
  fff: [0.9],
  ffff: [0.95]
};
/**
 * A representation of a dynamic.
 *
 * @class Dynamic
 * @memberof music21.dynamics
 * @extends music21.base.Music21Object
 * @param {number|string} value - either a number between 0 and 1 or a dynamic mark such as "ff" or "mp"
 * @property {string|undefined} value - a name such as "pp" etc.
 * @property {string|undefined} longName - a longer name such as "pianissimo"
 * @property {string|undefined} englishName - a name such as "very soft"
 * @property {number} volumeScalar - a number between 0 and 1.
 */

var Dynamic =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Dynamic, _base$Music21Object);

  function Dynamic(value) {
    var _this;

    _classCallCheck(this, Dynamic);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dynamic).call(this));
    /**
     *
     * @type {string|undefined}
     * @private
     */

    _this._value = undefined;
    /**
     *
     * @type {number|undefined}
     * @private
     */

    _this._volumeScalar = undefined;
    _this.longName = undefined;
    _this.englishName = undefined;
    _this.value = value;
    return _this;
  }

  _createClass(Dynamic, [{
    key: "value",
    get: function get() {
      return this._value;
    },
    set: function set(value) {
      if (typeof value !== 'string') {
        // assume number
        this._volumeScalar = value;

        if (value <= 0) {
          this._value = 'n';
        } else if (value < 0.11) {
          this._value = 'pppp';
        } else if (value < 0.16) {
          this._value = 'ppp';
        } else if (value < 0.26) {
          this._value = 'pp';
        } else if (value < 0.36) {
          this._value = 'p';
        } else if (value < 0.5) {
          this._value = 'mp';
        } else if (value < 0.65) {
          this._value = 'mf';
        } else if (value < 0.8) {
          this._value = 'f';
        } else if (value < 0.9) {
          this._value = 'ff';
        } else {
          this._value = 'fff';
        }
      } else {
        this._value = value;
        this._volumeScalar = undefined;
      }

      if (this._value in dynamics.longNames) {
        this.longName = dynamics.longNames[this._value][0];
      } else {
        this.longName = undefined;
      }

      if (this._value in dynamics.englishNames) {
        this.englishName = dynamics.englishNames[this._value][0];
      } else {
        this.englishName = undefined;
      }
    }
  }, {
    key: "volumeScalar",
    get: function get() {
      if (this._volumeScalar !== undefined) {
        return this._volumeScalar;
      } else if (this._value in dynamics.dynamicStrToScalar) {
        return dynamics.dynamicStrToScalar[this._value][0];
      } else {
        return undefined;
      }
    },
    set: function set(value) {
      if (typeof value === 'number' && value <= 1 && value >= 0) {
        this._volumeScalar = value;
      }
    }
  }]);

  return Dynamic;
}(__WEBPACK_IMPORTED_MODULE_0__base_js__["a" /* base */].Music21Object);
dynamics.Dynamic = Dynamic;

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return expressions; });
/* unused harmony export Expression */
/* unused harmony export Fermata */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vexflow___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vexflow__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base_js__ = __webpack_require__(2);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }



/**
 * Expressions module.  See {@link music21.expressions}
 *
 * @exports music21/expressions
 */

/**
 * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...
 *
 * @namespace music21.expressions
 * @memberof music21
 * @requires music21/expressions
 */

var expressions = {};
/**
 * Expressions can be note attached (`music21.note.Note.expressions[]`) or floating...
 *
 * @class Expression
 * @memberof music21.expressions
 * @extends music21.base.Music21Object
 * @property {string} name
 * @property {string} vexflowModifier
 * @property {int} setPosition
 */

var Expression =
/*#__PURE__*/
function (_base$Music21Object) {
  _inherits(Expression, _base$Music21Object);

  function Expression() {
    var _this;

    _classCallCheck(this, Expression);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Expression).call(this));
    _this.name = 'expression';
    _this.vexflowModifier = '';
    _this.setPosition = undefined;
    return _this;
  }
  /**
   * Renders this Expression as a Vex.Flow.Articulation
   *
   * (this is not right for all cases)
   *
   * @returns {Vex.Flow.Articulation}
   */


  _createClass(Expression, [{
    key: "vexflow",
    value: function vexflow() {
      var vfe = new __WEBPACK_IMPORTED_MODULE_0_vexflow__["Flow"].Articulation(this.vexflowModifier);

      if (this.setPosition) {
        vfe.setPosition(this.setPosition);
      }

      return vfe;
    }
  }]);

  return Expression;
}(__WEBPACK_IMPORTED_MODULE_1__base_js__["a" /* base */].Music21Object);
expressions.Expression = Expression;
/**
 * A fermata...
 *
 * @class Fermata
 * @memberof music21.expressions
 * @extends music21.expressions.Expression
 */

var Fermata =
/*#__PURE__*/
function (_Expression) {
  _inherits(Fermata, _Expression);

  function Fermata() {
    var _this2;

    _classCallCheck(this, Fermata);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Fermata).call(this));
    _this2.name = 'fermata';
    _this2.vexflowModifier = 'a@a';
    _this2.setPosition = 3;
    return _this2;
  }

  return Fermata;
}(Expression);
expressions.Fermata = Fermata;

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return fromPython; });
/* unused harmony export Converter */
throw new Error("Cannot find module \"jsonpickle\"");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/fromPython -- Conversion from music21p jsonpickle streams
 *
 * Copyright (c) 2013-16, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–16, Michael Scott Cuthbert and cuthbertLab
 *
 * usage:
 *
 * in python:
 *
 * s = corpus.parse('bwv66.6')
 * stringRepresentingM21JsonPickle = s.freezeStream('jsonpickle')
 *
 * in js:
 *
 * pyConv = new music21.fromPython.Converter();
 * s = pyConv.run(stringRepresentingM21JsonPickle);
 *
 *
 */

var jp = __WEBPACK_IMPORTED_MODULE_0_jsonpickle__;
/**
 * fromPython module -- see {@link music21.fromPython}
 */

var unpickler = jp.unpickler;
/**
 * Converter for taking a Python-encoded jsonpickle music21p stream
 * and loading it into music21j
 *
 * Very very alpha.  See music21(p).vexflow modules to see how it works.
 *
 * Requires Cuthbert's jsonpickle.js port (included in music21j)
 *
 * @namespace music21.fromPython
 * @extends music21
 * @requires jsonpickle
 */

var fromPython = {};
/**
 *
 * @class Converter
 * @memberof music21.fromPython
 * @property {boolean} debug
 * @property {Array<string>} knownUnparsables - list of classes that cannot be parsed
 * @property {Object} handlers - object mapping string names of classes to a set of
 * function calls to perform when restoring or post-restoring.
 * (too complicated to explain; read the code)
 */

var Converter =
/*#__PURE__*/
function () {
  function Converter() {
    var _this = this;

    _classCallCheck(this, Converter);

    this.debug = true;
    this.knownUnparsables = ['music21.spanner.Line', 'music21.instrument.Instrument', 'music21.layout.StaffGroup', 'music21.layout.StaffLayout', 'music21.layout.SystemLayout', 'music21.layout.PageLayout', 'music21.expressions.TextExpression', 'music21.bar.Barline', // Soon...
    'music21.tempo.MetronomeMark', // should be possible
    'music21.metadata.Metadata'];
    this.handlers = {
      'music21.duration.Duration': {
        post_restore: function post_restore(d) {
          d.quarterLength = d._qtrLength;
          return d;
        }
      },
      'music21.meter.TimeSignature': {
        post_restore: function post_restore(ts) {
          ts._numerator = ts.displaySequence._numerator;
          ts._denominator = ts.displaySequence._denominator;
          return ts;
        }
      },
      'music21.stream.Part': {
        post_restore: function post_restore(p) {
          _this.currentPart = p;
          _this.lastClef = undefined;
          _this.lastKeySignature = undefined;
          _this.lastTimeSignature = undefined;

          _this.streamPostRestore(p);

          return p;
        }
      },
      // TODO: all inherit somehow, through _classes or better, prototype...
      'music21.stream.Score': {
        post_restore: this.streamPostRestore.bind(this)
      },
      'music21.stream.Stream': {
        post_restore: this.streamPostRestore.bind(this)
      },
      'music21.stream.Measure': {
        post_restore: this.streamPostRestore.bind(this)
      },
      'music21.stream.Voice': {
        post_restore: this.streamPostRestore.bind(this)
      }
    };
    this.currentPart = undefined;
    this.lastClef = undefined;
    this.lastKeySignature = undefined;
    this.lastTimeSignature = undefined;
  }
  /**
   * Fixes up some references that cannot be unpacked from jsonpickle.
   *
   * @param {music21.stream.Stream} s - stream after unpacking from jsonpickle
   * @returns {music21.stream.Stream}
   */


  _createClass(Converter, [{
    key: "streamPostRestore",
    value: function streamPostRestore(s) {
      var st = s._storedElementOffsetTuples;
      s._clef = this.lastClef;
      s._keySignature = this.lastKeySignature;
      s._timeSignature = this.lastTimeSignature;

      for (var i = 0; i < st.length; i++) {
        var el = st[i][0];
        el.offset = st[i][1];
        var classList = el.classes;

        if (classList === undefined) {
          console.warn('M21object without classes: ', el);
          console.warn('Javascript classes are: ', el._py_class);
          classList = [];
        }

        var streamPart = this.currentPart;

        if (streamPart === undefined) {
          streamPart = s; // possibly a Stream constructed from .measures()
        }

        var appendEl = true;
        var insertAtStart = false;

        for (var j = 0; j < classList.length; j++) {
          var thisClass = classList[j];

          for (var kn = 0; kn < this.knownUnparsables.length; kn++) {
            var unparsable = this.knownUnparsables[kn];

            if (unparsable.indexOf(thisClass) !== -1) {
              appendEl = false;
            }
          }

          if (thisClass === 'TimeSignature') {
            // console.log("Got timeSignature", streamPart, newM21pObj, storedElement);
            s._timeSignature = el;
            this.lastTimeSignature = el;

            if (streamPart !== undefined && streamPart.timeSignature === undefined) {
              streamPart.timeSignature = el;
            }

            appendEl = false;
          } else if (thisClass === 'Clef') {
            s._clef = el;
            this.lastClef = el;

            if (streamPart !== undefined && streamPart.clef === undefined) {
              streamPart.clef = el;
            }

            appendEl = false;
          } else if (thisClass === 'KeySignature') {
            s._keySignature = el;
            this.lastKeySignature = el;

            if (streamPart !== undefined && streamPart.keySignature === undefined) {
              streamPart.keySignature = el;
            }

            appendEl = false;
          } else if (thisClass === 'Part') {
            appendEl = false;
            insertAtStart = true;
          }
        }

        if (appendEl) {
          s.append(el); // all but clef, ts, ks
        } else if (insertAtStart) {
          s.insert(0, el); // Part
        }
      }

      return s;
    }
    /**
     * Run the main decoder
     *
     * @param {string} jss - stream encoded as JSON
     * @returns {music21.stream.Stream}
     */

  }, {
    key: "run",
    value: function run(jss) {
      var outStruct = unpickler.decode(jss, this.handlers);
      return outStruct.stream;
    }
  }]);

  return Converter;
}();
fromPython.Converter = Converter;

/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return keyboard; });
/* unused harmony export Key */
/* unused harmony export WhiteKey */
/* unused harmony export BlackKey */
/* unused harmony export Keyboard */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__miditools_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pitch_js__ = __webpack_require__(3);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/keyboard -- PianoKeyboard rendering and display objects
 *
 * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */
// Minimum usage:
// var kd = document.getElementById('keyboardDiv');
// k = new music21.keyboard.Keyboard();
// k.appendKeyboard(kd, 6, 57); // 88 key keyboard
// configurable:
// k.scaleFactor = 1.2;  // default 1
// k.whiteKeyWidth = 40; // default 23





/**
 * Keyboard module, see {@link music21.keyboard} namespace
 *
 * @exports music21/keyboard
 */

/**
 * keyboard namespace -- tools for creating an onscreen keyboard and interacting with it.
 *
 * @namespace music21.keyboard
 * @memberof music21
 * @requires music21/pitch
 * @requires music21/common
 * @requires music21/miditools
 * @requires jquery
 * @requires MIDI
 */

var keyboard = {};
/**
 * Represents a single Key
 *
 * @class Key
 * @memberof music21.keyboard
 * @property {Array<function>} callbacks - called when key is clicked/selected
 * @property {number} [scaleFactor=1]
 * @property {music21.keyboard.Keyboard|undefined} parent
 * @property {int} id - midinumber associated with the key.
 * @property {music21.pitch.Pitch|undefined} pitchObj
 * @property {SVGElement|undefined} svgObj - SVG representing the drawing of the key
 * @property {SVGElement|undefined} noteNameSvgObj - SVG representing the note name drawn on the key
 * @property {string} keyStyle='' - css style information for the key
 * @property {string} keyClass='' - css class information for the key ("keyboardkey" + this is the class)
 * @property {number} width - width of key
 * @property {number} height - height of key
 */

var Key =
/*#__PURE__*/
function () {
  function Key() {
    _classCallCheck(this, Key);

    this.classes = ['Key']; // name conflict with key.Key

    this.callbacks = [];
    this.scaleFactor = 1;
    this.parent = undefined;
    this.id = 0;
    this.width = 23;
    this.height = 120;
    this.pitchObj = undefined;
    this.svgObj = undefined;
    this.noteNameSvgObj = undefined;
    this.keyStyle = '';
    this.keyClass = '';
  }
  /**
   * Gets an SVG object for the key
   *
   * @param {number} startX - X position in pixels from left of keyboard to draw key at
   * @returns {SVGElement} a SVG rectangle for the key
   */


  _createClass(Key, [{
    key: "makeKey",
    value: function makeKey(startX) {
      var keyattrs = {
        style: this.keyStyle,
        x: startX,
        y: 0,
        "class": 'keyboardkey ' + this.keyClass,
        id: this.id,
        width: this.width * this.scaleFactor,
        height: this.height * this.scaleFactor,
        rx: 3,
        ry: 3
      };
      var keyDOM = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].makeSVGright('rect', keyattrs);

      for (var x in this.callbacks) {
        if ({}.hasOwnProperty.call(this.callbacks, x)) {
          keyDOM.addEventListener(x, this.callbacks[x], false);
        }
      }

      this.svgObj = keyDOM;
      return keyDOM;
    }
    /**
     * Adds a circle (red) on the key (to mark middle C etc.)
     *
     * @method music21.keyboard.Key#addCircle
     * @param {string} [strokeColor='red']
     * @returns {SVGElement}
     */

  }, {
    key: "addCircle",
    value: function addCircle(strokeColor) {
      if (this.svgObj === undefined || this.parent === undefined || this.parent.svgObj === undefined) {
        return undefined;
      }

      if (strokeColor === undefined) {
        strokeColor = 'red';
      }

      var x = parseInt(this.svgObj.getAttribute('x'));
      var cx = x + this.parent.scaleFactor * this.width / 2; // console.log('cx', cx);

      var keyattrs = {
        stroke: strokeColor,
        'stroke-width': 3,
        fill: 'none',
        cx: cx,
        cy: (this.height - 10) * this.parent.scaleFactor,
        "class": 'keyboardkeyannotation',
        r: this.width * this.parent.scaleFactor / 4
      };
      var circleDom = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].makeSVGright('circle', keyattrs);
      this.parent.svgObj.appendChild(circleDom); // console.log(circleDom);

      return circleDom;
    }
    /**
     * Adds the note name on the key
     *
     * @method music21.keyboard.Key#addNoteName
     * @param {Boolean} [labelOctaves=false] - use octave numbers too?
     * @returns {this}
     */

  }, {
    key: "addNoteName",
    value: function addNoteName(labelOctaves) {
      if (this.svgObj === undefined || this.parent === undefined || this.parent.svgObj === undefined) {
        return this;
      }

      if (this.id === 0 && this.pitchObj === undefined) {
        return this;
      } else if (this.pitchObj === undefined) {
        this.pitchObj = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch();
        this.pitchObj.ps = this.id;
      }

      if (this.pitchObj.accidental !== undefined && this.pitchObj.accidental.alter !== 0) {
        return this;
      }

      var x = parseInt(this.svgObj.getAttribute('x'));
      var idStr = this.pitchObj.name;
      var fontSize = 14;

      if (labelOctaves === true) {
        idStr = this.pitchObj.nameWithOctave;
        fontSize = 12;
        x -= 2;
      }

      fontSize = Math.floor(fontSize * parent.scaleFactor);
      var textfill = 'white';

      if (this.keyClass === 'whitekey') {
        textfill = 'black';
      }

      var textattrs = {
        fill: textfill,
        x: x + this.parent.scaleFactor * (this.width / 2 - 5),
        y: this.parent.scaleFactor * (this.height - 20),
        "class": 'keyboardkeyname',
        'font-size': fontSize
      };
      var textDom = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].makeSVGright('text', textattrs);
      var textNode = document.createTextNode(idStr);
      textDom.appendChild(textNode);
      this.noteNameSvgObj = textDom; // store for removing...

      this.parent.svgObj.appendChild(textDom);
      return this;
    }
    /**
     * Removes the note name from the key (if exists)
     *
     * @method music21.keyboard.Key#removeNoteName
     * @returns {undefined}
     */

  }, {
    key: "removeNoteName",
    value: function removeNoteName() {
      if (this.svgObj === undefined || this.parent === undefined || this.parent.svgObj === undefined) {
        return;
      }

      if (this.noteNameSvgObj === undefined) {
        return;
      }

      if (this.noteNameSvgObj.parentNode === this.parent.svgObj) {
        this.parent.svgObj.removeChild(this.noteNameSvgObj);
      }

      this.noteNameSvgObj = undefined;
    }
  }]);

  return Key;
}();
keyboard.Key = Key;
/**
 * Defaults for a WhiteKey (width, height, keyStyle, keyClass)
 *
 * @class WhiteKey
 * @memberof music21.keyboard
 * @extends music21.keyboard.Key
 */

var WhiteKey =
/*#__PURE__*/
function (_Key) {
  _inherits(WhiteKey, _Key);

  function WhiteKey() {
    var _this;

    _classCallCheck(this, WhiteKey);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(WhiteKey).call(this));
    _this.width = 23;
    _this.height = 120;
    _this.keyStyle = 'fill:#fffff6;stroke:black';
    _this.keyClass = 'whitekey';
    return _this;
  }

  return WhiteKey;
}(Key);
keyboard.WhiteKey = WhiteKey;
/**
 * Defaults for a BlackKey (width, height, keyStyle, keyClass)
 *
 * @class BlackKey
 * @memberof music21.keyboard
 * @extends music21.keyboard.Key
 */

var BlackKey =
/*#__PURE__*/
function (_Key2) {
  _inherits(BlackKey, _Key2);

  function BlackKey() {
    var _this2;

    _classCallCheck(this, BlackKey);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(BlackKey).call(this));
    _this2.width = 13;
    _this2.height = 80;
    _this2.keyStyle = 'fill:black;stroke:black';
    _this2.keyClass = 'blackkey';
    return _this2;
  }

  return BlackKey;
}(Key);
keyboard.BlackKey = BlackKey;
/**
 * A Class representing a whole Keyboard full of keys.
 *
 * @class Keyboard
 * @memberof music21.keyboard
 * @property {number} whiteKeyWidth - default 23
 * @property {number} scaleFactor - default 1
 * @property {Object} keyObjects - a mapping of id to {@link music21.keyboard.Key} objects
 * @property {SVGElement} svgObj - the SVG object of the keyboard
 * @property {Boolean} markC - default true
 * @property {Boolean} showNames - default false
 * @property {Boolean} showOctaves - default false
 * @property {string} startPitch - default "C3"
 * @property {string} endPitch - default "C5"
 * @property {Boolean} hideable - default false -- add a way to hide and show keyboard
 * @property {Boolean} scrollable - default false -- add scroll bars to change octave
 */

var Keyboard =
/*#__PURE__*/
function () {
  function Keyboard() {
    var _this3 = this;

    _classCallCheck(this, Keyboard);

    this.whiteKeyWidth = 23;
    this._defaultWhiteKeyWidth = 23;
    this._defaultBlackKeyWidth = 13;
    this.scaleFactor = 1;
    this.height = 120; // does nothing right now...

    this.keyObjects = {};
    this.svgObj = undefined;
    this.markC = true;
    this.showNames = false;
    this.showOctaves = false;
    this.startPitch = 'C3';
    this.endPitch = 'C5';
    this._startDNN = undefined;
    this._endDNN = undefined;
    this.hideable = false;
    this.scrollable = false;
    /**
     * An object of callbacks on events.
     *
     * default:
     *
     * - click: this.clickHandler
     *
     * @name callbacks
     * @type {Object}
     * @memberof music21.keyboard.Keyboard#
     */

    this.callbacks = {
      click: function click(keyClicked) {
        return _this3.clickHandler(keyClicked);
      }
    }; //   more accurate offsets from http://www.mathpages.com/home/kmath043.htm

    this.sharpOffsets = {
      0: 14.3333,
      1: 18.6666,
      3: 13.25,
      4: 16.25,
      5: 19.75
    };
  }
  /**
   * Redraws the SVG associated with this Keyboard
   *
   * @method music21.keyboard.Keyboard#redrawSVG
   * @returns {SVGElement} new svgDOM
   */


  _createClass(Keyboard, [{
    key: "redrawSVG",
    value: function redrawSVG() {
      if (this.svgObj === undefined) {
        return undefined;
      }

      var oldSVG = this.svgObj;
      var svgParent = oldSVG.parentNode;
      this.keyObjects = {};
      var svgDOM = this.createSVG();
      svgParent.replaceChild(svgDOM, oldSVG);
      return svgDOM;
    }
    /**
     * Appends a keyboard to the `where` parameter
     *
     * @method music21.keyboard.Keyboard#appendKeyboard
     * @param {jQuery|Node} [where]
     * @returns {music21.keyboard.Keyboard} this
     */

  }, {
    key: "appendKeyboard",
    value: function appendKeyboard(where) {
      if (where === undefined) {
        where = document.body;
      } else if (where.jquery !== undefined) {
        where = where[0];
      }

      var svgDOM = this.createSVG();

      if (this.scrollable) {
        svgDOM = this.wrapScrollable(svgDOM)[0];
      }

      if (this.hideable) {
        // make it so the keyboard can be shown or hidden...
        this.appendHideableKeyboard(where, svgDOM);
      } else {
        where.appendChild(svgDOM); // svg must use appendChild, not append.
      }

      return this;
    }
    /**
     * Handle a click on a given SVG object
     *
     * @method music21.keyboard.Keyboard#clickHandler
     * @param {Node} keyRect - the dom object with the keyboard.
     */

  }, {
    key: "clickHandler",
    value: function clickHandler(keyRect) {
      // to-do : integrate with jazzHighlight...
      var id = keyRect.id;
      var thisKeyObject = this.keyObjects[id];

      if (thisKeyObject === undefined) {
        return; // not on keyboard;
      }

      var storedStyle = thisKeyObject.keyStyle;
      var fillColor = '#c0c000';

      if (thisKeyObject.keyClass === 'whitekey') {
        fillColor = 'yellow';
      }

      keyRect.setAttribute('style', 'fill:' + fillColor + ';stroke:black');
      __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].loadSoundfont('acoustic_grand_piano', function (i) {
        __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](i.midiChannel, id, 100, 0);
        __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](i.midiChannel, id, 500);
      });
      setTimeout(function () {
        keyRect.setAttribute('style', storedStyle);
      }, 500);
    }
    /**
     * Draws the SVG associated with this Keyboard
     *
     * @method music21.keyboard.Keyboard#createSVG
     * @returns {SVGElement} new svgDOM
     */

  }, {
    key: "createSVG",
    value: function createSVG() {
      // DNN = pitch.diatonicNoteNum;
      // this._endDNN = final key note. I.e., the last note to be included, not the first note not included.
      // 6, 57 gives a standard 88-key keyboard;
      if (this._startDNN === undefined) {
        if (typeof this.startPitch === 'string') {
          var tempP = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(this.startPitch);
          this._startDNN = tempP.diatonicNoteNum;
        } else {
          this._startDNN = this.startPitch;
        }
      }

      if (this._endDNN === undefined) {
        if (typeof this.endPitch === 'string') {
          var _tempP = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch(this.endPitch);

          this._endDNN = _tempP.diatonicNoteNum;
        } else {
          this._endDNN = this.endPitch;
        }
      }

      var currentIndex = (this._startDNN - 1) % 7; // C = 0

      var keyboardDiatonicLength = 1 + this._endDNN - this._startDNN;
      var totalWidth = this.whiteKeyWidth * this.scaleFactor * keyboardDiatonicLength;
      var height = 120 * this.scaleFactor;
      var heightString = height.toString() + 'px';
      var svgDOM = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].makeSVGright('svg', {
        'xml:space': 'preserve',
        height: heightString,
        width: totalWidth.toString() + 'px',
        "class": 'keyboardSVG'
      });
      var movingPitch = new __WEBPACK_IMPORTED_MODULE_4__pitch_js__["a" /* pitch */].Pitch('C4');
      var blackKeys = [];
      var thisKeyboardObject = this;

      for (var wki = 0; wki < keyboardDiatonicLength; wki++) {
        movingPitch.diatonicNoteNum = this._startDNN + wki;
        var wk = new keyboard.WhiteKey();
        wk.id = movingPitch.midi;
        wk.parent = this;
        this.keyObjects[movingPitch.midi] = wk;
        wk.scaleFactor = this.scaleFactor;
        wk.width = this.whiteKeyWidth;

        wk.callbacks.click = function whitekeyCallbacksClick() {
          thisKeyboardObject.callbacks.click(this);
        };

        var wkSVG = wk.makeKey(this.whiteKeyWidth * this.scaleFactor * wki);
        svgDOM.appendChild(wkSVG);

        if ((currentIndex === 0 || currentIndex === 1 || currentIndex === 3 || currentIndex === 4 || currentIndex === 5) && wki !== keyboardDiatonicLength - 1) {
          // create but do not append blackkey to the right of whitekey
          var bk = new keyboard.BlackKey();
          bk.id = movingPitch.midi + 1;
          this.keyObjects[movingPitch.midi + 1] = bk;
          bk.parent = this;
          bk.scaleFactor = this.scaleFactor;
          bk.width = this._defaultBlackKeyWidth * this.whiteKeyWidth / this._defaultWhiteKeyWidth;

          bk.callbacks.click = function blackKeyClicksCallback() {
            thisKeyboardObject.callbacks.click(this);
          };

          var offsetFromWhiteKey = this.sharpOffsets[currentIndex];
          offsetFromWhiteKey *= this.whiteKeyWidth / this._defaultWhiteKeyWidth * this.scaleFactor;
          var bkSVG = bk.makeKey(this.whiteKeyWidth * this.scaleFactor * wki + offsetFromWhiteKey);
          blackKeys.push(bkSVG);
        }

        currentIndex += 1;
        currentIndex %= 7;
      } // append blackkeys later since they overlap white keys;


      for (var bki = 0; bki < blackKeys.length; bki++) {
        svgDOM.appendChild(blackKeys[bki]);
      }

      this.svgObj = svgDOM;

      if (this.markC) {
        this.markMiddleC();
      }

      if (this.showNames) {
        this.markNoteNames(this.showOctaves);
      }

      return svgDOM;
    }
    /**
     * Puts a circle on middle c.
     *
     * @method music21.keyboard.Keyboard#markMiddleC
     * @param {string} [strokeColor='red']
     */

  }, {
    key: "markMiddleC",
    value: function markMiddleC(strokeColor) {
      var midC = this.keyObjects[60];

      if (midC !== undefined) {
        midC.addCircle('red');
      }
    }
    /**
     * Puts note names on every white key.
     *
     * @method music21.keyboard.Keyboard#markNoteNames
     * @param {Boolean} [labelOctaves=false]
     */

  }, {
    key: "markNoteNames",
    value: function markNoteNames(labelOctaves) {
      this.removeNoteNames(); // in case...

      for (var midi in this.keyObjects) {
        if ({}.hasOwnProperty.call(this.keyObjects, midi)) {
          var keyObj = this.keyObjects[midi];
          keyObj.addNoteName(labelOctaves);
        }
      }
    }
    /**
     * Remove note names on the keys, if they exist
     *
     * @method music21.keyboard.Keyboard#removeNoteNames
     */

  }, {
    key: "removeNoteNames",
    value: function removeNoteNames() {
      for (var midi in this.keyObjects) {
        if ({}.hasOwnProperty.call(this.keyObjects, midi)) {
          var keyObj = this.keyObjects[midi];
          keyObj.removeNoteName();
        }
      }
    }
    /**
     * Wraps the SVG object inside a scrollable set of buttons
     *
     * Do not call this directly, just use createSVG after changing the
     * scrollable property on the keyboard to True.
     *
     * @method music21.keyboard.Keyboard#wrapScrollable
     * @param {SVGElement} svgDOM
     * @returns {jQuery}
     */

  }, {
    key: "wrapScrollable",
    value: function wrapScrollable(svgDOM) {
      var _this4 = this;

      var $wrapper = __WEBPACK_IMPORTED_MODULE_0_jquery__("<div class='keyboardScrollableWrapper'></div>").css({
        display: 'inline-block'
      });
      var $bDown = __WEBPACK_IMPORTED_MODULE_0_jquery__("<button class='keyboardOctaveDown'>&lt;&lt;</button>").css({
        'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px'
      }).bind('click', function () {
        __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].transposeOctave -= 1;
        _this4._startDNN -= 7;
        _this4._endDNN -= 7;

        _this4.redrawSVG();
      });
      var $bUp = __WEBPACK_IMPORTED_MODULE_0_jquery__("<button class='keyboardOctaveUp'>&gt;&gt;</button>").css({
        'font-size': Math.floor(this.scaleFactor * 15).toString() + 'px'
      }).bind('click', function () {
        __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].transposeOctave += 1;
        _this4._startDNN += 7;
        _this4._endDNN += 7;

        _this4.redrawSVG();
      });
      var $kWrapper = __WEBPACK_IMPORTED_MODULE_0_jquery__("<div style='display:inline-block; vertical-align: middle' class='keyboardScrollableInnerDiv'></div>");
      $kWrapper[0].appendChild(svgDOM);
      $wrapper.append($bDown);
      $wrapper.append($kWrapper);
      $wrapper.append($bUp);
      return $wrapper;
    }
    /**
     * Puts a hideable keyboard inside a Div with the proper controls.
     *
     * Do not call this directly, just use createSVG after changing the
     * hideable property on the keyboard to True.
     *
     * @method music21.keyboard.Keyboard#appendHideableKeyboard
     * @param {Node} where
     * @param {SVGElement} keyboardSVG
     */

  }, {
    key: "appendHideableKeyboard",
    value: function appendHideableKeyboard(where, keyboardSVG) {
      var $container = __WEBPACK_IMPORTED_MODULE_0_jquery__("<div class='keyboardHideableContainer'/>");
      var $bInside = __WEBPACK_IMPORTED_MODULE_0_jquery__("<div class='keyboardToggleInside'>↥</div>").css({
        display: 'inline-block',
        'padding-top': '40px',
        'font-size': '40px'
      });
      var $b = __WEBPACK_IMPORTED_MODULE_0_jquery__("<div class='keyboardToggleOutside'/>").css({
        display: 'inline-block',
        'vertical-align': 'top',
        background: 'white'
      });
      $b.append($bInside);
      $b.data('defaultDisplay', $container.find('.keyboardSVG').css('display'));
      $b.data('state', 'down');
      $b.click(keyboard.triggerToggleShow);
      var $explain = __WEBPACK_IMPORTED_MODULE_0_jquery__("<div class='keyboardExplain'>Show keyboard</div>").css({
        display: 'none',
        'background-color': 'white',
        padding: '10px 10px 10px 10px',
        'font-size': '12pt'
      });
      $b.append($explain);
      $container.append($b);
      $container[0].appendChild(keyboardSVG); // svg must use appendChild, not $.append.

      __WEBPACK_IMPORTED_MODULE_0_jquery__(where).append($container);
      return $container;
    }
  }]);

  return Keyboard;
}();
/**
 * triggerToggleShow -- event for keyboard is shown or hidden.
 *
 * @function music21.keyboard.triggerToggleShow
 * @param {Event} e
 */

keyboard.triggerToggleShow = function triggerToggleShow(e) {
  // "this" refers to the object clicked
  // e -- event is not used.
  var $t = __WEBPACK_IMPORTED_MODULE_0_jquery__(this);
  var state = $t.data('state');
  var $parent = $t.parent();
  var $k = $parent.find('.keyboardScrollableWrapper');

  if ($k.length === 0) {
    // not scrollable
    $k = $parent.find('.keyboardSVG');
  }

  var $bInside = $t.find('.keyboardToggleInside');
  var $explain = $parent.find('.keyboardExplain');

  if (state === 'up') {
    $bInside.text('↥');
    $bInside.css('padding-top', '40px');
    $explain.css('display', 'none');
    var dd = $t.data('defaultDisplay');

    if (dd === undefined) {
      dd = 'inline';
    }

    $k.css('display', dd);
    $t.data('state', 'down');
  } else {
    $k.css('display', 'none');
    $explain.css('display', 'inline-block');
    $bInside.text('↧');
    $bInside.css('padding-top', '10px');
    $t.data('state', 'up');
  }
};
/**
 * highlight the keyboard stored in "this" appropriately
 *
 * @function music21.keyboard.jazzHighlight
 * @param {Event} e
 * @example
 * var midiCallbacksPlay = [music21.miditools.makeChords,
 *                          music21.miditools.sendToMIDIjs,
 *                          music21.keyboard.jazzHighlight.bind(k)];
 */


keyboard.jazzHighlight = function jazzHighlight(e) {
  // e is a miditools.event object -- call with this = keyboard.Keyboard object via bind...
  if (e === undefined) {
    return;
  }

  if (e.noteOn) {
    var midiNote = e.midiNote;

    if (this.keyObjects[midiNote] !== undefined) {
      var keyObj = this.keyObjects[midiNote];
      var svgObj = keyObj.svgObj;
      var intensityRGB = '';
      var normalizedVelocity = (e.velocity + 25) / 127;

      if (normalizedVelocity > 1) {
        normalizedVelocity = 1.0;
      }

      if (keyObj.keyClass === 'whitekey') {
        var intensity = normalizedVelocity.toString();
        intensityRGB = 'rgba(255, 255, 0, ' + intensity + ')';
      } else {
        var _intensity = Math.floor(normalizedVelocity * 255).toString();

        intensityRGB = 'rgb(' + _intensity + ',' + _intensity + ',0)'; // console.log(intensityRGB);
      }

      svgObj.setAttribute('style', 'fill:' + intensityRGB + ';stroke:black');
    }
  } else if (e.noteOff) {
    var _midiNote = e.midiNote;

    if (this.keyObjects[_midiNote] !== undefined) {
      var _keyObj = this.keyObjects[_midiNote];
      var _svgObj = _keyObj.svgObj;

      _svgObj.setAttribute('style', _keyObj.keyStyle);
    }
  }
}; // call this with a bind(keyboard.Keyboard object)...


keyboard.Keyboard = Keyboard;

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return layout; });
/* unused harmony export LayoutScore */
/* unused harmony export Page */
/* unused harmony export System */
/* unused harmony export Staff */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stream_js__ = __webpack_require__(15);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

// future -- rewrite of Score and Part to Page, System, SystemPart
// not currently used
// import * as $ from 'jquery';
//
// import { base } from './base.js';
// import { renderOptions } from './renderOptions.js';
 // import { common } from './common.js';

/**
 * 
 * THIS IS CURRENTLY UNUSUED
 * Does not work yet, so not documented
 *
 */

var layout = {};

layout.makeLayoutFromScore = function makeLayoutFromScore(score, containerWidth) {
  /*
   * Divide a part up into systems and fix the measure
   * widths so that they are all even.
   *
   * Note that this is done on the part level even though
   * the measure widths need to be consistent across parts.
   *
   * This is possible because the system is deterministic and
   * will come to the same result for each part.  Opportunity
   * for making more efficient through this...
   */
  // var systemHeight = score.systemHeight; /* part.show() called... */
  // var systemPadding = score.systemPadding;
  var parts = score.parts; // console.log(parts);

  var numParts = parts.length;
  var partZero = parts.get(0);
  var numMeasures = partZero.getElementsByClass('Measure').length;
  var measureWidths = partZero.getMeasureWidths();
  var maxSystemWidth = containerWidth || score.maxSystemWidth;
  /* of course fix! */

  var layoutScore = new layout.LayoutScore();
  var currentPage = new layout.Page(); // to-do multiple pages...

  currentPage.measureStart = 1;
  currentPage.measureEnd = numMeasures;
  layoutScore.insert(0, currentPage);
  var currentSystem = new layout.System();
  var currentSystemNumber = 1;
  currentSystem.measureStart = 1;
  var currentStaves = [];

  var staffMaker = function staffMaker(staffHolder, numParts, measureStart) {
    for (var pNum = 0; pNum < numParts; pNum++) {
      var staff = new layout.Staff();
      staff.measureStart = measureStart;
      staff.staffNumber = pNum + 1;
      staffHolder.push(staff);
    }
  };

  staffMaker(currentStaves, numParts, 1);
  var systemCurrentWidths = [];
  var systemBreakIndexes = [];
  var lastSystemBreak = 0;
  /* needed to ensure each line has at least one measure */

  var startLeft = 20;
  /* TODO: make it obtained elsewhere */

  var currentLeft = startLeft; // let currentSystemTop = 0;
  // var partTopOffsets = [];
  // const ignoreSystemsInCalculatingScoreHeight = true;
  // const systemHeight = score.estimateStreamHeight(ignoreSystemsInCalculatingScoreHeight);

  for (var i = 0; i < measureWidths.length; i++) {
    var currentRight = currentLeft + measureWidths[i];
    /* console.log("left: " + currentLeft + " ; right: " + currentRight + " ; m: " + i); */

    if (currentRight > maxSystemWidth && lastSystemBreak !== i) {
      // new system...
      for (var j = 0; j < currentStaves.length; j++) {
        currentStaves.measureEnd = i;
        currentSystem.insert(0, currentStaves[j]);
      }

      currentStaves = [];
      staffMaker(currentStaves, numParts, i + 1); // currentSystemTop += systemHeight;

      currentSystem.measureEnd = i;
      currentPage.insert(0, currentSystem);
      currentSystemNumber += 1;
      currentSystem = new layout.System();
      currentSystem.measureStart = i + 1;
      currentSystem.systemNumber = currentSystemNumber;
      systemBreakIndexes.push(i - 1);
      systemCurrentWidths.push(currentLeft);
      console.log('setting new width at ' + currentLeft + ' measure ' + i);
      currentLeft = startLeft + measureWidths[i];
      lastSystemBreak = i;
    } else {
      currentLeft = currentRight;
    }

    for (var pNum = 0; pNum < currentStaves.length; pNum++) {
      currentStaves[pNum].append(parts[pNum].get(i));
    }
  }

  for (var _j = 0; _j < currentStaves.length; _j++) {
    currentStaves.measureEnd = measureWidths.length - 1;
    currentSystem.insert(0, currentStaves[_j]);
  }

  currentPage.insert(0, currentSystem);
  return layoutScore;
};

var LayoutScore =
/*#__PURE__*/
function (_stream$Score) {
  _inherits(LayoutScore, _stream$Score);

  function LayoutScore() {
    var _this;

    _classCallCheck(this, LayoutScore);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(LayoutScore).call(this));
    _this.scoreLayout = undefined;
    _this.measureStart = undefined;
    _this.measureEnd = undefined;
    _this._width = undefined;
    _this.height = undefined;
    _this.top = 0;
    _this.left = 0;
    return _this;
  }

  _createClass(LayoutScore, [{
    key: "pages",
    get: function get() {
      return this.getElementsByClass('Page');
    }
  }, {
    key: "width",
    get: function get() {
      if (this._width) {
        return this._width;
      } else if (this.activeSite) {
        return this.activeSite.width;
      } else {
        return undefined;
      }
    } // /**
    //  * return a tuple of (top, bottom) for a staff, specified by a given pageId,
    //  * systemId, and staffId in PIXELS.
    //
    //  * @param pageId
    //  * @param systemId
    //  * @param staffId
    //  * @param units -- "pixels" or "tenths" (not supported)
    //  */
    //
    // getPositionForStaff(pageId, systemId, staffId, units) {
    //     units = units || 'pixels';
    // }

  }]);

  return LayoutScore;
}(__WEBPACK_IMPORTED_MODULE_0__stream_js__["a" /* stream */].Score);
layout.LayoutScore = LayoutScore;
/**
 * All music must currently be on page 1.
 */

var Page =
/*#__PURE__*/
function (_stream$Score2) {
  _inherits(Page, _stream$Score2);

  function Page() {
    var _this2;

    _classCallCheck(this, Page);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this));
    _this2.pageNumber = 1;
    _this2.measureStart = undefined;
    _this2.measureEnd = undefined;
    _this2.systemStart = undefined;
    _this2.systemEnd = undefined;
    _this2.pageLayout = undefined;
    return _this2;
  }

  _createClass(Page, [{
    key: "systems",
    get: function get() {
      return this.getElementsByClass('System');
    }
  }, {
    key: "width",
    get: function get() {
      if (this._width) {
        return this._width;
      } else if (this.activeSite) {
        return this.activeSite.width;
      } else {
        return undefined;
      }
    }
  }]);

  return Page;
}(__WEBPACK_IMPORTED_MODULE_0__stream_js__["a" /* stream */].Score);
layout.Page = Page;
var System =
/*#__PURE__*/
function (_stream$Score3) {
  _inherits(System, _stream$Score3);

  function System() {
    var _this3;

    _classCallCheck(this, System);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(System).call(this));
    _this3.systemNumber = 1;
    _this3.systemLayout = undefined;
    _this3.measureStart = undefined;
    _this3.measureEnd = undefined;
    _this3._width = undefined;
    _this3.height = undefined;
    _this3.top = undefined;
    _this3.left = undefined;
    return _this3;
  }

  _createClass(System, [{
    key: "staves",
    get: function get() {
      return this.getElementsByClass('Staff');
    }
  }, {
    key: "width",
    get: function get() {
      if (this._width) {
        return this._width;
      } else if (this.activeSite) {
        return this.activeSite.width;
      } else {
        return undefined;
      }
    }
  }]);

  return System;
}(__WEBPACK_IMPORTED_MODULE_0__stream_js__["a" /* stream */].Score);
layout.System = System;
var Staff =
/*#__PURE__*/
function (_stream$Part) {
  _inherits(Staff, _stream$Part);

  function Staff() {
    var _this4;

    _classCallCheck(this, Staff);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Staff).call(this));
    _this4.staffNumber = 1;
    _this4.optimized = 0;
    _this4.top = undefined;
    _this4.left = undefined;
    _this4._width = undefined;
    _this4.height = undefined;
    _this4.inheritedHeight = undefined;
    _this4.staffLayout = undefined;
    return _this4;
  }

  _createClass(Staff, [{
    key: "width",
    get: function get() {
      if (this._width) {
        return this._width;
      } else if (this.activeSite) {
        return this.activeSite.width;
      } else {
        return undefined;
      }
    }
  }]);

  return Staff;
}(__WEBPACK_IMPORTED_MODULE_0__stream_js__["a" /* stream */].Part);
layout.Staff = Staff;

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return musicxml; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__musicxml_m21ToXml_js__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__musicxml_xmlToM21_js__ = __webpack_require__(31);
/* unused harmony reexport m21ToXml */
/* unused harmony reexport xmlToM21 */



var musicxml = {
  m21ToXml: __WEBPACK_IMPORTED_MODULE_0__musicxml_m21ToXml_js__,
  xmlToM21: __WEBPACK_IMPORTED_MODULE_1__musicxml_xmlToM21_js__
};
/* unused harmony default export */ var _unused_webpack_default_export = (musicxml);

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return roman; });
/* unused harmony export RomanNumeral */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__chord_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__figuredBass_js__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__harmony_js__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__interval_js__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__key_js__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__scale_js__ = __webpack_require__(20);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/roman -- roman.RomanNumberal -- Chord subclass
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */


 // import { debug } from './debug.js';







/**
 * Roman numeral module. See {@link music21.roman} namespace
 *
 * @exports music21/roman
 */

/**
 * music21.roman -- namespace for dealing with RomanNumeral analysis.
 *
 * @namespace music21.roman
 * @memberof music21
 * @requires music21/chord
 * @requires music21/common
 * @requires music21/figuredBass
 * @requires music21/harmony
 * @requires music21/key
 * @requires music21/pitch
 * @requires music21/interval
 */

var roman = {};
roman.figureShorthands = {
  '53': '',
  '3': '',
  '63': '6',
  '753': '7',
  '75': '7',
  // controversial perhaps
  '73': '7',
  // controversial perhaps
  '9753': '9',
  '975': '9',
  // controversial perhaps
  '953': '9',
  // controversial perhaps
  '97': '9',
  // controversial perhaps
  '95': '9',
  // controversial perhaps
  '93': '9',
  // controversial perhaps
  '653': '65',
  '6b53': '6b5',
  '643': '43',
  '642': '42',
  bb7b5b3: 'o7',
  bb7b53: 'o7',
  // '6b5bb3': 'o65',
  b7b5b3: '/o7'
}; // noinspection SpellCheckingInspection

roman.functionalityScores = {
  I: 100,
  i: 90,
  V7: 80,
  V: 70,
  V65: 68,
  I6: 65,
  V6: 63,
  V43: 61,
  I64: 60,
  IV: 59,
  i6: 58,
  viio7: 57,
  V42: 55,
  viio65: 53,
  viio6: 52,
  '#viio65': 51,
  ii: 50,
  '#viio6': 49,
  ii65: 48,
  ii43: 47,
  ii42: 46,
  IV6: 45,
  ii6: 43,
  VI: 42,
  '#VI': 41,
  vi: 40,
  viio: 39,
  '#viio': 39,
  iio: 37,
  // common in Minor
  iio42: 36,
  bII6: 35,
  // Neapolitan
  iio43: 32,
  iio65: 31,
  '#vio': 28,
  '#vio6': 28,
  III: 22,
  v: 20,
  VII: 19,
  VII7: 18,
  IV65: 17,
  IV7: 16,
  iii: 15,
  iii6: 12,
  vi6: 10
};
/**
 * expandShortHand - expand a string of numbers into an array
 *
 * N.B. this is NOT where abbreviations get expanded
 *
 * @memberof music21.roman
 * @param  {string} shorthand string of a figure w/o roman to parse
 * @return {Array<string>}           array of shorthands
 */

roman.expandShortHand = function expandShortHand(shorthand) {
  shorthand = shorthand.replace('/', '');

  if (shorthand.match(/[b-]$/)) {
    shorthand += '3';
  }

  shorthand = shorthand.replace('11', 'x');
  shorthand = shorthand.replace('13', 'y');
  shorthand = shorthand.replace('15', 'z');
  var rx = new RegExp('#*-*b*o*[1-9xyz]', 'g');
  var shorthandGroups = [];
  var match = rx.exec(shorthand);

  while (match !== null) {
    shorthandGroups.push(match[0]);
    match = rx.exec(shorthand);
  }

  if (shorthandGroups.length === 1 && shorthandGroups[0].endsWith('3')) {
    shorthandGroups = ['5', shorthandGroups[0]];
  }

  var shGroupOut = [];

  for (var _i = 0, _shorthandGroups = shorthandGroups; _i < _shorthandGroups.length; _i++) {
    var sh = _shorthandGroups[_i];
    sh = sh.replace('x', '11');
    sh = sh.replace('y', '13');
    sh = sh.replace('z', '15');
    shGroupOut.push(sh);
  }

  return shGroupOut;
};
/**
 * correctSuffixForChordQuality - Correct a given inversionString suffix given a
 *     chord of various qualities.
 *
 * @memberof music21.roman
 * @param  {music21.chord.Chord} chordObj
 * @param  {string} inversionString a string like '6' to fix.
 * @return {string}           corrected inversionString
  */


roman.correctSuffixForChordQuality = function correctSuffixForChordQuality(chordObj, inversionString) {
  var fifthType = chordObj.semitonesFromChordStep(5);
  var qualityName = '';

  if (fifthType === 6) {
    qualityName = 'o';
  } else if (fifthType === 8) {
    qualityName = '+';
  }

  if (inversionString !== undefined && (inversionString.startsWith('o') || inversionString.startsWith('/o'))) {
    if (qualityName === 'o') {
      // don't call viio7, viioo7.
      qualityName = '';
    }
  }

  var seventhType = chordObj.semitonesFromChordStep(7);

  if (seventhType !== undefined && fifthType === 6) {
    // there is a seventh and this is a diminished 5
    if (seventhType === 10 && qualityName === 'o') {
      qualityName = '/o';
    } else if (seventhType !== 9) {// do something for very odd chords built on diminished triad.
    }
  }

  return qualityName + inversionString;
};
/**
 * maps an index number to a roman numeral in lowercase
 *
 * @memberof music21.roman
 * @example
 * music21.roman.romanToNumber[4]
 * // 'iv'
 */


roman.romanToNumber = [undefined, 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii'];
/**
 * Represents a RomanNumeral.  By default, capital Roman Numerals are
 * major chords; lowercase are minor.
 *
 * @class RomanNumeral
 * @memberof music21.roman
 * @extends music21.chord.Chord
 * @param {string} figure - the roman numeral as a string, e.g., 'IV', 'viio', 'V7'
 * @param {string|music21.key.Key} [keyStr='C']
 * @property {Array<music21.pitch.Pitch>} scale - (readonly) returns the scale associated with the roman numeral
 * @property {music21.key.Key} key - the key associated with the RomanNumeral (not allowed to be undefined yet)
 * @property {string} figure - the figure as passed in
 * @property {string} degreeName - the name associated with the scale degree, such as "mediant" etc., scale 7 will be "leading tone" or "subtonic" appropriately
 * @property {int} scaleDegree
 * @property {string|undefined} impliedQuality - "major", "minor", "diminished", "augmented"
 * @property {music21.roman.RomanNumeral|undefined} secondaryRomanNumeral
 * @property {music21.key.Key|undefined} secondaryRomanNumeralKey
 * @property {string|undefined} frontAlterationString
 * @property {music21.interval.Interval|undefined} frontAlterationTransposeInterval
 * @property {music21.pitch.Accidental|undefined} frontAlterationAccidental
 * @property {string|undefined} romanNumeralAlone
 * @property {scale.Scale|boolean|undefined} impliedScale
 * @property {music21.interval.Interval|undefined} scaleOffset
 * @property {Array<music21.pitch.Pitch>} pitches - RomanNumerals are Chord objects, so .pitches will work for them also.
 */

var RomanNumeral =
/*#__PURE__*/
function (_harmony$Harmony) {
  _inherits(RomanNumeral, _harmony$Harmony);

  function RomanNumeral() {
    var _this;

    var figure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var keyStr = arguments.length > 1 ? arguments[1] : undefined;
    var keywords = arguments.length > 2 ? arguments[2] : undefined;

    _classCallCheck(this, RomanNumeral);

    var params = {
      updatePitches: false,
      parseFigure: false
    };
    __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].merge(params, keywords);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(RomanNumeral).call(this, figure, params));
    _this._parsingComplete = false; // not yet used...

    _this.primaryFigure = undefined;
    _this.secondaryRomanNumeral = undefined;
    _this.secondaryRomanNumeralKey = undefined;
    _this.pivotChord = undefined;
    _this.scaleCardinality = 7;
    _this._figure = undefined;
    _this.caseMatters = true;

    if (typeof figure === 'number') {
      _this.caseMatters = false;
    }

    _this.scaleDegree = undefined;
    _this.frontAlterationString = undefined;
    _this.frontAlterationTransposeInterval = undefined;
    _this.frontAlterationAccidental = undefined;
    _this.romanNumeralAlone = undefined;
    _this.impliedQuality = undefined;
    _this.impliedScale = undefined;
    _this.scaleOffset = undefined;
    _this.useImpliedScale = false;
    _this.bracketedAlterations = [];
    _this.omittedSteps = [];
    _this.followsKeyChange = false;
    _this._functionalityScore = undefined;
    /**
     *
     * @type {music21.key.Key|music21.scale.Scale|undefined}
     * @private
     */

    _this._scale = undefined; // the Key or Scale

    _this.figure = figure;
    _this.key = keyStr; // to remove...

    _this.numbers = '';

    if (figure !== '') {
      _this._parseFigure();

      _this._parsingComplete = true;

      _this._updatePitches();
    }

    return _this;
  }

  _createClass(RomanNumeral, [{
    key: "stringInfo",
    value: function stringInfo() {
      return this.figure + ' in ' + this.key.stringInfo();
    }
  }, {
    key: "_parseFigure",
    value: function _parseFigure() {
      var workingFigure;
      var useScale = this.impliedScale;

      if (!this.useImpliedScale) {
        useScale = this.key;
      }

      var _this$_correctForSeco = this._correctForSecondaryRomanNumeral(useScale);

      var _this$_correctForSeco2 = _slicedToArray(_this$_correctForSeco, 2);

      workingFigure = _this$_correctForSeco2[0];
      useScale = _this$_correctForSeco2[1];

      if (workingFigure === 'Cad64') {
        if (useScale.mode === 'minor') {
          workingFigure = 'i64';
        } else {
          workingFigure = 'I64';
        }
      }

      this.primaryFigure = workingFigure;
      workingFigure = this._parseOmittedSteps(workingFigure);
      workingFigure = this._parseBracketedAlterations(workingFigure);
      workingFigure = workingFigure.replace(/^N6/, 'bII6');
      workingFigure = workingFigure.replace(/^N/, 'bII6');
      workingFigure = this._parseFrontAlterations(workingFigure);

      var _this$_parseRNAloneAm = this._parseRNAloneAmidstAug6(workingFigure, useScale);

      var _this$_parseRNAloneAm2 = _slicedToArray(_this$_parseRNAloneAm, 2);

      workingFigure = _this$_parseRNAloneAm2[0];
      useScale = _this$_parseRNAloneAm2[1];
      workingFigure = this._setImpliedQualityFromString(workingFigure);
      this._tempRoot = useScale.pitchFromDegree(this.scaleDegree);

      this._fixMinorVIandVII(useScale);

      var expandedFigure = roman.expandShortHand(workingFigure);
      this.figuresNotationObj = new __WEBPACK_IMPORTED_MODULE_3__figuredBass_js__["a" /* figuredBass */].Notation(expandedFigure.toString());
      var numbersArr = workingFigure.match(/\d+/);

      if (numbersArr != null) {
        // noinspection JSUnusedAssignment
        workingFigure = workingFigure.replace(/\d+/, '');
        this.numbers = parseInt(numbersArr[0]);
      }
    }
  }, {
    key: "_parseFrontAlterations",
    value: function _parseFrontAlterations(workingFigure) {
      var frontAlterationString = '';
      var frontAlterationTransposeInterval;
      var frontAlterationAccidental;

      var _alterationRegex = new RegExp('^(b+|-+|#+)');

      var match = _alterationRegex.exec(workingFigure);

      if (match != null) {
        var group = match[1];
        var alteration = group.length;

        if (group[0] === 'b' || group[0] === '-') {
          alteration *= -1;
        }

        frontAlterationTransposeInterval = __WEBPACK_IMPORTED_MODULE_5__interval_js__["a" /* interval */].intervalFromGenericAndChromatic(1, alteration);
        frontAlterationAccidental = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Accidental(alteration);
        frontAlterationString = group;
        workingFigure = workingFigure.replace(_alterationRegex, '');
      }

      this.frontAlterationString = frontAlterationString;
      this.frontAlterationTransposeInterval = frontAlterationTransposeInterval;
      this.frontAlterationAccidental = frontAlterationAccidental;
      return workingFigure;
    }
  }, {
    key: "_correctBracketedPitches",
    value: function _correctBracketedPitches() {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.bracketedAlterations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var innerAlteration = _step.value;

          var _innerAlteration = _slicedToArray(innerAlteration, 2),
              alterNotation = _innerAlteration[0],
              chordStep = _innerAlteration[1];

          var alterPitch = this.getChordStep(chordStep);

          if (alterPitch === undefined) {
            continue;
          }

          var newAccidental = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Accidental(alterNotation);

          if (alterPitch.accidental === undefined) {
            alterPitch.accidental = newAccidental;
          } else {
            alterPitch.accidental.set(alterPitch.accidental.alter + newAccidental.alter);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: "_setImpliedQualityFromString",
    value: function _setImpliedQualityFromString(workingFigure) {
      var impliedQuality = '';

      if (workingFigure.startsWith('o')) {
        impliedQuality = 'diminished';
        workingFigure = workingFigure.replace(/^o/, '');
      } else if (workingFigure.startsWith('/o')) {
        impliedQuality = 'half-diminished';
        workingFigure = workingFigure.replace(/^\/o/, '');
      } else if (workingFigure.startsWith('+')) {
        impliedQuality = 'augmented';
        workingFigure = workingFigure.replace(/^\+/, '');
      } else if (workingFigure.endsWith('d7')) {
        impliedQuality = 'dominant-seventh';
        workingFigure = workingFigure.replace(/d7$/, '7');
      } else if (this.caseMatters && this.romanNumeralAlone.toUpperCase() === this.romanNumeralAlone) {
        impliedQuality = 'major';
      } else if (this.caseMatters && this.romanNumeralAlone.toLowerCase() === this.romanNumeralAlone) {
        impliedQuality = 'minor';
      }

      this.impliedQuality = impliedQuality;
      return workingFigure;
    }
  }, {
    key: "_fixMinorVIandVII",
    value: function _fixMinorVIandVII(useScale) {
      if (useScale.mode !== 'minor') {
        return;
      }

      if (!this.caseMatters) {
        return;
      }

      if (this.scaleDegree !== 6 && this.scaleDegree !== 7) {
        return;
      }

      if (!['minor', 'diminished', 'half-diminished'].includes(this.impliedQuality)) {
        return;
      }

      var fati = this.frontAlterationTransposeInterval;

      if (fati !== undefined) {
        var newFati = __WEBPACK_IMPORTED_MODULE_5__interval_js__["a" /* interval */].add([fati, new __WEBPACK_IMPORTED_MODULE_5__interval_js__["a" /* interval */].Interval('A1')]);
        this.frontAlterationTransposeInterval = newFati;
        this.frontAlterationAccidental.alter = this.frontAlterationAccidental.alter + 1;
      } else {
        this.frontAlterationTransposeInterval = new __WEBPACK_IMPORTED_MODULE_5__interval_js__["a" /* interval */].Interval('A1');
        this.frontAlterationAccidental = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Accidental(1);
      }

      this._tempRoot = this.frontAlterationTransposeInterval.transposePitch(this._tempRoot);
    }
  }, {
    key: "_parseRNAloneAmidstAug6",
    value: function _parseRNAloneAmidstAug6(workingFigure, useScale) {
      var romanNumeralAlone = '';

      var _romanNumeralAloneRegex = new RegExp('(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2}|N)');

      var _augmentedSixthRegex = new RegExp('(It|Ger|Fr|Sw)');

      var rm = _romanNumeralAloneRegex.exec(workingFigure);

      var a6match = _augmentedSixthRegex.exec(workingFigure);

      if (rm === null && a6match === null) {
        throw new __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["Music21Exception"]("No roman numeral found in ".concat(workingFigure));
      }

      if (a6match !== null) {
        if (useScale.mode === 'major') {
          useScale = new __WEBPACK_IMPORTED_MODULE_6__key_js__["a" /* key */].Key(useScale.tonic.name, 'minor');
          this.impliedScale = useScale;
          this.useImpliedScale = true;
        }

        romanNumeralAlone = a6match[1];

        if (['It', 'Ger'].includes(romanNumeralAlone)) {
          this.scaleDegree = 4;
        } else {
          this.scaleDegree = 2;
        }

        workingFigure = workingFigure.replace(_augmentedSixthRegex, '');
        this.romanNumeralAlone = romanNumeralAlone;

        if (romanNumeralAlone !== 'Fr') {
          this.bracketedAlterations.push(['#', 1]);
        }

        if (romanNumeralAlone === 'Fr' || romanNumeralAlone === 'Sw') {
          this.bracketedAlterations.push(['#', 3]);
        }
      } else {
        romanNumeralAlone = rm[1];
        this.scaleDegree = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].fromRoman(romanNumeralAlone);
        workingFigure = workingFigure.replace(_romanNumeralAloneRegex, '');
        this.romanNumeralAlone = romanNumeralAlone;
      }

      return [workingFigure, useScale];
    }
    /**
     * get romanNumeral - return either romanNumeralAlone (II) or with frontAlterationAccidental (#II)
     *
     * @return {string}  new romanNumeral;
     */

  }, {
    key: "_updatePitches",

    /**
     * Update the .pitches array.  Called at instantiation, but not automatically afterwards.
     *
     */
    value: function _updatePitches() {
      var useScale;

      if (this.secondaryRomanNumeralKey !== undefined) {
        useScale = this.secondaryRomanNumeralKey;
      } else if (!this.useImpliedScale) {
        useScale = this.key;
      } else {
        useScale = this.impliedScale;
      }

      this.scaleCardinality = 7; // simple speedup;

      var bassScaleDegree = this.bassScaleDegreeFromNotation(this.figuresNotationObj);
      var bassPitch = useScale.pitchFromDegree(bassScaleDegree, 'ascending');
      var pitches = [bassPitch];
      var lastPitch = bassPitch;
      var numberNotes = this.figuresNotationObj.numbers.length;

      for (var j = 0; j < numberNotes; j++) {
        var i = numberNotes - j - 1;
        var thisScaleDegree = bassScaleDegree + this.figuresNotationObj.numbers[i] - 1;
        var newPitch = useScale.pitchFromDegree(thisScaleDegree, 'ascending');
        var pitchName = this.figuresNotationObj.modifiers[i].modifyPitchName(newPitch.name);
        var newNewPitch = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Pitch(pitchName);
        newNewPitch.octave = newPitch.octave;

        if (newNewPitch.ps < lastPitch.ps) {
          newNewPitch.octave += 1;
        }

        pitches.push(newNewPitch);
        lastPitch = newNewPitch;
      }

      if (this.frontAlterationTransposeInterval !== undefined) {
        var newPitches = [];

        for (var _i2 = 0, _pitches = pitches; _i2 < _pitches.length; _i2++) {
          var thisPitch = _pitches[_i2];

          var _newPitch = this.frontAlterationTransposeInterval.transposePitch(thisPitch);

          newPitches.push(_newPitch);
        }

        this.pitches = newPitches;
      } else {
        this.pitches = pitches;
      }

      this._matchAccidentalsToQuality(this.impliedQuality);

      this.scaleOffset = this.frontAlterationTransposeInterval;

      if (this.omittedSteps.length) {
        var omittedPitches = [];
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = this.omittedSteps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var thisCS = _step2.value;
            var p = this.getChordStep(thisCS);

            if (p !== undefined) {
              omittedPitches.push(p.name);
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
              _iterator2["return"]();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        var _newPitches = [];

        for (var _i3 = 0, _pitches2 = pitches; _i3 < _pitches2.length; _i3++) {
          var _thisPitch = _pitches2[_i3];

          if (!omittedPitches.includes(_thisPitch.name)) {
            _newPitches.push(_thisPitch);
          }
        }

        this.pitches = _newPitches; // do something...
      }

      this._correctBracketedPitches();
    }
  }, {
    key: "bassScaleDegreeFromNotation",
    value: function bassScaleDegreeFromNotation(notationObject) {
      var c = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Pitch('C3');
      var cDNN = c.diatonicNoteNum; // always 22

      var pitches = [c];
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = notationObject.numbers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var i = _step3.value;
          var distanceToMove = i - 1;
          var newDiatonicNumber = cDNN + distanceToMove;

          var _interval$convertDiat = __WEBPACK_IMPORTED_MODULE_5__interval_js__["a" /* interval */].convertDiatonicNumberToStep(newDiatonicNumber),
              _interval$convertDiat2 = _slicedToArray(_interval$convertDiat, 2),
              newStep = _interval$convertDiat2[0],
              newOctave = _interval$convertDiat2[1];

          var newPitch = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Pitch('C3');
          newPitch.step = newStep;
          newPitch.octave = newOctave;
          pitches.push(newPitch);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
            _iterator3["return"]();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      var tempChord = new __WEBPACK_IMPORTED_MODULE_1__chord_js__["a" /* chord */].Chord(pitches);
      var rootDNN = tempChord.root().diatonicNoteNum;
      var staffDistanceFromBassToRoot = rootDNN - cDNN;
      var bassSD = __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].posMod(this.scaleDegree - staffDistanceFromBassToRoot, 7);

      if (bassSD === 0) {
        bassSD = 7;
      }

      return bassSD;
    }
  }, {
    key: "_matchAccidentalsToQuality",
    value: function _matchAccidentalsToQuality(impliedQuality) {
      var correctSemitones = this._findSemitoneSizeForQuality(impliedQuality);

      var chordStepsToExamine = [3, 5, 7];

      for (var i = 0; i < chordStepsToExamine.length; i++) {
        var thisChordStep = chordStepsToExamine[i];
        var thisCorrect = correctSemitones[i];
        var thisSemis = this.semitonesFromChordStep(thisChordStep);

        if (thisCorrect === undefined) {
          continue;
        }

        if (thisSemis === undefined) {
          continue;
        }

        if (thisSemis === thisCorrect) {
          continue;
        }

        var correctedSemis = thisCorrect - thisSemis;

        if (correctedSemis >= 6) {
          correctedSemis = -1 * (12 - correctedSemis);
        } else if (correctedSemis <= -6) {
          correctedSemis += 12;
        }

        var faultyPitch = this.getChordStep(thisChordStep); // TODO: check for faultyPitch is undefined

        if (faultyPitch.accidental === undefined) {
          faultyPitch.accidental = new __WEBPACK_IMPORTED_MODULE_7__pitch_js__["a" /* pitch */].Accidental(correctedSemis);
        } else {
          var acc = faultyPitch.accidental;
          correctedSemis += acc.alter;

          if (correctedSemis >= 6) {
            correctedSemis = -1 * (12 - correctedSemis);
          } else if (correctedSemis <= -6) {
            correctedSemis += 12;
          }

          acc.set(correctedSemis);
        }
      }
    }
  }, {
    key: "_correctForSecondaryRomanNumeral",
    value: function _correctForSecondaryRomanNumeral(useScale, figure) {
      if (figure === undefined) {
        figure = this._figure;
      }

      var workingFigure = figure;
      var rx = new RegExp('(.*?)/([#a-np-zA-NP-Z].*)');
      var match = rx.exec(figure);

      if (match !== null) {
        var primaryFigure = match[1];
        var secondaryFigure = match[2];
        var secondaryRomanNumeral = new RomanNumeral(secondaryFigure, useScale, this.caseMatters);
        this.secondaryRomanNumeral = secondaryRomanNumeral;
        var secondaryMode;

        if (secondaryRomanNumeral.quality === 'minor') {
          secondaryMode = 'minor';
        } else if (secondaryRomanNumeral.quality === 'major') {
          secondaryMode = 'minor';
        } else if (secondaryRomanNumeral.semitonesFromChordStep(3) === 3) {
          secondaryMode = 'minor';
        } else {
          secondaryMode = 'major';
        }

        this.secondaryRomanNumeralKey = new __WEBPACK_IMPORTED_MODULE_6__key_js__["a" /* key */].Key(secondaryRomanNumeral.root().name, secondaryMode);
        useScale = this.secondaryRomanNumeralKey;
        workingFigure = primaryFigure;
      }

      return [workingFigure, useScale];
    }
  }, {
    key: "_parseOmittedSteps",
    value: function _parseOmittedSteps(workingFigure) {
      var omittedSteps = [];
      var rx = new RegExp(/\[no(\d+)]s*/);
      var match = rx.exec(workingFigure);

      while (match !== null) {
        var thisStep = match[1];
        thisStep = parseInt(thisStep);
        thisStep = thisStep % 7 || 7;
        omittedSteps.push(thisStep);
        workingFigure = workingFigure.replace(rx, '');
        match = rx.exec(workingFigure);
      }

      this.omittedSteps = omittedSteps;
      return workingFigure;
    }
  }, {
    key: "_parseBracketedAlterations",
    value: function _parseBracketedAlterations(workingFigure) {
      var bracketedAlterations = this.bracketedAlterations;
      var rx = new RegExp(/\[(b+|-+|#+)(\d+)]/);
      var match = rx.exec(workingFigure);

      while (match !== null) {
        var matchAlteration = match[1];
        var matchDegree = parseInt(match[2]);
        bracketedAlterations.push([matchAlteration, matchDegree]);
        workingFigure = workingFigure.replace(rx, '');
        match = rx.exec(workingFigure);
      }

      return workingFigure;
    }
  }, {
    key: "_findSemitoneSizeForQuality",
    value: function _findSemitoneSizeForQuality(impliedQuality) {
      var correctSemitones;

      if (impliedQuality === 'major') {
        correctSemitones = [4, 7];
      } else if (impliedQuality === 'minor') {
        correctSemitones = [3, 7];
      } else if (impliedQuality === 'diminished') {
        correctSemitones = [3, 6, 9];
      } else if (impliedQuality === 'half-diminished') {
        correctSemitones = [3, 6, 10];
      } else if (impliedQuality === 'augmented') {
        correctSemitones = [4, 8];
      } else if (impliedQuality === 'dominant-seventh') {
        correctSemitones = [4, 7, 10];
      } else {
        correctSemitones = [];
      }

      return correctSemitones;
    }
    /**
     * Gives a string display.  Note that since inversion is not yet supported
     * it needs to be given separately.
     *
     * Inverting 7th chords does not work.
     *
     * @param {string} displayType - ['roman', 'bassName', 'nameOnly', other]
     * @param {int} [inversion=0]
     * @returns {string}
     */

  }, {
    key: "asString",
    value: function asString(displayType, inversion) {
      var keyObj = this.key;
      var tonicName = keyObj.tonic.name;
      var mode = keyObj.mode; // specifying inversion is for backwards compatibility only.

      if (inversion === undefined) {
        inversion = this.inversion();
      }

      var inversionName = '';

      if (inversion === 1) {
        if (displayType === 'roman') {
          inversionName = '6';
        } else {
          inversionName = ' (first inversion)';
        }
      } else if (inversion === 2) {
        if (displayType === 'roman') {
          inversionName = '64';
        } else {
          inversionName = ' (second inversion)';
        }
      }

      var fullChordName;
      var connector = ' in ';
      var suffix = '';

      if (displayType === 'roman') {
        fullChordName = this.figure;
        fullChordName = fullChordName.replace('/o', 'ø');
      } else if (displayType === 'nameOnly') {
        // use only with only choice being tonicName
        fullChordName = '';
        connector = '';
        suffix = ' triad';
      } else if (displayType === 'bassName') {
        fullChordName = this.bass().name.replace(/-/, 'b');
      } else {
        // "default" or "degreeName" submediant, etc...
        fullChordName = this.degreeName;

        if (this.numbers !== undefined) {
          fullChordName += ' ' + this.numbers.toString();
        }
      }

      var tonicDisplay = tonicName.replace(/-/, 'b');

      if (mode === 'minor') {
        tonicDisplay = tonicDisplay.toLowerCase();
      }

      var chordStr = fullChordName + inversionName + connector + tonicDisplay + ' ' + mode + suffix;
      return chordStr;
    }
  }, {
    key: "romanNumeral",
    get: function get() {
      if (this.frontAlterationAccidental === undefined) {
        return this.romanNumeralAlone;
      } else {
        return this.frontAlterationAccidental.modifier + this.romanNumeralAlone;
      }
    }
  }, {
    key: "scale",
    get: function get() {
      if (this._scale !== undefined) {
        return this._scale;
      } else {
        this._scale = this.key.getScale();
        return this._scale;
      }
    }
  }, {
    key: "key",
    get: function get() {
      return this._scale;
    },
    set: function set(keyOrScale) {
      if (typeof keyOrScale === 'string') {
        this._scale = new __WEBPACK_IMPORTED_MODULE_6__key_js__["a" /* key */].Key(keyOrScale);
      } else if (typeof keyOrScale === 'undefined') {
        this._scale = new __WEBPACK_IMPORTED_MODULE_6__key_js__["a" /* key */].Key('C');
      } else {
        this._scale = keyOrScale;
      }

      if (keyOrScale === undefined) {
        this.useImpliedScale = true;
        this.impliedScale = new __WEBPACK_IMPORTED_MODULE_8__scale_js__["a" /* scale */].MajorScale('C');
      } else {
        this.useImpliedScale = false;
        this.impliedScale = false;
      }

      if (this._parsingComplete) {
        this._updatePitches();
      }
    }
  }, {
    key: "figure",
    get: function get() {
      return this._figure;
    },
    set: function set(newFigure) {
      this._figure = newFigure;

      if (this._parsingComplete) {
        this._parseFigure();

        this._updatePitches();
      }
    }
  }, {
    key: "figureAndKey",
    get: function get() {
      var tonicName = this.key.tonic.name;
      var mode = '';

      if (this.key.mode !== undefined) {
        mode = ' ' + this.key.mode;
      }

      if (mode === ' minor') {
        tonicName = tonicName.toLowerCase();
      } else if (mode === ' major') {
        tonicName = tonicName.toUpperCase();
      }

      return this.figure + ' in ' + tonicName + mode;
    }
  }, {
    key: "degreeName",
    get: function get() {
      if (this.scaleDegree < 7) {
        return [undefined, 'Tonic', 'Supertonic', 'Mediant', 'Subdominant', 'Dominant', 'Submediant'][this.scaleDegree];
      } else {
        var tonicPitch = this.key.tonic;
        var diffRootToTonic = (tonicPitch.ps - this.root().ps) % 12;

        if (diffRootToTonic < 0) {
          diffRootToTonic += 12;
        }

        if (diffRootToTonic === 1) {
          return 'Leading-tone';
        } else {
          return 'Subtonic';
        }
      }
    }
  }]);

  return RomanNumeral;
}(__WEBPACK_IMPORTED_MODULE_4__harmony_js__["a" /* harmony */].Harmony);
roman.RomanNumeral = RomanNumeral;

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return tempo; });
/* unused harmony export Metronome */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__prebase_js__ = __webpack_require__(5);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21 features.
 * music21/tempo -- tempo and (not in music21p) metronome objects
 *
 * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab
 * Based on music21, Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */



/* a Music21Object in m21p; the overhead is too high here to follow ... */

/**
 * tempo module, see {@link music21.tempo}
 *
 * @exports music21/tempo
 */

/**
 * tempo namespace
 *
 * @namespace music21.tempo
 * @memberof music21
 * @requires music21/prebase
 * @requires music21/base
 * @requires MIDI
 * @property {number} [baseTempo=60] - basic tempo
 */

var tempo = {}; // noinspection JSNonASCIINames,NonAsciiCharacters

/**
 * Object mapping names to tempo values
 *
 * @name music21.tempo.defaultTempoValues
 * @memberof music21.tempo
 * @example
 * music21.tempo.defaultTempoValues.grave
 * // 40
 */

tempo.defaultTempoValues = {
  larghissimo: 16,
  largamente: 32,
  grave: 40,
  'molto adagio': 40,
  largo: 46,
  lento: 52,
  adagio: 56,
  slow: 56,
  langsam: 56,
  larghetto: 60,
  adagietto: 66,
  andante: 72,
  andantino: 80,
  'andante moderato': 83,
  maestoso: 88,
  moderato: 92,
  moderate: 92,
  allegretto: 108,
  animato: 120,
  'allegro moderato': 128,
  allegro: 132,
  fast: 132,
  schnell: 132,
  allegrissimo: 140,
  'molto allegro': 144,
  'très vite': 144,
  vivace: 160,
  vivacissimo: 168,
  presto: 184,
  prestissimo: 208
};
tempo.baseTempo = 60;
/* --------- metronome ---------- */

/**
 *
 * @class Metronome
 * @memberof music21.tempo
 * @extends music21.prebase.ProtoM21Object
 * @param {number} [tempo=music21.tempo.baseTempo] - the tempo of the metronome to start
 * @property {number} tempo
 * @property {int} [numBeatsPerMeasure=4]
 * @property {number} [minTempo=10]
 * @property {number} [maxTempo=600]
 * @property {bool} [flash=false] - flash the tempo
 * @property {bool} [silent=false] - play silently
 * @property {int} beat - current beat number
 * @property {int} chirpTimeout - an index of a timeout object for chirping
 */

var Metronome =
/*#__PURE__*/
function (_prebase$ProtoM21Obje) {
  _inherits(Metronome, _prebase$ProtoM21Obje);

  function Metronome(tempoInt) {
    var _this;

    _classCallCheck(this, Metronome);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Metronome).call(this));
    _this._tempo = 60; // overridden by music21.tempo.baseTempo;

    if (tempoInt === undefined) {
      _this.tempo = tempo.baseTempo;
    } else {
      _this.tempo = tempoInt;
    }

    _this.numBeatsPerMeasure = 4;
    _this.minTempo = 10;
    _this.maxTempo = 600;
    _this.beat = _this.numBeatsPerMeasure;
    _this.chirpTimeout = undefined;
    _this.silent = false;
    _this.flash = false;
    _this.tempoRanges = [0, 40, 60, 72, 120, 144, 240, 999];
    _this.tempoIncreases = [0, 1, 2, 3, 4, 6, 8, 15, 100];
    return _this;
  }

  _createClass(Metronome, [{
    key: "_silentFlash",
    value: function _silentFlash(flashColor) {
      this.$metronomeDiv.find('.metroFlash').css('background-color', flashColor).fadeOut(this.beatLength * 1000 / 4, function silentFadeOut() {
        __WEBPACK_IMPORTED_MODULE_0_jquery__(this).css('background-color', '#ffffff').fadeIn(1);
      });
    }
    /**
     * Play a note (a higher one on the downbeat) and start the metronome chirping.
     */

  }, {
    key: "chirp",
    value: function chirp() {
      this.beat += 1;

      if (this.beat > this.numBeatsPerMeasure) {
        this.beat = 1;

        if (this.silent !== true) {
          __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](0, 96, 100, 0);
          __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](0, 96, 0.1);
        }

        if (this.flash === true) {
          this._silentFlash('#0000f0');
        }
      } else {
        if (this.silent !== true) {
          __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOn"](0, 84, 70, 0);
          __WEBPACK_IMPORTED_MODULE_1__ext_midijs_build_MIDI_min_js__["noteOff"](0, 84, 0.1);
        }

        if (this.flash === true) {
          this._silentFlash('#ff0000');
        }
      }

      var that = this;
      this.chirpTimeout = setTimeout(function () {
        that.chirp();
      }, 1000 * 60 / this.tempo);
    }
    /**
     * Stop the metronome from chirping.
     */

  }, {
    key: "stopChirp",
    value: function stopChirp() {
      if (this.chirpTimeout !== undefined) {
        clearTimeout(this.chirpTimeout);
        this.chirpTimeout = undefined;
      }
    }
    /**
     * Increase the metronome tempo one "click".
     *
     * Value changes depending on the current tempo.  Uses standard metronome guidelines.
     *
     * To change the tempo, just set this.tempo = n
     *
     * @param {int} [n=1 - number of clicks to the right
     * @returns {number} new tempo
     */

  }, {
    key: "increaseSpeed",
    value: function increaseSpeed() {
      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      // increase by one metronome 'click' for every n
      for (var i = 0; i < n; i++) {
        var t = this.tempo;

        for (var tr = 0; tr < this.tempoRanges.length; tr++) {
          var tempoExtreme = this.tempoRanges[tr];
          var tempoIncrease = this.tempoIncreases[tr];

          if (t < tempoExtreme) {
            t += tempoIncrease;
            t = tempoIncrease * Math.round(t / tempoIncrease);
            break;
          }
        } // console.log(t);


        this.tempo = t;
      }

      return this.tempo;
    }
    /**
     * Decrease the metronome tempo one "click"
     *
     * To change the tempo, just set this.tempo = n
     *
     * @param {int} [n=1] - number of clicks to the left
     * @returns {number} new tempo
     */

  }, {
    key: "decreaseSpeed",
    value: function decreaseSpeed() {
      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      for (var i = 0; i < n; i++) {
        var t = this.tempo;
        var trL = this.tempoRanges.length;

        for (var tr = 1; tr <= trL; tr++) {
          var tempoExtreme = this.tempoRanges[trL - tr];
          var tempoIncrease = this.tempoIncreases[trL - tr + 1];

          if (t > tempoExtreme) {
            t -= tempoIncrease;
            t = tempoIncrease * Math.floor(t / tempoIncrease);
            break;
          }
        } // console.log(t);


        this.tempo = t;
      }
    }
    /**
     * add a Metronome interface onto the DOM at where
     *
     * @param {jQuery|Node} [where='body']
     * @returns {jQuery} - a div holding the metronome.
     */

  }, {
    key: "addDiv",
    value: function addDiv(where) {
      var jWhere;

      if (where !== undefined && where.jquery !== undefined) {
        jWhere = where;
      } else if (where !== undefined) {
        jWhere = __WEBPACK_IMPORTED_MODULE_0_jquery__(where);
      } else {
        jWhere = __WEBPACK_IMPORTED_MODULE_0_jquery__('body');
      }

      var metroThis = this;
      var tempoHolder = __WEBPACK_IMPORTED_MODULE_0_jquery__('<span class="tempoHolder">' + this.tempo.toString() + '</span>');
      tempoHolder.css({
        'font-size': '24px',
        'padding-left': '10px',
        'padding-right': '10px'
      });
      var newDiv = __WEBPACK_IMPORTED_MODULE_0_jquery__('<div class="metronomeRendered"></div>');
      newDiv.append(tempoHolder);
      var b1 = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>start</button>');
      b1.on('click', function () {
        metroThis.chirp();
      });
      var b2 = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>stop</button>');
      b2.on('click', function () {
        metroThis.stopChirp();
      });
      newDiv.prepend(b2);
      newDiv.prepend(b1);
      var b3 = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>up</button>');
      b3.on('click', function increaseSpeedButton() {
        metroThis.increaseSpeed();
        __WEBPACK_IMPORTED_MODULE_0_jquery__(this).prevAll('.tempoHolder').html(metroThis.tempo.toString());
      });
      var b4 = __WEBPACK_IMPORTED_MODULE_0_jquery__('<button>down</button>');
      b4.on('click', function decreaseSpeedButton() {
        metroThis.decreaseSpeed();
        __WEBPACK_IMPORTED_MODULE_0_jquery__(this).prevAll('.tempoHolder').html(metroThis.tempo.toString());
      });
      newDiv.append(b3);
      newDiv.append(b4);
      var $flash = __WEBPACK_IMPORTED_MODULE_0_jquery__('<span class="metroFlash">' + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>');
      $flash.css('margin-left', '40px');
      $flash.css('height', '40px');
      newDiv.append($flash);
      jWhere.append(newDiv);
      this.$metronomeDiv = newDiv;
      return newDiv;
    }
  }, {
    key: "tempo",
    get: function get() {
      return this._tempo;
    },
    set: function set(t) {
      this._tempo = t;

      if (this._tempo > this.maxTempo) {
        this._tempo = this.maxTempo;
      } else if (this._tempo < this.minTempo) {
        this._tempo = this.minTempo;
      }
    }
  }, {
    key: "beatLength",
    get: function get() {
      return 60.0 / this.tempo;
    }
  }]);

  return Metronome;
}(__WEBPACK_IMPORTED_MODULE_2__prebase_js__["a" /* prebase */].ProtoM21Object);
tempo.Metronome = Metronome;

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return tinyNotation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__clef_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__duration_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__meter_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__stream_js__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__tie_js__ = __webpack_require__(21);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/tinyNotation -- TinyNotation implementation
 *
 * Copyright (c) 2013-17, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–17, Michael Scott Cuthbert and cuthbertLab
 *
 */








/**
 * TinyNotation module, see {@link music21.tinyNotation} namespace
 *
 * @exports music21/tinyNotation
 */

/**
 * @namespace music21.tinyNotation
 * @memberof music21
 * @requires music21/base
 * @requires music21/clef
 * @requires music21/duration
 * @requires music21/pitch
 * @requires music21/note
 * @requires music21/meter
 * @requires music21/stream
 * @requires music21/tie
 */

var tinyNotation = {};
/**
 * Regular expressions object
 *
 * @memberof music21.tinyNotation
 */

tinyNotation.regularExpressions = {
  REST: /r/,
  OCTAVE2: /([A-G])[A-G]+/,
  OCTAVE3: /([A-G])/,
  OCTAVE5: /([a-g])('+)/,
  OCTAVE4: /([a-g])/,
  EDSHARP: /\((#+)\)/,
  EDFLAT: /\((-+)\)/,
  EDNAT: /\(n\)/,
  SHARP: /^[A-Ga-g]+'*(#+)/,
  // simple notation finds
  FLAT: /^[A-Ga-g]+'*(-+)/,
  //   double accidentals too
  NAT: /^[A-Ga-g]+'*n/,
  // explicit naturals
  TYPE: /(\d+)/,
  TIE: /.~/,
  // not preceding ties
  PRECTIE: /~/,
  // front ties
  ID_EL: /=([A-Za-z0-9]*)/,
  LYRIC: /_(.*)/,
  DOT: /\.+/,
  TIMESIG: /(\d+)\/(\d+)/,
  PARTBREAK: /partBreak/,
  // nonstandard...fix later...
  TRIP: /trip{/,
  QUAD: /quad{/,
  ENDBRAC: /}$/
};
/**
 * Function, not class.
 *
 * Converts a TinyNotation String into a music21 Stream
 *
 * See music21p for examples of what can go into tinynotation. It's an
 * adaptation of Lilypond format, by design Extremely simple!
 *
 * @memberof music21.tinyNotation
 * @param {string} textIn - a valid tinyNotation string
 * @returns {music21.stream.Part|music21.stream.Measure} - a Stream or Part object (if multiple measures)
 * @example
 * var t = "3/4 c4 B8 c d4 e2.";
 * var p = music21.tinyNotation.TinyNotation(t);
 * p.duration.quarterLength;
 * // 6.0
 */

tinyNotation.TinyNotation = function TinyNotation(textIn) {
  textIn = textIn.trim();
  var tokens = textIn.split(' ');
  var optionalScore;
  var p = new __WEBPACK_IMPORTED_MODULE_6__stream_js__["a" /* stream */].Part();
  var m = new __WEBPACK_IMPORTED_MODULE_6__stream_js__["a" /* stream */].Measure();
  m.number = 1;
  var currentTSBarDuration = 4.0;
  var lastDurationQL = 1.0;
  var storedDict = {
    lastNoteTied: false,
    inTrip: false,
    inQuad: false,
    endTupletAfterNote: false
  };
  var tnre = tinyNotation.regularExpressions; // faster typing

  var measureNumber = 1;

  for (var i = 0; i < tokens.length; i++) {
    // check at first so that a full measure but not over full
    // gets returned as a stream.Measure object.
    if (m.duration.quarterLength >= currentTSBarDuration || Math.abs(m.duration.quarterLength - currentTSBarDuration) < 0.0001) {
      p.append(m);
      measureNumber += 1;
      m = new __WEBPACK_IMPORTED_MODULE_6__stream_js__["a" /* stream */].Measure();
      m.number = measureNumber;
    }

    var token = tokens[i];
    var noteObj = void 0;
    var lyric = void 0;

    if (tnre.PARTBREAK.exec(token)) {
      if (m.length > 0) {
        p.append(m);
        m = new __WEBPACK_IMPORTED_MODULE_6__stream_js__["a" /* stream */].Measure();
      }

      if (optionalScore === undefined) {
        optionalScore = new __WEBPACK_IMPORTED_MODULE_6__stream_js__["a" /* stream */].Score();
      }

      optionalScore.insert(0, p);
      p = new __WEBPACK_IMPORTED_MODULE_6__stream_js__["a" /* stream */].Part();
      storedDict.lastNoteTied = false;
      storedDict.inTrip = false;
      storedDict.inQuad = false;
      storedDict.endTupletAfterNote = false;
      continue;
    }

    if (tnre.TRIP.exec(token)) {
      token = token.slice(5); // cut...

      storedDict.inTrip = true;
    }

    if (tnre.QUAD.exec(token)) {
      token = token.slice(5); // cut...

      storedDict.inQuad = true;
    }

    if (tnre.ENDBRAC.exec(token)) {
      token = token.slice(0, -1); // cut...

      storedDict.endTupletAfterNote = true;
    } // Modifiers


    if (tnre.LYRIC.exec(token)) {
      var _token$split = token.split('_');

      var _token$split2 = _slicedToArray(_token$split, 2);

      token = _token$split2[0];
      lyric = _token$split2[1];
    }

    if (tnre.TIMESIG.exec(token)) {
      var _MATCH = tnre.TIMESIG.exec(token);

      var ts = new __WEBPACK_IMPORTED_MODULE_5__meter_js__["a" /* meter */].TimeSignature();
      ts.numerator = parseInt(_MATCH[1]);
      ts.denominator = parseInt(_MATCH[2]);
      m.timeSignature = ts;
      currentTSBarDuration = ts.barDuration.quarterLength; // console.log(currentTSBarDuration);

      continue;
    } else if (tnre.REST.exec(token)) {
      noteObj = new __WEBPACK_IMPORTED_MODULE_4__note_js__["a" /* note */].Rest(lastDurationQL);
    } else if (tnre.OCTAVE2.exec(token)) {
      var _MATCH2 = tnre.OCTAVE2.exec(token);

      noteObj = new __WEBPACK_IMPORTED_MODULE_4__note_js__["a" /* note */].Note(_MATCH2[1], lastDurationQL);
      noteObj.pitch.octave = 4 - _MATCH2[0].length;
    } else if (tnre.OCTAVE3.exec(token)) {
      var _MATCH3 = tnre.OCTAVE3.exec(token);

      noteObj = new __WEBPACK_IMPORTED_MODULE_4__note_js__["a" /* note */].Note(_MATCH3[1], lastDurationQL);
      noteObj.pitch.octave = 3;
    } else if (tnre.OCTAVE5.exec(token)) {
      // must match octave 5 before 4
      var _MATCH4 = tnre.OCTAVE5.exec(token);

      noteObj = new __WEBPACK_IMPORTED_MODULE_4__note_js__["a" /* note */].Note(_MATCH4[1].toUpperCase(), lastDurationQL);
      noteObj.pitch.octave = 3 + _MATCH4[0].length;
    } else if (tnre.OCTAVE4.exec(token)) {
      var _MATCH5 = tnre.OCTAVE4.exec(token);

      noteObj = new __WEBPACK_IMPORTED_MODULE_4__note_js__["a" /* note */].Note(_MATCH5[1].toUpperCase(), lastDurationQL);
      noteObj.pitch.octave = 4;
    }

    if (noteObj === undefined) {
      continue;
    }

    if (lyric !== undefined) {
      noteObj.lyric = lyric;
    }

    if (tnre.TIE.exec(token)) {
      noteObj.tie = new __WEBPACK_IMPORTED_MODULE_7__tie_js__["a" /* tie */].Tie('start');

      if (storedDict.lastNoteTied) {
        noteObj.tie.type = 'continue';
      }

      storedDict.lastNoteTied = true;
    } else if (storedDict.lastNoteTied) {
      noteObj.tie = new __WEBPACK_IMPORTED_MODULE_7__tie_js__["a" /* tie */].Tie('stop');
      storedDict.lastNoteTied = false;
    }

    if (tnre.SHARP.exec(token)) {
      var _MATCH6 = tnre.SHARP.exec(token); // sharp


      noteObj.pitch.accidental = new __WEBPACK_IMPORTED_MODULE_3__pitch_js__["a" /* pitch */].Accidental(_MATCH6[1].length);
    } else if (tnre.FLAT.exec(token)) {
      var _MATCH7 = tnre.FLAT.exec(token); // sharp


      noteObj.pitch.accidental = new __WEBPACK_IMPORTED_MODULE_3__pitch_js__["a" /* pitch */].Accidental(-1 * _MATCH7[1].length);
    } else if (tnre.NAT.exec(token)) {
      noteObj.pitch.accidental = new __WEBPACK_IMPORTED_MODULE_3__pitch_js__["a" /* pitch */].Accidental('natural');
      noteObj.pitch.accidental.displayType = 'always';
    }

    var MATCH = tnre.TYPE.exec(token);

    if (MATCH) {
      var durationType = parseInt(MATCH[0]);
      noteObj.duration.quarterLength = 4.0 / durationType;
    }

    MATCH = tnre.DOT.exec(token);

    if (MATCH) {
      var numDots = MATCH[0].length;
      var multiplier = 1 + (1 - Math.pow(0.5, numDots));
      noteObj.duration.quarterLength *= multiplier;
    }

    lastDurationQL = noteObj.duration.quarterLength; // do before appending tuplets

    if (storedDict.inTrip) {
      // console.log(noteObj.duration.quarterLength);
      noteObj.duration.appendTuplet(new __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].Tuplet(3, 2, noteObj.duration.quarterLength));
    }

    if (storedDict.inQuad) {
      noteObj.duration.appendTuplet(new __WEBPACK_IMPORTED_MODULE_2__duration_js__["a" /* duration */].Tuplet(4, 3, noteObj.duration.quarterLength));
    }

    if (storedDict.endTupletAfterNote) {
      storedDict.inTrip = false;
      storedDict.inQuad = false;
      storedDict.endTupletAfterNote = false;
    }

    m.append(noteObj);
  }

  if (m.length > 0) {
    p.append(m);
  }

  var returnObject;

  if (optionalScore !== undefined) {
    if (p.length > 0) {
      optionalScore.append(p);
    }

    for (var _i2 = 0; _i2 < optionalScore.length; _i2++) {
      var innerPart = optionalScore.get(_i2);
      innerPart.clef = __WEBPACK_IMPORTED_MODULE_1__clef_js__["a" /* clef */].bestClef(innerPart);
      innerPart.getElementsByClass('Measure').get(0).clef = innerPart.clef;
    }

    returnObject = optionalScore;
  } else {
    p.clef = __WEBPACK_IMPORTED_MODULE_1__clef_js__["a" /* clef */].bestClef(p);
    p.getElementsByClass('Measure').get(0).clef = p.clef;
    returnObject = p;
  }

  return returnObject;
}; // render notation divs in HTML

/**
 * Render all the TinyNotation classes in the DOM as notation
 *
 * Called automatically when music21 is loaded.
 *
 * @memberof music21.tinyNotation
 * @param {string} classTypes - a JQuery selector to find elements to replace.
 * @param {Node|jQuery} [selector]
 */


tinyNotation.renderNotationDivs = function renderNotationDivs(classTypes, selector) {
  if (classTypes === undefined) {
    classTypes = '.music21.tinyNotation';
  }

  var allRender = [];

  if (selector === undefined) {
    allRender = __WEBPACK_IMPORTED_MODULE_0_jquery__(classTypes);
  } else {
    if (selector.jquery === undefined) {
      selector = __WEBPACK_IMPORTED_MODULE_0_jquery__(selector);
    }

    allRender = selector.find(classTypes);
  }

  for (var i = 0; i < allRender.length; i++) {
    var thisTN = allRender[i];
    var $thisTN = __WEBPACK_IMPORTED_MODULE_0_jquery__(thisTN);
    var thisTNContents = void 0;

    if ($thisTN.attr('tinynotationcontents') !== undefined) {
      thisTNContents = $thisTN.attr('tinynotationcontents');
    } else if (thisTN.textContent !== undefined) {
      thisTNContents = thisTN.textContent;
      thisTNContents = thisTNContents.replace(/s+/g, ' '); // no line-breaks, etc.
    }

    if (String.prototype.trim !== undefined && thisTNContents !== undefined) {
      thisTNContents = thisTNContents.trim(); // remove leading, trailing whitespace
    }

    if (thisTNContents) {
      var st = tinyNotation.TinyNotation(thisTNContents);

      if ($thisTN.hasClass('noPlayback')) {
        st.renderOptions.events.click = undefined;
      }

      var newSVG = st.createDOM();
      $thisTN.attr('tinynotationcontents', thisTNContents);
      $thisTN.empty();
      $thisTN.data('stream', st);
      $thisTN.append(newSVG); // console.log(thisTNContents);
    }
  }
};

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return voiceLeading; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval_js__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__key_js__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_js__ = __webpack_require__(2);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * music21j -- Javascript reimplementation of Core music21 features.
 * music21/voiceLeading -- voiceLeading objects
 *
 * Copyright (c) 2013-18, Michael Scott Cuthbert and cuthbertLab
 * Based on music21, Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab
 *
 */




var intervalCache = [];
var MotionType = {
  antiParallel: 'Anti-Parallel',
  contrary: 'Contrary',
  noMotion: 'No Motion',
  oblique: 'Oblique',
  parallel: 'Parallel',
  similar: 'Similar'
};

var VoiceLeadingQuartet =
/*#__PURE__*/
function (_Music21Object) {
  _inherits(VoiceLeadingQuartet, _Music21Object);

  function VoiceLeadingQuartet(v1n1, v1n2, v2n1, v2n2, analyticKey) {
    var _this;

    _classCallCheck(this, VoiceLeadingQuartet);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(VoiceLeadingQuartet).call(this));

    if (!intervalCache.length) {
      intervalCache.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval('P1'));
      intervalCache.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval('P5'));
      intervalCache.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval('P8'));
    }

    _this.unison = intervalCache[0];
    _this.fifth = intervalCache[1];
    _this.octave = intervalCache[2];
    _this._v1n1 = undefined;
    _this._v1n2 = undefined;
    _this._v2n1 = undefined;
    _this._v2n2 = undefined;
    _this.v1n1 = v1n1;
    _this.v1n2 = v1n2;
    _this.v2n1 = v2n1;
    _this.v2n2 = v2n2;
    _this.vIntervals = [];
    _this.hIntervals = [];
    _this._key = undefined;

    if (analyticKey !== undefined) {
      _this.key = analyticKey;
    }

    if (v1n1 !== undefined && v1n2 !== undefined && v2n1 !== undefined && v2n2 !== undefined) {
      _this._findIntervals();
    }

    return _this;
  }

  _createClass(VoiceLeadingQuartet, [{
    key: "_setVoiceNote",
    value: function _setVoiceNote(value, which) {
      if (value === undefined) {
        this[which] = value;
      } else if (typeof value === 'string') {
        this[which] = new __WEBPACK_IMPORTED_MODULE_2__note_js__["a" /* note */].Note(value);
      } else if (value.classes.includes('Note')) {
        this[which] = value;
      } else {
        var n = new __WEBPACK_IMPORTED_MODULE_2__note_js__["a" /* note */].Note(value.nameWithOctave);
        n.duration.quarterLength = 0.0;
        this[which] = n;
      }
    }
  }, {
    key: "_findIntervals",
    value: function _findIntervals() {
      this.vIntervals.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(this.v1n1, this.v2n1));
      this.vIntervals.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(this.v1n2, this.v2n2));
      this.hIntervals.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(this.v1n1, this.v1n2));
      this.hIntervals.push(new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(this.v2n1, this.v2n2));
    }
  }, {
    key: "motionType",
    value: function motionType() {
      if (this.obliqueMotion()) {
        return MotionType.oblique;
      } else if (this.parallelMotion()) {
        return MotionType.parallel;
      } else if (this.similarMotion()) {
        return MotionType.similar;
      } else if (this.contraryMotion()) {
        return MotionType.contrary;
      } else if (this.antiParallelMotion()) {
        return MotionType.antiParallel;
      } else if (this.noMotion()) {
        return MotionType.noMotion;
      }

      return undefined;
    }
  }, {
    key: "noMotion",
    value: function noMotion() {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.hIntervals[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var iV = _step.value;

          if (iV.name !== 'P1') {
            return false;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return true;
    }
  }, {
    key: "obliqueMotion",
    value: function obliqueMotion() {
      if (this.noMotion()) {
        return false;
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.hIntervals[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var iH = _step2.value;

          if (iH.name === 'P1') {
            return true;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return false;
    }
  }, {
    key: "similarMotion",
    value: function similarMotion() {
      if (this.noMotion()) {
        return false;
      }

      if (this.hIntervals[0].direction === this.hIntervals[1].direction) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "parallelMotion",
    value: function parallelMotion(requiredInterval) {
      if (!this.similarMotion()) {
        return false;
      }

      if (this.vIntervals[0].directedSimpleName !== this.vIntervals[1].directedSimpleName) {
        return false;
      }

      if (requiredInterval === undefined) {
        return true;
      }

      if (typeof requiredInterval === 'string') {
        requiredInterval = new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(requiredInterval);
      }

      if (this.vIntervals[0].simpleName === requiredInterval.simpleName) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "contraryMotion",
    value: function contraryMotion() {
      if (this.noMotion()) {
        return false;
      }

      if (this.obliqueMotion()) {
        return false;
      }

      if (this.hIntervals[0].direction === this.hIntervals[1].direction) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: "outwardContraryMotion",
    value: function outwardContraryMotion() {
      return this.contraryMotion() && this.hIntervals[0].direction === __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Direction.ASCENDING;
    }
  }, {
    key: "inwardContraryMotion",
    value: function inwardContraryMotion() {
      return this.contraryMotion() && this.hIntervals[0].direction === __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Direction.DESCENDING;
    }
  }, {
    key: "antiParallelMotion",
    value: function antiParallelMotion(simpleName) {
      if (!this.contraryMotion()) {
        return false;
      }

      if (this.vIntervals[0].simpleName !== this.vIntervals[1].simpleName) {
        return false;
      }

      if (simpleName === undefined) {
        return true;
      }

      if (typeof simpleName === 'string') {
        if (this.vIntervals[0].simpleName === simpleName) {
          return true;
        } else {
          return false;
        }
      } else if (this.vIntervals[0].simpleName === simpleName.simpleName) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "parallelInterval",
    value: function parallelInterval(thisInterval) {
      if (!(this.parallelMotion() || this.antiParallelMotion())) {
        return false;
      }

      if (typeof thisInterval === 'string') {
        thisInterval = new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(thisInterval);
      }

      if (this.vIntervals[0].semiSimpleName === thisInterval.semiSimpleName) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "parallelFifth",
    value: function parallelFifth() {
      return this.parallelInterval(this.fifth);
    }
  }, {
    key: "parallelOctave",
    value: function parallelOctave() {
      return this.parallelInterval(this.octave);
    }
  }, {
    key: "parallelUnison",
    value: function parallelUnison() {
      return this.parallelInterval(this.unison);
    }
  }, {
    key: "parallelUnisonOrOctave",
    value: function parallelUnisonOrOctave() {
      return this.parallelUnison() || this.parallelOctave();
    }
  }, {
    key: "hiddenInterval",
    value: function hiddenInterval(thisInterval) {
      if (this.parallelMotion()) {
        return false;
      }

      if (!this.similarMotion()) {
        return false;
      }

      if (typeof thisInterval === 'string') {
        thisInterval = new __WEBPACK_IMPORTED_MODULE_0__interval_js__["a" /* interval */].Interval(thisInterval);
      }

      if (this.vIntervals[1].simpleName === thisInterval.simpleName) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "hiddenFifth",
    value: function hiddenFifth() {
      return this.hiddenInterval(this.fifth);
    }
  }, {
    key: "hiddenOctave",
    value: function hiddenOctave() {
      return this.hiddenInterval(this.octave);
    } // True if either note in voice 1 is lower than the corresponding voice 2 note

  }, {
    key: "voiceCrossing",
    value: function voiceCrossing() {
      return this.v1n1.pitch.ps < this.v2n1.pitch.ps || this.v1n2.pitch.ps < this.v2n2.pitch.ps;
    }
  }, {
    key: "voiceOverlap",
    value: function voiceOverlap() {
      return this.v1n2.pitch.ps < this.v2n1.pitch.ps || this.v2n2.pitch.ps > this.v1n1.pitch.ps;
    }
    /**
     * isProperResolution - Checks whether the voice-leading quartet resolves correctly according to standard
     *         counterpoint rules. If the first harmony is dissonant (d5, A4, or m7) it checks
     *         that these are correctly resolved. If the first harmony is consonant, True is returned.
     *
     *         The key parameter should be specified to check for motion in the bass from specific
     *         note degrees. If it is not set, then no checking for scale degrees takes place.
     *
     *         Diminished Fifth: in by contrary motion to a third, with 7 resolving up to 1 in the bass
     *         Augmented Fourth: out by contrary motion to a sixth, with chordal seventh resolving
     *         down to a third in the bass.
     *         Minor Seventh: Resolves to a third with a leap form 5 to 1 in the bass
     *
     * @return {boolean}  true if proper or rules do not apply; false if improper
     */

  }, {
    key: "isProperResolution",
    value: function isProperResolution() {
      if (this.noMotion()) {
        return true;
      }

      var scale;
      var n1degree;
      var n2degree;

      if (this.key !== undefined) {
        scale = this.key.getScale();
        n1degree = scale.getScaleDegreeFromPitch(this.v2n1);
        n2degree = scale.getScaleDegreeFromPitch(this.v2n2);
      } // catches case of #7 in minor


      if (this.key !== undefined && this.key.mode === 'minor' && (n1degree === undefined || n2degree === undefined)) {
        var scale2 = this.key.getScale('melodic-minor'); // gets ascending form

        if (n1degree === undefined) {
          n1degree = scale2.getScaleDegreeFromPitch(this.v2n1);
        }

        if (n2degree === undefined) {
          n2degree = scale2.getScaleDegreeFromPitch(this.v2n2);
        }
      }

      var firstHarmony = this.vIntervals[0].simpleName;
      var secondHarmony = this.vIntervals[1].generic.simpleUndirected;

      if (firstHarmony === 'P4') {
        if (this.v1n1.pitch.ps >= this.v1n2.pitch.ps) {
          return true;
        } else {
          return false;
        }
      } else if (firstHarmony === 'd5') {
        if (scale !== undefined && n1degree !== 7) {
          return true;
        }

        if (scale !== undefined && n2degree !== 1) {
          return false;
        }

        return this.inwardContraryMotion() && secondHarmony === 3;
      } else if (firstHarmony === 'A4') {
        if (scale !== undefined && n1degree !== 4) {
          return true;
        }

        if (scale !== undefined && n2degree !== 3) {
          return false;
        }

        return this.outwardContraryMotion() && secondHarmony === 6;
      } else if (firstHarmony === 'm7') {
        if (scale !== undefined && n1degree !== 5) {
          return true;
        }

        if (scale !== undefined && n2degree !== 1) {
          return false;
        }

        return secondHarmony === 3;
      } else {
        return true;
      }
    }
  }, {
    key: "v1n1",
    get: function get() {
      return this._v1n1;
    },
    set: function set(value) {
      this._setVoiceNote(value, '_v1n1');
    }
  }, {
    key: "v1n2",
    get: function get() {
      return this._v1n2;
    },
    set: function set(value) {
      this._setVoiceNote(value, '_v1n2');
    }
  }, {
    key: "v2n1",
    get: function get() {
      return this._v2n1;
    },
    set: function set(value) {
      this._setVoiceNote(value, '_v2n1');
    }
  }, {
    key: "v2n2",
    get: function get() {
      return this._v2n2;
    },
    set: function set(value) {
      this._setVoiceNote(value, '_v2n2');
    }
  }, {
    key: "key",
    get: function get() {
      return this._key;
    },
    set: function set(keyValue) {
      if (typeof keyValue === 'string') {
        keyValue = new __WEBPACK_IMPORTED_MODULE_1__key_js__["a" /* key */].Key(__WEBPACK_IMPORTED_MODULE_1__key_js__["a" /* key */].convertKeyStringToMusic21KeyString(keyValue));
      }

      this._key = keyValue;
    }
  }]);

  return VoiceLeadingQuartet;
}(__WEBPACK_IMPORTED_MODULE_3__base_js__["b" /* Music21Object */]);

var voiceLeading = {
  VoiceLeadingQuartet: VoiceLeadingQuartet
};

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return webmidi; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__miditools_js__ = __webpack_require__(19);
/**
 * music21j -- Javascript reimplementation of Core music21p features.
 * music21/webmidi -- webmidi or wrapper around the Jazz Plugin
 *
 * For non webmidi --  Uses the cross-platform, cross-browser plugin from
 * http://jazz-soft.net/doc/Jazz-Plugin/Plugin.html
 * P.S. by the standards of divinity of most major religions, Sema Kachalo is a god.
 *
 * Copyright (c) 2014-18, Michael Scott Cuthbert and cuthbertLab
 * Based on music21 (=music21p), Copyright (c) 2006–18, Michael Scott Cuthbert and cuthbertLab
 *
 */




/**
 * webmidi -- for connecting with external midi devices
 *
 * Uses either the webmidi API or the Jazz plugin
 *
 * See {@link music21.webmidi}
 *
 * @exports music21/webmidi
 */

/**
 * webmidi -- for connecting with external midi devices
 *
 * Uses either the webmidi API or the Jazz plugin
 *
 * @namespace music21.webmidi
 * @memberof music21
 * @requires music21/miditools
 * @requires jquery
 * @property {JazzObject|undefined} storedPlugin - reference to the Jazz object from the plugin; cached from `createPlugin`.
 * @property {string} selectedJazzInterface - the currently connected interface (note that we can only use one right now)
 */

var webmidi = {};
webmidi.selectedOutputPort = undefined;
webmidi.selectedInputPort = undefined;
webmidi.access = undefined;
webmidi.$selectDiv = undefined;
webmidi.jazzDownloadUrl = 'http://jazz-soft.net/download/Jazz-Plugin/';
webmidi.storedPlugin = undefined;
webmidi.selectedJazzInterface = undefined; // not the same as "" etc. uses last selected interface by default.

/**
 * Called by Jazz MIDI plugin when an event arrives.
 *
 * Shim to convert the data into WebMIDI API format and then call the WebMIDI API midiInArrived
 *
 * See the MIDI spec for information on parameters
 *
 * @memberof music21.webmidi
 * @param {byte} t - timing information
 * @param {byte} a - data 1
 * @param {byte} b - data 2
 * @param {byte} c - data 3
 */

webmidi.jazzMidiInArrived = function jazzMidiInArrived(t, a, b, c) {
  var webmidiEvent = {
    timestamp: t,
    data: [a, b, c]
  };
  return webmidi.midiInArrived(webmidiEvent);
};
/**
 * Called directly when a MIDI event arrives from the WebMIDI API, or via a Shim (jazzMidiInArrived)
 * when MIDI information comes from JazzMIDI
 *
 * Calls the 'raw' and 'general callbacks when a raw midi event (four bytes)
 * arrives.
 *
 * See the MIDI spec for information on the contents of the three parameters.
 *
 * midiMessageEvent should be an object with two keys: timeStamp (int) and data (array of three int values)
 *
 * @memberof music21.webmidi
 * @param {Object} midiMessageEvent - midi Information
 */


webmidi.midiInArrived = function midiInArrived(midiMessageEvent) {
  var t = midiMessageEvent.timeStamp;
  var a = midiMessageEvent.data[0];
  var b = midiMessageEvent.data[1];
  var c = midiMessageEvent.data[2];
  var eventObject = __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].callBacks.raw(t, a, b, c);

  if (__WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].callBacks.general instanceof Array) {
    return __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].callBacks.general.forEach(function (el, index, array) {
      el(eventObject);
    });
  } else if (__WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].callBacks.general !== undefined) {
    return __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].callBacks.general(eventObject);
  } else {
    return undefined;
  }
};
/**
 * Create a hidden tiny, &lt;object&gt; tag in the DOM with the
 * proper classid (`CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90`) to
 * load the Jazz plugin.
 *
 * It will return the plugin if it can or undefined if it cannot. Caches it in webmidi.storedPlugin.
 *
 * @function music21.webmidi.createPlugin
 * @param {Node} [appendElement=document.body] - where to place this hidden object (does not really matter)
 * @param {Boolean} [override=false] - if this method has been called successfully before return the storedPlugin unless override is true.
 * @returns {Jazz|undefined} Jazz MIDI plugin object
 */


webmidi.createPlugin = function createPlugin(appendElement, override) {
  if (webmidi.storedPlugin && override !== true) {
    return webmidi.storedPlugin;
  }

  if (typeof appendElement === 'undefined') {
    appendElement = __WEBPACK_IMPORTED_MODULE_0_jquery__('body')[0];
  }

  var obj = document.createElement('object');
  obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';

  if (!obj.isJazz) {
    obj.type = 'audio/x-jazz';
  }

  obj.style.visibility = 'hidden';
  obj.style.width = '0px';
  obj.style.height = '0px';
  appendElement.appendChild(obj);

  if (obj.isJazz) {
    webmidi.storedPlugin = obj;
    return obj;
  } else {
    appendElement.removeChild(obj);
    console.error('Cannot use jazz plugin; install at ' + webmidi.jazzDownloadUrl);
    return undefined;
  }
};
/**
 * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz
 *
 * @function music21.webmidi.createJazzSelector
 * @param {jQuery|Node} [$newSelect=document.body] - object to append the select to
 * @param {Object} [options] - see createSelector for details
 * @returns {Node|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.
 */


webmidi.createJazzSelector = function createJazzSelector($newSelect, options) {
  var params = {};
  __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].merge(params, options);
  var Jazz = webmidi.createPlugin();

  if (Jazz === undefined) {
    return undefined;
  }

  $newSelect.change(function () {
    var selectedInput = __WEBPACK_IMPORTED_MODULE_0_jquery__('#midiInSelect option:selected').text();

    if (selectedInput !== 'None selected') {
      webmidi.selectedJazzInterface = Jazz.MidiInOpen(selectedInput, webmidi.jazzMidiInArrived);
    } else {
      Jazz.MidiInClose();
    }

    if (__WEBPACK_IMPORTED_MODULE_1__debug_js__["a" /* debug */]) {
      console.log('current input changed to: ' + webmidi.selectedInterface);
    }
  });
  var midiOptions = Jazz.MidiInList();
  var noneAppendOption = __WEBPACK_IMPORTED_MODULE_0_jquery__("<option value='None'>None selected</option>");
  $newSelect.append(noneAppendOption);
  var anySelected = false;
  var allAppendOptions = [];

  for (var i = 0; i < midiOptions.length; i++) {
    var $appendOption = __WEBPACK_IMPORTED_MODULE_0_jquery__("<option value='" + midiOptions[i] + "'>" + midiOptions[i] + '</option>');

    if (midiOptions[i] === webmidi.selectedJazzInterface) {
      $appendOption.attr('selected', true);
      anySelected = true;
    }

    allAppendOptions.push($appendOption); // console.log(appendOption);

    $newSelect.append($appendOption);
  }

  if (anySelected === false && midiOptions.length > 0) {
    $newSelect.val(midiOptions[0]);
    allAppendOptions[0].attr('selected', true);
    webmidi.selectedJazzInterface = Jazz.MidiInOpen(midiOptions[0], webmidi.jazzMidiInArrived);
    anySelected = true;
  } else {
    noneAppendOption.attr('selected', true);
  }

  if (params.onsuccess !== undefined) {
    params.onsuccess();
  }

  if (anySelected === true && params.oninputsuccess !== undefined) {
    params.oninputsuccess();
  } else if (anySelected === false && params.oninputempty !== undefined) {
    params.oninputempty();
  }

  return $newSelect;
};
/**
 * Function to be called if the webmidi-api selection changes. (not jazz)
 *
 */


webmidi.selectionChanged = function selectionChanged() {
  var selectedInput = webmidi.$select.val();

  if (selectedInput === webmidi.selectedInputPort) {
    return false;
  }

  var storedStateChange = webmidi.access.onstatechange; // port.close() fires onstatechange, so turn off for a moment.

  webmidi.access.onstatechange = function () {};

  if (__WEBPACK_IMPORTED_MODULE_1__debug_js__["a" /* debug */]) {
    console.log('current input changed to: ' + selectedInput);
  }

  webmidi.selectedInputPort = selectedInput;
  webmidi.access.inputs.forEach(function (port) {
    if (port.name === selectedInput) {
      port.onmidimessage = webmidi.midiInArrived;
    } else {
      port.close();
    }
  });
  webmidi.access.onstatechange = storedStateChange;
  return false;
};
/**
 * Creates a &lt;select&gt; object for selecting among the MIDI choices in Jazz
 *
 * The options object has several parameters:
 *
 * {bool} autoupdate -- should this auto update?
 * {function} onsuccess -- function to call on all successful port queries
 * {function} oninputsuccess -- function to call if successful and at least one input device is found
 * {function} oninputempty -- function to call if successful but no input devices are found.
 * {bool} existingMidiSelect -- is there already a select tag for MIDI?
 *
 * @function music21.webmidi.createSelector
 * @param {jQuery|Node} [$midiSelectDiv=$('body')] - object to append the select to
 * @param {Object} [options] - see above.
 * @returns {Node|undefined} DOM object containing the select tag, or undefined if Jazz cannot be loaded.
 */


webmidi.createSelector = function createSelector($midiSelectDiv, options) {
  var params = {
    autoUpdate: true,
    existingMidiSelect: false
  };
  __WEBPACK_IMPORTED_MODULE_2__common_js__["a" /* common */].merge(params, options);

  if (typeof $midiSelectDiv === 'undefined') {
    $midiSelectDiv = __WEBPACK_IMPORTED_MODULE_0_jquery__('body');
  }

  if ($midiSelectDiv.jquery === undefined) {
    $midiSelectDiv = __WEBPACK_IMPORTED_MODULE_0_jquery__($midiSelectDiv);
  }

  var $newSelect;
  var foundMidiSelects = $midiSelectDiv.find('select#midiInSelect');

  if (foundMidiSelects.length > 0) {
    $newSelect = foundMidiSelects[0];
    params.existingMidiSelect = true;
  } else {
    $newSelect = __WEBPACK_IMPORTED_MODULE_0_jquery__('<select>').attr('id', 'midiInSelect');
    $midiSelectDiv.append($newSelect);
  }

  webmidi.$select = $newSelect;

  if (navigator.requestMIDIAccess === undefined) {
    webmidi.createJazzSelector($newSelect, params);
  } else {
    if (params.existingMidiSelect !== true) {
      $newSelect.change(webmidi.selectionChanged);
    }

    navigator.requestMIDIAccess().then(function (access) {
      webmidi.access = access;
      webmidi.populateSelect();

      if (params.autoUpdate) {
        access.onstatechange = webmidi.populateSelect;
      }

      webmidi.$select.change();

      if (params.onsuccess !== undefined) {
        params.onsuccess();
      }

      if (webmidi.selectedInputPort !== 'None' && params.oninputsuccess !== undefined) {
        params.oninputsuccess();
      } else if (webmidi.selectedInputPort === 'None' && params.oninputempty !== undefined) {
        params.oninputempty();
      }
    }, function (e) {
      $midiSelectDiv.html(e.message);
    });
  }

  __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].clearOldChords(); // starts the chord checking process.

  return $newSelect;
};

webmidi.populateSelect = function populateSelect() {
  var inputs = webmidi.access.inputs;
  webmidi.$select.empty();
  var $noneAppendOption = __WEBPACK_IMPORTED_MODULE_0_jquery__("<option value='None'>None selected</option>");
  webmidi.$select.append($noneAppendOption);
  var allAppendOptions = [];
  var midiOptions = [];
  var i = 0;
  inputs.forEach(function (port) {
    var $appendOption = __WEBPACK_IMPORTED_MODULE_0_jquery__("<option value='" + port.name + "'>" + port.name + '</option>');
    allAppendOptions.push($appendOption);
    midiOptions.push(port.name); // console.log(appendOption);

    webmidi.$select.append($appendOption);
    i += 1;
  });

  if (allAppendOptions.length > 0) {
    webmidi.$select.val(midiOptions[0]);
    allAppendOptions[0].attr('selected', true);
  } else {
    $noneAppendOption.attr('selected', true);
  }

  webmidi.$select.change();
}; // this allows for the deprecated webmidi.callBacks to still work for now.


webmidi.callBacks = __WEBPACK_IMPORTED_MODULE_3__miditools_js__["a" /* miditools */].callBacks;
/**
 * Example smallest usage of the webmidi toolkit.  see testHTML/midiInRequire.html

<html>
<head>
    <title>MIDI In/Jazz Test for Music21j</title>
    <!-- for MSIE 10 on Windows 8 -->
    <meta http-equiv="X-UA-Compatible" content="requiresActiveX=true"/>
    <script data-main="../src/music21.js" src="../ext/require/require.js"></script>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />

    <script>
    var s = "";
    function displayStream(me) {
        me.sendToMIDIjs();
        if (me.noteOn) {
            var m21n = me.music21Note();
            if (s.length > 7) {
                s.elements = s.elements.slice(1)
            }
            s.append(m21n);
            var $svgDiv = $("#svgDiv");
            $svgDiv.empty();
            var svgDiv = s.appendNewDOM($svgDiv);
        }
    }

    require(['music21'], function () {
        s = new music21.stream.Stream();
        music21.webmidi.createSelector($("#putMidiSelectHere"));
        music21.miditools.callBacks.general = displayStream;
    });


    </script>
</head>
<body>
<div>
MIDI Input: <div id="putMidiSelectHere" />
</div>
<div id="svgDiv">
</div>
</body>
</html>
 **/

/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__music21_exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__music21_debug_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__music21_common_js__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__music21_prebase_js__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__music21_base_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__music21_articulations_js__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__music21_audioRecording_js__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__music21_audioSearch_js__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__music21_bar_js__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__music21_beam_js__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__music21_chord_js__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__music21_chordTables_js__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__music21_clef_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__music21_converter_js__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__music21_derivation_js__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__music21_duration_js__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__music21_dynamics_js__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__music21_expressions_js__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__music21_figuredBass_js__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__music21_fromPython_js__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__music21_harmony_js__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__music21_instrument_js__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__music21_interval_js__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__music21_key_js__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__music21_keyboard_js__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__music21_layout_js__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__music21_meter_js__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__music21_miditools_js__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__music21_musicxml_js__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__music21_note_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__music21_pitch_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__music21_renderOptions_js__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__music21_roman_js__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__music21_scale_js__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__music21_sites_js__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__music21_stream_js__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__music21_tempo_js__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__music21_tie_js__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__music21_tinyNotation_js__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__music21_voiceLeading_js__ = __webpack_require__(46);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__music21_vfShow_js__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__music21_webmidi_js__ = __webpack_require__(47);
// order below doesn't matter, but good to give a sense
// of what will be needed by almost everyone, and then
// alphabetical.










































var music21 = {
  common: __WEBPACK_IMPORTED_MODULE_2__music21_common_js__["a" /* common */],
  debug: __WEBPACK_IMPORTED_MODULE_1__music21_debug_js__["a" /* debug */],
  prebase: __WEBPACK_IMPORTED_MODULE_3__music21_prebase_js__["a" /* prebase */],
  base: __WEBPACK_IMPORTED_MODULE_4__music21_base_js__["a" /* base */],
  articulations: __WEBPACK_IMPORTED_MODULE_5__music21_articulations_js__["a" /* articulations */],
  audioRecording: __WEBPACK_IMPORTED_MODULE_6__music21_audioRecording_js__["a" /* audioRecording */],
  audioSearch: __WEBPACK_IMPORTED_MODULE_7__music21_audioSearch_js__["a" /* audioSearch */],
  bar: __WEBPACK_IMPORTED_MODULE_8__music21_bar_js__,
  beam: __WEBPACK_IMPORTED_MODULE_9__music21_beam_js__["a" /* beam */],
  chord: __WEBPACK_IMPORTED_MODULE_10__music21_chord_js__["a" /* chord */],
  chordTables: __WEBPACK_IMPORTED_MODULE_11__music21_chordTables_js__,
  clef: __WEBPACK_IMPORTED_MODULE_12__music21_clef_js__["a" /* clef */],
  converter: __WEBPACK_IMPORTED_MODULE_13__music21_converter_js__,
  derivation: __WEBPACK_IMPORTED_MODULE_14__music21_derivation_js__,
  dynamics: __WEBPACK_IMPORTED_MODULE_16__music21_dynamics_js__["a" /* dynamics */],
  duration: __WEBPACK_IMPORTED_MODULE_15__music21_duration_js__["a" /* duration */],
  exceptions21: __WEBPACK_IMPORTED_MODULE_0__music21_exceptions21_js__,
  expressions: __WEBPACK_IMPORTED_MODULE_17__music21_expressions_js__["a" /* expressions */],
  figuredBass: __WEBPACK_IMPORTED_MODULE_18__music21_figuredBass_js__["a" /* figuredBass */],
  fromPython: __WEBPACK_IMPORTED_MODULE_19__music21_fromPython_js__["a" /* fromPython */],
  harmony: __WEBPACK_IMPORTED_MODULE_20__music21_harmony_js__["a" /* harmony */],
  instrument: __WEBPACK_IMPORTED_MODULE_21__music21_instrument_js__["a" /* instrument */],
  interval: __WEBPACK_IMPORTED_MODULE_22__music21_interval_js__["a" /* interval */],
  key: __WEBPACK_IMPORTED_MODULE_23__music21_key_js__["a" /* key */],
  keyboard: __WEBPACK_IMPORTED_MODULE_24__music21_keyboard_js__["a" /* keyboard */],
  layout: __WEBPACK_IMPORTED_MODULE_25__music21_layout_js__["a" /* layout */],
  meter: __WEBPACK_IMPORTED_MODULE_26__music21_meter_js__["a" /* meter */],
  miditools: __WEBPACK_IMPORTED_MODULE_27__music21_miditools_js__["a" /* miditools */],
  musicxml: __WEBPACK_IMPORTED_MODULE_28__music21_musicxml_js__["a" /* musicxml */],
  note: __WEBPACK_IMPORTED_MODULE_29__music21_note_js__["a" /* note */],
  pitch: __WEBPACK_IMPORTED_MODULE_30__music21_pitch_js__["a" /* pitch */],
  renderOptions: __WEBPACK_IMPORTED_MODULE_31__music21_renderOptions_js__["a" /* renderOptions */],
  roman: __WEBPACK_IMPORTED_MODULE_32__music21_roman_js__["a" /* roman */],
  scale: __WEBPACK_IMPORTED_MODULE_33__music21_scale_js__["a" /* scale */],
  sites: __WEBPACK_IMPORTED_MODULE_34__music21_sites_js__,
  stream: __WEBPACK_IMPORTED_MODULE_35__music21_stream_js__["a" /* stream */],
  tempo: __WEBPACK_IMPORTED_MODULE_36__music21_tempo_js__["a" /* tempo */],
  tie: __WEBPACK_IMPORTED_MODULE_37__music21_tie_js__["a" /* tie */],
  tinyNotation: __WEBPACK_IMPORTED_MODULE_38__music21_tinyNotation_js__["a" /* tinyNotation */],
  voiceLeading: __WEBPACK_IMPORTED_MODULE_39__music21_voiceLeading_js__["a" /* voiceLeading */],
  vfShow: __WEBPACK_IMPORTED_MODULE_40__music21_vfShow_js__["a" /* vfShow */],
  webmidi: __WEBPACK_IMPORTED_MODULE_41__music21_webmidi_js__["a" /* webmidi */]
};
music21.Music21Object = __WEBPACK_IMPORTED_MODULE_4__music21_base_js__["a" /* base */].Music21Object;
/* harmony default export */ __webpack_exports__["default"] = (music21);

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StreamIteratorException", function() { return StreamIteratorException; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StreamIterator", function() { return StreamIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OffsetIterator", function() { return OffsetIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecursiveIterator", function() { return RecursiveIterator; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__exceptions21_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filters_js__ = __webpack_require__(32);
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

// import common from '../common.js';


var StopIterationSingleton = __WEBPACK_IMPORTED_MODULE_1__filters_js__["StopIterationSingleton"];
var StreamIteratorException =
/*#__PURE__*/
function (_StreamException) {
  _inherits(StreamIteratorException, _StreamException);

  function StreamIteratorException() {
    _classCallCheck(this, StreamIteratorException);

    return _possibleConstructorReturn(this, _getPrototypeOf(StreamIteratorException).apply(this, arguments));
  }

  return StreamIteratorException;
}(__WEBPACK_IMPORTED_MODULE_0__exceptions21_js__["StreamException"]);
var StreamIterator =
/*#__PURE__*/
function () {
  function StreamIterator(srcStream) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$filterList = _ref.filterList,
        filterList = _ref$filterList === void 0 ? [] : _ref$filterList,
        _ref$restoreActiveSit = _ref.restoreActiveSites,
        restoreActiveSites = _ref$restoreActiveSit === void 0 ? true : _ref$restoreActiveSit,
        _ref$activeInformatio = _ref.activeInformation,
        activeInformation = _ref$activeInformatio === void 0 ? undefined : _ref$activeInformatio,
        _ref$ignoreSorting = _ref.ignoreSorting,
        ignoreSorting = _ref$ignoreSorting === void 0 ? false : _ref$ignoreSorting;

    _classCallCheck(this, StreamIterator);

    if (!ignoreSorting && !srcStream.isSorted && srcStream.autoSort) {
      srcStream.sort();
    }

    this.srcStream = srcStream;
    this.index = 0;
    this.srcStreamElements = srcStream.elements;
    this.streamLength = this.srcStreamElements.length;
    this.iterSection = '_elements';
    this.cleanupOnStop = false;
    this.restoreActiveSites = restoreActiveSites;
    this.overrideDerivation = undefined;

    if (!Array.isArray(filterList)) {
      filterList = [filterList];
    }

    this.filters = filterList;
    /**
     *
     * @type {number|undefined}
     * @private
     */

    this._len = undefined;
    /**
     *
     * @type {music21.base.Music21Object[]|undefined}
     * @private
     */

    this._matchingElements = undefined;
    this.sectionIndex = 0; // no endElements yet...

    if (activeInformation === undefined) {
      this.activeInformation = {};
      this.updateActiveInformation();
    } else {
      this.activeInformation = activeInformation;
    }
  }

  _createClass(StreamIterator, [{
    key: Symbol.iterator,
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function value() {
      var e, matches;
      return regeneratorRuntime.wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              this.reset();

            case 1:
              if (!(this.index < this.streamLength)) {
                _context.next = 22;
                break;
              }

              this.index += 1;
              e = void 0;
              _context.prev = 4;
              e = this.srcStreamElements[this.index - 1];
              _context.next = 11;
              break;

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](4);
              return _context.abrupt("continue", 1);

            case 11:
              matches = this.matchesFilters(e);

              if (!(matches === false)) {
                _context.next = 14;
                break;
              }

              return _context.abrupt("continue", 1);

            case 14:
              if (!(matches === StopIterationSingleton)) {
                _context.next = 16;
                break;
              }

              return _context.abrupt("break", 22);

            case 16:
              if (this.restoreActiveSites) {
                e.activeSite = this.srcStream;
              }

              this.updateActiveInformation();
              _context.next = 20;
              return e;

            case 20:
              _context.next = 1;
              break;

            case 22:
              this.cleanup();

            case 23:
            case "end":
              return _context.stop();
          }
        }
      }, value, this, [[4, 8]]);
    })
  }, {
    key: "get",
    value: function get(k) {
      var fe = this.matchingElements();

      if (k < 0) {
        k = fe.length + k;
      }

      return fe[k];
    }
  }, {
    key: "updateActiveInformation",
    value: function updateActiveInformation() {
      var ai = this.activeInformation;
      ai.stream = this.srcStream;
      ai.index = this.index - 1;
      ai.iterSection = this.iterSection;
      ai.sectionIndex = this.sectionIndex;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.index = 0;
      this.iterSection = '_elements';
      this.updateActiveInformation();
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.filters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var f = _step.value;

          if (f.reset !== undefined) {
            f.reset();
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: "resetCaches",
    value: function resetCaches() {
      this._len = undefined;
      this._matchingElements = undefined;
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      if (this.cleanupOnStop) {
        this.reset();
        this.srcStream = undefined;
        this.srcStreamElements = [];
      }
    }
  }, {
    key: "matchingElements",
    value: function matchingElements() {
      if (this._matchingElements !== undefined) {
        return this._matchingElements;
      }

      var savedIndex = this.index;
      var savedRestoreActiveSites = this.restoreActiveSites;
      this.restoreActiveSites = true;
      var me = []; // matching elements

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var e = _step2.value;
          me.push(e);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
            _iterator2["return"]();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      this.reset();
      this.index = savedIndex;
      this.restoreActiveSites = savedRestoreActiveSites;
      this._matchingElements = me;
      return me;
    }
  }, {
    key: "matchesFilters",
    value: function matchesFilters(e) {
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.filters[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var f = _step3.value;
          var ret = f.call(e, this);

          if (ret === false) {
            return false; // must === false;
          }

          if (ret === StopIterationSingleton) {
            return ret;
          }
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
            _iterator3["return"]();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      return true;
    }
  }, {
    key: "stream",
    value: function stream() {
      var ss = this.srcStream; // let clearIsSorted = false;

      var found = ss.clone(false);
      found.elements = []; // derivation;

      var fe = this.matchingElements();
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = fe[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var e = _step4.value;
          var o = ss.elementOffset(e, {
            stringReturns: true
          }); // try: getOffsetInHierarchy...
          // string returns;

          found.insert(o, e);
        } // if (fe.length) {
        //     found.coreElementsChanged()
        // }

      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
            _iterator4["return"]();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return found;
    }
  }, {
    key: "addFilter",
    value: function addFilter(newFilter) {
      var _iteratorNormalCompletion5 = true;
      var _didIteratorError5 = false;
      var _iteratorError5 = undefined;

      try {
        for (var _iterator5 = this.filters[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
          var f = _step5.value;

          if (newFilter === f) {
            return this; // will not work... because == overrides.
          }
        }
      } catch (err) {
        _didIteratorError5 = true;
        _iteratorError5 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
            _iterator5["return"]();
          }
        } finally {
          if (_didIteratorError5) {
            throw _iteratorError5;
          }
        }
      }

      this.filters.push(newFilter);
      this.resetCaches();
      return this;
    }
  }, {
    key: "removeFilter",
    value: function removeFilter(oldFilter) {
      var index = this.filters.indexOf(oldFilter);

      if (index !== -1) {
        this.filters.splice(index, 1);
      }

      this.resetCaches();
      return this;
    } // getElementById(elementId) {
    //
    // }

  }, {
    key: "getElementsByClass",
    value: function getElementsByClass(classFilterList) {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"](classFilterList));
    }
  }, {
    key: "getElementsNotOfClass",
    value: function getElementsNotOfClass(classFilterList) {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassNotFilter"](classFilterList));
    } // getElementsByGroup;
    // getElementsByOffset;

  }, {
    key: "getElementsByOffset",
    value: function getElementsByOffset() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return this.addFilter(_construct(__WEBPACK_IMPORTED_MODULE_1__filters_js__["OffsetFilter"], args));
    }
  }, {
    key: "length",
    get: function get() {
      if (this._len !== undefined) {
        return this._len;
      }

      this._len = this.matchingElements().length;
      this.reset();
      return this._len;
    }
  }, {
    key: "activeElementList",
    get: function get() {
      return this.activeInformation.stream[this.activeInformation.iterSection];
    }
  }, {
    key: "notes",
    get: function get() {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"]('NotRest'));
    }
  }, {
    key: "notesAndRests",
    get: function get() {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"]('GeneralNote'));
    }
  }, {
    key: "parts",
    get: function get() {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"]('Part'));
    }
  }, {
    key: "spanners",
    get: function get() {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"]('Spanner'));
    }
  }, {
    key: "voices",
    get: function get() {
      return this.addFilter(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"]('Voice'));
    }
  }]);

  return StreamIterator;
}();
var OffsetIterator =
/*#__PURE__*/
function (_StreamIterator) {
  _inherits(OffsetIterator, _StreamIterator);

  function OffsetIterator(srcStream) {
    var _this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, OffsetIterator);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(OffsetIterator).call(this, srcStream, options));
    _this.nextToYield = [];
    _this.nextOffsetToYield = undefined;
    return _this;
  }

  _createClass(OffsetIterator, [{
    key: Symbol.iterator,
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function value() {
      var e, matches, yieldEls, eOffset, forwardIndex, nextE, nextOffset, _i, _yieldEls, el;

      return regeneratorRuntime.wrap(function value$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              this.reset();
              this.sort();

            case 2:
              if (!(this.index < this.streamLength)) {
                _context2.next = 47;
                break;
              }

              this.index += 1;
              e = void 0;
              _context2.prev = 5;
              e = this.srcStreamElements[this.index - 1];
              _context2.next = 12;
              break;

            case 9:
              _context2.prev = 9;
              _context2.t0 = _context2["catch"](5);
              return _context2.abrupt("continue", 2);

            case 12:
              matches = this.matchesFilters(e);

              if (!(matches === false)) {
                _context2.next = 15;
                break;
              }

              return _context2.abrupt("continue", 2);

            case 15:
              if (!(matches === StopIterationSingleton)) {
                _context2.next = 17;
                break;
              }

              return _context2.abrupt("break", 47);

            case 17:
              yieldEls = [e];
              eOffset = this.elementOffset(e);
              forwardIndex = this.index;

            case 20:
              if (!(forwardIndex < this.streamLength)) {
                _context2.next = 41;
                break;
              }

              nextE = void 0;
              _context2.prev = 22;
              nextE = this.srcStreamElements[this.index - 1];
              _context2.next = 29;
              break;

            case 26:
              _context2.prev = 26;
              _context2.t1 = _context2["catch"](22);
              return _context2.abrupt("continue", 38);

            case 29:
              nextOffset = this.elementOffset(nextE);

              if (!(nextOffset !== eOffset)) {
                _context2.next = 34;
                break;
              }

              this.nextToYield = [nextE];
              this.nextOffsetToYield = nextOffset;
              return _context2.abrupt("break", 41);

            case 34:
              if (this.matchesFilters(nextE)) {
                _context2.next = 36;
                break;
              }

              return _context2.abrupt("continue", 38);

            case 36:
              yieldEls.push(e);
              this.index = forwardIndex;

            case 38:
              forwardIndex++;
              _context2.next = 20;
              break;

            case 41:
              if (this.restoreActiveSites) {
                for (_i = 0, _yieldEls = yieldEls; _i < _yieldEls.length; _i++) {
                  el = _yieldEls[_i];
                  el.activeSite = this.srcStream;
                }
              }

              this.updateActiveInformation();
              _context2.next = 45;
              return yieldEls;

            case 45:
              _context2.next = 2;
              break;

            case 47:
              this.cleanup();

            case 48:
            case "end":
              return _context2.stop();
          }
        }
      }, value, this, [[5, 9], [22, 26]]);
    })
  }, {
    key: "reset",
    value: function reset() {
      _get(_getPrototypeOf(OffsetIterator.prototype), "reset", this).call(this);

      this.nextToYield = [];
      this.nextOffsetToYield = undefined;
    }
  }]);

  return OffsetIterator;
}(StreamIterator);
var RecursiveIterator =
/*#__PURE__*/
function (_StreamIterator2) {
  _inherits(RecursiveIterator, _StreamIterator2);

  function RecursiveIterator(srcStream) {
    var _this2;

    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        filterList = _ref2.filterList,
        restoreActiveSites = _ref2.restoreActiveSites,
        activeInformation = _ref2.activeInformation,
        _ref2$streamsOnly = _ref2.streamsOnly,
        streamsOnly = _ref2$streamsOnly === void 0 ? false : _ref2$streamsOnly,
        _ref2$includeSelf = _ref2.includeSelf,
        includeSelf = _ref2$includeSelf === void 0 ? false : _ref2$includeSelf,
        ignoreSorting = _ref2.ignoreSorting;

    _classCallCheck(this, RecursiveIterator);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(RecursiveIterator).call(this, srcStream, {
      filterList: filterList,
      restoreActiveSites: restoreActiveSites,
      activeInformation: activeInformation,
      ignoreSorting: ignoreSorting
    }));
    _this2.returnSelf = includeSelf;
    _this2.includeSelf = includeSelf;
    _this2.ignoreSorting = ignoreSorting;
    _this2.iteratorStartOffsetInHierarchy = 0.0;

    if (streamsOnly) {
      _this2.filters.push(new __WEBPACK_IMPORTED_MODULE_1__filters_js__["ClassFilter"]('Stream'));
    }
    /**
     *
     * @type {RecursiveIterator|undefined}
     */


    _this2.childRecursiveIterator = undefined;
    return _this2;
  }

  _createClass(RecursiveIterator, [{
    key: "reset",
    value: function reset() {
      this.returnSelf = this.includeSelf;
      this.childRecursiveIterator = undefined;
      this.activeInformation.lastYielded = undefined;

      _get(_getPrototypeOf(RecursiveIterator.prototype), "reset", this).call(this);
    }
  }, {
    key: Symbol.iterator,
    value:
    /*#__PURE__*/
    regeneratorRuntime.mark(function value() {
      var e, newStartOffset, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, _e;

      return regeneratorRuntime.wrap(function value$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              this.reset(); // in __iter__.

              if (!(this.returnSelf && this.matchesFilters(this.srcStream))) {
                _context3.next = 10;
                break;
              }

              this.activeInformation.stream = undefined;
              this.activeInformation.index = -1;
              this.activeInformation.lastYielded = this.srcStream;
              this.returnSelf = false;
              _context3.next = 8;
              return this.srcStream;

            case 8:
              _context3.next = 11;
              break;

            case 10:
              if (this.returnSelf) {
                // did not match filters...
                this.returnSelf = false;
              }

            case 11:
              if (!(this.index < this.streamLength)) {
                _context3.next = 55;
                break;
              }

              this.index += 1;
              e = this.srcStreamElements[this.index - 1];

              if (!(e === undefined)) {
                _context3.next = 16;
                break;
              }

              return _context3.abrupt("continue", 11);

            case 16:
              if (!this.matchesFilters(e)) {
                _context3.next = 22;
                break;
              }

              if (this.restoreActiveSites) {
                e.activeSite = this.srcStream;
              }

              this.updateActiveInformation();
              this.activeInformation.lastYielded = e;
              _context3.next = 22;
              return e;

            case 22:
              if (!e.isStream) {
                _context3.next = 53;
                break;
              }

              this.childRecursiveIterator = new RecursiveIterator(e, {
                restoreActiveSites: this.restoreActiveSites,
                filterList: this.filters,
                // shared list
                activeInformation: this.activeInformation,
                // shared
                includeSelf: false,
                ignoreSorting: this.ignoreSorting // parentIterator: this,
                //

              });
              newStartOffset = this.iteratorStartOffsetInHierarchy + this.srcStream.elementOffset(e);
              this.childRecursiveIterator.iteratorStartOffsetInHierarchy = newStartOffset;
              _iteratorNormalCompletion6 = true;
              _didIteratorError6 = false;
              _iteratorError6 = undefined;
              _context3.prev = 29;
              _iterator6 = this.childRecursiveIterator[Symbol.iterator]();

            case 31:
              if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {
                _context3.next = 38;
                break;
              }

              _e = _step6.value;
              _context3.next = 35;
              return _e;

            case 35:
              _iteratorNormalCompletion6 = true;
              _context3.next = 31;
              break;

            case 38:
              _context3.next = 44;
              break;

            case 40:
              _context3.prev = 40;
              _context3.t0 = _context3["catch"](29);
              _didIteratorError6 = true;
              _iteratorError6 = _context3.t0;

            case 44:
              _context3.prev = 44;
              _context3.prev = 45;

              if (!_iteratorNormalCompletion6 && _iterator6["return"] != null) {
                _iterator6["return"]();
              }

            case 47:
              _context3.prev = 47;

              if (!_didIteratorError6) {
                _context3.next = 50;
                break;
              }

              throw _iteratorError6;

            case 50:
              return _context3.finish(47);

            case 51:
              return _context3.finish(44);

            case 52:
              this.childRecursiveIterator = undefined;

            case 53:
              _context3.next = 11;
              break;

            case 55:
              this.activeInformation.lastYielded = undefined;
              this.cleanup();

            case 57:
            case "end":
              return _context3.stop();
          }
        }
      }, value, this, [[29, 40, 44, 52], [45,, 47, 51]]);
    })
  }, {
    key: "matchingElements",
    value: function matchingElements() {
      // none of this may be necessary in JavaScript,
      // but perhaps if called during iteration.
      var savedRecursiveIterator = this.childRecursiveIterator;

      var fe = _get(_getPrototypeOf(RecursiveIterator.prototype), "matchingElements", this).call(this);

      this.childRecursiveIterator = savedRecursiveIterator;
      return fe;
    }
    /**
     *   Returns a stack of RecursiveIterators at this point in the iteration.
     *   Last is most recent.
     *
     *   @returns {RecursiveIterator[]}
     */

  }, {
    key: "iteratorStack",
    value: function iteratorStack() {
      /**
       *
       * @type {RecursiveIterator[]}
       */
      var iterStack = [this];
      var x = this;

      while (x.childRecursiveIterator !== undefined) {
        x = x.childRecursiveIterator;
        iterStack.push(x);
      }

      return iterStack;
    }
    /**
     *   Returns a stack of Streams at this point.  Last is most recent.
     */

  }, {
    key: "streamStack",
    value: function streamStack() {
      return this.iteratorStack().map(function (iter) {
        return iter.srcStream;
      });
    }
    /**
     *  Called on the current iterator, returns the current offset
     *  in the hierarchy. or undefined if we are not currently iterating.
     */

  }, {
    key: "currentHierarchyOffset",
    value: function currentHierarchyOffset() {
      var lastYield = this.activeInformation.lastYielded;

      if (lastYield === undefined) {
        return undefined;
      }

      var iteratorStack = this.iteratorStack();
      var newestIterator = iteratorStack[iteratorStack.length - 1];
      var lastStream = newestIterator.srcStream;
      var lastStartOffset = newestIterator.iteratorStartOffsetInHierarchy;

      if (lastYield === lastStream) {
        return lastStartOffset;
      } else {
        return lastStartOffset + lastStream.elementOffset(lastYield);
      }
    } // TODO(msc): getElementsByOffsetInHierarchy

  }]);

  return RecursiveIterator;
}(StreamIterator);

/***/ })
/******/ ]);
});
//# sourceMappingURL=music21.debug.js.map