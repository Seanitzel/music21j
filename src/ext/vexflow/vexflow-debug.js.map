{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b2705c49ef6a4f9d69fb","webpack:///./src/vex.js","webpack:///./src/tables.js","webpack:///./src/glyph.js","webpack:///./src/element.js","webpack:///./src/modifier.js","webpack:///./src/stavenote.js","webpack:///./src/note.js","webpack:///./src/stavemodifier.js","webpack:///./src/fraction.js","webpack:///./src/stem.js","webpack:///./src/boundingbox.js","webpack:///./src/formatter.js","webpack:///./src/voice.js","webpack:///./src/tickcontext.js","webpack:///./src/renderer.js","webpack:///./src/beam.js","webpack:///./src/stavetie.js","webpack:///./src/articulation.js","webpack:///./src/tuplet.js","webpack:///./src/staveconnector.js","webpack:///./src/stemmablenote.js","webpack:///./src/dot.js","webpack:///./src/modifiercontext.js","webpack:///./src/frethandfinger.js","webpack:///./src/accidental.js","webpack:///./src/music.js","webpack:///./src/notesubgroup.js","webpack:///./src/gracenotegroup.js","webpack:///./src/tabtie.js","webpack:///./src/stringnumber.js","webpack:///./src/annotation.js","webpack:///./src/bend.js","webpack:///./src/vibrato.js","webpack:///./src/stave.js","webpack:///./src/stavebarline.js","webpack:///./src/textnote.js","webpack:///./src/clef.js","webpack:///./src/timesignature.js","webpack:///./src/tabnote.js","webpack:///./src/registry.js","webpack:///./src/fonts/vexflow_font.js","webpack:///./src/notehead.js","webpack:///./src/tickable.js","webpack:///./src/strokes.js","webpack:///./src/ornament.js","webpack:///./src/staverepetition.js","webpack:///./src/keysignature.js","webpack:///./src/stavevolta.js","webpack:///./src/tabstave.js","webpack:///./src/vibratobracket.js","webpack:///./src/clefnote.js","webpack:///./src/timesignote.js","webpack:///./src/gracenote.js","webpack:///./src/curve.js","webpack:///./src/textdynamics.js","webpack:///./src/staveline.js","webpack:///./src/pedalmarking.js","webpack:///./src/textbracket.js","webpack:///./src/barnote.js","webpack:///./src/ghostnote.js","webpack:///./src/system.js","webpack:///./src/factory.js","webpack:///./src/easyscore.js","webpack:///./src/parser.js","webpack:///./src/index.js","webpack:///./src/boundingboxcomputation.js","webpack:///./src/canvascontext.js","webpack:///./src/raphaelcontext.js","webpack:///./src/svgcontext.js","webpack:///./src/stavesection.js","webpack:///./src/stavetempo.js","webpack:///./src/stavetext.js","webpack:///./src/tabslide.js","webpack:///./src/gracetabnote.js","webpack:///./src/tuning.js","webpack:///./src/keymanager.js","webpack:///./src/stavehairpin.js","webpack:///./src/tremolo.js","webpack:///./src/crescendo.js"],"names":["Vex","L","block","args","line","Array","prototype","slice","call","join","window","console","log","MakeException","name","exception","message","data","Error","RuntimeError","code","RERR","Merge","destination","source","property","Min","Math","min","Max","max","forEach","a","fn","i","length","RoundN","x","n","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","newArr","last","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","s","f","start_time","Date","getTime","elapsed","StackTrace","err","stack","W","Prefix","prefix","text","Flow","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","line_shift","keyProperties","key","params","undefined","options","octave_shift","pieces","split","k","toUpperCase","value","note_values","octave","base_index","index","stroke","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","rest","integerToNote","integer","noteValue","table","tabToGlyph","fret","scale","glyph","width","shift_y","toString","glyphMetrics","getMetrics","height","textWidth","getWidth","articulationCodes","articulations","artic","between_lines","accidentalCodes","accidentals","acc","parenRightPaddingAdjustment","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","keySignature","keySpec","keySpecs","spec","notes","accidentalList","acc_list","num","type","unicode","String","fromCharCode","patterns","parseNoteDurationString","durationString","regexp","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","parse","durationToNumber","durationToGlyph","duration_codes","glyphTypeProperties","common","code_head","stem","stem_offset","flag","stem_up_extension","stem_down_extension","gracenote_stem_up_extension","gracenote_stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","TIME4_4","num_beats","beat_value","resolution","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","q","Glyph","font","cache","glyphs","x_min","x_max","ha","o","cached_outline","x_pos","y_pos","point","val","nocache","metrics","loadMetrics","renderOutline","moveTo","m","bind","l","lineTo","quadraticCurveTo","bezierCurveTo","bboxComp","addPoint","addQuadraticCurve","addBezierCurve","x1","y1","setAttribute","x_shift","y_shift","originShift","setOptions","reset","stave","bbox","getOutlineBoundingBox","getW","getH","abs","getX","xShift","getY","yShift","setOriginX","setOriginY","setRendered","applyStyle","restoreStyle","checkContext","context","getYForGlyphs","Element","ID","attrs","id","newID","el","classes","boundingBox","rendered","getDefaultRegistry","register","style","getStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","className","registry","onUpdate","getAttribute","oldValue","Modifier","LEFT","RIGHT","ABOVE","BELOW","above","Position","below","left","right","note","text_line","modifier_context","spacingFromNextModifier","CATEGORY","c","PositionString","StaveNote","DEBUG","getStemAdjustment","WIDTH","getStemDirection","isInnerNoteIndex","UP","keyProps","shiftRestVertical","dir","delta","isrest","maxLine","minLine","setKeyLine","getKeyLine","centerRest","noteU","noteL","state","getStave","formatByY","notesList","getKeyProps","minL","stemDirection","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","isRest","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","voices","noteM","voiceXShift","stemDelta","lineSpacing","setStemLength","setXShift","restHeight","space","hasStave","topNote","bottomNote","DOWN","topKeys","bottomKeys","HALF_NOTEHEAD_HEIGHT","topNotBottomY","getYForLine","bottomNoteTopY","areNotesColliding","right_shift","postFormat","noteStruct","keys","beam","noteType","JSON","stringify","use_default_head_x","note_heads","modifiers","render_options","glyph_font_scale","stroke_px","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","auto_stem","autoStem","setStemDirection","stem_direction","buildFlag","noteHeadStyles","map","noteHead","buildNoteHeads","setStyle","head","setStave","calcExtraPx","getGlyph","yExtend","setStem","hide","getKeys","lastLine","lineDiff","start","end","step","noteProps","notehead","note_type","custom_glyph_code","MIDDLE_LINE","decider","Infinity","preFormatted","w","modLeftPx","extraLeftPx","getAbsoluteX","minY","maxY","halfLineSpacing","getSpacingBetweenLines","ys","frac","equals","getStemExtents","baseY","topY","yy","isTopNote","resultLine","thisLine","getCenterGlyphX","textLine","extents","getYForTopText","annotation_spacing","setYs","getNoteHeadBounds","y_top","y_bottom","setYBounds","tieStartX","getGlyphWidth","extraRightPx","modifierContext","getExtraRightPx","tieEndX","restLine","top","bot","hasFlag","getStem","ledgerLineStyle","flagStyle","mContext","setModifierContext","addModifier","setPreFormatted","modifier","setNote","setIndex","articulation","annotation","dot","setDotShiftY","addDot","getModifiers","setExtraLeftPx","setExtraRightPx","preFormat","setWidth","yTop","yBottom","nonDisplacedX","displacedX","highestLine","getNumLines","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","getLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","xBegin","getNoteHeadBeginX","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getLedgerLineStyle","getYForNote","openGroup","getIndex","noteheadStyle","setContext","draw","closeGroup","shouldRenderFlag","noteStemHeight","getHeight","flagX","getStemX","flagY","pointerBBox","getFlagStyle","render","stemStruct","shouldRenderStem","hasStem","setX","stemX","setNoteHeadXBounds","isChord","drawLedgerLines","drawStem","drawNoteHeads","drawFlag","drawModifiers","Note","yPos","xStart","xPre1","xAbs","xPost1","noteWidth","xPost2","xEnd","modRightPx","xFreedomRight","getFormatterMetrics","freedom","xWidth","setFont","fillText","round","getXShift","x2","formatterMetrics","iterations","spaceDeviation","deviation","note_struct","initData","duration_override","setDuration","setIntrinsicTicks","positions","playNote","tickContext","ignore_ticks","left_modPx","right_modPx","voice","align_center","setCenterAlignment","stave_padding","STAVEPADDING","tc","mc","left_shift","getNoteStartX","isCenterAligned","getCenterXShift","extra","getExtraPx","StaveModifier","BEGIN","END","padding","renderToStave","setYShift","Fraction","t","GCD","LCM","arg0","shift","LCMM","numerator","denominator","set","u","d","gcd","param1","param2","otherNumerator","otherDenominator","lcm","compare","__compareA","copy","simplify","__compareB","subtract","greaterThanEquals","greaterThan","floor","__tmp","quotient","fraction","toSimplifiedString","str","Stem","x_begin","x_end","stem_extension","isStemlet","stemletHeight","renderHeightAdjustment","direction","ext","HEIGHT","isStemUp","stemHeight","innerMostNoteheadY","outerMostNoteheadY","stemTipY","isVisible","stem_x","stem_y","stemletYOffset","BoundingBox","that","h","new_x","new_y","new_w","new_h","rect","Formatter","lookAhead","nextRestLine","shouldIgnoreTicks","getLineForRest","createContexts","ContextType","addToContext","totalTicks","getTotalTicks","resolutionMultiplier","reduce","getMode","Mode","STRICT","isComplete","getResolutionMultiplier","tickToContextMap","tickList","contexts","ticksUsed","getTickables","integerTicks","newContext","tickable","add","getTicks","array","list","paddingBetween","addToModifierContext","tick","addTickable","formatter","xPos","y2","contextGaps","fillRect","gaps","gap","total","lossHistory","loss","auto_beam","align_rests","setMode","SOFT","addTickables","beams","applyAndGetBeams","joinVoices","formatToStave","getBoundingBox","tabstave","tabnotes","autobeam","opts","notevoice","tabvoice","alignAllNotes","alignTuplets","tuplet","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","AlignRestsToNotes","createTickContexts","contextList","contextMap","tContexts","getTicksUsed","clone","justifyWidth","renderingContext","centerX","remainingX","leftoverPxPerTick","spaceAccum","prevTick","tickSpace","getCenterAlignedTickables","center_x_shift","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","durationStats","updateStats","stats","mean","count","leftNoteEdge","rightNote","rightMetrics","rightNoteEdge","used","totalDeviation","pow","totalCost","sqrt","sum","means","move","current","prev","next","nextContext","cost","minShift","postFormatContexts","createModifierContexts","alignRests","getNoteEndX","format","Voice","FULL","time","match","tickables","smallestTickCount","largestTickWidth","mode","voiceGroup","bb","mergeWith","g","strict","lessThan","setVoice","tickable_bb","TickContext","tContext","indexOf","currentTick","maxTicks","minTicks","notePx","filter","extraLeft","extraRight","setTickContext","postFormatted","lastContext","Renderer","elementId","backend","background","renderer","resize","setBackgroundFillStyle","buildContext","Backends","CANVAS","RAPHAEL","SVG","USE_CANVAS_PROXY","methodNames","vexFlowCanvasContext","methodName","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","cos","ny","sin","VML","NONE","element","paper","bolsterCanvasContext","devicePixelRatio","calculateStemDirection","lineSum","keyProp","getStemSlope","firstNote","lastNote","firstStemTipY","firstStemX","lastStemTipY","lastStemX","Beam","time_sig","defaults","groups","beatTotal","beatValue","tripleMeter","group","generateBeams","config","tickGroups","multiply","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","vf_notes","memo","nextTickGroup","createGroups","nextGroup","unprocessedNote","ticksPerGroup","unbeamable","pop","getBeamGroups","beamable","getIntrinsicTicks","sanitizeGroups","sanitizedGroups","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","currentDirection","isUnbeamableDuration","shouldBreak","formatStems","findFirstNote","applyStemDirection","getTuplets","uniqueTuplets","beamedNoteGroups","allTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","setBracketed","getCategory","stem_weight","setBeam","getBeamCount","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","partial_beam_length","min_flat_beam_offset","beamCounts","maxBeamCount","beamCount","indices","first_x_px","first_y_px","slope","initialSlope","increment","minCost","Number","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","getSlopeY","diff","idealSlope","distanceFromIdeal","extremeY","extremeBeamCount","currentExtreme","getYs","offset","beamWidth","extremeTest","newOffset","beamedStemTipY","preBeamExtension","getExtension","beamExtension","setExtension","totalBeamWidth","setVisibility","setStemlet","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","note_gets_beam","next_note","beam_next","last_beam","valid_beam_durations","beamY","beamThickness","beamLines","getBeamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","calculateFlatSlope","calculateSlope","applyStemExtensions","drawStems","drawBeamLines","StaveTie","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","family","size","setNotes","first_note","last_note","first_indices","last_indices","first_ys","last_ys","last_x_px","cp_x","last_y_px","isNaN","top_cp_y","bottom_cp_y","center_x","measureText","getTieRightX","getTieStartX","getTieLeftX","getTieEndX","renderTie","renderText","Articulation","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","snapLineToStaff","canSitBetweenLines","offsetDirection","snappedLine","canSnapToStaffSpace","onStaffLine","HALF_STAFF_SPACE","getTopY","stemBaseY","getBottomY","getYForBottomText","getInitialOffset","isOnStemTip","isAbove","getPosition","isBelow","margin","getIncrement","setTextLine","top_text_line","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","trim","getFactory","font_scale","staffSpace","isTab","getModifierStartXY","shouldSitOutsideStaff","initialOffset","setOrigin","INITIAL_OFFSET","noteLine","distanceFromNote","articLine","Tuplet","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","some","ratioed","location","resolveGlyphs","attach","setTuplet","resetTuplet","msg","warn","getNotesOccupied","beats","setNotesOccupied","detach","num_glyphs","denom_glyphs","maxTupletCount","countTuplets","minTupletCount","tupletStack","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","y_offset","top_y","bottom_y","getYPosition","addGlyphWidth","notation_center_x","notation_start_x","line_width","x_offset","colon_x","colon_radius","drawBoldDoubleLine","topX","botY","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","thickLineOffset","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","DOUBLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","top_stave","bottom_stave","thickness","weight","texts","typeString","content","shift_x","isRightSidedConnector","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","renderGlyph","text_width","getBottomLineY","StemmableNote","stemExtensionOverride","flagCode","getStemExtension","setDirection","getExtents","stem_struct","Dot","dot_spacing","dot_list","getNote","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","radius","lineSpace","spacing_between_lines_px","ModifierContext","spacing","PREFORMAT","POSTFORMAT","formatted","extra_left_px","extra_right_px","FretHandFinger","nums","num_spacing","nums_list","prev_note","shiftLeft","shiftRight","pos","props_tmp","getExtraLeftPx","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","number","finger","dot_x","dot_y","Accidental","noteheadAccidentalPadding","leftShift","accidentalSpacing","accList","propsTemp","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","scaleMap","createScaleMap","modifiedPitches","processNote","keyString","keyIndex","getNoteParts","accidentalString","pitch","root","sameAccidental","previouslyModified","addAccidental","getGraceNotes","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","fontScale","parenWidth","accX","accY","Music","NUM_TONES","interval","isValidNoteValue","noteString","toLowerCase","regex","noteValues","intervalString","intervals","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","parts","rootValue","getNoteValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","getKeyParts","scaleName","scaleTypes","keySigString","getScaleTones","noteLocation","root_indices","roots","rootName","noteName","getRelativeNoteName","major","dorian","mixolydian","minor","scales","root_index","NoteSubGroup","subNotes","subNote","setStrict","getMinTotalWidth","alignSubNotesWithNote","getTickContext","extraPx","getSpacingFromNextModifier","tick_context","GraceNoteGroup","gracenote_groups","group_spacing_stave","group_spacing_tab","group_list","gracenote_group","is_stavenote","group_shift","formatWidth","setSpacingFromNextModifier","grace_notes","show_slur","slur","slur_y_shift","alignGraceNotesWithNote","graceNote","TieClass","TabTie","StringNumber","shift_left","num_shiftL","num_shiftR","x_widthL","x_widthR","num_width","string_number","dashed","leg","LineEndType","line_space","stem_ext","bottom","STEM_DOWN","lineCap","drawDashedLine","len","pattern","Annotation","annotations","CENTER","CENTER_STEM","Justify","center","centerStem","TOP","BOTTOM","VerticalJustify","justification","vert_justification","just","VerticalJustifyString","JustifyString","text_height","has_stem","stem_base","yt","yb","Bend","bends","last_width","bend","release","phrase","line_style","bend_width","release_width","updateWidth","measure_text","total_width","additional_width","draw_width","bend_height","annotation_y","renderBend","cp_y","renderRelease","renderArrowHead","setRawFont","render_x","last_bend","last_drawn_width","Vibrato","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vx","vy","renderVibrato","num_waves","Stave","start_x","end_x","measure","vertical_bar_width","glyph_spacing_px","num_lines","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","bounds","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","mod","begBarline","getType","REPEAT_BEGIN","number_t","section","tempo","score_bottom","headroom","setPosition","setType","clefSpec","clefs","addClef","setClef","cancelKeySpec","keySignatures","addKeySignature","setKeySig","setKeySignature","timeSpec","customPadding","timeSignatures","addTimeSignature","setTimeSig","setTimeSignature","category","items","order","temp","endBarline","begModifiers","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","splice","getPadding","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","Barline","REPEAT_END","REPEAT_BOTH","repeatBegin","repeatEnd","repeatBoth","TYPE","widths","paddings","setPadding","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","TextNote","text_struct","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","Justification","Clef","sizes","attachments","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","setPoint","placeGlyphOnLine","assertIsValidFraction","numbers","TimeSignature","topLine","bottomLine","timeSig","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","xMin","topStartX","botStartX","parseTimeSpec","getUnusedStringGroups","strings_used","stem_through","string","is_used","getPartialStemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","containsLastString","strings","containsFirstString","line_ys","isTopBound","isBottomBound","TabNote","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","stem_extension_override","getStemY","note_glyph_width","stemUpLine","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","tab_x","clearRect","render_stem","drawPositions","drawStemThrough","X","setIndexValue","elem","Registry","clear","class","INDEXES","updateIndex","onRegister","attrName","Object","getElementsByAttribute","includes","concat","defaultRegistry","Font","NoteHead","drawSlashNoteHead","staveSpace","breve_lines","head_options","STEM_UP","glyph_code","custom_glyph","slashed","displacementStemAdjustment","half_spacing","min_y","setY","head_x","Tickable","intrinsicTicks","tickMultiplier","noteCount","notesOccupied","getNoteCount","applyTickMultiplier","Stroke","strokes","stroke_spacing","strokeList","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","all_voices","note_end","getModifierContext","arrow","arrow_shift_x","arrow_y","text_y","Type","Ornament","ornament","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","accid","stemDir","stemExtents","isPlacedOnNoteheadSide","totalSpacing","glyphYBetweenLines","glyphX","glyphY","getNextContext","Repetition","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","symbol_type","drawCodaFixed","drawSymbolText","drawSignoFixed","draw_coda","text_x","symbol_x","KeySignature","alterKeySpec","glyphFontScale","xPositions","paddingForced","nextAcc","accGlyphData","extraWidth","xPosition","glyphWidth","cancel_accList","different_types","naturals","cancelled","customLines","convertToCancelAccList","firstAccidentalType","convertToAlterAccList","convertAccLines","convertToGlyph","Volta","MID","BEGIN_END","volta","vert_height","TabStave","tab_options","VibratoBracket","bracket_data","stop","stop_x","ClefNote","clef_obj","abs_x","TimeSigNote","timeSignature","getTimeSig","GraceNote","SCALE","LEDGER_LINE_OFFSET","slash","Curve","NEAR_HEAD","NEAR_TOP","nearHead","nearTop","from","to","position_end","invert","cps","first_x","first_y","last_x","last_y","cp_spacing","metric","end_metric","renderCurve","TextDynamics","sequence","glyph_font_size","glyph_data","letter","letter_x","current_letter","drawArrowHead","x0","y0","drawArrowLine","point1","point2","both_arrows","draw_start_arrow","draw_end_arrow","distance","ratio","arrowhead_length","end_y","start_y","line_angle","arrowhead_angle","angle1","angle2","top_x","bottom_x","StaveLine","padding_left","padding_right","line_dash","rounded_end","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","setLineDash","setLineCap","applyLineStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","first_displaced","last_displaced","delta_x","vertical_position","applyFontStyle","PedalMarking","drawPedalGlyph","pedal","Styles","MIXED","setCustomText","TEXT","mixed","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","depress","is_pedal_depressed","prev_x","prev_y","next_is_same","prev_is_same","drawBracketed","drawText","TextBracket","Positions","dash","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","line_y","BarNote","barline","GhostNote","parameter","setDefaults","default_options","System","connector","spaceBetweenStaves","factory","debugFormatter","formatIterations","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics","Factory","face","renderQ","systems","staves","initRenderer","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","vJustify","hJustify","fontFamily","fontSize","fontWeight","setJustification","setVerticalJustification","fingering","stringNumber","secondaryBeamBreaks","breakSecondaryAt","curve","tie","setText","vibratoBracket","setLine","setHarsh","textBracket","system","StylesString","isRendered","EasyScore","Grammar","LINE","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","matches","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","maybe","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","unquote","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","token","Builder","commitHooks","elements","rollingDuration","resetPiece","commitHook","piece","chord","addNote","accids","addDotToAll","setId","setClass","commaSeparatedRegex","addClass","easyScoreHook","throwOnError","grammar","parser","addCommitHook","success","getElements","voiceOptions","Parser","flattenMatches","results","matchedString","errorPos","returnPos","noSpace","RegExp","workingLine","incrementPos","rule","allMatches","oneMatch","localPos","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","expectZeroOrMore","r","TabSlide","GraceTabNote","Tuning","KeyManager","StaveHairpin","Tremolo","Crescendo","BoundingBoxComputation","NaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","p3x","p3y","p0","p1","p2","p3","addX","addY","b2ac","t1","t2","CanvasContext","background_fillStyle","blur","cap_type","lineDash","parseFloat","startAngle","endAngle","antiClockwise","glow","RaphaelContext","Raphael","path","pen","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","setSize","viewBox","attr","normalizeAngle","tmp","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","toFixed","opacity","strokeWidth","txt","getBBox","remove","SVGContext","svgNS","svg","create","appendChild","parent","iePolyfill","svgElementType","createElementNS","cls","navigator","ie","test","userAgent","bold","italic","replace","fontAttributes","fontArray","applyAttributes","visibleWidth","visibleHeight","setViewBox","yMin","viewBoxString","setAttributeNS","propertyName","lastChild","removeChild","rectangle","textContent","ieMeasureTextFix","widthCorrection","box","StaveSection","StaveTempo","bpm","stem_height","StaveText","SLIDE_UP","SLIDE_DOWN","first_fret","last_fret","slide_direction","slide_y","tuningString","setTuning","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","setKey","keyParts","is_supported_type","scaleMapByValue","originalScaleMapByValue","scaleNote","modparts","valueNote","originalValueNote","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","CRESC","DECRESC","hairpin","dis","staff_height","l_shift","r_shift","renderHairpin","y_spacing","begin_x","half_height","reverse","decrescendo","extend_left","extend_right","decresc","next_context"],"mappings":"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","file":"build/vexflow-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 64);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b2705c49ef6a4f9d69fb","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n\n\n\n// WEBPACK FOOTER //\n// ./src/vex.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof(value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2 },\n  'T1': { code: 'v93', shift_right: 0.5 },\n  'T2': { code: 'v40', shift_right: 0.5 },\n  'T3': { code: 'v7d', shift_right: 0.5 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2 },\n  'X1': { code: 'v95', shift_right: -0.5 },\n  'X2': { code: 'v7f', shift_right: 0.5 },\n  'X3': { code: 'v3b', shift_right: -2 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof(integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va',  between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#':   { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##':  { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b':   { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb':  { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n':   { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{':   { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}':   { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db':  { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd':   { code: 'vab', parenRightPaddingAdjustment:  0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++':  { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+':   { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-':  { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs':  { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o':   { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k':   { code: 'vd1', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1] },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n   // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof(durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof(dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  const glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    return null;\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n         // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      gracenote_stem_up_extension: -12,\n      gracenote_stem_down_extension: -12,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      gracenote_stem_up_extension: -10,\n      gracenote_stem_down_extension: -10,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      gracenote_stem_up_extension: -8,\n      gracenote_stem_down_extension: -8,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n              // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n\n\n\n// WEBPACK FOOTER //\n// ./src/tables.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n        x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n    this.restoreStyle();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/glyph.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n\n\n\n// WEBPACK FOOTER //\n// ./src/element.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifier.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n          noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n           // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n         // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n        (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n    const yExtend = glyph.code_head === 'v95' || glyph.code_head === 'v3e' ? -4 : 0;\n\n    this.setStem(new Stem({\n      yExtend,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine  = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n       // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() && isInnerNoteIndex(this, index)) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  setStemStyle(style) {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n  getStemStyle() { return this.stem.getStyle(); }\n\n  setLedgerLineStyle(style) { this.ledgerLineStyle = style; }\n  getLedgerLineStyle() { return this.ledgerLineStyle; }\n\n  setFlagStyle(style) { this.flagStyle = style; }\n  getFlagStyle() { return this.flagStyle; }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n    let nonDisplacedX = null;\n    let displacedX = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine = false;\n    let lowestDisplacedLine = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop)  {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      stave, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    const width = glyph.getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y, normal, displaced) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = Object.assign({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      if (noteheadStyle) {\n        ctx.save();\n        notehead.applyStyle(ctx);\n      }\n      modifier.setContext(ctx);\n      modifier.draw();\n      if (noteheadStyle) {\n        ctx.restore();\n      }\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n          // Down stems have flags on the left\n          ? y_top - noteStemHeight + 2\n          // Up stems have flags on the eft.\n          : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle() || false);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || false);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavenote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof(this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n                                // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/note.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavemodifier.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n\n\n\n// WEBPACK FOOTER //\n// ./src/fraction.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stem.js","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingbox.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n       );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n      // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick];\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n            metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatter.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.totalTicks.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.draw();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/voice.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups       = [];\n    let currentGroup     = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup    = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n              !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n                            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes')  {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts =  this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount =  beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        flat_beam_offset,\n        flat_beams,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    let firstStemTipY = firstNote.getStemExtents().topY;\n\n    // If rendering flat beams, and an offset exists, set the y-coordinat`e to\n    //  the offset so the stems all end at the beam offset.\n    if (flat_beams && flat_beam_offset) {\n      firstStemTipY = flat_beam_offset;\n    }\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n            this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const next_note = this.notes[i + 1];\n      const beam_next = next_note && next_note.getIntrinsicTicks() < Flow.durationToTicks(duration);\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !beam_next && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n          if (!beam_next) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/beam.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetie.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (note.getCategory() === 'stavenotes') {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/articulation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.num_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.num_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.push(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.num_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.num_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuplet.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveconnector.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stemmablenote.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n//\r\n// This class implements dot modifiers for notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\nexport class Dot extends Modifier {\r\n  static get CATEGORY() { return 'dots'; }\r\n\r\n  // Arrange dots inside a ModifierContext.\r\n  static format(dots, state) {\r\n    const right_shift = state.right_shift;\r\n    const dot_spacing = 1;\r\n\r\n    if (!dots || dots.length === 0) return false;\r\n\r\n    const dot_list = [];\r\n    for (let i = 0; i < dots.length; ++i) {\r\n      const dot = dots[i];\r\n      const note = dot.getNote();\r\n\r\n      let props;\r\n      let shift;\r\n      // Only StaveNote has .getKeyProps()\r\n      if (typeof note.getKeyProps === 'function') {\r\n        props = note.getKeyProps()[dot.getIndex()];\r\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\r\n      } else { // Else it's a TabNote\r\n        props = { line: 0.5 }; // Shim key props for dot placement\r\n        shift = 0;\r\n      }\r\n\r\n      dot_list.push({ line: props.line, shift, note, dot });\r\n    }\r\n\r\n    // Sort dots by line number.\r\n    dot_list.sort((a, b) => b.line - a.line);\r\n\r\n    let dot_shift = right_shift;\r\n    let x_width = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    let prev_dotted_space = null;\r\n    let half_shiftY = 0;\r\n\r\n    for (let i = 0; i < dot_list.length; ++i) {\r\n      const { dot, note, shift, line } = dot_list[i];\r\n\r\n      // Reset the position of the dot every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        dot_shift = shift;\r\n      }\r\n\r\n      if (!note.isRest() && line !== last_line) {\r\n        if (Math.abs(line % 1) === 0.5) {\r\n          // note is on a space, so no dot shift\r\n          half_shiftY = 0;\r\n        } else if (!note.isRest()) {\r\n          // note is on a line, so shift dot to space above the line\r\n          half_shiftY = 0.5;\r\n          if (last_note != null &&\r\n              !last_note.isRest() && last_line - line === 0.5) {\r\n            // previous note on a space, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          } else if (line + half_shiftY === prev_dotted_space) {\r\n            // previous space is dotted, so shift dot to space below the line\r\n            half_shiftY = -0.5;\r\n          }\r\n        }\r\n      }\r\n\r\n      // convert half_shiftY to a multiplier for dots.draw()\r\n      dot.dot_shiftY = -half_shiftY;\r\n      prev_dotted_space = line + half_shiftY;\r\n\r\n      dot.setXShift(dot_shift);\r\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\r\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    // Update state.\r\n    state.right_shift += x_width;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.setAttribute('type', 'Dot');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.position = Modifier.Position.RIGHT;\r\n\r\n    this.radius = 2;\r\n    this.setWidth(5);\r\n    this.dot_shiftY = 0;\r\n  }\r\n\r\n  getCategory() { return Dot.CATEGORY; }\r\n\r\n  setNote(note) {\r\n    this.note = note;\r\n\r\n    if (this.note.getCategory() === 'gracenotes') {\r\n      this.radius *= 0.50;\r\n      this.setWidth(3);\r\n    }\r\n  }\r\n\r\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!this.note || this.index === null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\r\n    }\r\n\r\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n\r\n    // Set the starting y coordinate to the base of the stem for TabNotes\r\n    if (this.note.getCategory() === 'tabnotes') {\r\n      start.y = this.note.getStemExtents().baseY;\r\n    }\r\n\r\n    const x = (start.x + this.x_shift) + this.width - this.radius;\r\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\r\n    const ctx = this.context;\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.fill();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/dot.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      GraceNoteGroup,\n      NoteSubGroup,\n      Stroke,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifiercontext.js","// VexFlow - Music Engraving for HTML5\r\n// Copyright Mohit Muthanna 2010\r\n// Author Larry Kuhns 2013\r\n// Class to draws string numbers into the notation.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport class FretHandFinger extends Modifier {\r\n  static get CATEGORY() { return 'frethandfinger'; }\r\n\r\n  // Arrange fingerings inside a ModifierContext.\r\n  static format(nums, state) {\r\n    const { left_shift, right_shift } = state;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return false;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shiftLeft = 0;\r\n    let shiftRight = 0;\r\n\r\n    for (let i = 0; i < nums.length; ++i) {\r\n      const num = nums[i];\r\n      const note = num.getNote();\r\n      const pos = num.getPosition();\r\n      const props = note.getKeyProps()[num.getIndex()];\r\n      if (note !== prev_note) {\r\n        for (let n = 0; n < note.keys.length; ++n) {\r\n          const props_tmp = note.getKeyProps()[n];\r\n          if (left_shift === 0) {\r\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\r\n          }\r\n          if (right_shift === 0) {\r\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\r\n          }\r\n        }\r\n        prev_note = note;\r\n      }\r\n\r\n      nums_list.push({\r\n        note,\r\n        num,\r\n        pos,\r\n        line: props.line,\r\n        shiftL: shiftLeft,\r\n        shiftR: shiftRight,\r\n      });\r\n    }\r\n\r\n    // Sort fingernumbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    let numShiftL = 0;\r\n    let numShiftR = 0;\r\n    let xWidthL = 0;\r\n    let xWidthR = 0;\r\n    let lastLine = null;\r\n    let lastNote = null;\r\n\r\n    for (let i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== lastLine || note !== lastNote) {\r\n        numShiftL = left_shift + shiftL;\r\n        numShiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const numWidth = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift + numShiftL);\r\n        num_shift = left_shift + numWidth; // spacing\r\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(numShiftR);\r\n        num_shift = shiftRight + numWidth; // spacing\r\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\r\n      }\r\n      lastLine = line;\r\n      lastNote = note;\r\n    }\r\n\r\n    state.left_shift += xWidthL;\r\n    state.right_shift += xWidthR;\r\n\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'FretHandFinger');\r\n\r\n    this.note = null;\r\n    this.index = null;\r\n    this.finger = number;\r\n    this.width = 7;\r\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0;       // Horizontal offset from default\r\n    this.y_offset = 0;       // Vertical offset from default\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 9,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return FretHandFinger.CATEGORY; }\r\n  setFretHandFinger(number) { this.finger = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n\r\n    if (!this.note || this.index == null) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n\r\n    this.setRendered();\r\n    const ctx = this.context;\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = start.x + this.x_shift + this.x_offset;\r\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n        dot_x -= 4;\r\n        dot_y -= 12;\r\n        break;\r\n      case Modifier.Position.BELOW:\r\n        dot_x -= 2;\r\n        dot_y += 10;\r\n        break;\r\n      case Modifier.Position.LEFT:\r\n        dot_x -= this.width;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += 1;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    ctx.fillText('' + this.finger, dot_x, dot_y);\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/frethandfinger.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n        // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n      // Otherwise, if the group contains fewer than seven members, use the layouts from\n      // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n            // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/accidental.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', 'Invalid interval name: ${intervalString}');\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/music.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const alignSubNotesWithNote = (subNotes, note) => {\n      // Shift over the tick contexts of each note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX() - extraPx.left - extraPx.extraLeft +\n        this.getSpacingFromNextModifier();\n\n      subNotes.forEach(subNote => {\n        const tick_context = subNote.getTickContext();\n        const x_offset = tick_context.getX();\n        subNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    };\n\n    alignSubNotesWithNote(this.subNotes, note, this.width);\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).draw());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notesubgroup.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ?  group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n         // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes() {\n    if (this.grace_notes.length > 1) {\n      const beam = new Beam(this.grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beam = beam;\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    const that = this;\n    function alignGraceNotesWithNote(grace_notes, note) {\n      // Shift over the tick contexts of each note\n      // So that th aligned with the note\n      const tickContext = note.getTickContext();\n      const extraPx = tickContext.getExtraPx();\n      const x = tickContext.getX()\n        - extraPx.left\n        - extraPx.extraLeft\n        + that.getSpacingFromNextModifier();\n\n      grace_notes.forEach(graceNote => {\n        const tick_context = graceNote.getTickContext();\n        const x_offset = tick_context.getX();\n        graceNote.setStave(note.stave);\n        tick_context.setX(x + x_offset);\n      });\n    }\n\n    alignGraceNotesWithNote(this.grace_notes, note, this.width);\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    if (this.beam) {\n      this.beam.setContext(this.context).draw();\n    }\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenotegroup.js","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabtie.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `StringNumber` class which renders string\r\n// number annotations beside notes.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { Renderer } from './renderer';\r\nimport { StaveNote } from './stavenote';\r\n\r\nexport class StringNumber extends Modifier {\r\n  static get CATEGORY() { return 'stringnumber'; }\r\n\r\n  // ## Static Methods\r\n  // Arrange string numbers inside a `ModifierContext`\r\n  static format(nums, state) {\r\n    const left_shift = state.left_shift;\r\n    const right_shift = state.right_shift;\r\n    const num_spacing = 1;\r\n\r\n    if (!nums || nums.length === 0) return this;\r\n\r\n    const nums_list = [];\r\n    let prev_note = null;\r\n    let shift_left = 0;\r\n    let shift_right = 0;\r\n\r\n    let i;\r\n    let num;\r\n    let note;\r\n    let pos;\r\n    let props_tmp;\r\n    for (i = 0; i < nums.length; ++i) {\r\n      num = nums[i];\r\n      note = num.getNote();\r\n\r\n      for (i = 0; i < nums.length; ++i) {\r\n        num = nums[i];\r\n        note = num.getNote();\r\n        pos = num.getPosition();\r\n        const props = note.getKeyProps()[num.getIndex()];\r\n\r\n        if (note !== prev_note) {\r\n          for (let n = 0; n < note.keys.length; ++n) {\r\n            props_tmp = note.getKeyProps()[n];\r\n            if (left_shift === 0) {\r\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\r\n            }\r\n            if (right_shift === 0) {\r\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\r\n            }\r\n          }\r\n          prev_note = note;\r\n        }\r\n\r\n        nums_list.push({\r\n          pos,\r\n          note,\r\n          num,\r\n          line: props.line,\r\n          shiftL: shift_left,\r\n          shiftR: shift_right,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Sort string numbers by line number.\r\n    nums_list.sort((a, b) => b.line - a.line);\r\n\r\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\r\n    let num_shiftL = 0; // eslint-disable-line\r\n    let num_shiftR = 0;\r\n    let x_widthL = 0;\r\n    let x_widthR = 0;\r\n    let last_line = null;\r\n    let last_note = null;\r\n    for (i = 0; i < nums_list.length; ++i) {\r\n      let num_shift = 0;\r\n      note = nums_list[i].note;\r\n      pos = nums_list[i].pos;\r\n      num = nums_list[i].num;\r\n      const line = nums_list[i].line;\r\n      const shiftL = nums_list[i].shiftL;\r\n      const shiftR = nums_list[i].shiftR;\r\n\r\n      // Reset the position of the string number every line.\r\n      if (line !== last_line || note !== last_note) {\r\n        num_shiftL = left_shift + shiftL;\r\n        num_shiftR = right_shift + shiftR;\r\n      }\r\n\r\n      const num_width = num.getWidth() + num_spacing;\r\n      if (pos === Modifier.Position.LEFT) {\r\n        num.setXShift(left_shift);\r\n        num_shift = shift_left + num_width; // spacing\r\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\r\n      } else if (pos === Modifier.Position.RIGHT) {\r\n        num.setXShift(num_shiftR);\r\n        num_shift += num_width; // spacing\r\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\r\n      }\r\n      last_line = line;\r\n      last_note = note;\r\n    }\r\n\r\n    state.left_shift += x_widthL;\r\n    state.right_shift += x_widthR;\r\n    return true;\r\n  }\r\n\r\n  constructor(number) {\r\n    super();\r\n    this.setAttribute('type', 'StringNumber');\r\n\r\n    this.note = null;\r\n    this.last_note = null;\r\n    this.index = null;\r\n    this.string_number = number;\r\n    this.setWidth(20); // ???\r\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\r\n    this.x_shift = 0;\r\n    this.y_shift = 0;\r\n    this.x_offset = 0; // Horizontal offset from default\r\n    this.y_offset = 0; // Vertical offset from default\r\n    this.dashed = true; // true - draw dashed extension  false - no extension\r\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\r\n    this.radius = 8;\r\n    this.font = {\r\n      family: 'sans-serif',\r\n      size: 10,\r\n      weight: 'bold',\r\n    };\r\n  }\r\n  getCategory() { return StringNumber.CATEGORY; }\r\n  getNote() { return this.note; }\r\n  setNote(note) { this.note = note; return this; }\r\n  getIndex() { return this.index; }\r\n  setIndex(index) { this.index = index; return this; }\r\n\r\n  setLineEndType(leg) {\r\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\r\n      this.leg = leg;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setStringNumber(number) { this.string_number = number; return this; }\r\n  setOffsetX(x) { this.x_offset = x; return this; }\r\n  setOffsetY(y) { this.y_offset = y; return this; }\r\n  setLastNote(note) { this.last_note = note; return this; }\r\n  setDashed(dashed) { this.dashed = dashed; return this; }\r\n\r\n  draw() {\r\n    const ctx = this.checkContext();\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\r\n    }\r\n    this.setRendered();\r\n\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let dot_x = (start.x + this.x_shift + this.x_offset);\r\n    let dot_y = start.y + this.y_shift + this.y_offset;\r\n\r\n    switch (this.position) {\r\n      case Modifier.Position.ABOVE:\r\n      case Modifier.Position.BELOW: {\r\n        const stem_ext = this.note.getStemExtents();\r\n        let top = stem_ext.topY;\r\n        let bottom = stem_ext.baseY + 2;\r\n\r\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\r\n          top = stem_ext.baseY;\r\n          bottom = stem_ext.topY - 2;\r\n        }\r\n\r\n        if (this.position === Modifier.Position.ABOVE) {\r\n          dot_y = this.note.hasStem()\r\n            ? top - (line_space * 1.75)\r\n            : start.y - (line_space * 1.75);\r\n        } else {\r\n          dot_y = this.note.hasStem()\r\n            ? bottom + (line_space * 1.5)\r\n            : start.y + (line_space * 1.75);\r\n        }\r\n\r\n        dot_y += this.y_shift + this.y_offset;\r\n\r\n        break;\r\n      } case Modifier.Position.LEFT:\r\n        dot_x -= (this.radius / 2) + 5;\r\n        break;\r\n      case Modifier.Position.RIGHT:\r\n        dot_x += (this.radius / 2) + 6;\r\n        break;\r\n      default:\r\n        throw new Vex.RERR(\r\n          'InvalidPosition', `The position ${this.position} is invalid`\r\n        );\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\r\n    ctx.lineWidth = 1.5;\r\n    ctx.stroke();\r\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\r\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\r\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\r\n\r\n    if (this.last_note != null) {\r\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\r\n      ctx.strokeStyle = '#000000';\r\n      ctx.lineCap = 'round';\r\n      ctx.lineWidth = 0.6;\r\n      if (this.dashed) {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\r\n      } else {\r\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\r\n      }\r\n\r\n      let len;\r\n      let pattern;\r\n      switch (this.leg) {\r\n        case Renderer.LineEndType.UP:\r\n          len = -10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        case Renderer.LineEndType.DOWN:\r\n          len = 10;\r\n          pattern = this.dashed ? [3, 3] : [3, 0];\r\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/stringnumber.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof(just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof(just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n        this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */{\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/annotation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n        this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n          x + width, height,\n          x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bend.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibrato.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n       this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getStyle() {\n    return Object.assign({\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS,\n    }, this.style || {});\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n       (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    this.clef = clefSpec;\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n        begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      x -= modifier.getPadding(i);\n      if (i !== 0) {\n        x -= modifier.getWidth();\n      }\n\n      modifier.setX(x);\n\n      if (i === 0) {\n        x -= modifier.getWidth();\n      }\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof(line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavebarline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clef.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    assertIsValidFraction(timeSpec);\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.draw();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/registry.js","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"}\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fonts/vexflow_font.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/notehead.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tickable.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\r\n// Author: Larry Kuhns\r\n//\r\n// ## Description\r\n// This file implements the `Stroke` class which renders chord strokes\r\n// that can be arpeggiated, brushed, rasquedo, etc.\r\n\r\nimport { Vex } from './vex';\r\nimport { Modifier } from './modifier';\r\nimport { StaveNote } from './stavenote';\r\nimport { Glyph } from './glyph';\r\n\r\nexport class Stroke extends Modifier {\r\n  static get CATEGORY() { return 'strokes'; }\r\n  static get Type() {\r\n    return {\r\n      BRUSH_DOWN: 1,\r\n      BRUSH_UP: 2,\r\n      ROLL_DOWN: 3,        // Arpegiated chord\r\n      ROLL_UP: 4,          // Arpegiated chord\r\n      RASQUEDO_DOWN: 5,\r\n      RASQUEDO_UP: 6,\r\n    };\r\n  }\r\n\r\n  // Arrange strokes inside `ModifierContext`\r\n  static format(strokes, state) {\r\n    const left_shift = state.left_shift;\r\n    const stroke_spacing = 0;\r\n\r\n    if (!strokes || strokes.length === 0) return this;\r\n\r\n    const strokeList = strokes.map((stroke) => {\r\n      const note = stroke.getNote();\r\n      if (note instanceof StaveNote) {\r\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\r\n        const shift = displaced ? note.getExtraLeftPx() : 0;\r\n        return { line, shift, stroke };\r\n      } else {\r\n        const { str: string } = note.getPositions()[stroke.getIndex()];\r\n        return { line: string, shift: 0, stroke };\r\n      }\r\n    });\r\n\r\n    const strokeShift = left_shift;\r\n\r\n    // There can only be one stroke .. if more than one, they overlay each other\r\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\r\n      stroke.setXShift(strokeShift + shift);\r\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\r\n    }, 0);\r\n\r\n    state.left_shift += xShift;\r\n    return true;\r\n  }\r\n\r\n  constructor(type, options) {\r\n    super();\r\n    this.setAttribute('type', 'Stroke');\r\n\r\n    this.note = null;\r\n    this.options = Vex.Merge({}, options);\r\n\r\n    // multi voice - span stroke across all voices if true\r\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\r\n\r\n    // multi voice - end note of stroke, set in draw()\r\n    this.note_end = null;\r\n    this.index = null;\r\n    this.type = type;\r\n    this.position = Modifier.Position.LEFT;\r\n\r\n    this.render_options = {\r\n      font_scale: 38,\r\n      stroke_px: 3,\r\n      stroke_spacing: 10,\r\n    };\r\n\r\n    this.font = {\r\n      family: 'serif',\r\n      size: 10,\r\n      weight: 'bold italic',\r\n    };\r\n\r\n    this.setXShift(0);\r\n    this.setWidth(10);\r\n  }\r\n\r\n  getCategory() { return Stroke.CATEGORY; }\r\n  getPosition() { return this.position; }\r\n  addEndNote(note) { this.note_end = note; return this; }\r\n\r\n  draw() {\r\n    this.checkContext();\r\n    this.setRendered();\r\n\r\n    if (!(this.note && (this.index != null))) {\r\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\r\n    }\r\n\r\n    const start = this.note.getModifierStartXY(this.position, this.index);\r\n    let ys = this.note.getYs();\r\n    let topY = start.y;\r\n    let botY = start.y;\r\n    const x = start.x - 5;\r\n    const line_space = this.note.stave.options.spacing_between_lines_px;\r\n\r\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\r\n    for (let i = 0; i < notes.length; i++) {\r\n      ys = notes[i].getYs();\r\n      for (let n = 0; n < ys.length; n++) {\r\n        if (this.note === notes[i] || this.all_voices) {\r\n          topY = Vex.Min(topY, ys[n]);\r\n          botY = Vex.Max(botY, ys[n]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let arrow;\r\n    let arrow_shift_x;\r\n    let arrow_y;\r\n    let text_shift_x;\r\n    let text_y;\r\n    switch (this.type) {\r\n      case Stroke.Type.BRUSH_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        arrow_y = topY - (line_space / 2) + 10;\r\n        botY += (line_space / 2);\r\n        break;\r\n      case Stroke.Type.BRUSH_UP:\r\n        arrow = 'v11';\r\n        arrow_shift_x = 0.5;\r\n        arrow_y = botY + (line_space / 2);\r\n        topY -= (line_space / 2);\r\n        break;\r\n      case Stroke.Type.ROLL_DOWN:\r\n      case Stroke.Type.RASQUEDO_DOWN:\r\n        arrow = 'vc3';\r\n        arrow_shift_x = -3;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\r\n        if (this.note instanceof StaveNote) {\r\n          topY += 1.5 * line_space;\r\n          if ((botY - topY) % 2 !== 0) {\r\n            botY += 0.5 * line_space;\r\n          } else {\r\n            botY += line_space;\r\n          }\r\n          arrow_y = topY - line_space;\r\n          text_y = botY + line_space + 2;\r\n        } else {\r\n          topY += 1.5 * line_space;\r\n          botY += line_space;\r\n          arrow_y = topY - 0.75 * line_space;\r\n          text_y = botY + 0.25 * line_space;\r\n        }\r\n        break;\r\n      case Stroke.Type.ROLL_UP:\r\n      case Stroke.Type.RASQUEDO_UP:\r\n        arrow = 'v52';\r\n        arrow_shift_x = -4;\r\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\r\n        if (this.note instanceof StaveNote) {\r\n          arrow_y = line_space / 2;\r\n          topY += 0.5 * line_space;\r\n          if ((botY - topY) % 2 === 0) {\r\n            botY += line_space / 2;\r\n          }\r\n          arrow_y = botY + 0.5 * line_space;\r\n          text_y = topY - 1.25 * line_space;\r\n        } else {\r\n          topY += 0.25 * line_space;\r\n          botY += 0.5 * line_space;\r\n          arrow_y = botY + 0.25 * line_space;\r\n          text_y = topY - line_space;\r\n        }\r\n        break;\r\n      default:\r\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\r\n    }\r\n\r\n    // Draw the stroke\r\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\r\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\r\n    } else {\r\n      if (this.note instanceof StaveNote) {\r\n        for (let i = topY; i <= botY; i += line_space) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n      } else {\r\n        let i;\r\n        for (i = topY; i <= botY; i += 10) {\r\n          Glyph.renderGlyph(\r\n            this.context,\r\n            x + this.x_shift - 4,\r\n            i,\r\n            this.render_options.font_scale,\r\n            'va3'\r\n          );\r\n        }\r\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\r\n          text_y = i + 0.25 * line_space;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Draw the arrow head\r\n    Glyph.renderGlyph(\r\n      this.context,\r\n      x + this.x_shift + arrow_shift_x,\r\n      arrow_y,\r\n      this.render_options.font_scale,\r\n      arrow\r\n    );\r\n\r\n    // Draw the rasquedo \"R\"\r\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\r\n      this.context.save();\r\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\r\n      this.context.fillText('R', x + text_shift_x, text_y);\r\n      this.context.restore();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/strokes.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      glyphX += this.glyph.getMetrics().width;\n      const nextContext = TickContext.getNextContext(this.note.getTickContext());\n      if (nextContext) {\n        glyphX += (nextContext.getX() - glyphX) * 0.5;\n      } else {\n        glyphX += (stave.x + stave.width - glyphX) * 0.5;\n      }\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ornament.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n        // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n        // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staverepetition.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      this.convertAccLines(this.stave.clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keysignature.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n      // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavevolta.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabstave.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n      // If stop note is not set then vibrato will be drawn\n      // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vibratobracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clefnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timesignote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.gracenote_stem_up_extension\n        : glyph.gracenote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const ctx = this.context;\n    const stem_direction = this.getStemDirection();\n\n    if (this.slash) {\n      ctx.beginPath();\n\n      let x = this.getAbsoluteX();\n      let y = this.getYs()[0] - (this.stem.getHeight() / 2.8);\n      if (stem_direction === 1) {\n        x += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y - 9);\n      } else if (stem_direction === -1) {\n        x -= 4;\n        y += 1;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 13, y + 9);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracenote.js","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/curve.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textdynamics.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/staveline.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pedalmarking.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbracket.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\nimport { BoundingBox } from './boundingbox';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(0, 0, 0, 0);\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/barnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof(parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof(parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n          'Ghost note must have valid initialization data to identify ' +\n          'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.draw();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ghostnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: {},\n    });\n\n    if (!params.stave) {\n      const options = { left_bar: false };\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/system.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/easyscore.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\n\nexport default Vex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/boundingboxcomputation.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvascontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/raphaelcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof(navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n        // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n        // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n        // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    Object\n      .keys(attributes)\n      .forEach(propertyName =>\n        element.setAttributeNS(null, propertyName, attributes[propertyName]));\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2 + 'M' + this.pen.x + ' ' + this.pen.y;\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof(txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/svgcontext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n      //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavesection.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetempo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavetext.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tabslide.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gracetabnote.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tuning.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/keymanager.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stavehairpin.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n    this.shift_right = -2;\n    this.y_spacing = 4;\n\n    this.render_options = {\n      font_scale: 35,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'Arial',\n      size: 16,\n      weight: '',\n    };\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = start.y;\n\n    x += this.shift_right;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tremolo.js","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/crescendo.js"],"sourceRoot":""}